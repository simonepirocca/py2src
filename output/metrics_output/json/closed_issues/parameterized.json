{"total_count": 58, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/wolever/parameterized/issues/96", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/96/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/96/events", "html_url": "https://github.com/wolever/parameterized/issues/96", "id": 595342815, "node_id": "MDU6SXNzdWU1OTUzNDI4MTU=", "number": 96, "title": "parameterized_class custom suffix ?", "user": {"login": "stuaxo", "id": 179677, "node_id": "MDQ6VXNlcjE3OTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/179677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuaxo", "html_url": "https://github.com/stuaxo", "followers_url": "https://api.github.com/users/stuaxo/followers", "following_url": "https://api.github.com/users/stuaxo/following{/other_user}", "gists_url": "https://api.github.com/users/stuaxo/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuaxo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuaxo/subscriptions", "organizations_url": "https://api.github.com/users/stuaxo/orgs", "repos_url": "https://api.github.com/users/stuaxo/repos", "events_url": "https://api.github.com/users/stuaxo/events{/privacy}", "received_events_url": "https://api.github.com/users/stuaxo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-06T18:45:15Z", "updated_at": "2020-04-09T11:50:22Z", "closed_at": "2020-04-09T09:47:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n   How can I set a custom suffix for parameterized_class ?\r\n\r\nI tried looking at the code + docs to grok this, but don't get it.\r\n\r\nI've roughly got something like this:\r\n\r\n```python\r\naddons = [\"linkifier\", \"release_check\"]\r\n@parameterized_class([{\"addon_name\": addon_name for addon_name in addons}])\r\nclass AddonTester(TestCase):\r\n    addon_name\r\n\r\n    # tests...\r\n```\r\n\r\nI'd like the addon_name to make addon_name the class name suffix, but I always just end up with numbers.\r\n\r\nReading the other tickets it looks like it might be possible if I use string parameters, but I'm not sure how to do this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/95", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/95/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/95/events", "html_url": "https://github.com/wolever/parameterized/issues/95", "id": 589145052, "node_id": "MDU6SXNzdWU1ODkxNDUwNTI=", "number": 95, "title": "Passing expected failure marks through parameterized", "user": {"login": "videetparekh", "id": 11225312, "node_id": "MDQ6VXNlcjExMjI1MzEy", "avatar_url": "https://avatars0.githubusercontent.com/u/11225312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/videetparekh", "html_url": "https://github.com/videetparekh", "followers_url": "https://api.github.com/users/videetparekh/followers", "following_url": "https://api.github.com/users/videetparekh/following{/other_user}", "gists_url": "https://api.github.com/users/videetparekh/gists{/gist_id}", "starred_url": "https://api.github.com/users/videetparekh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/videetparekh/subscriptions", "organizations_url": "https://api.github.com/users/videetparekh/orgs", "repos_url": "https://api.github.com/users/videetparekh/repos", "events_url": "https://api.github.com/users/videetparekh/events{/privacy}", "received_events_url": "https://api.github.com/users/videetparekh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-27T13:46:34Z", "updated_at": "2020-04-12T21:34:38Z", "closed_at": "2020-04-12T21:31:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm attempting to dynamically create tests using a config file. \r\n```\r\ndef load_config_file(path):\r\n    with open(path) as f:\r\n        configs = json.load(f)\r\n    params=[]\r\n    for config in configs:\r\n        if not config.get('skip', False):\r\n            if config.get('xfail', False):\r\n                param = pytest.param(config, marks=pytest.mark.xfail)\r\n                # param = pytest.param(config, marks=unittest.expectedFailure)\r\n            else: \r\n                param = (config,)\r\n            params.append(param)\r\n    return params\r\n\r\n...\r\n\r\nclass UnitTestCase(unittest.TestCase):\r\n    @parameterized.expand(\"config\", load_config_file('tests/config.json'))\r\n    def test_main(self, config):         \r\n        print(\"Do some stuff with config {}\".format(config))\r\n```\r\n\r\nI get the error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"xxxxxxxxxxx\", line 30, in <module>\r\n    class UnitTestCase(unittest.TestCase):\r\n  File \"xxxxxxxxxx\", line 48, in UnitTestCase\r\n    @parameterized.expand(\"config\", load_config_file('tests/config.json'))\r\n  File \"/usr/local/lib/python3.6/dist-packages/parameterized/parameterized.py\", line 498, in parameterized_expand_wrapper\r\n    name = name_func(f, \"{num:0>{digits}}\".format(digits=digits, num=num), p)\r\nTypeError: 'list' object is not callable\r\n```\r\n\r\nIs there any way for me to mark a test case xfail using the config values and passing it to a parameterized function?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/92", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/92/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/92/events", "html_url": "https://github.com/wolever/parameterized/issues/92", "id": 571912481, "node_id": "MDU6SXNzdWU1NzE5MTI0ODE=", "number": 92, "title": "skip_on_empty not working on python 3", "user": {"login": "MorganFinTW", "id": 11889628, "node_id": "MDQ6VXNlcjExODg5NjI4", "avatar_url": "https://avatars0.githubusercontent.com/u/11889628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MorganFinTW", "html_url": "https://github.com/MorganFinTW", "followers_url": "https://api.github.com/users/MorganFinTW/followers", "following_url": "https://api.github.com/users/MorganFinTW/following{/other_user}", "gists_url": "https://api.github.com/users/MorganFinTW/gists{/gist_id}", "starred_url": "https://api.github.com/users/MorganFinTW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MorganFinTW/subscriptions", "organizations_url": "https://api.github.com/users/MorganFinTW/orgs", "repos_url": "https://api.github.com/users/MorganFinTW/repos", "events_url": "https://api.github.com/users/MorganFinTW/events{/privacy}", "received_events_url": "https://api.github.com/users/MorganFinTW/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T08:43:22Z", "updated_at": "2020-04-12T21:30:16Z", "closed_at": "2020-04-12T21:30:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "try skip_on_empty on python 3 test case on nosetest. got TypeError: <lambda>() takes 1 positional arguments but 1 was given.\r\n\r\n----------------------------------------------------------------------\r\nTypeError: <lambda>() takes 0 positional arguments but 1 was given", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/90", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/90/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/90/events", "html_url": "https://github.com/wolever/parameterized/issues/90", "id": 545459840, "node_id": "MDU6SXNzdWU1NDU0NTk4NDA=", "number": 90, "title": "Python 3.9 setup.py: open(\"README.rst\", \"U\") ValueError: invalid mode: 'U'", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-05T19:59:33Z", "updated_at": "2020-04-12T21:28:48Z", "closed_at": "2020-04-12T21:28:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error in Python 3.9.0a2:\r\n\r\n```\r\n$ python3 setup.py build\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/parameterized-0.7.0/setup.py\", line 11, in <module>\r\n    long_description = open(\"README.rst\", \"U\").read()\r\nValueError: invalid mode: 'U'\r\n```\r\n\r\n(That is 0.7.0, but the code is there on master as well.)\r\n\r\nThe U mode was removed in Python 3.9: https://bugs.python.org/issue37330", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/87", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/87/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/87/events", "html_url": "https://github.com/wolever/parameterized/issues/87", "id": 537597152, "node_id": "MDU6SXNzdWU1Mzc1OTcxNTI=", "number": 87, "title": "Meaningful class names for tests when using parameterized_class with dictionaries (suggestion)", "user": {"login": "erezsh", "id": 731464, "node_id": "MDQ6VXNlcjczMTQ2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/731464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erezsh", "html_url": "https://github.com/erezsh", "followers_url": "https://api.github.com/users/erezsh/followers", "following_url": "https://api.github.com/users/erezsh/following{/other_user}", "gists_url": "https://api.github.com/users/erezsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/erezsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erezsh/subscriptions", "organizations_url": "https://api.github.com/users/erezsh/orgs", "repos_url": "https://api.github.com/users/erezsh/repos", "events_url": "https://api.github.com/users/erezsh/events{/privacy}", "received_events_url": "https://api.github.com/users/erezsh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1686486785, "node_id": "MDU6TGFiZWwxNjg2NDg2Nzg1", "url": "https://api.github.com/repos/wolever/parameterized/labels/pr-wanted", "name": "pr-wanted", "color": "fbca04", "default": false, "description": "It would be great if someone wrote a PR for this!"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-13T15:02:46Z", "updated_at": "2020-05-15T19:42:47Z", "closed_at": "2020-04-14T18:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now to get meaningful names, I have to use the tuple syntax:\r\n\r\n```python\r\n@parameterized_class((\"name\", \"optimized\"), [\r\n    (\"Normal\", True),\r\n    (\"Unoptimized\", False)\r\n])\r\n```\r\nHowever, I would prefer to use the dict syntax, as it's more flexible and less error-prone for me. But, that would result in unnamed class variations, according to current implementation.\r\n\r\nI think you should just take the first key of every dictionary, as all dictionaries in Python3 are ordered (and there is a Python2 backport), and it matches how the function currently works.\r\n\r\nAlternatively, you can allow an optional argument that specifies what is the \"name\" key.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/85", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/85/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/85/events", "html_url": "https://github.com/wolever/parameterized/issues/85", "id": 530249884, "node_id": "MDU6SXNzdWU1MzAyNDk4ODQ=", "number": 85, "title": "Non-ASCII characters in README.rst", "user": {"login": "moubctez", "id": 12608048, "node_id": "MDQ6VXNlcjEyNjA4MDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12608048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moubctez", "html_url": "https://github.com/moubctez", "followers_url": "https://api.github.com/users/moubctez/followers", "following_url": "https://api.github.com/users/moubctez/following{/other_user}", "gists_url": "https://api.github.com/users/moubctez/gists{/gist_id}", "starred_url": "https://api.github.com/users/moubctez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moubctez/subscriptions", "organizations_url": "https://api.github.com/users/moubctez/orgs", "repos_url": "https://api.github.com/users/moubctez/repos", "events_url": "https://api.github.com/users/moubctez/events{/privacy}", "received_events_url": "https://api.github.com/users/moubctez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-29T09:45:49Z", "updated_at": "2020-04-13T09:02:46Z", "closed_at": "2020-04-12T21:19:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Building fails with Python 3.6 (`UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 6553: ordinal not in range(128)`) because there are non-ASCII characters in README.rst.\r\n\r\nThis patch fixes the problem\r\n```\r\n--- README.rst.orig\t2019-11-29 09:37:57.000000000 +0000\r\n+++ README.rst\r\n@@ -237,14 +237,14 @@ __ https://travis-ci.org/wolever/paramet\r\n      - no**\r\n      - no**\r\n    * - py.test fixtures\r\n-     - no\u2020\r\n-     - no\u2020\r\n-     - no\u2020\r\n-     - no\u2020\r\n-     - no\u2020\r\n-     - no\u2020\r\n-     - no\u2020\r\n-     - no\u2020\r\n+     - no\r\n+     - no\r\n+     - no\r\n+     - no\r\n+     - no\r\n+     - no\r\n+     - no\r\n+     - no\r\n    * - | unittest\r\n        | (``@parameterized.expand``)\r\n      - yes\r\n@@ -270,7 +270,7 @@ __ https://travis-ci.org/wolever/paramet\r\n \r\n \\*\\*: py.test 4 is not yet supported (but coming!) in `issue #34`__\r\n \r\n-\u2020: py.test fixture support is documented in `issue #81`__\r\n+: py.test fixture support is documented in `issue #81`__\r\n \r\n __ https://github.com/wolever/parameterized/issues/71\r\n __ https://github.com/wolever/parameterized/issues/34\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/84", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/84/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/84/events", "html_url": "https://github.com/wolever/parameterized/issues/84", "id": 529555473, "node_id": "MDU6SXNzdWU1Mjk1NTU0NzM=", "number": 84, "title": "0.7.1: test suite is failing", "user": {"login": "kloczek", "id": 31284574, "node_id": "MDQ6VXNlcjMxMjg0NTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/31284574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kloczek", "html_url": "https://github.com/kloczek", "followers_url": "https://api.github.com/users/kloczek/followers", "following_url": "https://api.github.com/users/kloczek/following{/other_user}", "gists_url": "https://api.github.com/users/kloczek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kloczek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kloczek/subscriptions", "organizations_url": "https://api.github.com/users/kloczek/orgs", "repos_url": "https://api.github.com/users/kloczek/repos", "events_url": "https://api.github.com/users/kloczek/events{/privacy}", "received_events_url": "https://api.github.com/users/kloczek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-27T20:19:08Z", "updated_at": "2020-04-12T22:47:31Z", "closed_at": "2020-04-12T21:51:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "<pre>Executing(%check): /bin/sh -e /var/tmp/rpm-tmp.Z6weJ6\r\n+ umask 022\r\n+ cd /home/tkloczko/rpmbuild/BUILD\r\n+ cd parameterized-0.7.1\r\n+ export PYTHONPATH=/home/tkloczko/rpmbuild/BUILDROOT/python-parameterized-0.7.1-2.fc32.x86_64/usr/lib/python3.8/site-packages\r\n+ PYTHONPATH=/home/tkloczko/rpmbuild/BUILDROOT/python-parameterized-0.7.1-2.fc32.x86_64/usr/lib/python3.8/site-packages\r\n+ nosetests-3.8 -v\r\nparameterized.test.TestOldStyleClass.test_old_style_classes_0_foo ... ok\r\nparameterized.test.TestOldStyleClass.test_old_style_classes_1_bar ... ok\r\ntest_on_TestCase2_custom_name_42 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase2_custom_name_foo0 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase2_custom_name_foo1 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase2_custom_name_foo2 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase_0 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase_1_foo0 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase_2_foo1 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase_3_foo2 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\nparameterized.test.TestParameterized.test_instance_method(42, {}) ... ok\r\nparameterized.test.TestParameterized.test_instance_method(&apos;foo0&apos;, {}) ... ok\r\nparameterized.test.TestParameterized.test_instance_method(&apos;foo1&apos;, {}) ... ok\r\nparameterized.test.TestParameterized.test_instance_method(&apos;foo2&apos;, {&apos;bar&apos;: 42}) ... ok\r\ntest_method (parameterized.test.TestParameterizedClassDict_0) ... ok\r\ntest_method (parameterized.test.TestParameterizedClassDict_1) ... ok\r\ntest_method_a (parameterized.test.TestParameterizedClass_0_foo) ... ok\r\ntest_method_b (parameterized.test.TestParameterizedClass_0_foo) ... ok\r\ntest_method_a (parameterized.test.TestParameterizedClass_1_bar) ... ok\r\ntest_method_b (parameterized.test.TestParameterizedClass_1_bar) ... ok\r\ntest_method_a (parameterized.test.TestParameterizedClass_2) ... ok\r\ntest_method_b (parameterized.test.TestParameterizedClass_2) ... ok\r\nstuff ... FAIL\r\nDocumentation [with foo=&apos;foo&apos;, bar=12] ... FAIL\r\n[with foo=&apos;foo&apos;] ... FAIL\r\nDocumentation [with foo=&apos;foo&apos;]. ... FAIL\r\nDocumentation [with foo=&apos;foo&apos;]. ... FAIL\r\nD\u00f6cumentation [with foo=&apos;foo&apos;]. ... FAIL\r\nDocumentation [with foo=&apos;foo&apos;, bar=12] ... FAIL\r\ntest_multiple_function_patch_decorator_0 (parameterized.test.TestParameterizedExpandWithMockPatchForClass) ... ok\r\ntest_multiple_function_patch_decorator_1_foo0 (parameterized.test.TestParameterizedExpandWithMockPatchForClass) ... ok\r\ntest_multiple_function_patch_decorator_2_foo1 (parameterized.test.TestParameterizedExpandWithMockPatchForClass) ... ok\r\ntest_one_function_patch_decorator_0 (parameterized.test.TestParameterizedExpandWithMockPatchForClass) ... ok\r\ntest_one_function_patch_decorator_1_foo0 (parameterized.test.TestParameterizedExpandWithMockPatchForClass) ... ok\r\ntest_one_function_patch_decorator_2_foo1 (parameterized.test.TestParameterizedExpandWithMockPatchForClass) ... ok\r\nparameterized.test.TestParameterizedExpandWithNoExpand.test_patch_class_no_expand(42, 51, {}) ... ok\r\ntest_multiple_function_patch_decorator_0 (parameterized.test.TestParameterizedExpandWithNoMockPatchForClass) ... ok\r\ntest_multiple_function_patch_decorator_1_foo0 (parameterized.test.TestParameterizedExpandWithNoMockPatchForClass) ... ok\r\ntest_multiple_function_patch_decorator_2_foo1 (parameterized.test.TestParameterizedExpandWithNoMockPatchForClass) ... ok\r\ntest_one_function_patch_decorator_0 (parameterized.test.TestParameterizedExpandWithNoMockPatchForClass) ... ok\r\ntest_one_function_patch_decorator_1_foo0 (parameterized.test.TestParameterizedExpandWithNoMockPatchForClass) ... ok\r\ntest_one_function_patch_decorator_2_foo1 (parameterized.test.TestParameterizedExpandWithNoMockPatchForClass) ... ok\r\nparameterized.test.TestParameterizedExpandWithNoMockPatchForClassNoExpand.test_patch_no_expand(42, 51, {}) ... ok\r\nparameterized.test.TestSetupTeardown.test_setup(1, {}) ... ok\r\nparameterized.test.TestSetupTeardown.test_setup(2, {}) ... ok\r\nparameterized.test.test_warns_when_using_parameterized_with_TestCase ... ok\r\nparameterized.test.test_helpful_error_on_invalid_parameters ... ok\r\nparameterized.test.test_helpful_error_on_empty_iterable_input ... ok\r\nparameterized.test.test_skip_test_on_empty_iterable ... ok\r\nparameterized.test.test_cases_over_10(0, 1, {}) ... ok\r\nparameterized.test.test_cases_over_10(1, 2, {}) ... ok\r\nparameterized.test.test_cases_over_10(2, 3, {}) ... ok\r\nparameterized.test.test_cases_over_10(3, 4, {}) ... ok\r\nparameterized.test.test_cases_over_10(4, 5, {}) ... ok\r\nparameterized.test.test_cases_over_10(5, 6, {}) ... ok\r\nparameterized.test.test_cases_over_10(6, 7, {}) ... ok\r\nparameterized.test.test_cases_over_10(7, 8, {}) ... ok\r\nparameterized.test.test_cases_over_10(8, 9, {}) ... ok\r\nparameterized.test.test_cases_over_10(9, 10, {}) ... ok\r\nparameterized.test.test_cases_over_10(10, 11, {}) ... ok\r\nparameterized.test.test_helpful_error_on_empty_iterable_input_expand ... ok\r\nparameterized.test.test_mock_patch_standalone_function(42, {}) ... ok\r\nparameterized.test.test_naked_function(42, {}) ... ok\r\nparameterized.test.test_naked_function(&apos;foo0&apos;, {}) ... ok\r\nparameterized.test.test_naked_function(&apos;foo1&apos;, {}) ... ok\r\nparameterized.test.test_naked_function(&apos;foo2&apos;, {&apos;bar&apos;: 42}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;&apos;, param(*(), **{}), [], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;*a, **kw&apos;, param(*(), **{}), [], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;*a, **kw&apos;, param(*(1,), **{&apos;foo&apos;: 42}), [(&apos;*a&apos;, (1,)), (&apos;**kw&apos;, {&apos;foo&apos;: 42})], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;foo&apos;, param(*(1,), **{}), [(&apos;foo&apos;, 1)], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;foo, *a&apos;, param(*(1,), **{}), [(&apos;foo&apos;, 1)], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;foo, *a&apos;, param(*(1, 9), **{}), [(&apos;foo&apos;, 1), (&apos;*a&apos;, (9,))], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;foo, *a, **kw&apos;, param(*(1,), **{&apos;bar&apos;: 9}), [(&apos;foo&apos;, 1), (&apos;**kw&apos;, {&apos;bar&apos;: 9})], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;x=9&apos;, param(*(), **{}), [(&apos;x&apos;, 9)], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;x=9&apos;, param(*(1,), **{}), [(&apos;x&apos;, 1)], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;x, y=9, *a, **kw&apos;, param(*(1,), **{}), [(&apos;x&apos;, 1), (&apos;y&apos;, 9)], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;x, y=9, *a, **kw&apos;, param(*(1, 2), **{}), [(&apos;x&apos;, 1), (&apos;y&apos;, 2)], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;x, y=9, *a, **kw&apos;, param(*(1, 2, 3), **{}), [(&apos;x&apos;, 1), (&apos;y&apos;, 2), (&apos;*a&apos;, (3,))], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;x, y=9, *a, **kw&apos;, param(*(1,), **{&apos;y&apos;: 2}), [(&apos;x&apos;, 1), (&apos;y&apos;, 2)], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;x, y=9, *a, **kw&apos;, param(*(1,), **{&apos;z&apos;: 2}), [(&apos;x&apos;, 1), (&apos;y&apos;, 9), (&apos;**kw&apos;, {&apos;z&apos;: 2})], {}) ... ok\r\nparameterized.test.test_parameterized_argument_value_pairs(&apos;x, y=9, *a, **kw&apos;, param(*(1, 2, 3), **{&apos;z&apos;: 3}), [(&apos;x&apos;, 1), (&apos;y&apos;, 2), (&apos;*a&apos;, (3,)), (&apos;**kw&apos;, {&apos;z&apos;: 3})], {}) ... ok\r\nparameterized.test.test_short_repr(&apos;abcd&apos;, &quot;&apos;abcd&apos;&quot;, {}) ... ok\r\nparameterized.test.test_short_repr(&apos;123456789&apos;, &quot;&apos;12...89&apos;&quot;, {}) ... ok\r\nparameterized.test.test_short_repr(123456789, &apos;123...789&apos;, {}) ... ok\r\nparameterized.test.test_short_repr(123456789, &apos;12...89&apos;, 4, {}) ... ok\r\nDocstring! [with input=&apos;foo&apos;] ... ok\r\nparameterized.test.test_wrapped_iterable_input(&apos;foo&apos;, {}) ... ok\r\nparameterized.test.test_helpful_error_on_non_iterable_input ... ok\r\nparameterized.test.test_old_style_classes ... SKIP: Py3 doesn&apos;t have old-style classes\r\n\r\n======================================================================\r\nFAIL: stuff\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/parameterized.py&quot;, line 518, in standalone_func\r\n    return func(*(a + p.args), **p.kwargs)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 265, in test_custom_doc_func\r\n    self._assert_docstring(&quot;stuff&quot;)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 255, in _assert_docstring\r\n    raise AssertionError(&quot;uh oh, unittest changed a local variable name&quot;)\r\nAssertionError: uh oh, unittest changed a local variable name\r\n\r\n======================================================================\r\nFAIL: Documentation [with foo=&apos;foo&apos;, bar=12]\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/parameterized.py&quot;, line 518, in standalone_func\r\n    return func(*(a + p.args), **p.kwargs)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 295, in test_default_values_get_correct_value\r\n    self._assert_docstring(&quot;Documentation [with foo=%r, bar=%r]&quot; %(foo, bar))\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 255, in _assert_docstring\r\n    raise AssertionError(&quot;uh oh, unittest changed a local variable name&quot;)\r\nAssertionError: uh oh, unittest changed a local variable name\r\n\r\n======================================================================\r\nFAIL: [with foo=&apos;foo&apos;]\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/parameterized.py&quot;, line 518, in standalone_func\r\n    return func(*(a + p.args), **p.kwargs)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 275, in test_empty_docstring\r\n    self._assert_docstring(&quot;[with foo=%r]&quot; %(foo, ))\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 255, in _assert_docstring\r\n    raise AssertionError(&quot;uh oh, unittest changed a local variable name&quot;)\r\nAssertionError: uh oh, unittest changed a local variable name\r\n\r\n======================================================================\r\nFAIL: Documentation [with foo=&apos;foo&apos;].\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/parameterized.py&quot;, line 518, in standalone_func\r\n    return func(*(a + p.args), **p.kwargs)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 282, in test_multiline_documentation\r\n    self._assert_docstring(\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 255, in _assert_docstring\r\n    raise AssertionError(&quot;uh oh, unittest changed a local variable name&quot;)\r\nAssertionError: uh oh, unittest changed a local variable name\r\n\r\n======================================================================\r\nFAIL: Documentation [with foo=&apos;foo&apos;].\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/parameterized.py&quot;, line 518, in standalone_func\r\n    return func(*(a + p.args), **p.kwargs)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 270, in test_single_line_docstring\r\n    self._assert_docstring(&quot;Documentation [with foo=%r].&quot; %(foo, ))\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 255, in _assert_docstring\r\n    raise AssertionError(&quot;uh oh, unittest changed a local variable name&quot;)\r\nAssertionError: uh oh, unittest changed a local variable name\r\n\r\n======================================================================\r\nFAIL: D\u00f6cumentation [with foo=&apos;foo&apos;].\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/parameterized.py&quot;, line 518, in standalone_func\r\n    return func(*(a + p.args), **p.kwargs)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 290, in test_unicode_docstring\r\n    self._assert_docstring(u&quot;D\u00f6cumentation [with foo=%r].&quot; %(foo, ))\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 255, in _assert_docstring\r\n    raise AssertionError(&quot;uh oh, unittest changed a local variable name&quot;)\r\nAssertionError: uh oh, unittest changed a local variable name\r\n\r\n======================================================================\r\nFAIL: Documentation [with foo=&apos;foo&apos;, bar=12]\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/parameterized.py&quot;, line 518, in standalone_func\r\n    return func(*(a + p.args), **p.kwargs)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 302, in test_with_leading_newline\r\n    self._assert_docstring(&quot;Documentation [with foo=%r, bar=%r]&quot; %(foo, bar), rstrip=True)\r\n  File &quot;/home/tkloczko/rpmbuild/BUILD/parameterized-0.7.1/parameterized/test.py&quot;, line 255, in _assert_docstring\r\n    raise AssertionError(&quot;uh oh, unittest changed a local variable name&quot;)\r\nAssertionError: uh oh, unittest changed a local variable name\r\n\r\n----------------------------------------------------------------------\r\nRan 89 tests in 0.141s\r\n\r\nFAILED (SKIP=1, failures=7)\r\nerror: Bad exit status from /var/tmp/rpm-tmp.Z6weJ6 (%check)\r\n</pre>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/79", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/79/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/79/events", "html_url": "https://github.com/wolever/parameterized/issues/79", "id": 496134455, "node_id": "MDU6SXNzdWU0OTYxMzQ0NTU=", "number": 79, "title": "Missing versions tags", "user": {"login": "kloczek", "id": 31284574, "node_id": "MDQ6VXNlcjMxMjg0NTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/31284574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kloczek", "html_url": "https://github.com/kloczek", "followers_url": "https://api.github.com/users/kloczek/followers", "following_url": "https://api.github.com/users/kloczek/following{/other_user}", "gists_url": "https://api.github.com/users/kloczek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kloczek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kloczek/subscriptions", "organizations_url": "https://api.github.com/users/kloczek/orgs", "repos_url": "https://api.github.com/users/kloczek/repos", "events_url": "https://api.github.com/users/kloczek/events{/privacy}", "received_events_url": "https://api.github.com/users/kloczek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-20T04:12:52Z", "updated_at": "2020-04-12T21:50:43Z", "closed_at": "2020-04-12T21:50:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like repository have not been tagged after release 0.6.0 and 0.7.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/78", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/78/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/78/events", "html_url": "https://github.com/wolever/parameterized/issues/78", "id": 495162741, "node_id": "MDU6SXNzdWU0OTUxNjI3NDE=", "number": 78, "title": "Passing self in parameterized.expand function", "user": {"login": "anshulthakur", "id": 3250225, "node_id": "MDQ6VXNlcjMyNTAyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3250225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anshulthakur", "html_url": "https://github.com/anshulthakur", "followers_url": "https://api.github.com/users/anshulthakur/followers", "following_url": "https://api.github.com/users/anshulthakur/following{/other_user}", "gists_url": "https://api.github.com/users/anshulthakur/gists{/gist_id}", "starred_url": "https://api.github.com/users/anshulthakur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anshulthakur/subscriptions", "organizations_url": "https://api.github.com/users/anshulthakur/orgs", "repos_url": "https://api.github.com/users/anshulthakur/repos", "events_url": "https://api.github.com/users/anshulthakur/events{/privacy}", "received_events_url": "https://api.github.com/users/anshulthakur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-18T11:20:21Z", "updated_at": "2020-04-12T21:50:36Z", "closed_at": "2020-04-12T21:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "How does one pass a callable function of the class to parameterized.expand decorator?\r\n\r\nConsider the following test case:\r\n\r\n```python\r\nclass BaseTest(unittest.TestCase):\r\n  files = []\r\n\r\n  def print_function(self, name):\r\n    print('<<< {name} >>>'.format(name=name))\r\n\r\n  def _get_config_sequence(self):\r\n    return(self.files)\r\n\r\n  @parameterized.expand(get_config_sequence)\r\n  def test(self, name, f, s):\r\n    self.print_function(name)\r\n    self.assertGreater(f,s)\r\n\r\nclass SomeTest(BaseTest):\r\n  files = [\r\n      ['greater_than', 4 ,3],\r\n      ['greater_than', 3 ,4],\r\n      ['greater_than', 3 ,3],\r\n      ['greater_than', 10 ,3]\r\n    ]\r\n```\r\n\r\nRunning this as `python3 -m unittest very_simple_tests.SomeTest` complains about not having a self instance passed to the called function.\r\n\r\n```bash\r\n  File \"/usr/local/lib/python3.6/dist-packages/parameterized/parameterized.py\", line 485, in parameterized_expand_wrapper\r\n    paramters = cls.input_as_callable(input)()\r\n  File \"/usr/local/lib/python3.6/dist-packages/parameterized/parameterized.py\", line 432, in <lambda>\r\n    return lambda: cls.check_input_values(input())\r\nTypeError: get_config_sequence() missing 1 required positional argument: 'self'\r\n```\r\nAm I doing something wrong with this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/76", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/76/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/76/events", "html_url": "https://github.com/wolever/parameterized/issues/76", "id": 463585424, "node_id": "MDU6SXNzdWU0NjM1ODU0MjQ=", "number": 76, "title": " 'NoneType' object is not callable, when unittest addTest with parameterized testcase", "user": {"login": "luciastar", "id": 18110402, "node_id": "MDQ6VXNlcjE4MTEwNDAy", "avatar_url": "https://avatars0.githubusercontent.com/u/18110402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luciastar", "html_url": "https://github.com/luciastar", "followers_url": "https://api.github.com/users/luciastar/followers", "following_url": "https://api.github.com/users/luciastar/following{/other_user}", "gists_url": "https://api.github.com/users/luciastar/gists{/gist_id}", "starred_url": "https://api.github.com/users/luciastar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luciastar/subscriptions", "organizations_url": "https://api.github.com/users/luciastar/orgs", "repos_url": "https://api.github.com/users/luciastar/repos", "events_url": "https://api.github.com/users/luciastar/events{/privacy}", "received_events_url": "https://api.github.com/users/luciastar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T07:16:37Z", "updated_at": "2020-04-12T21:50:10Z", "closed_at": "2020-04-12T21:50:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "python version: 3.6.5\r\nuse parameterized.expand in testcase func.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/73", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/73/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/73/events", "html_url": "https://github.com/wolever/parameterized/issues/73", "id": 427642263, "node_id": "MDU6SXNzdWU0Mjc2NDIyNjM=", "number": 73, "title": "`parameterize_class` and `super()`", "user": {"login": "couchemar", "id": 1573344, "node_id": "MDQ6VXNlcjE1NzMzNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1573344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/couchemar", "html_url": "https://github.com/couchemar", "followers_url": "https://api.github.com/users/couchemar/followers", "following_url": "https://api.github.com/users/couchemar/following{/other_user}", "gists_url": "https://api.github.com/users/couchemar/gists{/gist_id}", "starred_url": "https://api.github.com/users/couchemar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/couchemar/subscriptions", "organizations_url": "https://api.github.com/users/couchemar/orgs", "repos_url": "https://api.github.com/users/couchemar/repos", "events_url": "https://api.github.com/users/couchemar/events{/privacy}", "received_events_url": "https://api.github.com/users/couchemar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-01T11:02:45Z", "updated_at": "2019-11-19T22:04:47Z", "closed_at": "2019-11-19T22:04:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Decorated classes fails on `super()` calls, because after decoration class instance changes to  `None`.\r\nhttps://github.com/wolever/parameterized/blob/85222cfd5f93ba026a74a4726ae98d6f89fff502/parameterized/parameterized.py#L572 should returns `base_class`. \r\n\r\nFor example:\r\n\r\n```python\r\nimport unittest\r\n\r\n@parameterized.parameterized_class([\r\n    {'foo': 'bar'}\r\n])\r\nclass Test(unittest.TestCase):\r\n\r\n    def setUp(self):\r\n        super(Test, self).setUp()\r\n\r\n    def test(self):\r\n        assert False\r\n```\r\n\r\nFails with:\r\n```\r\n... in setUp\r\n    super(Test, self).setUp()\r\nTypeError: super() argument 1 must be type, not None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/71", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/71/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/71/events", "html_url": "https://github.com/wolever/parameterized/issues/71", "id": 421340062, "node_id": "MDU6SXNzdWU0MjEzNDAwNjI=", "number": 71, "title": "py.test 2 under Python 3 throws error", "user": {"login": "wolever", "id": 59575, "node_id": "MDQ6VXNlcjU5NTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/59575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolever", "html_url": "https://github.com/wolever", "followers_url": "https://api.github.com/users/wolever/followers", "following_url": "https://api.github.com/users/wolever/following{/other_user}", "gists_url": "https://api.github.com/users/wolever/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolever/subscriptions", "organizations_url": "https://api.github.com/users/wolever/orgs", "repos_url": "https://api.github.com/users/wolever/repos", "events_url": "https://api.github.com/users/wolever/events{/privacy}", "received_events_url": "https://api.github.com/users/wolever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-15T03:40:45Z", "updated_at": "2020-04-12T21:50:01Z", "closed_at": "2020-04-12T21:50:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\n$ tox -e py37-pytest2\r\nGLOB sdist-make: /Users/wolever/code/parameterized/setup.py\r\npy37-pytest2 inst-nodeps: /Users/wolever/code/parameterized/.tox/dist/parameterized-0.7.0.zip\r\npy37-pytest2 installed: mock==2.0.0,nose==1.3.7,parameterized==0.7.0,pbr==5.1.3,py==1.8.0,pytest==2.9.2,six==1.12.0\r\npy37-pytest2 run-test-pre: PYTHONHASHSEED='2473274294'\r\npy37-pytest2 runtests: commands[0] | py.test parameterized/test.py\r\n======================================================================== test session starts =========================================================================\r\nplatform darwin -- Python 3.7.2, pytest-2.9.2, py-1.8.0, pluggy-0.3.1\r\nrootdir: /Users/wolever/code/parameterized, inifile:\r\ncollected 0 items / 1 errors\r\n\r\n=============================================================================== ERRORS ===============================================================================\r\n_______________________________________________________________ ERROR collecting parameterized/test.py _______________________________________________________________\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/runner.py:150: in __init__\r\n    self.result = func()\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/main.py:435: in _memocollect\r\n    return self._memoizedcall('_collected', lambda: list(self.collect()))\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/main.py:315: in _memoizedcall\r\n    res = function()\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/main.py:435: in <lambda>\r\n    return self._memoizedcall('_collected', lambda: list(self.collect()))\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/python.py:605: in collect\r\n    return super(Module, self).collect()\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/python.py:459: in collect\r\n    res = self.makeitem(name, obj)\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/python.py:471: in makeitem\r\n    collector=self, name=name, obj=obj)\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/vendored_packages/pluggy.py:724: in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/vendored_packages/pluggy.py:338: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/vendored_packages/pluggy.py:333: in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/vendored_packages/pluggy.py:595: in execute\r\n    return _wrapped_call(hook_impl.function(*args), self.execute)\r\n.tox/py37-pytest2/lib/python3.7/site-packages/_pytest/vendored_packages/pluggy.py:249: in _wrapped_call\r\n    wrap_controller.send(call_outcome)\r\nE   RuntimeError: generator raised StopIteration\r\n====================================================================== 1 error in 0.41 seconds =======================================================================\r\nERROR: InvocationError for command '/Users/wolever/code/parameterized/.tox/py37-pytest2/bin/py.test parameterized/test.py' (exited with code 1)\r\n______________________________________________________________________________ summary _______________________________________________________________________________\r\nERROR:   py37-pytest2: commands failed\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/70", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/70/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/70/events", "html_url": "https://github.com/wolever/parameterized/issues/70", "id": 418227763, "node_id": "MDU6SXNzdWU0MTgyMjc3NjM=", "number": 70, "title": "Support marks?", "user": {"login": "EWouters", "id": 6179932, "node_id": "MDQ6VXNlcjYxNzk5MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6179932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EWouters", "html_url": "https://github.com/EWouters", "followers_url": "https://api.github.com/users/EWouters/followers", "following_url": "https://api.github.com/users/EWouters/following{/other_user}", "gists_url": "https://api.github.com/users/EWouters/gists{/gist_id}", "starred_url": "https://api.github.com/users/EWouters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EWouters/subscriptions", "organizations_url": "https://api.github.com/users/EWouters/orgs", "repos_url": "https://api.github.com/users/EWouters/repos", "events_url": "https://api.github.com/users/EWouters/events{/privacy}", "received_events_url": "https://api.github.com/users/EWouters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-07T10:12:18Z", "updated_at": "2020-03-27T13:44:18Z", "closed_at": "2019-03-11T12:36:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, is it possible to set marks to a parameterized test? Something like this:\r\n```\r\n@parameterized.expand([\r\n        (CHANNEL_A, POWER_CURRENT),\r\n        pytest.param(CHANNEL_B, POWER_CURRENT, marks=pytest.mark.xfail),\r\n        pytest.param(CHANNEL_A, POWER_VOLTAGE, marks=pytest.mark.xfail),\r\n        pytest.param(CHANNEL_B, POWER_VOLTAGE, marks=pytest.mark.xfail),\r\n        pytest.param(CHANNEL_A, POWER_RANGE, marks=pytest.mark.xfail),\r\n        pytest.param(CHANNEL_B, POWER_RANGE, marks=pytest.mark.xfail)])\r\n```\r\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/69", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/69/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/69/events", "html_url": "https://github.com/wolever/parameterized/issues/69", "id": 416697260, "node_id": "MDU6SXNzdWU0MTY2OTcyNjA=", "number": 69, "title": "Add equivalent of name_func for parameterized_class", "user": {"login": "jeremylanglois", "id": 13545067, "node_id": "MDQ6VXNlcjEzNTQ1MDY3", "avatar_url": "https://avatars3.githubusercontent.com/u/13545067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremylanglois", "html_url": "https://github.com/jeremylanglois", "followers_url": "https://api.github.com/users/jeremylanglois/followers", "following_url": "https://api.github.com/users/jeremylanglois/following{/other_user}", "gists_url": "https://api.github.com/users/jeremylanglois/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremylanglois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremylanglois/subscriptions", "organizations_url": "https://api.github.com/users/jeremylanglois/orgs", "repos_url": "https://api.github.com/users/jeremylanglois/repos", "events_url": "https://api.github.com/users/jeremylanglois/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremylanglois/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-04T09:03:50Z", "updated_at": "2020-04-12T21:45:02Z", "closed_at": "2020-04-12T21:45:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI would be convenient to add \"name_func\" argument to parameterized_class since the current behaviour is only adding suffix if parameters are of type string.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/67", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/67/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/67/events", "html_url": "https://github.com/wolever/parameterized/issues/67", "id": 406941758, "node_id": "MDU6SXNzdWU0MDY5NDE3NTg=", "number": 67, "title": "DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()", "user": {"login": "brettdh", "id": 91550, "node_id": "MDQ6VXNlcjkxNTUw", "avatar_url": "https://avatars3.githubusercontent.com/u/91550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettdh", "html_url": "https://github.com/brettdh", "followers_url": "https://api.github.com/users/brettdh/followers", "following_url": "https://api.github.com/users/brettdh/following{/other_user}", "gists_url": "https://api.github.com/users/brettdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettdh/subscriptions", "organizations_url": "https://api.github.com/users/brettdh/orgs", "repos_url": "https://api.github.com/users/brettdh/repos", "events_url": "https://api.github.com/users/brettdh/events{/privacy}", "received_events_url": "https://api.github.com/users/brettdh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-05T19:36:41Z", "updated_at": "2019-02-06T03:20:50Z", "closed_at": "2019-02-06T03:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "See title. Encountered in parameterized 0.6.1, but `inspect.getargspec()` is [still used](https://github.com/wolever/parameterized/blob/4cd3b99b99604a1a01836dd0466a54b1ca977114/parameterized/parameterized.py#L176) as of 4cd3b99b99604a1a01836dd0466a54b1ca977114.\r\n\r\nFull warning message:\r\n\r\n```\r\n/path/to/virtualenv/lib/python3.6/site-packages/parameterized/parameterized.py:136: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n  argspec = inspect.getargspec(func)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/64", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/64/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/64/events", "html_url": "https://github.com/wolever/parameterized/issues/64", "id": 399267090, "node_id": "MDU6SXNzdWUzOTkyNjcwOTA=", "number": 64, "title": "\"from parameterized import parameterized_class\" fails", "user": {"login": "TobyLL", "id": 8977234, "node_id": "MDQ6VXNlcjg5NzcyMzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8977234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobyLL", "html_url": "https://github.com/TobyLL", "followers_url": "https://api.github.com/users/TobyLL/followers", "following_url": "https://api.github.com/users/TobyLL/following{/other_user}", "gists_url": "https://api.github.com/users/TobyLL/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobyLL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobyLL/subscriptions", "organizations_url": "https://api.github.com/users/TobyLL/orgs", "repos_url": "https://api.github.com/users/TobyLL/repos", "events_url": "https://api.github.com/users/TobyLL/events{/privacy}", "received_events_url": "https://api.github.com/users/TobyLL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-15T09:56:18Z", "updated_at": "2019-02-06T03:41:53Z", "closed_at": "2019-02-06T03:41:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "After downloading and installing the latest version of parameterized on 2019-01-14, I tried to use the `@paramaterized_class` decorator in Python 2.7 as per the example given in the documentation.  However, the following error was thrown:\r\n`ImportError: cannot import name parameterized_class`\r\n\r\nI believe that adding parameterized_class to `parameterized/__init__.py` as follows fixes the issue:\r\n`from .parameterized import parameterized, param, parameterized_class`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/63", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/63/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/63/events", "html_url": "https://github.com/wolever/parameterized/issues/63", "id": 399264491, "node_id": "MDU6SXNzdWUzOTkyNjQ0OTE=", "number": 63, "title": "Version numbers in CHANGELOG.txt and setup.py are inconsistent", "user": {"login": "TobyLL", "id": 8977234, "node_id": "MDQ6VXNlcjg5NzcyMzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8977234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobyLL", "html_url": "https://github.com/TobyLL", "followers_url": "https://api.github.com/users/TobyLL/followers", "following_url": "https://api.github.com/users/TobyLL/following{/other_user}", "gists_url": "https://api.github.com/users/TobyLL/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobyLL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobyLL/subscriptions", "organizations_url": "https://api.github.com/users/TobyLL/orgs", "repos_url": "https://api.github.com/users/TobyLL/repos", "events_url": "https://api.github.com/users/TobyLL/events{/privacy}", "received_events_url": "https://api.github.com/users/TobyLL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-15T09:50:06Z", "updated_at": "2019-02-06T03:44:06Z", "closed_at": "2019-02-06T03:44:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "CHANGELOG.txt refers to version 0.7.0 dated 2018-12-30, and does not mention version 0.6.3.\r\n\r\nsetup.py lists the current version as 0.6.3, and was committed on 2018-11-17", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/62", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/62/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/62/events", "html_url": "https://github.com/wolever/parameterized/issues/62", "id": 399019408, "node_id": "MDU6SXNzdWUzOTkwMTk0MDg=", "number": 62, "title": "LICENSE.txt states exception but there appears to be none?", "user": {"login": "joachimmetz", "id": 3888750, "node_id": "MDQ6VXNlcjM4ODg3NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3888750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joachimmetz", "html_url": "https://github.com/joachimmetz", "followers_url": "https://api.github.com/users/joachimmetz/followers", "following_url": "https://api.github.com/users/joachimmetz/following{/other_user}", "gists_url": "https://api.github.com/users/joachimmetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/joachimmetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joachimmetz/subscriptions", "organizations_url": "https://api.github.com/users/joachimmetz/orgs", "repos_url": "https://api.github.com/users/joachimmetz/repos", "events_url": "https://api.github.com/users/joachimmetz/events{/privacy}", "received_events_url": "https://api.github.com/users/joachimmetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-14T18:35:10Z", "updated_at": "2019-02-06T03:41:59Z", "closed_at": "2019-02-06T03:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "From: https://github.com/wolever/parameterized/blob/master/LICENSE.txt\r\n`tl;dr: all code code is licensed under simplified BSD, unless stated otherwise.`\r\n\r\nQuickly searching the code I see no exception to the license. Is my assessment correct?\r\n\r\nIf so, please consider removing this exception clause, seeing (for me at least) it add confusion\r\n\r\nIf there are exceptions, please state their path in the LICENSE.txt file\r\n\r\nthanks in advance\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/61", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/61/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/61/events", "html_url": "https://github.com/wolever/parameterized/issues/61", "id": 398823836, "node_id": "MDU6SXNzdWUzOTg4MjM4MzY=", "number": 61, "title": "Latest version not on PyPI", "user": {"login": "TobyLL", "id": 8977234, "node_id": "MDQ6VXNlcjg5NzcyMzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8977234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobyLL", "html_url": "https://github.com/TobyLL", "followers_url": "https://api.github.com/users/TobyLL/followers", "following_url": "https://api.github.com/users/TobyLL/following{/other_user}", "gists_url": "https://api.github.com/users/TobyLL/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobyLL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobyLL/subscriptions", "organizations_url": "https://api.github.com/users/TobyLL/orgs", "repos_url": "https://api.github.com/users/TobyLL/repos", "events_url": "https://api.github.com/users/TobyLL/events{/privacy}", "received_events_url": "https://api.github.com/users/TobyLL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-14T10:20:36Z", "updated_at": "2019-02-06T03:44:15Z", "closed_at": "2019-02-06T03:44:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest version of parameterized is currently 0.7.0, but PyPI only has version 0.6.1, which is 2 versions ago.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/60", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/60/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/60/events", "html_url": "https://github.com/wolever/parameterized/issues/60", "id": 397250311, "node_id": "MDU6SXNzdWUzOTcyNTAzMTE=", "number": 60, "title": "Fixture are not meant to be called directly", "user": {"login": "Overdrivr", "id": 1294805, "node_id": "MDQ6VXNlcjEyOTQ4MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1294805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Overdrivr", "html_url": "https://github.com/Overdrivr", "followers_url": "https://api.github.com/users/Overdrivr/followers", "following_url": "https://api.github.com/users/Overdrivr/following{/other_user}", "gists_url": "https://api.github.com/users/Overdrivr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Overdrivr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Overdrivr/subscriptions", "organizations_url": "https://api.github.com/users/Overdrivr/orgs", "repos_url": "https://api.github.com/users/Overdrivr/repos", "events_url": "https://api.github.com/users/Overdrivr/events{/privacy}", "received_events_url": "https://api.github.com/users/Overdrivr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-09T07:52:47Z", "updated_at": "2019-11-19T20:14:52Z", "closed_at": "2019-11-19T20:14:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "With pytest 4.1.0, it is no longer possible to pass a fixture to a parameterized test:\r\n\r\n```\r\nimport pytest\r\nfrom parameterized import parameterized\r\n\r\n@pytest.fixture\r\ndef gen_test():\r\n    return [('foo',), ('bar',)]\r\n\r\n@parameterized(gen_test)\r\ndef test_(arg):\r\n    print(arg)\r\n```\r\n\r\n```\r\nFixture \"gen_test\" called directly. Fixtures are not meant to be called directly,\r\nbut are created automatically when test functions request them as parameters.\r\nSee https://docs.pytest.org/en/latest/fixture.html for more information about fixtures, and\r\nhttps://docs.pytest.org/en/latest/deprecations.html#calling-fixtures-directly about how to update your code.\r\n```\r\n\r\nIs there any workaround ? Ideally I would like to avoid passing a regular function (unless for some reason it's bad behavior) because my fixture is dependent on another fixture", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/59", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/59/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/59/events", "html_url": "https://github.com/wolever/parameterized/issues/59", "id": 364014207, "node_id": "MDU6SXNzdWUzNjQwMTQyMDc=", "number": 59, "title": "Exception raised when test method has docstring", "user": {"login": "dillon9693", "id": 5503742, "node_id": "MDQ6VXNlcjU1MDM3NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5503742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dillon9693", "html_url": "https://github.com/dillon9693", "followers_url": "https://api.github.com/users/dillon9693/followers", "following_url": "https://api.github.com/users/dillon9693/following{/other_user}", "gists_url": "https://api.github.com/users/dillon9693/gists{/gist_id}", "starred_url": "https://api.github.com/users/dillon9693/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dillon9693/subscriptions", "organizations_url": "https://api.github.com/users/dillon9693/orgs", "repos_url": "https://api.github.com/users/dillon9693/repos", "events_url": "https://api.github.com/users/dillon9693/events{/privacy}", "received_events_url": "https://api.github.com/users/dillon9693/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-26T12:55:32Z", "updated_at": "2019-02-17T16:59:26Z", "closed_at": "2019-02-17T16:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python version: 3.6\r\nParameterized version: 0.6.1\r\n\r\nWhen writing tests using `unittest.TestCase`, test methods decorate with `@parameterized.expand([...])` are unable to run when the method has a docstring. Here is an example code snippet:\r\n\r\n```python\r\nclass StrTest(TestCase):\r\n    @parameterized.expand([(1, \"1\"), (2, \"2\")])\r\n    def test_str_test(self, num: int, num_str: str) -> None:\r\n        \"\"\"Test that str() converts number to a string.\"\"\"\r\n        self.assertEqual(str(num), num_str)\r\n```\r\n\r\nAnd the associated traceback when trying to run the tests:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"project/test_str.py\", line 24, in <module>\r\n    class StrTest(TestCase):\r\n  File \"project/test_str.py\", line 26, in StrTest\r\n    def test_str_test(self, num: int, num_str: str) -> None:\r\n  File \"C:\\Users\\User\\.virtualenvs\\project-qf-AIYGt\\lib\\site-packages\\parameterized\\parameterized.py\", line 383, in parameterized_expand_wrapper\r\n    frame_locals[name].__doc__ = doc_func(f, num, p)\r\n  File \"C:\\Users\\User\\.virtualenvs\\project-qf-AIYGt\\lib\\site-packages\\parameterized\\parameterized.py\", line 189, in default_doc_func\r\n    all_args_with_values = parameterized_argument_value_pairs(func, p)\r\n  File \"C:\\Users\\User\\.virtualenvs\\project-qf-AIYGt\\lib\\site-packages\\parameterized\\parameterized.py\", line 136, in parameterized_argument_value_pairs\r\n    argspec = inspect.getargspec(func)\r\n  File \"C:\\Python36\\Lib\\inspect.py\", line 1045, in getargspec\r\n    raise ValueError(\"Function has keyword-only parameters or annotations\"\r\nValueError: Function has keyword-only parameters or annotations, use getfullargspec() API which can support them\r\n```\r\n\r\nI've attempted to remove the typehints on the arguments in the `test_str_test` function, as the exception suggests that it may be because of annotations, but no luck there.\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/58", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/58/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/58/events", "html_url": "https://github.com/wolever/parameterized/issues/58", "id": 344326191, "node_id": "MDU6SXNzdWUzNDQzMjYxOTE=", "number": 58, "title": "Version 0.6.2 not in PyPI ?", "user": {"login": "roni-frantchi", "id": 3658029, "node_id": "MDQ6VXNlcjM2NTgwMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3658029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roni-frantchi", "html_url": "https://github.com/roni-frantchi", "followers_url": "https://api.github.com/users/roni-frantchi/followers", "following_url": "https://api.github.com/users/roni-frantchi/following{/other_user}", "gists_url": "https://api.github.com/users/roni-frantchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/roni-frantchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roni-frantchi/subscriptions", "organizations_url": "https://api.github.com/users/roni-frantchi/orgs", "repos_url": "https://api.github.com/users/roni-frantchi/repos", "events_url": "https://api.github.com/users/roni-frantchi/events{/privacy}", "received_events_url": "https://api.github.com/users/roni-frantchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-25T07:33:06Z", "updated_at": "2019-02-06T03:46:03Z", "closed_at": "2019-02-06T03:46:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at https://github.com/wolever/parameterized/blob/master/CHANGELOG.txt#L1\r\nYou'd think 0.6.2 was released in 2018-03-11.\r\n\r\nBut looking at https://pypi.org/project/parameterized/#history or running `pip search` lists 0.6.1 as the latest, and there's no way to get 0.6.2 ...\r\n\r\n```\r\n$ pip search parameterized --index https://pypi.python.org/pypi\r\n...\r\n\r\nparameterized (0.6.1)                                           - Parameterized testing with any Python test\r\n                                                                  framework\r\n  INSTALLED: 0.6.1 (latest)\r\n\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/57", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/57/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/57/events", "html_url": "https://github.com/wolever/parameterized/issues/57", "id": 329416756, "node_id": "MDU6SXNzdWUzMjk0MTY3NTY=", "number": 57, "title": "Setting skip_on_empty=True isn't workingon Python3", "user": {"login": "gaf3", "id": 118250, "node_id": "MDQ6VXNlcjExODI1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/118250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaf3", "html_url": "https://github.com/gaf3", "followers_url": "https://api.github.com/users/gaf3/followers", "following_url": "https://api.github.com/users/gaf3/following{/other_user}", "gists_url": "https://api.github.com/users/gaf3/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaf3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaf3/subscriptions", "organizations_url": "https://api.github.com/users/gaf3/orgs", "repos_url": "https://api.github.com/users/gaf3/repos", "events_url": "https://api.github.com/users/gaf3/events{/privacy}", "received_events_url": "https://api.github.com/users/gaf3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1686486785, "node_id": "MDU6TGFiZWwxNjg2NDg2Nzg1", "url": "https://api.github.com/repos/wolever/parameterized/labels/pr-wanted", "name": "pr-wanted", "color": "fbca04", "default": false, "description": "It would be great if someone wrote a PR for this!"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-05T11:37:18Z", "updated_at": "2020-04-14T18:48:19Z", "closed_at": "2020-04-14T18:48:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an empty list returned in some cases (only checks files that have changed). When I used the skip_on_empty settings, I got this output:\r\n\r\n```\r\nTypeError: <lambda>() takes 0 positional arguments but 1 was given\r\n```\r\n\r\nI change line 479 in parameterized.py from\r\n\r\n```python\r\nreturn wraps(f)(lambda: skip_on_empty_helper())\r\n```\r\nto\r\n```python\r\nreturn wraps(f)(skip_on_empty_helper)\r\n```\r\n\r\nAnd got the output I wanted\r\n\r\n```\r\ntest_namespaced (test_namespace.TestNamespace) ... skipped 'parameterized input is empty'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/56", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/56/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/56/events", "html_url": "https://github.com/wolever/parameterized/issues/56", "id": 314994757, "node_id": "MDU6SXNzdWUzMTQ5OTQ3NTc=", "number": 56, "title": "Supplying tuple/list as single test argument?", "user": {"login": "Poddster", "id": 3941642, "node_id": "MDQ6VXNlcjM5NDE2NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3941642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Poddster", "html_url": "https://github.com/Poddster", "followers_url": "https://api.github.com/users/Poddster/followers", "following_url": "https://api.github.com/users/Poddster/following{/other_user}", "gists_url": "https://api.github.com/users/Poddster/gists{/gist_id}", "starred_url": "https://api.github.com/users/Poddster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Poddster/subscriptions", "organizations_url": "https://api.github.com/users/Poddster/orgs", "repos_url": "https://api.github.com/users/Poddster/repos", "events_url": "https://api.github.com/users/Poddster/events{/privacy}", "received_events_url": "https://api.github.com/users/Poddster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T10:15:34Z", "updated_at": "2019-02-06T03:54:38Z", "closed_at": "2019-02-06T03:54:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nThis doesn't work:\r\n\r\n    @parameterized([\r\n        [1, 1, 1, 1, 1],\r\n        [1, 2, 2],\r\n        [2, 3,],\r\n        [5],\r\n    ])\r\n    def test_list(self, data):\r\n        assert sum(data) == 5\r\n\r\nAs it results in these errors:\r\n\r\n    ======================================================================\r\n    ERROR: <snip>.test_list(2, 3)\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"c:\\dev\\env\\python\\python27\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n      File \"c:\\dev\\env\\python\\python27\\lib\\site-packages\\parameterized\\parameterized.py\", line 280, in <lambda>\r\n        nose_func = wraps(func)(lambda *args: func(*args))\r\n    TypeError: test_list() takes exactly 2 arguments (3 given)\r\n    \r\n    ======================================================================\r\n    ERROR: <snip>.test_list(5,)\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"c:\\dev\\env\\python\\python27\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n      File \"c:\\dev\\env\\python\\python27\\lib\\site-packages\\parameterized\\parameterized.py\", line 280, in <lambda>\r\n        nose_func = wraps(func)(lambda *args: func(*args))\r\n      File \"C:\\dev\\work\\MPI-Test\\pyMPI-Test\\pem\\tests\\test_pem_robot.py\", line 574, in test_list\r\n        assert sum(data) == 5\r\n    TypeError: 'int' object is not iterable\r\n\r\nThe lists have to be wrapped in useless lists for it to work:\r\n\r\n    @parameterized([\r\n        [[1, 1, 1, 1, 1]],\r\n        [[1, 2, 2]],\r\n        [[2, 3,]],\r\n        [[5]],\r\n    ])\r\n    def test_list(self, data):\r\n        assert sum(data) == 5\r\n\r\n\r\nWhat is the \"official\" way of supplying iterables as test data with `@parameterized`? Would it be possible to note the proper idiom in the \"Exhaustive Usage Examples\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/55", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/55/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/55/events", "html_url": "https://github.com/wolever/parameterized/issues/55", "id": 312213115, "node_id": "MDU6SXNzdWUzMTIyMTMxMTU=", "number": 55, "title": "TypeError: type object argument after * must be a sequence, not float", "user": {"login": "asutkarpeeyush", "id": 9845471, "node_id": "MDQ6VXNlcjk4NDU0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9845471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asutkarpeeyush", "html_url": "https://github.com/asutkarpeeyush", "followers_url": "https://api.github.com/users/asutkarpeeyush/followers", "following_url": "https://api.github.com/users/asutkarpeeyush/following{/other_user}", "gists_url": "https://api.github.com/users/asutkarpeeyush/gists{/gist_id}", "starred_url": "https://api.github.com/users/asutkarpeeyush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asutkarpeeyush/subscriptions", "organizations_url": "https://api.github.com/users/asutkarpeeyush/orgs", "repos_url": "https://api.github.com/users/asutkarpeeyush/repos", "events_url": "https://api.github.com/users/asutkarpeeyush/events{/privacy}", "received_events_url": "https://api.github.com/users/asutkarpeeyush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-07T14:48:00Z", "updated_at": "2020-07-23T00:13:42Z", "closed_at": "2020-04-12T21:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "@wolever \r\n**When did I get this error?**\r\n- While using something like this - \r\n```python\r\n@parameterized.expand([123.0])\r\n    def test_xyz(self, id: float) -> None:\r\n```\r\n**What is the cause?**\r\n- args of float type aren't changed to tuple in this function\r\n```python \r\n @classmethod\r\n    def from_decorator(cls, args):\r\n        \"\"\" Returns an instance of ``param()`` for ``@parameterized`` argument\r\n            ``args``::\r\n\r\n                >>> param.from_decorator((42, ))\r\n                param(args=(42, ), kwargs={})\r\n                >>> param.from_decorator(\"foo\")\r\n                param(args=(\"foo\", ), kwargs={})\r\n            \"\"\"\r\n        if isinstance(args, param):\r\n            return args\r\n        if isinstance(args, string_types):\r\n            args = (args, )\r\n        return cls(*args)\r\n```\r\n**What is the work around I used?**\r\n- passed a tuple\r\n```python\r\n@parameterized.expand([(123.0,)])\r\n    def test_xyz(self, id: float) -> None:\r\n```\r\n**What could be the possible permananent fix?**\r\n- It would be too soon for me to comment on this but is there a reason floats aren't converted to tuple in ```from_decorator()```? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/54", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/54/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/54/events", "html_url": "https://github.com/wolever/parameterized/issues/54", "id": 310433700, "node_id": "MDU6SXNzdWUzMTA0MzM3MDA=", "number": 54, "title": "how to use param iterator\uff1f", "user": {"login": "tt33025515", "id": 17425896, "node_id": "MDQ6VXNlcjE3NDI1ODk2", "avatar_url": "https://avatars3.githubusercontent.com/u/17425896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tt33025515", "html_url": "https://github.com/tt33025515", "followers_url": "https://api.github.com/users/tt33025515/followers", "following_url": "https://api.github.com/users/tt33025515/following{/other_user}", "gists_url": "https://api.github.com/users/tt33025515/gists{/gist_id}", "starred_url": "https://api.github.com/users/tt33025515/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tt33025515/subscriptions", "organizations_url": "https://api.github.com/users/tt33025515/orgs", "repos_url": "https://api.github.com/users/tt33025515/repos", "events_url": "https://api.github.com/users/tt33025515/events{/privacy}", "received_events_url": "https://api.github.com/users/tt33025515/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-02T08:58:20Z", "updated_at": "2018-04-08T20:53:32Z", "closed_at": "2018-04-08T20:53:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/52", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/52/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/52/events", "html_url": "https://github.com/wolever/parameterized/issues/52", "id": 302302625, "node_id": "MDU6SXNzdWUzMDIzMDI2MjU=", "number": 52, "title": "prameterized.expand make mock.patch class decorator evaluated against same function multiple times", "user": {"login": "ukinau", "id": 1475951, "node_id": "MDQ6VXNlcjE0NzU5NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ukinau", "html_url": "https://github.com/ukinau", "followers_url": "https://api.github.com/users/ukinau/followers", "following_url": "https://api.github.com/users/ukinau/following{/other_user}", "gists_url": "https://api.github.com/users/ukinau/gists{/gist_id}", "starred_url": "https://api.github.com/users/ukinau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ukinau/subscriptions", "organizations_url": "https://api.github.com/users/ukinau/orgs", "repos_url": "https://api.github.com/users/ukinau/repos", "events_url": "https://api.github.com/users/ukinau/events{/privacy}", "received_events_url": "https://api.github.com/users/ukinau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-05T13:37:40Z", "updated_at": "2018-03-11T20:04:43Z", "closed_at": "2018-03-11T20:04:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If we use parameterized.expand with mock.patch class decorator,  mock.patch decorator is evaluated against same function object multiple times and messed up arguments.\r\n\r\nSuppose I have a following code\r\n\r\n```\r\nimport os\r\nfrom mock import patch\r\nfrom parameterized import parameterized\r\n\r\n@patch(\"os.listdir\")\r\nclass Test():\r\n    @parameterized.expand([[1,2], [3,4], [5,6]])\r\n    @patch(\"sys.path\")\r\n    def test1(self, t1, t2, mock_syspath, mock_listdir):\r\n        pass\r\n```\r\n\r\nI expected above test code to be succeeded, but  actually above code raise following error\r\n\r\n```\r\n    @wraps(func)\r\n    def patched(*args, **keywargs):\r\n        extra_args = []\r\n        entered_patchers = []\r\n\r\n        exc_info = tuple()\r\n        try:\r\n            for patching in patched.patchings:\r\n                arg = patching.__enter__()\r\n                entered_patchers.append(patching)\r\n                if patching.attribute_name is not None:\r\n                    keywargs.update(arg)\r\n                elif patching.new is DEFAULT:\r\n                    extra_args.append(arg)\r\n\r\n            args += tuple(extra_args)\r\n>           return func(*args, **keywargs)\r\nE           TypeError: test1() takes exactly 5 arguments (7 given)\r\n```\r\n\r\nThe root cause of failure is that mock.patch class decorator add mock.patch function decorator for each methods in class and the function be created by parameterised.expand decorator is also decorated but obviously function object to be wrapped by standalone_func  is same among each function created, thus mock.patch function decorator unintentionally executed against same function object and add argument for the times of the number of parameterised argument. \r\nThat's why the number of argument miss match exception raised in above test code.\r\n\r\nmock module is often used in test and python 3 add it under unittest module  so I think it's better to support above case. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/47", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/47/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/47/events", "html_url": "https://github.com/wolever/parameterized/issues/47", "id": 270218021, "node_id": "MDU6SXNzdWUyNzAyMTgwMjE=", "number": 47, "title": "How to apply @parameterized.expand on Class?", "user": {"login": "legshort", "id": 4326608, "node_id": "MDQ6VXNlcjQzMjY2MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4326608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/legshort", "html_url": "https://github.com/legshort", "followers_url": "https://api.github.com/users/legshort/followers", "following_url": "https://api.github.com/users/legshort/following{/other_user}", "gists_url": "https://api.github.com/users/legshort/gists{/gist_id}", "starred_url": "https://api.github.com/users/legshort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/legshort/subscriptions", "organizations_url": "https://api.github.com/users/legshort/orgs", "repos_url": "https://api.github.com/users/legshort/repos", "events_url": "https://api.github.com/users/legshort/events{/privacy}", "received_events_url": "https://api.github.com/users/legshort/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-11-01T07:18:28Z", "updated_at": "2020-04-12T21:39:28Z", "closed_at": "2020-04-12T21:39:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to apply `@parameterized.expand` on Class so that every test method runs with the common parameter.\r\n\r\nI was making decorator for wrapping the `expand` decorator but got stuck where to apply decorator manually.\r\n\r\nWhat I was trying to do is that overring the method with the `expand`.\r\n```python\r\nsetattr(cls, method_name, parameterized.expand(method)\r\n```\r\nHowever, `parameterized.expand` is `@classmethod` which does not take a function as the argument.\r\nHas anyone any idea?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/46", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/46/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/46/events", "html_url": "https://github.com/wolever/parameterized/issues/46", "id": 267998812, "node_id": "MDU6SXNzdWUyNjc5OTg4MTI=", "number": 46, "title": "Maintain GitHub tags", "user": {"login": "Skeen", "id": 225151, "node_id": "MDQ6VXNlcjIyNTE1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/225151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skeen", "html_url": "https://github.com/Skeen", "followers_url": "https://api.github.com/users/Skeen/followers", "following_url": "https://api.github.com/users/Skeen/following{/other_user}", "gists_url": "https://api.github.com/users/Skeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skeen/subscriptions", "organizations_url": "https://api.github.com/users/Skeen/orgs", "repos_url": "https://api.github.com/users/Skeen/repos", "events_url": "https://api.github.com/users/Skeen/events{/privacy}", "received_events_url": "https://api.github.com/users/Skeen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-24T11:41:24Z", "updated_at": "2020-04-12T21:39:15Z", "closed_at": "2020-04-12T21:39:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIt appears that the GitHub tags for releases stopped Nov 6, 2014, while releases on the pip package manager continued.\r\n\r\nPyPi announches the latest release as 0.6.1 of 2017-03-21, where's GitHub's most recent release is 0.3.5 of 2014-11-06.\r\n\r\nIs there a specific reason why GitHub releases has been dropped from the release cycle? - Is it too much work to include again?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/45", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/45/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/45/events", "html_url": "https://github.com/wolever/parameterized/issues/45", "id": 267140304, "node_id": "MDU6SXNzdWUyNjcxNDAzMDQ=", "number": 45, "title": "Licensing issues", "user": {"login": "Skeen", "id": 225151, "node_id": "MDQ6VXNlcjIyNTE1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/225151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skeen", "html_url": "https://github.com/Skeen", "followers_url": "https://api.github.com/users/Skeen/followers", "following_url": "https://api.github.com/users/Skeen/following{/other_user}", "gists_url": "https://api.github.com/users/Skeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skeen/subscriptions", "organizations_url": "https://api.github.com/users/Skeen/orgs", "repos_url": "https://api.github.com/users/Skeen/repos", "events_url": "https://api.github.com/users/Skeen/events{/privacy}", "received_events_url": "https://api.github.com/users/Skeen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-20T11:02:52Z", "updated_at": "2020-04-12T21:38:01Z", "closed_at": "2020-04-12T21:38:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nAccording to the METADATA information on the package;\r\n\r\n    cat site-packages/nose_parameterized-0.5.0.dist-info/METADATA\r\n\r\n    Metadata-Version: 2.0\r\n    Name: nose-parameterized\r\n    Version: 0.5.0\r\n    License: UNKNOWN\r\n\r\nRather then UNKNOWN, perhaps it should say `Simplified BSD`.\r\n\r\nAlso the BSD License provided is a little messy with the 'tl;dr;' statement, which causes Github not to pick it up.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/44", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/44/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/44/events", "html_url": "https://github.com/wolever/parameterized/issues/44", "id": 254204241, "node_id": "MDU6SXNzdWUyNTQyMDQyNDE=", "number": 44, "title": "Tests throw a unicode error with Python 2.7", "user": {"login": "ghisvail", "id": 1964655, "node_id": "MDQ6VXNlcjE5NjQ2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1964655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghisvail", "html_url": "https://github.com/ghisvail", "followers_url": "https://api.github.com/users/ghisvail/followers", "following_url": "https://api.github.com/users/ghisvail/following{/other_user}", "gists_url": "https://api.github.com/users/ghisvail/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghisvail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghisvail/subscriptions", "organizations_url": "https://api.github.com/users/ghisvail/orgs", "repos_url": "https://api.github.com/users/ghisvail/repos", "events_url": "https://api.github.com/users/ghisvail/events{/privacy}", "received_events_url": "https://api.github.com/users/ghisvail/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T03:59:59Z", "updated_at": "2020-04-12T21:37:14Z", "closed_at": "2020-04-12T21:37:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have packaged `parameterized` for Debian, since it is a required dependency for testing other packages. Its test suite runs fine at package build time, but it fails against the installed package for Python 2. The tests run fine for Python 3. Here is the relevant portion of the Debian CI [log](https://ci.debian.net/data/autopkgtest/unstable/amd64/p/python-parameterized/20170830_143838/log.gz):\r\n\r\n```\r\ntest command1: set -e ; for py in $(pyversions -r 2>/dev/null) ; do cd \"$AUTOPKGTEST_TMP\" ; echo \"Testing with $py (unittest):\" ; $py -m unittest -v parameterized.test ; echo \"Testing with $py (nose):\" ; $py -m nose -v parameterized.test ; echo \"Testing with $py (nose2):\" ; $py -m nose2 -v parameterized.test ; echo \"Testing with $py (pytest):\" ; $py -m pytest -v --pyargs parameterized.test ; done\r\nautopkgtest [14:39:04]: test command1: [-----------------------\r\nTesting with python2.7 (unittest):\r\ntest_on_TestCase2_custom_name_42 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase2_custom_name_foo0 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase2_custom_name_foo1 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase2_custom_name_foo2 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase_0 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase_1_foo0 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase_2_foo1 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_on_TestCase_3_foo2 (parameterized.test.TestParamerizedOnTestCase) ... ok\r\ntest_custom_doc_func_0_foo (parameterized.test.TestParameterizedExpandDocstring)\r\nstuff ... ok\r\ntest_default_values_get_correct_value_0_foo (parameterized.test.TestParameterizedExpandDocstring)\r\nDocumentation [with foo='foo', bar=12] ... ok\r\ntest_empty_docstring_0_foo (parameterized.test.TestParameterizedExpandDocstring)\r\n[with foo='foo'] ... ok\r\ntest_multiline_documentation_0_foo (parameterized.test.TestParameterizedExpandDocstring)\r\nDocumentation [with foo='foo']. ... ok\r\ntest_single_line_docstring_0_foo (parameterized.test.TestParameterizedExpandDocstring)\r\nDocumentation [with foo='foo']. ... ok\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/usr/lib/python2.7/unittest/__main__.py\", line 12, in <module>\r\n    main(module=None)\r\n  File \"/usr/lib/python2.7/unittest/main.py\", line 95, in __init__\r\n    self.runTests()\r\n  File \"/usr/lib/python2.7/unittest/main.py\", line 232, in runTests\r\n    self.result = testRunner.run(self.test)\r\n  File \"/usr/lib/python2.7/unittest/runner.py\", line 151, in run\r\n    test(result)\r\n  File \"/usr/lib/python2.7/unittest/suite.py\", line 70, in __call__\r\n    return self.run(*args, **kwds)\r\n  File \"/usr/lib/python2.7/unittest/suite.py\", line 108, in run\r\n    test(result)\r\n  File \"/usr/lib/python2.7/unittest/suite.py\", line 70, in __call__\r\n    return self.run(*args, **kwds)\r\n  File \"/usr/lib/python2.7/unittest/suite.py\", line 108, in run\r\n    test(result)\r\n  File \"/usr/lib/python2.7/unittest/suite.py\", line 70, in __call__\r\n    return self.run(*args, **kwds)\r\n  File \"/usr/lib/python2.7/unittest/suite.py\", line 108, in run\r\n    test(result)\r\n  File \"/usr/lib/python2.7/unittest/case.py\", line 393, in __call__\r\n    return self.run(*args, **kwds)\r\n  File \"/usr/lib/python2.7/unittest/case.py\", line 304, in run\r\n    result.startTest(self)\r\n  File \"/usr/lib/python2.7/unittest/runner.py\", line 53, in startTest\r\n    self.stream.write(self.getDescription(test))\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xf6' in position 84: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/42", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/42/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/42/events", "html_url": "https://github.com/wolever/parameterized/issues/42", "id": 236719326, "node_id": "MDU6SXNzdWUyMzY3MTkzMjY=", "number": 42, "title": "Have any way to not change the case name ? ", "user": {"login": "iyaozhen", "id": 4395553, "node_id": "MDQ6VXNlcjQzOTU1NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4395553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iyaozhen", "html_url": "https://github.com/iyaozhen", "followers_url": "https://api.github.com/users/iyaozhen/followers", "following_url": "https://api.github.com/users/iyaozhen/following{/other_user}", "gists_url": "https://api.github.com/users/iyaozhen/gists{/gist_id}", "starred_url": "https://api.github.com/users/iyaozhen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iyaozhen/subscriptions", "organizations_url": "https://api.github.com/users/iyaozhen/orgs", "repos_url": "https://api.github.com/users/iyaozhen/repos", "events_url": "https://api.github.com/users/iyaozhen/events{/privacy}", "received_events_url": "https://api.github.com/users/iyaozhen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-18T12:51:20Z", "updated_at": "2020-04-12T21:36:32Z", "closed_at": "2020-04-12T21:36:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I usually run one case in this way:\r\n```SHELL\r\n$ nosetests test_math.py:TestMathUnitTest.test_floor -v\r\nFailure: ValueError (No such test TestMathUnitTest.test_floor) ... ERROR\r\n\r\n======================================================================\r\nERROR: Failure: ValueError (No such test TestMathUnitTest.test_floor)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/site-packages/nose/failure.py\", line 42, in runTest\r\n    raise self.exc_class(self.exc_val)\r\nValueError: No such test TestMathUnitTest.test_floor\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.001s\r\n```\r\n`--collect-only`:\r\n```SHELL\r\n$ nosetests test_math.py -v --collect-only\r\ntest_floor_0_negative (test_math.TestMathUnitTest) ... ok\r\ntest_floor_1_integer (test_math.TestMathUnitTest) ... ok\r\ntest_floor_2_large_fraction (test_math.TestMathUnitTest) ... ok\r\ntest_math.test_pow(2, 2, 4) ... ok\r\ntest_math.test_pow(2, 3, 8) ... ok\r\ntest_math.test_pow(1, 9, 1) ... ok\r\ntest_math.test_pow(0, 9, 0) ... ok\r\n```\r\nI must be run `nosetests test_math.py:TestMathUnitTest.test_floor_0_negative  -v`, It is bad for me and other system(like IDE).\r\nAnd have a bigger problem, other plugins like `nosedep` depend case name.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/41", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/41/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/41/events", "html_url": "https://github.com/wolever/parameterized/issues/41", "id": 224569890, "node_id": "MDU6SXNzdWUyMjQ1Njk4OTA=", "number": 41, "title": "Question", "user": {"login": "nicola-lunghi", "id": 25422924, "node_id": "MDQ6VXNlcjI1NDIyOTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/25422924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicola-lunghi", "html_url": "https://github.com/nicola-lunghi", "followers_url": "https://api.github.com/users/nicola-lunghi/followers", "following_url": "https://api.github.com/users/nicola-lunghi/following{/other_user}", "gists_url": "https://api.github.com/users/nicola-lunghi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicola-lunghi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicola-lunghi/subscriptions", "organizations_url": "https://api.github.com/users/nicola-lunghi/orgs", "repos_url": "https://api.github.com/users/nicola-lunghi/repos", "events_url": "https://api.github.com/users/nicola-lunghi/events{/privacy}", "received_events_url": "https://api.github.com/users/nicola-lunghi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-26T19:09:24Z", "updated_at": "2020-04-12T21:34:44Z", "closed_at": "2020-04-12T21:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nI love your module very much!\r\nCan you please put an example of a setup/teardown function?\r\nI have a test that should be repeated for each couple of an array of tuple (pin1, pin2)\r\nI need a setup/teardown metod that accept the tuple and initialize/deinitialize the variables\r\nis possible to have it??\r\n\r\n```\r\npin_pairs = (\r\n    (3, 5), (7, 13), (8, 10), (11, 36),\r\n    (12, 16), (15, 23), (18, 22), (19, 21),\r\n    (24, 26), (27, 29), (28, 32), (31, 33),\r\n    (35, 37), (38, 40)\r\n)\r\n\r\ntest_list = [(\"_\".join((str(i), str(p))), i, p)\r\n              for i, p in pin_pairs] + \\\r\n             [(\"_\".join((str(p), str(i))), p, i)\r\n              for i, p in pin_pairs]\r\n\r\nclass TestPins(unittest.TestCase):\r\n    def Setup(self, in_pin, out_pin):\r\n         # setup pins\r\n         self.input_pin = in_pin\r\n         self.output_pin = out_pin\r\n\r\n    def TearDown(self, in_pin, out_pin):\r\n         # teardown pin\r\n         self.input_pin = None\r\n         self.output_pin = None\r\n\r\n    @parameterized.expand(test_list)\r\n    def testIsNotEqual(self, name, in_pin_no, out_pin_no):\r\n        # how to check the setup, teardown??\r\n        self.assertNotEqual(self.in_pin, self.out_pin)\r\n\r\nunittest.main()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/40", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/40/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/40/events", "html_url": "https://github.com/wolever/parameterized/issues/40", "id": 216941451, "node_id": "MDU6SXNzdWUyMTY5NDE0NTE=", "number": 40, "title": "nose: instance variables set by setup test fixture don't exist in parameterized tests", "user": {"login": "katzenbaer", "id": 1815591, "node_id": "MDQ6VXNlcjE4MTU1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1815591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katzenbaer", "html_url": "https://github.com/katzenbaer", "followers_url": "https://api.github.com/users/katzenbaer/followers", "following_url": "https://api.github.com/users/katzenbaer/following{/other_user}", "gists_url": "https://api.github.com/users/katzenbaer/gists{/gist_id}", "starred_url": "https://api.github.com/users/katzenbaer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katzenbaer/subscriptions", "organizations_url": "https://api.github.com/users/katzenbaer/orgs", "repos_url": "https://api.github.com/users/katzenbaer/repos", "events_url": "https://api.github.com/users/katzenbaer/events{/privacy}", "received_events_url": "https://api.github.com/users/katzenbaer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-25T02:00:59Z", "updated_at": "2020-04-12T21:33:56Z", "closed_at": "2020-04-12T21:33:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Something changed in 0.6.0/0.6.1 that is breaking this:\r\n```python\r\nfrom mock import MagicMock\r\nfrom nose.tools import assert_true\r\nfrom nose_parameterized import parameterized\r\n\r\nclass TestFoo(object):\r\n    def setup(self):\r\n        self.foo = MagicMock()\r\n\r\n    def test_foo(self):\r\n        assert_true(hasattr(self, 'foo'))  # passes\r\n\r\n    @parameterized([\r\n        ('bar',)\r\n    ])\r\n    def test_bar(self, bar_arg):\r\n        assert_true(hasattr(self, 'foo')) # fails in 0.6.0, passes in 0.5.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/39", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/39/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/39/events", "html_url": "https://github.com/wolever/parameterized/issues/39", "id": 213646289, "node_id": "MDU6SXNzdWUyMTM2NDYyODk=", "number": 39, "title": "Problems to install from pypi under python X.Y (due to misspelling package name)", "user": {"login": "vlcinsky", "id": 635911, "node_id": "MDQ6VXNlcjYzNTkxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/635911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlcinsky", "html_url": "https://github.com/vlcinsky", "followers_url": "https://api.github.com/users/vlcinsky/followers", "following_url": "https://api.github.com/users/vlcinsky/following{/other_user}", "gists_url": "https://api.github.com/users/vlcinsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlcinsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlcinsky/subscriptions", "organizations_url": "https://api.github.com/users/vlcinsky/orgs", "repos_url": "https://api.github.com/users/vlcinsky/repos", "events_url": "https://api.github.com/users/vlcinsky/events{/privacy}", "received_events_url": "https://api.github.com/users/vlcinsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-12T23:48:27Z", "updated_at": "2017-03-14T00:42:38Z", "closed_at": "2017-03-13T22:16:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "In clear virtualenv with python 2.7.12 I had problems to install the package.\r\n\r\nFilling this issue it turned out, I misspelled the module name omitting one \"e\":\r\n\r\n```bash\r\n(py27)$ pip install nose-parametrized\r\nCollecting nose-parametrized\r\n  Could not find a version that satisfies the requirement nose-parametrized (from versions: )\r\nNo matching distribution found for nose-parametrized\r\n```\r\n\r\nUsing correct name works:\r\n```bash\r\n(py27)$ pip install nose-parameterized\r\nCollecting nose-parameterized\r\n  Using cached nose_parameterized-0.5.0-py2.py3-none-any.whl\r\nInstalling collected packages: nose-parameterized\r\nSuccessfully installed nose-parameterized-0.5.0\r\n```\r\n\r\nIt might confuse other people too.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/38", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/38/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/38/events", "html_url": "https://github.com/wolever/parameterized/issues/38", "id": 211430179, "node_id": "MDU6SXNzdWUyMTE0MzAxNzk=", "number": 38, "title": "Quation : skip only one parameter from the parameterized list", "user": {"login": "0xIslamTaha", "id": 17981089, "node_id": "MDQ6VXNlcjE3OTgxMDg5", "avatar_url": "https://avatars0.githubusercontent.com/u/17981089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xIslamTaha", "html_url": "https://github.com/0xIslamTaha", "followers_url": "https://api.github.com/users/0xIslamTaha/followers", "following_url": "https://api.github.com/users/0xIslamTaha/following{/other_user}", "gists_url": "https://api.github.com/users/0xIslamTaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xIslamTaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xIslamTaha/subscriptions", "organizations_url": "https://api.github.com/users/0xIslamTaha/orgs", "repos_url": "https://api.github.com/users/0xIslamTaha/repos", "events_url": "https://api.github.com/users/0xIslamTaha/events{/privacy}", "received_events_url": "https://api.github.com/users/0xIslamTaha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-02T15:46:33Z", "updated_at": "2017-03-07T10:31:53Z", "closed_at": "2017-03-07T10:31:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\nAs I understand, parameterized.expand([1, 2, 3]) will create three testcases. I would like to know how can I skip only one of them.\r\n\r\nI know that @unitest.skip() will skip the whole 3 test case, I only wanna to skip one of them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/37", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/37/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/37/events", "html_url": "https://github.com/wolever/parameterized/issues/37", "id": 177673039, "node_id": "MDU6SXNzdWUxNzc2NzMwMzk=", "number": 37, "title": "TypeError: don't know how to make test from: None", "user": {"login": "dhermyt", "id": 8223161, "node_id": "MDQ6VXNlcjgyMjMxNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8223161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermyt", "html_url": "https://github.com/dhermyt", "followers_url": "https://api.github.com/users/dhermyt/followers", "following_url": "https://api.github.com/users/dhermyt/following{/other_user}", "gists_url": "https://api.github.com/users/dhermyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermyt/subscriptions", "organizations_url": "https://api.github.com/users/dhermyt/orgs", "repos_url": "https://api.github.com/users/dhermyt/repos", "events_url": "https://api.github.com/users/dhermyt/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-09-18T20:00:46Z", "updated_at": "2019-04-22T15:36:45Z", "closed_at": "2019-02-06T02:57:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot run sample test using Visual Studio 2015, Python 3.5 and unittest2:\n\n```\nimport unittest\nfrom nose_parameterized import parameterized\n\nclass AddTestCase(unittest.TestCase):\n    @parameterized.expand([\n        (\"2 and 3\", 2, 3, 5),\n        (\"3 and 5\", 2, 3, 5),\n    ])\n    def test_add(self, _, a, b, expected):\n        assert_equal(a + b, expected)\n```\n\n```\nTest Name:  test_add\nTest Outcome:   Failed\nResult StandardError:   \nTraceback (most recent call last):\n  File \"C:\\PROGRAM FILES (X86)\\MICROSOFT VISUAL STUDIO 14.0\\COMMON7\\IDE\\EXTENSIONS\\MICROSOFT\\PYTHON TOOLS FOR VISUAL STUDIO\\2.2\\visualstudio_py_testlauncher.py\", line 69, in <module>\n    main()\n  File \"C:\\PROGRAM FILES (X86)\\MICROSOFT VISUAL STUDIO 14.0\\COMMON7\\IDE\\EXTENSIONS\\MICROSOFT\\PYTHON TOOLS FOR VISUAL STUDIO\\2.2\\visualstudio_py_testlauncher.py\", line 62, in main\n    test = unittest.defaultTestLoader.loadTestsFromNames(opts.tests, module)\n  File \"C:\\Users\\lem1x\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\unittest\\loader.py\", line 219, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"C:\\Users\\lem1x\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\unittest\\loader.py\", line 219, in <listcomp>\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"C:\\Users\\lem1x\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\unittest\\loader.py\", line 213, in loadTestsFromName\n    raise TypeError(\"don't know how to make test from: %s\" % obj)\nTypeError: don't know how to make test from: None\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/36", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/36/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/36/events", "html_url": "https://github.com/wolever/parameterized/issues/36", "id": 176427100, "node_id": "MDU6SXNzdWUxNzY0MjcxMDA=", "number": 36, "title": "Add type hints or type stubs", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-12T16:54:26Z", "updated_at": "2017-03-21T16:32:55Z", "closed_at": "2017-03-21T16:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you add type hints or type stubs (PEP484) to nose-parameterized?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/35", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/35/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/35/events", "html_url": "https://github.com/wolever/parameterized/issues/35", "id": 173149135, "node_id": "MDU6SXNzdWUxNzMxNDkxMzU=", "number": 35, "title": "error specific to python2.7: AttributeError: 'module' object has no attribute 'instancemethod'", "user": {"login": "sagaru", "id": 6860643, "node_id": "MDQ6VXNlcjY4NjA2NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6860643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagaru", "html_url": "https://github.com/sagaru", "followers_url": "https://api.github.com/users/sagaru/followers", "following_url": "https://api.github.com/users/sagaru/following{/other_user}", "gists_url": "https://api.github.com/users/sagaru/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagaru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagaru/subscriptions", "organizations_url": "https://api.github.com/users/sagaru/orgs", "repos_url": "https://api.github.com/users/sagaru/repos", "events_url": "https://api.github.com/users/sagaru/events{/privacy}", "received_events_url": "https://api.github.com/users/sagaru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-25T09:00:18Z", "updated_at": "2020-04-12T21:33:14Z", "closed_at": "2020-04-12T21:33:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI'm getting \"AttributeError: 'module' object has no attribute 'instancemethod'\" whenever I use nose-parameterized in python 2.7, the s same script(mentioned below) **executes fine in python3.4**.\n\nAnyone has an idea or faced similar issue ?\n\n**Code** : \n\n```\nimport unittest\nfrom nose_parameterized import parameterized\n\nclass autologinTest(unittest.TestCase):\n    a = [(['domain', 'url_login', 'logoutXpath']) , (['domain2', 'url_login2', 'logoutXpath2'])]\n    print(a)\n\n    @parameterized.expand(a)\n    def test_generic_function(self, a, b, c):\n        print a,b,c\n```\n\n**Error Traceback in python2.7** :\n\n```\nTraceback (most recent call last):\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/utrunner.py\", line 153, in <module>\n    modules = [loadSource(a[0])]\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/utrunner.py\", line 65, in loadSource\n    module = imp.load_source(moduleName, fileName)\n  File \"/Users/sudaykumar/Documents/Automation/autologin_POC/testing.py\", line 4, in <module>\n    from nose_parameterized import parameterized\n  File \"/Library/Python/2.7/site-packages/nose_parameterized/__init__.py\", line 1, in <module>\n    from .parameterized import parameterized, param\n  File \"/Library/Python/2.7/site-packages/nose_parameterized/parameterized.py\", line 31, in <module>\n    new_instancemethod = new.instancemethod\nAttributeError: 'module' object has no attribute 'instancemethod'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/32", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/32/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/32/events", "html_url": "https://github.com/wolever/parameterized/issues/32", "id": 168854768, "node_id": "MDU6SXNzdWUxNjg4NTQ3Njg=", "number": 32, "title": "Name change?", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-08-02T10:46:28Z", "updated_at": "2020-04-12T21:32:50Z", "closed_at": "2020-04-12T21:32:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I love `nose-parameterized`, it's the best test parameterizer out there that I've seen.\n\nWe use `pytest` for our tests and I've had several conversations about how we use `nose-parameterized` and my colleague has said \"but wait we use pytest\" and I've had to re-explain that it's for all test runners.\n\nA name change for the next version would solve all these conflicts. Name changes happen occasionally in the python community, e.g. recently `pep8` became `pycodestyle` to avoid confusion. Thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/30", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/30/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/30/events", "html_url": "https://github.com/wolever/parameterized/issues/30", "id": 106891400, "node_id": "MDU6SXNzdWUxMDY4OTE0MDA=", "number": 30, "title": "Weird interaction with httpretty", "user": {"login": "cdown", "id": 660663, "node_id": "MDQ6VXNlcjY2MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/660663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdown", "html_url": "https://github.com/cdown", "followers_url": "https://api.github.com/users/cdown/followers", "following_url": "https://api.github.com/users/cdown/following{/other_user}", "gists_url": "https://api.github.com/users/cdown/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdown/subscriptions", "organizations_url": "https://api.github.com/users/cdown/orgs", "repos_url": "https://api.github.com/users/cdown/repos", "events_url": "https://api.github.com/users/cdown/events{/privacy}", "received_events_url": "https://api.github.com/users/cdown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-17T00:42:21Z", "updated_at": "2015-09-17T00:56:46Z", "closed_at": "2015-09-17T00:56:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reported over there, but I don't know where the bug exists here. Maybe it's even just a documentation issue.\n\nhttps://github.com/gabrielfalcao/HTTPretty/issues/259\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/29", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/29/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/29/events", "html_url": "https://github.com/wolever/parameterized/issues/29", "id": 106109072, "node_id": "MDU6SXNzdWUxMDYxMDkwNzI=", "number": 29, "title": "Stackoverflow question", "user": {"login": "lrperlmu", "id": 2500819, "node_id": "MDQ6VXNlcjI1MDA4MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2500819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrperlmu", "html_url": "https://github.com/lrperlmu", "followers_url": "https://api.github.com/users/lrperlmu/followers", "following_url": "https://api.github.com/users/lrperlmu/following{/other_user}", "gists_url": "https://api.github.com/users/lrperlmu/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrperlmu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrperlmu/subscriptions", "organizations_url": "https://api.github.com/users/lrperlmu/orgs", "repos_url": "https://api.github.com/users/lrperlmu/repos", "events_url": "https://api.github.com/users/lrperlmu/events{/privacy}", "received_events_url": "https://api.github.com/users/lrperlmu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-11T22:55:58Z", "updated_at": "2015-09-17T00:58:11Z", "closed_at": "2015-09-17T00:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nose parameterized is awesome! Thanks for sharing it!\n\nThis is not quite a typical github issue, but there's a nose_parameterized question on stackoverflow with no answers yet: http://stackoverflow.com/questions/32532842/print-name-of-test-function-in-nose-parametrized . Greatly appreciated if you could shine some light on the problem.\n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/28", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/28/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/28/events", "html_url": "https://github.com/wolever/parameterized/issues/28", "id": 101274827, "node_id": "MDU6SXNzdWUxMDEyNzQ4Mjc=", "number": 28, "title": "Instance variables", "user": {"login": "bee-keeper", "id": 1985097, "node_id": "MDQ6VXNlcjE5ODUwOTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1985097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bee-keeper", "html_url": "https://github.com/bee-keeper", "followers_url": "https://api.github.com/users/bee-keeper/followers", "following_url": "https://api.github.com/users/bee-keeper/following{/other_user}", "gists_url": "https://api.github.com/users/bee-keeper/gists{/gist_id}", "starred_url": "https://api.github.com/users/bee-keeper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bee-keeper/subscriptions", "organizations_url": "https://api.github.com/users/bee-keeper/orgs", "repos_url": "https://api.github.com/users/bee-keeper/repos", "events_url": "https://api.github.com/users/bee-keeper/events{/privacy}", "received_events_url": "https://api.github.com/users/bee-keeper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-16T15:31:34Z", "updated_at": "2015-08-17T15:12:49Z", "closed_at": "2015-08-17T15:12:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nclass SomeTest(TestCase):\n    @parameterized.expand([\n        {'something': self.something},\n        {'something_else': self.something_else},\n    )]\n    def test_something(self, user):\n        pass\n```\n\nHi there, am wondering about using instance variables with nose-parameterized?  Have you any ideas or opinions about this? Edit: Obviously the code above won't compile, it's just to illustrate the use case ;)\n\nThanks,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/27", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/27/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/27/events", "html_url": "https://github.com/wolever/parameterized/issues/27", "id": 99238851, "node_id": "MDU6SXNzdWU5OTIzODg1MQ==", "number": 27, "title": "Parameters are not shown in nose output if doc strings are used.", "user": {"login": "torfsen", "id": 2877717, "node_id": "MDQ6VXNlcjI4Nzc3MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2877717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/torfsen", "html_url": "https://github.com/torfsen", "followers_url": "https://api.github.com/users/torfsen/followers", "following_url": "https://api.github.com/users/torfsen/following{/other_user}", "gists_url": "https://api.github.com/users/torfsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/torfsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/torfsen/subscriptions", "organizations_url": "https://api.github.com/users/torfsen/orgs", "repos_url": "https://api.github.com/users/torfsen/repos", "events_url": "https://api.github.com/users/torfsen/events{/privacy}", "received_events_url": "https://api.github.com/users/torfsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-08-05T16:00:49Z", "updated_at": "2015-08-07T13:37:27Z", "closed_at": "2015-08-07T13:37:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a test function has a doc string then nose uses that doc string instead of the function name in its verbose output:\n\n```\ndef test():\n    \"\"\"\n    A test.\n    \"\"\"\n    pass\n```\n\nyields\n\n```\nA test. ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nOK\n```\n\nIf this feature is used in combination with `parameterized` then each parameterized variant of a test case is reported using the same output (the raw doc string), instead of the \"parameterized\" output that is used when no doc string is present:\n\n```\nfrom nose_parameterized import parameterized\n\n@parameterized([(1, 1), (2, 2)])\ndef test1(a, b):\n    \"\"\"\n    First test.\n    \"\"\"\n    assert a == b\n\n\n@parameterized([(1, 1), (2, 2)])\ndef test2(a, b):\n    assert a == b\n```\n\nyields\n\n```\nFirst test. ... ok\nFirst test. ... ok\nnosedemo.test2(1, 1) ... ok\nnosedemo.test2(2, 2) ... ok\n\n----------------------------------------------------------------------\nRan 4 tests in 0.001s\n\nOK\n```\n\nI would have expected something like \n\n```\nFirst test. (1, 1) ... ok\nFirst test. (2, 2) ... ok\n```\n\nThis may be due to nose's behavior w.r.t. doc strings and test generators:\n\n```\ndef test():\n    \"\"\"\n    A test.\n    \"\"\"\n    def check(a, b):\n        assert a == b\n    for case in [(1, 1), (2, 2)]:\n        yield check, case[0], case[1]\n```\n\nyields\n\n```\nA test. ... ok\nA test. ... ok\n\n----------------------------------------------------------------------\nRan 2 tests in 0.001s\n\nOK\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/23", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/23/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/23/events", "html_url": "https://github.com/wolever/parameterized/issues/23", "id": 88877953, "node_id": "MDU6SXNzdWU4ODg3Nzk1Mw==", "number": 23, "title": "Release 0.4.0 on PyPI", "user": {"login": "smspillaz", "id": 775309, "node_id": "MDQ6VXNlcjc3NTMwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/775309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smspillaz", "html_url": "https://github.com/smspillaz", "followers_url": "https://api.github.com/users/smspillaz/followers", "following_url": "https://api.github.com/users/smspillaz/following{/other_user}", "gists_url": "https://api.github.com/users/smspillaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/smspillaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smspillaz/subscriptions", "organizations_url": "https://api.github.com/users/smspillaz/orgs", "repos_url": "https://api.github.com/users/smspillaz/repos", "events_url": "https://api.github.com/users/smspillaz/events{/privacy}", "received_events_url": "https://api.github.com/users/smspillaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-17T00:46:55Z", "updated_at": "2015-06-17T22:41:16Z", "closed_at": "2015-06-17T22:41:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/wolever/nose-parameterized/commit/6552eff0f3ff9e36ac48b11c176055d2c944e19f we bumped the version to 0.4.0 although this hasn't been released on PyPI yet.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/21", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/21/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/21/events", "html_url": "https://github.com/wolever/parameterized/issues/21", "id": 64584417, "node_id": "MDU6SXNzdWU2NDU4NDQxNw==", "number": 21, "title": "Specify parameter names in docstrings", "user": {"login": "smspillaz", "id": 775309, "node_id": "MDQ6VXNlcjc3NTMwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/775309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smspillaz", "html_url": "https://github.com/smspillaz", "followers_url": "https://api.github.com/users/smspillaz/followers", "following_url": "https://api.github.com/users/smspillaz/following{/other_user}", "gists_url": "https://api.github.com/users/smspillaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/smspillaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smspillaz/subscriptions", "organizations_url": "https://api.github.com/users/smspillaz/orgs", "repos_url": "https://api.github.com/users/smspillaz/repos", "events_url": "https://api.github.com/users/smspillaz/events{/privacy}", "received_events_url": "https://api.github.com/users/smspillaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-26T17:08:19Z", "updated_at": "2015-06-14T15:51:43Z", "closed_at": "2015-06-14T15:51:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice if `nose_parameterized` could provide some information about parameter names in generated function docstrings. Currently, the docstring is simply just copied from the template method to the generated method.\n\nFor test runners which report the running test by the first line of their docstring, this results in what looks like lots of repeated tests.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/20", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/20/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/20/events", "html_url": "https://github.com/wolever/parameterized/issues/20", "id": 55208316, "node_id": "MDU6SXNzdWU1NTIwODMxNg==", "number": 20, "title": "Issue with multiprocess or urllib?", "user": {"login": "asafpelegcodes", "id": 6590390, "node_id": "MDQ6VXNlcjY1OTAzOTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6590390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asafpelegcodes", "html_url": "https://github.com/asafpelegcodes", "followers_url": "https://api.github.com/users/asafpelegcodes/followers", "following_url": "https://api.github.com/users/asafpelegcodes/following{/other_user}", "gists_url": "https://api.github.com/users/asafpelegcodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/asafpelegcodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asafpelegcodes/subscriptions", "organizations_url": "https://api.github.com/users/asafpelegcodes/orgs", "repos_url": "https://api.github.com/users/asafpelegcodes/repos", "events_url": "https://api.github.com/users/asafpelegcodes/events{/privacy}", "received_events_url": "https://api.github.com/users/asafpelegcodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-22T21:02:32Z", "updated_at": "2015-01-23T21:14:48Z", "closed_at": "2015-01-23T21:14:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm potentially having two sets of issues.\n\nFirst is that I'm getting the following failure when I run my suite with the nose multiprocess plugin and I have a parameterized test with more than 1 set of injected params.  If I add more than one set of injected params I see an issue\n\nFailure: TypeError (unbound method address() must be called with Failure instance as first argument (got nothing instead)) ... ERROR\n\nThe second issue is that my test suite just hangs, it gets stuck and never executes to completion.\n\nAny advice?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/18", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/18/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/18/events", "html_url": "https://github.com/wolever/parameterized/issues/18", "id": 45525905, "node_id": "MDU6SXNzdWU0NTUyNTkwNQ==", "number": 18, "title": "Docstrings are wiped out", "user": {"login": "sanseihappa", "id": 9142600, "node_id": "MDQ6VXNlcjkxNDI2MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9142600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanseihappa", "html_url": "https://github.com/sanseihappa", "followers_url": "https://api.github.com/users/sanseihappa/followers", "following_url": "https://api.github.com/users/sanseihappa/following{/other_user}", "gists_url": "https://api.github.com/users/sanseihappa/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanseihappa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanseihappa/subscriptions", "organizations_url": "https://api.github.com/users/sanseihappa/orgs", "repos_url": "https://api.github.com/users/sanseihappa/repos", "events_url": "https://api.github.com/users/sanseihappa/events{/privacy}", "received_events_url": "https://api.github.com/users/sanseihappa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-10T21:29:46Z", "updated_at": "2014-10-10T21:38:35Z", "closed_at": "2014-10-10T21:38:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docstrings on the original test are wiped out after applying the `@parameterized.expand()` decorator\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/15", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/15/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/15/events", "html_url": "https://github.com/wolever/parameterized/issues/15", "id": 25041781, "node_id": "MDU6SXNzdWUyNTA0MTc4MQ==", "number": 15, "title": "Cannot run a specific test case (only complete class)", "user": {"login": "mykaul", "id": 4655593, "node_id": "MDQ6VXNlcjQ2NTU1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4655593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mykaul", "html_url": "https://github.com/mykaul", "followers_url": "https://api.github.com/users/mykaul/followers", "following_url": "https://api.github.com/users/mykaul/following{/other_user}", "gists_url": "https://api.github.com/users/mykaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mykaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mykaul/subscriptions", "organizations_url": "https://api.github.com/users/mykaul/orgs", "repos_url": "https://api.github.com/users/mykaul/repos", "events_url": "https://api.github.com/users/mykaul/events{/privacy}", "received_events_url": "https://api.github.com/users/mykaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-03T23:15:48Z", "updated_at": "2014-08-12T17:55:07Z", "closed_at": "2014-08-12T17:55:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "My code:\n\nmy_params = [(\"x-1000\", \"param1\", \"param2\"),\n(\"x-1001\", \"param3\", \"param4\"), ]\n\nclass TestMyAuth(object):\n    def **init**(self):\n        self.p = None\n\n```\ndef setUp(self):\n    try:\n        serv = config['servers']['serv']\n    except KeyError:\n        print(\"no serv in configuration\")\n        sys.exit()\n\n    self.p = AuthBaseClass(serv)\n\n@parameterized.expand(my_params)\ndef testAuth(self, _, username, password, message):\n```\n\n...\n\nThis works well when I execute:\nnosetests -s -v --tc=servers.serv:x.example.com rest-tests.py:TestMyAuth\n\nand fails when trying to run the specific test case:\nnosetests -s -v --tc=servers.serv:x.example.com rest-tests.py:TestMyAuth.testAuth\n\nwith the failure:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: testAuth() takes exactly 5 arguments (1 given)\n\nLooks like the generator is not working for a a specific case?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/14", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/14/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/14/events", "html_url": "https://github.com/wolever/parameterized/issues/14", "id": 25006748, "node_id": "MDU6SXNzdWUyNTAwNjc0OA==", "number": 14, "title": "parameterized.expand 'swallowes' space in test name", "user": {"login": "mykaul", "id": 4655593, "node_id": "MDQ6VXNlcjQ2NTU1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4655593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mykaul", "html_url": "https://github.com/mykaul", "followers_url": "https://api.github.com/users/mykaul/followers", "following_url": "https://api.github.com/users/mykaul/following{/other_user}", "gists_url": "https://api.github.com/users/mykaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mykaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mykaul/subscriptions", "organizations_url": "https://api.github.com/users/mykaul/orgs", "repos_url": "https://api.github.com/users/mykaul/repos", "events_url": "https://api.github.com/users/mykaul/events{/privacy}", "received_events_url": "https://api.github.com/users/mykaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-03T09:14:11Z", "updated_at": "2014-01-03T23:16:20Z", "closed_at": "2014-01-03T21:16:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using something like:\n(\"x-1000-test that this is good\", \"param1\", param2\" ),\n(\"x-1001-test that this is bad\" , \"param3\", param4\" ),\n\nand I expected to get something like:\ntestA_x-1000-test_that_this_is_good\ntestA_x-1001-test_that_this_is_bad\n\n(in accordance to the example of the documentation)\nbut instead, it seems to eliminate (not replace) all spaces in the test name and add counter:\ntestA_0_x1000testthatthisisgood\ntestA_1_x10001testthatthisisbad\n\nI'm using 0.3.2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/13", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/13/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/13/events", "html_url": "https://github.com/wolever/parameterized/issues/13", "id": 24984127, "node_id": "MDU6SXNzdWUyNDk4NDEyNw==", "number": 13, "title": "Getting TypeError: can't set attributes of built-in/extension type 'instance'", "user": {"login": "mykaul", "id": 4655593, "node_id": "MDQ6VXNlcjQ2NTU1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4655593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mykaul", "html_url": "https://github.com/mykaul", "followers_url": "https://api.github.com/users/mykaul/followers", "following_url": "https://api.github.com/users/mykaul/following{/other_user}", "gists_url": "https://api.github.com/users/mykaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mykaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mykaul/subscriptions", "organizations_url": "https://api.github.com/users/mykaul/orgs", "repos_url": "https://api.github.com/users/mykaul/repos", "events_url": "https://api.github.com/users/mykaul/events{/privacy}", "received_events_url": "https://api.github.com/users/mykaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-02T20:06:22Z", "updated_at": "2014-01-03T23:16:54Z", "closed_at": "2014-01-02T23:50:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "My code:\n\nauth_params = [(\"string-A1\", \"string-B1\", \"paramC1\", \"string-D1\"),\n        (\"string-A2\", \"string-B2\", \"paramC2\", \"string-D2\"),]\n\nclass TestAppAuth():\n    def **init**(self):\n        self.x = None\n\n```\ndef setUp(self):\n    try:\n        p = config['servers']['p']\n    except KeyError:\n        print(\"no p in configuration\")\n        sys.exit()\n\n    self.x = AuthHelperClass(p)\n\n@parameterized(auth_params)\ndef testAuth(self, test_description, username, password, message):\n    assert self.x.verifyFailedAuth(test_description, username, password, message)\n```\n\nIt fails:\n nosetests -s -v --tc=servers.p:a.example.com tests.py:TestAppAuth.testAuth\n\nFailure: TypeError (can't set attributes of built-in/extension type 'instance') ... ERROR\n# \n## ERROR: Failure: TypeError (can't set attributes of built-in/extension type 'instance')\n\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/nose/loader.py\", line 286, in generate\n    for test in g():\n  File \"/usr/lib/python2.7/site-packages/nose_parameterized-0.3.1-py2.7.egg/nose_parameterized/parameterized.py\", line 114, in parameterized_helper_method\n    f = self.make_bound_method(test_self, test_func)\n  File \"/usr/lib/python2.7/site-packages/nose_parameterized-0.3.1-py2.7.egg/nose_parameterized/parameterized.py\", line 144, in make_bound_method\n    setattr(cls, func.**name**, im_f)\nTypeError: can't set attributes of built-in/extension type 'instance'\n\n---\n\nRan 1 test in 0.002s\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/12", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/12/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/12/events", "html_url": "https://github.com/wolever/parameterized/issues/12", "id": 24633302, "node_id": "MDU6SXNzdWUyNDYzMzMwMg==", "number": 12, "title": "Weird behaviour between with_setup and parameterized.expand", "user": {"login": "fredericsureau", "id": 941845, "node_id": "MDQ6VXNlcjk0MTg0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/941845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredericsureau", "html_url": "https://github.com/fredericsureau", "followers_url": "https://api.github.com/users/fredericsureau/followers", "following_url": "https://api.github.com/users/fredericsureau/following{/other_user}", "gists_url": "https://api.github.com/users/fredericsureau/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredericsureau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredericsureau/subscriptions", "organizations_url": "https://api.github.com/users/fredericsureau/orgs", "repos_url": "https://api.github.com/users/fredericsureau/repos", "events_url": "https://api.github.com/users/fredericsureau/events{/privacy}", "received_events_url": "https://api.github.com/users/fredericsureau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-12-20T16:30:14Z", "updated_at": "2015-09-17T00:59:12Z", "closed_at": "2015-09-17T00:59:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nWhen using with_setup with parameterized.expand, setup function will not be executed.\nHowever, setup will be executed when using simple parameterized decorator.\n\n``` python\nfrom nose.tools import with_setup\nfrom nose_parameterized import parameterized\n\ndef mysetup():\n    print 'Hi!'\n\n@parameterized.expand([\n    (\"bla\", 0, 1),\n    (\"blu\", 0, 1),\n    (\"bli\", 0, 1),\n])\n@with_setup(mysetup)\ndef test_1(_, a, b):\n    assert False\n\n@parameterized([\n    (\"bla\", 0, 1),\n    (\"blu\", 0, 1),\n    (\"bli\", 0, 1),\n])\n@with_setup(mysetup)\ndef test_2(_, a, b):\n    assert False\n```\n\ntest1 does not print \"Hi!\" while test2 does.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/11", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/11/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/11/events", "html_url": "https://github.com/wolever/parameterized/issues/11", "id": 22616295, "node_id": "MDU6SXNzdWUyMjYxNjI5NQ==", "number": 11, "title": "@parameterized.expected?", "user": {"login": "anvera", "id": 2104277, "node_id": "MDQ6VXNlcjIxMDQyNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2104277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anvera", "html_url": "https://github.com/anvera", "followers_url": "https://api.github.com/users/anvera/followers", "following_url": "https://api.github.com/users/anvera/following{/other_user}", "gists_url": "https://api.github.com/users/anvera/gists{/gist_id}", "starred_url": "https://api.github.com/users/anvera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anvera/subscriptions", "organizations_url": "https://api.github.com/users/anvera/orgs", "repos_url": "https://api.github.com/users/anvera/repos", "events_url": "https://api.github.com/users/anvera/events{/privacy}", "received_events_url": "https://api.github.com/users/anvera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-13T19:38:57Z", "updated_at": "2013-12-09T05:18:10Z", "closed_at": "2013-12-09T05:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nin some place in the README.md file, there's a \"@parameterized.expected\". I think you mean \"@parameterized.expand\". \n\nThat's all. Your project looks very useful.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/9", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/9/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/9/events", "html_url": "https://github.com/wolever/parameterized/issues/9", "id": 17530370, "node_id": "MDU6SXNzdWUxNzUzMDM3MA==", "number": 9, "title": "from nose_parameterized import param does not work", "user": {"login": "YAmikep", "id": 1226080, "node_id": "MDQ6VXNlcjEyMjYwODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1226080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YAmikep", "html_url": "https://github.com/YAmikep", "followers_url": "https://api.github.com/users/YAmikep/followers", "following_url": "https://api.github.com/users/YAmikep/following{/other_user}", "gists_url": "https://api.github.com/users/YAmikep/gists{/gist_id}", "starred_url": "https://api.github.com/users/YAmikep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YAmikep/subscriptions", "organizations_url": "https://api.github.com/users/YAmikep/orgs", "repos_url": "https://api.github.com/users/YAmikep/repos", "events_url": "https://api.github.com/users/YAmikep/events{/privacy}", "received_events_url": "https://api.github.com/users/YAmikep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-01T20:49:33Z", "updated_at": "2013-08-02T02:23:58Z", "closed_at": "2013-08-02T02:23:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, thanks for this work;\n\nThere is an issue with:\n    from nose_parameterized import param\nIt does not work as mentioned in the documentation.\nI looked at the **ini**.py of the module and there is no \"param\" symbol.\nIs the documentation up to date?\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/8", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/8/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/8/events", "html_url": "https://github.com/wolever/parameterized/issues/8", "id": 14497094, "node_id": "MDU6SXNzdWUxNDQ5NzA5NA==", "number": 8, "title": "s/sitautions/situations", "user": {"login": "ysim", "id": 1258564, "node_id": "MDQ6VXNlcjEyNTg1NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1258564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysim", "html_url": "https://github.com/ysim", "followers_url": "https://api.github.com/users/ysim/followers", "following_url": "https://api.github.com/users/ysim/following{/other_user}", "gists_url": "https://api.github.com/users/ysim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysim/subscriptions", "organizations_url": "https://api.github.com/users/ysim/orgs", "repos_url": "https://api.github.com/users/ysim/repos", "events_url": "https://api.github.com/users/ysim/events{/privacy}", "received_events_url": "https://api.github.com/users/ysim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-19T14:37:11Z", "updated_at": "2013-05-19T21:25:15Z", "closed_at": "2013-05-19T21:25:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/5", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/5/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/5/events", "html_url": "https://github.com/wolever/parameterized/issues/5", "id": 12783506, "node_id": "MDU6SXNzdWUxMjc4MzUwNg==", "number": 5, "title": "Clarification of the parameterized decorator arguments", "user": {"login": "poswald", "id": 49721, "node_id": "MDQ6VXNlcjQ5NzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/49721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poswald", "html_url": "https://github.com/poswald", "followers_url": "https://api.github.com/users/poswald/followers", "following_url": "https://api.github.com/users/poswald/following{/other_user}", "gists_url": "https://api.github.com/users/poswald/gists{/gist_id}", "starred_url": "https://api.github.com/users/poswald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poswald/subscriptions", "organizations_url": "https://api.github.com/users/poswald/orgs", "repos_url": "https://api.github.com/users/poswald/repos", "events_url": "https://api.github.com/users/poswald/events{/privacy}", "received_events_url": "https://api.github.com/users/poswald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-04-04T02:44:49Z", "updated_at": "2013-05-19T06:21:20Z", "closed_at": "2013-05-19T06:21:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found your project and was trying it out and I wanted to raise a point with you.. not sure if it is helpful or not. In many places I have been using a loop to test multiple forms:\n\n```\nforms = [\n    {   \"name\": u\"Whatever1\",\n        \"address\": u\"whatever1@example.com\",\n    },\n    {   \"name\": u\"Whatever2\",\n        \"address\": u\"whatever2@example.com\",\n    },\n]\n```\n\nI was hoping to do:\n\n```\n@parameterized.expand(forms)\ndef parameterized_test(self, form_data):\n    ....\n```\n\nBut that throws a `KeyError` here:\n\n```\nif len(args) > 0 and isinstance(args[0], six.string_types):\n```\n\nThe `@parameterized.extend()` requires tuples, not dicts:\n\n```\nforms = [\n    ({   \"name\": u\"Whatever1\",\n        \"address\": u\"whatever1@example.com\",\n    },),\n    ({   \"name\": u\"Whatever2\",\n        \"address\": u\"whatever2@example.com\",\n    },),\n] \n```\n\nwhere each tuple is the set of args to be passed into the test. \n\nI fixed it with:\n\n```\n@parameterized.expand( (d,) for d in forms)\n```\n\nI understand why you're doing it this way, I just wanted to explain that I think this might be a common mistake and you should maybe test for a list of non-tuples being passed in and throw a better warning explaining what to do.\n\nAlso, I think the difference between `@parameterized.extend` and `@parameterized` was unclear to me at first.\n\nAnyway, just a note... thanks for the project! It seems pretty cool.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/3", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/3/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/3/events", "html_url": "https://github.com/wolever/parameterized/issues/3", "id": 11328358, "node_id": "MDU6SXNzdWUxMTMyODM1OA==", "number": 3, "title": "Subclassing not behaving as expected", "user": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-02-24T01:45:14Z", "updated_at": "2013-02-26T05:36:00Z", "closed_at": "2013-02-26T05:05:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the parameterized.expand decorator on a test mixin class that is ultimately subclassed by three separate test cases. If I run these three cases as a single module, individually, everything works as expected. The decorator is generating the correct number of tests via the subclassing of the mixin and they seem to be running appropriately.\n\nThe trouble starts when I run the test suite comprehensively with nose, i.e. `$ nosetests`. Strangely enough the last test case is passed data that was manipulated by the second test case. It seems like there's some kind of namespace pollution going on as a result of subclassing a mixin that uses a parameterized decorator. Is this the intended behavior?\n\nAs a control, I rewrote a smaller set of the generated tests manually to ensure they worked as expected. Everything seemed fine. The tests passed and there was no interference from the other test cases.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wolever/parameterized/issues/2", "repository_url": "https://api.github.com/repos/wolever/parameterized", "labels_url": "https://api.github.com/repos/wolever/parameterized/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/wolever/parameterized/issues/2/comments", "events_url": "https://api.github.com/repos/wolever/parameterized/issues/2/events", "html_url": "https://github.com/wolever/parameterized/issues/2", "id": 9991467, "node_id": "MDU6SXNzdWU5OTkxNDY3", "number": 2, "title": "Not compatible with Python 3", "user": {"login": "akaihola", "id": 13725, "node_id": "MDQ6VXNlcjEzNzI1", "avatar_url": "https://avatars3.githubusercontent.com/u/13725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akaihola", "html_url": "https://github.com/akaihola", "followers_url": "https://api.github.com/users/akaihola/followers", "following_url": "https://api.github.com/users/akaihola/following{/other_user}", "gists_url": "https://api.github.com/users/akaihola/gists{/gist_id}", "starred_url": "https://api.github.com/users/akaihola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akaihola/subscriptions", "organizations_url": "https://api.github.com/users/akaihola/orgs", "repos_url": "https://api.github.com/users/akaihola/repos", "events_url": "https://api.github.com/users/akaihola/events{/privacy}", "received_events_url": "https://api.github.com/users/akaihola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-15T19:27:57Z", "updated_at": "2013-04-29T02:44:45Z", "closed_at": "2013-04-29T02:44:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to install nose-parameterized 0.1 from PyPI with Python 3.2:\n\n```\n$ pip-3.2 install nose-parameterized\nDownloading/unpacking nose-parameterized\n  Running setup.py egg_info for package nose-parameterized\n\nInstalling collected packages: nose-parameterized\n  Running setup.py install for nose-parameterized\n      File \"nose_parameterized/test.py\", line 33\n        except Exception, e:\n                        ^\n    SyntaxError: invalid syntax\n\n\nSuccessfully installed nose-parameterized\nCleaning up...\n```\n", "performed_via_github_app": null, "score": 1.0}]}