{"total_count": 48, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/98", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/98/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/98/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/98", "id": 598422173, "node_id": "MDU6SXNzdWU1OTg0MjIxNzM=", "number": 98, "title": "insert and expand", "user": {"login": "Char-Aznable", "id": 32589713, "node_id": "MDQ6VXNlcjMyNTg5NzEz", "avatar_url": "https://avatars1.githubusercontent.com/u/32589713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Char-Aznable", "html_url": "https://github.com/Char-Aznable", "followers_url": "https://api.github.com/users/Char-Aznable/followers", "following_url": "https://api.github.com/users/Char-Aznable/following{/other_user}", "gists_url": "https://api.github.com/users/Char-Aznable/gists{/gist_id}", "starred_url": "https://api.github.com/users/Char-Aznable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Char-Aznable/subscriptions", "organizations_url": "https://api.github.com/users/Char-Aznable/orgs", "repos_url": "https://api.github.com/users/Char-Aznable/repos", "events_url": "https://api.github.com/users/Char-Aznable/events{/privacy}", "received_events_url": "https://api.github.com/users/Char-Aznable/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-12T06:32:56Z", "updated_at": "2020-04-20T22:29:54Z", "closed_at": "2020-04-20T22:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there an easy way to insert an `Interval by` expanding the entire range of an existing `IntervalTree`? For example, given\r\n```python\r\nt = IntervalTree([Interval(1, 10)])\r\n```\r\ndoing this `t.insert_expand(Interval(2,3), 'left')` would result in \r\n```python\r\nIntervalTree([Interval(0,2),Interval(2,3),Interval(3, 10)])\r\n```\r\nwhile `t.insert_expand(Interval(2,3), 'right')` would result in \r\n```python\r\nIntervalTree([Interval(1,2),Interval(2,3),Interval(3, 11)])\r\n```\r\nboth of which would expand the range by `1`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/96", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/96/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/96/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/96", "id": 578201397, "node_id": "MDU6SXNzdWU1NzgyMDEzOTc=", "number": 96, "title": "Bug when running Interval Tree and Remove", "user": {"login": "davemarr621", "id": 7673449, "node_id": "MDQ6VXNlcjc2NzM0NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7673449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davemarr621", "html_url": "https://github.com/davemarr621", "followers_url": "https://api.github.com/users/davemarr621/followers", "following_url": "https://api.github.com/users/davemarr621/following{/other_user}", "gists_url": "https://api.github.com/users/davemarr621/gists{/gist_id}", "starred_url": "https://api.github.com/users/davemarr621/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davemarr621/subscriptions", "organizations_url": "https://api.github.com/users/davemarr621/orgs", "repos_url": "https://api.github.com/users/davemarr621/repos", "events_url": "https://api.github.com/users/davemarr621/events{/privacy}", "received_events_url": "https://api.github.com/users/davemarr621/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-09T21:27:15Z", "updated_at": "2020-03-11T06:31:29Z", "closed_at": "2020-03-11T06:31:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Bug: Bug when running Interval Tree and Remove\r\n\r\nUsing VM here: https://repl.it/@DavidMarr/planesweep3\r\n\r\nError message:\r\nTraceback (most recent call last):  File \"main.py\", line 139, in <module>    tree.removei(val[1],val[2])  File \"/home/runner/.local/share/virtualenvs/python3/lib/python3.8/site-packages/intervaltree/intervaltree.py\", line 378, in removei    return self.remove(Interval(begin, end, data))  File \"/home/runner/.local/share/virtualenvs/python3/lib/python3.8/site-packages/intervaltree/intervaltree.py\", line 366, in remove    raise ValueErrorValueError\r\n\r\nCode:\r\n\r\n# This script uses plane sweep or sweep line method to calculate the\r\n# maximum overlap of y-intervals; An EVENT list was created from all\r\n# lower left x and lower right x coordinates; An IntervalTree data\r\n# structure was to add the y-intervals at the lower left x (start)\r\n# event point then add to the IntervalTree, check for overlap, produce\r\n# a count then at the lower right x coord remove the y-interval from the\r\n# intervaltree\r\nimport random\r\nimport matplotlib.pyplot as plt\r\nfrom matplotlib.pyplot import Rectangle\r\nimport timeit\r\nimport numpy as np\r\nfrom matplotlib.collections import PatchCollection\r\nfrom matplotlib.patches import Rectangle\r\nfrom intervaltree import Interval, IntervalTree\r\nfrom mpl_toolkits.axes_grid1.inset_locator import zoomed_inset_axes\r\nfrom mpl_toolkits.axes_grid1.inset_locator import mark_inset\r\n\r\n# Set random seed number\r\nnum_seed = 12\r\nrandom.seed(num_seed)\r\nt1 = timeit.default_timer() # timer\r\n\r\nprint(\"Starting ...\")\r\nprint()\r\nprint(\"Random seed => \", num_seed)\r\nprint()\r\n# Number of data points\r\nn = 250000\r\nprint(\"Number of points => \",n)\r\nprint()\r\n\r\n# Set the width and height offsets of the rectangles\r\nnum_width = 2\r\nnum_height = 2\r\n\r\n# Set the x and y dimensions of the points\r\nx_dimension = 25000\r\ny_dimension = 25000\r\nprint(\"X dimension => \", x_dimension)\r\nprint(\"Y_dimension => \", y_dimension)\r\nprint()\r\n# Height and width of rectangles\r\nwidth = np.full((2,n),num_width) # width of rectangle = 2\r\nheight = np.full((2,n),num_height) # height of rectangle = 2\r\n\r\ndef make_boxes(ax, xdata, ydata, width, height, facecolor='lightgray',\r\n                     edgecolor='None', alpha=0.5):\r\n    # Create list for all the error patches\r\n    errorboxes = []\r\n    # Loop over data points; create box from errors at each point\r\n    for x, y, xe, ye in zip(xdata, ydata, width.T, height.T):\r\n        rect = Rectangle((x - xe[0], y - ye[0]), xe.sum(), ye.sum())\r\n        errorboxes.append(rect)\r\n    # Create patch collection with specified colour/alpha\r\n    pc = PatchCollection(errorboxes, facecolor=facecolor, alpha=alpha,\r\n                         edgecolor=edgecolor)\r\n    # Add collection to axes\r\n    ax.add_collection(pc)\r\n\r\n# Create figure and axes\r\nfig, ax, = plt.subplots(1)\r\n#plt.savefig('rectangles.png')\r\n\r\n# Create 2d tuple as double (to 2 digits) as x, y\r\npt_coord = [] # the point\r\nintervals = [] # y intervals: lower left x,y to upper left x,y\r\nll_xy = [] # lower left coord list\r\nlr_xy =[] # lower right coord list\r\nll_x_lr_x = [] # list of lower left x and lower right x\r\n# 0 at end means left edge (add to interval tree)\r\n# 1 at end means right edge (remove from interval tree)\r\n\r\n#print()\r\nfor i in range(n):\r\n    x = round(random.uniform(1,x_dimension),2)\r\n    y = round(random.uniform(1,y_dimension),2)\r\n    pt_coord.append([x,y])\r\n\r\n    ll_x = x - num_width\r\n    ll_y = y - num_height\r\n    ul_x = x - num_width\r\n    ul_y = y + num_height\r\n    lr_x = x + num_width\r\n    lr_y = y - num_height\r\n    ur_x = x + num_width\r\n    ur_y = y + num_height\r\n    ll_x_lr_x.append([ll_x,ll_y,ul_y,\"0\"]) # add lower left x\r\n    ll_x_lr_x.append([lr_x,lr_y, ur_y,\"1\"]) # add lower right x\r\n    \r\n# Create scatter plot\r\nx_coord = [x1[0] for x1 in pt_coord]\r\ny_coord = [x1[1] for x1 in pt_coord]\r\n\r\nplt.xlim(0, x_dimension)\r\nplt.ylim(0, y_dimension)\r\n#plt.figure(0)\r\nplt.scatter(x_coord,y_coord,s=40)\r\nplt.title(\"# points => \" + n.__str__() + \" , \" + \"random seed => \" + num_seed.__str__() + \", w => \" + num_width.__str__() + \", h => \" + num_height.__str__())\r\nplt.savefig('all_points.png')\r\n\r\n# Call function to create error boxes\r\n_ = make_boxes(ax, x_coord, y_coord, width, height)\r\n\r\nplt.xlim(0, x_dimension)\r\nplt.ylim(0, y_dimension)\r\nplt.figure(1)\r\nplt.scatter(x_coord,y_coord,s=40)\r\nplt.title(\"# points => \" + n.__str__() + \" , \" + \"random seed => \" + num_seed.__str__() + \", w => \" + num_width.__str__() + \", h => \" + num_height.__str__())\r\nplt.savefig('rectangles.png')\r\n\r\n# EVENT LIST: list of lower left x AND lower right x, sorted low to high\r\nall_x_sorted = []\r\nall_x_sorted = sorted(ll_x_lr_x)\r\n# print(all_x_sorted)\r\n\r\n# the interval tree\r\ntree = IntervalTree()\r\ntest_overlap =[]\r\noverlap_count = []\r\nlist_overlap_count = []\r\nmax_count =[]\r\n\r\n# Loop through EVENT (X coords) list\r\n# index, ll_x, ll_y, ul_y, 0 Add y-interval or\r\n# index, lr_x, lr_y, ur_y, 1 remove y-interval\r\nfor i, val in enumerate(all_x_sorted): \r\n    # print (i, \",\",val)\r\n    if '0' in val: #add y-interval\r\n      # print(\"Adding interval\")\r\n      tree.addi(val[1],val[2])\r\n      test_overlap = tree[val[1]:val[2]] # test for overlap\r\n      overlap_count = (len(test_overlap))# overlap count\r\n      list_overlap_count.append([overlap_count,val[0],val[1]]) # max count and x coord\r\n      #print(\"Overlap count => \", list_overlap_count)      \r\n\r\n    if '1' in val: # remove y-interval\r\n      #print(tree)\r\n      tree.removei(val[1],val[2])\r\n    \r\nprint(list_overlap_count)\r\nmax_count = (max(list_overlap_count))\r\nprint()\r\nprint(\"Max count => \", max_count)\r\nprint()\r\nplt.scatter(max_count[1], max_count[2] + num_height, s=200, facecolors='none', edgecolors='r')\r\nplt.title(\"# points => \" + n.__str__() + \" , \" + \"random seed => \" + num_seed.__str__() + \", w => \" + num_width.__str__() + \", h => \" + num_height.__str__())\r\nfig.suptitle('Max Count, x , y = > ' + max_count.__str__())\r\nplt.savefig('greatest_overlap_point.png')\r\n\r\n# Plot insert or enlargement\r\nfig, axins, = plt.subplots(1)\r\nplt.xlim(0, x_dimension)\r\nplt.ylim(0, y_dimension)\r\nplt.figure(1)\r\nplt.scatter(x_coord,y_coord,s=40)\r\nplt.title(\"# points => \" + n.__str__() + \" , \" + \"random seed => \" + num_seed.__str__() + \", w => \" + num_width.__str__() + \", h => \" + num_height.__str__())\r\n\r\nfig, ax, = plt.subplots(1)\r\n_ = make_boxes(ax, x_coord, y_coord, width, height)\r\n\r\nplt.xlim(0, x_dimension)\r\nplt.ylim(0, y_dimension)\r\nplt.scatter(x_coord,y_coord,s=40)\r\nplt.title(\"# points => \" + n.__str__() + \" , \" + \"random seed => \" + num_seed.__str__() + \", w => \" + num_width.__str__() + \", h => \" + num_height.__str__())\r\n\r\n\r\nplt.xlabel('{0:.2f} seconds needed for code run'.format(timeit.default_timer() - t1))\r\nfig.suptitle('Max Count, x , y = > ' + max_count.__str__())\r\nplt.scatter(max_count[1], max_count[2] + num_height, s=200, facecolors='none', edgecolors='r')\r\n\r\n# Create enlargement plot\r\n# Call function to create error boxes\r\n# plot boxes in main plot window\r\n_ = make_boxes(ax, x_coord, y_coord, width, height)\r\n\r\n# plot boxes in inset\r\naxins = zoomed_inset_axes(ax, 2.8, loc=2) # zoom-factor: 2.5, location: upper-left\r\n_ = make_boxes(axins, x_coord, y_coord, width, height)\r\n\r\nx1, x2, y1, y2 = max_count[1]-7, max_count[1]+7, max_count[2]-7, max_count[2]+7 # specify the limits\r\naxins.set_xlim(x1, x2) # apply the x-limits\r\naxins.set_ylim(y1, y2) # apply the y-limits\r\naxins.scatter(x_coord,y_coord,s=40)\r\nplt.scatter(max_count[1], max_count[2] + num_height, s=200, facecolors='none', edgecolors='r')\r\nmark_inset(ax, axins, loc1=2, loc2=4, fc=\"none\", ec=\"0.5\")\r\n\r\nplt.savefig('zoomed in')\r\n\r\nprint(tree) # tree should be null\r\nprint()\r\n# testing timeit()\r\nprint(\"{0:.2f} seconds needed for code run\".format(timeit.default_timer() - t1))\r\n\r\nprint(\"Finished...\")\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/88", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/88/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/88/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/88", "id": 474516829, "node_id": "MDU6SXNzdWU0NzQ1MTY4Mjk=", "number": 88, "title": "Missing method 'envelop'", "user": {"login": "joachimwolff", "id": 13435136, "node_id": "MDQ6VXNlcjEzNDM1MTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/13435136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joachimwolff", "html_url": "https://github.com/joachimwolff", "followers_url": "https://api.github.com/users/joachimwolff/followers", "following_url": "https://api.github.com/users/joachimwolff/following{/other_user}", "gists_url": "https://api.github.com/users/joachimwolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/joachimwolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joachimwolff/subscriptions", "organizations_url": "https://api.github.com/users/joachimwolff/orgs", "repos_url": "https://api.github.com/users/joachimwolff/repos", "events_url": "https://api.github.com/users/joachimwolff/events{/privacy}", "received_events_url": "https://api.github.com/users/joachimwolff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-30T10:57:53Z", "updated_at": "2019-07-30T18:02:09Z", "closed_at": "2019-07-30T17:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIn your docs you write there is a function `tree.envelop(begin, end)`. However, if I try to call it I get:\r\n`AttributeError: 'IntervalTree' object has no attribute 'envelop'`\r\nAnd listing of all methods returns:\r\n```\r\n['__and__',\r\n '__class__',\r\n '__contains__',\r\n '__delattr__',\r\n '__delitem__',\r\n '__dir__',\r\n '__eq__',\r\n '__format__',\r\n '__ge__',\r\n '__getattribute__',\r\n '__getitem__',\r\n '__gt__',\r\n '__iand__',\r\n '__init__',\r\n '__ior__',\r\n '__isub__',\r\n '__iter__',\r\n '__ixor__',\r\n '__le__',\r\n '__len__',\r\n '__lt__',\r\n '__ne__',\r\n '__new__',\r\n '__or__',\r\n '__rand__',\r\n '__reduce__',\r\n '__reduce_ex__',\r\n '__repr__',\r\n '__ror__',\r\n '__rsub__',\r\n '__rxor__',\r\n '__setattr__',\r\n '__setitem__',\r\n '__sizeof__',\r\n '__str__',\r\n '__sub__',\r\n '__subclasshook__',\r\n '__xor__',\r\n '_add_boundaries',\r\n '_from_iterable',\r\n '_hash',\r\n '_remove_boundaries',\r\n 'add',\r\n 'addi',\r\n 'append',\r\n 'appendi',\r\n 'begin',\r\n 'chop',\r\n 'clear',\r\n 'containsi',\r\n 'copy',\r\n 'difference',\r\n 'difference_update',\r\n 'discard',\r\n 'discardi',\r\n 'end',\r\n 'extend',\r\n 'find_nested',\r\n 'from_tuples',\r\n 'intersection',\r\n 'intersection_update',\r\n 'is_empty',\r\n 'isdisjoint',\r\n 'items',\r\n 'iter',\r\n 'merge_equals',\r\n 'merge_overlaps',\r\n 'overlaps',\r\n 'overlaps_point',\r\n 'overlaps_range',\r\n 'pop',\r\n 'print_structure',\r\n 'range',\r\n 'remove',\r\n 'remove_envelop',\r\n 'remove_overlap',\r\n 'removei',\r\n 'score',\r\n 'search',\r\n 'slice',\r\n 'span',\r\n 'split_overlaps',\r\n 'symmetric_difference',\r\n 'symmetric_difference_update',\r\n 'union',\r\n 'update',\r\n 'verify']\r\n```\r\n\r\nIt shows all mentions methods from your documention, expect `envelop`. Is it simply not implemented or what happend to this function?\r\n\r\nThanks a lot for your help.\r\n\r\nBest,\r\n\r\nJoachim", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/85", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/85/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/85/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/85", "id": 416565514, "node_id": "MDU6SXNzdWU0MTY1NjU1MTQ=", "number": 85, "title": "KeyError on removal", "user": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars3.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-03T21:15:04Z", "updated_at": "2019-03-05T22:54:17Z", "closed_at": "2019-03-04T21:25:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/intervaltree/node.py\", line 248, in remove_interval_helper\r\n    self.s_center.remove(interval)\r\nKeyError: Interval(64993436, 76836782, ...)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/alex/bin/dna-kit\", line 290, in <module>\r\n    main()\r\n  File \"/Users/alex/bin/dna-kit\", line 287, in main\r\n    args.subcommand(args, service=service, relatives=relatives, fatal_error=parser.error)\r\n  File \"/Users/alex/bin/dna-kit\", line 172, in find_groups_command                                      interval_tree.remove(cur_overlap)\r\n  File \"/usr/local/lib/python3.7/site-packages/intervaltree/intervaltree.py\", line 367, in remove\r\n    self.top_node = self.top_node.remove(interval)\r\n  File \"/usr/local/lib/python3.7/site-packages/intervaltree/node.py\", line 214, in remove\r\n    return self.remove_interval_helper(interval, done, should_raise_error=True)\r\n  File \"/usr/local/lib/python3.7/site-packages/intervaltree/node.py\", line 251, in remove_interval_helper\r\n    raise KeyError(interval)\r\nKeyError: Interval(64993436, 76836782, ...)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/84", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/84/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/84/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/84", "id": 411687023, "node_id": "MDU6SXNzdWU0MTE2ODcwMjM=", "number": 84, "title": "Is addi slower in v3?", "user": {"login": "pichuan", "id": 471813, "node_id": "MDQ6VXNlcjQ3MTgxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/471813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pichuan", "html_url": "https://github.com/pichuan", "followers_url": "https://api.github.com/users/pichuan/followers", "following_url": "https://api.github.com/users/pichuan/following{/other_user}", "gists_url": "https://api.github.com/users/pichuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pichuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pichuan/subscriptions", "organizations_url": "https://api.github.com/users/pichuan/orgs", "repos_url": "https://api.github.com/users/pichuan/repos", "events_url": "https://api.github.com/users/pichuan/events{/privacy}", "received_events_url": "https://api.github.com/users/pichuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-18T23:48:03Z", "updated_at": "2019-02-21T06:45:17Z", "closed_at": "2019-02-21T06:45:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm a developer for the [DeepVariant](https://github.com/google/deepvariant) and [Nucleus](https://github.com/google/nucleus) repo.\r\n\r\nRecently, we're updating our intervaltree dependency to v3.0.2. I noticed that this for loop containing a `addi` call to intervaltree seems to be **much** slower:\r\nhttps://github.com/google/nucleus/blob/27e7c29411234b7fd7845eed6dc54d29993d1112/nucleus/util/ranges.py#L98-L106\r\n\r\nI wonder if this is a known issue for v3. And, I also wonder maybe we were not using intervaltree in the most efficient way? \r\n\r\nIf there's any more information I can provide, please let me know.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/79", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/79/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/79/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/79", "id": 391958781, "node_id": "MDU6SXNzdWUzOTE5NTg3ODE=", "number": 79, "title": "UnicodeDecodeError", "user": {"login": "garyatpt", "id": 12709871, "node_id": "MDQ6VXNlcjEyNzA5ODcx", "avatar_url": "https://avatars3.githubusercontent.com/u/12709871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyatpt", "html_url": "https://github.com/garyatpt", "followers_url": "https://api.github.com/users/garyatpt/followers", "following_url": "https://api.github.com/users/garyatpt/following{/other_user}", "gists_url": "https://api.github.com/users/garyatpt/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyatpt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyatpt/subscriptions", "organizations_url": "https://api.github.com/users/garyatpt/orgs", "repos_url": "https://api.github.com/users/garyatpt/repos", "events_url": "https://api.github.com/users/garyatpt/events{/privacy}", "received_events_url": "https://api.github.com/users/garyatpt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-18T01:28:44Z", "updated_at": "2018-12-18T03:58:42Z", "closed_at": "2018-12-18T03:58:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\nE:\\zephyr>pip install intervaltree\r\nCollecting intervaltree\r\n  Using cached https://files.pythonhosted.org/packages/6b/63/42329a3e503366be2be68384336db308a795516b362437368ddd82d3368f/intervaltree-3.0.1.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"C:\\Users\\gary\\AppData\\Local\\Temp\\pip-install-kcs7dz4o\\intervaltree\\setup.py\", line 60, in <module>\r\n        long_description = fh.read()\r\n    UnicodeDecodeError: 'cp950' codec can't decode byte 0xe2 in position 5223: illegal multibyte sequence\r\n    !!!>>> This is a RELEASE version <<<!!!\r\n\r\n    Version: 3.0.1\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in C:\\Users\\gary\\AppData\\Local\\Temp\\pip-install-kcs7dz4o\\intervaltree\\\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/77", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/77/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/77/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/77", "id": 391684019, "node_id": "MDU6SXNzdWUzOTE2ODQwMTk=", "number": 77, "title": "v3.0.0 on PyPi fails to install with python 2.7", "user": {"login": "kudangun", "id": 14358406, "node_id": "MDQ6VXNlcjE0MzU4NDA2", "avatar_url": "https://avatars3.githubusercontent.com/u/14358406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kudangun", "html_url": "https://github.com/kudangun", "followers_url": "https://api.github.com/users/kudangun/followers", "following_url": "https://api.github.com/users/kudangun/following{/other_user}", "gists_url": "https://api.github.com/users/kudangun/gists{/gist_id}", "starred_url": "https://api.github.com/users/kudangun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kudangun/subscriptions", "organizations_url": "https://api.github.com/users/kudangun/orgs", "repos_url": "https://api.github.com/users/kudangun/repos", "events_url": "https://api.github.com/users/kudangun/events{/privacy}", "received_events_url": "https://api.github.com/users/kudangun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-12-17T12:10:19Z", "updated_at": "2018-12-17T22:20:00Z", "closed_at": "2018-12-17T22:20:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nCollecting intervaltree (from pyOCD!=0.13.0->mbed-flasher==0.*,>=0.9.0->mbed-clitest->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/7c/1c/20e098774a83f8eb8b9e90781d7570c00339f14acc412c91845f86842519/intervaltree-3.0.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-eq9tan/intervaltree/setup.py\", line 29, in <module>\r\n        from utils import version\r\n    ImportError: No module named utils\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/74", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/74/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/74/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/74", "id": 388189480, "node_id": "MDU6SXNzdWUzODgxODk0ODA=", "number": 74, "title": "DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated", "user": {"login": "halicki", "id": 3773401, "node_id": "MDQ6VXNlcjM3NzM0MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3773401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/halicki", "html_url": "https://github.com/halicki", "followers_url": "https://api.github.com/users/halicki/followers", "following_url": "https://api.github.com/users/halicki/following{/other_user}", "gists_url": "https://api.github.com/users/halicki/gists{/gist_id}", "starred_url": "https://api.github.com/users/halicki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/halicki/subscriptions", "organizations_url": "https://api.github.com/users/halicki/orgs", "repos_url": "https://api.github.com/users/halicki/repos", "events_url": "https://api.github.com/users/halicki/events{/privacy}", "received_events_url": "https://api.github.com/users/halicki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-06T12:20:06Z", "updated_at": "2018-12-17T15:39:20Z", "closed_at": "2018-12-17T15:39:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone!\r\nI got this `DeprecationWarning` with `intervaltree==2.1.0` on `Python 3.7.1`:\r\n```\r\n/home/arkadiusz/.local/share/virtualenvs/lib-4b94Lt8N/lib/python3.7/site-packages/intervaltree/intervaltree.py:37\r\n  /home/arkadiusz/.local/share/virtualenvs/lib-4b94Lt8N/lib/python3.7/site-packages/intervaltree/intervaltree.py:37: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    class IntervalTree(collections.MutableSet):\r\n```\r\nThis should be easy fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/72", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/72/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/72/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/72", "id": 354933508, "node_id": "MDU6SXNzdWUzNTQ5MzM1MDg=", "number": 72, "title": "KeyError raised after calling remove_overlap", "user": {"login": "alexandersoto", "id": 1924917, "node_id": "MDQ6VXNlcjE5MjQ5MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1924917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandersoto", "html_url": "https://github.com/alexandersoto", "followers_url": "https://api.github.com/users/alexandersoto/followers", "following_url": "https://api.github.com/users/alexandersoto/following{/other_user}", "gists_url": "https://api.github.com/users/alexandersoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandersoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandersoto/subscriptions", "organizations_url": "https://api.github.com/users/alexandersoto/orgs", "repos_url": "https://api.github.com/users/alexandersoto/repos", "events_url": "https://api.github.com/users/alexandersoto/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandersoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-28T22:54:19Z", "updated_at": "2018-12-18T03:54:02Z", "closed_at": "2018-12-18T03:54:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling `remove_overlap` multiple times on the same tree can cause a KeyError. Here's the stack trace:\r\n```\r\nKeyError: Interval(1535742000.0, 1535743800.0)\r\n  File \"intervaltree/node.py\", line 245, in remove_interval_helper\r\n    self.s_center.remove(interval)\r\n\r\nKeyError: Interval(1535742000.0, 1535743800.0)\r\n\r\n  ...app specific stack trace\r\n\r\n  File \"intervaltree/intervaltree.py\", line 473, in remove_overlap\r\n    self.remove(iv)\r\n  File \"intervaltree/intervaltree.py\", line 361, in remove\r\n    self.top_node = self.top_node.remove(interval)\r\n  File \"intervaltree/node.py\", line 211, in remove\r\n    return self.remove_interval_helper(interval, done, should_raise_error=True)\r\n  File \"intervaltree/node.py\", line 270, in remove_interval_helper\r\n    self[direction] = self[direction].remove_interval_helper(interval, done, should_raise_error)\r\n  File \"intervaltree/node.py\", line 248, in remove_interval_helper\r\n    raise KeyError(interval)\r\n```\r\n\r\nUnfortunately, I don't have a failing test case. I'm using this library in a web app and haven't been able to recreate an offending tree/overlap that crashes. I believe it has something to do with when `remove_overlap` is called multiple times on the same tree, with a specific set of overlaps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/71", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/71/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/71/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/71", "id": 354430477, "node_id": "MDU6SXNzdWUzNTQ0MzA0Nzc=", "number": 71, "title": "Release latest version to PyPI?", "user": {"login": "alexandersoto", "id": 1924917, "node_id": "MDQ6VXNlcjE5MjQ5MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1924917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandersoto", "html_url": "https://github.com/alexandersoto", "followers_url": "https://api.github.com/users/alexandersoto/followers", "following_url": "https://api.github.com/users/alexandersoto/following{/other_user}", "gists_url": "https://api.github.com/users/alexandersoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandersoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandersoto/subscriptions", "organizations_url": "https://api.github.com/users/alexandersoto/orgs", "repos_url": "https://api.github.com/users/alexandersoto/repos", "events_url": "https://api.github.com/users/alexandersoto/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandersoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-27T18:40:56Z", "updated_at": "2018-12-17T16:59:22Z", "closed_at": "2018-12-17T15:39:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Thanks for building a great library :)\r\n\r\nI've run into a bug that was fixed in https://github.com/chaimleib/intervaltree/commit/234ecff490276ded975010f72b42b83e82d79232. Would it be possible to release the latest version to PyPI? The current release on PyPI is version 2.1.0 from 2015. Happy to help in any way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/70", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/70/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/70/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/70", "id": 339750794, "node_id": "MDU6SXNzdWUzMzk3NTA3OTQ=", "number": 70, "title": "Python3.5 Deprecation Warning", "user": {"login": "cjw85", "id": 3592009, "node_id": "MDQ6VXNlcjM1OTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3592009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjw85", "html_url": "https://github.com/cjw85", "followers_url": "https://api.github.com/users/cjw85/followers", "following_url": "https://api.github.com/users/cjw85/following{/other_user}", "gists_url": "https://api.github.com/users/cjw85/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjw85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjw85/subscriptions", "organizations_url": "https://api.github.com/users/cjw85/orgs", "repos_url": "https://api.github.com/users/cjw85/repos", "events_url": "https://api.github.com/users/cjw85/events{/privacy}", "received_events_url": "https://api.github.com/users/cjw85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-10T08:55:06Z", "updated_at": "2018-12-17T16:14:34Z", "closed_at": "2018-12-17T16:14:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The methods `IntervalTree.search`, `.begin`, and `.end` can cause deprecation warnings:\r\n\r\n    intervaltree/intervaltree.py:806: DeprecationWarning: sorted_dict.iloc is deprecated. Use SortedDict.keys() instead.\r\n    boundary_table.iloc[index] for index in xrange(bound_begin, bound_end)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/68", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/68/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/68/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/68", "id": 324601727, "node_id": "MDU6SXNzdWUzMjQ2MDE3Mjc=", "number": 68, "title": "Pin sortedcontainers or update code for breaking changes", "user": {"login": "goodspark", "id": 29210237, "node_id": "MDQ6VXNlcjI5MjEwMjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/29210237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodspark", "html_url": "https://github.com/goodspark", "followers_url": "https://api.github.com/users/goodspark/followers", "following_url": "https://api.github.com/users/goodspark/following{/other_user}", "gists_url": "https://api.github.com/users/goodspark/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodspark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodspark/subscriptions", "organizations_url": "https://api.github.com/users/goodspark/orgs", "repos_url": "https://api.github.com/users/goodspark/repos", "events_url": "https://api.github.com/users/goodspark/events{/privacy}", "received_events_url": "https://api.github.com/users/goodspark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-19T05:03:12Z", "updated_at": "2018-05-30T18:41:13Z", "closed_at": "2018-05-29T01:36:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[sortedcontainers 2.x](http://www.grantjenks.com/docs/sortedcontainers/history.html#v2) was released today and has breaking API changes.\r\n\r\n> SortedKeysView has also replaced SortedDict.iloc as a better interface for indexing.\r\n\r\nHere's an example of errors caused by this change:\r\n```\r\n../../.tox/py27/lib/python2.7/site-packages/intervaltree/intervaltree.py:806: in search\r\n    boundary_table.iloc[index] for index in xrange(bound_begin, bound_end)\r\n../../.tox/py27/lib/python2.7/site-packages/intervaltree/node.py:285: in search_overlap\r\n    for j in point_list:\r\n../../.tox/py27/lib/python2.7/site-packages/intervaltree/intervaltree.py:806: in <genexpr>\r\n    boundary_table.iloc[index] for index in xrange(bound_begin, bound_end)\r\nE   AttributeError: 'SortedDict' object has no attribute 'iloc'\r\n```\r\n\r\n- intervaltree 2.1.0\r\n- sortedcontainers 2.0.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/67", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/67/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/67/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/67", "id": 311770684, "node_id": "MDU6SXNzdWUzMTE3NzA2ODQ=", "number": 67, "title": "Inserting intervals in specific sequence results in invalid tree", "user": {"login": "suola", "id": 11820933, "node_id": "MDQ6VXNlcjExODIwOTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11820933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suola", "html_url": "https://github.com/suola", "followers_url": "https://api.github.com/users/suola/followers", "following_url": "https://api.github.com/users/suola/following{/other_user}", "gists_url": "https://api.github.com/users/suola/gists{/gist_id}", "starred_url": "https://api.github.com/users/suola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suola/subscriptions", "organizations_url": "https://api.github.com/users/suola/orgs", "repos_url": "https://api.github.com/users/suola/repos", "events_url": "https://api.github.com/users/suola/events{/privacy}", "received_events_url": "https://api.github.com/users/suola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-05T21:11:12Z", "updated_at": "2018-05-29T01:32:46Z", "closed_at": "2018-05-29T01:32:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Caught the following error in my unit tests when randomizing the inserted intervals. Was able to repeat at least in Linux and macOS python 3.6.x.\r\n\r\nExpected result:\r\n\r\n```\r\nAssertionError: Error: Overlaps ancestor (3452226160)!\r\nInterval(3447717888, 3456106496)\r\n\r\nNode<3447717888, depth=1, balance=0>\r\n Interval(3447717888, 3456106496)\r\n```\r\n\r\nTest case\r\n\r\n```python\r\nintervals = (\r\n  (3657433088, 3665821696),\r\n  (2415132672, 2415394816),\r\n  (201326592, 268435456),\r\n  (163868672, 163870720),\r\n  (3301965824, 3303014400),\r\n  (4026531840, 4294967296),\r\n  (3579899904, 3579904000),\r\n  (3439329280, 3443523584),\r\n  (3431201536, 3431201664),\r\n  (3589144576, 3589275648),\r\n  (2531000320, 2531033088),\r\n  (4187287552, 4187291648),\r\n  (3561766912, 3561783296),\r\n  (3046182912, 3046187008),\r\n  (3506438144, 3506962432),\r\n  (3724953872, 3724953888),\r\n  (3518234624, 3518496768),\r\n  (3840335872, 3840344064),\r\n  (3492279181, 3492279182),\r\n  (3447717888, 3456106496),\r\n  (3589390336, 3589398528),\r\n  (3486372962, 3486372963),\r\n  (3456106496, 3472883712),\r\n  (3508595496, 3508595498),\r\n  (3511853376, 3511853440),\r\n  (3452226160, 3452226168),\r\n  (3544510720, 3544510736),\r\n  (3525894144, 3525902336),\r\n  (3524137920, 3524137984),\r\n  (3508853334, 3508853335),\r\n  (3467337728, 3467341824),\r\n  (3463212256, 3463212260),\r\n  (3446643456, 3446643712),\r\n  (3473834176, 3473834240),\r\n  (3487039488, 3487105024),\r\n  (3444686112, 3444686144),\r\n  (3459268608, 3459276800),\r\n  (3483369472, 3485466624),\r\n)\r\n\r\nfrom intervaltree import IntervalTree, Interval\r\n\r\ntree = IntervalTree()\r\n\r\nfor interval in intervals:\r\n  tree.addi(*interval)\r\n\r\ntree.verify()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/62", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/62/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/62/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/62", "id": 265832185, "node_id": "MDU6SXNzdWUyNjU4MzIxODU=", "number": 62, "title": "Add a `strict` option to prevent merging adjacent intervals", "user": {"login": "ntezak", "id": 1573961, "node_id": "MDQ6VXNlcjE1NzM5NjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1573961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ntezak", "html_url": "https://github.com/ntezak", "followers_url": "https://api.github.com/users/ntezak/followers", "following_url": "https://api.github.com/users/ntezak/following{/other_user}", "gists_url": "https://api.github.com/users/ntezak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ntezak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ntezak/subscriptions", "organizations_url": "https://api.github.com/users/ntezak/orgs", "repos_url": "https://api.github.com/users/ntezak/repos", "events_url": "https://api.github.com/users/ntezak/events{/privacy}", "received_events_url": "https://api.github.com/users/ntezak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T16:26:45Z", "updated_at": "2018-05-29T01:36:54Z", "closed_at": "2018-05-29T01:36:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per your own documentation, the end point of an interval are not considered to be included in the interval.\r\nFurthermore if I evaluate\r\n```python\r\n>>> Interval(1, 2).overlaps(Interval(2, 3))\r\n    False\r\n```\r\nIt seems like there already exists a PR for this:\r\nhttps://github.com/chaimleib/intervaltree/pull/43\r\n\r\nI would be happy to add unit tests if that helps getting this merged.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/61", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/61/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/61/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/61", "id": 259513310, "node_id": "MDU6SXNzdWUyNTk1MTMzMTA=", "number": 61, "title": "PyPy support", "user": {"login": "mjatti", "id": 6136043, "node_id": "MDQ6VXNlcjYxMzYwNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6136043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjatti", "html_url": "https://github.com/mjatti", "followers_url": "https://api.github.com/users/mjatti/followers", "following_url": "https://api.github.com/users/mjatti/following{/other_user}", "gists_url": "https://api.github.com/users/mjatti/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjatti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjatti/subscriptions", "organizations_url": "https://api.github.com/users/mjatti/orgs", "repos_url": "https://api.github.com/users/mjatti/repos", "events_url": "https://api.github.com/users/mjatti/events{/privacy}", "received_events_url": "https://api.github.com/users/mjatti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-21T14:20:29Z", "updated_at": "2018-05-29T01:36:09Z", "closed_at": "2018-05-29T01:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'd like to use intervaltree within a pypy based Docker container. Running docker build with base image python:2.7-14-slim works smoothly, but the same setup with base image pypy:2-5.8-slim exits with \"intervaltree-2.1.0-cp27-none-any.whl is not a supported wheel on this platform.\"\r\n\r\nTests for intervaltree pass with \"pypy setup.py test\". My host is OSX and PyPy version: Python 2.7.13[pypy-5.8.0-final].\r\n\r\nIs there some specific reason for not having pypy listed in setup.py classifiers?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/60", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/60/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/60/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/60", "id": 256827724, "node_id": "MDU6SXNzdWUyNTY4Mjc3MjQ=", "number": 60, "title": "Return index of the interval", "user": {"login": "andreydung", "id": 1322198, "node_id": "MDQ6VXNlcjEzMjIxOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1322198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreydung", "html_url": "https://github.com/andreydung", "followers_url": "https://api.github.com/users/andreydung/followers", "following_url": "https://api.github.com/users/andreydung/following{/other_user}", "gists_url": "https://api.github.com/users/andreydung/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreydung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreydung/subscriptions", "organizations_url": "https://api.github.com/users/andreydung/orgs", "repos_url": "https://api.github.com/users/andreydung/repos", "events_url": "https://api.github.com/users/andreydung/events{/privacy}", "received_events_url": "https://api.github.com/users/andreydung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-11T20:13:18Z", "updated_at": "2019-03-05T20:31:18Z", "closed_at": "2017-09-11T22:44:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could tree.search(Interval) returns the index of the intervals? Assuming that originally, intervals are indexed from 0 to N when inserted into the tree.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/59", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/59/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/59/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/59", "id": 251999271, "node_id": "MDU6SXNzdWUyNTE5OTkyNzE=", "number": 59, "title": "support for null intervals", "user": {"login": "mtivadar", "id": 8540032, "node_id": "MDQ6VXNlcjg1NDAwMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8540032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtivadar", "html_url": "https://github.com/mtivadar", "followers_url": "https://api.github.com/users/mtivadar/followers", "following_url": "https://api.github.com/users/mtivadar/following{/other_user}", "gists_url": "https://api.github.com/users/mtivadar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtivadar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtivadar/subscriptions", "organizations_url": "https://api.github.com/users/mtivadar/orgs", "repos_url": "https://api.github.com/users/mtivadar/repos", "events_url": "https://api.github.com/users/mtivadar/events{/privacy}", "received_events_url": "https://api.github.com/users/mtivadar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-22T15:33:40Z", "updated_at": "2020-06-05T09:17:12Z", "closed_at": "2018-12-18T02:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "it should be nice to support null intervals, like [4, 4]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/57", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/57/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/57/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/57", "id": 241082925, "node_id": "MDU6SXNzdWUyNDEwODI5MjU=", "number": 57, "title": "Add support for findings intervals that contain a given interval", "user": {"login": "dan-zheng", "id": 5590046, "node_id": "MDQ6VXNlcjU1OTAwNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5590046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-zheng", "html_url": "https://github.com/dan-zheng", "followers_url": "https://api.github.com/users/dan-zheng/followers", "following_url": "https://api.github.com/users/dan-zheng/following{/other_user}", "gists_url": "https://api.github.com/users/dan-zheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-zheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-zheng/subscriptions", "organizations_url": "https://api.github.com/users/dan-zheng/orgs", "repos_url": "https://api.github.com/users/dan-zheng/repos", "events_url": "https://api.github.com/users/dan-zheng/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-zheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-06T20:54:32Z", "updated_at": "2019-03-06T05:44:55Z", "closed_at": "2019-03-06T05:44:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, `tree.search()` only supports findings intervals that overlap or are contained by a given interval. However, there is no support for finding intervals that contain a given interval.\r\n\r\nThis could be added in a straightforward manner by replacing the boolean `strict` option with one that accepts three values (overlap, contain, or contained by).\r\n\r\nThe code at the end of `search()` could be edited to something like:\r\n```python\r\n# option is a parameter to search() that specifies the search type\r\nif option == 'contains':\r\n    result = set(\r\n        iv for iv in result\r\n        if iv.begin <= begin and iv.end >= end\r\n    )\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/54", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/54/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/54/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/54", "id": 219540772, "node_id": "MDU6SXNzdWUyMTk1NDA3NzI=", "number": 54, "title": "Need to override the function __sizeof__", "user": {"login": "Sanghyun-Hong", "id": 10199125, "node_id": "MDQ6VXNlcjEwMTk5MTI1", "avatar_url": "https://avatars2.githubusercontent.com/u/10199125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sanghyun-Hong", "html_url": "https://github.com/Sanghyun-Hong", "followers_url": "https://api.github.com/users/Sanghyun-Hong/followers", "following_url": "https://api.github.com/users/Sanghyun-Hong/following{/other_user}", "gists_url": "https://api.github.com/users/Sanghyun-Hong/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sanghyun-Hong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sanghyun-Hong/subscriptions", "organizations_url": "https://api.github.com/users/Sanghyun-Hong/orgs", "repos_url": "https://api.github.com/users/Sanghyun-Hong/repos", "events_url": "https://api.github.com/users/Sanghyun-Hong/events{/privacy}", "received_events_url": "https://api.github.com/users/Sanghyun-Hong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-05T10:43:40Z", "updated_at": "2019-03-05T20:28:44Z", "closed_at": "2018-05-29T01:39:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "To know the total size of a IntervalTree instance, the class implementation should include (or override) the method `__sizeof__`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/53", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/53/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/53/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/53", "id": 212495304, "node_id": "MDU6SXNzdWUyMTI0OTUzMDQ=", "number": 53, "title": "Crash when chopping", "user": {"login": "Yquetzal", "id": 961220, "node_id": "MDQ6VXNlcjk2MTIyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/961220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yquetzal", "html_url": "https://github.com/Yquetzal", "followers_url": "https://api.github.com/users/Yquetzal/followers", "following_url": "https://api.github.com/users/Yquetzal/following{/other_user}", "gists_url": "https://api.github.com/users/Yquetzal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yquetzal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yquetzal/subscriptions", "organizations_url": "https://api.github.com/users/Yquetzal/orgs", "repos_url": "https://api.github.com/users/Yquetzal/repos", "events_url": "https://api.github.com/users/Yquetzal/events{/privacy}", "received_events_url": "https://api.github.com/users/Yquetzal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-07T17:01:03Z", "updated_at": "2018-05-29T01:52:14Z", "closed_at": "2018-05-29T01:52:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I ask for a chop operation, I get a crash over a KeyError.\r\n\r\nI copy paste the crash details below, but if you want the full structure that causes the crash I can export it just before the crash.\r\n\r\nsome chop operation works, so I assume it is a particular case that causes the crash. For now I'll manually recreate a tree, but of course it is highly inefficient.\r\n\r\nOtherwise, wonderful work, thank you so much!\r\n\r\nTraceback (most recent call last):\r\nNode<1353592980.0, depth=6, balance=1>\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 245, in remove_interval_helper\r\n Interval(1353592980.0, 1353593000.0, frozenset({'626', '698'}))\r\n Interval(1353592980.0, 1353593000.0, frozenset({'616', '683'}))\r\n<:  Node<1353592880.0, depth=4, balance=-1>\r\n     Interval(1353592880.0, 1353592900.0, frozenset({'667', '683'}))\r\n     Interval(1353592880.0, 1353592900.0, frozenset({'613', '661'}))\r\n     Interval(1353592880.0, 1353592900.0, frozenset({'626', '698'}))\r\n     Interval(1353592880.0, 1353592920.0, frozenset({'616', '683'}))\r\n     Interval(1353592880.0, 1353592920.0, frozenset({'627', '635'}))\r\n    <:  Node<1353592820.0, depth=3, balance=0>\r\n         Interval(1353592800.0, 1353592840.0, frozenset({'683', '644'}))\r\n         Interval(1353592800.0, 1353592880.0, frozenset({'628', '667'}))\r\n         Interval(1353592820.0, 1353592840.0, frozenset({'627', '635'}))\r\n         Interval(1353592820.0, 1353592840.0, frozenset({'667', '609'}))\r\n         Interval(1353592820.0, 1353592840.0, frozenset({'1613', '1492'}))\r\n         Interval(1353592820.0, 1353592840.0, frozenset({'667', '692'}))\r\n         Interval(1353592820.0, 1353592860.0, frozenset({'636', '635'}))\r\n        <:  Node<1353592800.0, depth=2, balance=-1>\r\n             Interval(1353592780.0, 1353592820.0, frozenset({'663', '686'}))\r\n             Interval(1353592800.0, 1353592820.0, frozenset({'831', '860'}))\r\n             Interval(1353592800.0, 1353592820.0, frozenset({'616', '683'}))\r\n             Interval(1353592800.0, 1353592820.0, frozenset({'683', '635'}))\r\n            <:  Node<1353592780.0, depth=1, balance=0>\r\n                 Interval(1353592780.0, 1353592800.0, frozenset({'667', '696'}))\r\n                 Interval(1353592780.0, 1353592800.0, frozenset({'694', '635'}))\r\n                 Interval(1353592780.0, 1353592800.0, frozenset({'1660', '1662'}))\r\n                 Interval(1353592780.0, 1353592800.0, frozenset({'696', '663'}))\r\n        >:  Node<1353592840.0, depth=2, balance=1>\r\n             Interval(1353592840.0, 1353592860.0, frozenset({'626', '698'}))\r\n             Interval(1353592840.0, 1353592860.0, frozenset({'616', '683'}))\r\n             Interval(1353592840.0, 1353592860.0, frozenset({'636', '627'}))\r\n             Interval(1353592840.0, 1353592880.0, frozenset({'658', '623'}))\r\n             Interval(1353592840.0, 1353592880.0, frozenset({'661', '644'}))\r\n            >:  Node<1353592860.0, depth=1, balance=0>\r\n                 Interval(1353592860.0, 1353592880.0, frozenset({'1613', '1492'}))\r\n                 Interval(1353592860.0, 1353592880.0, frozenset({'628', '692'}))\r\n                 Interval(1353592860.0, 1353592880.0, frozenset({'696', '648'}))\r\n    >:  Node<1353592920.0, depth=2, balance=0>\r\n         Interval(1353592920.0, 1353592940.0, frozenset({'683', '692'}))\r\n         Interval(1353592920.0, 1353592940.0, frozenset({'616', '623'}))\r\n         Interval(1353592920.0, 1353592960.0, frozenset({'663', '686'}))\r\n        <:  Node<1353592900.0, depth=1, balance=0>\r\n             Interval(1353592900.0, 1353592920.0, frozenset({'1613', '1492'}))\r\n             Interval(1353592900.0, 1353592920.0, frozenset({'683', '654'}))\r\n        >:  Node<1353592940.0, depth=1, balance=0>\r\n             Interval(1353592940.0, 1353592960.0, frozenset({'667', '644'}))\r\n             Interval(1353592940.0, 1353592960.0, frozenset({'666', '644'}))\r\n             Interval(1353592940.0, 1353593000.0, frozenset({'1613', '1492'}))\r\n>:  Node<1353593220.0, depth=5, balance=-1>\r\n     Interval(1353593220.0, 1353593240.0, frozenset({'661', '817'}))\r\n    <:  Node<1353593120.0, depth=4, balance=-1>\r\n         Interval(1353593100.0, 1353593140.0, frozenset({'1613', '1492'}))\r\n         Interval(1353593120.0, 1353593140.0, frozenset({'1671', '1632'}))\r\n        <:  Node<1353593080.0, depth=3, balance=-1>\r\n             Interval(1353593080.0, 1353593100.0, frozenset({'690', '627'}))\r\n            <:  Node<1353593040.0, depth=2, balance=-1>\r\n                 Interval(1353593040.0, 1353593080.0, frozenset({'623', '666'}))\r\n                 Interval(1353593040.0, 1353593080.0, frozenset({'1613', '1492'}))\r\n                <:  Node<1353593020.0, depth=1, balance=0>\r\n                     Interval(1353593020.0, 1353593040.0, frozenset({'601', '626'}))\r\n            >:  Node<1353593100.0, depth=1, balance=0>\r\n                 Interval(1353593100.0, 1353593120.0, frozenset({'616', '683'}))\r\n                 Interval(1353593100.0, 1353593120.0, frozenset({'661', '817'}))\r\n        >:  Node<1353593140.0, depth=2, balance=1>\r\n             Interval(1353593140.0, 1353593180.0, frozenset({'616', '683'}))\r\n            >:  Node<1353593200.0, depth=1, balance=0>\r\n                 Interval(1353593200.0, 1353593220.0, frozenset({'1613', '1492'}))\r\n                 Interval(1353593200.0, 1353593220.0, frozenset({'833', '609'}))\r\n    >:  Node<1353593260.0, depth=3, balance=1>\r\n         Interval(1353593240.0, 1353593280.0, frozenset({'651', '648'}))\r\n         Interval(1353593260.0, 1353593280.0, frozenset({'803', '849'}))\r\n        <:  Node<1353593240.0, depth=1, balance=0>\r\n             Interval(1353593240.0, 1353593260.0, frozenset({'1613', '1492'}))\r\n        >:  Node<1353593360.0, depth=2, balance=1>\r\n             Interval(1353593360.0, 1353593380.0, frozenset({'690', '635'}))\r\n             Interval(1353593360.0, 1353593380.0, frozenset({'627', '635'}))\r\n             Interval(1353593360.0, 1353593400.0, frozenset({'661', '635'}))\r\n            >:  Node<1353593380.0, depth=1, balance=0>\r\n                 Interval(1353593380.0, 1353593400.0, frozenset({'690', '661'}))\r\n                 Interval(1353593380.0, 1353593400.0, frozenset({'1613', '1170'}))\r\n\r\n    self.s_center.remove(interval)\r\nKeyError: Interval(1353592940.0, 1353593000.0, frozenset({'1613', '1492'}))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/remy/GitHub/DCD/UsefulFunction.py\", line 32, in <module>\r\n    SocioPatternClasses.readGeneric(file,inputSNinfos,format=\"SP\")\r\n  File \"/Users/remy/GitHub/DCD/utilsConverter/DyNoHandler.py\", line 114, in readGeneric\r\n    self.readSPformat(inputFile,SNinfo,removeInactiveNodes=removeInactiveNodes)\r\n  File \"/Users/remy/GitHub/DCD/utilsConverter/DyNoHandler.py\", line 197, in readSPformat\r\n    self.truncate(0, 1)\r\n  File \"/Users/remy/GitHub/DCD/utilsConverter/DyNoHandler.py\", line 382, in truncate\r\n    self.edges.conserveBetween(start,end)\r\n  File \"/Users/remy/GitHub/DCD/utilsConverter/Tools/IntervalStruct.py\", line 94, in conserveBetween\r\n    self.chop(1353283620,self.end())\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/intervaltree.py\", line 508, in chop\r\n    self.remove_envelop(begin, end)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/intervaltree.py\", line 486, in remove_envelop\r\n    self.remove(iv)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/intervaltree.py\", line 361, in remove\r\n    self.top_node = self.top_node.remove(interval)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 211, in remove\r\n    return self.remove_interval_helper(interval, done, should_raise_error=True)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 270, in remove_interval_helper\r\n    self[direction] = self[direction].remove_interval_helper(interval, done, should_raise_error)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 270, in remove_interval_helper\r\n    self[direction] = self[direction].remove_interval_helper(interval, done, should_raise_error)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 270, in remove_interval_helper\r\n    self[direction] = self[direction].remove_interval_helper(interval, done, should_raise_error)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 270, in remove_interval_helper\r\n    self[direction] = self[direction].remove_interval_helper(interval, done, should_raise_error)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 270, in remove_interval_helper\r\n    self[direction] = self[direction].remove_interval_helper(interval, done, should_raise_error)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 270, in remove_interval_helper\r\n    self[direction] = self[direction].remove_interval_helper(interval, done, should_raise_error)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 270, in remove_interval_helper\r\n    self[direction] = self[direction].remove_interval_helper(interval, done, should_raise_error)\r\n  File \"/Users/remy/Dropbox/python3CLEAN/lib/python3.5/site-packages/intervaltree/node.py\", line 248, in remove_interval_helper\r\n    raise KeyError(interval)\r\nKeyError: Interval(1353592940.0, 1353593000.0, frozenset({'1613', '1492'}))\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/52", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/52/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/52/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/52", "id": 211355506, "node_id": "MDU6SXNzdWUyMTEzNTU1MDY=", "number": 52, "title": "Feature request: given a point inside an interval,  get the length point-begin and end-point", "user": {"login": "gbonline", "id": 3273873, "node_id": "MDQ6VXNlcjMyNzM4NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3273873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbonline", "html_url": "https://github.com/gbonline", "followers_url": "https://api.github.com/users/gbonline/followers", "following_url": "https://api.github.com/users/gbonline/following{/other_user}", "gists_url": "https://api.github.com/users/gbonline/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbonline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbonline/subscriptions", "organizations_url": "https://api.github.com/users/gbonline/orgs", "repos_url": "https://api.github.com/users/gbonline/repos", "events_url": "https://api.github.com/users/gbonline/events{/privacy}", "received_events_url": "https://api.github.com/users/gbonline/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-02T10:51:56Z", "updated_at": "2019-03-05T20:28:19Z", "closed_at": "2018-05-29T02:07:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "A little completation to Interval class:\r\nif exists the contains_point(point) method, \r\nadd the lengthFromTheBegin(point) and a lengthToTheEnd(point) methods\r\n:-)\r\nGiorgio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/51", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/51/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/51/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/51", "id": 205008162, "node_id": "MDU6SXNzdWUyMDUwMDgxNjI=", "number": 51, "title": "A different intersection operation", "user": {"login": "alexlenail", "id": 2761597, "node_id": "MDQ6VXNlcjI3NjE1OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2761597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexlenail", "html_url": "https://github.com/alexlenail", "followers_url": "https://api.github.com/users/alexlenail/followers", "following_url": "https://api.github.com/users/alexlenail/following{/other_user}", "gists_url": "https://api.github.com/users/alexlenail/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexlenail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexlenail/subscriptions", "organizations_url": "https://api.github.com/users/alexlenail/orgs", "repos_url": "https://api.github.com/users/alexlenail/repos", "events_url": "https://api.github.com/users/alexlenail/events{/privacy}", "received_events_url": "https://api.github.com/users/alexlenail/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-02T21:55:26Z", "updated_at": "2019-03-05T20:27:41Z", "closed_at": "2017-02-03T19:11:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a big `IntervalTree` and a small `IntervalTree`. For convenience, let's call them `A` and `B`. \r\n\r\nI want to do a big overlap query, such that I get, for every member of B, a list of A intervals that overlap with it. `tree.search` does this for a single point or interval, so I *can* iterate one tree, I suppose, but I suspect this function exists in the library, I just can't seem to find it. \r\n\r\nThe documentation lists `result_tree = tree1 & tree2` but I don't want a result tree, I want a list of all the intervals from `tree2` which intersect with each of the intervals in `tree1`. Presumably the other functions listed under the intersection bullet do the same thing. \r\n\r\n---\r\n\r\nOn another note, the documentation says: \r\n```\r\n- Membership queries\r\n\r\ninterval_obj in tree (this is fastest, O(1))\r\ntree.containsi(begin, end, data)\r\ntree.overlaps(point)\r\ntree.overlaps(begin, end)\r\n```\r\n\r\nWhy is `tree.overlaps` a membership query? That seems unintuitive, when a couple bullets above, you have `Overlap queries`. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/50", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/50/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/50/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/50", "id": 204727807, "node_id": "MDU6SXNzdWUyMDQ3Mjc4MDc=", "number": 50, "title": "what are allowable formats for data? ", "user": {"login": "alexlenail", "id": 2761597, "node_id": "MDQ6VXNlcjI3NjE1OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2761597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexlenail", "html_url": "https://github.com/alexlenail", "followers_url": "https://api.github.com/users/alexlenail/followers", "following_url": "https://api.github.com/users/alexlenail/following{/other_user}", "gists_url": "https://api.github.com/users/alexlenail/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexlenail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexlenail/subscriptions", "organizations_url": "https://api.github.com/users/alexlenail/orgs", "repos_url": "https://api.github.com/users/alexlenail/repos", "events_url": "https://api.github.com/users/alexlenail/events{/privacy}", "received_events_url": "https://api.github.com/users/alexlenail/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-01T22:40:38Z", "updated_at": "2019-03-05T20:25:23Z", "closed_at": "2017-02-01T22:55:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. My data is a list of these:\r\n\r\n```\r\n(16857,\r\n  17751,\r\n  ['uc009vjc.1',\r\n   'chr1',\r\n   '-',\r\n   16857,\r\n   17751,\r\n   16857,\r\n   16857,\r\n   2,\r\n   '16857,17232,',\r\n   '17055,17751,',\r\n   nan,\r\n   'uc009vjc.1']),\r\n```\r\nAnd when I `IntervalTree(intervals)` I get:\r\n\r\n```\r\n  File \".../venv/lib/python2.7/site-packages/intervaltree/intervaltree.py\", line 246, in __init__\r\n    intervals = set(intervals) if intervals is not None else set()\r\nTypeError: unhashable type: 'list'\r\n```\r\n\r\nIs `data` not allowed to be a list? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/49", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/49/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/49/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/49", "id": 203883370, "node_id": "MDU6SXNzdWUyMDM4ODMzNzA=", "number": 49, "title": "Feature request: add method to compute the numerical overlap between intervals", "user": {"login": "tchajed", "id": 1255037, "node_id": "MDQ6VXNlcjEyNTUwMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1255037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tchajed", "html_url": "https://github.com/tchajed", "followers_url": "https://api.github.com/users/tchajed/followers", "following_url": "https://api.github.com/users/tchajed/following{/other_user}", "gists_url": "https://api.github.com/users/tchajed/gists{/gist_id}", "starred_url": "https://api.github.com/users/tchajed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tchajed/subscriptions", "organizations_url": "https://api.github.com/users/tchajed/orgs", "repos_url": "https://api.github.com/users/tchajed/repos", "events_url": "https://api.github.com/users/tchajed/events{/privacy}", "received_events_url": "https://api.github.com/users/tchajed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-29T17:40:05Z", "updated_at": "2019-03-04T19:55:31Z", "closed_at": "2019-03-04T19:55:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "For my use case, I search a tree for intervals overlapping some `interval0`, then add up the actual overlaps with `interval0`. I'm using this function:\r\n\r\n```python\r\ndef overlap(interval1, interval2):\r\n    # interval2's begin is in interval1\r\n    if interval1.begin <= interval2.begin <= interval1.end:\r\n        return min(interval1.end, interval2.end) - interval2.begin\r\n    # interval1's begin is in interval2\r\n    if interval2.begin <= interval1.begin <= interval2.end:\r\n        return min(interval2.end, interval1.end) - interval1.begin\r\n    return 0\r\n```\r\n\r\nThis overlap computation is easy to get wrong, so it would be nice if `intervaltree` provided a method to do so (eg, `interval.overlap(other)`) that returned a numerical overlap, or 0 if there is no overlap.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/47", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/47/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/47/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/47", "id": 186601358, "node_id": "MDU6SXNzdWUxODY2MDEzNTg=", "number": 47, "title": "Save and reload interval tree quickly", "user": {"login": "rob-myers", "id": 1658537, "node_id": "MDQ6VXNlcjE2NTg1Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1658537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rob-myers", "html_url": "https://github.com/rob-myers", "followers_url": "https://api.github.com/users/rob-myers/followers", "following_url": "https://api.github.com/users/rob-myers/following{/other_user}", "gists_url": "https://api.github.com/users/rob-myers/gists{/gist_id}", "starred_url": "https://api.github.com/users/rob-myers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rob-myers/subscriptions", "organizations_url": "https://api.github.com/users/rob-myers/orgs", "repos_url": "https://api.github.com/users/rob-myers/repos", "events_url": "https://api.github.com/users/rob-myers/events{/privacy}", "received_events_url": "https://api.github.com/users/rob-myers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-01T17:55:49Z", "updated_at": "2016-11-02T17:35:31Z", "closed_at": "2016-11-02T10:00:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nIs it possible to save an interval tree, so that it can be loaded quickly later?\r\nOne could certainly save the set of intervals, but I want to avoid the rebuild time.\r\nCheers.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/45", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/45/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/45/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/45", "id": 171503788, "node_id": "MDU6SXNzdWUxNzE1MDM3ODg=", "number": 45, "title": "Is there a method to get any one overlapping interval from the tree with another interval as argument?", "user": {"login": "AA33", "id": 883671, "node_id": "MDQ6VXNlcjg4MzY3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/883671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AA33", "html_url": "https://github.com/AA33", "followers_url": "https://api.github.com/users/AA33/followers", "following_url": "https://api.github.com/users/AA33/following{/other_user}", "gists_url": "https://api.github.com/users/AA33/gists{/gist_id}", "starred_url": "https://api.github.com/users/AA33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AA33/subscriptions", "organizations_url": "https://api.github.com/users/AA33/orgs", "repos_url": "https://api.github.com/users/AA33/repos", "events_url": "https://api.github.com/users/AA33/events{/privacy}", "received_events_url": "https://api.github.com/users/AA33/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1259921720, "node_id": "MDU6TGFiZWwxMjU5OTIxNzIw", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/Q&A", "name": "Q&A", "color": "8ff76c", "default": false, "description": "Questions and answers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-16T19:59:46Z", "updated_at": "2019-03-05T20:23:24Z", "closed_at": "2016-09-20T23:44:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more of a usage question than an actual issue with the library.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/41", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/41/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/41/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/41", "id": 144566564, "node_id": "MDU6SXNzdWUxNDQ1NjY1NjQ=", "number": 41, "title": "Interval removal breaks this tree", "user": {"login": "escalonn", "id": 2515013, "node_id": "MDQ6VXNlcjI1MTUwMTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2515013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/escalonn", "html_url": "https://github.com/escalonn", "followers_url": "https://api.github.com/users/escalonn/followers", "following_url": "https://api.github.com/users/escalonn/following{/other_user}", "gists_url": "https://api.github.com/users/escalonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/escalonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/escalonn/subscriptions", "organizations_url": "https://api.github.com/users/escalonn/orgs", "repos_url": "https://api.github.com/users/escalonn/repos", "events_url": "https://api.github.com/users/escalonn/events{/privacy}", "received_events_url": "https://api.github.com/users/escalonn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-30T11:58:07Z", "updated_at": "2018-06-17T20:22:44Z", "closed_at": "2018-05-29T01:49:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I ran `chop` on a few thousand `IntervalTree`s, and found that it crashed on several of them. Looking at the library code showed that `remove` failed to find `Interval`s where they were supposed to be. I tested until I found something more consistent.\n\nHere, I add 9 intervals to an empty tree (in sorted order, so I could have used an iterable). Then, I remove the interval in the root node, leaving the tree with a broken node. Trying to remove one of the intervals left under that node then raises a `KeyError`.\n\n```\n>>> from intervaltree import IntervalTree\n>>> t = IntervalTree()\n>>> t.addi(860, 917, 1)\n>>> t.addi(860, 917, 2)\n>>> t.addi(860, 917, 3)\n>>> t.addi(860, 917, 4)\n>>> t.addi(871, 917, 1)\n>>> t.addi(871, 917, 2)\n>>> t.addi(871, 917, 3)\n>>> t.addi(961, 986, 1)\n>>> t.addi(1047, 1064, 1)\n>>> t.addi(1047, 1064, 2)\n>>> t.removei(961, 986, 1) # remove root node. t.verify() would fail now\n>>> t.removei(871, 917, 3)\nNode<871, depth=2, balance=0>\n Interval(860, 917, 1)\n Interval(860, 917, 2)\n Interval(860, 917, 3)\n Interval(860, 917, 4)\n<:  Node<871, depth=1, balance=0>\n     Interval(871, 917, 1)\n     Interval(871, 917, 2)\n     Interval(871, 917, 3)\n>:  Node<1047, depth=1, balance=0>\n     Interval(1047, 1064, 1)\n     Interval(1047, 1064, 2)\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/site-packages/intervaltree/intervaltree.py\", line 372, in removei\n    return self.remove(Interval(begin, end, data))\n  File \"/usr/lib/python2.7/site-packages/intervaltree/intervaltree.py\", line 361, in remove\n    self.top_node = self.top_node.remove(interval)\n  File \"/usr/lib/python2.7/site-packages/intervaltree/node.py\", line 211, in remove\n    return self.remove_interval_helper(interval, done, should_raise_error=True)\n  File \"/usr/lib/python2.7/site-packages/intervaltree/node.py\", line 248, in remove_interval_helper\n    raise KeyError(interval)\nKeyError: Interval(871, 917, 3)\n```\n\nThat's with Python 2.7; the same behavior exists in Python 3.4.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/37", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/37/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/37/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/37", "id": 136068053, "node_id": "MDU6SXNzdWUxMzYwNjgwNTM=", "number": 37, "title": "symmetric_difference_update and intersection_update raise a RuntimeError", "user": {"login": "ProgVal", "id": 406946, "node_id": "MDQ6VXNlcjQwNjk0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/406946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ProgVal", "html_url": "https://github.com/ProgVal", "followers_url": "https://api.github.com/users/ProgVal/followers", "following_url": "https://api.github.com/users/ProgVal/following{/other_user}", "gists_url": "https://api.github.com/users/ProgVal/gists{/gist_id}", "starred_url": "https://api.github.com/users/ProgVal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ProgVal/subscriptions", "organizations_url": "https://api.github.com/users/ProgVal/orgs", "repos_url": "https://api.github.com/users/ProgVal/repos", "events_url": "https://api.github.com/users/ProgVal/events{/privacy}", "received_events_url": "https://api.github.com/users/ProgVal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-24T13:55:33Z", "updated_at": "2018-12-18T04:07:15Z", "closed_at": "2018-12-18T04:07:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\n`symmetric_difference_update` updates the current tree while iterating on it, which raises a RuntimeError.\n\n``` python\n$ PYTHONHASHSEED=0 python3\nPython 3.4.2 (default, Oct  8 2014, 10:45:20) \n[GCC 4.9.1] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from intervaltree import IntervalTree, Interval\n>>> t1 = IntervalTree({Interval(1, 2), Interval(2, 3), Interval(3, 4)})\n>>> t2 = IntervalTree({Interval(3, 4)})\n>>> t1.symmetric_difference_update(t2)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/progval/.local/lib/python3.4/site-packages/intervaltree/intervaltree.py\", line 456, in symmetric_difference_update\n    for iv in self:\nRuntimeError: Set changed size during iteration\n```\n\nNote that this error will not happen if the only modification happens on the last iteration.\n\nVersion: 2.1.0, from PyPI.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/36", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/36/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/36/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/36", "id": 125996733, "node_id": "MDU6SXNzdWUxMjU5OTY3MzM=", "number": 36, "title": "Cause segment fault when unpickle a large interval tree", "user": {"login": "ChangerLow", "id": 5843611, "node_id": "MDQ6VXNlcjU4NDM2MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5843611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChangerLow", "html_url": "https://github.com/ChangerLow", "followers_url": "https://api.github.com/users/ChangerLow/followers", "following_url": "https://api.github.com/users/ChangerLow/following{/other_user}", "gists_url": "https://api.github.com/users/ChangerLow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChangerLow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChangerLow/subscriptions", "organizations_url": "https://api.github.com/users/ChangerLow/orgs", "repos_url": "https://api.github.com/users/ChangerLow/repos", "events_url": "https://api.github.com/users/ChangerLow/events{/privacy}", "received_events_url": "https://api.github.com/users/ChangerLow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-11T17:34:26Z", "updated_at": "2016-01-12T13:15:57Z", "closed_at": "2016-01-12T13:15:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "when using pickle.loads(pickle.dumps(tree)) , it ran out a segment fault or  sometimes \"RuntimeError: ('maximum recursion depth exceeded'\"(in diffrent machines) .  the tree size is about 40000.\n\nTraceback (most recent call last):\n  File \"./pickle.py\", line 56, in <module>\n  tree = pickle.loads(tree)\nFile \"/demo/intervaltree/intervaltree.py\", line 254, in **init**\n    self.top_node = Node.from_intervals(self.all_intervals)\n  File \"/demo/intervaltree/node.py\", line 64, in from_intervals\n    node = node.init_from_sorted(sorted(intervals))\n  File \"/demo/intervaltree/node.py\", line 82, in init_from_sorted\n    self.left_node = Node.from_intervals(s_left)\n  File \"/demo/intervaltree/node.py\", line 64, in from_intervals\n    node = node.init_from_sorted(sorted(intervals))\n  File \"/demo/intervaltree/node.py\", line 82, in init_from_sorted\n    self.left_node = Node.from_intervals(s_left)\n  File \"/demo/intervaltree/node.py\", line 64, in from_intervals\n    node = node.init_from_sorted(sorted(intervals))\n  File \"/demo/intervaltree/node.py\", line 82, in init_from_sorted\n    self.left_node = Node.from_intervals(s_left)\n  File \"/demo/intervaltree/node.py\", line 64, in from_intervals\n    node = node.init_from_sorted(sorted(intervals))\n  File \"/demo/intervaltree/node.py\", line 82, in init_from_sorted\n    self.left_node = Node.from_intervals(s_left)\n\nit was out of system's recursive limit, but when i try to fix it by set  \"sys.setrecursivelimit()\" func's  parameter greater,  it may ran out segmentation fault.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/35", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/35/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/35/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/35", "id": 122685019, "node_id": "MDU6SXNzdWUxMjI2ODUwMTk=", "number": 35, "title": "Python 3.5 support", "user": {"login": "0xaf1f", "id": 3968485, "node_id": "MDQ6VXNlcjM5Njg0ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3968485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xaf1f", "html_url": "https://github.com/0xaf1f", "followers_url": "https://api.github.com/users/0xaf1f/followers", "following_url": "https://api.github.com/users/0xaf1f/following{/other_user}", "gists_url": "https://api.github.com/users/0xaf1f/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xaf1f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xaf1f/subscriptions", "organizations_url": "https://api.github.com/users/0xaf1f/orgs", "repos_url": "https://api.github.com/users/0xaf1f/repos", "events_url": "https://api.github.com/users/0xaf1f/events{/privacy}", "received_events_url": "https://api.github.com/users/0xaf1f/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-12-17T08:18:10Z", "updated_at": "2018-05-29T01:50:40Z", "closed_at": "2018-05-29T01:50:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to build intervaltree with Python 3.5, I get many test failures. I haven't gotten around to investigating this myself, so I thought I should at least report it to you. Here is the test log:\n\n```\n============================= test session starts ==============================\nplatform linux -- Python 3.5.1 -- py-1.4.31 -- pytest-2.7.3\nrootdir: /\u00abPKGBUILDDIR\u00bb, inifile: setup.cfg\ncollected 25 items / 20 errors\n\ntest/interval_test.py ............\ntest/issue26_test.py ...\ntest/issue27_test.py .\ntest/intervaltree_methods/init_test.py ....\ntest/intervaltree_methods/setlike_test.py .....\n\n==================================== ERRORS ====================================\n_______ ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervals.py ________\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n_____ ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltrees.py ______\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n______ ERROR collecting .pybuild/pythonX.Y_3.5/build/test/issue25_test.py ______\ntest/issue25_test.py:24: in <module>\n    from test.intervaltrees import trees\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n______ ERROR collecting .pybuild/pythonX.Y_3.5/build/test/issue25_test.py ______\ntest/issue25_test.py:24: in <module>\n    from test.intervaltrees import trees\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n_________ ERROR collecting .pybuild/pythonX.Y_3.5/build/test/issue4.py _________\ntest/issue4.py:11: in <module>\n    from test.intervaltrees import trees\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n____ ERROR collecting .pybuild/pythonX.Y_3.5/build/test/optimality_test.py _____\ntest/optimality_test.py:22: in <module>\n    from test.optimality_test_matrix import OptimalityTestMatrix\ntest/optimality_test_matrix.py:23: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n____ ERROR collecting .pybuild/pythonX.Y_3.5/build/test/optimality_test.py _____\ntest/optimality_test.py:22: in <module>\n    from test.optimality_test_matrix import OptimalityTestMatrix\ntest/optimality_test_matrix.py:23: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n_ ERROR collecting .pybuild/pythonX.Y_3.5/build/test/optimality_test_matrix.py _\ntest/optimality_test_matrix.py:23: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/copy_test.py \ntest/intervaltree_methods/copy_test.py:24: in <module>\n    from test.intervaltrees import trees\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/copy_test.py \ntest/intervaltree_methods/copy_test.py:24: in <module>\n    from test.intervaltrees import trees\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/debug_test.py \ntest/intervaltree_methods/debug_test.py:24: in <module>\n    from test.intervaltrees import trees, sdata\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/debug_test.py \ntest/intervaltree_methods/debug_test.py:24: in <module>\n    from test.intervaltrees import trees, sdata\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/delete_test.py \ntest/intervaltree_methods/delete_test.py:24: in <module>\n    from test.intervaltrees import trees, sdata\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/delete_test.py \ntest/intervaltree_methods/delete_test.py:24: in <module>\n    from test.intervaltrees import trees, sdata\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/insert_test.py \ntest/intervaltree_methods/insert_test.py:24: in <module>\n    from test.intervaltrees import trees, sdata\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/insert_test.py \ntest/intervaltree_methods/insert_test.py:24: in <module>\n    from test.intervaltrees import trees, sdata\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/query_test.py \ntest/intervaltree_methods/query_test.py:24: in <module>\n    from test.intervaltrees import trees, sdata\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/query_test.py \ntest/intervaltree_methods/query_test.py:24: in <module>\n    from test.intervaltrees import trees, sdata\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/restructure_test.py \ntest/intervaltree_methods/restructure_test.py:24: in <module>\n    from test.intervaltrees import trees\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n ERROR collecting .pybuild/pythonX.Y_3.5/build/test/intervaltree_methods/restructure_test.py \ntest/intervaltree_methods/restructure_test.py:24: in <module>\n    from test.intervaltrees import trees\ntest/intervaltrees.py:24: in <module>\n    from test import intervals\ntest/intervals.py:52: in <module>\n    ivs = load_test_data_ivs()\ntest/intervals.py:43: in load_test_data_ivs\n    names = ivs_names()\ntest/data_loader.py:38: in ivs_names\n    data_dir = join(from_import('test', 'data').__path__)[0]\n/usr/lib/python3.5/posixpath.py:89: in join\n    genericpath._check_arg_types('join', a, *p)\n/usr/lib/python3.5/genericpath.py:143: in _check_arg_types\n    (funcname, s.__class__.__name__)) from None\nE   TypeError: join() argument must be str or bytes, not 'list'\n===================== 25 passed, 20 error in 9.62 seconds ======================\nE: pybuild pybuild:274: test: plugin distutils failed with: exit code=1: cd /\u00abPKGBUILDDIR\u00bb/.pybuild/pythonX.Y_3.5/build; python3.5 -m pytest test\n```\n\nMany thanks for your work on intervaltree.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/32", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/32/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/32/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/32", "id": 79207346, "node_id": "MDU6SXNzdWU3OTIwNzM0Ng==", "number": 32, "title": "comparing Intervals may succeed in Python2 but fail in Python3", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 88538660, "node_id": "MDU6TGFiZWw4ODUzODY2MA==", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 88538665, "node_id": "MDU6TGFiZWw4ODUzODY2NQ==", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-21T23:45:42Z", "updated_at": "2018-12-18T04:06:30Z", "closed_at": "2018-12-18T04:06:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### Effect\n\nEither:\n- Intervals may not sort in the same order when porting code between Python 2 and Python 3.\n- Intervals that were sortable in Python 2 will raise a TypeError in Python 3.\n### Cause\n\nCertain types are no longer comparable in Python3.\n### Detail\n\nWhen sorting Intervals, if two Intervals have the same range and a tiebreaker is needed, the data fields are compared. If the data fields hold non-comparable types, behavior may not be consistent when porting code between Python 2 and Python 3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/27", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/27/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/27/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/27", "id": 55052639, "node_id": "MDU6SXNzdWU1NTA1MjYzOQ==", "number": 27, "title": "Incorrect overlap query behavior for bracket syntax", "user": {"login": "standage", "id": 566823, "node_id": "MDQ6VXNlcjU2NjgyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/566823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/standage", "html_url": "https://github.com/standage", "followers_url": "https://api.github.com/users/standage/followers", "following_url": "https://api.github.com/users/standage/following{/other_user}", "gists_url": "https://api.github.com/users/standage/gists{/gist_id}", "starred_url": "https://api.github.com/users/standage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/standage/subscriptions", "organizations_url": "https://api.github.com/users/standage/orgs", "repos_url": "https://api.github.com/users/standage/repos", "events_url": "https://api.github.com/users/standage/events{/privacy}", "received_events_url": "https://api.github.com/users/standage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-21T17:49:05Z", "updated_at": "2015-01-21T21:37:34Z", "closed_at": "2015-01-21T21:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting empty sets when I try to use the bracket notation for overlap queries, but I get the correct result when using the .search method. See terminal output below. This is on OS X Yosemite with Python 2.7.8.\n\n```\n(pydev)[standage@lappy interval-loci] python \nPython 2.7.8 (default, Oct 19 2014, 16:02:00) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.54)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from intervaltree import Interval, IntervalTree\n>>> it = IntervalTree()\n>>> it.addi(1, 3, \"dude\")\n>>> it.addi(2, 4, \"sweet\")\n>>> it.addi(6, 9, \"rad\")\n>>> for iobj in it:\n...   print it[iobj.begin, iobj.end]\n... \nset([])\nset([])\nset([])\n>>> for iobj in it:\n...   print it.search(iobj.begin, iobj.end)\n... \nset([Interval(6, 9, 'rad')])\nset([Interval(1, 3, 'dude'), Interval(2, 4, 'sweet')])\nset([Interval(1, 3, 'dude'), Interval(2, 4, 'sweet')])\n>>> \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/26", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/26/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/26/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/26", "id": 53208443, "node_id": "MDU6SXNzdWU1MzIwODQ0Mw==", "number": 26, "title": "Pop from empty list error", "user": {"login": "sciencectn", "id": 1373858, "node_id": "MDQ6VXNlcjEzNzM4NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1373858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sciencectn", "html_url": "https://github.com/sciencectn", "followers_url": "https://api.github.com/users/sciencectn/followers", "following_url": "https://api.github.com/users/sciencectn/following{/other_user}", "gists_url": "https://api.github.com/users/sciencectn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sciencectn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sciencectn/subscriptions", "organizations_url": "https://api.github.com/users/sciencectn/orgs", "repos_url": "https://api.github.com/users/sciencectn/repos", "events_url": "https://api.github.com/users/sciencectn/events{/privacy}", "received_events_url": "https://api.github.com/users/sciencectn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-31T23:38:58Z", "updated_at": "2015-01-01T22:37:10Z", "closed_at": "2015-01-01T22:37:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Got another one for you. This one seemed to show up way faster than #25. \n\n```\nt = intervaltree.IntervalTree()\nt.addi(17.89,21.89)\nt.addi(11.53,16.53)\nt.removei(11.53,16.53)\nt.removei(17.89,21.89)\nt.addi(-0.62,4.38)\nt.addi(9.24,14.24)\nt.addi(4.0,9.0)\nt.removei(-0.62,4.38)\nt.removei(9.24,14.24)\nt.removei(4.0,9.0)\nt.addi(12.86,17.86)\nt.addi(16.65,21.65)\nt.removei(12.86,17.86)\n```\n\nI got this error:\n\n```\n    max_iv = ivs.pop()\nIndexError: pop from empty list\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/25", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/25/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/25/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/25", "id": 53173140, "node_id": "MDU6SXNzdWU1MzE3MzE0MA==", "number": 25, "title": "Incorrect KeyError ", "user": {"login": "sciencectn", "id": 1373858, "node_id": "MDQ6VXNlcjEzNzM4NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1373858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sciencectn", "html_url": "https://github.com/sciencectn", "followers_url": "https://api.github.com/users/sciencectn/followers", "following_url": "https://api.github.com/users/sciencectn/following{/other_user}", "gists_url": "https://api.github.com/users/sciencectn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sciencectn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sciencectn/subscriptions", "organizations_url": "https://api.github.com/users/sciencectn/orgs", "repos_url": "https://api.github.com/users/sciencectn/repos", "events_url": "https://api.github.com/users/sciencectn/events{/privacy}", "received_events_url": "https://api.github.com/users/sciencectn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-31T08:21:52Z", "updated_at": "2014-12-31T20:30:40Z", "closed_at": "2014-12-31T12:31:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tree seems to think a value doesn't exist when it does. I had the following sequence of insertions and deletions:\n\n```\nt = intervaltree.IntervalTree()\nt.addi(6.37,11.37)\nt.addi(12.09,17.09)\nt.addi(5.68,11.58)\nt.removei(6.37,11.37)\nt.addi(13.23,18.23)\nt.removei(12.09,17.09)\nt.addi(4.29,8.29)\nt.removei(13.23,18.23)\nt.addi(12.04,17.04)\nt.addi(9.39,13.39)\nt.removei(5.68,11.58)\nt.removei(4.29,8.29)\nt.removei(12.04,17.04)\nt.addi(5.66,9.66)     # Value inserted here\nt.addi(8.65,13.65)\nt.removei(9.39,13.39)\nt.addi(16.49,20.83)\nt.addi(11.42,16.42)\nt.addi(5.38,10.38)\nt.addi(3.57,9.47)\nt.removei(8.65,13.65)\nt.removei(5.66,9.66)    # Deleted here\n```\n\nThe error is this:\n\n```\nraise KeyError(interval)\nKeyError: Interval(5.66, 9.66)\n```\n\nIf you print out the tree right before that last remove it even shows it:\n`IntervalTree([Interval(3.57, 9.47), Interval(5.38, 10.38), Interval(5.66, 9.66), Interval(11.42, 16.42), Interval(16.49, 20.83)])`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/24", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/24/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/24/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/24", "id": 52589172, "node_id": "MDU6SXNzdWU1MjU4OTE3Mg==", "number": 24, "title": "Discuss: What should `del tree[a:b]` do?", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 88538662, "node_id": "MDU6TGFiZWw4ODUzODY2Mg==", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-12-21T07:48:11Z", "updated_at": "2014-12-22T01:22:03Z", "closed_at": "2014-12-22T01:12:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Some options:\n1. Shortcut for `remove_overlap(a, b)`\n2. Shortcut for `remove_envelop(a, b)`\n3. `remove_envelop()`, then chop all `Interval`s that hang over `a` or `b` so that nothing overlaps the range from `a` to `b`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/22", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/22/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/22/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/22", "id": 51916865, "node_id": "MDU6SXNzdWU1MTkxNjg2NQ==", "number": 22, "title": "pandoc import error", "user": {"login": "612d7368", "id": 959838, "node_id": "MDQ6VXNlcjk1OTgzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/959838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/612d7368", "html_url": "https://github.com/612d7368", "followers_url": "https://api.github.com/users/612d7368/followers", "following_url": "https://api.github.com/users/612d7368/following{/other_user}", "gists_url": "https://api.github.com/users/612d7368/gists{/gist_id}", "starred_url": "https://api.github.com/users/612d7368/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/612d7368/subscriptions", "organizations_url": "https://api.github.com/users/612d7368/orgs", "repos_url": "https://api.github.com/users/612d7368/repos", "events_url": "https://api.github.com/users/612d7368/events{/privacy}", "received_events_url": "https://api.github.com/users/612d7368/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-14T11:29:12Z", "updated_at": "2014-12-18T12:21:36Z", "closed_at": "2014-12-18T12:21:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've got error when try to install package\n\n```\nNo module named pandoc\nTraceback (most recent call last):\n  File \"setup.py\", line 37, in <module>\n    pandoc.PANDOC_PATH = 'pandoc'  # until pyandoc gets updated\nNameError: name 'pandoc' is not defined\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/21", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/21/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/21/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/21", "id": 51865403, "node_id": "MDU6SXNzdWU1MTg2NTQwMw==", "number": 21, "title": "Discuss: transform recursions into simple stack iterations", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-12-12T23:31:56Z", "updated_at": "2014-12-22T03:08:00Z", "closed_at": "2014-12-22T02:41:41Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@konstantint, I know we discussed this earlier, but I found another reason to use recursion. I think this will be an ongoing conversation, so I opened this issue for it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/20", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/20/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/20/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/20", "id": 51772930, "node_id": "MDU6SXNzdWU1MTc3MjkzMA==", "number": 20, "title": "Modification time is not logarithmic", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-12-12T05:52:16Z", "updated_at": "2015-01-02T13:44:15Z", "closed_at": "2015-01-02T13:42:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I created a progress bar so that I could see some feedback on the long-running issue4 test (konstantint/PyIntervalTree#4). I found that the time to modify tree is increasing roughly linearly with the size of the tree. This makes the total creation time quadratic, and the time-size plot is looking like this:\n\n```\ny(x) = (10^3*x)^2 * 3.7*10^-8\n```\n\n![actual](https://cloud.githubusercontent.com/assets/7785285/5407068/7f6d3bd4-8173-11e4-84ee-f52e74abb015.png)\nLegend: total creation time (s) vs. number of operations on tree (x1000)\n\nInstead, the time to insert or remove an Interval should increase logarithmically, and the total creation time should be the integral of that, which is x log x - x. With a rough scale correction, the plot should look more like this:\n\n```\ny(x) = 1.42*10^-5 * (10^3*x * ln(10^3*x) - 10^3*x)\n```\n\n![ideal](https://cloud.githubusercontent.com/assets/7785285/5407011/892fcd8c-8171-11e4-8d51-d7eacd25c9c6.png)\nLegend: total creation time (s) vs. number of operations on tree (x1000)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/17", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/17/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/17/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/17", "id": 50777249, "node_id": "MDU6SXNzdWU1MDc3NzI0OQ==", "number": 17, "title": "Recursion depth error on large trees", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 88538660, "node_id": "MDU6TGFiZWw4ODUzODY2MA==", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-03T04:22:57Z", "updated_at": "2014-12-09T12:26:33Z", "closed_at": "2014-12-09T12:26:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This corresponds to konstantint/PyIntervalTree#4\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/16", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/16/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/16/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/16", "id": 50775853, "node_id": "MDU6SXNzdWU1MDc3NTg1Mw==", "number": 16, "title": "Set up team structure", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-03T04:05:48Z", "updated_at": "2015-01-01T07:30:41Z", "closed_at": "2015-01-01T07:30:41Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@konstantint said:\n\n> It is also somehow wrong that there are separate issue trackers for my and your repositories. This made sense during the time when you seemed to be away. If you plan to support the codebase, perhaps you could add me as a contributor to your repository and I could drop mine completely.\n\nI think that cooperating more closely is a great idea. But, I also learned that on a team, it is important to never push directly to master. Let's keep separate development forks/branches and only change master via pull requests. This gives a chance for other team members to review the changes before merging them. If this sounds good to you, I'll give you the ability to merge my pull requests to my master, and I'll start doing my development in a separate branch from my master.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/15", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/15/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/15/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/15", "id": 50774737, "node_id": "MDU6SXNzdWU1MDc3NDczNw==", "number": 15, "title": "Have PyPI track this repo", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/chaimleib/intervaltree/milestones/4", "html_url": "https://github.com/chaimleib/intervaltree/milestone/4", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/milestones/4/labels", "id": 897200, "node_id": "MDk6TWlsZXN0b25lODk3MjAw", "number": 4, "title": "1.0.0", "description": null, "creator": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2014-12-09T12:30:21Z", "updated_at": "2015-01-02T14:10:27Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2014-12-03T03:53:14Z", "updated_at": "2014-12-10T02:31:54Z", "closed_at": "2014-12-10T02:31:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@konstantint said:\n\n> ... and please consider resurrecting the \"intervaltree\" PyPI package. That's a great name, after all :)\n\nHow about if I create a new package on PyPI with that name, based on my master? When PyIntervalTree is superceded, we can mark PyIntervalTree as deprecated and point users to intervaltree.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/13", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/13/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/13/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/13", "id": 50477671, "node_id": "MDU6SXNzdWU1MDQ3NzY3MQ==", "number": 13, "title": "Add optimality tests", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-01T00:42:09Z", "updated_at": "2014-12-11T11:01:43Z", "closed_at": "2014-12-11T11:01:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Now that I have an optimality metric, I want to make sure that future changes do not reduce optimality.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/12", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/12/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/12/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/12", "id": 50360372, "node_id": "MDU6SXNzdWU1MDM2MDM3Mg==", "number": 12, "title": "Develop optimality metric", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-11-28T10:26:14Z", "updated_at": "2014-11-28T12:52:11Z", "closed_at": "2014-11-28T12:52:11Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I have some other issues that are aimed at improving the structure of the tree. In order to measure the effect of these improvements, I need to have a way of measuring how good the structure of the tree is.\n\nAlso, if the optimality suddenly decreases between versions, I'll know that I did something wrong.\n\nIdeally:\n- There should be one Node per Interval; every s_center should have a single member Interval.\n- The depth of the tree is minimized. This means that no Node has a depth greater than ceil(log_2(n)). Also, the difference between the depth of the deepest leaf and the depth of the shallowest leaf is no greater than 1 level.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/11", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/11/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/11/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/11", "id": 50103297, "node_id": "MDU6SXNzdWU1MDEwMzI5Nw==", "number": 11, "title": "PyPI: Separate out optional intervaltree.bio package, from @konstantint", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 88538662, "node_id": "MDU6TGFiZWw4ODUzODY2Mg==", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/chaimleib/intervaltree/milestones/7", "html_url": "https://github.com/chaimleib/intervaltree/milestone/7", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/milestones/7/labels", "id": 919641, "node_id": "MDk6TWlsZXN0b25lOTE5NjQx", "number": 7, "title": "2.1.0", "description": null, "creator": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2015-01-02T14:10:02Z", "updated_at": "2015-05-11T00:55:09Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2014-11-26T00:28:16Z", "updated_at": "2015-01-23T22:23:37Z", "closed_at": "2015-01-23T22:23:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/10", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/10/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/10/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/10", "id": 50087829, "node_id": "MDU6SXNzdWU1MDA4NzgyOQ==", "number": 10, "title": "Improper Warning Being reported", "user": {"login": "mdjones", "id": 86745, "node_id": "MDQ6VXNlcjg2NzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/86745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdjones", "html_url": "https://github.com/mdjones", "followers_url": "https://api.github.com/users/mdjones/followers", "following_url": "https://api.github.com/users/mdjones/following{/other_user}", "gists_url": "https://api.github.com/users/mdjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdjones/subscriptions", "organizations_url": "https://api.github.com/users/mdjones/orgs", "repos_url": "https://api.github.com/users/mdjones/repos", "events_url": "https://api.github.com/users/mdjones/events{/privacy}", "received_events_url": "https://api.github.com/users/mdjones/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 88538660, "node_id": "MDU6TGFiZWw4ODUzODY2MA==", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/chaimleib/intervaltree/milestones/2", "html_url": "https://github.com/chaimleib/intervaltree/milestone/2", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/milestones/2/labels", "id": 880653, "node_id": "MDk6TWlsZXN0b25lODgwNjUz", "number": 2, "title": "0.4.0", "description": null, "creator": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2014-11-26T00:27:27Z", "updated_at": "2014-12-09T12:35:58Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2014-11-25T21:42:26Z", "updated_at": "2014-12-09T12:31:52Z", "closed_at": "2014-12-09T12:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/konstantint/PyIntervalTree/blob/master/intervaltree/bio/__init__.py - Line 55\n\nWarning before check. \n\n``` python\ndef _fix(interval):\n    '''\n    Helper function for ``GenomeIntervalTree.from_bed and ``.from_table``.\n\n    Data tables may contain intervals with begin >= end. Such intervals lead to infinite recursions and\n    other unpleasant behaviour, so something has to be done about them. We 'fix' them by simply setting end = begin+1.\n    '''\n    warnings.warn(\"Interval with reversed coordinates (begin >= end) detected when reading data. Interval was automatically fixed t\\\no point interval [begin, begin+1).\")\n    if interval.begin >= interval.end:\n        return Interval(interval.begin, interval.begin+1, interval.data)\n    else:\n        return interval\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/3", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/3/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/3/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/3", "id": 48399243, "node_id": "MDU6SXNzdWU0ODM5OTI0Mw==", "number": 3, "title": "recursion depth", "user": {"login": "paulbrodersen", "id": 8046146, "node_id": "MDQ6VXNlcjgwNDYxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8046146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulbrodersen", "html_url": "https://github.com/paulbrodersen", "followers_url": "https://api.github.com/users/paulbrodersen/followers", "following_url": "https://api.github.com/users/paulbrodersen/following{/other_user}", "gists_url": "https://api.github.com/users/paulbrodersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulbrodersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulbrodersen/subscriptions", "organizations_url": "https://api.github.com/users/paulbrodersen/orgs", "repos_url": "https://api.github.com/users/paulbrodersen/repos", "events_url": "https://api.github.com/users/paulbrodersen/events{/privacy}", "received_events_url": "https://api.github.com/users/paulbrodersen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2014-11-11T15:55:42Z", "updated_at": "2016-06-17T01:51:24Z", "closed_at": "2014-11-20T09:45:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When initialising a tree with >50 intervals, the recursion depth of python is reached while balancing the tree. Minimum working example:\n\n``` python\nfrom intervaltree import Interval, IntervalTree\nfrom numpy import sort\nfrom numpy.random import randint\n\ndef test_intervaltree(n_intervals):\n    tmp = sort(randint(1000, size=2*n_intervals))\n    starts = tmp[::2]\n    stops = tmp[1::2]\n    intervals = zip(starts, stops)\n    interval_objs = [Interval(start, stop) for start,stop in intervals]\n    tree = IntervalTree(interval_objs)\n    return tree\n\ntest_interval_tree(10) # returns tree\ntest_interval_tree(50) # returns RuntimeError\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/2", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/2/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/2/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/2", "id": 46586887, "node_id": "MDU6SXNzdWU0NjU4Njg4Nw==", "number": 2, "title": "Add KeyedIntervalTree", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 88538662, "node_id": "MDU6TGFiZWw4ODUzODY2Mg==", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-23T04:06:52Z", "updated_at": "2014-11-21T10:58:01Z", "closed_at": "2014-11-21T10:58:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/chaimleib/intervaltree/issues/1", "repository_url": "https://api.github.com/repos/chaimleib/intervaltree", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/1/comments", "events_url": "https://api.github.com/repos/chaimleib/intervaltree/issues/1/events", "html_url": "https://github.com/chaimleib/intervaltree/issues/1", "id": 46586866, "node_id": "MDU6SXNzdWU0NjU4Njg2Ng==", "number": 1, "title": "Modularize tests", "user": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 88538662, "node_id": "MDU6TGFiZWw4ODUzODY2Mg==", "url": "https://api.github.com/repos/chaimleib/intervaltree/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/chaimleib/intervaltree/milestones/1", "html_url": "https://github.com/chaimleib/intervaltree/milestone/1", "labels_url": "https://api.github.com/repos/chaimleib/intervaltree/milestones/1/labels", "id": 880650, "node_id": "MDk6TWlsZXN0b25lODgwNjUw", "number": 1, "title": "0.4.1", "description": null, "creator": {"login": "chaimleib", "id": 7785285, "node_id": "MDQ6VXNlcjc3ODUyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7785285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaimleib", "html_url": "https://github.com/chaimleib", "followers_url": "https://api.github.com/users/chaimleib/followers", "following_url": "https://api.github.com/users/chaimleib/following{/other_user}", "gists_url": "https://api.github.com/users/chaimleib/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaimleib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaimleib/subscriptions", "organizations_url": "https://api.github.com/users/chaimleib/orgs", "repos_url": "https://api.github.com/users/chaimleib/repos", "events_url": "https://api.github.com/users/chaimleib/events{/privacy}", "received_events_url": "https://api.github.com/users/chaimleib/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2014-11-26T00:26:28Z", "updated_at": "2014-12-09T12:35:23Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2014-10-23T04:06:17Z", "updated_at": "2014-12-09T12:35:23Z", "closed_at": "2014-12-09T12:35:23Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}