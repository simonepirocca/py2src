{"total_count": 166, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/docopt/docopt/issues/481", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/481/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/481/events", "html_url": "https://github.com/docopt/docopt/issues/481", "id": 643429023, "node_id": "MDU6SXNzdWU2NDM0MjkwMjM=", "number": 481, "title": "parsing only first letter of param", "user": {"login": "heaphopopotamus", "id": 33820078, "node_id": "MDQ6VXNlcjMzODIwMDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/33820078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heaphopopotamus", "html_url": "https://github.com/heaphopopotamus", "followers_url": "https://api.github.com/users/heaphopopotamus/followers", "following_url": "https://api.github.com/users/heaphopopotamus/following{/other_user}", "gists_url": "https://api.github.com/users/heaphopopotamus/gists{/gist_id}", "starred_url": "https://api.github.com/users/heaphopopotamus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heaphopopotamus/subscriptions", "organizations_url": "https://api.github.com/users/heaphopopotamus/orgs", "repos_url": "https://api.github.com/users/heaphopopotamus/repos", "events_url": "https://api.github.com/users/heaphopopotamus/events{/privacy}", "received_events_url": "https://api.github.com/users/heaphopopotamus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T23:50:09Z", "updated_at": "2020-06-23T00:20:27Z", "closed_at": "2020-06-23T00:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n    test.py collect [--test-testing]\r\n\r\n\r\nWhen executing the script with --test, --t, --test-testing all resolve as True.  However if I have two params with the same first letter docopt responds correctly.  I can repro more if needed but I need to make a mock demo for debugging. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/480", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/480/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/480/events", "html_url": "https://github.com/docopt/docopt/issues/480", "id": 642220270, "node_id": "MDU6SXNzdWU2NDIyMjAyNzA=", "number": 480, "title": "Quoted text is handled as option", "user": {"login": "nerg4l", "id": 4079392, "node_id": "MDQ6VXNlcjQwNzkzOTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4079392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerg4l", "html_url": "https://github.com/nerg4l", "followers_url": "https://api.github.com/users/nerg4l/followers", "following_url": "https://api.github.com/users/nerg4l/following{/other_user}", "gists_url": "https://api.github.com/users/nerg4l/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerg4l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerg4l/subscriptions", "organizations_url": "https://api.github.com/users/nerg4l/orgs", "repos_url": "https://api.github.com/users/nerg4l/repos", "events_url": "https://api.github.com/users/nerg4l/events{/privacy}", "received_events_url": "https://api.github.com/users/nerg4l/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T21:12:22Z", "updated_at": "2020-08-26T09:12:58Z", "closed_at": "2020-08-26T09:12:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following doc:\r\n\r\n```\r\nUsage:\r\n  naval_fate.py a <name>...\r\n  naval_fate.py b -- <name>...\r\n\r\n```\r\n\r\nThe following commands are faling regardless of single-quotes (`'`) or double-quotes (`\"`):\r\n\r\n```\r\na \"-a\"\r\na \"--a\"\r\na '-a'\r\na '--a'\r\n```\r\n\r\nAnd these are correct regardless of the quotes and the number of dashes:\r\n\r\n```\r\na \"-\"\r\na \" -a\"\r\na -- \"-a\" # parsed as two parameter\r\na -- \"-b\" # parsed as one parameter\r\n```\r\n\r\nIn the docs there is a section about double dash `--` which can be used to \"separate options and positional arguments\". I can use that to avoid this as you can see the second usage pattern of the example.\r\n\r\nI don't think it is intended behaviour but I can be wrong.\r\n\r\nAccording to https://www.gnu.org/software/bash/manual/bash.html#Quoting\r\n\r\n> Enclosing characters in single quotes (\u2018'\u2019) preserves the literal value of each character within the quotes.\r\n\r\n> Enclosing characters in double quotes (\u2018\"\u2019) preserves the literal value of all characters within the quotes, with the exception of \u2018$\u2019, \u2018`\u2019, \u2018\\\u2019, and, when history expansion is enabled, \u2018!\u2019. \r\n\r\nA could only find this in the IEEE Std 1003.1-2017 specs https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_02\r\n\r\n> Quoting is used to remove the special meaning of certain characters or words to the shell. Quoting can be used to preserve the literal meaning of the special characters in the next paragraph, prevent reserved words from being recognized as such, and prevent parameter expansion and command substitution within here-document processing [...]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/478", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/478/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/478/events", "html_url": "https://github.com/docopt/docopt/issues/478", "id": 625907676, "node_id": "MDU6SXNzdWU2MjU5MDc2NzY=", "number": 478, "title": "Automatically create python wrappers for bash script using docopts", "user": {"login": "laurentvm", "id": 37613497, "node_id": "MDQ6VXNlcjM3NjEzNDk3", "avatar_url": "https://avatars3.githubusercontent.com/u/37613497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurentvm", "html_url": "https://github.com/laurentvm", "followers_url": "https://api.github.com/users/laurentvm/followers", "following_url": "https://api.github.com/users/laurentvm/following{/other_user}", "gists_url": "https://api.github.com/users/laurentvm/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurentvm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurentvm/subscriptions", "organizations_url": "https://api.github.com/users/laurentvm/orgs", "repos_url": "https://api.github.com/users/laurentvm/repos", "events_url": "https://api.github.com/users/laurentvm/events{/privacy}", "received_events_url": "https://api.github.com/users/laurentvm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-27T17:55:43Z", "updated_at": "2020-09-07T19:10:58Z", "closed_at": "2020-09-07T19:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI have a set of bash script that are now using docopts. I would like to be able to automatically create python function able to call these bash script. \r\n\r\nThe idea is the following one. I have a script test.sh with \r\n```\r\nUsage:\r\n  test.sh (-testdir <testDirPath>) [-v=<VERSION>]\r\n  test.sh -h | --help\r\nOptions:\r\n  -h --help         Show this screen.\r\n  -testdir <path>   Dew test directory path.\r\n  -v <version>      Version for XX TOOL [default: Prod].\r\n```\r\n\r\nFrom which I can extract the `Usage` part with grep/sed. Now I want to use docopt to automatically write a python script containing:\r\n```\r\ndef test(testdir, v='Prod'):\r\n    subprocess.Popen(['test.sh.sh -testdir %s -v %s' %(testDir, v], shell = True).\r\n```\r\n\r\nIt seems to be possible to get the arguments from docopt:\r\n```\r\narguments = docopt(__doc__, version='Naval Fate 2.0')\r\n    print(arguments)\r\n```\r\nbut how can I override docopt so it does not try parsing the current python script being executed as what I want is only the arguments dictionnary to buid the function test().\r\n```\r\nfrom docopt import docopt\r\n\r\n\r\nwith open (\"test.doc\", \"r\") as myfile:\r\n    data=myfile.read()\r\nprint(data)    \r\narguments = docopt(data)\r\n```\r\nAny idea? \r\nIs this thing have been done before?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/476", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/476/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/476/events", "html_url": "https://github.com/docopt/docopt/issues/476", "id": 614172447, "node_id": "MDU6SXNzdWU2MTQxNzI0NDc=", "number": 476, "title": "Why is an optional argument evaluated as an array?", "user": {"login": "kkdd", "id": 5372642, "node_id": "MDQ6VXNlcjUzNzI2NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5372642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkdd", "html_url": "https://github.com/kkdd", "followers_url": "https://api.github.com/users/kkdd/followers", "following_url": "https://api.github.com/users/kkdd/following{/other_user}", "gists_url": "https://api.github.com/users/kkdd/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkdd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkdd/subscriptions", "organizations_url": "https://api.github.com/users/kkdd/orgs", "repos_url": "https://api.github.com/users/kkdd/repos", "events_url": "https://api.github.com/users/kkdd/events{/privacy}", "received_events_url": "https://api.github.com/users/kkdd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-07T16:03:49Z", "updated_at": "2020-05-08T13:23:03Z", "closed_at": "2020-05-08T13:23:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI can't understand why ```'--qq'``` is not evaluated as ```'1'``` but ```['1']``` as in the following result:\r\n\r\n```\r\n$ python3 test.py -q 1\r\n{'--help': False,\r\n '--qq': ['1']}\r\n$ cat test.py\r\n\"\"\"\r\ntest.py: Prints docopt.docopt(__doc__).\r\n\r\nusage: test.py [-h] [-q|--qq <Q>]\r\n\r\noptions:\r\n    -h, --help        show this help message and exit\r\n    -q, --qq <Q>      parameter Q\r\n\"\"\"\r\n\r\nimport docopt\r\nprint(docopt.docopt(__doc__))\r\n$ pip3 list | grep docopt\r\ndocopt              0.6.2\r\n$ python3 --version\r\nPython 3.7.7\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/474", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/474/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/474/events", "html_url": "https://github.com/docopt/docopt/issues/474", "id": 596598555, "node_id": "MDU6SXNzdWU1OTY1OTg1NTU=", "number": 474, "title": "Debugging with PyCharm when first optional argument is long (--)", "user": {"login": "danigarciaoca", "id": 49679035, "node_id": "MDQ6VXNlcjQ5Njc5MDM1", "avatar_url": "https://avatars1.githubusercontent.com/u/49679035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danigarciaoca", "html_url": "https://github.com/danigarciaoca", "followers_url": "https://api.github.com/users/danigarciaoca/followers", "following_url": "https://api.github.com/users/danigarciaoca/following{/other_user}", "gists_url": "https://api.github.com/users/danigarciaoca/gists{/gist_id}", "starred_url": "https://api.github.com/users/danigarciaoca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danigarciaoca/subscriptions", "organizations_url": "https://api.github.com/users/danigarciaoca/orgs", "repos_url": "https://api.github.com/users/danigarciaoca/repos", "events_url": "https://api.github.com/users/danigarciaoca/events{/privacy}", "received_events_url": "https://api.github.com/users/danigarciaoca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-08T13:54:40Z", "updated_at": "2020-04-08T15:16:31Z", "closed_at": "2020-04-08T15:16:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone!\r\n\r\nI found an error on docopt while debugging with PyCharm. I was trying to debug the following simple program (taken from example folder) in Pycharm\r\n\r\n```\r\n\"\"\"Usage: arguments_example.py [options] [FILE] ...\r\n          arguments_example.py (--left | --right) CORRECTION FILE\r\n\r\nProcess FILE and optionally apply correction to either left-hand side or\r\nright-hand side.\r\n\r\nArguments:\r\n  FILE        optional input file\r\n  CORRECTION  correction angle, needs FILE, --left or --right to be present\r\n\r\nOptions:\r\n  --v       verbose mode\r\n  -q       quiet mode\r\n  -r       make report\r\n\"\"\"\r\nfrom docopt import docopt\r\n\r\n\r\nif __name__ == '__main__':\r\n    arguments = docopt(__doc__)\r\n    print(arguments)\r\n```\r\n\r\nand I found a problem. When defining in usage arguments_example.py [**options**] [FILE], setting \"options\" instead of all possible parameter short-values (-vqrh) makes PyCharm to crash. MOre precisely, it raises a DocoptExit exception.\r\n\r\nIf I execute the same program in PyCharm but with:\r\n`\"\"\"Usage: arguments_example.py [-vqrh] [FILE]`\r\nat the beginning, it does not crash.\r\n\r\nAny explanation on this? I think it is because of the first long argument (--v). When setting it short, it doesn't crash when specifying arguments_example.py [**options**] [FILE]\r\n\r\nThanks in advance!\r\n\r\n### **Edit:**\r\nWhen running on the terminal, it doesn't crash\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/473", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/473/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/473/events", "html_url": "https://github.com/docopt/docopt/issues/473", "id": 589901473, "node_id": "MDU6SXNzdWU1ODk5MDE0NzM=", "number": 473, "title": "Missing option", "user": {"login": "KenKundert", "id": 1687238, "node_id": "MDQ6VXNlcjE2ODcyMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1687238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KenKundert", "html_url": "https://github.com/KenKundert", "followers_url": "https://api.github.com/users/KenKundert/followers", "following_url": "https://api.github.com/users/KenKundert/following{/other_user}", "gists_url": "https://api.github.com/users/KenKundert/gists{/gist_id}", "starred_url": "https://api.github.com/users/KenKundert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KenKundert/subscriptions", "organizations_url": "https://api.github.com/users/KenKundert/orgs", "repos_url": "https://api.github.com/users/KenKundert/repos", "events_url": "https://api.github.com/users/KenKundert/events{/privacy}", "received_events_url": "https://api.github.com/users/KenKundert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-29T22:32:26Z", "updated_at": "2020-03-31T19:18:20Z", "closed_at": "2020-03-31T19:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot seem to get docopt to recognize one of my options\r\n```\r\n\"\"\"                                                                              \r\nUsage:                                                                           \r\n    update-certs [-fh]                                                           \r\n    update-certs due [-dm]                                                       \r\n                                                                                 \r\n-d <days>, --days=<days>   show number of days since last update                 \r\n                           if more than <num>                                    \r\n-m <msg>, --msg=<msg>      message template to use when reporting time           \r\n                           since last update                                     \r\n-f, --force                force renewal of certs                                \r\n-h, --help                 print this usage message                                            \r\n\"\"\"                                                                              \r\n                                                                                 \r\nfrom docopt import docopt                                                        \r\nfrom pprint import pprint                                                        \r\ncmdline = docopt(__doc__)                                                        \r\npprint(cmdline)\r\n```\r\nThen `python example.py due` produces:\r\n```\r\n{'--days': None,\r\n '--force': False,\r\n '--help': False,\r\n 'due': True}\r\n```\r\nNotice that `--msg` is not listed as a valid option. And sure enough, running `python example.py due -m=heynow` produces:\r\n```\r\nUsage:\r\n    update-certs [-fh]\r\n    update-certs due [-dm]\r\n```\r\nI am using docopt version 0.6.2, and python version 3.8.1.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/458", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/458/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/458/events", "html_url": "https://github.com/docopt/docopt/issues/458", "id": 501484526, "node_id": "MDU6SXNzdWU1MDE0ODQ1MjY=", "number": 458, "title": "Some problems with arguments of a param", "user": {"login": "prsolucoes", "id": 395096, "node_id": "MDQ6VXNlcjM5NTA5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/395096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prsolucoes", "html_url": "https://github.com/prsolucoes", "followers_url": "https://api.github.com/users/prsolucoes/followers", "following_url": "https://api.github.com/users/prsolucoes/following{/other_user}", "gists_url": "https://api.github.com/users/prsolucoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/prsolucoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prsolucoes/subscriptions", "organizations_url": "https://api.github.com/users/prsolucoes/orgs", "repos_url": "https://api.github.com/users/prsolucoes/repos", "events_url": "https://api.github.com/users/prsolucoes/events{/privacy}", "received_events_url": "https://api.github.com/users/prsolucoes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-02T13:20:05Z", "updated_at": "2019-10-02T14:33:02Z", "closed_at": "2019-10-02T14:33:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIm trying using it to parse the options, but have a problem, see.\r\n\r\nMy call:\r\n\r\n```\r\nxxx generate my-project.xxx --java-out=teste\r\n```\r\n\r\nError:\r\n\r\n```\r\n--java-out must not have an argument\r\n```\r\n\r\nMy docopt:\r\n\r\n```\r\nxxx\r\n\r\nUsage:\r\n  xxx generate <file> [options]\r\n  xxx -h | --help\r\n  xxx -d | --debug\r\n\r\nOptions:\r\n  -h --help                         Show this screen.\r\n  -d --debug                        Enable debug messages.\r\n  --version                         Show version.\r\n\r\n  --java-out                              The output for the Java files (Generator disabled if unspecified).\r\n  --java-package                          The package name to use for generated Java classes.\r\n  --java-class-access-modifier            The access modifier to use for generated Java classes (default: public).\r\n  --java-cpp-exception                    The type for translated C++ exceptions in Java (default: java.lang.RuntimeException that is not checked)\r\n  --java-annotation                       Java annotation (@Foo) to place on all generated Java classes\r\n  --java-generate-interfaces              Whether Java interfaces should be used instead of abstract classes where possible (default: false).\r\n  --java-nullable-annotation              Java annotation (@Nullable) to place on all fields and return values that are optional\r\n  --java-nonnull-annotation               Java annotation (@Nonnull) to place on all fields and return values that are not optional\r\n  --java-implement-android-os-parcelable  All generated java classes will implement the interface android.os.Parcelable\r\n  --java-use-final-for-record             Whether generated Java classes for records should be marked 'final' (default: true).\r\n\r\nExamples:\r\n  xxx generate my-project.xxx\r\n\r\nHelp:\r\n  For help using this tool, please open an issue on the Github repository:\r\n  https://github.com/xxx/xxx\r\n```\r\n\r\nCan anyone help me?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/454", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/454/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/454/events", "html_url": "https://github.com/docopt/docopt/issues/454", "id": 464143669, "node_id": "MDU6SXNzdWU0NjQxNDM2Njk=", "number": 454, "title": "How could my program  ignore docopt when imported as a module?", "user": {"login": "leafonsword", "id": 1754580, "node_id": "MDQ6VXNlcjE3NTQ1ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1754580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leafonsword", "html_url": "https://github.com/leafonsword", "followers_url": "https://api.github.com/users/leafonsword/followers", "following_url": "https://api.github.com/users/leafonsword/following{/other_user}", "gists_url": "https://api.github.com/users/leafonsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/leafonsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leafonsword/subscriptions", "organizations_url": "https://api.github.com/users/leafonsword/orgs", "repos_url": "https://api.github.com/users/leafonsword/repos", "events_url": "https://api.github.com/users/leafonsword/events{/privacy}", "received_events_url": "https://api.github.com/users/leafonsword/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-04T08:46:58Z", "updated_at": "2019-07-05T02:51:18Z", "closed_at": "2019-07-05T02:51:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a progran named `test.py`, it works well in command line environment as a tool using docopt:\r\n```\r\n./test.py -c 4 -p 6\r\n```\r\n\r\nAnd `test.py` has a fuction named `get_host(ip,port)`, I want to use this func in another program, when I try to import :\r\n```\r\nfrom test import get_host\r\n```\r\nbut docopt also shows:\r\n```\r\nUsage:\r\n    test.py -c <thread> -p <port>\r\n```\r\n\r\nHow could I ignore docopt's parsing when my program is a imported module?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/453", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/453/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/453/events", "html_url": "https://github.com/docopt/docopt/issues/453", "id": 456991998, "node_id": "MDU6SXNzdWU0NTY5OTE5OTg=", "number": 453, "title": "Windows installation fails", "user": {"login": "wjsetzer", "id": 21987442, "node_id": "MDQ6VXNlcjIxOTg3NDQy", "avatar_url": "https://avatars1.githubusercontent.com/u/21987442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wjsetzer", "html_url": "https://github.com/wjsetzer", "followers_url": "https://api.github.com/users/wjsetzer/followers", "following_url": "https://api.github.com/users/wjsetzer/following{/other_user}", "gists_url": "https://api.github.com/users/wjsetzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/wjsetzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wjsetzer/subscriptions", "organizations_url": "https://api.github.com/users/wjsetzer/orgs", "repos_url": "https://api.github.com/users/wjsetzer/repos", "events_url": "https://api.github.com/users/wjsetzer/events{/privacy}", "received_events_url": "https://api.github.com/users/wjsetzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-17T15:13:07Z", "updated_at": "2019-07-02T15:02:12Z", "closed_at": "2019-07-02T15:01:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python: 3.7.3\r\nPlatform: Windows 10\r\n\r\nWhen installing with pip, fails with error:\r\n```\r\n    ERROR: Complete output from command python setup.py egg_info:\r\n    ERROR: Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"C:\\Users\\wjsetzer\\AppData\\Local\\Temp\\pip-install-4g490b59\\docopt\\setup.py\", line 3, in <module>\r\n        from docopt import __version__\r\n    ModuleNotFoundError: No module named 'docopt'\r\n    ----------------------------------------\r\nERROR: Command \"python setup.py egg_info\" failed with error code 1 in C:\\Users\\wjsetzer\\AppData\\Local\\Temp\\pip-install-4g490b59\\docopt\\\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/451", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/451/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/451/events", "html_url": "https://github.com/docopt/docopt/issues/451", "id": 450461366, "node_id": "MDU6SXNzdWU0NTA0NjEzNjY=", "number": 451, "title": "docopt doesn't respect help=False option", "user": {"login": "tsturzl", "id": 623753, "node_id": "MDQ6VXNlcjYyMzc1Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/623753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsturzl", "html_url": "https://github.com/tsturzl", "followers_url": "https://api.github.com/users/tsturzl/followers", "following_url": "https://api.github.com/users/tsturzl/following{/other_user}", "gists_url": "https://api.github.com/users/tsturzl/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsturzl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsturzl/subscriptions", "organizations_url": "https://api.github.com/users/tsturzl/orgs", "repos_url": "https://api.github.com/users/tsturzl/repos", "events_url": "https://api.github.com/users/tsturzl/events{/privacy}", "received_events_url": "https://api.github.com/users/tsturzl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-30T19:11:04Z", "updated_at": "2019-05-31T14:12:03Z", "closed_at": "2019-05-31T14:12:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently setting `help=False` when calling docopt, this ends up printing the help message and exiting even though this isn't what I want, hence why I'm specifying `help=False`. I also don't see `--help` or `-h` in my args when I parse commands. What's even more odd when I specify `help=False` it doesn't display the entire doc it only displays the `Usage`. I take it this is because the command/args entered aren't known. However I still cannot handle `-h --help` myself so it will always fail like this, and if I disable help this isn't something that I want docopt to do.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/448", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/448/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/448/events", "html_url": "https://github.com/docopt/docopt/issues/448", "id": 421663660, "node_id": "MDU6SXNzdWU0MjE2NjM2NjA=", "number": 448, "title": "repeating keyword arg alias as shortname", "user": {"login": "maxnbk", "id": 6218350, "node_id": "MDQ6VXNlcjYyMTgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6218350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxnbk", "html_url": "https://github.com/maxnbk", "followers_url": "https://api.github.com/users/maxnbk/followers", "following_url": "https://api.github.com/users/maxnbk/following{/other_user}", "gists_url": "https://api.github.com/users/maxnbk/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxnbk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxnbk/subscriptions", "organizations_url": "https://api.github.com/users/maxnbk/orgs", "repos_url": "https://api.github.com/users/maxnbk/repos", "events_url": "https://api.github.com/users/maxnbk/events{/privacy}", "received_events_url": "https://api.github.com/users/maxnbk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-15T19:02:12Z", "updated_at": "2019-03-30T04:26:33Z", "closed_at": "2019-03-30T04:26:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I do something like:\r\n`usage: tool [options] [--flag=<flag>...]`\r\n\r\nI can use multiple repeating args,\r\nbut if I add:\r\n`options:\r\n  -f <flag>...  --flag=<flag>... [default: flag1 flag2]`\r\n\r\nWith the defaults, --flag and -f should be the same list.\r\nBut the -f arg receives --flags default as a string and not a list, --flags receives nothing.\r\nI'd like \"-f flag\" and --flag=flag to simply add up into the same list, and using the same defaults, regardless of whether it ends up in the args dict as the keyword equivalent or short equivalent.\r\n\r\nIs there a way to accomplish that both `-f <flag>`... and `--flag=<flag>`... are treated identically?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/447", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/447/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/447/events", "html_url": "https://github.com/docopt/docopt/issues/447", "id": 416137409, "node_id": "MDU6SXNzdWU0MTYxMzc0MDk=", "number": 447, "title": "Wrap a full command in docopt arguments", "user": {"login": "PertuyF", "id": 12252516, "node_id": "MDQ6VXNlcjEyMjUyNTE2", "avatar_url": "https://avatars3.githubusercontent.com/u/12252516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PertuyF", "html_url": "https://github.com/PertuyF", "followers_url": "https://api.github.com/users/PertuyF/followers", "following_url": "https://api.github.com/users/PertuyF/following{/other_user}", "gists_url": "https://api.github.com/users/PertuyF/gists{/gist_id}", "starred_url": "https://api.github.com/users/PertuyF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PertuyF/subscriptions", "organizations_url": "https://api.github.com/users/PertuyF/orgs", "repos_url": "https://api.github.com/users/PertuyF/repos", "events_url": "https://api.github.com/users/PertuyF/events{/privacy}", "received_events_url": "https://api.github.com/users/PertuyF/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-01T14:51:54Z", "updated_at": "2019-03-16T21:45:11Z", "closed_at": "2019-03-16T21:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all!\r\n\r\nI am pretty happy with `docopt` so far, it makes developing a CLI really easy and clear most of the time, even for complex commands folding.\r\n\r\nNow I would like to create a CLI wrapper around a different command, in order to dispatch this command to a different machine. The idea is somehow similar to what `parallel` does:\r\n\r\n```sh\r\nwrapper --warg <warg> \"cmd --carg <carg>\"\r\n```\r\nWith `warg` being an optionnal argument to the wrapper, and `carg` an optional argument to the wrapped command.\r\n\r\n**Is there a way to do so using docopt?**\r\n\r\n\r\n\r\nEverything I tried failed as long as the command contains a dashed-option that is not documented. My closest match being:\r\n```\r\nWrapper.\r\n\r\nUsage:\r\n  wrapper [-t | --threads <threads>] <cmd>...\r\n  wrapper -h | --help\r\n  wrapper -v | --version\r\n\r\nOptions:\r\n  -h --help              Show this screen.\r\n  -v --version           Show version.\r\n  -t --threads <threads> Number of threads to use. [default: 1]\r\n```\r\n\r\n```sh\r\n$ wrapper mycmd test 2 -t 4\r\n{\r\n  \"--help\": false, \r\n  \"--threads\": [\r\n    \"4\"\r\n  ], \r\n  \"--version\": false, \r\n  \"<cmd>\": [\r\n    \"mycmd\", \r\n    \"test\", \r\n    \"2\"\r\n  ]\r\n}\r\n\r\n$ wrapper mycmd test 2 --arg\r\nUsage:\r\n  wrapper [-t | --threads <threads>] <cmd>...\r\n  wrapper -h | --help\r\n  wrapper -v | --version\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/443", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/443/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/443/events", "html_url": "https://github.com/docopt/docopt/issues/443", "id": 402556763, "node_id": "MDU6SXNzdWU0MDI1NTY3NjM=", "number": 443, "title": "i love your guys who develop this module", "user": {"login": "snowman", "id": 16096559, "node_id": "MDQ6VXNlcjE2MDk2NTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/16096559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snowman", "html_url": "https://github.com/snowman", "followers_url": "https://api.github.com/users/snowman/followers", "following_url": "https://api.github.com/users/snowman/following{/other_user}", "gists_url": "https://api.github.com/users/snowman/gists{/gist_id}", "starred_url": "https://api.github.com/users/snowman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snowman/subscriptions", "organizations_url": "https://api.github.com/users/snowman/orgs", "repos_url": "https://api.github.com/users/snowman/repos", "events_url": "https://api.github.com/users/snowman/events{/privacy}", "received_events_url": "https://api.github.com/users/snowman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-24T06:08:46Z", "updated_at": "2019-01-24T06:08:57Z", "closed_at": "2019-01-24T06:08:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "you are awesome, saving my stupid time wasting for parse option & reading documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/434", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/434/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/434/events", "html_url": "https://github.com/docopt/docopt/issues/434", "id": 356028208, "node_id": "MDU6SXNzdWUzNTYwMjgyMDg=", "number": 434, "title": "-s and --save should be same key", "user": {"login": "baruchiro", "id": 17686879, "node_id": "MDQ6VXNlcjE3Njg2ODc5", "avatar_url": "https://avatars2.githubusercontent.com/u/17686879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baruchiro", "html_url": "https://github.com/baruchiro", "followers_url": "https://api.github.com/users/baruchiro/followers", "following_url": "https://api.github.com/users/baruchiro/following{/other_user}", "gists_url": "https://api.github.com/users/baruchiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/baruchiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baruchiro/subscriptions", "organizations_url": "https://api.github.com/users/baruchiro/orgs", "repos_url": "https://api.github.com/users/baruchiro/repos", "events_url": "https://api.github.com/users/baruchiro/events{/privacy}", "received_events_url": "https://api.github.com/users/baruchiro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-31T15:32:43Z", "updated_at": "2018-08-31T15:34:36Z", "closed_at": "2018-08-31T15:34:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think that if we have an option:\n> Options:\n>     -s --save    save this file\n\nWe need to save the boolean result in arguments, only with one key (`-s` or `--save`), Even the user put `-s` nor `--save`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/426", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/426/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/426/events", "html_url": "https://github.com/docopt/docopt/issues/426", "id": 343655709, "node_id": "MDU6SXNzdWUzNDM2NTU3MDk=", "number": 426, "title": "How to assign default values to arguments?", "user": {"login": "OnkelTem", "id": 114060, "node_id": "MDQ6VXNlcjExNDA2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OnkelTem", "html_url": "https://github.com/OnkelTem", "followers_url": "https://api.github.com/users/OnkelTem/followers", "following_url": "https://api.github.com/users/OnkelTem/following{/other_user}", "gists_url": "https://api.github.com/users/OnkelTem/gists{/gist_id}", "starred_url": "https://api.github.com/users/OnkelTem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OnkelTem/subscriptions", "organizations_url": "https://api.github.com/users/OnkelTem/orgs", "repos_url": "https://api.github.com/users/OnkelTem/repos", "events_url": "https://api.github.com/users/OnkelTem/events{/privacy}", "received_events_url": "https://api.github.com/users/OnkelTem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-23T14:25:04Z", "updated_at": "2018-07-24T09:05:37Z", "closed_at": "2018-07-24T09:05:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "For a definition like this:\r\n```\r\nUsage:\r\n  init DECK [TEMPLATE] \r\n\r\nOptions:\r\n  DECK                   The name of a deck to initialize.\r\n  TEMPLATE               Use this template to initialize new deck. [Default: Default]\r\n```\r\n`TEMPLATE` isn't getting assigned the \"Default\" value for a call list this:\r\n```\r\n$ ./init MyDeck\r\n```\r\nI suspect the reason is wrong argument specification in the `Options` section. But how to properly define arguments then?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/425", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/425/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/425/events", "html_url": "https://github.com/docopt/docopt/issues/425", "id": 343652368, "node_id": "MDU6SXNzdWUzNDM2NTIzNjg=", "number": 425, "title": "Problem with parsing arguments: script [ARG1] ARG2", "user": {"login": "OnkelTem", "id": 114060, "node_id": "MDQ6VXNlcjExNDA2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OnkelTem", "html_url": "https://github.com/OnkelTem", "followers_url": "https://api.github.com/users/OnkelTem/followers", "following_url": "https://api.github.com/users/OnkelTem/following{/other_user}", "gists_url": "https://api.github.com/users/OnkelTem/gists{/gist_id}", "starred_url": "https://api.github.com/users/OnkelTem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OnkelTem/subscriptions", "organizations_url": "https://api.github.com/users/OnkelTem/orgs", "repos_url": "https://api.github.com/users/OnkelTem/repos", "events_url": "https://api.github.com/users/OnkelTem/events{/privacy}", "received_events_url": "https://api.github.com/users/OnkelTem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-23T14:16:49Z", "updated_at": "2018-07-24T09:05:35Z", "closed_at": "2018-07-24T09:05:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "A definition like this:\r\n```\r\nUsage:\r\n  script [ARG1] ARG2\r\n```\r\ndoesn't produce working configuration. E.g. this doesn't work:\r\n```\r\n$ ./script asd\r\nUsage:\r\n  script [ARG1] ARG2\r\n```\r\nwhile `asd` should be assigned to `ARG2` according to the definition.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/424", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/424/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/424/events", "html_url": "https://github.com/docopt/docopt/issues/424", "id": 341387780, "node_id": "MDU6SXNzdWUzNDEzODc3ODA=", "number": 424, "title": "[Question] How do you test your docopt app ?", "user": {"login": "azzamsa", "id": 17734314, "node_id": "MDQ6VXNlcjE3NzM0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17734314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azzamsa", "html_url": "https://github.com/azzamsa", "followers_url": "https://api.github.com/users/azzamsa/followers", "following_url": "https://api.github.com/users/azzamsa/following{/other_user}", "gists_url": "https://api.github.com/users/azzamsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/azzamsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azzamsa/subscriptions", "organizations_url": "https://api.github.com/users/azzamsa/orgs", "repos_url": "https://api.github.com/users/azzamsa/repos", "events_url": "https://api.github.com/users/azzamsa/events{/privacy}", "received_events_url": "https://api.github.com/users/azzamsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-16T04:30:17Z", "updated_at": "2018-11-11T08:42:34Z", "closed_at": "2018-11-11T08:42:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have read this https://github.com/docopt/docopt/issues/195 issue. But I have different question.\r\n\r\nWe have built cli app with docopt. The problem occurred when we create the unittest code. our app look like this\r\n\r\n```\r\n+-----------------+\r\n|       Base      |\r\n+-----------------+\r\n|                 |\r\n|                 |\r\n+-----------------+\r\n|     execute()   |\r\n+--------+--------+\r\n         ^\r\n         |\r\n         |\r\n +-------+---------+\r\n |     Foo         |\r\n +-----------------+\r\n |                 |\r\n |                 |\r\n +-----------------+\r\n |     execute()   |\r\n +-----------------+\r\n\r\n```\r\n\r\n1) I can run test with `subprocess`, capture the output result, then assert it. But the the problem is : `subprocess` doesn't run the 'raw' code, so `coverage` see that part of code as untested\r\n\r\n2) if this normal python program. I can call the execute function of Foo class with \r\n\r\n``` python\r\no = Foo()\r\no.execute()\r\n```\r\n\r\nBut I can't do this with docopt cause I have to run the Base class supplied with argument. `python base <args>`. I have many inherited class from `Base` with the same `execute()` function contain many statements. How to test/run those statements ?\r\n\r\nThank you in advance. \r\n\r\nHope I can hear your flow guys when creating testing for docopt app.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/423", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/423/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/423/events", "html_url": "https://github.com/docopt/docopt/issues/423", "id": 341227419, "node_id": "MDU6SXNzdWUzNDEyMjc0MTk=", "number": 423, "title": "Cannot parse basic line", "user": {"login": "OnkelTem", "id": 114060, "node_id": "MDQ6VXNlcjExNDA2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OnkelTem", "html_url": "https://github.com/OnkelTem", "followers_url": "https://api.github.com/users/OnkelTem/followers", "following_url": "https://api.github.com/users/OnkelTem/following{/other_user}", "gists_url": "https://api.github.com/users/OnkelTem/gists{/gist_id}", "starred_url": "https://api.github.com/users/OnkelTem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OnkelTem/subscriptions", "organizations_url": "https://api.github.com/users/OnkelTem/orgs", "repos_url": "https://api.github.com/users/OnkelTem/repos", "events_url": "https://api.github.com/users/OnkelTem/events{/privacy}", "received_events_url": "https://api.github.com/users/OnkelTem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-14T10:43:54Z", "updated_at": "2018-07-15T09:59:54Z", "closed_at": "2018-07-15T09:58:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nUsage:\r\n  script cmd [-i A] [-f B] (- | FILE)\r\n```\r\n\r\nThis fails:\r\n```\r\n$ script cmd -i value myfile\r\n```\r\n\r\nI should say I use PHP library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/422", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/422/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/422/events", "html_url": "https://github.com/docopt/docopt/issues/422", "id": 341226013, "node_id": "MDU6SXNzdWUzNDEyMjYwMTM=", "number": 422, "title": "Usage is too long / any way to split it?", "user": {"login": "OnkelTem", "id": 114060, "node_id": "MDQ6VXNlcjExNDA2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/114060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OnkelTem", "html_url": "https://github.com/OnkelTem", "followers_url": "https://api.github.com/users/OnkelTem/followers", "following_url": "https://api.github.com/users/OnkelTem/following{/other_user}", "gists_url": "https://api.github.com/users/OnkelTem/gists{/gist_id}", "starred_url": "https://api.github.com/users/OnkelTem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OnkelTem/subscriptions", "organizations_url": "https://api.github.com/users/OnkelTem/orgs", "repos_url": "https://api.github.com/users/OnkelTem/repos", "events_url": "https://api.github.com/users/OnkelTem/events{/privacy}", "received_events_url": "https://api.github.com/users/OnkelTem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-14T10:18:02Z", "updated_at": "2018-07-15T18:23:59Z", "closed_at": "2018-07-15T18:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThanks for the tool, the idea is great!\r\n\r\nSo I try to define my first _usage_. What worries me is that my line is so long that won't fit into a regular screen and it's difficult to maintain it too:\r\n```\r\nUsage:\r\n  parse (csv [--no-header]|json) [(-i INCLUDE-COLUMNS)...] [(-x EXCLUDE-COLUMNS)...] [(-f FILTERS)...] [--distinct] (-| \r\nFILE)\r\n```\r\nIs there any way to split it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/421", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/421/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/421/events", "html_url": "https://github.com/docopt/docopt/issues/421", "id": 341206633, "node_id": "MDU6SXNzdWUzNDEyMDY2MzM=", "number": 421, "title": "[Question] program description inside docopt ", "user": {"login": "azzamsa", "id": 17734314, "node_id": "MDQ6VXNlcjE3NzM0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17734314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azzamsa", "html_url": "https://github.com/azzamsa", "followers_url": "https://api.github.com/users/azzamsa/followers", "following_url": "https://api.github.com/users/azzamsa/following{/other_user}", "gists_url": "https://api.github.com/users/azzamsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/azzamsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azzamsa/subscriptions", "organizations_url": "https://api.github.com/users/azzamsa/orgs", "repos_url": "https://api.github.com/users/azzamsa/repos", "events_url": "https://api.github.com/users/azzamsa/events{/privacy}", "received_events_url": "https://api.github.com/users/azzamsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-14T03:58:41Z", "updated_at": "2018-07-14T09:52:47Z", "closed_at": "2018-07-14T09:52:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we put program description or help message in docopt ?\r\ne.g\r\n\r\n``` python\r\n\"\"\"\r\nuse naval_fate -h to print help massage\r\n\r\nUsage:\r\n  naval_fate.py ship new <name>...\r\n  naval_fate.py --version\r\n\r\nOptions:\r\n  -h --help     Show this screen.\r\n  --drifting    Drifting mine.\r\n\"\"\"\r\n```\r\n\r\nSo when user only run `naval_fate` it doesn't only print `<Usage:>` but with `use naval_fate -h to print help massage`\r\n\r\nDoes docopt had this ability ? or any other way ?\r\n\r\nThanks for this awesome package :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/417", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/417/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/417/events", "html_url": "https://github.com/docopt/docopt/issues/417", "id": 327372013, "node_id": "MDU6SXNzdWUzMjczNzIwMTM=", "number": 417, "title": "new maintainer for bash port of docopt : docopts + rewrite in golang", "user": {"login": "Sylvain303", "id": 274026, "node_id": "MDQ6VXNlcjI3NDAyNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/274026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sylvain303", "html_url": "https://github.com/Sylvain303", "followers_url": "https://api.github.com/users/Sylvain303/followers", "following_url": "https://api.github.com/users/Sylvain303/following{/other_user}", "gists_url": "https://api.github.com/users/Sylvain303/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sylvain303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sylvain303/subscriptions", "organizations_url": "https://api.github.com/users/Sylvain303/orgs", "repos_url": "https://api.github.com/users/Sylvain303/repos", "events_url": "https://api.github.com/users/Sylvain303/events{/privacy}", "received_events_url": "https://api.github.com/users/Sylvain303/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-29T15:26:12Z", "updated_at": "2019-01-14T16:32:48Z", "closed_at": "2019-01-14T16:32:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI proposed myself as a new maintainer for [docopts](https://github.com/docopt/docopts/issues/5) but without success.\r\n\r\nI canceled my PR (https://github.com/docopt/docopts/pull/8)\r\n\r\nI've rewritten a full compatible and tested version of [docopts in golang](https://github.com/Sylvain303/docopts/tree/docopts-go).\r\n\r\nI still propose to maintain and upgrade `docopts`. Who can I contact to become part of the team so I can merge and maintain the docopts version for bash?\r\n\r\nRegards,\r\nSylvain.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/409", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/409/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/409/events", "html_url": "https://github.com/docopt/docopt/issues/409", "id": 305206005, "node_id": "MDU6SXNzdWUzMDUyMDYwMDU=", "number": 409, "title": "If using a --monitor as help menu option docopt throw unmatched '(' exception", "user": {"login": "raakasf", "id": 4614260, "node_id": "MDQ6VXNlcjQ2MTQyNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4614260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raakasf", "html_url": "https://github.com/raakasf", "followers_url": "https://api.github.com/users/raakasf/followers", "following_url": "https://api.github.com/users/raakasf/following{/other_user}", "gists_url": "https://api.github.com/users/raakasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/raakasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raakasf/subscriptions", "organizations_url": "https://api.github.com/users/raakasf/orgs", "repos_url": "https://api.github.com/users/raakasf/repos", "events_url": "https://api.github.com/users/raakasf/events{/privacy}", "received_events_url": "https://api.github.com/users/raakasf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-14T15:22:54Z", "updated_at": "2018-03-14T17:37:12Z", "closed_at": "2018-03-14T17:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to add an option --monitor to Usage, but kept getting this error:\r\n\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 182, in <module>\r\n    arguments = docopt(__doc__, version='test 1.0.0')\r\n  File \"/usr/lib/python2.7/site-packages/docopt.py\", line 560, in docopt\r\n    pattern = parse_pattern(formal_usage(DocoptExit.usage), options)\r\n  File \"/usr/lib/python2.7/site-packages/docopt.py\", line 373, in parse_pattern\r\n    result = parse_expr(tokens, options)\r\n  File \"/usr/lib/python2.7/site-packages/docopt.py\", line 387, in parse_expr\r\n    seq = parse_seq(tokens, options)\r\n  File \"/usr/lib/python2.7/site-packages/docopt.py\", line 396, in parse_seq\r\n    atom = parse_atom(tokens, options)\r\n  File \"/usr/lib/python2.7/site-packages/docopt.py\", line 415, in parse_atom\r\n    raise tokens.error(\"unmatched '%s'\" % token)\r\ndocopt.DocoptLanguageError: unmatched '('\r\n\r\nIf I try --monito (notice without r), it works. It fails if I use --monitor", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/408", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/408/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/408/events", "html_url": "https://github.com/docopt/docopt/issues/408", "id": 294302966, "node_id": "MDU6SXNzdWUyOTQzMDI5NjY=", "number": 408, "title": "Testing Docopt throws a DocoptExit when getting args from a different module", "user": {"login": "llamicron", "id": 15224976, "node_id": "MDQ6VXNlcjE1MjI0OTc2", "avatar_url": "https://avatars3.githubusercontent.com/u/15224976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llamicron", "html_url": "https://github.com/llamicron", "followers_url": "https://api.github.com/users/llamicron/followers", "following_url": "https://api.github.com/users/llamicron/following{/other_user}", "gists_url": "https://api.github.com/users/llamicron/gists{/gist_id}", "starred_url": "https://api.github.com/users/llamicron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llamicron/subscriptions", "organizations_url": "https://api.github.com/users/llamicron/orgs", "repos_url": "https://api.github.com/users/llamicron/repos", "events_url": "https://api.github.com/users/llamicron/events{/privacy}", "received_events_url": "https://api.github.com/users/llamicron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-05T08:02:46Z", "updated_at": "2018-02-06T01:35:42Z", "closed_at": "2018-02-06T01:35:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to test my module, using [this example](https://github.com/docopt/docopt/issues/195). Here's some relevant code:\r\n\r\n`junc.py`\r\n```python\r\n\"\"\"\r\nUsage:\r\n    junc list [--json]\r\n    junc connect <name>\r\n    junc add [(<name> <username> <ip>)] [<location>]\r\n    junc remove <name>\r\n    junc backup [<file>]\r\n    junc restore [<file>]\r\n\"\"\"\r\n\r\n# More irrelevant Python here\r\n```\r\n\r\n`tests/test_junc.py`:\r\n```python\r\nfrom docopt import docopt\r\n\r\nimport junc # This import is fine\r\ndoc = junc.__doc__\r\n\r\nargs = docopt(doc, ['junc', 'list']) # This line throws DocoptExit\r\n\r\n```\r\n*There's more to these files but I'm shortening*\r\nPreviously mentioned line throws a `DocoptExit`. Here's the output when running pytest:\r\n```sh\r\njunc/tests/test_junc.py:9: in <module>\r\n    args = docopt(doc, ['junc', 'list'])\r\n../../../envs/main3/lib/python3.6/site-packages/docopt.py:579: in docopt\r\n    raise DocoptExit()\r\nE   docopt.DocoptExit: Usage:\r\nE       junc list [--json]\r\nE       junc connect <name>\r\nE       junc add [(<name> <username> <ip>)] [<location>]\r\nE       junc remove <name>\r\nE       junc backup [<file>]\r\nE       junc restore [<file>]\r\n```\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/406", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/406/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/406/events", "html_url": "https://github.com/docopt/docopt/issues/406", "id": 290680929, "node_id": "MDU6SXNzdWUyOTA2ODA5Mjk=", "number": 406, "title": "Options with default arguments: Allow flag without argument?", "user": {"login": "RustyPedrosa", "id": 6540111, "node_id": "MDQ6VXNlcjY1NDAxMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6540111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RustyPedrosa", "html_url": "https://github.com/RustyPedrosa", "followers_url": "https://api.github.com/users/RustyPedrosa/followers", "following_url": "https://api.github.com/users/RustyPedrosa/following{/other_user}", "gists_url": "https://api.github.com/users/RustyPedrosa/gists{/gist_id}", "starred_url": "https://api.github.com/users/RustyPedrosa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RustyPedrosa/subscriptions", "organizations_url": "https://api.github.com/users/RustyPedrosa/orgs", "repos_url": "https://api.github.com/users/RustyPedrosa/repos", "events_url": "https://api.github.com/users/RustyPedrosa/events{/privacy}", "received_events_url": "https://api.github.com/users/RustyPedrosa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-23T01:51:10Z", "updated_at": "2018-02-16T22:53:10Z", "closed_at": "2018-02-08T07:51:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nIt's my first time using docopt and writing a tool with formal command like arguments.  Not sure how best to make this clear.. Say I have:\r\n\r\n`Options:`\r\n`  -i FILE, --input=FILE        For pre-defined user input. [default: input.file]`\r\n\r\nIf the user doesn't specify `-i`, then I want `['--input']` to be `None` (so I know not to look for a file)\r\nIf the user says `-i` but doesn't specify a file, I want `['--input']` to default to `'input.file'`\r\nIf the user specifies a file as in `-i my.file`, then I want `['--input']` to give me `'my.file'`\r\n\r\nRight now, if the user says `-i`, the program stops with `-i requires argument` even though a default is in the doc.  But if the user leaves off `-i` completely, then the default value gets assigned to `['--input']`.  Feels backwards to me, but maybe that's because I am new to this.\r\n\r\nWhat's the right way to accomplish what I want?  Or should I just be stricter on users and force them to specify filenames?  Ideally I would put square brackets around the argument, like this, and the default only applies if the flag is specified:\r\n`Options:`\r\n`  -i [FILE], --input[=FILE]        For pre-defined user input. [default: input.file]`\r\n\r\nI will have 3 optional flags/files like this btw.  Using optional arguments with defaults, perhaps in combination with flags, doesn't seem like it would work well for more than 1 or 2 inputs (how do you know which of the 3 variables the user intended to specify?  It can be specified with flags, I suppose).\r\n\r\nThanks!\r\n(edit- Even with backticks, it seems newlines and multiple spaces are ignored.  Odd.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/405", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/405/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/405/events", "html_url": "https://github.com/docopt/docopt/issues/405", "id": 289727963, "node_id": "MDU6SXNzdWUyODk3Mjc5NjM=", "number": 405, "title": "Purposefully given empty value vs not given value", "user": {"login": "ghsatpute", "id": 3480767, "node_id": "MDQ6VXNlcjM0ODA3Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3480767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghsatpute", "html_url": "https://github.com/ghsatpute", "followers_url": "https://api.github.com/users/ghsatpute/followers", "following_url": "https://api.github.com/users/ghsatpute/following{/other_user}", "gists_url": "https://api.github.com/users/ghsatpute/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghsatpute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghsatpute/subscriptions", "organizations_url": "https://api.github.com/users/ghsatpute/orgs", "repos_url": "https://api.github.com/users/ghsatpute/repos", "events_url": "https://api.github.com/users/ghsatpute/events{/privacy}", "received_events_url": "https://api.github.com/users/ghsatpute/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-18T18:19:30Z", "updated_at": "2018-01-18T18:43:37Z", "closed_at": "2018-01-18T18:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When executing particular command \r\n1. Purposefully given empty value\r\n`mycommand run --mode=''`\r\nvs \r\n2. Didn't give the parameter at all.\r\n`mycommand run`\r\n\r\nBoth will return dictionary containing \r\n`{'mode' : None}`\r\nHow do I differentiate between these two?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/398", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/398/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/398/events", "html_url": "https://github.com/docopt/docopt/issues/398", "id": 276308303, "node_id": "MDU6SXNzdWUyNzYzMDgzMDM=", "number": 398, "title": "Does docopt support string argument?", "user": {"login": "leafonsword", "id": 1754580, "node_id": "MDQ6VXNlcjE3NTQ1ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1754580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leafonsword", "html_url": "https://github.com/leafonsword", "followers_url": "https://api.github.com/users/leafonsword/followers", "following_url": "https://api.github.com/users/leafonsword/following{/other_user}", "gists_url": "https://api.github.com/users/leafonsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/leafonsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leafonsword/subscriptions", "organizations_url": "https://api.github.com/users/leafonsword/orgs", "repos_url": "https://api.github.com/users/leafonsword/repos", "events_url": "https://api.github.com/users/leafonsword/events{/privacy}", "received_events_url": "https://api.github.com/users/leafonsword/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-23T09:26:19Z", "updated_at": "2017-11-25T04:58:30Z", "closed_at": "2017-11-25T04:58:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "for example:\r\n```\r\nfoo.py --sql='create database test'\r\n```\r\nDoes docopt support this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/396", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/396/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/396/events", "html_url": "https://github.com/docopt/docopt/issues/396", "id": 276234052, "node_id": "MDU6SXNzdWUyNzYyMzQwNTI=", "number": 396, "title": "Transfer this project to Jazzband?", "user": {"login": "benjaoming", "id": 374612, "node_id": "MDQ6VXNlcjM3NDYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/374612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaoming", "html_url": "https://github.com/benjaoming", "followers_url": "https://api.github.com/users/benjaoming/followers", "following_url": "https://api.github.com/users/benjaoming/following{/other_user}", "gists_url": "https://api.github.com/users/benjaoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaoming/subscriptions", "organizations_url": "https://api.github.com/users/benjaoming/orgs", "repos_url": "https://api.github.com/users/benjaoming/repos", "events_url": "https://api.github.com/users/benjaoming/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaoming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-22T23:44:36Z", "updated_at": "2018-12-12T20:30:27Z", "closed_at": "2018-12-12T20:30:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "With all respect! :)\r\n\r\nGiven the number of unmerged PRs, and the otherwise great quality of the codebase, I would propose that the owners of this repo try to transfer everything to https://github.com/jazzband -- see also https://jazzband.co/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/395", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/395/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/395/events", "html_url": "https://github.com/docopt/docopt/issues/395", "id": 275735823, "node_id": "MDU6SXNzdWUyNzU3MzU4MjM=", "number": 395, "title": "Optional global parameter", "user": {"login": "prsolucoes", "id": 395096, "node_id": "MDQ6VXNlcjM5NTA5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/395096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prsolucoes", "html_url": "https://github.com/prsolucoes", "followers_url": "https://api.github.com/users/prsolucoes/followers", "following_url": "https://api.github.com/users/prsolucoes/following{/other_user}", "gists_url": "https://api.github.com/users/prsolucoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/prsolucoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prsolucoes/subscriptions", "organizations_url": "https://api.github.com/users/prsolucoes/orgs", "repos_url": "https://api.github.com/users/prsolucoes/repos", "events_url": "https://api.github.com/users/prsolucoes/events{/privacy}", "received_events_url": "https://api.github.com/users/prsolucoes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-21T14:40:50Z", "updated_at": "2017-11-26T07:55:05Z", "closed_at": "2017-11-26T07:55:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im trying enable a optional parameter for all commands that i have, instead of specify for each available command.\r\n\r\nExample is (-d or --debug) that will be available for all commands. It will be enable debug mode. But it is not working. Only work if i specify on each command that it exists. But put all optionals for all commands that i have in my tool is a pain. Can anyone help me?\r\n\r\n```\r\nEzoRed\r\n\r\nUsage:\r\n ezored dependency list\r\n ezored dependency update\r\n ezored target list\r\n ezored hello\r\n ezored -h | --help\r\n ezored [-d | --debug]\r\n\r\nOptions:\r\n -h --help           Show this screen.\r\n --version           Show version.\r\n -d --debug          Enable debug messages.\r\n```\r\n\r\nIf i call:\r\nezored -d\r\n\r\nworks, but is not what i want\r\nif i call:\r\nezored dependency list -d\r\nor\r\nezored dependency list --debug\r\n\r\ndont work\r\nPlease. Help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/393", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/393/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/393/events", "html_url": "https://github.com/docopt/docopt/issues/393", "id": 257942589, "node_id": "MDU6SXNzdWUyNTc5NDI1ODk=", "number": 393, "title": "docopt not displaying first docstring line", "user": {"login": "Overdrivr", "id": 1294805, "node_id": "MDQ6VXNlcjEyOTQ4MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1294805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Overdrivr", "html_url": "https://github.com/Overdrivr", "followers_url": "https://api.github.com/users/Overdrivr/followers", "following_url": "https://api.github.com/users/Overdrivr/following{/other_user}", "gists_url": "https://api.github.com/users/Overdrivr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Overdrivr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Overdrivr/subscriptions", "organizations_url": "https://api.github.com/users/Overdrivr/orgs", "repos_url": "https://api.github.com/users/Overdrivr/repos", "events_url": "https://api.github.com/users/Overdrivr/events{/privacy}", "received_events_url": "https://api.github.com/users/Overdrivr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-15T06:46:07Z", "updated_at": "2017-09-15T06:59:32Z", "closed_at": "2017-09-15T06:59:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why isn't docopt printing the first docstring line ? Is this default behavior ?\r\n\r\n```\r\ndoc = '''Program title\r\nUsage:\r\n  program </path/to/config.yml> ...\r\n  program --template <filename.yml>\r\n  program --version\r\n  program --help\r\n\r\nOptions:\r\n  --template    Generates a configuration template\r\n  -h --help     Show this screen.\r\n  -v --version  Show version.\r\n\r\n'''\r\n\r\nif __name__ == '__main__':\r\n    arguments = docopt(doc, version='0.6.0')\r\n    print(arguments)\r\n```\r\n\r\nOutput:\r\n```\r\n$ python argparser.py\r\nUsage:\r\n  program </path/to/config.yml> ...\r\n  program --template <filename.yml>\r\n  program --version\r\n  program --help\r\n```\r\n`Program title` is missing from the output.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/392", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/392/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/392/events", "html_url": "https://github.com/docopt/docopt/issues/392", "id": 254930652, "node_id": "MDU6SXNzdWUyNTQ5MzA2NTI=", "number": 392, "title": "Typo on pypi index page", "user": {"login": "Sembrani", "id": 9014982, "node_id": "MDQ6VXNlcjkwMTQ5ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9014982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sembrani", "html_url": "https://github.com/Sembrani", "followers_url": "https://api.github.com/users/Sembrani/followers", "following_url": "https://api.github.com/users/Sembrani/following{/other_user}", "gists_url": "https://api.github.com/users/Sembrani/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sembrani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sembrani/subscriptions", "organizations_url": "https://api.github.com/users/Sembrani/orgs", "repos_url": "https://api.github.com/users/Sembrani/repos", "events_url": "https://api.github.com/users/Sembrani/events{/privacy}", "received_events_url": "https://api.github.com/users/Sembrani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-04T04:02:57Z", "updated_at": "2018-01-09T15:54:28Z", "closed_at": "2018-01-09T15:54:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure where to edit / put in a pull request to edit the pypi page at https://pypi.python.org/pypi/docopt/\r\nThe \"Porting docopt to other languages\" section has a misspelling of \"following\" as \"follosing\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/390", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/390/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/390/events", "html_url": "https://github.com/docopt/docopt/issues/390", "id": 252593677, "node_id": "MDU6SXNzdWUyNTI1OTM2Nzc=", "number": 390, "title": "Error when there is a single optional dashed argument", "user": {"login": "marceloslacerda", "id": 473983, "node_id": "MDQ6VXNlcjQ3Mzk4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/473983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marceloslacerda", "html_url": "https://github.com/marceloslacerda", "followers_url": "https://api.github.com/users/marceloslacerda/followers", "following_url": "https://api.github.com/users/marceloslacerda/following{/other_user}", "gists_url": "https://api.github.com/users/marceloslacerda/gists{/gist_id}", "starred_url": "https://api.github.com/users/marceloslacerda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marceloslacerda/subscriptions", "organizations_url": "https://api.github.com/users/marceloslacerda/orgs", "repos_url": "https://api.github.com/users/marceloslacerda/repos", "events_url": "https://api.github.com/users/marceloslacerda/events{/privacy}", "received_events_url": "https://api.github.com/users/marceloslacerda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-24T13:00:22Z", "updated_at": "2018-01-11T11:59:54Z", "closed_at": "2018-01-11T11:59:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's the code and the stacktrace:\r\nhttps://gist.github.com/marceloslacerda/8fe571c3cc26634819d13f65980fa8aa\r\n\r\nI'm using docopt=0.6.2 and python 3.6.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/389", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/389/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/389/events", "html_url": "https://github.com/docopt/docopt/issues/389", "id": 252460207, "node_id": "MDU6SXNzdWUyNTI0NjAyMDc=", "number": 389, "title": "How can I provide default value pragmatically", "user": {"login": "starlton-eb", "id": 26938274, "node_id": "MDQ6VXNlcjI2OTM4Mjc0", "avatar_url": "https://avatars3.githubusercontent.com/u/26938274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/starlton-eb", "html_url": "https://github.com/starlton-eb", "followers_url": "https://api.github.com/users/starlton-eb/followers", "following_url": "https://api.github.com/users/starlton-eb/following{/other_user}", "gists_url": "https://api.github.com/users/starlton-eb/gists{/gist_id}", "starred_url": "https://api.github.com/users/starlton-eb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/starlton-eb/subscriptions", "organizations_url": "https://api.github.com/users/starlton-eb/orgs", "repos_url": "https://api.github.com/users/starlton-eb/repos", "events_url": "https://api.github.com/users/starlton-eb/events{/privacy}", "received_events_url": "https://api.github.com/users/starlton-eb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-24T01:20:10Z", "updated_at": "2018-01-05T21:16:51Z", "closed_at": "2018-01-05T21:16:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, I will say that I am pretty new to python so forgive me if obvious. I've been trying to use this in place of bash parsing technique I've used where when displaying help and some arguments are optional if a corresponding environment variable is set, I will display its current value in the help as what will be used by default if argument is not given, example:\r\n```\r\ncat << EOF\r\nUsage:\r\n  ${script} [-e <env>] [-r <region>]\r\n\r\nOptions:\r\n    -e  --env <env>\r\n      Name of environment that will be used. \r\n      Optionally set by environment variable TF_VAR_env (currently: '${TF_VAR_env}')\r\n\r\n    -r --region <region>\r\n      Name of region that will be used. \r\n      Optionally set by environment variable TF_VAR_region (currently: '${TF_VAR_region}')\r\nEOF\r\n```\r\nIs it possible somehow to do this with docopt? I would have thought I could possibly define a placeholder for the default value and then pass when instantiating docopt or something similar. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/387", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/387/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/387/events", "html_url": "https://github.com/docopt/docopt/issues/387", "id": 245328399, "node_id": "MDU6SXNzdWUyNDUzMjgzOTk=", "number": 387, "title": "Changes in Regular Expression Flags since Python Version 3.6", "user": {"login": "wirthual", "id": 2640499, "node_id": "MDQ6VXNlcjI2NDA0OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2640499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wirthual", "html_url": "https://github.com/wirthual", "followers_url": "https://api.github.com/users/wirthual/followers", "following_url": "https://api.github.com/users/wirthual/following{/other_user}", "gists_url": "https://api.github.com/users/wirthual/gists{/gist_id}", "starred_url": "https://api.github.com/users/wirthual/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wirthual/subscriptions", "organizations_url": "https://api.github.com/users/wirthual/orgs", "repos_url": "https://api.github.com/users/wirthual/repos", "events_url": "https://api.github.com/users/wirthual/events{/privacy}", "received_events_url": "https://api.github.com/users/wirthual/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-25T08:48:39Z", "updated_at": "2018-01-07T13:32:38Z", "closed_at": "2018-01-07T13:32:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nthanks for this great project.\r\n\r\nI am using it with python 3.6.2 and the Flags for the regular expressions changed (See: https://docs.python.org/3/library/re.html - Changed in version 3.6: Flag constants are now instances of RegexFlag, which is a subclass of enum.IntFlag.)\r\n\r\nSo instead of using re.I we need to use re.RegexFlag.I.\r\n\r\nHope this helps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/379", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/379/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/379/events", "html_url": "https://github.com/docopt/docopt/issues/379", "id": 233351903, "node_id": "MDU6SXNzdWUyMzMzNTE5MDM=", "number": 379, "title": "Multiple optional short options with arguments break the parser", "user": {"login": "an-empty-string", "id": 681716, "node_id": "MDQ6VXNlcjY4MTcxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/681716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/an-empty-string", "html_url": "https://github.com/an-empty-string", "followers_url": "https://api.github.com/users/an-empty-string/followers", "following_url": "https://api.github.com/users/an-empty-string/following{/other_user}", "gists_url": "https://api.github.com/users/an-empty-string/gists{/gist_id}", "starred_url": "https://api.github.com/users/an-empty-string/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/an-empty-string/subscriptions", "organizations_url": "https://api.github.com/users/an-empty-string/orgs", "repos_url": "https://api.github.com/users/an-empty-string/repos", "events_url": "https://api.github.com/users/an-empty-string/events{/privacy}", "received_events_url": "https://api.github.com/users/an-empty-string/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-03T07:05:23Z", "updated_at": "2017-06-03T18:07:26Z", "closed_at": "2017-06-03T18:07:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry for the awful title, what I'm describing is probably best demonstrated with an example. Also, my apologies if this is a duplicate -- I couldn't find anything with a quick look through the issue tracker. Anyway, here's a minimal working example script, Good Utility:\r\n\r\n```py\r\n\"\"\"Good Utility. Maybe the best utility.\r\n\r\nUsage:\r\n    goodutil <a> [-b <bvalue>] [-c <cvalue>]\r\n\"\"\"\r\n\r\nfrom docopt import docopt\r\nprint(docopt(__doc__))\r\n```\r\n\r\nIn several cases this works fine, like when none of the optional arguments are specified. Calling the test script with `goodutil a` correctly sets `'<a>': 'a'` in the arguments dict returned from docopt, and everything else is `False` or `None` as expected. Things parse correctly when specifying both `bvalue` and `cvalue` in the right order too, like `goodutil a -b b_value -c c_value`, or when only a bvalue is specified.\r\n\r\nThings start to get strange, however, when passing only a cvalue:\r\n\r\n```\r\n% python goodutil.py a -c c\r\n{'-b': False,\r\n '-c': True,\r\n '<a>': 'a',\r\n '<bvalue>': 'c',\r\n '<cvalue>': None}\r\n```\r\n\r\nSimilar behavior can be seen when passing the arguments out of order, like `a -c c -b b`.\r\n\r\nI've tried docopt-0.6.2 from pypi, as well as installing directly from a git clone.\r\n\r\nI'm not sure if this is even a bug; the spec in the readme seems a little fuzzy on this. Any ideas?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/377", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/377/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/377/events", "html_url": "https://github.com/docopt/docopt/issues/377", "id": 228143814, "node_id": "MDU6SXNzdWUyMjgxNDM4MTQ=", "number": 377, "title": "Enhancement idea: Multi-letter support for '-' commands", "user": {"login": "mdeggies", "id": 12939567, "node_id": "MDQ6VXNlcjEyOTM5NTY3", "avatar_url": "https://avatars0.githubusercontent.com/u/12939567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdeggies", "html_url": "https://github.com/mdeggies", "followers_url": "https://api.github.com/users/mdeggies/followers", "following_url": "https://api.github.com/users/mdeggies/following{/other_user}", "gists_url": "https://api.github.com/users/mdeggies/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdeggies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdeggies/subscriptions", "organizations_url": "https://api.github.com/users/mdeggies/orgs", "repos_url": "https://api.github.com/users/mdeggies/repos", "events_url": "https://api.github.com/users/mdeggies/events{/privacy}", "received_events_url": "https://api.github.com/users/mdeggies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-11T22:54:51Z", "updated_at": "2017-05-16T16:46:02Z", "closed_at": "2017-05-16T16:46:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I thought I'd open an issue for this in the off-chance that there are any workarounds (or if it's a common enough issue that it warrants the effort to fix). \r\n\r\nI use docopt a lot, and the one problem I keep running into is that I can't use multi-letters with '-' commands. Take this simple example: \r\n\r\n```\r\nUsage:\r\n  example-cli-tool [-y <start-time> -z <end-time>]\r\n    [-e <email> -s <sms>]\r\n    ...\r\n\r\nOptions:\r\n    -y --start-time <start-time>         \r\n    -z --end-time <end-time>           \r\n    -e --email <email>                       \r\n    -s --sms <sms>                           \r\n```\r\n\r\nThis is bad because no one remembers that -y is --start-time and -z is --end-time (even with descriptions added), and as far as I know docopt does not handle multi-letter commands, like '-st' or '-et'. If you have a CLI with lots of args, there are bound to be multiple clashes like this. \r\n\r\nIf multi-letter support were added, we could do things like this: \r\n\r\n```\r\nUsage:\r\n  example-cli-tool [-st <start-time> -et <end-time>]\r\n    [-e <email> -s <sms>]\r\n    [-ev <event>] \r\n    [-sz <size>]\r\n    ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/376", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/376/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/376/events", "html_url": "https://github.com/docopt/docopt/issues/376", "id": 223352934, "node_id": "MDU6SXNzdWUyMjMzNTI5MzQ=", "number": 376, "title": "docopt.org has expired", "user": {"login": "leejaycoke", "id": 4186934, "node_id": "MDQ6VXNlcjQxODY5MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4186934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leejaycoke", "html_url": "https://github.com/leejaycoke", "followers_url": "https://api.github.com/users/leejaycoke/followers", "following_url": "https://api.github.com/users/leejaycoke/following{/other_user}", "gists_url": "https://api.github.com/users/leejaycoke/gists{/gist_id}", "starred_url": "https://api.github.com/users/leejaycoke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leejaycoke/subscriptions", "organizations_url": "https://api.github.com/users/leejaycoke/orgs", "repos_url": "https://api.github.com/users/leejaycoke/repos", "events_url": "https://api.github.com/users/leejaycoke/events{/privacy}", "received_events_url": "https://api.github.com/users/leejaycoke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-21T11:10:27Z", "updated_at": "2017-04-22T06:52:16Z", "closed_at": "2017-04-22T06:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docopt.org domain has expired.\r\nIs the website closed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/375", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/375/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/375/events", "html_url": "https://github.com/docopt/docopt/issues/375", "id": 223174590, "node_id": "MDU6SXNzdWUyMjMxNzQ1OTA=", "number": 375, "title": "Support setting usage error exit status", "user": {"login": "AloisMahdal", "id": 217935, "node_id": "MDQ6VXNlcjIxNzkzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/217935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AloisMahdal", "html_url": "https://github.com/AloisMahdal", "followers_url": "https://api.github.com/users/AloisMahdal/followers", "following_url": "https://api.github.com/users/AloisMahdal/following{/other_user}", "gists_url": "https://api.github.com/users/AloisMahdal/gists{/gist_id}", "starred_url": "https://api.github.com/users/AloisMahdal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AloisMahdal/subscriptions", "organizations_url": "https://api.github.com/users/AloisMahdal/orgs", "repos_url": "https://api.github.com/users/AloisMahdal/repos", "events_url": "https://api.github.com/users/AloisMahdal/events{/privacy}", "received_events_url": "https://api.github.com/users/AloisMahdal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-20T19:31:59Z", "updated_at": "2017-04-23T08:49:50Z", "closed_at": "2017-04-23T08:49:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently it's not (to my knowledge) possible to easily control what exit status your script will end with in case of usage errors.\r\n\r\nThat is, if I have a convention that usage errors should always propagate as exit status 2 (this is inspired by grep(1)) I should be able to implement that without need to add too much complexity.\r\n\r\nFor example, this (Python) code:\r\n\r\n    args = docopt.docopt(__doc__, version=__VERSION__, exit=2)\r\n\r\nwould mean that in case my script gets called with invalid combination of arguments, the exit status of my script will be 2 (ie. value of *exit* parameter).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/373", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/373/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/373/events", "html_url": "https://github.com/docopt/docopt/issues/373", "id": 217996465, "node_id": "MDU6SXNzdWUyMTc5OTY0NjU=", "number": 373, "title": "Incorrect parsing of commands with duplicate words", "user": {"login": "chakshuahuja", "id": 2029580, "node_id": "MDQ6VXNlcjIwMjk1ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2029580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chakshuahuja", "html_url": "https://github.com/chakshuahuja", "followers_url": "https://api.github.com/users/chakshuahuja/followers", "following_url": "https://api.github.com/users/chakshuahuja/following{/other_user}", "gists_url": "https://api.github.com/users/chakshuahuja/gists{/gist_id}", "starred_url": "https://api.github.com/users/chakshuahuja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chakshuahuja/subscriptions", "organizations_url": "https://api.github.com/users/chakshuahuja/orgs", "repos_url": "https://api.github.com/users/chakshuahuja/repos", "events_url": "https://api.github.com/users/chakshuahuja/events{/privacy}", "received_events_url": "https://api.github.com/users/chakshuahuja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-29T20:17:38Z", "updated_at": "2019-10-23T01:13:34Z", "closed_at": "2019-10-23T01:13:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if it is the desired behavior,\r\nI tried doing (just an example)\r\n`tool folder ls`\r\nI want this command to list all folders in my db.\r\n`tools folder ext ls <folder_id>`\r\nI want to list all extensions of files in that folder.\r\n\r\nThe second command basically returns me the output of first command followed by second command.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/369", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/369/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/369/events", "html_url": "https://github.com/docopt/docopt/issues/369", "id": 210427305, "node_id": "MDU6SXNzdWUyMTA0MjczMDU=", "number": 369, "title": "[question] Is there a way to document the `Usage` section?", "user": {"login": "brodul", "id": 204514, "node_id": "MDQ6VXNlcjIwNDUxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/204514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brodul", "html_url": "https://github.com/brodul", "followers_url": "https://api.github.com/users/brodul/followers", "following_url": "https://api.github.com/users/brodul/following{/other_user}", "gists_url": "https://api.github.com/users/brodul/gists{/gist_id}", "starred_url": "https://api.github.com/users/brodul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brodul/subscriptions", "organizations_url": "https://api.github.com/users/brodul/orgs", "repos_url": "https://api.github.com/users/brodul/repos", "events_url": "https://api.github.com/users/brodul/events{/privacy}", "received_events_url": "https://api.github.com/users/brodul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-02-27T09:19:01Z", "updated_at": "2017-05-09T21:38:20Z", "closed_at": "2017-04-21T10:21:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to document the `Usage` section?\r\n\r\nWe use `docopt` to handle quite some devops task. There is quite some use-cases that are covered.\r\nWe have split the script into multiple files but there are still around 20 different things you can do in the `Usage` section.\r\n\r\nDocumentation is very important in our organization.\r\nI wonder if there is a way that we can add documentation (some string) for different commands in the `Usage` section?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/365", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/365/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/365/events", "html_url": "https://github.com/docopt/docopt/issues/365", "id": 203332445, "node_id": "MDU6SXNzdWUyMDMzMzI0NDU=", "number": 365, "title": "Add default option for boolean values", "user": {"login": "darkdragon-001", "id": 177976, "node_id": "MDQ6VXNlcjE3Nzk3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/177976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkdragon-001", "html_url": "https://github.com/darkdragon-001", "followers_url": "https://api.github.com/users/darkdragon-001/followers", "following_url": "https://api.github.com/users/darkdragon-001/following{/other_user}", "gists_url": "https://api.github.com/users/darkdragon-001/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkdragon-001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkdragon-001/subscriptions", "organizations_url": "https://api.github.com/users/darkdragon-001/orgs", "repos_url": "https://api.github.com/users/darkdragon-001/repos", "events_url": "https://api.github.com/users/darkdragon-001/events{/privacy}", "received_events_url": "https://api.github.com/users/darkdragon-001/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-26T10:04:17Z", "updated_at": "2017-04-05T07:21:37Z", "closed_at": "2017-04-05T07:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Declaration\r\n\r\n    Usage:\r\n        script.py [optios]\r\n    \r\n    Options:\r\n        --show  Show result [Default: True]\r\n\r\nUsage\r\n\r\n    opt = docopt(__doc__)\r\n    opt_show = opt['--show']\r\n\r\nBut `opt_show` is still false called without options...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/364", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/364/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/364/events", "html_url": "https://github.com/docopt/docopt/issues/364", "id": 202461068, "node_id": "MDU6SXNzdWUyMDI0NjEwNjg=", "number": 364, "title": "short option resulting in a redundant '=' symbol", "user": {"login": "lihsing", "id": 8056051, "node_id": "MDQ6VXNlcjgwNTYwNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8056051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lihsing", "html_url": "https://github.com/lihsing", "followers_url": "https://api.github.com/users/lihsing/followers", "following_url": "https://api.github.com/users/lihsing/following{/other_user}", "gists_url": "https://api.github.com/users/lihsing/gists{/gist_id}", "starred_url": "https://api.github.com/users/lihsing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lihsing/subscriptions", "organizations_url": "https://api.github.com/users/lihsing/orgs", "repos_url": "https://api.github.com/users/lihsing/repos", "events_url": "https://api.github.com/users/lihsing/events{/privacy}", "received_events_url": "https://api.github.com/users/lihsing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-23T07:13:47Z", "updated_at": "2017-02-04T06:44:28Z", "closed_at": "2017-02-04T06:44:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this a bug?\r\n\r\n```python\r\n\"\"\"\r\nUsage:\r\n    test_docopt.py -a=<value>\r\n\r\nOptions:\r\n  -a=<value>, --arg=<value>\r\n\"\"\"\r\nfrom docopt import docopt\r\n\r\n\r\nargs = docopt(__doc__)\r\nprint args\r\n```\r\n\r\n```bash\r\n$ python test_docopt.py -a=foo\r\n{'--arg': '=foo'}  # a redundant '=' here\r\n$ python test_docopt.py --a=foo\r\n{'--arg': 'foo'}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/355", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/355/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/355/events", "html_url": "https://github.com/docopt/docopt/issues/355", "id": 192049799, "node_id": "MDU6SXNzdWUxOTIwNDk3OTk=", "number": 355, "title": "Docopt parser get all words in __doc__", "user": {"login": "kmarilleau", "id": 11370450, "node_id": "MDQ6VXNlcjExMzcwNDUw", "avatar_url": "https://avatars1.githubusercontent.com/u/11370450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmarilleau", "html_url": "https://github.com/kmarilleau", "followers_url": "https://api.github.com/users/kmarilleau/followers", "following_url": "https://api.github.com/users/kmarilleau/following{/other_user}", "gists_url": "https://api.github.com/users/kmarilleau/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmarilleau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmarilleau/subscriptions", "organizations_url": "https://api.github.com/users/kmarilleau/orgs", "repos_url": "https://api.github.com/users/kmarilleau/repos", "events_url": "https://api.github.com/users/kmarilleau/events{/privacy}", "received_events_url": "https://api.github.com/users/kmarilleau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-28T16:23:20Z", "updated_at": "2016-11-28T19:32:09Z", "closed_at": "2016-11-28T19:32:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\n> **Before starting, here is my configuration:**\r\n> docopt==0.6.2\r\n> Python 3.5.2\r\n\r\nSo, why when i run this command like this example [right here](https://github.com/docopt/docopt#api):\r\n`python naval_fate.py ship Guardian move 100 150 --speed=15`\r\n\r\n\r\nWith [this script](https://github.com/docopt/docopt/blob/master/examples/naval_fate.py):\r\n```\r\n\"\"\"Naval Fate.\r\nUsage:\r\n  naval_fate.py ship new <name>...\r\n  naval_fate.py ship <name> move <x> <y> [--speed=<kn>]\r\n  naval_fate.py ship shoot <x> <y>\r\n  naval_fate.py mine (set|remove) <x> <y> [--moored|--drifting]\r\n  naval_fate.py -h | --help\r\n  naval_fate.py --version\r\nOptions:\r\n  -h --help     Show this screen.\r\n  --version     Show version.\r\n  --speed=<kn>  Speed in knots [default: 10].\r\n  --moored      Moored (anchored) mine.\r\n  --drifting    Drifting mine.\r\n\"\"\"\r\nfrom docopt import docopt\r\n\r\n\r\nif __name__ == '__main__':\r\n    arguments = docopt(__doc__, version='Naval Fate 2.0')\r\n    print(arguments)\r\n```\r\n\r\n\r\nResults are:\r\n```\r\n{'--drifting': False,      '--help': 0,\r\n '--moored': False,        '--speed': '15',\r\n '--version': 0,           '.': False,\r\n '10': False,              '<name>': ['Guardian'],\r\n '<x>': '100',             '<y>': '150',\r\n 'Drifting': False,        'Moored': False,\r\n 'Options:': False,        'Show': 0,\r\n 'Speed': False,           'anchored': False,\r\n 'default:': False,        'in': False,\r\n 'knots': False,           'mine': False,\r\n 'mine.': 0,               'move': True,\r\n 'new': False,             'remove': False,\r\n 'screen.': False,         'set': False,\r\n 'ship': True,             'shoot': False,\r\n 'this': False,            'version.': False}\r\n```\r\n\r\nand not like this example [right here](https://github.com/docopt/docopt#api):\r\n```\r\n{'--drifting': False,    'mine': False,\r\n '--help': False,        'move': True,\r\n '--moored': False,      'new': False,\r\n '--speed': '15',        'remove': False,\r\n '--version': False,     'set': False,\r\n '<name>': ['Guardian'], 'ship': True,\r\n '<x>': '100',           'shoot': False,\r\n '<y>': '150'}\r\n```\r\n\r\nDid I make a mistake or did the docopt parser have a problem?\r\n\r\nSorry for my english.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/353", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/353/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/353/events", "html_url": "https://github.com/docopt/docopt/issues/353", "id": 189474613, "node_id": "MDU6SXNzdWUxODk0NzQ2MTM=", "number": 353, "title": "Pass-through options", "user": {"login": "surkova", "id": 842976, "node_id": "MDQ6VXNlcjg0Mjk3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/842976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surkova", "html_url": "https://github.com/surkova", "followers_url": "https://api.github.com/users/surkova/followers", "following_url": "https://api.github.com/users/surkova/following{/other_user}", "gists_url": "https://api.github.com/users/surkova/gists{/gist_id}", "starred_url": "https://api.github.com/users/surkova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surkova/subscriptions", "organizations_url": "https://api.github.com/users/surkova/orgs", "repos_url": "https://api.github.com/users/surkova/repos", "events_url": "https://api.github.com/users/surkova/events{/privacy}", "received_events_url": "https://api.github.com/users/surkova/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-15T18:50:11Z", "updated_at": "2019-05-03T11:36:35Z", "closed_at": "2019-05-03T11:36:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am re-writing a command line tool that is on the abstract level is supposed to work like this (doc from main.py):\r\n```\r\nUsage:\r\n    my_tool <command> [<args>...] [options]\r\n```\r\nI have a limited set of commands and each of them may take positional arguments and options. \r\n\r\nGiven the limited set of commands I wanted to route them to the modules that contain \"real\" usage parser, like so (mapping to class methods is intentionally omitted):\r\n```\r\nclass Proxy(object):\r\n    \"\"\"\r\n    Usage: my_tool proxy <stats> [--host=HOST]\r\n    \"\"\"\r\n    def cmd_stats(host=\"localhost\"):\r\n        pass\r\n```\r\n\r\nMy problem now is that `my_tool <command> [<args>...] [options]` doesn't parse arbitrary options to pass them through to another parser unless they are specified in the `Options:` section. However, main.py isn't supposed to know all the options the underlying modules might take.\r\n\r\nIs there a way to have an abstract options parser?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/352", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/352/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/352/events", "html_url": "https://github.com/docopt/docopt/issues/352", "id": 187118409, "node_id": "MDU6SXNzdWUxODcxMTg0MDk=", "number": 352, "title": "Print help to standard error", "user": {"login": "JoanPeturPetersen", "id": 1423475, "node_id": "MDQ6VXNlcjE0MjM0NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1423475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoanPeturPetersen", "html_url": "https://github.com/JoanPeturPetersen", "followers_url": "https://api.github.com/users/JoanPeturPetersen/followers", "following_url": "https://api.github.com/users/JoanPeturPetersen/following{/other_user}", "gists_url": "https://api.github.com/users/JoanPeturPetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoanPeturPetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoanPeturPetersen/subscriptions", "organizations_url": "https://api.github.com/users/JoanPeturPetersen/orgs", "repos_url": "https://api.github.com/users/JoanPeturPetersen/repos", "events_url": "https://api.github.com/users/JoanPeturPetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/JoanPeturPetersen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-03T16:27:36Z", "updated_at": "2016-11-04T15:09:29Z", "closed_at": "2016-11-04T15:09:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the usage message is printed to the terminal it is printed to the standard output. I don't think this is normal Unix practice. Normally standard error is used for this - look at `grep` as an example.\r\n\r\nNormally this does not pose any problem, but can be quite annoying when directing the standard output, for example when piping processes together. Here you wouldn't expect the usage description being passed down the pipe if there is an error in the arguments of any of the the programs.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/349", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/349/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/349/events", "html_url": "https://github.com/docopt/docopt/issues/349", "id": 182708070, "node_id": "MDU6SXNzdWUxODI3MDgwNzA=", "number": 349, "title": "A string parameter is parsed as bool", "user": {"login": "wsw70", "id": 1345886, "node_id": "MDQ6VXNlcjEzNDU4ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1345886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsw70", "html_url": "https://github.com/wsw70", "followers_url": "https://api.github.com/users/wsw70/followers", "following_url": "https://api.github.com/users/wsw70/following{/other_user}", "gists_url": "https://api.github.com/users/wsw70/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsw70/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsw70/subscriptions", "organizations_url": "https://api.github.com/users/wsw70/orgs", "repos_url": "https://api.github.com/users/wsw70/repos", "events_url": "https://api.github.com/users/wsw70/events{/privacy}", "received_events_url": "https://api.github.com/users/wsw70/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-13T06:44:24Z", "updated_at": "2016-10-13T13:17:22Z", "closed_at": "2016-10-13T13:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I usually use [`docopt`](https://github.com/docopt/docopt) to handle the command line parameters but I now have a case where the parameters is parsed unexpectedly (it must be a silly mistake of mine as it always works great)\n\n```\n\"\"\"\nAPI to do something\n\nUsage:\n    api.py [options]\n\nOptions:\n    --port PORT     port to listen on   [default: 64645]\n    --url   URL     elasticsearch address   [default: http://elk.example.com:9200]\n\"\"\"\n```\n\nThis is parsed via a `conf = docopt.docopt(__doc__)` call after which I have `conf` set to \n\n```\n{\n    '--port': '64645',\n    '--url': False\n}\n```\n\nThe `--url` part is not correct but I cannot understand why.\n\n_(also asked at [SO](http://stackoverflow.com/questions/39991830/why-is-a-parameter-parsed-as-a-bool))_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/344", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/344/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/344/events", "html_url": "https://github.com/docopt/docopt/issues/344", "id": 174640486, "node_id": "MDU6SXNzdWUxNzQ2NDA0ODY=", "number": 344, "title": "Group dependent flags", "user": {"login": "esclear", "id": 7432848, "node_id": "MDQ6VXNlcjc0MzI4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7432848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esclear", "html_url": "https://github.com/esclear", "followers_url": "https://api.github.com/users/esclear/followers", "following_url": "https://api.github.com/users/esclear/following{/other_user}", "gists_url": "https://api.github.com/users/esclear/gists{/gist_id}", "starred_url": "https://api.github.com/users/esclear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esclear/subscriptions", "organizations_url": "https://api.github.com/users/esclear/orgs", "repos_url": "https://api.github.com/users/esclear/repos", "events_url": "https://api.github.com/users/esclear/events{/privacy}", "received_events_url": "https://api.github.com/users/esclear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-01T22:26:44Z", "updated_at": "2017-10-04T10:21:42Z", "closed_at": "2017-10-04T10:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'd like to use docopt for rather complicated flags.\n\nFor a package manager I'd like to provide an interface that follows the following EBNF:\n\n``` ebnf\nflags ::= ( '--git' 'URL' ( '--branch' 'BRANCH' | '--tag' 'TAG' | '--rev' 'REV' )? | '--path' 'PATH' | 'CRATE' ( '--vers' 'VERSION' )? )+\n```\n\n![flags](https://cloud.githubusercontent.com/assets/7432848/18186209/e134ced0-70a1-11e6-8a4e-19e86054bc00.png)\n\nI tried to achieve this with the following docopt pattern:\n\n``` plain\nUsage:\n  prog (--git=URL [--branch=BRANCH | --tag=TAG | --rev=REV] | --path=PATH | CRATE [--version=VERSION])...\n```\n\nExecuting this with the parameters `crate1 --version=foo crate2 --git url1 --tag release --git url2 --branch develop` yields the following:\n\n``` json\n{\"--branch\": [\"develop\"],\n \"--git\": [\"url1\",\"'url2\"],\n \"--path\": [],\n \"--rev\": [],\n \"--tag\": [\"release\"],\n \"--version\": [\"foo\"],\n \"CRATE\": [\"crate1\", \"crate2\"]}\n```\n\nMy problem is that I want to keep the `branch`, `tag` or `rev` flag together with the `giturl` as well as the `version` together with `crate`.\nOtherwise I don't know which `tag` belongs to which `giturl` and which `version` to which `crate`.\n\nCan someone give me a heads up on this one?\nThank you in advance!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/343", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/343/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/343/events", "html_url": "https://github.com/docopt/docopt/issues/343", "id": 170007235, "node_id": "MDU6SXNzdWUxNzAwMDcyMzU=", "number": 343, "title": "Versioning docopt and other ports of docopt", "user": {"login": "jaredgrubb", "id": 1256381, "node_id": "MDQ6VXNlcjEyNTYzODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1256381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaredgrubb", "html_url": "https://github.com/jaredgrubb", "followers_url": "https://api.github.com/users/jaredgrubb/followers", "following_url": "https://api.github.com/users/jaredgrubb/following{/other_user}", "gists_url": "https://api.github.com/users/jaredgrubb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaredgrubb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaredgrubb/subscriptions", "organizations_url": "https://api.github.com/users/jaredgrubb/orgs", "repos_url": "https://api.github.com/users/jaredgrubb/repos", "events_url": "https://api.github.com/users/jaredgrubb/events{/privacy}", "received_events_url": "https://api.github.com/users/jaredgrubb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-08T19:42:40Z", "updated_at": "2017-02-03T11:49:33Z", "closed_at": "2017-02-03T11:49:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some people have asked the docopt.cpp to create tags for references to release versions, however the docopt version is currently 0.6.1, which makes it hard to create a subversion for our port (to go to 0.6.1.1 or 0.6.1a or 0.6.1.20160901 or?).\n\nI'd like to suggest that \"0.6\" be considered the cross-language version that we all try to conform to and that \"0.6.x\" is reserved for each implementation to rev bugs or adjustments in the implementation.\n\nThis issue doesn't really represent a \"TODO\" for this repo but I wanted to open up the dialogue. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/338", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/338/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/338/events", "html_url": "https://github.com/docopt/docopt/issues/338", "id": 166048895, "node_id": "MDU6SXNzdWUxNjYwNDg4OTU=", "number": 338, "title": "docopt fromzen with pyinstaller and wildcard", "user": {"login": "kotlet-schabowy", "id": 9695572, "node_id": "MDQ6VXNlcjk2OTU1NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9695572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kotlet-schabowy", "html_url": "https://github.com/kotlet-schabowy", "followers_url": "https://api.github.com/users/kotlet-schabowy/followers", "following_url": "https://api.github.com/users/kotlet-schabowy/following{/other_user}", "gists_url": "https://api.github.com/users/kotlet-schabowy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kotlet-schabowy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kotlet-schabowy/subscriptions", "organizations_url": "https://api.github.com/users/kotlet-schabowy/orgs", "repos_url": "https://api.github.com/users/kotlet-schabowy/repos", "events_url": "https://api.github.com/users/kotlet-schabowy/events{/privacy}", "received_events_url": "https://api.github.com/users/kotlet-schabowy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-18T08:57:45Z", "updated_at": "2016-07-20T14:00:38Z", "closed_at": "2016-07-20T14:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I have an issue with frozen docopt.\n\n```\nimport docopt\n\ndef main():\n    doc = \"\"\"\nUsage:\n    test -o <file_name>\n    \"\"\"\n    args = docopt.docopt(doc)\n    print args\n\nif __name__ == '__main__':\n    main()\n```\n\nwhen there are two files in the current directory:\nn_1.txt\nn_2.txt\n\nand I run the script unfrozen:\n\n```\nJ:\\>python test.py -o n_?.txt\n{'-o': True,\n '<file_name>': 'n_?.txt'}\n```\n\nall is good.\n\nWhen I freeze the script and execute:\n\n```\nJ:\\>test -o n_?.txt\nUsage:\n    test -o <file_name>\n```\n\nit prints the usage part.\n\nWhen I run it frozen and specify the file name without wildcard:\n\n```\nJ:\\>test -o n_1.txt\n{'-o': True,\n '<file_name>': 'n_1.txt'}\n```\n\nall is good.\n\nIf there is only one file (b_1.txt) in the directory and I specify wildcard:\n\n```\nJ:\\>test -o b_?.txt\n{'-o': True,\n '<file_name>': 'b_?.txt'}\n```\n\nall is good again.\n\nSo problem only occurs when there are multiple files fitting the wildcard and python script is frozen.\n\nAm I doing something wrong or is this a bug in docopt or pyinstaller?\n###### \n\nPython 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 20:40:30) [MSC v.1500 64 bit (AMD64)] on win32\n\npip show docopt\nMetadata-Version: 1.1\nName: docopt\nVersion: 0.6.2\n\npip show pyinstaller\nMetadata-Version: 1.1\nName: PyInstaller\nVersion: 3.1.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/321", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/321/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/321/events", "html_url": "https://github.com/docopt/docopt/issues/321", "id": 150366468, "node_id": "MDU6SXNzdWUxNTAzNjY0Njg=", "number": 321, "title": "docopt.org has expired", "user": {"login": "nwolff", "id": 40599, "node_id": "MDQ6VXNlcjQwNTk5", "avatar_url": "https://avatars0.githubusercontent.com/u/40599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwolff", "html_url": "https://github.com/nwolff", "followers_url": "https://api.github.com/users/nwolff/followers", "following_url": "https://api.github.com/users/nwolff/following{/other_user}", "gists_url": "https://api.github.com/users/nwolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwolff/subscriptions", "organizations_url": "https://api.github.com/users/nwolff/orgs", "repos_url": "https://api.github.com/users/nwolff/repos", "events_url": "https://api.github.com/users/nwolff/events{/privacy}", "received_events_url": "https://api.github.com/users/nwolff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-22T13:12:25Z", "updated_at": "2016-04-30T18:37:51Z", "closed_at": "2016-04-28T10:53:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "docopt.org has expired\n\nIf you are the owner of this domain, log in so you can retrieve the invoice and renew the domain.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/315", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/315/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/315/events", "html_url": "https://github.com/docopt/docopt/issues/315", "id": 143791317, "node_id": "MDU6SXNzdWUxNDM3OTEzMTc=", "number": 315, "title": "Port of docopt to F#", "user": {"login": "Aksamyt", "id": 3847189, "node_id": "MDQ6VXNlcjM4NDcxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3847189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aksamyt", "html_url": "https://github.com/Aksamyt", "followers_url": "https://api.github.com/users/Aksamyt/followers", "following_url": "https://api.github.com/users/Aksamyt/following{/other_user}", "gists_url": "https://api.github.com/users/Aksamyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aksamyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aksamyt/subscriptions", "organizations_url": "https://api.github.com/users/Aksamyt/orgs", "repos_url": "https://api.github.com/users/Aksamyt/repos", "events_url": "https://api.github.com/users/Aksamyt/events{/privacy}", "received_events_url": "https://api.github.com/users/Aksamyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-27T09:18:18Z", "updated_at": "2016-03-31T12:53:14Z", "closed_at": "2016-03-31T12:53:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hello,\n\nI have made a port of docot for F# [here](https://github.com/Aksamyt/docopt.fs)!\nIt is stable and can be used in real world projects, but the API may change a lot until the 1.0 release.\n\nOf all the tests, I chose to remove the ones who tests how the results are returned. Returning null (and using) null is not common in the F# world, so everything returns a value for pattern matching.\nExcept those two or three, all of them are successful and the test script can be found in [Build/Tests/TestCases/TestCases.fs](https://github.com/Aksamyt/docopt.fs/blob/master/Build/Tests/TestCases/TestCases.fs)\n\nCan you add me and this project to the organization?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/312", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/312/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/312/events", "html_url": "https://github.com/docopt/docopt/issues/312", "id": 140175041, "node_id": "MDU6SXNzdWUxNDAxNzUwNDE=", "number": 312, "title": "It doesn't work with indentation by tabulation", "user": {"login": "Liliad", "id": 7673272, "node_id": "MDQ6VXNlcjc2NzMyNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7673272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Liliad", "html_url": "https://github.com/Liliad", "followers_url": "https://api.github.com/users/Liliad/followers", "following_url": "https://api.github.com/users/Liliad/following{/other_user}", "gists_url": "https://api.github.com/users/Liliad/gists{/gist_id}", "starred_url": "https://api.github.com/users/Liliad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Liliad/subscriptions", "organizations_url": "https://api.github.com/users/Liliad/orgs", "repos_url": "https://api.github.com/users/Liliad/repos", "events_url": "https://api.github.com/users/Liliad/events{/privacy}", "received_events_url": "https://api.github.com/users/Liliad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-11T12:44:05Z", "updated_at": "2016-03-14T09:48:37Z", "closed_at": "2016-03-14T09:48:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n Docopt is a very nice module for manage argument in python, thanks for the job.\nBut a big problem come for me, and after research it appears than docopt work differently if options line are indented by space or by tabulation..\n\nI show you an exemple:\nhttps://gist.github.com/Liadrim/58645221c698748fe726\n\nThe two options text are identical, except by the space/tabulation indentations, the result is:\npython prog.py -t 10 -s TA\n{'--help': False,\n '--special': 'TA',\n '--test': '10',\n '--version': False}\n###### \n\n{'--help': False,\n '--special': None,\n '--test': None,\n '--version': False,\n '-h': False,\n '-s': True,\n '-t': True,\n 'TAG': '10',\n 'VAL': 'TA'}\n\nWith the part before the ### is indented with space and the other part is indented with tabulation.\n\nIs it a know issue ?\nIs it possible to correct that ?\n\nThanks a lot !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/302", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/302/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/302/events", "html_url": "https://github.com/docopt/docopt/issues/302", "id": 124560330, "node_id": "MDU6SXNzdWUxMjQ1NjAzMzA=", "number": 302, "title": "docopt.Dict does not allow setdefault", "user": {"login": "simonm3", "id": 1199593, "node_id": "MDQ6VXNlcjExOTk1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1199593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonm3", "html_url": "https://github.com/simonm3", "followers_url": "https://api.github.com/users/simonm3/followers", "following_url": "https://api.github.com/users/simonm3/following{/other_user}", "gists_url": "https://api.github.com/users/simonm3/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonm3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonm3/subscriptions", "organizations_url": "https://api.github.com/users/simonm3/orgs", "repos_url": "https://api.github.com/users/simonm3/repos", "events_url": "https://api.github.com/users/simonm3/events{/privacy}", "received_events_url": "https://api.github.com/users/simonm3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-01T20:30:25Z", "updated_at": "2016-01-01T20:39:11Z", "closed_at": "2016-01-01T20:39:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "docopt returns a docopt.Dict object rather than a standard dict.\n\nIf you call args.setdefault on this then it fails silently.\n\nWould be better to convert docopt.Dict to a standard dict.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/300", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/300/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/300/events", "html_url": "https://github.com/docopt/docopt/issues/300", "id": 122681285, "node_id": "MDU6SXNzdWUxMjI2ODEyODU=", "number": 300, "title": "Unable to implement use case:", "user": {"login": "TiredSounds", "id": 12466999, "node_id": "MDQ6VXNlcjEyNDY2OTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/12466999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TiredSounds", "html_url": "https://github.com/TiredSounds", "followers_url": "https://api.github.com/users/TiredSounds/followers", "following_url": "https://api.github.com/users/TiredSounds/following{/other_user}", "gists_url": "https://api.github.com/users/TiredSounds/gists{/gist_id}", "starred_url": "https://api.github.com/users/TiredSounds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TiredSounds/subscriptions", "organizations_url": "https://api.github.com/users/TiredSounds/orgs", "repos_url": "https://api.github.com/users/TiredSounds/repos", "events_url": "https://api.github.com/users/TiredSounds/events{/privacy}", "received_events_url": "https://api.github.com/users/TiredSounds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-17T07:48:50Z", "updated_at": "2015-12-17T08:46:30Z", "closed_at": "2015-12-17T08:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nUsage: foo.py (<bar> | (one or more options without duplicates) )\n\nCorrect:\n\nfoo.py bar\nfoo.py -baz\nfoo.py -baz -qux\n\nNot correct:\n\nfoo.py bar -baz\nfoo.py -baz -baz\nfoo.py\n```\n\nPerhaps I am missing something, but as soon as I try to implement this using `[]`, the entire statement becomes optional so that calling `$ foo.py` goes through, which is not what I need.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/293", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/293/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/293/events", "html_url": "https://github.com/docopt/docopt/issues/293", "id": 109432542, "node_id": "MDU6SXNzdWUxMDk0MzI1NDI=", "number": 293, "title": "\"no associated item named `with_empy_ctx`... (v0.6.73 - cargo 0.6.0-nightly - rustc 1.5.0-nightly - arch linux)", "user": {"login": "ernestrc", "id": 5781498, "node_id": "MDQ6VXNlcjU3ODE0OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5781498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ernestrc", "html_url": "https://github.com/ernestrc", "followers_url": "https://api.github.com/users/ernestrc/followers", "following_url": "https://api.github.com/users/ernestrc/following{/other_user}", "gists_url": "https://api.github.com/users/ernestrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ernestrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ernestrc/subscriptions", "organizations_url": "https://api.github.com/users/ernestrc/orgs", "repos_url": "https://api.github.com/users/ernestrc/repos", "events_url": "https://api.github.com/users/ernestrc/events{/privacy}", "received_events_url": "https://api.github.com/users/ernestrc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-02T05:22:24Z", "updated_at": "2015-10-02T05:24:06Z", "closed_at": "2015-10-02T05:23:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I updated to latest version and crate won't compile:\n\n```\n/home/ernestrc/.multirust/toolchains/nightly/cargo/registry/src/github.com-0a35038f75765ae4/docopt_macros-0.6.73/src/macro.rs:285:5: 285:32 error: no associated item named `with_empty_ctxt` found for type `syntax::ast::Ident` in the current scope\n/home/ernestrc/.multirust/toolchains/nightly/cargo/registry/src/github.com-0a35038f75765ae4/docopt_macros-0.6.73/src/macro.rs:285     ast::Ident::with_empty_ctxt(token::intern(s))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/290", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/290/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/290/events", "html_url": "https://github.com/docopt/docopt/issues/290", "id": 106497303, "node_id": "MDU6SXNzdWUxMDY0OTczMDM=", "number": 290, "title": "Option defaults don't work consistently", "user": {"login": "naught101", "id": 167164, "node_id": "MDQ6VXNlcjE2NzE2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/167164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naught101", "html_url": "https://github.com/naught101", "followers_url": "https://api.github.com/users/naught101/followers", "following_url": "https://api.github.com/users/naught101/following{/other_user}", "gists_url": "https://api.github.com/users/naught101/gists{/gist_id}", "starred_url": "https://api.github.com/users/naught101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naught101/subscriptions", "organizations_url": "https://api.github.com/users/naught101/orgs", "repos_url": "https://api.github.com/users/naught101/repos", "events_url": "https://api.github.com/users/naught101/events{/privacy}", "received_events_url": "https://api.github.com/users/naught101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-15T07:22:54Z", "updated_at": "2015-09-15T23:33:28Z", "closed_at": "2015-09-15T23:33:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's a script:\n\n``` python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\ndoc = '''\nUsage:\n    my_program [options] something\n    my_program (-h | --help | --version)\n\nOptions:\n    -h, --help  Show this screen and exit.\n    --baud=<n>  Baudrate [default: 9600]\n    --blah=BLAH Some option [default: 10]\n'''\n\nfrom docopt import docopt\n\n\ndef main(args):\n    print(args)\n\n\nif (__name__ == '__main__'):\n    args = docopt(doc)\n\n    main(args)\n```\n\noutput:\n\n```\n$ python blah.py          \nUsage:\n    my_program [options] something\n    my_program (-h | --help | --version)\n$ python blah.py something\n{'--baud': '9600',\n '--blah': None,\n '--help': False,\n '--version': False,\n 'something': True}\n```\n\nOnly one option has the has a default value. This result doesn't appear to depend on the formatting (<blah> vs BLAH), or on the order of the options.\n\n```\n$conda list docopt       \n# packages in environment at /home/naught101/miniconda3/envs/science:\n#\ndocopt                    0.6.2                    py34_0  \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/289", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/289/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/289/events", "html_url": "https://github.com/docopt/docopt/issues/289", "id": 105824563, "node_id": "MDU6SXNzdWUxMDU4MjQ1NjM=", "number": 289, "title": "wheels for docopt", "user": {"login": "srkunze", "id": 1389648, "node_id": "MDQ6VXNlcjEzODk2NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1389648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srkunze", "html_url": "https://github.com/srkunze", "followers_url": "https://api.github.com/users/srkunze/followers", "following_url": "https://api.github.com/users/srkunze/following{/other_user}", "gists_url": "https://api.github.com/users/srkunze/gists{/gist_id}", "starred_url": "https://api.github.com/users/srkunze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srkunze/subscriptions", "organizations_url": "https://api.github.com/users/srkunze/orgs", "repos_url": "https://api.github.com/users/srkunze/repos", "events_url": "https://api.github.com/users/srkunze/events{/privacy}", "received_events_url": "https://api.github.com/users/srkunze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-10T14:42:50Z", "updated_at": "2018-02-04T18:57:45Z", "closed_at": "2018-02-04T18:57:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you consider providing Python wheels for docopt? cf. http://pythonwheels.com/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/284", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/284/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/284/events", "html_url": "https://github.com/docopt/docopt/issues/284", "id": 94611079, "node_id": "MDU6SXNzdWU5NDYxMTA3OQ==", "number": 284, "title": "Markdown output", "user": {"login": "AXGKl", "id": 9989548, "node_id": "MDQ6VXNlcjk5ODk1NDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9989548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AXGKl", "html_url": "https://github.com/AXGKl", "followers_url": "https://api.github.com/users/AXGKl/followers", "following_url": "https://api.github.com/users/AXGKl/following{/other_user}", "gists_url": "https://api.github.com/users/AXGKl/gists{/gist_id}", "starred_url": "https://api.github.com/users/AXGKl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AXGKl/subscriptions", "organizations_url": "https://api.github.com/users/AXGKl/orgs", "repos_url": "https://api.github.com/users/AXGKl/repos", "events_url": "https://api.github.com/users/AXGKl/events{/privacy}", "received_events_url": "https://api.github.com/users/AXGKl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-12T23:57:02Z", "updated_at": "2015-07-13T15:21:03Z", "closed_at": "2015-07-13T15:21:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm using docopt for a little app which renders markdown into the terminal: \n\nhttps://github.com/axiros/terminal_markdown_viewer\n\nIt would be supergreat if it could auto-document itself, i.e. if I could tell docopt to spit out its lexer result as, well, simple markdown.\n\nI guess I could do myself but I think other people would also appreciate if they could call their apps with a --to-markdown switch, within their docu building runs (?)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/280", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/280/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/280/events", "html_url": "https://github.com/docopt/docopt/issues/280", "id": 83408995, "node_id": "MDU6SXNzdWU4MzQwODk5NQ==", "number": 280, "title": "examples/interactive_example.py  serial sub command not work", "user": {"login": "TheWaWaR", "id": 1160419, "node_id": "MDQ6VXNlcjExNjA0MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1160419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheWaWaR", "html_url": "https://github.com/TheWaWaR", "followers_url": "https://api.github.com/users/TheWaWaR/followers", "following_url": "https://api.github.com/users/TheWaWaR/following{/other_user}", "gists_url": "https://api.github.com/users/TheWaWaR/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheWaWaR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheWaWaR/subscriptions", "organizations_url": "https://api.github.com/users/TheWaWaR/orgs", "repos_url": "https://api.github.com/users/TheWaWaR/repos", "events_url": "https://api.github.com/users/TheWaWaR/events{/privacy}", "received_events_url": "https://api.github.com/users/TheWaWaR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-01T09:39:55Z", "updated_at": "2015-06-01T12:58:47Z", "closed_at": "2015-06-01T12:58:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Error info:\n\n```\n(my_program) serial 1234\nInvalid Command!\nUsage: serial <port> [--baud=<n>] [--timeout=<seconds>]\nOptions:\n    --baud=<n>  Baudrate [default: 9600]\n(my_program)\n```\n\n`serial` sub command not work. There should have one blank line above `Options:`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/277", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/277/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/277/events", "html_url": "https://github.com/docopt/docopt/issues/277", "id": 79562536, "node_id": "MDU6SXNzdWU3OTU2MjUzNg==", "number": 277, "title": "Docopt to MAN and later to FISH", "user": {"login": "Semyazz", "id": 440414, "node_id": "MDQ6VXNlcjQ0MDQxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/440414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Semyazz", "html_url": "https://github.com/Semyazz", "followers_url": "https://api.github.com/users/Semyazz/followers", "following_url": "https://api.github.com/users/Semyazz/following{/other_user}", "gists_url": "https://api.github.com/users/Semyazz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Semyazz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Semyazz/subscriptions", "organizations_url": "https://api.github.com/users/Semyazz/orgs", "repos_url": "https://api.github.com/users/Semyazz/repos", "events_url": "https://api.github.com/users/Semyazz/events{/privacy}", "received_events_url": "https://api.github.com/users/Semyazz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-22T18:36:29Z", "updated_at": "2016-07-08T17:02:44Z", "closed_at": "2016-07-08T17:02:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to somehow generate MAN pages from `--help` generated by docopt? My ultimate goal is to generate completion for FISH and from what I've seen Fish parses MAN pages.\n\nI've tried cli2man, didn't work. Any other ideas? It'd be awesome to get both nice help in command line and MAN page.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/276", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/276/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/276/events", "html_url": "https://github.com/docopt/docopt/issues/276", "id": 75721856, "node_id": "MDU6SXNzdWU3NTcyMTg1Ng==", "number": 276, "title": "Multiple command-lines and lists", "user": {"login": "kaushik-work", "id": 6299530, "node_id": "MDQ6VXNlcjYyOTk1MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6299530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaushik-work", "html_url": "https://github.com/kaushik-work", "followers_url": "https://api.github.com/users/kaushik-work/followers", "following_url": "https://api.github.com/users/kaushik-work/following{/other_user}", "gists_url": "https://api.github.com/users/kaushik-work/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaushik-work/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaushik-work/subscriptions", "organizations_url": "https://api.github.com/users/kaushik-work/orgs", "repos_url": "https://api.github.com/users/kaushik-work/repos", "events_url": "https://api.github.com/users/kaushik-work/events{/privacy}", "received_events_url": "https://api.github.com/users/kaushik-work/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-12T20:06:35Z", "updated_at": "2015-05-13T05:37:23Z", "closed_at": "2015-05-13T05:37:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following command-line definition\n\n```\nUsage:\n    myprog type1 <file>\n    myprog type2 <file>...\n\nOptions:\n    type1           file should be a single string\n    type2           file should be a list of strings\n    <file>           file name(s)\n```\n\nResults in `args['<file>']` being a list for both `type1` and `type2`. I would have expected the correct behavior to be that `args['<file>']` is a list only for `type2`\n\nThanks!\n-Kaushik\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/271", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/271/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/271/events", "html_url": "https://github.com/docopt/docopt/issues/271", "id": 70419679, "node_id": "MDU6SXNzdWU3MDQxOTY3OQ==", "number": 271, "title": "Allow newline between options for better readability", "user": {"login": "egalitarian", "id": 2832632, "node_id": "MDQ6VXNlcjI4MzI2MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2832632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egalitarian", "html_url": "https://github.com/egalitarian", "followers_url": "https://api.github.com/users/egalitarian/followers", "following_url": "https://api.github.com/users/egalitarian/following{/other_user}", "gists_url": "https://api.github.com/users/egalitarian/gists{/gist_id}", "starred_url": "https://api.github.com/users/egalitarian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egalitarian/subscriptions", "organizations_url": "https://api.github.com/users/egalitarian/orgs", "repos_url": "https://api.github.com/users/egalitarian/repos", "events_url": "https://api.github.com/users/egalitarian/events{/privacy}", "received_events_url": "https://api.github.com/users/egalitarian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-23T14:02:36Z", "updated_at": "2015-04-23T14:09:58Z", "closed_at": "2015-04-23T14:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n\"\"\"Usage:\n  test.py [options]\n\nOptions:\n  -h --help              show this help message and exit\n\n  --filetypes            list all supported input filetypes\n\"\"\"\n\nfrom docopt import docopt\narguments = docopt(__doc__, version='3.0.0dev1')\nprint arguments\n```\n\nTesting the code above:\n\n```\npython test.py --filetypes\n```\n\nresults in displaying the usage and exiting. If the newline separating --help and --filetypes is removed than all is well and --filetypes is found in the docopt dictionary.\n\nSometimes when having lots and lots of options it's better to group them together by leaving a newline between the groups.\n\n```\n\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/269", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/269/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/269/events", "html_url": "https://github.com/docopt/docopt/issues/269", "id": 66275992, "node_id": "MDU6SXNzdWU2NjI3NTk5Mg==", "number": 269, "title": "Outdated \"Porting docopt to other languages\"", "user": {"login": "ReneSac", "id": 6010063, "node_id": "MDQ6VXNlcjYwMTAwNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6010063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ReneSac", "html_url": "https://github.com/ReneSac", "followers_url": "https://api.github.com/users/ReneSac/followers", "following_url": "https://api.github.com/users/ReneSac/following{/other_user}", "gists_url": "https://api.github.com/users/ReneSac/gists{/gist_id}", "starred_url": "https://api.github.com/users/ReneSac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ReneSac/subscriptions", "organizations_url": "https://api.github.com/users/ReneSac/orgs", "repos_url": "https://api.github.com/users/ReneSac/repos", "events_url": "https://api.github.com/users/ReneSac/events{/privacy}", "received_events_url": "https://api.github.com/users/ReneSac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-04T04:49:17Z", "updated_at": "2015-04-11T16:31:58Z", "closed_at": "2015-04-11T16:31:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a section in the  README.rst called \"Porting docopt to other languages\". It presents an incomplete list of only 4 ports like they are all the ports. Either complete the list, remove or put a link to a complete list of ports.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/266", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/266/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/266/events", "html_url": "https://github.com/docopt/docopt/issues/266", "id": 64828324, "node_id": "MDU6SXNzdWU2NDgyODMyNA==", "number": 266, "title": "DocoptExit is raised when - in windows - a script is called without \"python\"", "user": {"login": "sentriz", "id": 6832539, "node_id": "MDQ6VXNlcjY4MzI1Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6832539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sentriz", "html_url": "https://github.com/sentriz", "followers_url": "https://api.github.com/users/sentriz/followers", "following_url": "https://api.github.com/users/sentriz/following{/other_user}", "gists_url": "https://api.github.com/users/sentriz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sentriz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sentriz/subscriptions", "organizations_url": "https://api.github.com/users/sentriz/orgs", "repos_url": "https://api.github.com/users/sentriz/repos", "events_url": "https://api.github.com/users/sentriz/events{/privacy}", "received_events_url": "https://api.github.com/users/sentriz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-03-27T18:50:20Z", "updated_at": "2016-11-09T03:25:34Z", "closed_at": "2016-11-09T03:25:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "my_script.py:\n\n``` python\n\"\"\"\nUsage:\n  my_script.py  (<url> | --artist=<name> --album=<name>)\n                [--do-this | --do-that] [--folder=<name>]\n  my_script.py  (--help | --version)\n\"\"\"\n\nfrom docopt import docopt\n\narguments = docopt(__doc__)\nprint(arguments)\n```\n## \n\nrunning `python my_script.py http://example.com --do-this` from the Windows command line returns:\n\n```\n{'--album': None,\n '--artist': None,\n '--do-that': False,\n '--do-this': True,\n '--folder': None,\n '--help': False,\n '--version': False,\n '<url>': 'http://example.com'}\n```\n\nwhich is absolutely fine.\n## \n\nhowever, running `my_script.py http://example.com --do-this` returns:\n\n```\nUsage:\n  my_script.py  (<url> | --artist=<name> --album=<name>)\n                [--do-this | --do-that] [--folder=<name>]\n  my_script.py  (--help | --version)\n```\n\nwhich is not.\n## \n\nis this a docopt or Windows issue?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/263", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/263/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/263/events", "html_url": "https://github.com/docopt/docopt/issues/263", "id": 62248974, "node_id": "MDU6SXNzdWU2MjI0ODk3NA==", "number": 263, "title": "Why use split here", "user": {"login": "psykzz", "id": 1134201, "node_id": "MDQ6VXNlcjExMzQyMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1134201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psykzz", "html_url": "https://github.com/psykzz", "followers_url": "https://api.github.com/users/psykzz/followers", "following_url": "https://api.github.com/users/psykzz/following{/other_user}", "gists_url": "https://api.github.com/users/psykzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/psykzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psykzz/subscriptions", "organizations_url": "https://api.github.com/users/psykzz/orgs", "repos_url": "https://api.github.com/users/psykzz/repos", "events_url": "https://api.github.com/users/psykzz/events{/privacy}", "received_events_url": "https://api.github.com/users/psykzz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-17T01:06:28Z", "updated_at": "2015-03-27T19:38:15Z", "closed_at": "2015-03-26T18:13:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/docopt/docopt/blob/master/examples/git/git.py#L48 \nWhy not just use a list to start with?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/259", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/259/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/259/events", "html_url": "https://github.com/docopt/docopt/issues/259", "id": 57741286, "node_id": "MDU6SXNzdWU1Nzc0MTI4Ng==", "number": 259, "title": "Can't have blank line between option descriptions.", "user": {"login": "kalekundert", "id": 298132, "node_id": "MDQ6VXNlcjI5ODEzMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/298132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalekundert", "html_url": "https://github.com/kalekundert", "followers_url": "https://api.github.com/users/kalekundert/followers", "following_url": "https://api.github.com/users/kalekundert/following{/other_user}", "gists_url": "https://api.github.com/users/kalekundert/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalekundert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalekundert/subscriptions", "organizations_url": "https://api.github.com/users/kalekundert/orgs", "repos_url": "https://api.github.com/users/kalekundert/repos", "events_url": "https://api.github.com/users/kalekundert/events{/privacy}", "received_events_url": "https://api.github.com/users/kalekundert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-15T19:00:05Z", "updated_at": "2015-02-16T09:39:35Z", "closed_at": "2015-02-16T09:39:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it is a bug that docopt stops parsing options as soon as it encounters a blank line.  This precludes giving detailed option descriptions in the way most man pages do.  For example:\n\n``` python\nfrom docopt import docopt\n\nprint(docopt(\"\"\"\\\nUsage:\n    bug.py [options]\n\nOptions:\n  -f --foo <foo>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam justo sem, \n        malesuada ut ultricies ac, bibendum eu neque. Lorem ipsum dolor sit \n        amet, consectetur adipiscing elit.\n\n  -b --bar <bar>\n        Aenean at tellus ut velit dignissim tincidunt. Curabitur euismod \n        laoreet orci semper dignissim. Suspendisse potenti. Vivamus sed enim \n        quis dui pulvinar pharetra.\n\"\"\"))\n\n# {'--foo': None}\n```\n\nThe --bar option is not parsed because the options section ends when docopt encounters the first blank line, which it does after the --foo description.  This is contrary to the documentation, which states that \"every line in doc that starts with - or -- (not counting spaces) is treated as an option description\".\n\nI did a git bisect and found that this behaviour was introduced in commit d5b96f878, which was meant to address #102.  I can get my example to work by adding a space to the blank line between --foo and --bar, but that's a hack.\n\nAfter reading #250, I realized that this problem is not in the most recent release (0.6.2).  So this isn't a pressing problem for me any more, because I can just use 0.6.2 instead of master.  But I still think a test should be added to make sure cases like the one above are allowed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/257", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/257/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/257/events", "html_url": "https://github.com/docopt/docopt/issues/257", "id": 57588797, "node_id": "MDU6SXNzdWU1NzU4ODc5Nw==", "number": 257, "title": "Arguments grouped by command", "user": {"login": "Xumeiquer", "id": 2176256, "node_id": "MDQ6VXNlcjIxNzYyNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2176256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xumeiquer", "html_url": "https://github.com/Xumeiquer", "followers_url": "https://api.github.com/users/Xumeiquer/followers", "following_url": "https://api.github.com/users/Xumeiquer/following{/other_user}", "gists_url": "https://api.github.com/users/Xumeiquer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xumeiquer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xumeiquer/subscriptions", "organizations_url": "https://api.github.com/users/Xumeiquer/orgs", "repos_url": "https://api.github.com/users/Xumeiquer/repos", "events_url": "https://api.github.com/users/Xumeiquer/events{/privacy}", "received_events_url": "https://api.github.com/users/Xumeiquer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-13T11:35:13Z", "updated_at": "2015-02-13T13:17:38Z", "closed_at": "2015-02-13T13:17:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am working with the library and I come up with it does not recognize what arguments were passed through each command.\n\nI have the following code:\n\n``` Python\nfrom docopt import docopt\n\n__doc__ = \"\"\"\nUsage:\n    test (cmdA (--all | [options]) | cmdB (--all | [options]))...\n\nOptions:\n    -i, --input\n    -o, --output\n\"\"\"\n\nargs = docopt(__doc__)\nprint(args)\n```\n\nWhen I execute this code with the folloing command line\n\n```\npython test.py cmdA --all cmdB --input\n```\n\nI got the following output from the docopt\n\n``` Python\n{'--all': 1,\n '--input': 1,\n '--output': 0,\n 'cmdA': 1,\n 'cmdB': 1}\n```\n\nAccording to this output I am not able to know whether `--all` argument belogns to `cmdA` or `cmdB`, and the same thing happens with the options. I am not able to recognize whether the arguument `--input` belogns to `cmdA` or `cmdB`.\n\nA possible solution could be something like:\n- Adding a dictionary for each command with its arguments\n- Adding a empty dictionary if the command was called without arguments\n- If the command wasn't called then set it to None\n\nFor example:\n\n``` Python\n{'cmdA': {\n    '--input': 0,\n    '--all': 1,\n    '--output': 0},\n'cmdB': {\n     '--input': 1,\n     '--all': 0,\n     '--output': 0}\n}\n```\n\nI hope this helps.\n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/256", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/256/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/256/events", "html_url": "https://github.com/docopt/docopt/issues/256", "id": 56946968, "node_id": "MDU6SXNzdWU1Njk0Njk2OA==", "number": 256, "title": "identical doc string succeeds on MacOSX fails on Linux and in Browser with 0.6.1", "user": {"login": "harijay", "id": 11098, "node_id": "MDQ6VXNlcjExMDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/11098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harijay", "html_url": "https://github.com/harijay", "followers_url": "https://api.github.com/users/harijay/followers", "following_url": "https://api.github.com/users/harijay/following{/other_user}", "gists_url": "https://api.github.com/users/harijay/gists{/gist_id}", "starred_url": "https://api.github.com/users/harijay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harijay/subscriptions", "organizations_url": "https://api.github.com/users/harijay/orgs", "repos_url": "https://api.github.com/users/harijay/repos", "events_url": "https://api.github.com/users/harijay/events{/privacy}", "received_events_url": "https://api.github.com/users/harijay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-08T10:33:55Z", "updated_at": "2015-02-25T21:14:53Z", "closed_at": "2015-02-25T21:14:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a simple usage message\nNote the space between the run1 and the f.\n\n```\nUsage: MegaMPFileTraverseDM.py \\<SampleSheet.csv\\> \\<run1 f\\> \\<run2f\\> \\<index1f\\> \\<index2f\\>\\<output_dir_root\\>\n```\n\nThis parses the invocation below fine and succeeds on MacOSX running python 2.7.6 and docopt 0.6.1\nTrying this invocation command on Linux or on the try.docopt.org fails and returns the usage message.  \nI am trying to understand why this does not consistently succeed. All are running the same 0.6.1 version of docopt\n\n```\n python MegaMPFileTraverseDM.py ~/miseqdata/SampleSheetTemplateTest.csv smalltest/run1_aa_baby_R1_split.fastq.gz smalltest/run2_aa_baby_R2_split.fastq.gz smalltest/index1_aa_baby_I1_split.fastq.gz smalltest/index2_aa_baby_I2_split.fastq.gz  smalltest\n```\n\nIf I remove the space between the run1 and the f , then it succeeds regardless of the OS. This is just a representative example, in reality my option is a lot longer and shows a more descriptive usage message that only succeeds on OSX.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/255", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/255/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/255/events", "html_url": "https://github.com/docopt/docopt/issues/255", "id": 56592937, "node_id": "MDU6SXNzdWU1NjU5MjkzNw==", "number": 255, "title": "Capitalized required arguments return the argument passed in instead of True/False", "user": {"login": "SamuelRazzell", "id": 4723945, "node_id": "MDQ6VXNlcjQ3MjM5NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4723945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SamuelRazzell", "html_url": "https://github.com/SamuelRazzell", "followers_url": "https://api.github.com/users/SamuelRazzell/followers", "following_url": "https://api.github.com/users/SamuelRazzell/following{/other_user}", "gists_url": "https://api.github.com/users/SamuelRazzell/gists{/gist_id}", "starred_url": "https://api.github.com/users/SamuelRazzell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SamuelRazzell/subscriptions", "organizations_url": "https://api.github.com/users/SamuelRazzell/orgs", "repos_url": "https://api.github.com/users/SamuelRazzell/repos", "events_url": "https://api.github.com/users/SamuelRazzell/events{/privacy}", "received_events_url": "https://api.github.com/users/SamuelRazzell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-04T21:49:43Z", "updated_at": "2015-02-05T21:50:48Z", "closed_at": "2015-02-05T09:18:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is intended behavior or not but with this code:\n\n```\n\"\"\"Usage:\n    test DFU\n    test dfu\n\"\"\"\nfrom docopt import docopt\nprint docopt(__doc__)\n```\n\nYou will see the dictionary come back as \n\n```\npython test.py DFU\n    {'DFU': 'DFU',\n    'dfu': False}\npython test.py dfu\n    {'DFU': 'dfu',\n    'dfu': False}\n```\n\nIf this is supposed to happen, that's fine, but I couldn't find any documentation on the fact that an all capitalized word returns the arguments instead of a True/False.\n\nI'm kind of curious as to why this happens, so I reading through the source, but I figured I should ask about it so that other people can see what's going on.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/253", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/253/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/253/events", "html_url": "https://github.com/docopt/docopt/issues/253", "id": 54671926, "node_id": "MDU6SXNzdWU1NDY3MTkyNg==", "number": 253, "title": "Port of docopt to Nim", "user": {"login": "oprypin", "id": 371383, "node_id": "MDQ6VXNlcjM3MTM4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/371383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oprypin", "html_url": "https://github.com/oprypin", "followers_url": "https://api.github.com/users/oprypin/followers", "following_url": "https://api.github.com/users/oprypin/following{/other_user}", "gists_url": "https://api.github.com/users/oprypin/gists{/gist_id}", "starred_url": "https://api.github.com/users/oprypin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oprypin/subscriptions", "organizations_url": "https://api.github.com/users/oprypin/orgs", "repos_url": "https://api.github.com/users/oprypin/repos", "events_url": "https://api.github.com/users/oprypin/events{/privacy}", "received_events_url": "https://api.github.com/users/oprypin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-17T19:20:27Z", "updated_at": "2015-01-19T10:45:54Z", "closed_at": "2015-01-19T10:45:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have ported _docopt_ to [Nim programming language](http://nim-lang.org/):\n\nhttps://github.com/BlaXpirit/docopt.nim\n\n174/174 tests pass.\n\nI would like to move this to docopt organization.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/252", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/252/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/252/events", "html_url": "https://github.com/docopt/docopt/issues/252", "id": 54662194, "node_id": "MDU6SXNzdWU1NDY2MjE5NA==", "number": 252, "title": "My docopt port is based on master branch. Should I be concerned?", "user": {"login": "oprypin", "id": 371383, "node_id": "MDQ6VXNlcjM3MTM4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/371383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oprypin", "html_url": "https://github.com/oprypin", "followers_url": "https://api.github.com/users/oprypin/followers", "following_url": "https://api.github.com/users/oprypin/following{/other_user}", "gists_url": "https://api.github.com/users/oprypin/gists{/gist_id}", "starred_url": "https://api.github.com/users/oprypin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oprypin/subscriptions", "organizations_url": "https://api.github.com/users/oprypin/orgs", "repos_url": "https://api.github.com/users/oprypin/repos", "events_url": "https://api.github.com/users/oprypin/events{/privacy}", "received_events_url": "https://api.github.com/users/oprypin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-17T13:47:10Z", "updated_at": "2015-03-22T23:41:12Z", "closed_at": "2015-03-22T23:41:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "My port of docopt to a different language is directly based on code from master branch of docopt.py. Are there any problems with this and what can be done to fix them?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/251", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/251/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/251/events", "html_url": "https://github.com/docopt/docopt/issues/251", "id": 54662159, "node_id": "MDU6SXNzdWU1NDY2MjE1OQ==", "number": 251, "title": "How should I credit original author if my docopt port is a direct translation of docopt.py?", "user": {"login": "oprypin", "id": 371383, "node_id": "MDQ6VXNlcjM3MTM4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/371383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oprypin", "html_url": "https://github.com/oprypin", "followers_url": "https://api.github.com/users/oprypin/followers", "following_url": "https://api.github.com/users/oprypin/following{/other_user}", "gists_url": "https://api.github.com/users/oprypin/gists{/gist_id}", "starred_url": "https://api.github.com/users/oprypin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oprypin/subscriptions", "organizations_url": "https://api.github.com/users/oprypin/orgs", "repos_url": "https://api.github.com/users/oprypin/repos", "events_url": "https://api.github.com/users/oprypin/events{/privacy}", "received_events_url": "https://api.github.com/users/oprypin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-17T13:46:03Z", "updated_at": "2015-03-22T23:41:24Z", "closed_at": "2015-03-22T23:41:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "My port of docopt is a direct copy of docopt Python implementation, but in a different programming language.\n\nAccording to MIT license, I must include \"the above copyright notice\" \"in all copies or substantial portions of the Software\".\n\nHow should I credit the original author\n- in LICENSE;\n- in source files?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/248", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/248/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/248/events", "html_url": "https://github.com/docopt/docopt/issues/248", "id": 52969862, "node_id": "MDU6SXNzdWU1Mjk2OTg2Mg==", "number": 248, "title": "Two long options can result in \"specified ambiguously\" error (Javascript)", "user": {"login": "mmastrac", "id": 512240, "node_id": "MDQ6VXNlcjUxMjI0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/512240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmastrac", "html_url": "https://github.com/mmastrac", "followers_url": "https://api.github.com/users/mmastrac/followers", "following_url": "https://api.github.com/users/mmastrac/following{/other_user}", "gists_url": "https://api.github.com/users/mmastrac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmastrac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmastrac/subscriptions", "organizations_url": "https://api.github.com/users/mmastrac/orgs", "repos_url": "https://api.github.com/users/mmastrac/repos", "events_url": "https://api.github.com/users/mmastrac/events{/privacy}", "received_events_url": "https://api.github.com/users/mmastrac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-28T01:02:18Z", "updated_at": "2015-01-01T10:43:59Z", "closed_at": "2015-01-01T10:43:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I specify --woff given the following two option definitions, I get an error saying that --woff was specified ambiguously. \n\n  --woff2=<mode>      Processing mode for woff2 fonts: data, link or omit [default: omit]\n  --woff=<mode>       Processing mode for woff fonts: data, link or omit [default: data]\n\nIs this by design?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/246", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/246/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/246/events", "html_url": "https://github.com/docopt/docopt/issues/246", "id": 52596839, "node_id": "MDU6SXNzdWU1MjU5NjgzOQ==", "number": 246, "title": "docopt don't print 'Option' section when argument format is wrong", "user": {"login": "leeyiw", "id": 3157740, "node_id": "MDQ6VXNlcjMxNTc3NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3157740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leeyiw", "html_url": "https://github.com/leeyiw", "followers_url": "https://api.github.com/users/leeyiw/followers", "following_url": "https://api.github.com/users/leeyiw/following{/other_user}", "gists_url": "https://api.github.com/users/leeyiw/gists{/gist_id}", "starred_url": "https://api.github.com/users/leeyiw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leeyiw/subscriptions", "organizations_url": "https://api.github.com/users/leeyiw/orgs", "repos_url": "https://api.github.com/users/leeyiw/repos", "events_url": "https://api.github.com/users/leeyiw/events{/privacy}", "received_events_url": "https://api.github.com/users/leeyiw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-21T14:38:39Z", "updated_at": "2014-12-23T06:17:21Z", "closed_at": "2014-12-21T16:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using docopt with following docstring:\n\n```\n'''\nUsage:\n  dnspod_ddns.py [options]\n\nOptions:\n  -h --help      Show this screen.\n  -t TIME        Check IP change every TIME seconds [default: 60].\n  -l LOG_PATH    Program log file [default: /var/log/dnspod_ddns.log].\n  -p PID_FILE    Use PID_FILE as daemon's pid file [default: /var/run/dnspod_ddns.pid].\n  -d ACTION      Run this script as a daemon (e.g. start,stop,restart).\n\n'''\n```\n\nAnd when I invoke the script with wrong format argument, it only print the **Usage** section, **Options** section is missing. Couldn't find any API provide this function.\n\nThe [naval_fate example](https://github.com/docopt/docopt/blob/master/examples/naval_fate.py) also have the same issue. I think the best solution is to add an option like `full_usage=False` when I call docopt.docopt() to parse the arguments.\n\nPlease check it out. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/245", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/245/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/245/events", "html_url": "https://github.com/docopt/docopt/issues/245", "id": 52525223, "node_id": "MDU6SXNzdWU1MjUyNTIyMw==", "number": 245, "title": "(Python, Gstreamer, Bug) Gstreamer is overriding docopts docstring ", "user": {"login": "serialoverflow", "id": 279131, "node_id": "MDQ6VXNlcjI3OTEzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/279131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serialoverflow", "html_url": "https://github.com/serialoverflow", "followers_url": "https://api.github.com/users/serialoverflow/followers", "following_url": "https://api.github.com/users/serialoverflow/following{/other_user}", "gists_url": "https://api.github.com/users/serialoverflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/serialoverflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serialoverflow/subscriptions", "organizations_url": "https://api.github.com/users/serialoverflow/orgs", "repos_url": "https://api.github.com/users/serialoverflow/repos", "events_url": "https://api.github.com/users/serialoverflow/events{/privacy}", "received_events_url": "https://api.github.com/users/serialoverflow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-19T20:29:52Z", "updated_at": "2014-12-20T20:06:06Z", "closed_at": "2014-12-20T20:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\n\ngstreamer seems to override docopts.\n\nWithout \"gst\" imported:\n\n```\n>> py2 blockify.py -h\nblockify\n\nUsage:\n    blockify [-l <path>] [-v...] [-q] [-h]\n\nOptions:\n    -l, --log=<path>  Enables logging to the logfile/-path specified.\n    -q, --quiet       Don't print anything to stdout.\n    -v                Verbosity of the logging module, up to -vvv.\n    -h, --help        Show this help text.\n    --version         Show current version of blockify.\n```\n\nWith \"import gst\":\n\n```\n >> py2 blockify.py -h\nUsage:\n  blockify.py [OPTION\u2026] - GStreamer initialization\n\nHelp Options:\n  -h, --help                        Show help options\n  --help-all                        Show all help options\n  --help-gst                        Show GStreamer Options\n```\n\nThe commands work, too, e.g. blockify --help-all. So docopt seems to be completely overridden by gstreamers option parser.\n\nThe workaround is to import gst after the docopt(...) call. Still, i wanted to bring this to your attention.\n\nRegards,\nMax\n\nP.S.: This does not appear to be a docopt-specific problem: http://stackoverflow.com/questions/12059806/gstreamer-help-message-overriding-my-argparse-message\nI leave it to you to decide if this issue still belongs here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/244", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/244/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/244/events", "html_url": "https://github.com/docopt/docopt/issues/244", "id": 52422458, "node_id": "MDU6SXNzdWU1MjQyMjQ1OA==", "number": 244, "title": "Some option lines are not being parsed correctly?", "user": {"login": "lambdaknight", "id": 134263, "node_id": "MDQ6VXNlcjEzNDI2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/134263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambdaknight", "html_url": "https://github.com/lambdaknight", "followers_url": "https://api.github.com/users/lambdaknight/followers", "following_url": "https://api.github.com/users/lambdaknight/following{/other_user}", "gists_url": "https://api.github.com/users/lambdaknight/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambdaknight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambdaknight/subscriptions", "organizations_url": "https://api.github.com/users/lambdaknight/orgs", "repos_url": "https://api.github.com/users/lambdaknight/repos", "events_url": "https://api.github.com/users/lambdaknight/events{/privacy}", "received_events_url": "https://api.github.com/users/lambdaknight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-18T22:06:31Z", "updated_at": "2015-01-05T20:47:17Z", "closed_at": "2014-12-19T12:50:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have the following DocOpt doc string:\n\n``` python\n\"\"\"\nTest\n\nUsage:\n    test.py test [--verbose] [--testopt]\n\n    test.py (-h | --help)\n\nCommands:\n    test\n        test stuff\n\n        -t, --testopt       A test option\n\nGeneral Options:\n    -v, --verbose                           Enables verbose output.\n    -h, --help                              Show this screen.\n\"\"\"\n```\n\n...and I call \"test.py test -t\", I get the usage screen and DocOpt fails to parse the options correctly. The program only responds to \"--testopt\". If I use the same doc string using the Ruby implementation, it responds to \"-t\" just fine and properly sets the \"--testopt\" option to true.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/243", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/243/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/243/events", "html_url": "https://github.com/docopt/docopt/issues/243", "id": 52338865, "node_id": "MDU6SXNzdWU1MjMzODg2NQ==", "number": 243, "title": "Storing of option values unintuitive?", "user": {"login": "MaxNoe", "id": 5488440, "node_id": "MDQ6VXNlcjU0ODg0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxNoe", "html_url": "https://github.com/MaxNoe", "followers_url": "https://api.github.com/users/MaxNoe/followers", "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}", "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions", "organizations_url": "https://api.github.com/users/MaxNoe/orgs", "repos_url": "https://api.github.com/users/MaxNoe/repos", "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxNoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-18T08:55:45Z", "updated_at": "2014-12-18T10:15:03Z", "closed_at": "2014-12-18T10:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider a Command Line interface like this one:\n\n```\n\"\"\"\nUsage:\n    test [options]\nOptions:\n    -o <option>, --option=<option>     An arbitrary option\n\"\"\"\n```\n\nIn this case the keyword in the dictionary returned by docopt for this option will be \"--option\".\nMaybe it's just me but i found this very unintuitive.\nI think storing it in \"<option>\" would be more intuitive and less ambigious.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/233", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/233/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/233/events", "html_url": "https://github.com/docopt/docopt/issues/233", "id": 49058102, "node_id": "MDU6SXNzdWU0OTA1ODEwMg==", "number": 233, "title": "Bug on pipe being grouped by `[ ]`.", "user": {"login": "huntzhan", "id": 5213906, "node_id": "MDQ6VXNlcjUyMTM5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5213906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huntzhan", "html_url": "https://github.com/huntzhan", "followers_url": "https://api.github.com/users/huntzhan/followers", "following_url": "https://api.github.com/users/huntzhan/following{/other_user}", "gists_url": "https://api.github.com/users/huntzhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/huntzhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huntzhan/subscriptions", "organizations_url": "https://api.github.com/users/huntzhan/orgs", "repos_url": "https://api.github.com/users/huntzhan/repos", "events_url": "https://api.github.com/users/huntzhan/events{/privacy}", "received_events_url": "https://api.github.com/users/huntzhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-17T08:30:34Z", "updated_at": "2014-11-18T10:06:47Z", "closed_at": "2014-11-18T10:06:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "the behavior of pipe does not match the description:\n\n> | (pipe) mutually exclusive elements. Group them using ( ) if one of the mutually exclusive elements is required: my_program.py (--clockwise | --counter-clockwise) TIME. Group them using [ ] if none of the mutually-exclusive elements are required: my_program.py [--left | --right].\n\nexample code:\n\n``` python\n>>> doc = \"\"\"Naval Fate.\n... \n... Usage:\n...     fuck [--left | --right]\n... \n... options:\n... \n... \"\"\"\n>>> pattern = parse_pattern(formal_usage(parse_section('usage:', doc)[0]), options)\n>>> pattern\nRequired(Required(Optional(Either(Option(None, '--left', 0, False), Option(None, '--right', 0, False)))))\n>>> argv = parse_argv(Tokens(['--left', '--right']), [])\n>>> argv\n[Option(None, '--left', 0, True), Option(None, '--right', 0, True)]\n>>> pattern.fix().match(argv)\n(True, [Option(None, '--right', 0, True)], [Option(None, '--left', 0, True)])\n```\n\nSince `[--left | --right]` represents `immutably-exclusive elements`, the result should be `(True, [], [ Option(None, '--left', 0, True), Option(None, '--right', 0, True)])`.\n\nThe method `match(self, left, collected=None)` of `Either` always carries out the mutually exclusive search on tokens. Such behavior should be guided by upper-layer class `Required` and `Optional`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/231", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/231/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/231/events", "html_url": "https://github.com/docopt/docopt/issues/231", "id": 47049157, "node_id": "MDU6SXNzdWU0NzA0OTE1Nw==", "number": 231, "title": "Unable to my command variants, reordering changes the behavior.", "user": {"login": "bhyde", "id": 19701, "node_id": "MDQ6VXNlcjE5NzAx", "avatar_url": "https://avatars0.githubusercontent.com/u/19701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhyde", "html_url": "https://github.com/bhyde", "followers_url": "https://api.github.com/users/bhyde/followers", "following_url": "https://api.github.com/users/bhyde/following{/other_user}", "gists_url": "https://api.github.com/users/bhyde/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhyde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhyde/subscriptions", "organizations_url": "https://api.github.com/users/bhyde/orgs", "repos_url": "https://api.github.com/users/bhyde/repos", "events_url": "https://api.github.com/users/bhyde/events{/privacy}", "received_events_url": "https://api.github.com/users/bhyde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-28T16:36:41Z", "updated_at": "2014-11-21T02:26:20Z", "closed_at": "2014-11-21T02:26:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Order of commands appears to break docopt parsing.\n\n```\n% python hm.py show-issue 10\n```\n\nDoesn't get recognized in the following script; but if I move show table to the top of the\nlist of commands it does work.   Which would be fine as a work around, but I distilled this\ndown from a more complex example and in the work around only makes other things fail.\n\n```\n#!/usr/bin/env python\n\"\"\"\nUSAGE:\n  hm.py show_table milestone_vs_priority\n  hm.py show_issue <n>\nOPTIONS:\n  --token=<tok>         A Token [default: 12345]\n\"\"\"\nfrom docopt import docopt\nif __name__ == '__main__':\n    print docopt(__doc__)\n\n\"\"\"\nfrom docopt import docopt\nif __name__ == '__main__':\n    print docopt(__doc__)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/226", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/226/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/226/events", "html_url": "https://github.com/docopt/docopt/issues/226", "id": 44746481, "node_id": "MDU6SXNzdWU0NDc0NjQ4MQ==", "number": 226, "title": "Arguments with same names overriding each other if used in different commands", "user": {"login": "rmuslimov", "id": 1150337, "node_id": "MDQ6VXNlcjExNTAzMzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1150337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmuslimov", "html_url": "https://github.com/rmuslimov", "followers_url": "https://api.github.com/users/rmuslimov/followers", "following_url": "https://api.github.com/users/rmuslimov/following{/other_user}", "gists_url": "https://api.github.com/users/rmuslimov/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmuslimov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmuslimov/subscriptions", "organizations_url": "https://api.github.com/users/rmuslimov/orgs", "repos_url": "https://api.github.com/users/rmuslimov/repos", "events_url": "https://api.github.com/users/rmuslimov/events{/privacy}", "received_events_url": "https://api.github.com/users/rmuslimov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-02T22:21:55Z", "updated_at": "2014-11-20T21:29:00Z", "closed_at": "2014-11-20T21:29:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example if I have same docstring:\n\nusage: prog func1 <arg1> [--a]\n            prog func2 <arg1>...\n\narg1 have list type, in command func1. I guess this is bug and params should override each other if they located on different rows.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/225", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/225/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/225/events", "html_url": "https://github.com/docopt/docopt/issues/225", "id": 44702649, "node_id": "MDU6SXNzdWU0NDcwMjY0OQ==", "number": 225, "title": "Allow to strip dashes from options in result dictionary", "user": {"login": "pavel-paulau", "id": 833001, "node_id": "MDQ6VXNlcjgzMzAwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/833001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavel-paulau", "html_url": "https://github.com/pavel-paulau", "followers_url": "https://api.github.com/users/pavel-paulau/followers", "following_url": "https://api.github.com/users/pavel-paulau/following{/other_user}", "gists_url": "https://api.github.com/users/pavel-paulau/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavel-paulau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavel-paulau/subscriptions", "organizations_url": "https://api.github.com/users/pavel-paulau/orgs", "repos_url": "https://api.github.com/users/pavel-paulau/repos", "events_url": "https://api.github.com/users/pavel-paulau/events{/privacy}", "received_events_url": "https://api.github.com/users/pavel-paulau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-10-02T15:44:57Z", "updated_at": "2017-05-23T15:44:42Z", "closed_at": "2014-10-09T12:06:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the project README:\n\n> The return value is a simple dictionary with options, arguments and commands as keys, spelled exactly like in your help message.\n\n`options['--file']` looks too odd though. That would be great if a user could invoke docopt with additional named parameter:\n\n```\noptions = docopt(__doc__, strip_dashes=True)\n```\n\nSo that result dictionary has no leading dashes, which is equivalent to:\n\n```\ndef strip_dashes(options):\n    return {k.lstrip('-'): v for k, v in options.items()}\n\noptions = strip_dashes(docopt(__doc__))\n```\n\nWill you accept pull request for this feature?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/224", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/224/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/224/events", "html_url": "https://github.com/docopt/docopt/issues/224", "id": 44671526, "node_id": "MDU6SXNzdWU0NDY3MTUyNg==", "number": 224, "title": "Default for optional mutually exclusive", "user": {"login": "rikrd", "id": 15324, "node_id": "MDQ6VXNlcjE1MzI0", "avatar_url": "https://avatars3.githubusercontent.com/u/15324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rikrd", "html_url": "https://github.com/rikrd", "followers_url": "https://api.github.com/users/rikrd/followers", "following_url": "https://api.github.com/users/rikrd/following{/other_user}", "gists_url": "https://api.github.com/users/rikrd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rikrd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rikrd/subscriptions", "organizations_url": "https://api.github.com/users/rikrd/orgs", "repos_url": "https://api.github.com/users/rikrd/repos", "events_url": "https://api.github.com/users/rikrd/events{/privacy}", "received_events_url": "https://api.github.com/users/rikrd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-02T10:37:44Z", "updated_at": "2014-11-20T21:31:50Z", "closed_at": "2014-11-20T21:31:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are optional mutually exclusive options `[--bla | --blo | --ble]` and required mutually exclusive options `(--bla | --blo | --ble)`.\n\nWould it make sense to have a default option for the optional mututally exclusive?\n\nAs an example, the following:\n\n``` !python\n\"\"\"Example of program which has a mutually exclusive default option.\n\nUsage:\n  mutually_exclusive_default_example.py [--bla | --blo | --ble]\n\nOptions:\n  -h --help                show this help message and exit\n  --version                show version and exit\n  --bla                       do bla [default]\n  --blo                       do blo\n  --ble                       do ble\n\"\"\"\n```\n\nshould be parsed as:\n\n```\n{'--bla': True,\n'--blo': False,\n'--ble': False}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/222", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/222/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/222/events", "html_url": "https://github.com/docopt/docopt/issues/222", "id": 43335168, "node_id": "MDU6SXNzdWU0MzMzNTE2OA==", "number": 222, "title": "invalid", "user": {"login": "Borkason", "id": 2971735, "node_id": "MDQ6VXNlcjI5NzE3MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2971735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Borkason", "html_url": "https://github.com/Borkason", "followers_url": "https://api.github.com/users/Borkason/followers", "following_url": "https://api.github.com/users/Borkason/following{/other_user}", "gists_url": "https://api.github.com/users/Borkason/gists{/gist_id}", "starred_url": "https://api.github.com/users/Borkason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Borkason/subscriptions", "organizations_url": "https://api.github.com/users/Borkason/orgs", "repos_url": "https://api.github.com/users/Borkason/repos", "events_url": "https://api.github.com/users/Borkason/events{/privacy}", "received_events_url": "https://api.github.com/users/Borkason/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-21T13:38:40Z", "updated_at": "2014-09-21T20:16:54Z", "closed_at": "2014-09-21T20:16:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "invalid\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/208", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/208/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/208/events", "html_url": "https://github.com/docopt/docopt/issues/208", "id": 38260954, "node_id": "MDU6SXNzdWUzODI2MDk1NA==", "number": 208, "title": "Java port", "user": {"login": "damiengiese", "id": 6772210, "node_id": "MDQ6VXNlcjY3NzIyMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6772210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damiengiese", "html_url": "https://github.com/damiengiese", "followers_url": "https://api.github.com/users/damiengiese/followers", "following_url": "https://api.github.com/users/damiengiese/following{/other_user}", "gists_url": "https://api.github.com/users/damiengiese/gists{/gist_id}", "starred_url": "https://api.github.com/users/damiengiese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damiengiese/subscriptions", "organizations_url": "https://api.github.com/users/damiengiese/orgs", "repos_url": "https://api.github.com/users/damiengiese/repos", "events_url": "https://api.github.com/users/damiengiese/events{/privacy}", "received_events_url": "https://api.github.com/users/damiengiese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-20T16:24:21Z", "updated_at": "2014-08-05T09:59:23Z", "closed_at": "2014-08-05T09:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've written a Java port of docopt. It can be found on [GitHub](https://github.com/damiengiese/docopt.java) and I'd like to add it to the docopt organization, if you are interested.\n\nThis port is based on version 0.6.1 of the reference implementation. ~~I know that it's out of date already, but I'd like to remedy that soon.~~ I wrote this mainly as an exercise to learn more about Python, so this port is more of a transcription than an example of great Java, but I'll be working on that in the future, too. As it stands, all of the unit tests pass and I've used it in some of my own projects, so I hope it will be useful to others.\n\nThanks again to all of the contributors to docopt and its ports, especially the Python and C# authors.\n\n_EDIT: Reference version 0.6.2 just added support for Python wheels, so this implementation is up-to-date after all._\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/205", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/205/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/205/events", "html_url": "https://github.com/docopt/docopt/issues/205", "id": 37948795, "node_id": "MDU6SXNzdWUzNzk0ODc5NQ==", "number": 205, "title": "Optional and required positional arg mixed with flags not working.", "user": {"login": "welbornprod", "id": 3343802, "node_id": "MDEyOk9yZ2FuaXphdGlvbjMzNDM4MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3343802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/welbornprod", "html_url": "https://github.com/welbornprod", "followers_url": "https://api.github.com/users/welbornprod/followers", "following_url": "https://api.github.com/users/welbornprod/following{/other_user}", "gists_url": "https://api.github.com/users/welbornprod/gists{/gist_id}", "starred_url": "https://api.github.com/users/welbornprod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/welbornprod/subscriptions", "organizations_url": "https://api.github.com/users/welbornprod/orgs", "repos_url": "https://api.github.com/users/welbornprod/repos", "events_url": "https://api.github.com/users/welbornprod/events{/privacy}", "received_events_url": "https://api.github.com/users/welbornprod/received_events", "type": "Organization", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-16T04:39:52Z", "updated_at": "2014-07-20T14:45:22Z", "closed_at": "2014-07-20T14:45:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe this is just too complex, but what I was going for was this:\n\n```\nUsage:\n    todo [FILE] -p <item> <new_position>\n```\n\nBut it would not work unless `todo myfile.txt -p 1 0` was used.\nA plain `todo -p 1 4` caused it to think the args were wrong.\n\nWhat I did to make it work was this:\n\n```\nUsage:\n    todo FILE -p <item> <new_position>\n    todo -p <item> <new_position>\n```\n\nAnd this way I can pass FILE if I want, but it uses a default FILE without it.\n\nHere is [an example](http://try.docopt.org/?doc=My+Test.%0D%0A%0D%0AUsage%3A%0D%0A++++todo+%5BFILE%5D+-p+%3Citem%3E+%3Cnew_position%3E%0D%0A%0D%0AOptions%3A%0D%0A++++FILE++++++++++++%3A+File+to+use.%0D%0A++++%3Citem%3E++++++++++%3A+Item+number+or+regex+pattern.%0D%0A++++%3Cnew_position%3E++%3A+New+position+for+item.%0D%0A++++-p%2C--position+++%3A+Move+item+to+another+position.%0D%0A%0D%0A%0D%0A&argv=-p+5+6) on try.docopt.org showing it failing when no filename is given.\n\nHere is [4 screenshots](http://imgur.com/a/NdOhm) of the try.docopt.org tests that I ran. \n\nIf there is something I am missing please let me know, I'd rather not have to type out the 2 lines. I figure if it works when a FILE is given, it should work when it is not given.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/198", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/198/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/198/events", "html_url": "https://github.com/docopt/docopt/issues/198", "id": 36437349, "node_id": "MDU6SXNzdWUzNjQzNzM0OQ==", "number": 198, "title": "Adding descriptions/informal documentation for subcommands?", "user": {"login": "chtennek", "id": 2843696, "node_id": "MDQ6VXNlcjI4NDM2OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2843696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chtennek", "html_url": "https://github.com/chtennek", "followers_url": "https://api.github.com/users/chtennek/followers", "following_url": "https://api.github.com/users/chtennek/following{/other_user}", "gists_url": "https://api.github.com/users/chtennek/gists{/gist_id}", "starred_url": "https://api.github.com/users/chtennek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chtennek/subscriptions", "organizations_url": "https://api.github.com/users/chtennek/orgs", "repos_url": "https://api.github.com/users/chtennek/repos", "events_url": "https://api.github.com/users/chtennek/events{/privacy}", "received_events_url": "https://api.github.com/users/chtennek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-24T23:56:15Z", "updated_at": "2014-06-27T19:00:01Z", "closed_at": "2014-06-27T19:00:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would I add descriptions for what each subcommand does? This doesn't work.\n\n```\nNaval Fate.\n\nUsage:\n    naval_fate ship new <name>...        Create a new ship.\n    naval_fate ship <name> move <x> <y>  Move ship <name>.\n        Can I add more details here?\n    naval_fate ship shoot <x> <y>        Shoot.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/195", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/195/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/195/events", "html_url": "https://github.com/docopt/docopt/issues/195", "id": 36218456, "node_id": "MDU6SXNzdWUzNjIxODQ1Ng==", "number": 195, "title": "Testing A Docopt CLI Application?", "user": {"login": "itsnauman", "id": 6206210, "node_id": "MDQ6VXNlcjYyMDYyMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6206210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsnauman", "html_url": "https://github.com/itsnauman", "followers_url": "https://api.github.com/users/itsnauman/followers", "following_url": "https://api.github.com/users/itsnauman/following{/other_user}", "gists_url": "https://api.github.com/users/itsnauman/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsnauman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsnauman/subscriptions", "organizations_url": "https://api.github.com/users/itsnauman/orgs", "repos_url": "https://api.github.com/users/itsnauman/repos", "events_url": "https://api.github.com/users/itsnauman/events{/privacy}", "received_events_url": "https://api.github.com/users/itsnauman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-21T07:08:23Z", "updated_at": "2014-11-20T21:48:52Z", "closed_at": "2014-11-20T21:48:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey :smiley: Can some one give me an example of testing a docopt app using the unittest module?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/192", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/192/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/192/events", "html_url": "https://github.com/docopt/docopt/issues/192", "id": 34539482, "node_id": "MDU6SXNzdWUzNDUzOTQ4Mg==", "number": 192, "title": "Packaging a docopt app? ", "user": {"login": "itsnauman", "id": 6206210, "node_id": "MDQ6VXNlcjYyMDYyMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6206210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsnauman", "html_url": "https://github.com/itsnauman", "followers_url": "https://api.github.com/users/itsnauman/followers", "following_url": "https://api.github.com/users/itsnauman/following{/other_user}", "gists_url": "https://api.github.com/users/itsnauman/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsnauman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsnauman/subscriptions", "organizations_url": "https://api.github.com/users/itsnauman/orgs", "repos_url": "https://api.github.com/users/itsnauman/repos", "events_url": "https://api.github.com/users/itsnauman/events{/privacy}", "received_events_url": "https://api.github.com/users/itsnauman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2014-05-29T09:04:36Z", "updated_at": "2014-05-30T09:16:18Z", "closed_at": "2014-05-29T14:44:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, how do we package a docopt app so that we enter the app name in terminal and it launches? eg `example_app --help`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/188", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/188/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/188/events", "html_url": "https://github.com/docopt/docopt/issues/188", "id": 33672383, "node_id": "MDU6SXNzdWUzMzY3MjM4Mw==", "number": 188, "title": "Tab Completion Support", "user": {"login": "huntzhan", "id": 5213906, "node_id": "MDQ6VXNlcjUyMTM5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5213906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huntzhan", "html_url": "https://github.com/huntzhan", "followers_url": "https://api.github.com/users/huntzhan/followers", "following_url": "https://api.github.com/users/huntzhan/following{/other_user}", "gists_url": "https://api.github.com/users/huntzhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/huntzhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huntzhan/subscriptions", "organizations_url": "https://api.github.com/users/huntzhan/orgs", "repos_url": "https://api.github.com/users/huntzhan/repos", "events_url": "https://api.github.com/users/huntzhan/events{/privacy}", "received_events_url": "https://api.github.com/users/huntzhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-16T12:58:42Z", "updated_at": "2014-06-12T01:55:16Z", "closed_at": "2014-06-12T01:55:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "By supporting `tab completion`, `docopt` could be a more powerful tool.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/187", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/187/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/187/events", "html_url": "https://github.com/docopt/docopt/issues/187", "id": 33285063, "node_id": "MDU6SXNzdWUzMzI4NTA2Mw==", "number": 187, "title": "option choices? --loglevel=(INFO | WARN | CRIT)", "user": {"login": "ChristianKniep", "id": 1420201, "node_id": "MDQ6VXNlcjE0MjAyMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1420201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristianKniep", "html_url": "https://github.com/ChristianKniep", "followers_url": "https://api.github.com/users/ChristianKniep/followers", "following_url": "https://api.github.com/users/ChristianKniep/following{/other_user}", "gists_url": "https://api.github.com/users/ChristianKniep/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristianKniep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristianKniep/subscriptions", "organizations_url": "https://api.github.com/users/ChristianKniep/orgs", "repos_url": "https://api.github.com/users/ChristianKniep/repos", "events_url": "https://api.github.com/users/ChristianKniep/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristianKniep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-12T07:15:07Z", "updated_at": "2014-05-15T06:50:52Z", "closed_at": "2014-05-15T06:50:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\n\nI am wondering quite some time how to model choices.\nIs this even possible through POSIX or GNU standards?\n\nThx for docopt btw, love it!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/186", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/186/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/186/events", "html_url": "https://github.com/docopt/docopt/issues/186", "id": 31857101, "node_id": "MDU6SXNzdWUzMTg1NzEwMQ==", "number": 186, "title": "docopt crashes on documented option", "user": {"login": "STOWouters", "id": 3680682, "node_id": "MDQ6VXNlcjM2ODA2ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3680682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/STOWouters", "html_url": "https://github.com/STOWouters", "followers_url": "https://api.github.com/users/STOWouters/followers", "following_url": "https://api.github.com/users/STOWouters/following{/other_user}", "gists_url": "https://api.github.com/users/STOWouters/gists{/gist_id}", "starred_url": "https://api.github.com/users/STOWouters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/STOWouters/subscriptions", "organizations_url": "https://api.github.com/users/STOWouters/orgs", "repos_url": "https://api.github.com/users/STOWouters/repos", "events_url": "https://api.github.com/users/STOWouters/events{/privacy}", "received_events_url": "https://api.github.com/users/STOWouters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-19T23:59:21Z", "updated_at": "2014-04-20T22:22:49Z", "closed_at": "2014-04-20T22:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I bumped on a weird bug, the following python snippet will reproduce the crash:\n\n``` python\n\"\"\"\nUsage:\n    example.py [(-a | -o) OUTFILE]\n\nOptions:\n    -a OUTFILE    Append to OUTFILE\n    -o OUTFILE    Output to OUTFILE\n\"\"\"\n```\n\nThis lets docopt crash with the following traceback:\n\n``` no-highlight\n  File \"example.py\", line 12, in <module>\n    arguments = docopt(__doc__)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 560, in docopt\n    pattern = parse_pattern(formal_usage(DocoptExit.usage), options)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 373, in parse_pattern\n    result = parse_expr(tokens, options)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 381, in parse_expr\n    seq = parse_seq(tokens, options)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 396, in parse_seq\n    atom = parse_atom(tokens, options)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 413, in parse_atom\n    result = pattern(*parse_expr(tokens, options))\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 381, in parse_expr\n    seq = parse_seq(tokens, options)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 396, in parse_seq\n    atom = parse_atom(tokens, options)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 413, in parse_atom\n    result = pattern(*parse_expr(tokens, options))\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 381, in parse_expr\n    seq = parse_seq(tokens, options)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 396, in parse_seq\n    atom = parse_atom(tokens, options)\n  File \"/usr/lib/python3.3/site-packages/docopt.py\", line 415, in parse_atom\n    raise tokens.error(\"unmatched '%s'\" % token)\ndocopt.DocoptLanguageError: unmatched '('\n```\n\nHowever, if I left out the `Options` section, like this:\n\n``` python\n\"\"\"\nUsage:\n    example.py [(-a | -o) OUTFILE]\n\"\"\"\n```\n\nThen everything went fine, the parsing is done correctly. :astonished: \n\nAs I don't want to leave the `-a` and `-o` undocumented (it's not really clear what they do, when looking at the usage pattern alone..), I found a work around to this:\n\n``` python\n\"\"\"\nUsage:\n    example.py [(-a OUTFILE | -o OUTFILE)]\n\nOptions:\n    -a OUTFILE  Append to OUTFILE.\n    -o OUTFILE  Output to OUTFILE.\n\"\"\"\n```\n\nAlthough, the returned dictionary looks a little different from the undocumented version (first one is the dict from the undocumented version, the latter is from my workaround):\n\n``` no-highlight\n{'-a': False,\n '-o': False,\n 'OUTFILE': None}\n```\n\n``` no-highlight\n{'-a': None,\n '-o': None}\n```\n\nI still prefer to use the first pattern `[(-a | -o) OUTFILE]` as it's compact, but I'm wondering why docopt complains about `docopt.DocoptLanguageError: unmatched '('`, while I don't see any brackets on the option section at all... I guess something went wrong on parsing that part?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/183", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/183/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/183/events", "html_url": "https://github.com/docopt/docopt/issues/183", "id": 28973390, "node_id": "MDU6SXNzdWUyODk3MzM5MA==", "number": 183, "title": "New port of docopt written in Julia lang.", "user": {"login": "bicycle1885", "id": 905683, "node_id": "MDQ6VXNlcjkwNTY4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/905683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bicycle1885", "html_url": "https://github.com/bicycle1885", "followers_url": "https://api.github.com/users/bicycle1885/followers", "following_url": "https://api.github.com/users/bicycle1885/following{/other_user}", "gists_url": "https://api.github.com/users/bicycle1885/gists{/gist_id}", "starred_url": "https://api.github.com/users/bicycle1885/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bicycle1885/subscriptions", "organizations_url": "https://api.github.com/users/bicycle1885/orgs", "repos_url": "https://api.github.com/users/bicycle1885/repos", "events_url": "https://api.github.com/users/bicycle1885/events{/privacy}", "received_events_url": "https://api.github.com/users/bicycle1885/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-03-07T15:30:24Z", "updated_at": "2014-05-29T14:43:10Z", "closed_at": "2014-05-29T14:43:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\n\nI made a new port of docopt, which is written in the [Julia](http://julialang.org/) language.\nhttps://github.com/bicycle1885/Docopt.jl\n\nThis implementation passed (almost) all of the unit tests in the original docopt, and seems to work fine in some examples.\nIt requires v0.3.0 (prerelease) or master branch of the Julia compiler.\n\nDo you think it lives up to a new regular member of the docopt club?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/182", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/182/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/182/events", "html_url": "https://github.com/docopt/docopt/issues/182", "id": 28749476, "node_id": "MDU6SXNzdWUyODc0OTQ3Ng==", "number": 182, "title": "Inconsistancies regarding '--' and '-'", "user": {"login": "rnd42", "id": 618839, "node_id": "MDQ6VXNlcjYxODgzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/618839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rnd42", "html_url": "https://github.com/rnd42", "followers_url": "https://api.github.com/users/rnd42/followers", "following_url": "https://api.github.com/users/rnd42/following{/other_user}", "gists_url": "https://api.github.com/users/rnd42/gists{/gist_id}", "starred_url": "https://api.github.com/users/rnd42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rnd42/subscriptions", "organizations_url": "https://api.github.com/users/rnd42/orgs", "repos_url": "https://api.github.com/users/rnd42/repos", "events_url": "https://api.github.com/users/rnd42/events{/privacy}", "received_events_url": "https://api.github.com/users/rnd42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-04T22:59:17Z", "updated_at": "2014-03-27T08:27:48Z", "closed_at": "2014-03-27T08:27:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, Ii love docopt and wanted to thank you for your work.\n\nI noticed an inconsistency, in the change log at github there is the line:\n- 0.4.0 Option descriptions become optional, support for \"--\" and \"-\" commands.\n\nAnd on the docopt.org website it specifies that both \"--\" and \"-\" will be treated as commands.  On the other hand test_docopt.py starting at line 96 includes:\n\n```\n    assert parse_argv(TS('-h arg -- -v'), options=o) == \\\n            [Option('-h', None, 0, True),\n             Argument(None, 'arg'),\n             Argument(None, '--'),\n             Argument(None, '-v')]\n```\n\nGranted it doesn't matter all that much when you are just using the library, but is a bit confusing for those who are actually working on and/or porting the code base.  So should \"--\" and \"-\" be treated as Arguments or Commands?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/181", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/181/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/181/events", "html_url": "https://github.com/docopt/docopt/issues/181", "id": 28233432, "node_id": "MDU6SXNzdWUyODIzMzQzMg==", "number": 181, "title": "pip and github repo are different", "user": {"login": "akaRem", "id": 1472728, "node_id": "MDQ6VXNlcjE0NzI3Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1472728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akaRem", "html_url": "https://github.com/akaRem", "followers_url": "https://api.github.com/users/akaRem/followers", "following_url": "https://api.github.com/users/akaRem/following{/other_user}", "gists_url": "https://api.github.com/users/akaRem/gists{/gist_id}", "starred_url": "https://api.github.com/users/akaRem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akaRem/subscriptions", "organizations_url": "https://api.github.com/users/akaRem/orgs", "repos_url": "https://api.github.com/users/akaRem/repos", "events_url": "https://api.github.com/users/akaRem/events{/privacy}", "received_events_url": "https://api.github.com/users/akaRem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-25T09:32:21Z", "updated_at": "2014-08-08T09:47:35Z", "closed_at": "2014-08-08T09:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "docopt installed from pip and from github with same version (0.6.1) parse \"options: .. \" in different way:\nOptions:\n  --tag VALUELIST\nbecomes\n{ .. , '--tag': True, 'VALUELIST': [], ..} in github version\n{ .. , '--tag': [], ..} in pip version\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/180", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/180/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/180/events", "html_url": "https://github.com/docopt/docopt/issues/180", "id": 28168034, "node_id": "MDU6SXNzdWUyODE2ODAzNA==", "number": 180, "title": "Port versions", "user": {"login": "damiengiese", "id": 6772210, "node_id": "MDQ6VXNlcjY3NzIyMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6772210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damiengiese", "html_url": "https://github.com/damiengiese", "followers_url": "https://api.github.com/users/damiengiese/followers", "following_url": "https://api.github.com/users/damiengiese/following{/other_user}", "gists_url": "https://api.github.com/users/damiengiese/gists{/gist_id}", "starred_url": "https://api.github.com/users/damiengiese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damiengiese/subscriptions", "organizations_url": "https://api.github.com/users/damiengiese/orgs", "repos_url": "https://api.github.com/users/damiengiese/repos", "events_url": "https://api.github.com/users/damiengiese/events{/privacy}", "received_events_url": "https://api.github.com/users/damiengiese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-24T15:10:33Z", "updated_at": "2014-07-28T09:59:48Z", "closed_at": "2014-07-28T09:59:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, thanks to everyone involved in the docopt project(s). The first time I saw Vladimir's presentation, it really did make me smile. In fact, I liked it so much that I wanted to use docopt on all of my projects, so I'm working on a Java port. It's almost ready for release now, and I was wondering if there we any guidelines as to how ports should be versioned.\n\nI know that the reference implementation uses the [Semantic Versioning Specification](http://semver.org/), but many of the docopt ports either use a variant (e.g. 0.6.1.x) or don't seem to have an explicit version at all.\n\nMy first thought is that port versions should mirror the MAJOR and MINOR versions of the reference implementation that they were based on, since that is effectively the spec that we are implementing. So, my version 0.6.0 would be equivalent to the current version of the reference implementation (0.6.1), and the PATCH versions would vary independently as defects were fixed.\n\nDoes that sound reasonable?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/175", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/175/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/175/events", "html_url": "https://github.com/docopt/docopt/issues/175", "id": 26904761, "node_id": "MDU6SXNzdWUyNjkwNDc2MQ==", "number": 175, "title": "Automatic Validation", "user": {"login": "mahanmarwat", "id": 6587438, "node_id": "MDQ6VXNlcjY1ODc0Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6587438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahanmarwat", "html_url": "https://github.com/mahanmarwat", "followers_url": "https://api.github.com/users/mahanmarwat/followers", "following_url": "https://api.github.com/users/mahanmarwat/following{/other_user}", "gists_url": "https://api.github.com/users/mahanmarwat/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahanmarwat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahanmarwat/subscriptions", "organizations_url": "https://api.github.com/users/mahanmarwat/orgs", "repos_url": "https://api.github.com/users/mahanmarwat/repos", "events_url": "https://api.github.com/users/mahanmarwat/events{/privacy}", "received_events_url": "https://api.github.com/users/mahanmarwat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-04T18:40:10Z", "updated_at": "2015-02-24T11:15:58Z", "closed_at": "2015-02-24T11:15:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want automatic validation in docopt,  just like argparse do. (don't like to use schema)\nCould you add this thing in future version?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/167", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/167/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/167/events", "html_url": "https://github.com/docopt/docopt/issues/167", "id": 25282480, "node_id": "MDU6SXNzdWUyNTI4MjQ4MA==", "number": 167, "title": "Issue with ordering of options-with-values", "user": {"login": "matthew-page", "id": 6354488, "node_id": "MDQ6VXNlcjYzNTQ0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6354488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-page", "html_url": "https://github.com/matthew-page", "followers_url": "https://api.github.com/users/matthew-page/followers", "following_url": "https://api.github.com/users/matthew-page/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-page/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-page/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-page/subscriptions", "organizations_url": "https://api.github.com/users/matthew-page/orgs", "repos_url": "https://api.github.com/users/matthew-page/repos", "events_url": "https://api.github.com/users/matthew-page/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-page/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-09T00:46:00Z", "updated_at": "2014-01-10T16:25:37Z", "closed_at": "2014-01-10T16:25:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this a bug??  It seems that the order of the arguments matters :\n\n(note I've tried --title TITLE instead of --title <Title> etc but cant seem to get it to work...)\n\n``` python\n#!/usr/bin/env python\n\n\"\"\"\nUsage:\n   test.py create --title <Title> --component <Component> --ver <Ver> --description <Description>\n\nOptions:\n  --title <Title>               The title\n  --component <Component>       The name of the component\n  --ver <Ver>                   The version of the component\n  --description <Description>   The description\n\n\n\"\"\"\n\nimport os\nimport sys\n\nfrom docopt import docopt\n\nargs = docopt(__doc__,version='1.0')\nprint(args)\n```\n\nif I run it with the options in the exact order of the usage it works:\n\n```\n% test.py create --title t --component c --ver v --description d\n{'--component': True,\n '--description': True,\n '--title': True,\n '--ver': True,\n '<Component>': 'c',\n '<Description>': 'd',\n '<Title>': 't',\n '<Ver>': 'v',\n 'create': True}\n```\n\nBut if I move the --component c after the --ver v I get :\n\n```\n% test.py create --title t --ver v --component c --description d\n{'--component': True,\n '--description': True,\n '--title': True,\n '--ver': True,\n '<Component>': 'v',\n '<Description>': 'd',\n '<Title>': 't',\n '<Ver>': 'c',\n 'create': True}\n```\n\nAs you see the <Component> becomes 'v'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/165", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/165/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/165/events", "html_url": "https://github.com/docopt/docopt/issues/165", "id": 23770017, "node_id": "MDU6SXNzdWUyMzc3MDAxNw==", "number": 165, "title": "Support for non-posix prefix and delimiter chars", "user": {"login": "vladimir-kotikov", "id": 3857604, "node_id": "MDQ6VXNlcjM4NTc2MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3857604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimir-kotikov", "html_url": "https://github.com/vladimir-kotikov", "followers_url": "https://api.github.com/users/vladimir-kotikov/followers", "following_url": "https://api.github.com/users/vladimir-kotikov/following{/other_user}", "gists_url": "https://api.github.com/users/vladimir-kotikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimir-kotikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimir-kotikov/subscriptions", "organizations_url": "https://api.github.com/users/vladimir-kotikov/orgs", "repos_url": "https://api.github.com/users/vladimir-kotikov/repos", "events_url": "https://api.github.com/users/vladimir-kotikov/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimir-kotikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-05T07:02:21Z", "updated_at": "2015-03-23T19:10:33Z", "closed_at": "2015-03-23T19:10:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "docopt now supports only '-' and '--' prefixed arguments. But on Windows '/' prefix is more native. Also argument and its value can be delimited with ':' instead space or equals char.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/164", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/164/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/164/events", "html_url": "https://github.com/docopt/docopt/issues/164", "id": 22580598, "node_id": "MDU6SXNzdWUyMjU4MDU5OA==", "number": 164, "title": "order of optional arguments is getting mixed up", "user": {"login": "vaab", "id": 703255, "node_id": "MDQ6VXNlcjcwMzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/703255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaab", "html_url": "https://github.com/vaab", "followers_url": "https://api.github.com/users/vaab/followers", "following_url": "https://api.github.com/users/vaab/following{/other_user}", "gists_url": "https://api.github.com/users/vaab/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaab/subscriptions", "organizations_url": "https://api.github.com/users/vaab/orgs", "repos_url": "https://api.github.com/users/vaab/repos", "events_url": "https://api.github.com/users/vaab/events{/privacy}", "received_events_url": "https://api.github.com/users/vaab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-11-13T09:50:28Z", "updated_at": "2013-11-14T02:35:16Z", "closed_at": "2013-11-13T10:21:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm puzzled by the fact that both options gets mixed up when used in different order, is this normal ? If yes, a good explanation would be kind:\n\n```\ncat <<EOF > test.py\n#!/usr/bin/env python\n\"\"\"Foo\n\nUsage:\n  test [-s STAGE] [-p PROJECT]\n\n\"\"\"\n\ndef print_args(args):\n    for k, v in sorted(args.items()):\n        print \"%s: %s\" % (k, v)\n\nif __name__ == \"__main__\":\n    from docopt import docopt\n    print_args(docopt(__doc__))\nEOF\nchmod +x test.py\ndiff <(./test.py -p test -s xxxx) \\\n     <(./test.py -s xxxx -p test)\n```\n\nI'm expecting the last diff to output no differences, but I get:\n\n```\n3,4c3,4\n< PROJECT: xxxx\n< STAGE: test\n\n---\n> PROJECT: test\n> STAGE: xxxx\n```\n\nin the first call `./test.py -p test -s xxxx`, `PROJECT` receives the value of `-s` option and `STAGE` the value of the `-p`. I'm expecting the other way around obviously.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/162", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/162/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/162/events", "html_url": "https://github.com/docopt/docopt/issues/162", "id": 22211149, "node_id": "MDU6SXNzdWUyMjIxMTE0OQ==", "number": 162, "title": "Option multiple times", "user": {"login": "timofurrer", "id": 1008252, "node_id": "MDQ6VXNlcjEwMDgyNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1008252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timofurrer", "html_url": "https://github.com/timofurrer", "followers_url": "https://api.github.com/users/timofurrer/followers", "following_url": "https://api.github.com/users/timofurrer/following{/other_user}", "gists_url": "https://api.github.com/users/timofurrer/gists{/gist_id}", "starred_url": "https://api.github.com/users/timofurrer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timofurrer/subscriptions", "organizations_url": "https://api.github.com/users/timofurrer/orgs", "repos_url": "https://api.github.com/users/timofurrer/repos", "events_url": "https://api.github.com/users/timofurrer/events{/privacy}", "received_events_url": "https://api.github.com/users/timofurrer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-11-06T17:31:43Z", "updated_at": "2016-02-17T15:48:07Z", "closed_at": "2016-02-17T15:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to pass an option (key=value) multiple times?\n\nLike:\n\n```\ntool -g firsttime -g secondtime dsfgsdfg -g thirdtime\n```\n\nAs result I want to get something like:\n\n```\n{\"-g\": [\"firsttime\", \"secondtime\", \"thirdtime\" ]}\n```\n\nIs there a way?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/docopt/docopt/issues/161", "repository_url": "https://api.github.com/repos/docopt/docopt", "labels_url": "https://api.github.com/repos/docopt/docopt/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/docopt/docopt/issues/161/comments", "events_url": "https://api.github.com/repos/docopt/docopt/issues/161/events", "html_url": "https://github.com/docopt/docopt/issues/161", "id": 21629813, "node_id": "MDU6SXNzdWUyMTYyOTgxMw==", "number": 161, "title": "Stop parsing on -- by default, or at least an argument to docopt()", "user": {"login": "monsanto", "id": 247721, "node_id": "MDQ6VXNlcjI0NzcyMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/247721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monsanto", "html_url": "https://github.com/monsanto", "followers_url": "https://api.github.com/users/monsanto/followers", "following_url": "https://api.github.com/users/monsanto/following{/other_user}", "gists_url": "https://api.github.com/users/monsanto/gists{/gist_id}", "starred_url": "https://api.github.com/users/monsanto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monsanto/subscriptions", "organizations_url": "https://api.github.com/users/monsanto/orgs", "repos_url": "https://api.github.com/users/monsanto/repos", "events_url": "https://api.github.com/users/monsanto/events{/privacy}", "received_events_url": "https://api.github.com/users/monsanto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-10-26T07:59:37Z", "updated_at": "2015-03-18T02:26:32Z", "closed_at": "2015-03-18T02:26:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if you want to enable `--` to stop argument parsing, you have to include `[--]` in your docstring. I propose this is enabled by default, or failing that, there should be an argument to docopt() to enable `--` for all usage variants.\n\nI have two reasons for proposing this. For reference, I am developing a large command line tool. The first reason is that when you have a large number of usage variants, there is a lot for the user to take in on the help screen, and redundant `[--]` entries only add to the problem. My users just assume that my tool works like every other tool they've used, a hint that `--` is allowed doesn't add any useful information for them.\n\nThe other reason is that it's easy to forget to leave out a `[--]` on a particular usage variant, which leads to hard to track bugs. This happened to me, and because the script was being called by another program, it was hard to track down--thankfully random usage help screens in the error log clued me in to what was happening. Even if `--` isn't enabled by default, having an option to docopt() ensures that I am covered if I add another usage variant and forget to add `[--]`.\n\nAnd lets be fair, I use command line tools so often that `--` is second nature--I am not always conscious that it isn't a shell feature. It's easy to be off guard when adding usage variants, and the result is that your tool may completely stop working, which is a harsh penalty for such a minor mistake.\n", "performed_via_github_app": null, "score": 1.0}]}