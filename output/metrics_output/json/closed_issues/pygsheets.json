{"total_count": 266, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/431", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/431/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/431/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/431", "id": 652576211, "node_id": "MDU6SXNzdWU2NTI1NzYyMTE=", "number": 431, "title": "Newby question...", "user": {"login": "Woutvan", "id": 59477456, "node_id": "MDQ6VXNlcjU5NDc3NDU2", "avatar_url": "https://avatars3.githubusercontent.com/u/59477456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Woutvan", "html_url": "https://github.com/Woutvan", "followers_url": "https://api.github.com/users/Woutvan/followers", "following_url": "https://api.github.com/users/Woutvan/following{/other_user}", "gists_url": "https://api.github.com/users/Woutvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Woutvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Woutvan/subscriptions", "organizations_url": "https://api.github.com/users/Woutvan/orgs", "repos_url": "https://api.github.com/users/Woutvan/repos", "events_url": "https://api.github.com/users/Woutvan/events{/privacy}", "received_events_url": "https://api.github.com/users/Woutvan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T19:34:51Z", "updated_at": "2020-07-15T17:52:25Z", "closed_at": "2020-07-15T17:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI just started with Python and Pygsheets. I'm succesfully connected to Google Sheets and created a new worksheet.\r\nIn column A I have this:\r\nA1: Test1\r\nA2: Test2\r\nA3: Test3\r\n\r\nHow can I query Google sheets to get ALL values that are in Column A? Now it has 3 values, but it could also have 10 for example. In other words: can Pygsheets see how many rows that are not emtpy and give me the results back?\r\n\r\nI used this:\r\ncell_list = wks.get_col(1)\r\nprint (cell_list)\r\n\r\nBut I get this back:\r\n['Test1', 'Test2', 'Test3', '', '', '', '',.....................................]\r\n\r\nThanks and sorry for this beginner question...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/429", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/429/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/429/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/429", "id": 624421061, "node_id": "MDU6SXNzdWU2MjQ0MjEwNjE=", "number": 429, "title": "`Sheet.share` not working after Google sheets update", "user": {"login": "tsoernes", "id": 6782404, "node_id": "MDQ6VXNlcjY3ODI0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6782404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsoernes", "html_url": "https://github.com/tsoernes", "followers_url": "https://api.github.com/users/tsoernes/followers", "following_url": "https://api.github.com/users/tsoernes/following{/other_user}", "gists_url": "https://api.github.com/users/tsoernes/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsoernes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsoernes/subscriptions", "organizations_url": "https://api.github.com/users/tsoernes/orgs", "repos_url": "https://api.github.com/users/tsoernes/repos", "events_url": "https://api.github.com/users/tsoernes/events{/privacy}", "received_events_url": "https://api.github.com/users/tsoernes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-25T17:49:37Z", "updated_at": "2020-07-02T09:47:14Z", "closed_at": "2020-07-02T09:47:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nGoogle sheets recently updated their `share` popup menu. After that, `sht.share('', role='writer', type='anyone')` is not working anymore. It worked before google did their update.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ncode here ...\r\n# see error\r\n```\r\n\r\n**System Information**\r\n - OS: [e.g. iOS] Fedora \r\n - pygsheets version : 2.0.3\r\n - pygsheets installed from (github or pypi): pypi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/424", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/424/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/424/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/424", "id": 615688097, "node_id": "MDU6SXNzdWU2MTU2ODgwOTc=", "number": 424, "title": "'Worksheet' object has no attribute 'set_data_validation'", "user": {"login": "VlamV", "id": 4388013, "node_id": "MDQ6VXNlcjQzODgwMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4388013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VlamV", "html_url": "https://github.com/VlamV", "followers_url": "https://api.github.com/users/VlamV/followers", "following_url": "https://api.github.com/users/VlamV/following{/other_user}", "gists_url": "https://api.github.com/users/VlamV/gists{/gist_id}", "starred_url": "https://api.github.com/users/VlamV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VlamV/subscriptions", "organizations_url": "https://api.github.com/users/VlamV/orgs", "repos_url": "https://api.github.com/users/VlamV/repos", "events_url": "https://api.github.com/users/VlamV/events{/privacy}", "received_events_url": "https://api.github.com/users/VlamV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-11T08:22:43Z", "updated_at": "2020-05-14T12:34:56Z", "closed_at": "2020-05-14T12:33:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "installed pygsheets, version 2.0.3.1\r\nwhen executing the following command based on the Readme file\r\n```\r\nwks = gc.open(\"my_file\").sheet1\r\nwks.set_data_validation(start='F2', end='F2', condition_type='NUMBER_BETWEEN', condition_values=[2,10], strict=True, inputMessage=\"inut between 2 and 10\")\r\n```\r\nI'm getting the following error:\r\n`AttributeError: 'Worksheet' object has no attribute 'set_data_validation'\r\n`\r\nIs this a version issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/422", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/422/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/422/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/422", "id": 607716544, "node_id": "MDU6SXNzdWU2MDc3MTY1NDQ=", "number": 422, "title": "Retrying of POST.", "user": {"login": "EricPreventa", "id": 47377413, "node_id": "MDQ6VXNlcjQ3Mzc3NDEz", "avatar_url": "https://avatars1.githubusercontent.com/u/47377413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricPreventa", "html_url": "https://github.com/EricPreventa", "followers_url": "https://api.github.com/users/EricPreventa/followers", "following_url": "https://api.github.com/users/EricPreventa/following{/other_user}", "gists_url": "https://api.github.com/users/EricPreventa/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricPreventa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricPreventa/subscriptions", "organizations_url": "https://api.github.com/users/EricPreventa/orgs", "repos_url": "https://api.github.com/users/EricPreventa/repos", "events_url": "https://api.github.com/users/EricPreventa/events{/privacy}", "received_events_url": "https://api.github.com/users/EricPreventa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-27T17:19:38Z", "updated_at": "2020-05-04T05:47:20Z", "closed_at": "2020-05-04T05:47:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using latest version of pygsheets on Google's Cloud Function. Keep running into this at the exact same spot.\r\n\r\nAnything I can do to prevent it from happening?\r\n\r\nSleeping 0.41 seconds before retry 1 of 3 for request: POST https://sheets.googleapis.com/v4/spreadsheets/1fwdLSM2dbZO7KGCcNIgZSt_Cp--ohMjyL4guS6I-wRk:batchUpdate?fields=%2A&alt=json, after 429\r\n\r\nIt tries for 3 times, not sure if it's successful after the third or if it fails and moves on. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/421", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/421/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/421/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/421", "id": 599078179, "node_id": "MDU6SXNzdWU1OTkwNzgxNzk=", "number": 421, "title": "invalid_grant, Token has been expired or revoked.", "user": {"login": "richardARPANET", "id": 38049750, "node_id": "MDQ6VXNlcjM4MDQ5NzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/38049750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardARPANET", "html_url": "https://github.com/richardARPANET", "followers_url": "https://api.github.com/users/richardARPANET/followers", "following_url": "https://api.github.com/users/richardARPANET/following{/other_user}", "gists_url": "https://api.github.com/users/richardARPANET/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardARPANET/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardARPANET/subscriptions", "organizations_url": "https://api.github.com/users/richardARPANET/orgs", "repos_url": "https://api.github.com/users/richardARPANET/repos", "events_url": "https://api.github.com/users/richardARPANET/events{/privacy}", "received_events_url": "https://api.github.com/users/richardARPANET/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-13T19:14:58Z", "updated_at": "2020-05-01T05:38:46Z", "closed_at": "2020-05-01T05:38:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following code, which was fully working.\r\n\r\nclient_secret.json\r\n\r\n```\r\n{\r\n\t\"installed\": {\r\n\t\t\"client_id\": \"xxxxxxxxxxxxxxxxxx.apps.googleusercontent.com\",\r\n\t\t\"project_id\": \"xxx-1111\",\r\n\t\t\"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\r\n\t\t\"token_uri\": \"https://oauth2.googleapis.com/token\",\r\n\t\t\"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\r\n\t\t\"client_secret\": \"xxxxxxx\",\r\n\t\t\"redirect_uris\": [\"urn:ietf:wg:oauth:2.0:oob\", \"http://localhost\"]\r\n\t}\r\n}\r\n```\r\n\r\n```python\r\ngc = pygsheets.authorize('client_secret.json')\r\nspreadsheet = gc.open_by_url(url)\r\n```\r\n\r\nThen randomly, without any code changes, `gc.open_by_url(url)` starts raising with:\r\n\r\n```\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/pygsheets/sheet.py\", line 146, in get\r\n    return self._execute_requests(self.service.spreadsheets().get(spreadsheetId=spreadsheet_id, **kwargs))\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/pygsheets/sheet.py\", line 359, in _execute_requests\r\n    response = request.execute(num_retries=self.retries)\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/googleapiclient/_helpers.py\", line 130, in positional_wrapper\r\n    return wrapped(*args, **kwargs)\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/googleapiclient/http.py\", line 849, in execute\r\n    resp, content = _retry_request(\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/googleapiclient/http.py\", line 165, in _retry_request\r\n    resp, content = http.request(uri, method, *args, **kwargs)\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/google_auth_httplib2.py\", line 186, in request\r\n    self.credentials.before_request(\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/google/auth/credentials.py\", line 124, in before_request\r\n    self.refresh(request)\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/google/oauth2/credentials.py\", line 176, in refresh\r\n    access_token, refresh_token, expiry, grant_response = _client.refresh_grant(\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/google/oauth2/_client.py\", line 248, in refresh_grant\r\n    response_data = _token_endpoint_request(request, token_uri, body)\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/google/oauth2/_client.py\", line 124, in _token_endpoint_request\r\n    _handle_error_response(response_body)\r\n  File \"/home/mypc/.pyenv/versions/myapp/lib/python3.8/site-packages/google/oauth2/_client.py\", line 60, in _handle_error_response\r\n    raise exceptions.RefreshError(error_details, response_body)\r\ngoogle.auth.exceptions.RefreshError: ('invalid_grant: Token has been expired or revoked.', '{\\n  \"error\": \"invalid_grant\",\\n  \"error_description\": \"Token has been expired or revoked.\"\\n}')\r\n```\r\n\r\nI checked Google Console and I'm within all request limits.\r\n\r\nHas anyone else come across this before, and do you have a solution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/419", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/419/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/419/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/419", "id": 591697123, "node_id": "MDU6SXNzdWU1OTE2OTcxMjM=", "number": 419, "title": "Can't install package on anaconda", "user": {"login": "stikkie91", "id": 48942084, "node_id": "MDQ6VXNlcjQ4OTQyMDg0", "avatar_url": "https://avatars0.githubusercontent.com/u/48942084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stikkie91", "html_url": "https://github.com/stikkie91", "followers_url": "https://api.github.com/users/stikkie91/followers", "following_url": "https://api.github.com/users/stikkie91/following{/other_user}", "gists_url": "https://api.github.com/users/stikkie91/gists{/gist_id}", "starred_url": "https://api.github.com/users/stikkie91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stikkie91/subscriptions", "organizations_url": "https://api.github.com/users/stikkie91/orgs", "repos_url": "https://api.github.com/users/stikkie91/repos", "events_url": "https://api.github.com/users/stikkie91/events{/privacy}", "received_events_url": "https://api.github.com/users/stikkie91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-01T07:41:40Z", "updated_at": "2020-05-01T05:04:46Z", "closed_at": "2020-05-01T05:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI tried to install pygsheets in anaconda, this, unfortunately, doesn't work. \r\n\r\nI add the following line in conda run:\r\nconda install -c bjrn pygsheets\r\n\r\nthis gave me the following error:\r\n```\r\n(base) C:\\conda install -c bjrn pygsheets\r\ncollectiong package metadate (current_repodata.json):done\r\nsolving environment: failed with initial frozenn solve. retrying with flexible solve.\r\nsolving enviroment: failed with repodata from current_repodata.json, will retry with next repodata source.\r\ncollecting package metadata (repodata.json): done\r\nsolving environment: failed with initial frozen solve. retrying with flexible solve\r\nfound conflicts! Looking for incompatible packages\r\nthis can take several minutes. Press CTR-C to abort\r\nfailed\r\n\r\nUnstatisfiableError: The follwoing specifications were found to be incompatible with each oter:\r\n\r\nOutpunt in format: requested package -> Available versions\r\n```\r\n\r\nHow can i solve this? (Maybe a beginner's question? I've only just started programming)\r\n\r\nLooking forward to your respons.\r\n\r\nJeroen\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/418", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/418/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/418/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/418", "id": 591405568, "node_id": "MDU6SXNzdWU1OTE0MDU1Njg=", "number": 418, "title": "Can't update cell's text color - once more", "user": {"login": "Zgredomir", "id": 58642331, "node_id": "MDQ6VXNlcjU4NjQyMzMx", "avatar_url": "https://avatars0.githubusercontent.com/u/58642331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zgredomir", "html_url": "https://github.com/Zgredomir", "followers_url": "https://api.github.com/users/Zgredomir/followers", "following_url": "https://api.github.com/users/Zgredomir/following{/other_user}", "gists_url": "https://api.github.com/users/Zgredomir/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zgredomir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zgredomir/subscriptions", "organizations_url": "https://api.github.com/users/Zgredomir/orgs", "repos_url": "https://api.github.com/users/Zgredomir/repos", "events_url": "https://api.github.com/users/Zgredomir/events{/privacy}", "received_events_url": "https://api.github.com/users/Zgredomir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-31T20:32:07Z", "updated_at": "2020-05-01T07:44:17Z", "closed_at": "2020-05-01T07:44:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I read issue #158 but this solution doesn't work.\r\n\r\nAfter dumping cell to .json file I found a working one:\r\n\r\n```python\r\ntext_color = {'red': 1, 'green': 0, 'blue': 0}\r\ncell.text_format[\"foregroundColorStyle\"] = {\"rgbColor\": text_color}\r\ncell.update()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/413", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/413/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/413/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/413", "id": 574825017, "node_id": "MDU6SXNzdWU1NzQ4MjUwMTc=", "number": 413, "title": "value_render_option argument doesn't work in get_all_values", "user": {"login": "skister", "id": 1672351, "node_id": "MDQ6VXNlcjE2NzIzNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1672351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skister", "html_url": "https://github.com/skister", "followers_url": "https://api.github.com/users/skister/followers", "following_url": "https://api.github.com/users/skister/following{/other_user}", "gists_url": "https://api.github.com/users/skister/gists{/gist_id}", "starred_url": "https://api.github.com/users/skister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skister/subscriptions", "organizations_url": "https://api.github.com/users/skister/orgs", "repos_url": "https://api.github.com/users/skister/repos", "events_url": "https://api.github.com/users/skister/events{/privacy}", "received_events_url": "https://api.github.com/users/skister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-03T17:27:53Z", "updated_at": "2020-03-21T13:44:07Z", "closed_at": "2020-03-21T13:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "worksheet.get_all_values(include_tailing_empty=False, include_tailing_empty_rows=False, value_render_option=ValueRenderOption.UNFORMATTED_VALUE)\r\n\r\nFails with error:\r\nTypeError: get_range() got multiple values for keyword argument 'value_render_option'\r\n\r\nIt looks like the problem is get_values calls get_range with both value_render_option and **kwargs, which includes value_render_option. This diff seems to fix the issue, and it doesn't look like **kwargs is needed to be passed to get_range\r\n\r\n325a326\r\n>         value_render = kwargs.get('value_render_option', value_render)\r\n355c356\r\n<                                            date_time_render_option=date_time_render_option, **kwargs)\r\n---\r\n>                                            date_time_render_option=date_time_render_option)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/412", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/412/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/412/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/412", "id": 574300019, "node_id": "MDU6SXNzdWU1NzQzMDAwMTk=", "number": 412, "title": "pygsheets.authorize custom_credentials returns returns error", "user": {"login": "bark-frank", "id": 60886974, "node_id": "MDQ6VXNlcjYwODg2OTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/60886974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bark-frank", "html_url": "https://github.com/bark-frank", "followers_url": "https://api.github.com/users/bark-frank/followers", "following_url": "https://api.github.com/users/bark-frank/following{/other_user}", "gists_url": "https://api.github.com/users/bark-frank/gists{/gist_id}", "starred_url": "https://api.github.com/users/bark-frank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bark-frank/subscriptions", "organizations_url": "https://api.github.com/users/bark-frank/orgs", "repos_url": "https://api.github.com/users/bark-frank/repos", "events_url": "https://api.github.com/users/bark-frank/events{/privacy}", "received_events_url": "https://api.github.com/users/bark-frank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-02T22:50:40Z", "updated_at": "2020-03-21T13:44:43Z", "closed_at": "2020-03-21T13:44:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using a secrets service that outputs in json format and I don't want to write a file, so I thought \"custom_credentials\" would facilitate this, but it returns this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"pygsheets-test.py\", line 75, in <module>\r\n    sh = gc.open(title)\r\n  File \"/usr/local/lib/python3.7/site-packages/pygsheets/client.py\", line 120, in open\r\n    spreadsheet = list(filter(lambda x: x['name'] == title, self.drive.spreadsheet_metadata()))[0]\r\n  File \"/usr/local/lib/python3.7/site-packages/pygsheets/drive.py\", line 127, in spreadsheet_metadata\r\n    q=query)\r\n  File \"/usr/local/lib/python3.7/site-packages/pygsheets/drive.py\", line 85, in list\r\n    response = self._execute_request(self.service.files().list(**kwargs))\r\n  File \"/usr/local/lib/python3.7/site-packages/pygsheets/drive.py\", line 364, in _execute_request\r\n    return request.execute(num_retries=self.retries)\r\n  File \"/usr/local/lib/python3.7/site-packages/googleapiclient/_helpers.py\", line 130, in positional_wrapper\r\n    return wrapped(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/googleapiclient/http.py\", line 851, in execute\r\n    method=str(self.method), body=self.body, headers=self.headers)\r\n  File \"/usr/local/lib/python3.7/site-packages/googleapiclient/http.py\", line 165, in _retry_request\r\n    resp, content = http.request(uri, method, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/google_auth_httplib2.py\", line 186, in request\r\n    self.credentials.before_request(\r\nAttributeError: 'str' object has no attribute 'before_request'\r\n\r\nshell returned 1\r\n```\r\n\r\nMy auth code from [the auth page:](https://pygsheets.readthedocs.io/en/stable/authorization.html#custom-credentials-objects)\r\n`gc = pygsheets.authorize(custom_credentials=my_credentials)`\r\n\r\nI used a [work around found here](https://stackoverflow.com/questions/56817195/pygsheets-load-credentials-from-dict-instead-of-file), but now the problem is I'm writing temp files and even though I'm flushing them and they're disappearing afterwards, it's not the right (or secure) solution.\r\n\r\nIf \"custom_credentials\" is working as intended, I'm not sure how I can use it to create sheets and update cells.  Perhaps this needs to become a feature request for \"pygsheets.authorize\" to receive json output.\r\n\r\nThanks in advance for any help.\r\n\r\nI'm using pygsheets 2.0.3 stable and python 3.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/407", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/407/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/407/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/407", "id": 568913684, "node_id": "MDU6SXNzdWU1Njg5MTM2ODQ=", "number": 407, "title": "Apply Format To Range on Specific Property Only", "user": {"login": "yongks", "id": 8181675, "node_id": "MDQ6VXNlcjgxODE2NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8181675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongks", "html_url": "https://github.com/yongks", "followers_url": "https://api.github.com/users/yongks/followers", "following_url": "https://api.github.com/users/yongks/following{/other_user}", "gists_url": "https://api.github.com/users/yongks/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongks/subscriptions", "organizations_url": "https://api.github.com/users/yongks/orgs", "repos_url": "https://api.github.com/users/yongks/repos", "events_url": "https://api.github.com/users/yongks/events{/privacy}", "received_events_url": "https://api.github.com/users/yongks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-21T11:58:59Z", "updated_at": "2020-02-22T05:28:23Z", "closed_at": "2020-02-21T16:52:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to apply **only background color** and **text format** to a range. \r\n\r\nHowever, when I run the below commands, it overwrites destination border property of my destination range. Meaning my range original border are gone.\r\n\r\nI know there is a \"fields\" parameter to appy_format(), but I had tried with 'userEnteredFormat', 'effectiveFormat', all doesn't help. \r\n\r\n```\r\n        model_cell = pgs.Cell('A1')\r\n        model_cell.set_text_format('bold', True)\r\n        model_cell.color = 0.1\r\n        row_range = new_wks.range('A3:E3',returnas='range')\r\n        row_range.apply_format(model_cell, fields='effectiveFormat')\r\n```\r\n\r\nAny idea ? I'm currently using 2.0.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/404", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/404/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/404/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/404", "id": 567095806, "node_id": "MDU6SXNzdWU1NjcwOTU4MDY=", "number": 404, "title": "Filter Views", "user": {"login": "darren-martz", "id": 56855894, "node_id": "MDQ6VXNlcjU2ODU1ODk0", "avatar_url": "https://avatars3.githubusercontent.com/u/56855894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darren-martz", "html_url": "https://github.com/darren-martz", "followers_url": "https://api.github.com/users/darren-martz/followers", "following_url": "https://api.github.com/users/darren-martz/following{/other_user}", "gists_url": "https://api.github.com/users/darren-martz/gists{/gist_id}", "starred_url": "https://api.github.com/users/darren-martz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darren-martz/subscriptions", "organizations_url": "https://api.github.com/users/darren-martz/orgs", "repos_url": "https://api.github.com/users/darren-martz/repos", "events_url": "https://api.github.com/users/darren-martz/events{/privacy}", "received_events_url": "https://api.github.com/users/darren-martz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T19:03:16Z", "updated_at": "2020-05-01T15:07:06Z", "closed_at": "2020-05-01T15:07:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I clear and create a filter view? The google api name for clearing is \"clearBasicFilter\" but I'm not sure how to make that call with pygsheets. There is also a call for \"AddFilterViewRequest\" to create a view. Can you provide some guidance on how to make those calls?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/403", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/403/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/403/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/403", "id": 567041341, "node_id": "MDU6SXNzdWU1NjcwNDEzNDE=", "number": 403, "title": "Discussion: \"Integer Indexes start from 1\" changes with 2.0.3", "user": {"login": "yanissi", "id": 48299705, "node_id": "MDQ6VXNlcjQ4Mjk5NzA1", "avatar_url": "https://avatars1.githubusercontent.com/u/48299705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanissi", "html_url": "https://github.com/yanissi", "followers_url": "https://api.github.com/users/yanissi/followers", "following_url": "https://api.github.com/users/yanissi/following{/other_user}", "gists_url": "https://api.github.com/users/yanissi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanissi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanissi/subscriptions", "organizations_url": "https://api.github.com/users/yanissi/orgs", "repos_url": "https://api.github.com/users/yanissi/repos", "events_url": "https://api.github.com/users/yanissi/events{/privacy}", "received_events_url": "https://api.github.com/users/yanissi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-18T17:18:23Z", "updated_at": "2020-03-21T13:52:51Z", "closed_at": "2020-03-21T13:52:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\r\n\r\nI just wanted to have a conversation about a new feature that has been implemented in Pygsheets v2.0.3 .\r\n\r\nI've been using Pygsheets religiously for the past year or so and have built numerous scripts that are dependent on this library.\r\n\r\nWhen looking for libraries to update this morning, I noticed a 2.0.3 update to my 2.0.0 installation. Without looking at the changelog and just at the version number, it is fair to assume that this update would only be bug fixes and not a major disruption in the library's behaviour, right? Well, I was wrong.\r\n\r\nIt took me a while to figure that the problem was not coming from my code or from my spreadsheets but that the inherent way that Pygsheets counts rows and columns has been completely changed.\r\n\r\nIn Python, querying the content of a list starts with the number 0. Everything we count in programming starts with the number 0. But with 2.0.3, this whole concept has been thrown out of the window and it has been decided that \"Integer Indexes start from 1\" now.\r\n\r\nI do not mean to complain about a change. I am coming here to discuss the decision and understand why this path has been chosen and also to understand the reasoning behind the version naming convention here. This change in the behaviour of the library is **massive** and **will break** any script that has been written with the 2.0.0 version of this library. Anyone that is querying rows and columns and extracting values using integers will be impacted by this update, effectively offsetting all results by 1.\r\n\r\nAnyway, as I said, I would love to start the conversation and understand more about this choice. in the meantime, I will unfortunately not upgrade my library and stay with 2.0.0 as it looks like it's the latest stable version I can use with the plethora of scripts I've already written.\r\n\r\nThank you for your time,\r\n\r\nYaniss", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/401", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/401/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/401/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/401", "id": 565158703, "node_id": "MDU6SXNzdWU1NjUxNTg3MDM=", "number": 401, "title": "Is there a way to set 'seconds_per_quota' parameter ", "user": {"login": "yongks", "id": 8181675, "node_id": "MDQ6VXNlcjgxODE2NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8181675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongks", "html_url": "https://github.com/yongks", "followers_url": "https://api.github.com/users/yongks/followers", "following_url": "https://api.github.com/users/yongks/following{/other_user}", "gists_url": "https://api.github.com/users/yongks/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongks/subscriptions", "organizations_url": "https://api.github.com/users/yongks/orgs", "repos_url": "https://api.github.com/users/yongks/repos", "events_url": "https://api.github.com/users/yongks/events{/privacy}", "received_events_url": "https://api.github.com/users/yongks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-14T07:42:20Z", "updated_at": "2020-02-15T14:51:46Z", "closed_at": "2020-02-14T21:59:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nGreat work on pygsheet, it is really useful to me.\r\n\r\nI know that pygsheets keep track of the APi call internally and 'sleep' and retry when default quote of 100 read/write per 100s quota is reached. \r\n\r\nI had recently increased my sheet API quota. Is there a way to tell pygsheet to use the new quota parameter. I come to know about helper class \"pygsheets.sheet.SheetAPIWrapper()\" with parameter seconds_per_quota=100. \r\n\r\nIs there a way to make use of this ?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/399", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/399/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/399/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/399", "id": 564257621, "node_id": "MDU6SXNzdWU1NjQyNTc2MjE=", "number": 399, "title": "Worksheet order scrambled with csv export", "user": {"login": "demersn", "id": 28030815, "node_id": "MDQ6VXNlcjI4MDMwODE1", "avatar_url": "https://avatars1.githubusercontent.com/u/28030815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demersn", "html_url": "https://github.com/demersn", "followers_url": "https://api.github.com/users/demersn/followers", "following_url": "https://api.github.com/users/demersn/following{/other_user}", "gists_url": "https://api.github.com/users/demersn/gists{/gist_id}", "starred_url": "https://api.github.com/users/demersn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demersn/subscriptions", "organizations_url": "https://api.github.com/users/demersn/orgs", "repos_url": "https://api.github.com/users/demersn/repos", "events_url": "https://api.github.com/users/demersn/events{/privacy}", "received_events_url": "https://api.github.com/users/demersn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518697, "node_id": "MDU6TGFiZWwzODg1MTg2OTc=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-12T20:40:40Z", "updated_at": "2020-02-14T22:16:08Z", "closed_at": "2020-02-14T22:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "As titled, the worksheet tabs get scrambled when using csv export (or sheet title, but I doubt it).\r\n\r\nHere is a bit of the code used:\r\n\r\n```\r\ngs = pygsheets.authorize(service_account_file='credentials.json')\r\nfilenames = gs.spreadsheet_titles()\r\n\r\ndef download_file(filename):\r\n    gs = pygsheets.authorize(service_account_file='credentials.json')\r\n    ws = gs.open(filename)\r\n    ws.export(pygsheets.ExportType.CSV, filename='{}_P'.format(filename))\r\n```\r\n\r\n**System Information**\r\n - OS: Windows\r\n - pygsheets version : 2.0.2\r\n - pygsheets installed from PIP", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/398", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/398/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/398/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/398", "id": 563901072, "node_id": "MDU6SXNzdWU1NjM5MDEwNzI=", "number": 398, "title": "Is it possible to include Checkbox and Dropdown List?", "user": {"login": "tanlin2013", "id": 24889824, "node_id": "MDQ6VXNlcjI0ODg5ODI0", "avatar_url": "https://avatars2.githubusercontent.com/u/24889824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanlin2013", "html_url": "https://github.com/tanlin2013", "followers_url": "https://api.github.com/users/tanlin2013/followers", "following_url": "https://api.github.com/users/tanlin2013/following{/other_user}", "gists_url": "https://api.github.com/users/tanlin2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanlin2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanlin2013/subscriptions", "organizations_url": "https://api.github.com/users/tanlin2013/orgs", "repos_url": "https://api.github.com/users/tanlin2013/repos", "events_url": "https://api.github.com/users/tanlin2013/events{/privacy}", "received_events_url": "https://api.github.com/users/tanlin2013/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 529626271, "node_id": "MDU6TGFiZWw1Mjk2MjYyNzE=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/feature", "name": "feature", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-12T10:29:21Z", "updated_at": "2020-05-05T02:32:05Z", "closed_at": "2020-05-01T14:42:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Developers,\r\n\r\nI really like this library with well organized and intuitive conceptual models. They save me huge amounts of time without going through API!\r\n\r\nAs said in the title, I wonder it is also possible to include CheckBox, Dropdown List or even other features in Data -> Data validation -> Criteria (the dropdown option in sheet)? That will be greatly appreciate to many end users!\r\n\r\nbest,\r\ntao\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/397", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/397/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/397/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/397", "id": 561094017, "node_id": "MDU6SXNzdWU1NjEwOTQwMTc=", "number": 397, "title": "Pandas 1.0 now issues a FutureWarning using .set_dataframe()", "user": {"login": "ldsalomone", "id": 7832023, "node_id": "MDQ6VXNlcjc4MzIwMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7832023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldsalomone", "html_url": "https://github.com/ldsalomone", "followers_url": "https://api.github.com/users/ldsalomone/followers", "following_url": "https://api.github.com/users/ldsalomone/following{/other_user}", "gists_url": "https://api.github.com/users/ldsalomone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldsalomone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldsalomone/subscriptions", "organizations_url": "https://api.github.com/users/ldsalomone/orgs", "repos_url": "https://api.github.com/users/ldsalomone/repos", "events_url": "https://api.github.com/users/ldsalomone/events{/privacy}", "received_events_url": "https://api.github.com/users/ldsalomone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-06T15:39:21Z", "updated_at": "2020-02-14T22:45:30Z", "closed_at": "2020-02-14T22:45:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting the error below when using `.set_dataframe()`:\r\n\r\n> c:\\users\\~\\appdata\\local\\continuum\\anaconda3\\lib\\site-packages\\pygsheets\\worksheet.py:1256: FutureWarning:\r\n>\r\n>The pandas.np module is deprecated and will be removed from pandas in a future version. Import numpy directly instead\r\n\r\nI think this line: `df = df.replace(pd.np.nan, nan)` is all that needs to be fixed. \r\n\r\nHappy to submit a PR myself to address if necessary. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/396", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/396/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/396/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/396", "id": 560789216, "node_id": "MDU6SXNzdWU1NjA3ODkyMTY=", "number": 396, "title": "Can I disable or change log level from pygsheets", "user": {"login": "edwardinubuntu", "id": 414554, "node_id": "MDQ6VXNlcjQxNDU1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/414554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwardinubuntu", "html_url": "https://github.com/edwardinubuntu", "followers_url": "https://api.github.com/users/edwardinubuntu/followers", "following_url": "https://api.github.com/users/edwardinubuntu/following{/other_user}", "gists_url": "https://api.github.com/users/edwardinubuntu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwardinubuntu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwardinubuntu/subscriptions", "organizations_url": "https://api.github.com/users/edwardinubuntu/orgs", "repos_url": "https://api.github.com/users/edwardinubuntu/repos", "events_url": "https://api.github.com/users/edwardinubuntu/events{/privacy}", "received_events_url": "https://api.github.com/users/edwardinubuntu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T05:30:56Z", "updated_at": "2020-02-14T21:47:01Z", "closed_at": "2020-02-14T21:47:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can pygsheets turn off log level or not out print to the console?\r\n\r\nI saw lots of cell info print from pygsheets:\r\n'>, <Cell BH234 ''>, <Cell BI234 ''>, <Cell BJ234 ''>, <Cell BK234 ''>, <Cell BL234 ''>, <Cell BM234 ''>, <Cell BN234 ''>, <Cell BO234 ''>, \r\n\r\nIt's quite hard for me to debug my project when using logging.debug, info or error. Thanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/394", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/394/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/394/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/394", "id": 549076968, "node_id": "MDU6SXNzdWU1NDkwNzY5Njg=", "number": 394, "title": "Cant set horizontal alignment", "user": {"login": "mking275", "id": 5865408, "node_id": "MDQ6VXNlcjU4NjU0MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5865408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mking275", "html_url": "https://github.com/mking275", "followers_url": "https://api.github.com/users/mking275/followers", "following_url": "https://api.github.com/users/mking275/following{/other_user}", "gists_url": "https://api.github.com/users/mking275/gists{/gist_id}", "starred_url": "https://api.github.com/users/mking275/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mking275/subscriptions", "organizations_url": "https://api.github.com/users/mking275/orgs", "repos_url": "https://api.github.com/users/mking275/repos", "events_url": "https://api.github.com/users/mking275/events{/privacy}", "received_events_url": "https://api.github.com/users/mking275/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541424767, "node_id": "MDU6TGFiZWw1NDE0MjQ3Njc=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/update%20docs", "name": "update docs", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T17:29:50Z", "updated_at": "2020-02-14T21:36:35Z", "closed_at": "2020-02-14T21:36:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs seem to have a circular definition, that assumes the reader knows what legit values of \"HorizontalAlignment\" are... however; \"Left\", \"LEFT\", \"Center\", \"CENTER\" etc all raise exceptions.\r\n\r\nCan anyone tell me what is actually meant by 'HorizontalAlignment' in the following code? An actual example of a valid value, instead of yet another circular definition would be greatly appreciated.\r\n\r\n```\r\n  def horizontal_alignment(self, value):\r\n        if isinstance(value, HorizontalAlignment):\r\n            self._horizontal_alignment = value\r\n            self.update()\r\n        else:\r\n            raise InvalidArgumentValue('Use HorizontalAlignment for setting the horizontal alignment.')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/393", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/393/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/393/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/393", "id": 545329000, "node_id": "MDU6SXNzdWU1NDUzMjkwMDA=", "number": 393, "title": "Verbose print out from pygsheets.Workshseet.find()", "user": {"login": "jayarerita", "id": 34201284, "node_id": "MDQ6VXNlcjM0MjAxMjg0", "avatar_url": "https://avatars1.githubusercontent.com/u/34201284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayarerita", "html_url": "https://github.com/jayarerita", "followers_url": "https://api.github.com/users/jayarerita/followers", "following_url": "https://api.github.com/users/jayarerita/following{/other_user}", "gists_url": "https://api.github.com/users/jayarerita/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayarerita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayarerita/subscriptions", "organizations_url": "https://api.github.com/users/jayarerita/orgs", "repos_url": "https://api.github.com/users/jayarerita/repos", "events_url": "https://api.github.com/users/jayarerita/events{/privacy}", "received_events_url": "https://api.github.com/users/jayarerita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-04T20:28:17Z", "updated_at": "2020-01-07T14:42:44Z", "closed_at": "2020-01-07T12:45:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the find() method in the pygsheets.Workhseet class it seems to print the entire worksheet to the terminal along with the list of resulting cells. \r\n\r\nI have managed to silence this action by commenting out the `print(found_cells)` found on line 1069 in the pygsheets.worksheet.py file.\r\n\r\nI am not sure if others are experiencing this same behaviour.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/392", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/392/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/392/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/392", "id": 544922079, "node_id": "MDU6SXNzdWU1NDQ5MjIwNzk=", "number": 392, "title": "AttributeError when trying to rename a spreadsheet", "user": {"login": "karaluh", "id": 28653846, "node_id": "MDQ6VXNlcjI4NjUzODQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/28653846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karaluh", "html_url": "https://github.com/karaluh", "followers_url": "https://api.github.com/users/karaluh/followers", "following_url": "https://api.github.com/users/karaluh/following{/other_user}", "gists_url": "https://api.github.com/users/karaluh/gists{/gist_id}", "starred_url": "https://api.github.com/users/karaluh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karaluh/subscriptions", "organizations_url": "https://api.github.com/users/karaluh/orgs", "repos_url": "https://api.github.com/users/karaluh/repos", "events_url": "https://api.github.com/users/karaluh/events{/privacy}", "received_events_url": "https://api.github.com/users/karaluh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 529626271, "node_id": "MDU6TGFiZWw1Mjk2MjYyNzE=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/feature", "name": "feature", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-03T09:49:17Z", "updated_at": "2020-02-14T21:12:48Z", "closed_at": "2020-02-14T21:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to rename a spreadsheet\r\n`googleCloud.open_by_key(spreadsheetKey).title = 'test'`\r\n\r\nI get\r\n`AttributeError: can't set attribute`\r\n\r\nI'm under the impression that this used to work. Did Google change something?\r\n\r\n**System Information**\r\n - OS: Linux\r\n - pygsheets version : 2.0.2\r\n - pygsheets installed from (github or pypi): github\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/390", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/390/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/390/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/390", "id": 542897955, "node_id": "MDU6SXNzdWU1NDI4OTc5NTU=", "number": 390, "title": "Have to enter authorization code on each usage?", "user": {"login": "tsoernes", "id": 6782404, "node_id": "MDQ6VXNlcjY3ODI0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6782404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsoernes", "html_url": "https://github.com/tsoernes", "followers_url": "https://api.github.com/users/tsoernes/followers", "following_url": "https://api.github.com/users/tsoernes/following{/other_user}", "gists_url": "https://api.github.com/users/tsoernes/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsoernes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsoernes/subscriptions", "organizations_url": "https://api.github.com/users/tsoernes/orgs", "repos_url": "https://api.github.com/users/tsoernes/repos", "events_url": "https://api.github.com/users/tsoernes/events{/privacy}", "received_events_url": "https://api.github.com/users/tsoernes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-27T14:47:42Z", "updated_at": "2020-01-07T12:38:40Z", "closed_at": "2020-01-07T12:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this normal? Every time I use pygsheets I've got to go online and copy/paste the auth code. Any way to make it so that I only have to do it once?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/389", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/389/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/389/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/389", "id": 541155364, "node_id": "MDU6SXNzdWU1NDExNTUzNjQ=", "number": 389, "title": "Error when trying to grab cell value in a row greater than row 33 (or row index 34)", "user": {"login": "whoisheath", "id": 35548666, "node_id": "MDQ6VXNlcjM1NTQ4NjY2", "avatar_url": "https://avatars0.githubusercontent.com/u/35548666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whoisheath", "html_url": "https://github.com/whoisheath", "followers_url": "https://api.github.com/users/whoisheath/followers", "following_url": "https://api.github.com/users/whoisheath/following{/other_user}", "gists_url": "https://api.github.com/users/whoisheath/gists{/gist_id}", "starred_url": "https://api.github.com/users/whoisheath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whoisheath/subscriptions", "organizations_url": "https://api.github.com/users/whoisheath/orgs", "repos_url": "https://api.github.com/users/whoisheath/repos", "events_url": "https://api.github.com/users/whoisheath/events{/privacy}", "received_events_url": "https://api.github.com/users/whoisheath/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 553277238, "node_id": "MDU6TGFiZWw1NTMyNzcyMzg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/cant%20reproduce", "name": "cant reproduce", "color": "ed8863", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-20T19:14:16Z", "updated_at": "2020-02-14T21:23:32Z", "closed_at": "2020-02-14T21:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nConnecting to and getting data from the gsheet works great, but I am unable to access any specific cell by coordinate in a row greater than row 33 (or row index of 34). \r\n\r\nlooping through all 1000 rows of the sheet works fine. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nwb = gc.open('My Spreadsheet')\r\n\r\nsheet = wb[0]\r\n\r\nprint(sheet[34][2]) # this prints the cell value\r\nprint(sheet[35][2]) # error\r\n\r\n# see error\r\n\r\nTraceback (most recent call last):\r\n  File \"script.py\", line 26, in <module>\r\n    print(sheet[35][2]) \r\n  File \"C:\\Users\\Heath\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pygsheets\\worksheet.py\", line 1483, in __getitem__\r\n    raise CellNotFound\r\npygsheets.exceptions.CellNotFound\r\n\r\n```\r\n\r\n**System Information**\r\n - OS: Windows\r\n - pygsheets version : 2.0.2\r\n - pygsheets installed from (github or pypi): pypi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/388", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/388/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/388/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/388", "id": 537037005, "node_id": "MDU6SXNzdWU1MzcwMzcwMDU=", "number": 388, "title": "how to create a hyperlink for a cell?", "user": {"login": "debu99", "id": 25805758, "node_id": "MDQ6VXNlcjI1ODA1NzU4", "avatar_url": "https://avatars1.githubusercontent.com/u/25805758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debu99", "html_url": "https://github.com/debu99", "followers_url": "https://api.github.com/users/debu99/followers", "following_url": "https://api.github.com/users/debu99/following{/other_user}", "gists_url": "https://api.github.com/users/debu99/gists{/gist_id}", "starred_url": "https://api.github.com/users/debu99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debu99/subscriptions", "organizations_url": "https://api.github.com/users/debu99/orgs", "repos_url": "https://api.github.com/users/debu99/repos", "events_url": "https://api.github.com/users/debu99/events{/privacy}", "received_events_url": "https://api.github.com/users/debu99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-12T15:10:19Z", "updated_at": "2020-02-14T15:14:34Z", "closed_at": "2020-02-14T15:14:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find it on documents", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/387", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/387/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/387/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/387", "id": 529358988, "node_id": "MDU6SXNzdWU1MjkzNTg5ODg=", "number": 387, "title": "template parameter in create() attribute not doing anything", "user": {"login": "you-say-that", "id": 57487993, "node_id": "MDQ6VXNlcjU3NDg3OTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/57487993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/you-say-that", "html_url": "https://github.com/you-say-that", "followers_url": "https://api.github.com/users/you-say-that/followers", "following_url": "https://api.github.com/users/you-say-that/following{/other_user}", "gists_url": "https://api.github.com/users/you-say-that/gists{/gist_id}", "starred_url": "https://api.github.com/users/you-say-that/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/you-say-that/subscriptions", "organizations_url": "https://api.github.com/users/you-say-that/orgs", "repos_url": "https://api.github.com/users/you-say-that/repos", "events_url": "https://api.github.com/users/you-say-that/events{/privacy}", "received_events_url": "https://api.github.com/users/you-say-that/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-27T13:51:08Z", "updated_at": "2020-02-14T22:10:43Z", "closed_at": "2020-02-14T22:10:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\nWhen creating a new Googlesheet object, using the create attribute, the result is the same when an argument is passed to the template parameter as if there is no argument passed.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior (in Google Colab):\r\n```python\r\nfrom google.colab import auth\r\nauth.authenticate_user()\r\nfrom googleapiclient.discovery import build\r\nsheets_service = build('sheets', 'v4')\r\ndrive_service = build('drive', 'v3')\r\n\r\n#Install necessary packages into session\r\n!pip install --upgrade --quiet pygsheets\r\n\r\nsheet_template = (sheets_service.spreadsheets()\r\n                    .get(spreadsheetId = 'somesheetid')\r\n                    .execute())\r\n\r\nsh = gc.create('Some Googlesheet',\r\n                template = sheet_template))\r\n\r\n#This produces a Googlesheet without fail, but with the formatting and content \r\n#from the template file not present\r\n```\r\n\r\n**System Information**\r\n - OS: Windows\r\n - pygsheets version : 2.0.2\r\n - pygsheets installed from pypi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/386", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/386/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/386/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/386", "id": 529277789, "node_id": "MDU6SXNzdWU1MjkyNzc3ODk=", "number": 386, "title": "HttpError 400 when trying to write a note", "user": {"login": "nittolese", "id": 25707285, "node_id": "MDQ6VXNlcjI1NzA3Mjg1", "avatar_url": "https://avatars1.githubusercontent.com/u/25707285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nittolese", "html_url": "https://github.com/nittolese", "followers_url": "https://api.github.com/users/nittolese/followers", "following_url": "https://api.github.com/users/nittolese/following{/other_user}", "gists_url": "https://api.github.com/users/nittolese/gists{/gist_id}", "starred_url": "https://api.github.com/users/nittolese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nittolese/subscriptions", "organizations_url": "https://api.github.com/users/nittolese/orgs", "repos_url": "https://api.github.com/users/nittolese/repos", "events_url": "https://api.github.com/users/nittolese/events{/privacy}", "received_events_url": "https://api.github.com/users/nittolese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 839080041, "node_id": "MDU6TGFiZWw4MzkwODAwNDE=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/unconfirmed%20bug", "name": "unconfirmed bug", "color": "FC5E5E", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-27T11:09:38Z", "updated_at": "2020-02-14T22:18:20Z", "closed_at": "2020-02-14T22:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\nI'm trying to add a note with pygsheets but I'm getting this error:\r\n\r\n```\r\nHttpError: <HttpError 400 when requesting https://sheets.googleapis.com/v4/spreadsheets/1zuwtE8kKIGhkYiiBujja84mBdF6sP8WaEhyG1x7Le-4:batchUpdate?fields=%2A&alt=json returned \"Invalid requests[0].repeatCell: No grid with id: 0\">\r\n\r\n```\r\n\r\nHere is my code\r\n\r\n```python\r\nwks = sh[0]\r\nf3 = wks.cell('F3') \r\n\r\nf3.value # I can see the value\r\nf3.note # I can see the note if I add it manually on browser\r\n\r\n#but trying to write a note on a cell I keep geeting HttpError\r\nf3.note = 'test'\r\n\r\n```\r\n\r\nAny advice to overcome this issue?\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/385", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/385/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/385/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/385", "id": 521277181, "node_id": "MDU6SXNzdWU1MjEyNzcxODE=", "number": 385, "title": "Deploying in google cloud functions", "user": {"login": "mtzirkel", "id": 16643754, "node_id": "MDQ6VXNlcjE2NjQzNzU0", "avatar_url": "https://avatars1.githubusercontent.com/u/16643754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtzirkel", "html_url": "https://github.com/mtzirkel", "followers_url": "https://api.github.com/users/mtzirkel/followers", "following_url": "https://api.github.com/users/mtzirkel/following{/other_user}", "gists_url": "https://api.github.com/users/mtzirkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtzirkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtzirkel/subscriptions", "organizations_url": "https://api.github.com/users/mtzirkel/orgs", "repos_url": "https://api.github.com/users/mtzirkel/repos", "events_url": "https://api.github.com/users/mtzirkel/events{/privacy}", "received_events_url": "https://api.github.com/users/mtzirkel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-11-12T01:34:33Z", "updated_at": "2020-03-02T17:41:18Z", "closed_at": "2020-02-14T21:28:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the following error when trying to set up a google cloud function. I am passing an oauth and from my understanding pygsheets is trying to store some temp authorization data on a read only \"bucket\". Any suggestions of how to work around this? Seems similar but not exactly the same as issue number [227](https://github.com/nithinmurali/pygsheets/issues/277)\r\n\r\nError message:\r\nOSError: [Errno 30] Read-only file system: 'sheets.googleapis.com-python.json'\r\n\r\nThank you much in advance. This package has been wonderful to use for the past two years", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/383", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/383/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/383/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/383", "id": 504743066, "node_id": "MDU6SXNzdWU1MDQ3NDMwNjY=", "number": 383, "title": "AttributeError: 'Worksheet' object has no attribute 'set_dataframe'", "user": {"login": "momomozhang", "id": 40863475, "node_id": "MDQ6VXNlcjQwODYzNDc1", "avatar_url": "https://avatars1.githubusercontent.com/u/40863475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/momomozhang", "html_url": "https://github.com/momomozhang", "followers_url": "https://api.github.com/users/momomozhang/followers", "following_url": "https://api.github.com/users/momomozhang/following{/other_user}", "gists_url": "https://api.github.com/users/momomozhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/momomozhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/momomozhang/subscriptions", "organizations_url": "https://api.github.com/users/momomozhang/orgs", "repos_url": "https://api.github.com/users/momomozhang/repos", "events_url": "https://api.github.com/users/momomozhang/events{/privacy}", "received_events_url": "https://api.github.com/users/momomozhang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 553218718, "node_id": "MDU6TGFiZWw1NTMyMTg3MTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/Info%20needed", "name": "Info needed", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T15:55:40Z", "updated_at": "2019-10-21T07:49:17Z", "closed_at": "2019-10-21T07:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey \r\n\r\nwhen I call wks.set_dataframe(df,(1,1)), I constantly get the above error.\r\n\r\npygsheets==2.0.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/382", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/382/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/382/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/382", "id": 504112392, "node_id": "MDU6SXNzdWU1MDQxMTIzOTI=", "number": 382, "title": "A/O October 3rd  spreadsheet.share emailMessage not sending emails out?", "user": {"login": "devin-moonrise", "id": 51677994, "node_id": "MDQ6VXNlcjUxNjc3OTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/51677994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devin-moonrise", "html_url": "https://github.com/devin-moonrise", "followers_url": "https://api.github.com/users/devin-moonrise/followers", "following_url": "https://api.github.com/users/devin-moonrise/following{/other_user}", "gists_url": "https://api.github.com/users/devin-moonrise/gists{/gist_id}", "starred_url": "https://api.github.com/users/devin-moonrise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devin-moonrise/subscriptions", "organizations_url": "https://api.github.com/users/devin-moonrise/orgs", "repos_url": "https://api.github.com/users/devin-moonrise/repos", "events_url": "https://api.github.com/users/devin-moonrise/events{/privacy}", "received_events_url": "https://api.github.com/users/devin-moonrise/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-10-08T15:22:15Z", "updated_at": "2019-10-31T15:09:35Z", "closed_at": "2019-10-10T13:08:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nthe emailMessage argument to spreadsheet.share(...) stopped sending emails out for me on October 3rd. Tested a couple different things (new sheets, edited sheets, etc) and no dice.\r\n\r\nActual sharing behavior working fine.\r\n\r\n**System Information**\r\n - OS: [e.g. iOS]: AWS/Linux.\r\n - pygsheets version : 2.0.2\r\n - pygsheets installed from (github or pypi): pypi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/379", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/379/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/379/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/379", "id": 502473115, "node_id": "MDU6SXNzdWU1MDI0NzMxMTU=", "number": 379, "title": "Add support for reading and setting protected range description", "user": {"login": "karaluh", "id": 28653846, "node_id": "MDQ6VXNlcjI4NjUzODQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/28653846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karaluh", "html_url": "https://github.com/karaluh", "followers_url": "https://api.github.com/users/karaluh/followers", "following_url": "https://api.github.com/users/karaluh/following{/other_user}", "gists_url": "https://api.github.com/users/karaluh/gists{/gist_id}", "starred_url": "https://api.github.com/users/karaluh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karaluh/subscriptions", "organizations_url": "https://api.github.com/users/karaluh/orgs", "repos_url": "https://api.github.com/users/karaluh/repos", "events_url": "https://api.github.com/users/karaluh/events{/privacy}", "received_events_url": "https://api.github.com/users/karaluh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 529626271, "node_id": "MDU6TGFiZWw1Mjk2MjYyNzE=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/feature", "name": "feature", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-04T07:19:01Z", "updated_at": "2019-10-10T13:00:44Z", "closed_at": "2019-10-10T13:00:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to modify a specific protected range. In Google Script I am able to easily distinguish it by description. pygsheets lacks support for this, although Sheets API supports it:\r\nhttps://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/sheets#ProtectedRange\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/378", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/378/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/378/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/378", "id": 499338921, "node_id": "MDU6SXNzdWU0OTkzMzg5MjE=", "number": 378, "title": "Add support to protect an entire worksheet", "user": {"login": "karaluh", "id": 28653846, "node_id": "MDQ6VXNlcjI4NjUzODQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/28653846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karaluh", "html_url": "https://github.com/karaluh", "followers_url": "https://api.github.com/users/karaluh/followers", "following_url": "https://api.github.com/users/karaluh/following{/other_user}", "gists_url": "https://api.github.com/users/karaluh/gists{/gist_id}", "starred_url": "https://api.github.com/users/karaluh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karaluh/subscriptions", "organizations_url": "https://api.github.com/users/karaluh/orgs", "repos_url": "https://api.github.com/users/karaluh/repos", "events_url": "https://api.github.com/users/karaluh/events{/privacy}", "received_events_url": "https://api.github.com/users/karaluh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 529626271, "node_id": "MDU6TGFiZWw1Mjk2MjYyNzE=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/feature", "name": "feature", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-27T09:30:05Z", "updated_at": "2019-10-10T13:00:44Z", "closed_at": "2019-10-10T13:00:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is an option in Google Sheets to protect an entire worksheet. From the protected range API documentation:\r\nhttps://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/sheets\r\n> The range that is being protected. The range may be fully unbounded, in which case this is considered a protected sheet.\r\n\r\n**Why is this needed?**\r\nGoogle threats sheets protected this way differently. There is a padlock icon displayed for such sheets and it's impossible to move those around (change sheet order) if you don't have edit permissions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/376", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/376/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/376/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/376", "id": 496711476, "node_id": "MDU6SXNzdWU0OTY3MTE0NzY=", "number": 376, "title": "Clear all values in DataRange", "user": {"login": "ddow", "id": 2965284, "node_id": "MDQ6VXNlcjI5NjUyODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2965284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddow", "html_url": "https://github.com/ddow", "followers_url": "https://api.github.com/users/ddow/followers", "following_url": "https://api.github.com/users/ddow/following{/other_user}", "gists_url": "https://api.github.com/users/ddow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddow/subscriptions", "organizations_url": "https://api.github.com/users/ddow/orgs", "repos_url": "https://api.github.com/users/ddow/repos", "events_url": "https://api.github.com/users/ddow/events{/privacy}", "received_events_url": "https://api.github.com/users/ddow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-21T23:07:44Z", "updated_at": "2019-09-22T09:51:20Z", "closed_at": "2019-09-22T09:40:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. What's the most efficient way to clear all values in a DataRange? I have this code:\r\n\r\n`        error_range = self.gsheet.sheet.get_values(start, end, returnas=\"range\")\r\n        model_cell = pygsheets.Cell(\"A1\")\r\n        model_cell.color = self.gsheet.error_color(False)\r\n        error_range.apply_format(model_cell)\r\n        error_range.clear()\r\n        `\r\nBut that doesn't work. I also tried:\r\n\r\n`error_range.update_values(\"\")`\r\n\r\nBut that also didn't work. Any help would be appreciated! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/374", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/374/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/374/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/374", "id": 494611554, "node_id": "MDU6SXNzdWU0OTQ2MTE1NTQ=", "number": 374, "title": "Is there a way to get the row and column numbers of the cell?", "user": {"login": "claudiamaximus", "id": 55325877, "node_id": "MDQ6VXNlcjU1MzI1ODc3", "avatar_url": "https://avatars0.githubusercontent.com/u/55325877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claudiamaximus", "html_url": "https://github.com/claudiamaximus", "followers_url": "https://api.github.com/users/claudiamaximus/followers", "following_url": "https://api.github.com/users/claudiamaximus/following{/other_user}", "gists_url": "https://api.github.com/users/claudiamaximus/gists{/gist_id}", "starred_url": "https://api.github.com/users/claudiamaximus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claudiamaximus/subscriptions", "organizations_url": "https://api.github.com/users/claudiamaximus/orgs", "repos_url": "https://api.github.com/users/claudiamaximus/repos", "events_url": "https://api.github.com/users/claudiamaximus/events{/privacy}", "received_events_url": "https://api.github.com/users/claudiamaximus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-17T13:04:57Z", "updated_at": "2019-09-17T15:15:39Z", "closed_at": "2019-09-17T15:15:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Something like `cell.row` and `cell.column` like gspread. The `find` method returns a cell object but there is no documented way to get the row or column value. Or am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/372", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/372/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/372/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/372", "id": 491740471, "node_id": "MDU6SXNzdWU0OTE3NDA0NzE=", "number": 372, "title": "Accessing anything but sheet 1 for export shuffles that sheet to the front and requires write access", "user": {"login": "nyetwurk", "id": 1088639, "node_id": "MDQ6VXNlcjEwODg2Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1088639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyetwurk", "html_url": "https://github.com/nyetwurk", "followers_url": "https://api.github.com/users/nyetwurk/followers", "following_url": "https://api.github.com/users/nyetwurk/following{/other_user}", "gists_url": "https://api.github.com/users/nyetwurk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyetwurk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyetwurk/subscriptions", "organizations_url": "https://api.github.com/users/nyetwurk/orgs", "repos_url": "https://api.github.com/users/nyetwurk/repos", "events_url": "https://api.github.com/users/nyetwurk/events{/privacy}", "received_events_url": "https://api.github.com/users/nyetwurk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 839080041, "node_id": "MDU6TGFiZWw4MzkwODAwNDE=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/unconfirmed%20bug", "name": "unconfirmed bug", "color": "FC5E5E", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-10T15:19:08Z", "updated_at": "2019-09-20T14:57:05Z", "closed_at": "2019-09-20T07:20:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Accessing anything but sheet 1 for export shuffles that sheet to the front and requires write access\r\n\r\nsh[0].export() works fine, but sh[1].export() will move the second sheet into the first sheet position. It also will fail if the account does not have write access.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/369", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/369/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/369/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/369", "id": 481332495, "node_id": "MDU6SXNzdWU0ODEzMzI0OTU=", "number": 369, "title": "Implement chainable setters", "user": {"login": "robert-cassidy-uci", "id": 12298626, "node_id": "MDQ6VXNlcjEyMjk4NjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/12298626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robert-cassidy-uci", "html_url": "https://github.com/robert-cassidy-uci", "followers_url": "https://api.github.com/users/robert-cassidy-uci/followers", "following_url": "https://api.github.com/users/robert-cassidy-uci/following{/other_user}", "gists_url": "https://api.github.com/users/robert-cassidy-uci/gists{/gist_id}", "starred_url": "https://api.github.com/users/robert-cassidy-uci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robert-cassidy-uci/subscriptions", "organizations_url": "https://api.github.com/users/robert-cassidy-uci/orgs", "repos_url": "https://api.github.com/users/robert-cassidy-uci/repos", "events_url": "https://api.github.com/users/robert-cassidy-uci/events{/privacy}", "received_events_url": "https://api.github.com/users/robert-cassidy-uci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 529626271, "node_id": "MDU6TGFiZWw1Mjk2MjYyNzE=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/feature", "name": "feature", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-15T20:49:15Z", "updated_at": "2019-09-20T07:40:26Z", "closed_at": "2019-09-20T07:40:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen formatting a cell, the set_number_format, set_text_format methods for setting attributes are handy because they are chainable. But horizontal_alignment, vertical_alignment, etc. are not. \r\n\r\n**Describe the solution you'd like**\r\nIt would help code flow if they were consistently implemented using a set_horizontal_alignment(HorizontalAlignment) that returned Cell \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/368", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/368/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/368/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/368", "id": 481330035, "node_id": "MDU6SXNzdWU0ODEzMzAwMzU=", "number": 368, "title": "worksheet.adjust_column_width misleading or incorrect", "user": {"login": "robert-cassidy-uci", "id": 12298626, "node_id": "MDQ6VXNlcjEyMjk4NjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/12298626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robert-cassidy-uci", "html_url": "https://github.com/robert-cassidy-uci", "followers_url": "https://api.github.com/users/robert-cassidy-uci/followers", "following_url": "https://api.github.com/users/robert-cassidy-uci/following{/other_user}", "gists_url": "https://api.github.com/users/robert-cassidy-uci/gists{/gist_id}", "starred_url": "https://api.github.com/users/robert-cassidy-uci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robert-cassidy-uci/subscriptions", "organizations_url": "https://api.github.com/users/robert-cassidy-uci/orgs", "repos_url": "https://api.github.com/users/robert-cassidy-uci/repos", "events_url": "https://api.github.com/users/robert-cassidy-uci/events{/privacy}", "received_events_url": "https://api.github.com/users/robert-cassidy-uci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1503398186, "node_id": "MDU6TGFiZWwxNTAzMzk4MTg2", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/breaking", "name": "breaking", "color": "d81c00", "default": false, "description": "this is a breaking change"}, {"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-15T20:42:50Z", "updated_at": "2019-08-16T06:41:04Z", "closed_at": "2019-08-16T05:53:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nadjust_column_width describes the end parameter as\r\n        :param end:         Index of the last column to be widened.\r\nThe code shows that the end is actually the first column after the last column to be widened:\r\n\r\n```\r\nif end is None or end <= start:\r\n            end = start + 1\r\n```\r\n\r\nSo to widen a single column, either\r\n```sheet.adjust_column_width(1, pixel_size=100)``` or\r\n```sheet.adjust_column_width(1, 1, 100)```\r\n\r\nis actually the same as \r\n```sheet.adjust_column_width(1, 2, 100)```\r\n\r\nSo to do a range of columns - say the first 3, you need\r\n```sheet.adjust_column_width(1, 4, 100)```\r\n\r\nwhich doesn't match the documentation. At a minimum the documentation needs to be clarified, but it's also non-intuitive. Instead I suggest fixing the code so it matches the documentation, or using a (start, length, pixel_size) approach so that changing columns 10-13 would be:\r\n```sheet.adjust_column_width(10, 4, 100)```\r\n\r\n**To Reproduce**\r\nAny call to adjust_column_width acting on multiple columns.\r\n\r\n**System Information**\r\n - MacOS 10.14.5\r\n - pygsheets version : 2.0.2\r\n - pygsheets installed from (github or pypi): via pip3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/367", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/367/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/367/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/367", "id": 481326903, "node_id": "MDU6SXNzdWU0ODEzMjY5MDM=", "number": 367, "title": "HorizontalAlignment, VerticalAlignment enums not imported", "user": {"login": "robert-cassidy-uci", "id": 12298626, "node_id": "MDQ6VXNlcjEyMjk4NjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/12298626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robert-cassidy-uci", "html_url": "https://github.com/robert-cassidy-uci", "followers_url": "https://api.github.com/users/robert-cassidy-uci/followers", "following_url": "https://api.github.com/users/robert-cassidy-uci/following{/other_user}", "gists_url": "https://api.github.com/users/robert-cassidy-uci/gists{/gist_id}", "starred_url": "https://api.github.com/users/robert-cassidy-uci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robert-cassidy-uci/subscriptions", "organizations_url": "https://api.github.com/users/robert-cassidy-uci/orgs", "repos_url": "https://api.github.com/users/robert-cassidy-uci/repos", "events_url": "https://api.github.com/users/robert-cassidy-uci/events{/privacy}", "received_events_url": "https://api.github.com/users/robert-cassidy-uci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-15T20:34:35Z", "updated_at": "2019-08-16T05:53:23Z", "closed_at": "2019-08-16T05:53:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\npygsheets does not automatically import HorizontalAlignment, VerticalAlignment enums. As a result, Cell.horizontal_alignment, vertical_alignment setters can't be used. Can import manually, though and it works. \r\n\r\n**To Reproduce**\r\n```\r\nimport pygsheets\r\n\r\ncell = pygsheets.Cell(\"A1\", worksheet = sheet)\r\ncell.horizontal_alignment = pygsheets.HorizontalAlignment.CENTER\r\n\r\n# see error\r\nAttributeError: module 'pygsheets' has no attribute 'HorizontalAlignment'\r\n```\r\n\r\n**System Information**\r\n - MacOS 10.14.5\r\n - pygsheets version : 2.0.2\r\n - pygsheets installed from (github or pypi): via pip3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/366", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/366/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/366/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/366", "id": 479352494, "node_id": "MDU6SXNzdWU0NzkzNTI0OTQ=", "number": 366, "title": "Text format alignment problem", "user": {"login": "mandy331", "id": 33720290, "node_id": "MDQ6VXNlcjMzNzIwMjkw", "avatar_url": "https://avatars3.githubusercontent.com/u/33720290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mandy331", "html_url": "https://github.com/mandy331", "followers_url": "https://api.github.com/users/mandy331/followers", "following_url": "https://api.github.com/users/mandy331/following{/other_user}", "gists_url": "https://api.github.com/users/mandy331/gists{/gist_id}", "starred_url": "https://api.github.com/users/mandy331/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mandy331/subscriptions", "organizations_url": "https://api.github.com/users/mandy331/orgs", "repos_url": "https://api.github.com/users/mandy331/repos", "events_url": "https://api.github.com/users/mandy331/events{/privacy}", "received_events_url": "https://api.github.com/users/mandy331/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541424767, "node_id": "MDU6TGFiZWw1NDE0MjQ3Njc=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/update%20docs", "name": "update docs", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-11T09:50:09Z", "updated_at": "2019-12-07T07:56:11Z", "closed_at": "2019-08-14T07:43:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm frustrated about text format problem. I want to change text format alignment to be in  center, but I have tried any times and failed. Is there any way to fix this problem? Thank you very much!\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/33720290/62832414-0fd4d700-bc60-11e9-9f56-50f5d704745d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/365", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/365/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/365/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/365", "id": 479308405, "node_id": "MDU6SXNzdWU0NzkzMDg0MDU=", "number": 365, "title": "get_as_df() results in index errors", "user": {"login": "rchardb", "id": 16693719, "node_id": "MDQ6VXNlcjE2NjkzNzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/16693719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchardb", "html_url": "https://github.com/rchardb", "followers_url": "https://api.github.com/users/rchardb/followers", "following_url": "https://api.github.com/users/rchardb/following{/other_user}", "gists_url": "https://api.github.com/users/rchardb/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchardb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchardb/subscriptions", "organizations_url": "https://api.github.com/users/rchardb/orgs", "repos_url": "https://api.github.com/users/rchardb/repos", "events_url": "https://api.github.com/users/rchardb/events{/privacy}", "received_events_url": "https://api.github.com/users/rchardb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 553218718, "node_id": "MDU6TGFiZWw1NTMyMTg3MTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/Info%20needed", "name": "Info needed", "color": "e99695", "default": false, "description": null}, {"id": 553277238, "node_id": "MDU6TGFiZWw1NTMyNzcyMzg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/cant%20reproduce", "name": "cant reproduce", "color": "ed8863", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-10T21:36:04Z", "updated_at": "2019-08-13T19:58:04Z", "closed_at": "2019-08-13T19:58:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nloading pandas dataframe from gsheets using pygsheets results in an error when processing the dataframe, the issue does not occur with an export of gsheets to csv and load nor does it occur if the dataframe generated from get_as_df() is written to csv and then reloaded.\r\n\r\nIn either case, visually the dataframe appears identical.\r\n\r\n\r\n\r\n**To Reproduce**\r\n\r\ncode here ...\r\nnormalMaster = matrix_pricing.worksheet_by_title('Regular')\r\nmatrix_df = normalMaster.get_as_df()\r\nmatrix_df.set_index(['Rarity','Price'], inplace=True)\r\n\r\n results in \r\nKeyError: (0, 'occurred at index 1')\r\n\r\nloading from csv exported directly from gsheets or using pygsheets to load dataframe from gsheets, saving and reloading works around the error:\r\n\r\nnormalMaster = matrix_pricing.worksheet_by_title('Regular')\r\nmatrix_df = normalMaster.get_as_df()\r\nmatrix_df.to_csv('temp.csv',index=False)\r\nmatrix_df = pd.read_csv('temp.csv')\r\n\r\n**System Information**\r\n - OS: Windows 10\r\n - pygsheets version : 2.02\r\n - pygsheets installed from (github or pypi): pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/363", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/363/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/363/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/363", "id": 466426201, "node_id": "MDU6SXNzdWU0NjY0MjYyMDE=", "number": 363, "title": "Documentation bug: direct cell format assignment", "user": {"login": "DreadPirateShawn", "id": 1418951, "node_id": "MDQ6VXNlcjE0MTg5NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1418951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DreadPirateShawn", "html_url": "https://github.com/DreadPirateShawn", "followers_url": "https://api.github.com/users/DreadPirateShawn/followers", "following_url": "https://api.github.com/users/DreadPirateShawn/following{/other_user}", "gists_url": "https://api.github.com/users/DreadPirateShawn/gists{/gist_id}", "starred_url": "https://api.github.com/users/DreadPirateShawn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DreadPirateShawn/subscriptions", "organizations_url": "https://api.github.com/users/DreadPirateShawn/orgs", "repos_url": "https://api.github.com/users/DreadPirateShawn/repos", "events_url": "https://api.github.com/users/DreadPirateShawn/events{/privacy}", "received_events_url": "https://api.github.com/users/DreadPirateShawn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-10T17:17:27Z", "updated_at": "2019-07-26T19:51:14Z", "closed_at": "2019-07-26T19:51:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nThe main README.md includes this example:\r\n```\r\nmodel_cell = Cell('A1')\r\nmodel_cell.color = (1.0,0,1.0,1.0) # rose color cell\r\nmodel_cell.format = pygsheets.FormatType.PERCENT\r\n # Setting format to multiple cells in one go\r\nrng.apply_format(model_cell)  # will make all cell in this range rose color and percent format\r\n```\r\nHowever, this code triggers the following error:\r\n```\r\nTraceback (most recent call last):\r\n...\r\n  File \"/highland/jira-to-sheets/venv/local/lib/python2.7/site-packages/pygsheets/datarange.py\", line 228, in apply_format\r\n    \"cell\": cell.get_json(),\r\n  File \"/highland/jira-to-sheets/venv/local/lib/python2.7/site-packages/pygsheets/cell.py\", line 465, in get_json\r\n    if self.format[0] is not None:\r\nTypeError: 'FormatType' object does not support indexing\r\n```\r\nThe problem is that the cell object's `.format` property is a tuple of (FormatType, pattern) -- not just FormatType.\r\n\r\nReference code from `cell.py`:\r\n```\r\n    def set_number_format(self, format_type, pattern=''):\r\n        ...\r\n        self.format = (format_type, pattern)\r\n        self.update()\r\n        return self\r\n```\r\n\r\n**To Reproduce**\r\nSee above.\r\n\r\n**Expected Fix**\r\nProbably just update the README.md to change\r\n```\r\nmodel_cell.format = pygsheets.FormatType.PERCENT\r\n```\r\nto\r\n```\r\nmodel_cell.set_number_format(pygsheets.FormatType.PERCENT)\r\n```\r\n\r\n**System Information**\r\n - OS: `Ubuntu 16.04 LTS`\r\n - pygsheets version: `pygsheets==2.0.1`\r\n - pygsheets installed from (github or pypi): `pypi`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/362", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/362/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/362/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/362", "id": 462473892, "node_id": "MDU6SXNzdWU0NjI0NzM4OTI=", "number": 362, "title": "Service Account Request Limit Uncatchable", "user": {"login": "samamorgan", "id": 356814, "node_id": "MDQ6VXNlcjM1NjgxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/356814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samamorgan", "html_url": "https://github.com/samamorgan", "followers_url": "https://api.github.com/users/samamorgan/followers", "following_url": "https://api.github.com/users/samamorgan/following{/other_user}", "gists_url": "https://api.github.com/users/samamorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/samamorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samamorgan/subscriptions", "organizations_url": "https://api.github.com/users/samamorgan/orgs", "repos_url": "https://api.github.com/users/samamorgan/repos", "events_url": "https://api.github.com/users/samamorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/samamorgan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-01T01:39:04Z", "updated_at": "2019-07-26T19:52:57Z", "closed_at": "2019-07-26T19:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of version 2, HttpError thrown by the Google API Client are caught by the Sheets wrapper object and handled with a timeout. In my opinion, this is poor behavior.\r\n\r\nI'd prefer that this error be passed up so it can be caught and handled by the executor. This would allow me to, for example, fail over to a different credential when a request limit is hit.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/361", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/361/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/361/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/361", "id": 460714007, "node_id": "MDU6SXNzdWU0NjA3MTQwMDc=", "number": 361, "title": "Worksheet insert_rows error", "user": {"login": "pantuts", "id": 894185, "node_id": "MDQ6VXNlcjg5NDE4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/894185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pantuts", "html_url": "https://github.com/pantuts", "followers_url": "https://api.github.com/users/pantuts/followers", "following_url": "https://api.github.com/users/pantuts/following{/other_user}", "gists_url": "https://api.github.com/users/pantuts/gists{/gist_id}", "starred_url": "https://api.github.com/users/pantuts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pantuts/subscriptions", "organizations_url": "https://api.github.com/users/pantuts/orgs", "repos_url": "https://api.github.com/users/pantuts/repos", "events_url": "https://api.github.com/users/pantuts/events{/privacy}", "received_events_url": "https://api.github.com/users/pantuts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-26T01:18:15Z", "updated_at": "2019-06-26T01:44:02Z", "closed_at": "2019-06-26T01:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nInserting rows seems to not work.\r\n\r\n**To Reproduce**\r\n```\r\nworksheet.insert_rows(1, values=[1,2,3,4,5,6,7])\r\n# see error\r\ngoogleapiclient.errors.HttpError: <HttpError 400 when requesting https://sheets.googleapis.com/v4/spreadsheets/CUT_HASH:batchUpdate?fields=%2A&alt=json returned \"Invalid requests[0].insertDimension: DimensionRange indexes must be >= 0\">\r\n```\r\n\r\n**System Information**\r\n - OS: macOS mojave\r\n - pygsheets version : 2.0.1\r\n - pygsheets installed from (github or pypi): pypi\r\n\r\nEDIT: working, my error only.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/360", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/360/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/360/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/360", "id": 460005112, "node_id": "MDU6SXNzdWU0NjAwMDUxMTI=", "number": 360, "title": "Exception when creating a new Spreadhseet from template", "user": {"login": "gabrieljenik", "id": 4942495, "node_id": "MDQ6VXNlcjQ5NDI0OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4942495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrieljenik", "html_url": "https://github.com/gabrieljenik", "followers_url": "https://api.github.com/users/gabrieljenik/followers", "following_url": "https://api.github.com/users/gabrieljenik/following{/other_user}", "gists_url": "https://api.github.com/users/gabrieljenik/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrieljenik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrieljenik/subscriptions", "organizations_url": "https://api.github.com/users/gabrieljenik/orgs", "repos_url": "https://api.github.com/users/gabrieljenik/repos", "events_url": "https://api.github.com/users/gabrieljenik/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrieljenik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-24T17:18:17Z", "updated_at": "2019-07-26T19:52:58Z", "closed_at": "2019-07-26T19:52:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I try to create a new spreadsheet from an existing one, I get this error:\r\n\r\nHttpError: <HttpError 400 when requesting https://sheets.googleapis.com/v4/spreadsheets?alt=json returned \"Invalid spreadsheet.spreadsheetId: This user did not create this id.\">\r\n\r\nAs far as I debugged, the error is because the create method signature needs a spreadhseet instance, while the method implementation forards the object to the sheet object, which I guess expectes a sheet object", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/359", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/359/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/359/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/359", "id": 459668344, "node_id": "MDU6SXNzdWU0NTk2NjgzNDQ=", "number": 359, "title": "Search by Column", "user": {"login": "pantuts", "id": 894185, "node_id": "MDQ6VXNlcjg5NDE4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/894185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pantuts", "html_url": "https://github.com/pantuts", "followers_url": "https://api.github.com/users/pantuts/followers", "following_url": "https://api.github.com/users/pantuts/following{/other_user}", "gists_url": "https://api.github.com/users/pantuts/gists{/gist_id}", "starred_url": "https://api.github.com/users/pantuts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pantuts/subscriptions", "organizations_url": "https://api.github.com/users/pantuts/orgs", "repos_url": "https://api.github.com/users/pantuts/repos", "events_url": "https://api.github.com/users/pantuts/events{/privacy}", "received_events_url": "https://api.github.com/users/pantuts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 529626271, "node_id": "MDU6TGFiZWw1Mjk2MjYyNzE=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/feature", "name": "feature", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nithinmurali/pygsheets/milestones/5", "html_url": "https://github.com/nithinmurali/pygsheets/milestone/5", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/milestones/5/labels", "id": 4439115, "node_id": "MDk6TWlsZXN0b25lNDQzOTExNQ==", "number": 5, "title": "2.0.2", "description": "", "creator": {"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2019-06-25T09:58:36Z", "updated_at": "2019-08-28T06:31:26Z", "due_on": null, "closed_at": "2019-08-28T06:31:26Z"}, "comments": 3, "created_at": "2019-06-24T03:18:56Z", "updated_at": "2019-07-26T19:52:58Z", "closed_at": "2019-07-26T19:52:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can't find the api that will allow me to search by column. Is there a current implementation on this or a plan for this kind of searching? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/358", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/358/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/358/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/358", "id": 458896870, "node_id": "MDU6SXNzdWU0NTg4OTY4NzA=", "number": 358, "title": "Key error when updating cell color and FG color set on text ", "user": {"login": "ddow", "id": 2965284, "node_id": "MDQ6VXNlcjI5NjUyODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2965284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddow", "html_url": "https://github.com/ddow", "followers_url": "https://api.github.com/users/ddow/followers", "following_url": "https://api.github.com/users/ddow/following{/other_user}", "gists_url": "https://api.github.com/users/ddow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddow/subscriptions", "organizations_url": "https://api.github.com/users/ddow/orgs", "repos_url": "https://api.github.com/users/ddow/repos", "events_url": "https://api.github.com/users/ddow/events{/privacy}", "received_events_url": "https://api.github.com/users/ddow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-20T21:41:15Z", "updated_at": "2019-06-24T05:04:30Z", "closed_at": "2019-06-24T05:04:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nIt appears under certain conditions, if you have set a FG text color that a key error results when you try to set the cell color.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior: foregroundColor is set in textFormat:\r\n\r\n`<class 'dict'>: {'red': 0.26666668, 'green': 0.32941177, 'blue': 0.41568628}`\r\n\r\nRelevant code is in cell.py\r\n`if self.text_format is not None:\r\n     ret_json[\"userEnteredFormat\"][\"textFormat\"] = self.text_format\r\n     fg = ret_json[\"userEnteredFormat\"][\"textFormat\"].get('foregroundColor', None)\r\n         if fg:\r\n             ret_json[\"userEnteredFormat\"][\"textFormat\"]['foregroundColor'] = {\"red\": fg[0], \"green\": fg[1],\r\n                                                                                  \"blue\": fg[2], \"alpha\": fg[3]}`\r\n\r\nThis code tries to grab values like from a list from the fg object. However, the fg object is a dict:\r\n\r\n`<class 'dict'>: {'red': 0.26666668, 'green': 0.32941177, 'blue': 0.41568628}`\r\n\r\nAlso, there are only three values and the code above is looking for an alpha value where there is none.\r\n\r\n**System Information**\r\n - OS: OS X 10.14.5\r\n - pygsheets version : 2.0.1\r\n - pygsheets installed from (github or pypi): Pypi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/357", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/357/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/357/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/357", "id": 457628089, "node_id": "MDU6SXNzdWU0NTc2MjgwODk=", "number": 357, "title": "Question: Is there a way to find cell address based on condition", "user": {"login": "Adityammv", "id": 16084094, "node_id": "MDQ6VXNlcjE2MDg0MDk0", "avatar_url": "https://avatars2.githubusercontent.com/u/16084094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adityammv", "html_url": "https://github.com/Adityammv", "followers_url": "https://api.github.com/users/Adityammv/followers", "following_url": "https://api.github.com/users/Adityammv/following{/other_user}", "gists_url": "https://api.github.com/users/Adityammv/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adityammv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adityammv/subscriptions", "organizations_url": "https://api.github.com/users/Adityammv/orgs", "repos_url": "https://api.github.com/users/Adityammv/repos", "events_url": "https://api.github.com/users/Adityammv/events{/privacy}", "received_events_url": "https://api.github.com/users/Adityammv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-18T18:21:35Z", "updated_at": "2019-07-26T18:52:08Z", "closed_at": "2019-07-26T18:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a column which has number 1 only for one record. Is there a way to get address of cell adjacent to this cell? Is it possible using pygsheets api?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/354", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/354/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/354/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/354", "id": 453760340, "node_id": "MDU6SXNzdWU0NTM3NjAzNDA=", "number": 354, "title": "There is a typing error in get_as_df(), index_colum -> index_column", "user": {"login": "Lahongkkito", "id": 49118263, "node_id": "MDQ6VXNlcjQ5MTE4MjYz", "avatar_url": "https://avatars2.githubusercontent.com/u/49118263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lahongkkito", "html_url": "https://github.com/Lahongkkito", "followers_url": "https://api.github.com/users/Lahongkkito/followers", "following_url": "https://api.github.com/users/Lahongkkito/following{/other_user}", "gists_url": "https://api.github.com/users/Lahongkkito/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lahongkkito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lahongkkito/subscriptions", "organizations_url": "https://api.github.com/users/Lahongkkito/orgs", "repos_url": "https://api.github.com/users/Lahongkkito/repos", "events_url": "https://api.github.com/users/Lahongkkito/events{/privacy}", "received_events_url": "https://api.github.com/users/Lahongkkito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-08T05:56:07Z", "updated_at": "2019-06-08T06:14:57Z", "closed_at": "2019-06-08T06:14:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I'm a beginner of python, M.J from South Korea. \r\nWhen I using pyg, I found a misspelt word in get_as_df function. \r\nI think \"index_colum\" should be \"index_column\".\r\nIt isn't a big problem, if someone who uses this parameter with declaratively, it could \r\ntake some confusion.\r\nThank you :)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/353", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/353/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/353/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/353", "id": 453708470, "node_id": "MDU6SXNzdWU0NTM3MDg0NzA=", "number": 353, "title": "How to have bolded headers, but non-bolded cells - filled with worksheet.append_table of pygsheets==2.0.1", "user": {"login": "rbarakjsonar", "id": 33938469, "node_id": "MDQ6VXNlcjMzOTM4NDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/33938469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbarakjsonar", "html_url": "https://github.com/rbarakjsonar", "followers_url": "https://api.github.com/users/rbarakjsonar/followers", "following_url": "https://api.github.com/users/rbarakjsonar/following{/other_user}", "gists_url": "https://api.github.com/users/rbarakjsonar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbarakjsonar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbarakjsonar/subscriptions", "organizations_url": "https://api.github.com/users/rbarakjsonar/orgs", "repos_url": "https://api.github.com/users/rbarakjsonar/repos", "events_url": "https://api.github.com/users/rbarakjsonar/events{/privacy}", "received_events_url": "https://api.github.com/users/rbarakjsonar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-07T21:56:33Z", "updated_at": "2019-06-08T03:19:52Z", "closed_at": "2019-06-08T03:19:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The python3 (pygsheets 2.0.1) script below will bold all the cells starting at A2.\r\nIs there an easy way (i.e., in one command) to ask for all these cells not to be bolded?\r\n\r\n### Code:\r\n\r\n```\r\nimport boto3, botocore\r\nimport datetime\r\nimport json\r\nimport pygsheets\r\n\r\ncurrentDT = str(datetime.datetime.now())\r\n\r\ndef create_spreadsheet(outh_file, spreadsheet_name = \"jSonar AWS usage\"):\r\n    client = pygsheets.authorize(outh_file=outh_file, outh_nonlocal=True)\r\n    spread_sheet = client.create(spreadsheet_name)\r\n    return spread_sheet\r\n\r\n\r\ndef get_regions():\r\n    region = \"us-west-1\"\r\n    regions = dict()\r\n\r\n    ec2 = boto3.client(\"ec2\", region_name=region)\r\n    ec2_responses = ec2.describe_regions()\r\n\r\n    ssm_client = boto3.client('ssm', region_name=region)\r\n    for resp in ec2_responses['Regions']:\r\n        region_id = resp['RegionName']\r\n        tmp = '/aws/service/global-infrastructure/regions/%s/longName' % region_id\r\n        ssm_response = ssm_client.get_parameter(Name = tmp)\r\n        region_name = ssm_response['Parameter']['Value'] \r\n        regions[region_id] = region_name\r\n    return(regions)\r\n\r\n\r\ndef rds_worksheet_creation(spread_sheet, regions, spreadsheet_index):\r\n    worksheet = spread_sheet.add_worksheet(\"RDS\", rows=100, cols=26, src_tuple=None, src_worksheet=None, index=spreadsheet_index)\r\n    worksheet.cell('A1').set_text_format('bold', True).value = 'DBInstanceIdentifier'\r\n    worksheet.cell('B1').set_text_format('bold', True).value = 'MasterUsername'\r\n    worksheet.cell('C1').set_text_format('bold', True).value = 'Region'\r\n    worksheet.cell('D1').set_text_format('bold', False).value = 'Sent Query to (Name)'\r\n    worksheet.cell('E1').set_text_format('bold', False).value = 'Sent Query to (email)'\r\n    worksheet.cell('F1').set_text_format('bold', False).value = 'WorksheetCreated: %s' % currentDT\r\n    cells_data = list()\r\n    for region, region_h in sorted(regions.items()):\r\n        client = boto3.client('rds', region_name=region)\r\n        clnt = boto3.client('ssm', region_name=region)\r\n        db_instances = client.describe_db_instances()\r\n        for instance in db_instances['DBInstances']:\r\n            MasterUsername = instance['MasterUsername']\r\n            DBInstanceIdentifier = instance['DBInstanceIdentifier']\r\n            cells_data.append([DBInstanceIdentifier, MasterUsername, region_h])\r\n    worksheet.append_table(cells_data, start='A2')\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    spread_sheet = create_spreadsheet(spreadsheet_name = \"jSonar AWS usage\",\r\n                                                            outh_file = '/home/qa/.aws/client_secret.json')\r\n    regions = get_regions()\r\n    rds_worksheet_creation(spread_sheet, regions, 0)\r\n    spread_sheet.share(\"me@corp.com\")\r\n\r\n```\r\n### Output:\r\n\r\n[https://i.stack.imgur.com/j07S8.png](url)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/351", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/351/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/351/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/351", "id": 453122277, "node_id": "MDU6SXNzdWU0NTMxMjIyNzc=", "number": 351, "title": "googleapiclient.errors.HttpError thrown after minor changes to running code", "user": {"login": "rbarakjsonar", "id": 33938469, "node_id": "MDQ6VXNlcjMzOTM4NDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/33938469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbarakjsonar", "html_url": "https://github.com/rbarakjsonar", "followers_url": "https://api.github.com/users/rbarakjsonar/followers", "following_url": "https://api.github.com/users/rbarakjsonar/following{/other_user}", "gists_url": "https://api.github.com/users/rbarakjsonar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbarakjsonar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbarakjsonar/subscriptions", "organizations_url": "https://api.github.com/users/rbarakjsonar/orgs", "repos_url": "https://api.github.com/users/rbarakjsonar/repos", "events_url": "https://api.github.com/users/rbarakjsonar/events{/privacy}", "received_events_url": "https://api.github.com/users/rbarakjsonar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-06T16:17:31Z", "updated_at": "2019-07-26T18:53:41Z", "closed_at": "2019-07-26T18:53:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nI made some minor changes (added columns that include only a header) to code that used to work, and now I get the following:\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\npython3 create_aws_usage_spreadsheet.py\r\n\r\n------\r\n[create_aws_usage_spreadsheet.py.txt](https://github.com/nithinmurali/pygsheets/files/3259537/create_aws_usage_spreadsheet.py.txt)\r\n------\r\n\r\n```\r\nCode:\r\n\r\n[create_aws_usage_spreadsheet.py.txt](https://github.com/nithinmurali/pygsheets/files/3259537/create_aws_usage_spreadsheet.py.txt)\r\n\r\nprint(\"code is in https://github.com/nithinmurali/pygsheets/files/3259537/create_aws_usage_spreadsheet.py.txt\")\r\n\r\n```\r\n\r\n**System Information**\r\n - OS: CentOs/rhel 7\r\n - pygsheets version : pygsheets==1.1.4\r\n - pygsheets installed from (github or pypi): pygs\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/350", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/350/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/350/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/350", "id": 451418442, "node_id": "MDU6SXNzdWU0NTE0MTg0NDI=", "number": 350, "title": "How do I import a CSV to a sheet inside a worksheet ?", "user": {"login": "varunchandak", "id": 18713091, "node_id": "MDQ6VXNlcjE4NzEzMDkx", "avatar_url": "https://avatars3.githubusercontent.com/u/18713091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varunchandak", "html_url": "https://github.com/varunchandak", "followers_url": "https://api.github.com/users/varunchandak/followers", "following_url": "https://api.github.com/users/varunchandak/following{/other_user}", "gists_url": "https://api.github.com/users/varunchandak/gists{/gist_id}", "starred_url": "https://api.github.com/users/varunchandak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varunchandak/subscriptions", "organizations_url": "https://api.github.com/users/varunchandak/orgs", "repos_url": "https://api.github.com/users/varunchandak/repos", "events_url": "https://api.github.com/users/varunchandak/events{/privacy}", "received_events_url": "https://api.github.com/users/varunchandak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T10:56:53Z", "updated_at": "2019-06-03T16:12:04Z", "closed_at": "2019-06-03T16:12:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nUnable to find `import` option for csvs.\r\n\r\n**Describe the solution you'd like**\r\nAble to import CSV on my machine to a new sheet in a worksheet\r\n\r\n**Any other info**\r\nNA\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/349", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/349/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/349/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/349", "id": 450941119, "node_id": "MDU6SXNzdWU0NTA5NDExMTk=", "number": 349, "title": "Moving code that worked on Python3.4 to Python3.7 breaks authontication", "user": {"login": "rbarakjsonar", "id": 33938469, "node_id": "MDQ6VXNlcjMzOTM4NDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/33938469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbarakjsonar", "html_url": "https://github.com/rbarakjsonar", "followers_url": "https://api.github.com/users/rbarakjsonar/followers", "following_url": "https://api.github.com/users/rbarakjsonar/following{/other_user}", "gists_url": "https://api.github.com/users/rbarakjsonar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbarakjsonar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbarakjsonar/subscriptions", "organizations_url": "https://api.github.com/users/rbarakjsonar/orgs", "repos_url": "https://api.github.com/users/rbarakjsonar/repos", "events_url": "https://api.github.com/users/rbarakjsonar/events{/privacy}", "received_events_url": "https://api.github.com/users/rbarakjsonar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-31T19:07:07Z", "updated_at": "2019-06-01T16:41:15Z", "closed_at": "2019-06-01T16:41:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\nI have code that relies on pygsheets.\r\nIt works on Python3.4\r\nI need to run it on a machine with Python3.7\r\nThe code breaks with:\r\nAttributeError: 'Client' object has no attribute 'list_ssheets' \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n$ python AttributeError_demo.py \r\nTraceback (most recent call last):\r\n  File \"AttributeError_demo.py\", line 13, in <module>\r\n    outh_file = '/home/qa/.aws/client_secret.json')\r\n  File \"AttributeError_demo.py\", line 6, in create_spreadsheet\r\n    client.list_ssheets(parent_id=None)\r\nAttributeError: 'Client' object has no attribute 'list_ssheets'\r\n\r\n```\r\nimport pygsheets\r\ndef create_spreadsheet(outh_file, spreadsheet_name = \"jSonar AWS usage\"):\r\n    client = pygsheets.authorize(outh_file=outh_file, outh_nonlocal=True)\r\n    client.list_ssheets(parent_id=None)\r\n    spread_sheet = client.create(spreadsheet_name)\r\n    return spread_sheet\r\nif __name__ == \"__main__\":\r\n    spread_sheet = create_spreadsheet(spreadsheet_name = \"jSonar AWS usage\",\r\n                                                            outh_file = '/home/qa/.aws/client_secret.json')\r\n\r\n# see error: AttributeError: 'Client' object has no attribute 'list_ssheets'\r\n```\r\n\r\n**System Information**\r\n - OS: Red Hat Enterprise Linux 7.4\r\n- Python version: \r\n$ python -V\r\nPython 3.7.3\r\n\r\n - pygsheets version :\r\n$ python -c \"import pygsheets ; import requests ; print(requests.__version__)\"\r\n2.22.0\r\n$ pip3.7 list | grep pygsheets\r\npygsheets                2.0.1   \r\n$ pip3.7 freeze | grep pygsheets\r\npygsheets==2.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/347", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/347/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/347/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/347", "id": 447855314, "node_id": "MDU6SXNzdWU0NDc4NTUzMTQ=", "number": 347, "title": "Setting formatting piecemeal for rows and cols.", "user": {"login": "ddow", "id": 2965284, "node_id": "MDQ6VXNlcjI5NjUyODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2965284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddow", "html_url": "https://github.com/ddow", "followers_url": "https://api.github.com/users/ddow/followers", "following_url": "https://api.github.com/users/ddow/following{/other_user}", "gists_url": "https://api.github.com/users/ddow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddow/subscriptions", "organizations_url": "https://api.github.com/users/ddow/orgs", "repos_url": "https://api.github.com/users/ddow/repos", "events_url": "https://api.github.com/users/ddow/events{/privacy}", "received_events_url": "https://api.github.com/users/ddow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-05-23T20:20:51Z", "updated_at": "2019-10-03T12:02:00Z", "closed_at": "2019-05-24T10:39:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, it seems if, for example, I want to update the color of an entire row or column but don't want to touch any other formatting like, say, font or text size, I have to do it one cell at a time.\r\n\r\nThis would rule:\r\nrow.color = [0, 1, 0, 0]\r\nor\r\nrow.apply_format(cell, \"color\")\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/343", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/343/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/343/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/343", "id": 441339197, "node_id": "MDU6SXNzdWU0NDEzMzkxOTc=", "number": 343, "title": "Warning message not very helpful, as it doesn't actually identify the missing method, nor the line in the code that caused it.", "user": {"login": "rbarakjsonar", "id": 33938469, "node_id": "MDQ6VXNlcjMzOTM4NDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/33938469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbarakjsonar", "html_url": "https://github.com/rbarakjsonar", "followers_url": "https://api.github.com/users/rbarakjsonar/followers", "following_url": "https://api.github.com/users/rbarakjsonar/following{/other_user}", "gists_url": "https://api.github.com/users/rbarakjsonar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbarakjsonar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbarakjsonar/subscriptions", "organizations_url": "https://api.github.com/users/rbarakjsonar/orgs", "repos_url": "https://api.github.com/users/rbarakjsonar/repos", "events_url": "https://api.github.com/users/rbarakjsonar/events{/privacy}", "received_events_url": "https://api.github.com/users/rbarakjsonar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-07T17:00:46Z", "updated_at": "2019-05-13T01:26:13Z", "closed_at": "2019-05-13T01:26:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I run the following minimal script, I get the following warning:\r\n\r\n```\r\n$ cat ~/python/boto3-originalcontent/stackoverflow/so_s3_3.py\r\nimport pygsheets\r\n\r\n\r\ndef create_spreadsheet(outh_file, spreadsheet_name = \"AWS usage\"):\r\n    client = pygsheets.authorize(outh_file=outh_file, outh_nonlocal=True)\r\n    client.list_ssheets(parent_id=None)\r\n    spread_sheet = client.create(spreadsheet_name)\r\n    return spread_sheet\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    spread_sheet = create_spreadsheet(spreadsheet_name = \"AWS usage\", outh_file = '../client_secret.json')\r\n    spread_sheet.link(syncToCloud=False)\r\n$ python3 ~/python/boto3-originalcontent/stackoverflow/so_s3_3.py\r\n/usr/lib/python3.4/site-packages/pygsheets/spreadsheet.py:326: UserWarning: method not implimented\r\n  warnings.warn(\"method not implimented\")\r\n$ \r\n```\r\n\r\nThat message is not very helpful, as it doesn't actually identify the missing method, nor the line in the code that caused it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/341", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/341/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/341/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/341", "id": 440588340, "node_id": "MDU6SXNzdWU0NDA1ODgzNDA=", "number": 341, "title": "Program crashes when made into executable", "user": {"login": "FIRE-AKA-DRAZN", "id": 29803015, "node_id": "MDQ6VXNlcjI5ODAzMDE1", "avatar_url": "https://avatars0.githubusercontent.com/u/29803015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FIRE-AKA-DRAZN", "html_url": "https://github.com/FIRE-AKA-DRAZN", "followers_url": "https://api.github.com/users/FIRE-AKA-DRAZN/followers", "following_url": "https://api.github.com/users/FIRE-AKA-DRAZN/following{/other_user}", "gists_url": "https://api.github.com/users/FIRE-AKA-DRAZN/gists{/gist_id}", "starred_url": "https://api.github.com/users/FIRE-AKA-DRAZN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FIRE-AKA-DRAZN/subscriptions", "organizations_url": "https://api.github.com/users/FIRE-AKA-DRAZN/orgs", "repos_url": "https://api.github.com/users/FIRE-AKA-DRAZN/repos", "events_url": "https://api.github.com/users/FIRE-AKA-DRAZN/events{/privacy}", "received_events_url": "https://api.github.com/users/FIRE-AKA-DRAZN/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 717214985, "node_id": "MDU6TGFiZWw3MTcyMTQ5ODU=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/good%20first%20issue", "name": "good first issue", "color": "5319e7", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-06T08:14:18Z", "updated_at": "2019-05-24T09:52:48Z", "closed_at": "2019-05-24T09:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "After making program, which uses pygsheets as a library, an executable using pyinstaller the program crashes after authentication is completed\r\n\r\n```\r\n[Errno 2] No such file or directory: 'C:\\\\Users\\\\FIRE~1\\\\AppData\\\\Local\\\\Temp\\\\_MEI196682\\\\pygsheets\\\\data\\\\sheets_discovery.json'\r\n```\r\n\r\n[This was listed as a bug previously ](https://github.com/nithinmurali/pygsheets/issues/200) and I have tried the solutions listed there however this specific code has changed and the solutions no longer work.\r\n\r\n**System Information**\r\n - OS: Win 7\r\n - pygsheets version : 2.0.1\r\n - pygsheets installed from : pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/340", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/340/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/340/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/340", "id": 440431054, "node_id": "MDU6SXNzdWU0NDA0MzEwNTQ=", "number": 340, "title": "Setting a cell's text foreground colour causes subsequent cell.update() calls to fail with \"KeyError: 0\"", "user": {"login": "alanmaydwell", "id": 29397722, "node_id": "MDQ6VXNlcjI5Mzk3NzIy", "avatar_url": "https://avatars2.githubusercontent.com/u/29397722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanmaydwell", "html_url": "https://github.com/alanmaydwell", "followers_url": "https://api.github.com/users/alanmaydwell/followers", "following_url": "https://api.github.com/users/alanmaydwell/following{/other_user}", "gists_url": "https://api.github.com/users/alanmaydwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanmaydwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanmaydwell/subscriptions", "organizations_url": "https://api.github.com/users/alanmaydwell/orgs", "repos_url": "https://api.github.com/users/alanmaydwell/repos", "events_url": "https://api.github.com/users/alanmaydwell/events{/privacy}", "received_events_url": "https://api.github.com/users/alanmaydwell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-05T10:56:16Z", "updated_at": "2019-05-24T09:52:48Z", "closed_at": "2019-05-24T09:52:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI set a cell's text colour by supplying the values as a tuple and then called cell.update()\r\n\r\n```\r\ncell.set_text_format(\"foregroundColor\", (0.5, 0.8, 0.5, 1.0))\r\ncell.update()\r\n```\r\n\r\nThe cell.update() step resulted in the following error:\r\n```\r\ncell.py\", line 475, in get_json ret_json[\"userEnteredFormat\"][\"textFormat\"]['foregroundColor'] = {\"red\": fg[0], \"green\": fg[1],\r\nKeyError: 0\r\n```\r\nI've noticed cell.set_text_format converts the supplied colour tuple into a dictionary. Looks like ` `cell.update` is trying to get colour values from a tuple by index number but is getting a dictionary instead.\r\n\r\n**To Reproduce**\r\nFurther details from Python console interactions.\r\n```\r\n>>> # Set text colour using tuple value\t\t\t\t\t\t\t      \r\n>>> cell.set_text_format(\"foregroundColor\", (0.5, 0.8, 0.5, 1.0))\r\n\t\t\t\t\t\t\t\t      \r\n<Cell E2 'sdf'>\r\n>>> # Examine the foreground colour\t\t\t\t\t\t\t      \r\n>>> cell.text_format[\"foregroundColor\"]   \r\n{'red': 0.5, 'green': 0.8, 'blue': 0.5, 'alpha': 1.0}\r\n>>> # From above see it's been automatically converted to a dictionary\t\t\t\t\t\t\t      \r\n>>> # Now try to update\r\n>>> cell.update()\r\n\t\t\t\t\t\t\t\t      \r\nTraceback (most recent call last):\r\n  File \"<pyshell#8>\", line 1, in <module>\r\n    cell.update()\r\n  File \"D:\\Users\\alan.maydwell\\AppData\\Local\\Continuum\\anaconda2\\envs\\py3\\lib\\site-packages\\pygsheets\\cell.py\", line 431, in update\r\n    \"cell\": self.get_json(),\r\n  File \"D:\\Users\\alan.maydwell\\AppData\\Local\\Continuum\\anaconda2\\envs\\py3\\lib\\site-packages\\pygsheets\\cell.py\", line 475, in get_json\r\n    ret_json[\"userEnteredFormat\"][\"textFormat\"]['foregroundColor'] = {\"red\": fg[0], \"green\": fg[1],\r\nKeyError: 0\r\n>>> # Possibly the cell.py code above is expecting fg to be a tuple but is getting a dictionary instead.\r\n```\r\n\r\n**System Information**\r\n - OS: Windows\r\n - pygsheets version : 2.0.1\r\n - pygsheets installed from (github or pypi): pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/339", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/339/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/339/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/339", "id": 440367161, "node_id": "MDU6SXNzdWU0NDAzNjcxNjE=", "number": 339, "title": "Add other input options for authorisation code", "user": {"login": "FIRE-AKA-DRAZN", "id": 29803015, "node_id": "MDQ6VXNlcjI5ODAzMDE1", "avatar_url": "https://avatars0.githubusercontent.com/u/29803015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FIRE-AKA-DRAZN", "html_url": "https://github.com/FIRE-AKA-DRAZN", "followers_url": "https://api.github.com/users/FIRE-AKA-DRAZN/followers", "following_url": "https://api.github.com/users/FIRE-AKA-DRAZN/following{/other_user}", "gists_url": "https://api.github.com/users/FIRE-AKA-DRAZN/gists{/gist_id}", "starred_url": "https://api.github.com/users/FIRE-AKA-DRAZN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FIRE-AKA-DRAZN/subscriptions", "organizations_url": "https://api.github.com/users/FIRE-AKA-DRAZN/orgs", "repos_url": "https://api.github.com/users/FIRE-AKA-DRAZN/repos", "events_url": "https://api.github.com/users/FIRE-AKA-DRAZN/events{/privacy}", "received_events_url": "https://api.github.com/users/FIRE-AKA-DRAZN/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 553218718, "node_id": "MDU6TGFiZWw1NTMyMTg3MTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/Info%20needed", "name": "Info needed", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-04T20:20:41Z", "updated_at": "2019-05-24T10:38:36Z", "closed_at": "2019-05-24T10:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if if this is already supported or not, but I'm building a very simple front-end app that accesses google spreadsheets and pygsheets seems like the simplest solution.\r\n\r\nHowever as far as I can tell the authorisation code needs to be entered via a console, and I would like my app to do this entirely through its UI.  The UI library is just tkinter.\r\n\r\nIs there a way to do this?  If not I would like to request this as a feature", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/338", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/338/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/338/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/338", "id": 440257524, "node_id": "MDU6SXNzdWU0NDAyNTc1MjQ=", "number": 338, "title": "`cells_data.append([s3_bucket_name, last_modified, tags])` get from JSON: \"... \"Invalid values[40][2]: list_value { ...\" after last S3 bucket is processed", "user": {"login": "rbarakjsonar", "id": 33938469, "node_id": "MDQ6VXNlcjMzOTM4NDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/33938469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbarakjsonar", "html_url": "https://github.com/rbarakjsonar", "followers_url": "https://api.github.com/users/rbarakjsonar/followers", "following_url": "https://api.github.com/users/rbarakjsonar/following{/other_user}", "gists_url": "https://api.github.com/users/rbarakjsonar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbarakjsonar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbarakjsonar/subscriptions", "organizations_url": "https://api.github.com/users/rbarakjsonar/orgs", "repos_url": "https://api.github.com/users/rbarakjsonar/repos", "events_url": "https://api.github.com/users/rbarakjsonar/events{/privacy}", "received_events_url": "https://api.github.com/users/rbarakjsonar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-03T23:28:54Z", "updated_at": "2019-05-06T21:58:27Z", "closed_at": "2019-05-06T21:58:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nWhen I run the below script, after line 98 is being executed for the last time\r\nI get the traceback as below (if line 98 is commented out, no traceback occures):\r\n\r\n...\r\nBucket: ury2 Tags: no_tags last_modified: \"2019-01-16 23:14:11+00:00\"\r\ncounter: 230\r\nBucket: wiki.jsonar.com Tags: no_tags last_modified: \"2015-10-22 07:06:12+00:00\"\r\ncounter: 231\r\nBucket: yael-cloudtrail-bucket Tags: no_tags last_modified: \"2019-04-02 02:00:06+00:00\"\r\ncounter: 232\r\nBucket: yhager Tags: no_tags last_modified: \"2017-04-02 04:07:23+00:00\"\r\ncounter: 233\r\nTraceback (most recent call last):\r\n  File \"../stackoverflow/so_s3_3.py\", line 114, in <module>\r\n    s3_worksheet_creation(spread_sheet, regions)\r\n  File \"../stackoverflow/so_s3_3.py\", line 107, in s3_worksheet_creation\r\n    populate_cells(start_cell='A2', cells_data=cells_data, worksheet=worksheet)\r\n  File \"../stackoverflow/so_s3_3.py\", line 34, in populate_cells\r\n    worksheet.update_values(start_cell, cells_data)\r\n  File \"/usr/lib/python3.6/site-packages/pygsheets/worksheet.py\", line 644, in update_values\r\n    self.client.sheet.values_batch_update(self.spreadsheet.id, body, parse)\r\n  File \"/usr/lib/python3.6/site-packages/pygsheets/sheet.py\", line 273, in values_batch_update\r\n    self._execute_requests(request)\r\n  File \"/usr/lib/python3.6/site-packages/pygsheets/sheet.py\", line 351, in _execute_requests\r\n    response = request.execute(num_retries=self.retries)\r\n  File \"/usr/lib/python3.6/site-packages/googleapiclient/_helpers.py\", line 130, in positional_wrapper\r\n    return wrapped(*args, **kwargs)\r\n  File \"/usr/lib/python3.6/site-packages/googleapiclient/http.py\", line 851, in execute\r\n    raise HttpError(resp, content, uri=self.uri)\r\ngoogleapiclient.errors.HttpError: <HttpError 400 when requesting https://sheets.googleapis.com/v4/spreadsheets/1mPrMPbXg1RE3IDKCwdgo5tx_eKzZzKPzekKMjrflNpI/values/s3%21A2%3AD236?valueInputOption=USER_ENTERED&alt=json returned \"Invalid values[40][2]: list_value {\r\n  values {\r\n    struct_value {\r\n      fields {\r\n        key: \"Key\"\r\n        value {\r\n          string_value: \"aws:cloudformation:stack-id\"\r\n        }\r\n      }\r\n      fields {\r\n        key: \"Value\"\r\n        value {\r\n          string_value: \"arn:aws:cloudformation:ca-central-1:627577395509:stack/customer-instance-1/8e9df8e0-15cc-11e9-88d4-504dce355a1e\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n  values {\r\n    struct_value {\r\n      fields {\r\n        key: \"Key\"\r\n        value {\r\n          string_value: \"aws:cloudformation:stack-name\"\r\n        }\r\n      }\r\n      fields {\r\n        key: \"Value\"\r\n        value {\r\n          string_value: \"customer-instance-1\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n  values {\r\n    struct_value {\r\n      fields {\r\n        key: \"Key\"\r\n        value {\r\n          string_value: \"aws:cloudformation:logical-id\"\r\n        }\r\n      }\r\n      fields {\r\n        key: \"Value\"\r\n        value {\r\n          string_value: \"SonarS3Bucket\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\">\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nimport collections\r\nimport boto3, botocore\r\nimport datetime\r\nimport json\r\nimport os\r\nimport pprint \r\nimport pygsheets\r\n\r\npp = pprint.PrettyPrinter(indent=4)\r\n\r\ncurrentDT = str(datetime.datetime.now())\r\n\r\n\r\ndef create_spreadsheet(outh_file, spreadsheet_name = \"jSonar AWS usage\"):\r\n    client = pygsheets.authorize()\r\n    client.spreadsheet_titles()\r\n    spread_sheet = client.create(spreadsheet_name)\r\n    return spread_sheet\r\n\r\n\r\ndef populate_headers(headers_data, worksheet):\r\n    h = headers_data\r\n    header = dict()\r\n    for i in range(len(h)):\r\n        col = i + 1\r\n        header[col] = worksheet.cell(h[col].cell)\r\n        header[col].value = h[col].name\r\n        header[col].text_format['bold'] = h[col].bold\r\n        #pp.pprint(header[col])    \r\n        header[col].update()\r\n\r\n\r\ndef populate_cells(start_cell, cells_data, worksheet):\r\n    worksheet.update_values(start_cell, cells_data)\r\n\r\n\r\ndef get_regions():\r\n    region = \"us-east-1\"\r\n    region = \"ap-northeast-1\"\r\n    region = \"us-west-1\"\r\n    regions = dict()\r\n\r\n    ec2 = boto3.client(\"ec2\", region_name=region)\r\n    ec2_responses = ec2.describe_regions()\r\n\r\n    ssm_client = boto3.client('ssm', region_name=region)\r\n    for resp in ec2_responses['Regions']:\r\n        region_id = resp['RegionName']\r\n        tmp = '/aws/service/global-infrastructure/regions/%s/longName' % region_id\r\n        ssm_response = ssm_client.get_parameter(Name = tmp)\r\n        region_name = ssm_response['Parameter']['Value'] \r\n        regions[region_id] = region_name\r\n    return(regions)\r\n\r\n            \r\ndef s3_worksheet_creation(spread_sheet, regions):\r\n    worksheet = spread_sheet.add_worksheet(\"s3\", rows=100, cols=26, src_tuple=None, src_worksheet=None, index=None)\r\n    Header = collections.namedtuple('Header', 'cell name bold')\r\n    s3_header_data = dict()\r\n    s3_header_data[1] = Header(cell='A1', name='Name', bold=True)\r\n    s3_header_data[2] = Header(cell='B1', name='Tags', bold=True)\r\n    s3_header_data[3] = Header(cell='C1', name='Last Modified', bold=True)\r\n    s3_header_data[4] = Header(cell='D1', name='WorksheetCreated: %s' % currentDT, bold=False)\r\n    populate_headers(headers_data=s3_header_data, worksheet=worksheet)\r\n   \r\n    cells_data = list()\r\n    for region, region_h in sorted(regions.items()):\r\n        print()\r\n        #print(\"{} buckets in {}\".format(\"S3\", region_h))\r\n        print(\"{} buckets\".format(\"S3\",))\r\n        print(\"---------------------------\")\r\n        s3_client = boto3.client('s3', region_name=region)\r\n        s3_resource = boto3.resource('s3', region_name=region)\r\n        paginator = s3_client.get_paginator(\"list_objects_v2\")\r\n        buckets = s3_client.list_buckets()\r\n\r\n        counter = 0\r\n        for bucket in s3_resource.buckets.all():\r\n            try:\r\n                s3_bucket_name = bucket.name\r\n            except botocore.exceptions.ClientError:\r\n                print(\"+++ Not Authorised to read bucket info (bucket.name) +++\")\r\n                continue\r\n            pages = paginator.paginate(Bucket=s3_bucket_name)\r\n            try:\r\n                for page in pages:\r\n                    try:\r\n                        last_modified = json.dumps(page['Contents'][0]['LastModified'], \r\n                                        indent=4, sort_keys=True, default=str)\r\n                    except KeyError:\r\n                        last_modified = \"unknown\"\r\n                    try:\r\n                        response = s3_client.get_bucket_tagging(Bucket=s3_bucket_name)\r\n                        tags = response['TagSet']\r\n                    except botocore.exceptions.ClientError:\r\n                        tags = \"no_tags\"\r\n                    print(\"Bucket:\", s3_bucket_name, \"Tags:\", tags, \"last_modified:\", last_modified)\r\n                    cells_data.append([s3_bucket_name, last_modified, tags])\r\n                    counter += 1\r\n                    print(\"counter:\", counter)\r\n                    break\r\n            except botocore.exceptions.ClientError:\r\n                print(\"+++ Not Authorised to read bucket info (for page in pages) +++\")\r\n                cells_data.append([s3_bucket_name, \"not authorised to read\", \"not authorised to read\"])\r\n                continue\r\n        break # S3 doesn't have regions, so we break after one region.\r\n    populate_cells(start_cell='A2', cells_data=cells_data, worksheet=worksheet)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    spread_sheet = create_spreadsheet(spreadsheet_name = \"jSonar AWS usage\", outh_file = '../client_secret.json')\r\n    regions = get_regions()\r\n\r\n    s3_worksheet_creation(spread_sheet, regions)\r\n\r\n    # share the sheet by email\r\n    spread_sheet.share(\"rbarak@jsonar.com\")\r\n\r\n# see error\r\n```\r\n\r\n**System Information**\r\n - OS: CentOS 7\r\n - pygsheets version : 2\r\n - pygsheets installed from (github or pypi): pip install pygsheets\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/337", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/337/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/337/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/337", "id": 440013393, "node_id": "MDU6SXNzdWU0NDAwMTMzOTM=", "number": 337, "title": "MemoryError when getting Sheet", "user": {"login": "jfcralo", "id": 11634726, "node_id": "MDQ6VXNlcjExNjM0NzI2", "avatar_url": "https://avatars2.githubusercontent.com/u/11634726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfcralo", "html_url": "https://github.com/jfcralo", "followers_url": "https://api.github.com/users/jfcralo/followers", "following_url": "https://api.github.com/users/jfcralo/following{/other_user}", "gists_url": "https://api.github.com/users/jfcralo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfcralo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfcralo/subscriptions", "organizations_url": "https://api.github.com/users/jfcralo/orgs", "repos_url": "https://api.github.com/users/jfcralo/repos", "events_url": "https://api.github.com/users/jfcralo/events{/privacy}", "received_events_url": "https://api.github.com/users/jfcralo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-05-03T11:57:57Z", "updated_at": "2019-10-04T08:25:55Z", "closed_at": "2019-05-09T03:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm try to make a script to get all data in a single spreadsheet:\r\n\r\ncode:\r\nimport pygsheets\r\n\r\nCM_SPREADSHEET_ID = 'spreadsheet_ID'\r\nCM_RANGE_NAME = 'spreadsheet_range'\r\n\r\nc = pygsheets.authorize(outh_file='client_secret.json')\r\nwrk = c.sheet.get(CM_SPREADSHEET_ID)\r\nsh = wrk.get_range(CM_RANGE_NAME)\r\nsh.export(filename=\"Interventions.xlsx\")\r\n\r\nI'm getting the following error:\r\nTraceback (most recent call last):\r\n  File \"C:/Users/jralo/Documents/stuff/Intervenions/teste2.py\", line 7, in <module>\r\n    wrk = c.sheet.get(CM_SPREADSHEET_ID)\r\n  File \"C:\\Python37-32\\Lib\\site-packages\\pygsheets\\sheet.py\", line 138, in get\r\n    return self._execute_requests(self.service.spreadsheets().get(spreadsheetId=spreadsheet_id, **kwargs))\r\n  File \"C:\\Python37-32\\Lib\\site-packages\\pygsheets\\sheet.py\", line 351, in _execute_requests\r\n    response = request.execute(num_retries=self.retries)\r\n  File \"C:\\Python37-32\\Lib\\site-packages\\googleapiclient\\_helpers.py\", line 130, in positional_wrapper\r\n    return wrapped(*args, **kwargs)\r\n  File \"C:\\Python37-32\\Lib\\site-packages\\googleapiclient\\http.py\", line 852, in execute\r\n    return self.postproc(resp, content)\r\n  File \"C:\\Python37-32\\Lib\\site-packages\\googleapiclient\\model.py\", line 209, in response\r\n    return self.deserialize(content)\r\n  File \"C:\\Python37-32\\Lib\\site-packages\\googleapiclient\\model.py\", line 264, in deserialize\r\n    content = content.decode('utf-8')\r\nMemoryError\r\n\r\nWhat can be causing this? My Sheet is just too big?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/332", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/332/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/332/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/332", "id": 432652017, "node_id": "MDU6SXNzdWU0MzI2NTIwMTc=", "number": 332, "title": "worksheet resize silently fails if only one dimension is provided", "user": {"login": "DreadPirateShawn", "id": 1418951, "node_id": "MDQ6VXNlcjE0MTg5NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1418951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DreadPirateShawn", "html_url": "https://github.com/DreadPirateShawn", "followers_url": "https://api.github.com/users/DreadPirateShawn/followers", "following_url": "https://api.github.com/users/DreadPirateShawn/following{/other_user}", "gists_url": "https://api.github.com/users/DreadPirateShawn/gists{/gist_id}", "starred_url": "https://api.github.com/users/DreadPirateShawn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DreadPirateShawn/subscriptions", "organizations_url": "https://api.github.com/users/DreadPirateShawn/orgs", "repos_url": "https://api.github.com/users/DreadPirateShawn/repos", "events_url": "https://api.github.com/users/DreadPirateShawn/events{/privacy}", "received_events_url": "https://api.github.com/users/DreadPirateShawn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-12T16:39:30Z", "updated_at": "2019-04-22T19:11:25Z", "closed_at": "2019-04-22T19:11:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\n\r\nThe `def resize(rows=None, cols=None)` method should either:\r\n* raise if only one of the dimensions is provided\r\n* default to current values for a dimension that isn't provided\r\n\r\nThat is, `wks.resize(rows=wks.rows + 1)` fails to make any changes, but it's very hard to tell. (By default, logger messages aren't printed to stdout or stderr.)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nwks.resize(rows=wks.rows + 1)\r\n```\r\n\r\n**System Information**\r\n - OS: Ubuntu\r\n - pygsheets version : 2.0.0\r\n - pygsheets installed from (github or pypi): Github\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/329", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/329/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/329/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/329", "id": 432324315, "node_id": "MDU6SXNzdWU0MzIzMjQzMTU=", "number": 329, "title": "Exclude Tailing Rows", "user": {"login": "ngordenier", "id": 29215484, "node_id": "MDQ6VXNlcjI5MjE1NDg0", "avatar_url": "https://avatars2.githubusercontent.com/u/29215484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngordenier", "html_url": "https://github.com/ngordenier", "followers_url": "https://api.github.com/users/ngordenier/followers", "following_url": "https://api.github.com/users/ngordenier/following{/other_user}", "gists_url": "https://api.github.com/users/ngordenier/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngordenier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngordenier/subscriptions", "organizations_url": "https://api.github.com/users/ngordenier/orgs", "repos_url": "https://api.github.com/users/ngordenier/repos", "events_url": "https://api.github.com/users/ngordenier/events{/privacy}", "received_events_url": "https://api.github.com/users/ngordenier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-11T23:57:17Z", "updated_at": "2019-04-22T19:11:25Z", "closed_at": "2019-04-22T19:11:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "In version 1.1.4 when pulling down a sheet as a df it excluded the empty rows at the bottom of the sheet. The default behavior is now to pull all rows regardless. It looks like the most recent release fixed this issue for columns only. \r\n\r\nCan we add in that functionality to remove tailing_rows. Here is the call on the get_al_values function. \r\ninclude_tailing_empty_rows=True", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/328", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/328/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/328/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/328", "id": 432195391, "node_id": "MDU6SXNzdWU0MzIxOTUzOTE=", "number": 328, "title": "When exporting a Worksheet to a CSV, the formatting is incorrect", "user": {"login": "Zylvian", "id": 33404765, "node_id": "MDQ6VXNlcjMzNDA0NzY1", "avatar_url": "https://avatars2.githubusercontent.com/u/33404765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zylvian", "html_url": "https://github.com/Zylvian", "followers_url": "https://api.github.com/users/Zylvian/followers", "following_url": "https://api.github.com/users/Zylvian/following{/other_user}", "gists_url": "https://api.github.com/users/Zylvian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zylvian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zylvian/subscriptions", "organizations_url": "https://api.github.com/users/Zylvian/orgs", "repos_url": "https://api.github.com/users/Zylvian/repos", "events_url": "https://api.github.com/users/Zylvian/events{/privacy}", "received_events_url": "https://api.github.com/users/Zylvian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-11T19:06:31Z", "updated_at": "2019-04-22T19:05:20Z", "closed_at": "2019-04-22T19:05:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is due to the cell seperating happening with commas instead of tabs.\r\n\r\nExported .csv file opened in Excel:\r\nhttps://i.gyazo.com/c8cf5607ca34a9171395bada330d1644.png\r\n\r\nThis was made with:\r\n`sheet.export(filename=student_id, path=\"grades/\")`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/327", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/327/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/327/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/327", "id": 431714270, "node_id": "MDU6SXNzdWU0MzE3MTQyNzA=", "number": 327, "title": "UnicodeEncodeError on set_dataframe", "user": {"login": "a-cid", "id": 834150, "node_id": "MDQ6VXNlcjgzNDE1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/834150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-cid", "html_url": "https://github.com/a-cid", "followers_url": "https://api.github.com/users/a-cid/followers", "following_url": "https://api.github.com/users/a-cid/following{/other_user}", "gists_url": "https://api.github.com/users/a-cid/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-cid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-cid/subscriptions", "organizations_url": "https://api.github.com/users/a-cid/orgs", "repos_url": "https://api.github.com/users/a-cid/repos", "events_url": "https://api.github.com/users/a-cid/events{/privacy}", "received_events_url": "https://api.github.com/users/a-cid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-10T21:01:05Z", "updated_at": "2019-07-26T20:06:34Z", "closed_at": "2019-07-26T20:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using set_dataframe with a dataframe that contains unicode strings that aren't ASCII encodable, pygsheets will raise a UnicodeEncodeError on line 1212 of worksheet.py:\r\n```\r\nvalues = df.astype(str).values.tolist()\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\n# coding=utf-8\r\nimport pygsheets\r\nimport pandas as pd\r\n\r\nsheetID = \"\" #fill with sheet key\r\n\r\ndf = pd.DataFrame([u'\u00e3'])\r\n\r\ngc = pygsheets.authorize()\r\nsh = gc.open_by_key(sheetID)\r\nwks = sh.worksheets()[0]\r\n\r\nwks.set_dataframe(df,(1,1))\r\n```\r\n\r\n**Traceback**\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"pygsheets_test/test.py\", line 13, in <module>\r\n    wks.set_dataframe(df,(1,1))\r\n  File \"pygsheets_test\\venv\\lib\\site-packages\\pygsheets\\worksheet.py\", line 1212, in set_dataframe\r\n    values = df.astype(str).values.tolist()\r\n  File \"pygsheets_test\\venv\\lib\\site-packages\\pandas\\core\\generic.py\", line 5691, in astype\r\n    **kwargs)\r\n  File \"pygsheets_test\\venv\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 531, in astype\r\n    return self.apply('astype', dtype=dtype, **kwargs)\r\n  File \"pygsheets_test\\venv\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 395, in apply\r\n    applied = getattr(b, f)(**kwargs)\r\n  File \"pygsheets_test\\venv\\lib\\site-packages\\pandas\\core\\internals\\blocks.py\", line 534, in astype\r\n    **kwargs)\r\n  File \"pygsheets_test\\venv\\lib\\site-packages\\pandas\\core\\internals\\blocks.py\", line 633, in _astype\r\n    values = astype_nansafe(values.ravel(), dtype, copy=True)\r\n  File \"pygsheets_test\\venv\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 632, in astype_nansafe\r\n    skipna=skipna).reshape(arr.shape)\r\n  File \"pandas\\_libs\\lib.pyx\", line 614, in pandas._libs.lib.astype_str\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xe3' in position 0: ordinal not in range(128)\r\n```\r\n\r\n**System Information**\r\n - OS: Windows 10\r\n - python version: 2.7.16\r\n - pygsheets version : 2.0.1\r\n - pygsheets installed from (github or pypi): pypi\r\n - pandas version: 0.24.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/324", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/324/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/324/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/324", "id": 426244512, "node_id": "MDU6SXNzdWU0MjYyNDQ1MTI=", "number": 324, "title": "Problem with custom_requests() call", "user": {"login": "Stefan2142", "id": 12427071, "node_id": "MDQ6VXNlcjEyNDI3MDcx", "avatar_url": "https://avatars3.githubusercontent.com/u/12427071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stefan2142", "html_url": "https://github.com/Stefan2142", "followers_url": "https://api.github.com/users/Stefan2142/followers", "following_url": "https://api.github.com/users/Stefan2142/following{/other_user}", "gists_url": "https://api.github.com/users/Stefan2142/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stefan2142/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stefan2142/subscriptions", "organizations_url": "https://api.github.com/users/Stefan2142/orgs", "repos_url": "https://api.github.com/users/Stefan2142/repos", "events_url": "https://api.github.com/users/Stefan2142/events{/privacy}", "received_events_url": "https://api.github.com/users/Stefan2142/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-28T00:49:53Z", "updated_at": "2019-03-28T02:58:26Z", "closed_at": "2019-03-28T02:58:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried calling custom_requests() method on worksheet object. \r\nIm calling it like this:\r\n```\r\ndef create_req(id)\r\n    return {'requests': [{'addConditionalFormatRule': {'index': 0, 'rule': {'ranges': [{'endColumnIndex': 10, 'sheetId': id, 'startColumnIndex': 9}], 'gradientRule': {'maxpoint': {'color': {'green': 0.9}, 'type': 'MAX'}, 'minpoint': {'color': {'green': 0.2, 'red': 0.8}, 'type': 'MIN'}}}}}]}\r\n\r\ngc = pygsheets.authorize(client_secret='google_secret.json')\r\nsh = gc.create('PY to Gsheet Test')\r\nsh.custom_request(create_req(sh.id),'')\r\n```\r\n```\r\nError code:\r\n    sh.custom_request(create_req(sh.id),'')\r\n  File \"c:\\python27\\lib\\site-packages\\pygsheets\\spreadsheet.py\", line 342, in custom_request\r\n    return self.client.sh_batch_update(self.id, request, fields=fields, batch=False)\r\nAttributeError: 'Client' object has no attribute 'sh_batch_update'\r\n```\r\nNow, I may be passing wrong parameters (especially that second one, im not sure what 'Fields' argument is, but nevertheless this looks like the bug in library because Client doesnt seem to have 'sh_batch_update' attribute\r\n\r\n    \r\n\r\n[Link to that method in docs](https://pygsheets.readthedocs.io/en/stable/spreadsheet.html#pygsheets.Spreadsheet.custom_request) \r\n**System Information**\r\n - OS: WIN10\r\n - pygsheets version : 2.0.0\r\n - pygsheets installed from (github or pypi): pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/321", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/321/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/321/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/321", "id": 422450049, "node_id": "MDU6SXNzdWU0MjI0NTAwNDk=", "number": 321, "title": "Basic usage according to documentation fails", "user": {"login": "helgihg", "id": 1698313, "node_id": "MDQ6VXNlcjE2OTgzMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1698313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helgihg", "html_url": "https://github.com/helgihg", "followers_url": "https://api.github.com/users/helgihg/followers", "following_url": "https://api.github.com/users/helgihg/following{/other_user}", "gists_url": "https://api.github.com/users/helgihg/gists{/gist_id}", "starred_url": "https://api.github.com/users/helgihg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helgihg/subscriptions", "organizations_url": "https://api.github.com/users/helgihg/orgs", "repos_url": "https://api.github.com/users/helgihg/repos", "events_url": "https://api.github.com/users/helgihg/events{/privacy}", "received_events_url": "https://api.github.com/users/helgihg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541424767, "node_id": "MDU6TGFiZWw1NDE0MjQ3Njc=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/update%20docs", "name": "update docs", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-18T21:47:08Z", "updated_at": "2019-04-07T08:09:15Z", "closed_at": "2019-04-07T08:09:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The \"Basic usage\" section is missing the definition of an array which is included in the code: my_nparray\r\n\r\nUpon running the basic usage, one receives the error: \"NameError: name 'my_nparray' is not defined\"\r\n\r\nThe array or examples of what it should contain are also nowhere to be found.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/319", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/319/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/319/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/319", "id": 419283518, "node_id": "MDU6SXNzdWU0MTkyODM1MTg=", "number": 319, "title": "Worksheet.update_cells does not update cells.", "user": {"login": "nicker-bocker", "id": 47450169, "node_id": "MDQ6VXNlcjQ3NDUwMTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/47450169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicker-bocker", "html_url": "https://github.com/nicker-bocker", "followers_url": "https://api.github.com/users/nicker-bocker/followers", "following_url": "https://api.github.com/users/nicker-bocker/following{/other_user}", "gists_url": "https://api.github.com/users/nicker-bocker/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicker-bocker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicker-bocker/subscriptions", "organizations_url": "https://api.github.com/users/nicker-bocker/orgs", "repos_url": "https://api.github.com/users/nicker-bocker/repos", "events_url": "https://api.github.com/users/nicker-bocker/events{/privacy}", "received_events_url": "https://api.github.com/users/nicker-bocker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541424767, "node_id": "MDU6TGFiZWw1NDE0MjQ3Njc=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/update%20docs", "name": "update docs", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-11T03:52:29Z", "updated_at": "2019-04-07T07:08:30Z", "closed_at": "2019-04-07T07:08:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Worksheet.update_cells does not update cells.\r\n\r\n**To Reproduce**\r\nThis is reproduced using the documented example. \r\n```\r\nimport pygsheets\r\n\r\nclient = pygsheets.authorize()\r\nsh = client.open('Betting Odds')\r\nwks = sh.sheet1\r\nwks.update_cells('A2:A5',[['name1'],['name2'],['name3'],['name4']])\r\n```\r\n\r\nThe issue is the documentation specifies a string cell value to be passed but the update_cells method expects a list of Cell objects. There is no conversion of the string to a Cell object anywhere so it is raising this error\r\n```\r\nrequest = cell.update(get_request=True, worksheet_id=self.id)\r\nAttributeError: 'str' object has no attribute 'update'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/317", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/317/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/317/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/317", "id": 415761993, "node_id": "MDU6SXNzdWU0MTU3NjE5OTM=", "number": 317, "title": "Allow user to set parameter include_tailing_empty in get_as_df ", "user": {"login": "KevinMars", "id": 8628934, "node_id": "MDQ6VXNlcjg2Mjg5MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8628934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinMars", "html_url": "https://github.com/KevinMars", "followers_url": "https://api.github.com/users/KevinMars/followers", "following_url": "https://api.github.com/users/KevinMars/following{/other_user}", "gists_url": "https://api.github.com/users/KevinMars/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinMars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinMars/subscriptions", "organizations_url": "https://api.github.com/users/KevinMars/orgs", "repos_url": "https://api.github.com/users/KevinMars/repos", "events_url": "https://api.github.com/users/KevinMars/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinMars/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-28T18:27:22Z", "updated_at": "2019-03-02T16:20:38Z", "closed_at": "2019-03-02T16:20:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi from pygsheets for python 2 to 3 there was a change made to include all cells in a sheet even if they are empty. Now in 3, all cells are returned without the ability to set the parameter in get_as_df. Can we add this as a parameter option. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/315", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/315/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/315/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/315", "id": 411635110, "node_id": "MDU6SXNzdWU0MTE2MzUxMTA=", "number": 315, "title": "Unable to set text format \"foregroundColor\"", "user": {"login": "wgordon17", "id": 22222756, "node_id": "MDQ6VXNlcjIyMjIyNzU2", "avatar_url": "https://avatars1.githubusercontent.com/u/22222756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wgordon17", "html_url": "https://github.com/wgordon17", "followers_url": "https://api.github.com/users/wgordon17/followers", "following_url": "https://api.github.com/users/wgordon17/following{/other_user}", "gists_url": "https://api.github.com/users/wgordon17/gists{/gist_id}", "starred_url": "https://api.github.com/users/wgordon17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wgordon17/subscriptions", "organizations_url": "https://api.github.com/users/wgordon17/orgs", "repos_url": "https://api.github.com/users/wgordon17/repos", "events_url": "https://api.github.com/users/wgordon17/events{/privacy}", "received_events_url": "https://api.github.com/users/wgordon17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-18T20:35:08Z", "updated_at": "2019-03-02T16:47:27Z", "closed_at": "2019-03-02T16:46:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nUnable to set a \"foregroundColor\" on a cell\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ncell = ws.cell('A1')\r\ncell.set_text_format('foregroundColor', (0, 255, 0, 255))\r\n\r\n# googleapiclient.errors.HttpError: <HttpError 400 when requesting https://sheets.googleapis.com/v4/spreadsheets/1OhrxYuGIdEnC_60uA7uZDUHX3ynBJ0atSPY-wVD34_Y:batchUpdate?fields=%2A&alt=json returned \"Invalid JSON payload received. Unknown name \"foreground_color\" at 'requests[0].repeat_cell.cell.user_entered_format.text_format': Proto field is not repeating, cannot start list.\">\r\n```\r\n\r\n**System Information**\r\n - OS: MacOS 10.14.3\r\n - pygsheets version : 2.0.0\r\n - pygsheets installed from (github or pypi): pypi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/313", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/313/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/313/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/313", "id": 406840295, "node_id": "MDU6SXNzdWU0MDY4NDAyOTU=", "number": 313, "title": "Service account blocked, captcha required to unblock", "user": {"login": "rhcpfan", "id": 3796970, "node_id": "MDQ6VXNlcjM3OTY5NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3796970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhcpfan", "html_url": "https://github.com/rhcpfan", "followers_url": "https://api.github.com/users/rhcpfan/followers", "following_url": "https://api.github.com/users/rhcpfan/following{/other_user}", "gists_url": "https://api.github.com/users/rhcpfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhcpfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhcpfan/subscriptions", "organizations_url": "https://api.github.com/users/rhcpfan/orgs", "repos_url": "https://api.github.com/users/rhcpfan/repos", "events_url": "https://api.github.com/users/rhcpfan/events{/privacy}", "received_events_url": "https://api.github.com/users/rhcpfan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-05T15:36:23Z", "updated_at": "2019-02-08T11:28:11Z", "closed_at": "2019-02-08T11:28:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have shared the service account credentials file with someone in another country (both working on the same project). He ran the python script that modifies the worksheets just fine. After a few minutes, when I have tried to run it again, I've got an error:\r\n\r\n\"Our systems have detected unusual traffic from your computer network.  This page checks to see if it's really you sending the requests, and not a robot. \"\r\n\r\nHere's the Response (`resp`):\r\n```html\r\n{\r\n    'status': '503', \r\n    'content-length': '3430', \r\n    'x-xss-protection': '1; mode=block',\r\n    'expires': 'Fri, 01 Jan 1990 00:00:00 GMT',\r\n    'server': 'HTTP server (unknown)', \r\n    'pragma': 'no-cache', \r\n    'cache-control': 'no-store, no-cache, must-revalidate',\r\n    'date': 'Tue, 05 Feb 2019 15:13:32 GMT', \r\n    'alt-svc': 'quic=\":443\"; ma=2592000; v=\"44,43,39\"',\r\n    'content-type': 'text/html'\r\n}\r\n``` \r\n\r\nAnd here's the content (that's where I got the error message from):\r\n\r\n```html\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n<html>\r\n<head><meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"><meta name=\"viewport\" content=\"initial-scale=1\"><title>https://sheets.googleapis.com/v4/spreadsheets/1-P6yRD9YOJrusYCJN79TE3XJtY_5cSyN2RT7ybn_cs0?fields=properties%2Csheets%2Fproperties%2CspreadsheetId%2CnamedRanges&amp;alt=json&amp;includeGridData=false</title></head>\r\n<body style=\"font-family: arial, sans-serif; background-color: #fff; color: #000; padding:20px; font-size:18px;\" onload=\"e=document.getElementById('captcha');if(e){e.focus();}\">\r\n<div style=\"max-width:400px;\">\r\n<hr noshade size=\"1\" style=\"color:#ccc; background-color:#ccc;\"><br>\r\n<form id=\"captcha-form\" action=\"index\" method=\"post\">\r\nTo continue, please type the characters below:<br><br>\r\n<img src=\"/sorry/image?id=3034596771474720609&amp;q=EgRSTFVeGJvQ5uIFIhkA8aeDS3CIqr-jMLKSID-7m1L6CSZGPwOxMgFj&amp;hl=en&amp;continue=https://sheets.googleapis.com/v4/spreadsheets/1-P6yRD9YOJrusYCJN79TE3XJtY_5cSyN2RT7ybn_cs0%3Ffields%3Dproperties%252Csheets%252Fproperties%252CspreadsheetId%252CnamedRanges%26alt%3Djson%26includeGridData%3Dfalse\" border=\"1\" alt=\"Please enable images\"><br><br>\r\n<input type=\"text\" name=\"captcha\" value=\"\" id=\"captcha\" size=\"12\" style=\"font-size:16px; padding:3px 0 3px 5px; margin-left:0px;\"><br><br><br>\r\n<input type=\"submit\" name=\"btn-submit\" value=\"Submit\" style=\"font-size:18px; padding:4px 0;\">\r\n<input type='hidden' name='q' value='EgRSTFVeGJvQ5uIFIhkA8aeDS3CIqr-jMLKSID-7m1L6CSZGPwOxMgFj'><input type=\"hidden\" name=\"continue\" value=\"https://sheets.googleapis.com/v4/spreadsheets/1-P6yRD9YOJrusYCJN79TE3XJtY_5cSyN2RT7ybn_cs0?fields=properties%2Csheets%2Fproperties%2CspreadsheetId%2CnamedRanges&amp;alt=json&amp;includeGridData=false\">\r\n</form>\r\n<hr noshade size=\"1\" style=\"color:#ccc; background-color:#ccc;\">\r\n\r\n<div style=\"font-size:13px;\">\r\n<b>About this page</b><br><br>Our systems have detected unusual traffic from your computer network.  This page checks to see if it&#39;s really you sending the requests, and not a robot.  <a href=\"#\" onclick=\"document.getElementById('infoDiv').style.display='block';\">Why did this happen?</a><br><br>\r\n<div id=\"infoDiv\" style=\"display:none; background-color:#eee; padding:10px; margin:0 0 15px 0; line-height:1.4em;\">\r\nThis page appears when Google automatically detects requests coming from your computer network which appear to be in violation of the <a href=\"//www.google.com/policies/terms/\">Terms of Service</a>. The block will expire shortly after those requests stop.  In the meantime, solving the above CAPTCHA will let you continue to use our services.<br><br>This traffic may have been sent by malicious software, a browser plug-in, or a script that sends automated requests.  If you share your network connection, ask your administrator for help &mdash; a different computer using the same IP address may be responsible.  <a href=\"//support.google.com/websearch/answer/86640\">Learn more</a><br><br>Sometimes you may be asked to solve the CAPTCHA if you are using advanced terms that robots are known to use, or sending requests very quickly.\r\n</div>\r\n\r\nIP address: MY_IP_ADDRESS<br>Time: 2019-02-05T15:13:32Z<br>URL: https://sheets.googleapis.com/v4/spreadsheets/1-P6yRD9YOJrusYCJN79TE3XJtY_5cSyN2RT7ybn_cs0?fields=properties%2Csheets%2Fproperties%2CspreadsheetId%2CnamedRanges&amp;alt=json&amp;includeGridData=false<br>\r\n</div>\r\n</div>\r\n</body>\r\n</html>\r\n```\r\n\r\nHow can I avoid this in the future? Is it possible to add support for filling out the reCAPTCHA and unblocking the trafic?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/311", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/311/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/311/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/311", "id": 401665880, "node_id": "MDU6SXNzdWU0MDE2NjU4ODA=", "number": 311, "title": "object has no attribute 'before_request'", "user": {"login": "robsgithub", "id": 9369366, "node_id": "MDQ6VXNlcjkzNjkzNjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9369366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robsgithub", "html_url": "https://github.com/robsgithub", "followers_url": "https://api.github.com/users/robsgithub/followers", "following_url": "https://api.github.com/users/robsgithub/following{/other_user}", "gists_url": "https://api.github.com/users/robsgithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/robsgithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robsgithub/subscriptions", "organizations_url": "https://api.github.com/users/robsgithub/orgs", "repos_url": "https://api.github.com/users/robsgithub/repos", "events_url": "https://api.github.com/users/robsgithub/events{/privacy}", "received_events_url": "https://api.github.com/users/robsgithub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-22T09:15:07Z", "updated_at": "2019-01-22T09:41:19Z", "closed_at": "2019-01-22T09:40:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/309", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/309/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/309/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/309", "id": 400465014, "node_id": "MDU6SXNzdWU0MDA0NjUwMTQ=", "number": 309, "title": "Import error - on google apps", "user": {"login": "2anoopgeorge", "id": 6397137, "node_id": "MDQ6VXNlcjYzOTcxMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6397137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2anoopgeorge", "html_url": "https://github.com/2anoopgeorge", "followers_url": "https://api.github.com/users/2anoopgeorge/followers", "following_url": "https://api.github.com/users/2anoopgeorge/following{/other_user}", "gists_url": "https://api.github.com/users/2anoopgeorge/gists{/gist_id}", "starred_url": "https://api.github.com/users/2anoopgeorge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2anoopgeorge/subscriptions", "organizations_url": "https://api.github.com/users/2anoopgeorge/orgs", "repos_url": "https://api.github.com/users/2anoopgeorge/repos", "events_url": "https://api.github.com/users/2anoopgeorge/events{/privacy}", "received_events_url": "https://api.github.com/users/2anoopgeorge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-17T21:12:01Z", "updated_at": "2019-02-05T17:21:42Z", "closed_at": "2019-02-05T17:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n**Describe the bug**\r\nPython Code with pygsheets is working fine locally and google sheet is getting updated fine. But getting an error while it\u2019s moved to google apps site. It\u2019s uanble to import the ,double enum\r\n\r\nImportError: No module named enum  \r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ncode here ...\r\n# see error\r\n\r\n (/base/alloc/tmpfs/dynamic_runtimes/python27g/350d926c06a7e859/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py:263)\r\nTraceback (most recent call last):\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/350d926c06a7e859/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 240, in Handle\r\n    handler = _config_handle.add_wsgi_middleware(self._LoadHandler())\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/350d926c06a7e859/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 299, in _LoadHandler\r\n    handler, path, err = LoadObject(self._handler)\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/350d926c06a7e859/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 85, in LoadObject\r\n    obj = __import__(path[0])\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/main.py\", line 6, in <module>\r\n    import pygsheets\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/lib/pygsheets/__init__.py\", line 14, in <module>\r\n    from pygsheets.authorization import authorize\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/lib/pygsheets/authorization.py\", line 10, in <module>\r\n    from pygsheets.client import Client\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/lib/pygsheets/client.py\", line 8, in <module>\r\n    from pygsheets.drive import DriveAPIWrapper\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/lib/pygsheets/drive.py\", line 1, in <module>\r\n    from pygsheets.spreadsheet import Spreadsheet\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/lib/pygsheets/spreadsheet.py\", line 14, in <module>\r\n    from pygsheets.worksheet import Worksheet\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/lib/pygsheets/worksheet.py\", line 16, in <module>\r\n    from pygsheets.cell import Cell\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/lib/pygsheets/cell.py\", line 11, in <module>\r\n    from pygsheets.custom_types import *\r\n  File \"/base/data/home/apps/j~indane-inventory/20190117t063637.415464278070815935/lib/pygsheets/custom_types.py\", line 11, in <module>\r\n    from enum import Enum\r\nImportError: No module named enum  \r\n```\r\n\r\n**System Information**\r\n - OS: [e.g. iOS]\r\n - pygsheets version :\r\n - pygsheets installed from (github or pypi):\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/307", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/307/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/307/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/307", "id": 397498032, "node_id": "MDU6SXNzdWUzOTc0OTgwMzI=", "number": 307, "title": "Set Proxy?", "user": {"login": "waltonereed", "id": 25827972, "node_id": "MDQ6VXNlcjI1ODI3OTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/25827972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waltonereed", "html_url": "https://github.com/waltonereed", "followers_url": "https://api.github.com/users/waltonereed/followers", "following_url": "https://api.github.com/users/waltonereed/following{/other_user}", "gists_url": "https://api.github.com/users/waltonereed/gists{/gist_id}", "starred_url": "https://api.github.com/users/waltonereed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waltonereed/subscriptions", "organizations_url": "https://api.github.com/users/waltonereed/orgs", "repos_url": "https://api.github.com/users/waltonereed/repos", "events_url": "https://api.github.com/users/waltonereed/events{/privacy}", "received_events_url": "https://api.github.com/users/waltonereed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-09T18:28:03Z", "updated_at": "2019-07-26T20:14:24Z", "closed_at": "2019-07-26T20:14:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm trying to run the library behind my corporate firewall and am getting issues. IT says if I change the proxy it should work (and indeed my script works fine when I'm off my corporate network). \r\n\r\nIs there a simple implementation of this or do I need to go into the source code and change things?\r\nThanks!\r\nWalt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/306", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/306/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/306/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/306", "id": 396223789, "node_id": "MDU6SXNzdWUzOTYyMjM3ODk=", "number": 306, "title": "Open spreadsheet by id", "user": {"login": "wookayin", "id": 1009873, "node_id": "MDQ6VXNlcjEwMDk4NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1009873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wookayin", "html_url": "https://github.com/wookayin", "followers_url": "https://api.github.com/users/wookayin/followers", "following_url": "https://api.github.com/users/wookayin/following{/other_user}", "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}", "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions", "organizations_url": "https://api.github.com/users/wookayin/orgs", "repos_url": "https://api.github.com/users/wookayin/repos", "events_url": "https://api.github.com/users/wookayin/events{/privacy}", "received_events_url": "https://api.github.com/users/wookayin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-06T03:18:10Z", "updated_at": "2019-01-06T03:20:48Z", "closed_at": "2019-01-06T03:20:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "It doesn't make sense `gc.open()` only supports open sheet by title. It should support opening by spreadsheet ID (as in `gspread`, etc.) as well, since it is the only reliable unique key.\r\n\r\ne.g.\r\n\r\n```\r\ngc.open(title_or_id)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/304", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/304/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/304/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/304", "id": 395216416, "node_id": "MDU6SXNzdWUzOTUyMTY0MTY=", "number": 304, "title": "sh_batch_update removed from client", "user": {"login": "luciusb", "id": 5671518, "node_id": "MDQ6VXNlcjU2NzE1MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5671518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luciusb", "html_url": "https://github.com/luciusb", "followers_url": "https://api.github.com/users/luciusb/followers", "following_url": "https://api.github.com/users/luciusb/following{/other_user}", "gists_url": "https://api.github.com/users/luciusb/gists{/gist_id}", "starred_url": "https://api.github.com/users/luciusb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luciusb/subscriptions", "organizations_url": "https://api.github.com/users/luciusb/orgs", "repos_url": "https://api.github.com/users/luciusb/repos", "events_url": "https://api.github.com/users/luciusb/events{/privacy}", "received_events_url": "https://api.github.com/users/luciusb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-02T11:15:31Z", "updated_at": "2019-03-07T10:00:46Z", "closed_at": "2019-01-02T13:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note, if this is a usage question, please ask a question in stackoverflow with `pygsheets` tag.\r\n\r\n**Describe the bug**\r\ncustom_request is not working because sh_batch_update is not in client.py\r\n\r\n**To Reproduce**\r\nAny call to custom_request will fail\r\n\r\n**System Information**\r\n - OS: linux, windows\r\n - pygsheets version : 2.0\r\n - pygsheets installed from (github or pypi): github\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/303", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/303/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/303/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/303", "id": 387953139, "node_id": "MDU6SXNzdWUzODc5NTMxMzk=", "number": 303, "title": "append_table adds cells before row values", "user": {"login": "osjerick", "id": 8047984, "node_id": "MDQ6VXNlcjgwNDc5ODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8047984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osjerick", "html_url": "https://github.com/osjerick", "followers_url": "https://api.github.com/users/osjerick/followers", "following_url": "https://api.github.com/users/osjerick/following{/other_user}", "gists_url": "https://api.github.com/users/osjerick/gists{/gist_id}", "starred_url": "https://api.github.com/users/osjerick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osjerick/subscriptions", "organizations_url": "https://api.github.com/users/osjerick/orgs", "repos_url": "https://api.github.com/users/osjerick/repos", "events_url": "https://api.github.com/users/osjerick/events{/privacy}", "received_events_url": "https://api.github.com/users/osjerick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-05T21:27:50Z", "updated_at": "2018-12-07T03:48:52Z", "closed_at": "2018-12-07T03:48:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to append rows (using a for loop) to an existing spreadsheet using `append_table`. The rows have these values:\r\n```\r\nrows = [['2018-12-05 08:05:25 UTC', 'software', 'Basic Tax Software', 29.95, 19.95, '', '', '', ''],\r\n['2018-12-05 08:05:25 UTC', 'software', 'Deluxe Tax Software', 54.95, 44.95, '', '', '', ''],\r\n['2018-12-05 08:05:25 UTC', 'software', 'Premium Tax Software', 74.95, 64.95, '', '', '', ''],\r\n['2018-12-05 08:05:25 UTC', 'software', 'Premium & Business', 89.95, 79.95, '', '', '', ''],\r\n['2018-12-05 17:41:19 UTC', 'online', 'Self-Employed', 119.99, 89.99, '', 39.99, '', ''],\r\n['2018-12-05 17:41:19 UTC', 'online', 'Deluxe', 59.99, 39.99, '', 39.99, '', ''],\r\n['2018-12-05 17:41:19 UTC', 'online', 'Live Deluxe', 119.99, 89.99, '', 39.99, '', ''],\r\n['2018-12-05 17:41:19 UTC', 'online', 'Live Premier', 169.99, 139.99, '', 39.99, '', ''],\r\n['2018-12-05 17:41:19 UTC', 'online', 'Premier', 79.99, 59.99, '', 39.99, '', ''],\r\n['2018-12-05 17:41:19 UTC', 'online', 'Live Basic', 79.99, 49.99, '', 29.99, '', ''],\r\n['2018-12-05 17:41:19 UTC', 'online', 'Live Self-Employed', 199.99, 169.99, '', 39.99, '', '']]\r\n```\r\nThe problem I have is that for an empty worksheet several of the firsts rows are rendered with some blank self before values. What is the possible cause of this?\r\n![screenshot_2018-12-05 untitled spreadsheet](https://user-images.githubusercontent.com/8047984/49545016-cd7a1f80-f8b2-11e8-96ba-18f05a2c7ec2.png)\r\n![screenshot_2018-12-05 untitled spreadsheet 1](https://user-images.githubusercontent.com/8047984/49545019-d4089700-f8b2-11e8-972a-42880865878b.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/302", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/302/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/302/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/302", "id": 386928057, "node_id": "MDU6SXNzdWUzODY5MjgwNTc=", "number": 302, "title": "date_time_render has wrong default, and is not available as a parameter", "user": {"login": "traynier", "id": 5870896, "node_id": "MDQ6VXNlcjU4NzA4OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5870896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traynier", "html_url": "https://github.com/traynier", "followers_url": "https://api.github.com/users/traynier/followers", "following_url": "https://api.github.com/users/traynier/following{/other_user}", "gists_url": "https://api.github.com/users/traynier/gists{/gist_id}", "starred_url": "https://api.github.com/users/traynier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traynier/subscriptions", "organizations_url": "https://api.github.com/users/traynier/orgs", "repos_url": "https://api.github.com/users/traynier/repos", "events_url": "https://api.github.com/users/traynier/events{/privacy}", "received_events_url": "https://api.github.com/users/traynier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-03T17:37:49Z", "updated_at": "2018-12-04T09:09:57Z", "closed_at": "2018-12-04T08:54:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nwks.get_range documentation says that `\"The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER\"`.  But it isn't, its FORMATTED_STRING (as a default on Client.get_range in client.py line 185).\r\n\r\nI cannot see any functions where I can optionally provide a DateTimeRenderOption, and hence:\r\n\r\n\r\n**Related feature request**\r\nAs a aside to this, I ideally need the ability to switch between DateTimeRenderOptions on the various worksheet get_value/get_values/get_all_values functions. \r\n\r\ne.g. I would like to call:\r\n\r\n```\r\nwks.get_all_values(include_tailing_empty=False, include_tailing_empty_rows=False, value_render='UNFORMATTED_VALUE', date_time_render='SERIAL_NUMBER')\r\n```\r\n\r\nbut date_time_render is not implemented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/301", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/301/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/301/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/301", "id": 386729998, "node_id": "MDU6SXNzdWUzODY3Mjk5OTg=", "number": 301, "title": "share method is not supported email with '_'(underscore)", "user": {"login": "JIhan-Jin", "id": 40973632, "node_id": "MDQ6VXNlcjQwOTczNjMy", "avatar_url": "https://avatars3.githubusercontent.com/u/40973632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JIhan-Jin", "html_url": "https://github.com/JIhan-Jin", "followers_url": "https://api.github.com/users/JIhan-Jin/followers", "following_url": "https://api.github.com/users/JIhan-Jin/following{/other_user}", "gists_url": "https://api.github.com/users/JIhan-Jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/JIhan-Jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JIhan-Jin/subscriptions", "organizations_url": "https://api.github.com/users/JIhan-Jin/orgs", "repos_url": "https://api.github.com/users/JIhan-Jin/repos", "events_url": "https://api.github.com/users/JIhan-Jin/events{/privacy}", "received_events_url": "https://api.github.com/users/JIhan-Jin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-03T09:34:47Z", "updated_at": "2018-12-04T11:08:56Z", "closed_at": "2018-12-04T08:54:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nShare method is not supported email with '_'(underscore).\r\nBut Google Drive Rest API supports to email with '_'(underscore).\r\n\r\nIt works well if there is no underscore,\r\nin the opposite case, an exception occurs.\r\n\r\nCheck Please.\r\nThanks :)\r\n\r\n[Version]\r\n- 2.0.0, 1.1.4\r\n\r\n[Example Code]\r\ngsheets = pygsheets.authorize()\r\nspreadsheet = gsheets.open_by_key(spreadsheet_key)\r\nspreadsheets.share('test_underscore@example.com', 'writer') # execption occurs\r\n\r\n[Exception - v2.0.0]\r\npygsheets.exceptions.InvalidArgumentValue: The provided e-mail address doesn't have a valid format: test_underscore@example.com.\r\n\r\n[Cause]\r\nin 'drive.py'\r\n_EMAIL_PATTERN = re.compile(r\"\\\"?([-a-zA-Z0-9.`?{}]+@[-a-zA-Z0-9.]+\\.\\w+)\\\"?\")", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/300", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/300/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/300/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/300", "id": 384906686, "node_id": "MDU6SXNzdWUzODQ5MDY2ODY=", "number": 300, "title": "IndexError: list index out of range with team drive enabled", "user": {"login": "jgillies", "id": 5216684, "node_id": "MDQ6VXNlcjUyMTY2ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5216684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgillies", "html_url": "https://github.com/jgillies", "followers_url": "https://api.github.com/users/jgillies/followers", "following_url": "https://api.github.com/users/jgillies/following{/other_user}", "gists_url": "https://api.github.com/users/jgillies/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgillies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgillies/subscriptions", "organizations_url": "https://api.github.com/users/jgillies/orgs", "repos_url": "https://api.github.com/users/jgillies/repos", "events_url": "https://api.github.com/users/jgillies/events{/privacy}", "received_events_url": "https://api.github.com/users/jgillies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-27T17:29:34Z", "updated_at": "2018-11-28T15:09:23Z", "closed_at": "2018-11-28T15:09:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\nI get the follow exception when trying to create a file in a Team Drives folder:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 5, in <module>\r\n    sh = gc.create('test', folder='[folder_id]')\r\n  File \"/Users/blah/.local/share/virtualenvs/pandas-qv6ELgRA/lib/python3.7/site-packages/pygsheets/client.py\", line 98, in create\r\n    old_folder=self.drive.spreadsheet_metadata(query=\"name = '\" + title + \"'\")[0]['parents'][0],\r\nIndexError: list index out of range\r\n```\r\nWhen I don't specify the folder, but keep Team Drives enabled, the file is created in my own drive.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nimport pygsheets\r\n\r\ngc = pygsheets.authorize()\r\ngc.drive.enable_team_drive('[team_drive_id]')\r\nsh = gc.create('test', folder='[folder_id]')\r\n\r\n```\r\n\r\nTeam Drive ID is taken from here: `https://drive.google.com/drive/u/0/folders/[team_drive_id]?ogsrc=32`\r\nFolder ID is take from here: `https://drive.google.com/drive/u/0/folders/[folder_id]?ogsrc=32`\r\n\r\n**System Information**\r\n - OS: OSX\r\n - pygsheets version : 2.0.0\r\n - pygsheets installed from (github or pypi): github", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/299", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/299/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/299/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/299", "id": 383946238, "node_id": "MDU6SXNzdWUzODM5NDYyMzg=", "number": 299, "title": "Efficient Batch Formatting", "user": {"login": "Djones4822", "id": 416715, "node_id": "MDQ6VXNlcjQxNjcxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Djones4822", "html_url": "https://github.com/Djones4822", "followers_url": "https://api.github.com/users/Djones4822/followers", "following_url": "https://api.github.com/users/Djones4822/following{/other_user}", "gists_url": "https://api.github.com/users/Djones4822/gists{/gist_id}", "starred_url": "https://api.github.com/users/Djones4822/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Djones4822/subscriptions", "organizations_url": "https://api.github.com/users/Djones4822/orgs", "repos_url": "https://api.github.com/users/Djones4822/repos", "events_url": "https://api.github.com/users/Djones4822/events{/privacy}", "received_events_url": "https://api.github.com/users/Djones4822/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-11-24T00:40:51Z", "updated_at": "2019-04-07T07:11:40Z", "closed_at": "2019-04-07T07:11:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on creating a sheet where I dump a dataset in and then format the rows to a certain color based on column attributes. I've found that I don't have a \"great\" solution for the whole-row formatting option. \r\n\r\nwithin the worksheet object there should be a way to apply format rules by arbitrary label sets and handle the updates with as few calls as possible.\r\n\r\nRight now I've written each of my \"Format types\" into a custom request and pass them that way, am I missing something easier? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/297", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/297/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/297/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/297", "id": 381078763, "node_id": "MDU6SXNzdWUzODEwNzg3NjM=", "number": 297, "title": "duplicate gsheet at home and specified folder", "user": {"login": "ellenpramana", "id": 10649940, "node_id": "MDQ6VXNlcjEwNjQ5OTQw", "avatar_url": "https://avatars2.githubusercontent.com/u/10649940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellenpramana", "html_url": "https://github.com/ellenpramana", "followers_url": "https://api.github.com/users/ellenpramana/followers", "following_url": "https://api.github.com/users/ellenpramana/following{/other_user}", "gists_url": "https://api.github.com/users/ellenpramana/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellenpramana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellenpramana/subscriptions", "organizations_url": "https://api.github.com/users/ellenpramana/orgs", "repos_url": "https://api.github.com/users/ellenpramana/repos", "events_url": "https://api.github.com/users/ellenpramana/events{/privacy}", "received_events_url": "https://api.github.com/users/ellenpramana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nithinmurali/pygsheets/milestones/4", "html_url": "https://github.com/nithinmurali/pygsheets/milestone/4", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/milestones/4/labels", "id": 3823988, "node_id": "MDk6TWlsZXN0b25lMzgyMzk4OA==", "number": 4, "title": "1.1.5", "description": "Bug fixes in 1.1.4", "creator": {"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2018-11-15T10:24:55Z", "updated_at": "2019-04-07T07:16:59Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2018-11-15T09:46:51Z", "updated_at": "2019-04-07T07:16:59Z", "closed_at": "2019-04-07T07:16:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to create a gsheet on specific folder, it create double files. One in the give specific folder (based on the specified parent id), the other at the home drive. Is there a way to create only 1 in the specific folder? \r\n\r\nimport pygsheets\r\ngc = pygsheets.authorize(outh_file=CLIENT_SECRETS)\r\nsheet = gc.create('try', parent_id = 'xxx')\r\n\r\nThank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/296", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/296/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/296/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/296", "id": 380118659, "node_id": "MDU6SXNzdWUzODAxMTg2NTk=", "number": 296, "title": "Why do we get the values of all rows and return to the first row only?", "user": {"login": "QiuZz2", "id": 43123103, "node_id": "MDQ6VXNlcjQzMTIzMTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/43123103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QiuZz2", "html_url": "https://github.com/QiuZz2", "followers_url": "https://api.github.com/users/QiuZz2/followers", "following_url": "https://api.github.com/users/QiuZz2/following{/other_user}", "gists_url": "https://api.github.com/users/QiuZz2/gists{/gist_id}", "starred_url": "https://api.github.com/users/QiuZz2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QiuZz2/subscriptions", "organizations_url": "https://api.github.com/users/QiuZz2/orgs", "repos_url": "https://api.github.com/users/QiuZz2/repos", "events_url": "https://api.github.com/users/QiuZz2/events{/privacy}", "received_events_url": "https://api.github.com/users/QiuZz2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 553277238, "node_id": "MDU6TGFiZWw1NTMyNzcyMzg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/cant%20reproduce", "name": "cant reproduce", "color": "ed8863", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-13T08:53:17Z", "updated_at": "2018-12-07T03:51:58Z", "closed_at": "2018-12-07T03:51:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nCampaignName\r\n--\r\nJP-PLASC-RLSA-Bedding\r\nJP-RM-image-Brand\r\nJP-RM-PFC-Bedding\r\nJP-Search-Bedding\r\nJP-PLASC-Others\r\n\r\nThis is the value in the form.\r\n------------------------------------------------------------\r\nimport pygsheets\r\n\r\n#authorization\r\ngc = pygsheets.authorize(service_file='googleads-4dfbc3b2c43d.json')\r\nsh = gc.open('Google_Ads')\r\nwks = sh.sheet1\r\nprint wks\r\nprint wks.get_row(1)\r\nprint wks.get_row(2)\r\nprint wks.get_row(3)\r\nprint wks.get_row(4)\r\n\r\n------------------------------------------------------------\r\nThe value of the third row is empty.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/295", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/295/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/295/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/295", "id": 379879684, "node_id": "MDU6SXNzdWUzNzk4Nzk2ODQ=", "number": 295, "title": "Get raw cell information", "user": {"login": "Rizhiy", "id": 5617397, "node_id": "MDQ6VXNlcjU2MTczOTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5617397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rizhiy", "html_url": "https://github.com/Rizhiy", "followers_url": "https://api.github.com/users/Rizhiy/followers", "following_url": "https://api.github.com/users/Rizhiy/following{/other_user}", "gists_url": "https://api.github.com/users/Rizhiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rizhiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rizhiy/subscriptions", "organizations_url": "https://api.github.com/users/Rizhiy/orgs", "repos_url": "https://api.github.com/users/Rizhiy/repos", "events_url": "https://api.github.com/users/Rizhiy/events{/privacy}", "received_events_url": "https://api.github.com/users/Rizhiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541424767, "node_id": "MDU6TGFiZWw1NDE0MjQ3Njc=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/update%20docs", "name": "update docs", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-12T17:28:40Z", "updated_at": "2018-11-14T06:09:19Z", "closed_at": "2018-11-13T14:29:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI need to get raw cell information, i.e. if a cell has a formula, then I need to get a formula of that cell.\r\n\r\n**Describe the solution you'd like**\r\nI would like either a separate function in worksheet or ideally a new attribute for cell named something like `raw_content`, e.g.\r\n```python\r\ncell = worksheet.cell((x, y))\r\nprint(cell.raw_content)\r\n\r\n# =AVERAGE(C3:D3)\r\n```\r\n\r\nor the one I'm more interested in\r\n```python\r\ncell = worksheet.cell((x, y))\r\nprint(cell.raw_content)\r\n\r\n# =HYPERLINK(\"https://github.com/nithinmurali/pygsheets/issues/295\",\"issue\")\r\n```\r\n\r\n**Any other info**\r\nWould also be nice to have comments and other information.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/294", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/294/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/294/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/294", "id": 378690950, "node_id": "MDU6SXNzdWUzNzg2OTA5NTA=", "number": 294, "title": "Update cells  range in row", "user": {"login": "dimkoug", "id": 12394516, "node_id": "MDQ6VXNlcjEyMzk0NTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/12394516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimkoug", "html_url": "https://github.com/dimkoug", "followers_url": "https://api.github.com/users/dimkoug/followers", "following_url": "https://api.github.com/users/dimkoug/following{/other_user}", "gists_url": "https://api.github.com/users/dimkoug/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimkoug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimkoug/subscriptions", "organizations_url": "https://api.github.com/users/dimkoug/orgs", "repos_url": "https://api.github.com/users/dimkoug/repos", "events_url": "https://api.github.com/users/dimkoug/events{/privacy}", "received_events_url": "https://api.github.com/users/dimkoug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T11:29:58Z", "updated_at": "2018-11-08T12:42:54Z", "closed_at": "2018-11-08T12:42:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nCan't update cell values in a row\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nwks_sheet = Worksheet object\r\nwks_sheet.update_values(crange='D2:E2', values=[[1],[2]],majordim='ROWS')\r\n```\r\ncode here ...\r\nTraceback (most recent call last):\r\n  File \"quickstart.py\", line 204, in <module>\r\n    get_data(data, gc, months)\r\n  File \"quickstart.py\", line 118, in get_data\r\n    wks_sheet.update_values(crange='D2:E2', values=[[1],[2]],majordim='ROWS')\r\n  File \"/home/dimitris/googlesheets/env/src/pygsheets/pygsheets/worksheet.py\", line 618, in update_values\r\n    self.client.sheet.values_batch_update(self.spreadsheet.id, body, parse)\r\n  File \"/home/dimitris/googlesheets/env/src/pygsheets/pygsheets/sheet.py\", line 273, in values_batch_update\r\n    self._execute_requests(request)\r\n  File \"/home/dimitris/googlesheets/env/src/pygsheets/pygsheets/sheet.py\", line 351, in _execute_requests\r\n    response = request.execute(num_retries=self.retries)\r\n  File \"/home/dimitris/googlesheets/env/lib/python3.6/site-packages/googleapiclient/_helpers.py\", line 130, in positional_wrapper\r\n    return wrapped(*args, **kwargs)\r\n\r\n\r\n\r\n```\r\n\r\n**System Information**\r\n - OS: Ubuntu\r\n - pygsheets version : latest github version\r\n - pygsheets installed from (github or pypi): github\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/293", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/293/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/293/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/293", "id": 378632782, "node_id": "MDU6SXNzdWUzNzg2MzI3ODI=", "number": 293, "title": "Update range cells", "user": {"login": "dimkoug", "id": 12394516, "node_id": "MDQ6VXNlcjEyMzk0NTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/12394516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimkoug", "html_url": "https://github.com/dimkoug", "followers_url": "https://api.github.com/users/dimkoug/followers", "following_url": "https://api.github.com/users/dimkoug/following{/other_user}", "gists_url": "https://api.github.com/users/dimkoug/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimkoug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimkoug/subscriptions", "organizations_url": "https://api.github.com/users/dimkoug/orgs", "repos_url": "https://api.github.com/users/dimkoug/repos", "events_url": "https://api.github.com/users/dimkoug/events{/privacy}", "received_events_url": "https://api.github.com/users/dimkoug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T08:52:07Z", "updated_at": "2018-11-08T10:44:19Z", "closed_at": "2018-11-08T10:44:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen i want to update a range of cells i get AttributeError\r\n\r\n```\r\ncode here ...\r\n# Traceback (most recent call last):\r\n  File \"quickstart.py\", line 203, in <module>\r\n    get_data(data, gc, months)\r\n  File \"quickstart.py\", line 117, in get_data\r\n    wks_sheet.update_cells('d2:aj2', dates)\r\n  File \"/home/dimitris/googlesheets/env/src/pygsheets/pygsheets/worksheet.py\", line 639, in update_cells\r\n    request = cell.update(get_request=True, worksheet_id=self.id)\r\nAttributeError: 'str' object has no attribute 'update'\r\n\r\n```\r\n\r\n**System Information**\r\n - OS: Ubuntu\r\n - pygsheets version : latest clone from repository\r\n - pygsheets installed from (github or pypi): github\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/292", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/292/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/292/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/292", "id": 377901810, "node_id": "MDU6SXNzdWUzNzc5MDE4MTA=", "number": 292, "title": "Invalid link to readthedocs", "user": {"login": "mithunmanohar", "id": 10810426, "node_id": "MDQ6VXNlcjEwODEwNDI2", "avatar_url": "https://avatars0.githubusercontent.com/u/10810426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mithunmanohar", "html_url": "https://github.com/mithunmanohar", "followers_url": "https://api.github.com/users/mithunmanohar/followers", "following_url": "https://api.github.com/users/mithunmanohar/following{/other_user}", "gists_url": "https://api.github.com/users/mithunmanohar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mithunmanohar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mithunmanohar/subscriptions", "organizations_url": "https://api.github.com/users/mithunmanohar/orgs", "repos_url": "https://api.github.com/users/mithunmanohar/repos", "events_url": "https://api.github.com/users/mithunmanohar/events{/privacy}", "received_events_url": "https://api.github.com/users/mithunmanohar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541424767, "node_id": "MDU6TGFiZWw1NDE0MjQ3Njc=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/update%20docs", "name": "update docs", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-06T15:35:26Z", "updated_at": "2018-11-12T18:24:19Z", "closed_at": "2018-11-12T18:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Obtain OAuth2 credentials from Google Developers Console for google spreadsheet api and drive api and save the file as client_secret.json in same directory as project. https://pygsheets.readthedocs.io/en/latest/authorizing.html the link says page do not exists. Can you please include the correct link.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/291", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/291/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/291/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/291", "id": 372796659, "node_id": "MDU6SXNzdWUzNzI3OTY2NTk=", "number": 291, "title": "SSLError: [SSL: DECRYPTION_FAILED_OR_BAD_RECORD_MAC] decryption failed or bad record mac", "user": {"login": "engrumaraftab", "id": 42495933, "node_id": "MDQ6VXNlcjQyNDk1OTMz", "avatar_url": "https://avatars2.githubusercontent.com/u/42495933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/engrumaraftab", "html_url": "https://github.com/engrumaraftab", "followers_url": "https://api.github.com/users/engrumaraftab/followers", "following_url": "https://api.github.com/users/engrumaraftab/following{/other_user}", "gists_url": "https://api.github.com/users/engrumaraftab/gists{/gist_id}", "starred_url": "https://api.github.com/users/engrumaraftab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/engrumaraftab/subscriptions", "organizations_url": "https://api.github.com/users/engrumaraftab/orgs", "repos_url": "https://api.github.com/users/engrumaraftab/repos", "events_url": "https://api.github.com/users/engrumaraftab/events{/privacy}", "received_events_url": "https://api.github.com/users/engrumaraftab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-10-23T03:50:55Z", "updated_at": "2018-11-12T18:30:17Z", "closed_at": "2018-11-12T18:30:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a python script which uses pygsheets to connect to gsheet. The script runs quite well on the Windows Server but throws an exception 'SSLError: [SSL: DECRYPTION_FAILED_OR_BAD_RECORD_MAC] decryption failed or bad record mac' when running on Ubuntu.\r\n`````import pygsheets\r\nfrom oauth2client.service_account import ServiceAccountCredentials\r\n\r\nscope = [\r\n        'https://spreadsheets.google.com/feeds',\r\n        'https://www.googleapis.com/auth/drive'\r\n         ]\r\n\r\ncredentials01 = ServiceAccountCredentials.from_json_keyfile_name('creds01.json', scope)\r\ncredentials02 = ServiceAccountCredentials.from_json_keyfile_name('creds02.json', scope)\r\n\r\nfile01 = pygsheets.authorize(credentials=credentials01)\r\nfile02 = pygsheets.authorize(credentials=credentials02)\r\nwb01 = file01.open('Database System 2')\r\nwb02 = file02.open('Database System 2')\r\n\r\nif __name__ == '__main__':\r\n    manager = multiprocessing.Manager()\r\n    output_dfs = manager.list()\r\n    new_dfs_dict = manager.dict()\r\n    for l in main_list:\r\n        for i in range(0, len(l[0]), 5):\r\n            processes = []\r\n            ids_sublist = []\r\n            for j in range(i, i + 5):\r\n                try:\r\n                    ids_sublist.append(l[0][j])\r\n                except:\r\n                    pass\r\n            for ID in ids_sublist:\r\n                processes.append(multiprocessing.Process(target=fetch_data, args=(ID, start_date, end_date, new_dfs_dict, output_dfs)))\r\n            for p in processes:\r\n                p.start()\r\n            for p in processes:\r\n                p.join()\r\n\r\n        for ID in l[0]:\r\n            if not l[1].empty:\r\n                cols_list = list(l[2][ID].columns)\r\n                cols_list.remove('Type')\r\n                cols_list[1:1] = ['Type']\r\n                l[2][ID] = l[2][ID][cols_list]\r\n                l[2][ID].update(new_dfs_dict[ID])\r\n                l[2][ID] = pd.merge(l[2][ID], new_dfs_dict[ID])\r\n            else:\r\n                l[2][ID] = new_dfs_dict[ID]\r\n        ready_to_set_df = pd.DataFrame()\r\n        for ID in l[2]:\r\n            ready_to_set_df = pd.concat([ready_to_set_df, l[2][ID]], sort=False)\r\n            output_sheet = wb01.worksheet_by_title(l[3])            \r\n            output_sheet.clear()\r\n            output_sheet.set_dataframe(ready_to_set_df.fillna(0), 'A1')\r\n\r\n    output_df = pd.DataFrame(columns=bank_portal_data_header)\r\n    for df in output_dfs:\r\n        output_df = output_df.append(df)\r\n    try:\r\n        data_sheet = wb02.worksheet_by_title(end_date)\r\n        data_df = data_sheet.get_as_df(has_header=True)\r\n        output_df = data_df[bank_portal_data_header].append(output_df)\r\n        output_df = output_df.drop_duplicates(keep=False)\r\n        data_sheet.clear()\r\n        data_sheet.set_dataframe(output_df, 'A1', copy_head=True)\r\n    except:\r\n        data_sheet = wb02.add_worksheet(end_date)\r\n        data_sheet.set_dataframe(output_df, 'A1', copy_head=True)`````\r\n\r\nIt first threw the exception at the line data_sheet.clear().\r\nWhen I commented out this statement, it was at the next line data_sheet.set_dataframe(output_df, 'A1', copy_head=True)\r\n\r\nPlease help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/290", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/290/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/290/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/290", "id": 372220485, "node_id": "MDU6SXNzdWUzNzIyMjA0ODU=", "number": 290, "title": "Dependency oauth2client is missing when installing from pip", "user": {"login": "MarkBird", "id": 3542507, "node_id": "MDQ6VXNlcjM1NDI1MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3542507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkBird", "html_url": "https://github.com/MarkBird", "followers_url": "https://api.github.com/users/MarkBird/followers", "following_url": "https://api.github.com/users/MarkBird/following{/other_user}", "gists_url": "https://api.github.com/users/MarkBird/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkBird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkBird/subscriptions", "organizations_url": "https://api.github.com/users/MarkBird/orgs", "repos_url": "https://api.github.com/users/MarkBird/repos", "events_url": "https://api.github.com/users/MarkBird/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkBird/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nithinmurali/pygsheets/milestones/4", "html_url": "https://github.com/nithinmurali/pygsheets/milestone/4", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/milestones/4/labels", "id": 3823988, "node_id": "MDk6TWlsZXN0b25lMzgyMzk4OA==", "number": 4, "title": "1.1.5", "description": "Bug fixes in 1.1.4", "creator": {"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2018-11-15T10:24:55Z", "updated_at": "2019-04-07T07:16:59Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2018-10-20T15:05:04Z", "updated_at": "2018-12-11T10:00:53Z", "closed_at": "2018-12-11T10:00:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nInstalling version 1.1.4 via pip does not install the oauth2client dependency. client.py has multiple references to oauth2client\r\n\r\n**To Reproduce**\r\npip install pygsheets\r\n\r\n**System Information**\r\n - OS: Windows 10\r\n - pygsheets version : 1.1.4\r\n - pygsheets installed from (github or pypi): pypi", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/288", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/288/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/288/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/288", "id": 370668117, "node_id": "MDU6SXNzdWUzNzA2NjgxMTc=", "number": 288, "title": "append_table arguments out of order and missing", "user": {"login": "phuchonguyen", "id": 14096121, "node_id": "MDQ6VXNlcjE0MDk2MTIx", "avatar_url": "https://avatars2.githubusercontent.com/u/14096121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phuchonguyen", "html_url": "https://github.com/phuchonguyen", "followers_url": "https://api.github.com/users/phuchonguyen/followers", "following_url": "https://api.github.com/users/phuchonguyen/following{/other_user}", "gists_url": "https://api.github.com/users/phuchonguyen/gists{/gist_id}", "starred_url": "https://api.github.com/users/phuchonguyen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phuchonguyen/subscriptions", "organizations_url": "https://api.github.com/users/phuchonguyen/orgs", "repos_url": "https://api.github.com/users/phuchonguyen/repos", "events_url": "https://api.github.com/users/phuchonguyen/events{/privacy}", "received_events_url": "https://api.github.com/users/phuchonguyen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T15:24:15Z", "updated_at": "2018-10-16T16:08:09Z", "closed_at": "2018-10-16T16:07:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nappend_table arguments are out of order and a required argument \"valueInputOption\" is not specified. Including the names of arguments and additional arguments from the previous version of pygsheets fixed the bug for me.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ngc = pygsheets.authorize(outh_file='client_secret.json', retries=5)\r\nsh = gc.open(SPREADSHEET_NAME)\r\nwk = sh.worksheet_by_title(WORKSHEET_NAME)\r\nnew_row_values = [1,2,3,4]\r\nwk.append_table(values=new_row_values)\r\n```\r\n\r\n**System Information**\r\n - OS: [e.g. iOS]\r\n - pygsheets version : 1.1.4\r\n - pygsheets installed from (github or pypi): github\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/287", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/287/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/287/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/287", "id": 368963005, "node_id": "MDU6SXNzdWUzNjg5NjMwMDU=", "number": 287, "title": "Improve find/replace", "user": {"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-11T05:53:46Z", "updated_at": "2019-07-26T20:21:04Z", "closed_at": "2019-07-26T20:21:04Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently we the api dosent let us search in sheets, so maybe we can impliemnt something based on https://stackoverflow.com/questions/41943500/google-spreadsheet-api-v4-find-value , might be useful in large sheets.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/286", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/286/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/286/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/286", "id": 366676891, "node_id": "MDU6SXNzdWUzNjY2NzY4OTE=", "number": 286, "title": "Using service_account_file for auth triggers Client secret file does not exist.: 'client_secret.json'", "user": {"login": "gliv", "id": 5370329, "node_id": "MDQ6VXNlcjUzNzAzMjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5370329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gliv", "html_url": "https://github.com/gliv", "followers_url": "https://api.github.com/users/gliv/followers", "following_url": "https://api.github.com/users/gliv/following{/other_user}", "gists_url": "https://api.github.com/users/gliv/gists{/gist_id}", "starred_url": "https://api.github.com/users/gliv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gliv/subscriptions", "organizations_url": "https://api.github.com/users/gliv/orgs", "repos_url": "https://api.github.com/users/gliv/repos", "events_url": "https://api.github.com/users/gliv/events{/privacy}", "received_events_url": "https://api.github.com/users/gliv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-04T08:29:43Z", "updated_at": "2018-10-08T08:14:03Z", "closed_at": "2018-10-08T08:14:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n**Describe the bug**\r\nI try to use the `service_account_file` auth (not the client secret), but still I get an error that states I am missing the `client_secret.json`. From authorize() in authorization.py I see that `client_secret='client_secret.json'` is tthe default, hence I tried setting it to `None` explicitly, but that also didn't help. Looks like it's also hardcoded elsewhere?!\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\n# code\r\ngc = pygsheets.authorize(client_secret=None, service_account_file='service_account_credentials.json')\r\n\r\n# error\r\nFile \"[...]/lib/python3.7/site-packages/pygsheets/client.py\", line 549, in get_outh_credentials\r\n    raise IOError(2, \"Client secret file does not exist.\", client_secret_file)\r\nFileNotFoundError: [Errno 2] Client secret file does not exist.: 'client_secret.json'\r\n\r\n```\r\n\r\n**System Information**\r\n - OS: Mac High Sierra (10.13.6)\r\n - pygsheets version : current (just installed)\r\n - pygsheets installed from (github or pypi):  with pipenv\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/285", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/285/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/285/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/285", "id": 364206452, "node_id": "MDU6SXNzdWUzNjQyMDY0NTI=", "number": 285, "title": "append_table keeps formatting of the first row", "user": {"login": "karambaq", "id": 14233969, "node_id": "MDQ6VXNlcjE0MjMzOTY5", "avatar_url": "https://avatars1.githubusercontent.com/u/14233969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karambaq", "html_url": "https://github.com/karambaq", "followers_url": "https://api.github.com/users/karambaq/followers", "following_url": "https://api.github.com/users/karambaq/following{/other_user}", "gists_url": "https://api.github.com/users/karambaq/gists{/gist_id}", "starred_url": "https://api.github.com/users/karambaq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karambaq/subscriptions", "organizations_url": "https://api.github.com/users/karambaq/orgs", "repos_url": "https://api.github.com/users/karambaq/repos", "events_url": "https://api.github.com/users/karambaq/events{/privacy}", "received_events_url": "https://api.github.com/users/karambaq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518702, "node_id": "MDU6TGFiZWwzODg1MTg3MDI=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-26T20:50:56Z", "updated_at": "2018-11-13T14:20:15Z", "closed_at": "2018-11-13T14:20:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I'm trying to append_table with the frozen title row, which format in color and bold font\r\nI want that appended rows appends without formatting, how can I do that? Thank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/284", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/284/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/284/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/284", "id": 361198162, "node_id": "MDU6SXNzdWUzNjExOTgxNjI=", "number": 284, "title": "can i get unformatted values with wks.get_all_records() ?", "user": {"login": "keyapi", "id": 43301887, "node_id": "MDQ6VXNlcjQzMzAxODg3", "avatar_url": "https://avatars1.githubusercontent.com/u/43301887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keyapi", "html_url": "https://github.com/keyapi", "followers_url": "https://api.github.com/users/keyapi/followers", "following_url": "https://api.github.com/users/keyapi/following{/other_user}", "gists_url": "https://api.github.com/users/keyapi/gists{/gist_id}", "starred_url": "https://api.github.com/users/keyapi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keyapi/subscriptions", "organizations_url": "https://api.github.com/users/keyapi/orgs", "repos_url": "https://api.github.com/users/keyapi/repos", "events_url": "https://api.github.com/users/keyapi/events{/privacy}", "received_events_url": "https://api.github.com/users/keyapi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-18T08:46:52Z", "updated_at": "2018-11-12T23:41:56Z", "closed_at": "2018-11-12T23:41:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "i have some gsheets columms with mixed data types, like below and i want to keep them\r\n\r\n- Variation.number\r\n- 21107_21108_21109_01\r\n- 21107\r\n\r\nwhen i run wks.get_all_records(), i just got a list like below, the underscores\"_\" are all missing.\r\n[{'Variation.number': **21107211082110901**}, {'Variation.number': 21107}]\r\n\r\ni know there's a method value_unformatted to get unformatted value of a cell.\r\nis there a method to get all unformatted values? maybe with wks.get_all_records()?\r\n\r\nThx\r\nKey\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/283", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/283/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/283/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/283", "id": 359765003, "node_id": "MDU6SXNzdWUzNTk3NjUwMDM=", "number": 283, "title": "Worksheet.hidden raise KeyError on visible worksheet", "user": {"login": "imjp94", "id": 11486079, "node_id": "MDQ6VXNlcjExNDg2MDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11486079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imjp94", "html_url": "https://github.com/imjp94", "followers_url": "https://api.github.com/users/imjp94/followers", "following_url": "https://api.github.com/users/imjp94/following{/other_user}", "gists_url": "https://api.github.com/users/imjp94/gists{/gist_id}", "starred_url": "https://api.github.com/users/imjp94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imjp94/subscriptions", "organizations_url": "https://api.github.com/users/imjp94/orgs", "repos_url": "https://api.github.com/users/imjp94/repos", "events_url": "https://api.github.com/users/imjp94/events{/privacy}", "received_events_url": "https://api.github.com/users/imjp94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-13T06:52:37Z", "updated_at": "2018-09-13T15:38:47Z", "closed_at": "2018-09-13T15:38:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\n'hidden' is missing from jsonsheet['properties'] when the worksheet is visible.\r\nIn short, Worksheet.hidden  will only return True or raise KeyError\r\n\r\n**To Reproduce**\r\nJust authorize and fetch as usual to reproduce.\r\n![hidden_missing](https://user-images.githubusercontent.com/11486079/45471683-6e4db880-b764-11e8-85db-e0ae1c491584.png)\r\n\r\n\r\n**System Information**\r\n- pygsheets version : 1.1.4\r\n- pygsheets installed from (github or pypi): github\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/282", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/282/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/282/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/282", "id": 358355439, "node_id": "MDU6SXNzdWUzNTgzNTU0Mzk=", "number": 282, "title": "Issue when accessing team drive sheets", "user": {"login": "dcarrion87", "id": 2899172, "node_id": "MDQ6VXNlcjI4OTkxNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2899172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcarrion87", "html_url": "https://github.com/dcarrion87", "followers_url": "https://api.github.com/users/dcarrion87/followers", "following_url": "https://api.github.com/users/dcarrion87/following{/other_user}", "gists_url": "https://api.github.com/users/dcarrion87/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcarrion87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcarrion87/subscriptions", "organizations_url": "https://api.github.com/users/dcarrion87/orgs", "repos_url": "https://api.github.com/users/dcarrion87/repos", "events_url": "https://api.github.com/users/dcarrion87/events{/privacy}", "received_events_url": "https://api.github.com/users/dcarrion87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-09T06:58:24Z", "updated_at": "2018-09-09T10:13:17Z", "closed_at": "2018-09-09T10:13:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever trying to access team drive sheets I get  \"The caller does not have permission\".\r\n\r\nNo issues after moving sheet into regular user drive space and sharing.\r\n\r\nIs this something related to scope or additional permission needed to be granted on top of service account Editor to the sheet?\r\n\r\n--\r\n\r\ngoogleapiclient.errors.HttpError: <HttpError 403 when requesting https://sheets.googleapis.com/v4/spreadsheets/....?fields=properties%2Csheets%2Fproperties%2CspreadsheetId%2CnamedRanges&includeGridData=false&alt=json returned \"The caller does not have permission\">\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/281", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/281/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/281/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/281", "id": 358104082, "node_id": "MDU6SXNzdWUzNTgxMDQwODI=", "number": 281, "title": "Cell.set_text_format raise TypeError: 'NoneType' object does not support item assignment", "user": {"login": "imjp94", "id": 11486079, "node_id": "MDQ6VXNlcjExNDg2MDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11486079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imjp94", "html_url": "https://github.com/imjp94", "followers_url": "https://api.github.com/users/imjp94/followers", "following_url": "https://api.github.com/users/imjp94/following{/other_user}", "gists_url": "https://api.github.com/users/imjp94/gists{/gist_id}", "starred_url": "https://api.github.com/users/imjp94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imjp94/subscriptions", "organizations_url": "https://api.github.com/users/imjp94/orgs", "repos_url": "https://api.github.com/users/imjp94/repos", "events_url": "https://api.github.com/users/imjp94/events{/privacy}", "received_events_url": "https://api.github.com/users/imjp94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-07T15:05:31Z", "updated_at": "2018-09-08T03:29:12Z", "closed_at": "2018-09-08T03:29:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\n\r\nCell.text_format is None when trying to assign attribute with set_text_format\r\n\r\n**To Reproduce**\r\n\r\n``` python\r\n>>> import pygsheets\r\n>>> client = pygsheets.authorize('res/client_secret.json')\r\n>>> spreadsheet = client.open('test_workbook')\r\n>>> worksheet = spreadsheet.worksheet_by_title('Simple')\r\n>>> cells = worksheet.get_all_values('cell')\r\n>>> cells[0][0].set_text_format('bold', True)\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"D:\\Documents\\Actual\\PythonProjects\\cellbase_project\\venv\\lib\\site-packages\\pygsheets\\cell.py\", line 259, in set_text_format\r\n    self.text_format[attribute] = value\r\nTypeError: 'NoneType' object does not support item assignment\r\n```\r\n\r\nAnd as expected, simple trick as below works just fine:\r\n\r\n```python\r\n>>> import pygsheets\r\n>>> client = pygsheets.authorize('res/client_secret.json')\r\n>>> spreadsheet = client.open('test_workbook')\r\n>>> worksheet = spreadsheet.worksheet_by_title('Simple')\r\n>>> cells = worksheet.get_all_values('cell')\r\n>>> cells[0][0].text_format is None\r\nTrue\r\n>>> cells[0][0].text_format = {}\r\n>>> cells[0][0].set_text_format('bold', True)\r\n<Cell A1 'id'>\r\n```\r\n\r\n**System Information**\r\n\r\n- pygsheets version : 1.1.4\r\n- pygsheets installed from (github or pypi): github", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/280", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/280/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/280/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/280", "id": 357893257, "node_id": "MDU6SXNzdWUzNTc4OTMyNTc=", "number": 280, "title": "Crash in client.py around line #68 / 69 for WIndows NT GAE dev appserver", "user": {"login": "barnsheltie", "id": 17347789, "node_id": "MDQ6VXNlcjE3MzQ3Nzg5", "avatar_url": "https://avatars0.githubusercontent.com/u/17347789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barnsheltie", "html_url": "https://github.com/barnsheltie", "followers_url": "https://api.github.com/users/barnsheltie/followers", "following_url": "https://api.github.com/users/barnsheltie/following{/other_user}", "gists_url": "https://api.github.com/users/barnsheltie/gists{/gist_id}", "starred_url": "https://api.github.com/users/barnsheltie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barnsheltie/subscriptions", "organizations_url": "https://api.github.com/users/barnsheltie/orgs", "repos_url": "https://api.github.com/users/barnsheltie/repos", "events_url": "https://api.github.com/users/barnsheltie/events{/privacy}", "received_events_url": "https://api.github.com/users/barnsheltie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-07T02:11:50Z", "updated_at": "2018-09-09T10:25:29Z", "closed_at": "2018-09-09T10:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using no_cache=True for authorization- dev_appserver for GAE crashes in Windows 10 \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\ncode here ...\r\n# see error client.py line numbers 68/69\r\n        if no_cache:\r\n            cache = None\r\n        else:\r\n            cache = os.path.join(tempfile.gettempdir(), str(uuid.uuid4()))\r\n        if os.name == \"nt\":\r\n           cache = \"\\\\\\\\?\\\\\" + cache\r\n\r\n```... The last line is crashing in NT saying it can't concatenate nonetype.\r\nI think the if os.name is indented so that it runs again after the else: cache= line\r\nWhereas if it's a no_cache the the os.name =='nt' is not supposed to execute.\r\n\r\nI tested with indentation as follows:\r\n        if no_cache:\r\n            cache = None\r\n        else:\r\n            cache = os.path.join(tempfile.gettempdir(), str(uuid.uuid4()))\r\n            if os.name == \"nt\":\r\n                cache = \"\\\\\\\\?\\\\\" + cache\r\n            pass\r\n        pass\r\nAnd it works.\r\n\r\n\r\n\r\n\r\n\r\n\r\n**System Information**\r\n - OS: Windows 10 (NT)\r\n - pygsheets version : 1.1.4\r\n - pygsheets installed from (github or pypi): pypi\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/279", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/279/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/279/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/279", "id": 357333267, "node_id": "MDU6SXNzdWUzNTczMzMyNjc=", "number": 279, "title": "\"Infinity\" string causes error when downloading data", "user": {"login": "ritterSC", "id": 38434290, "node_id": "MDQ6VXNlcjM4NDM0Mjkw", "avatar_url": "https://avatars1.githubusercontent.com/u/38434290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ritterSC", "html_url": "https://github.com/ritterSC", "followers_url": "https://api.github.com/users/ritterSC/followers", "following_url": "https://api.github.com/users/ritterSC/following{/other_user}", "gists_url": "https://api.github.com/users/ritterSC/gists{/gist_id}", "starred_url": "https://api.github.com/users/ritterSC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ritterSC/subscriptions", "organizations_url": "https://api.github.com/users/ritterSC/orgs", "repos_url": "https://api.github.com/users/ritterSC/repos", "events_url": "https://api.github.com/users/ritterSC/events{/privacy}", "received_events_url": "https://api.github.com/users/ritterSC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-05T17:40:28Z", "updated_at": "2018-09-05T18:57:58Z", "closed_at": "2018-09-05T18:57:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have a spreadsheet containing a cell with the string \"Infinity\", when downloading the data trough `worksheet.get_as_df()` or `worksheet.get_all_records()`, it'll be interpreted as `float(\"inf\")` causing loss of data and an HTTP error if you try to upload it again using `worksheet.set_dataframe()`:\r\n\r\n`HttpError: <HttpError 400 when requesting: .... returned \"Invalid JSON payload received. Unexpected token.`\r\n\r\nMy workaround is downloading the data trough `worksheet.get_all_values()`, which is a bit less convenient.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/278", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/278/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/278/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/278", "id": 357001259, "node_id": "MDU6SXNzdWUzNTcwMDEyNTk=", "number": 278, "title": "Ability to Hyperlink cell values", "user": {"login": "ikmalpani", "id": 23349527, "node_id": "MDQ6VXNlcjIzMzQ5NTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/23349527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikmalpani", "html_url": "https://github.com/ikmalpani", "followers_url": "https://api.github.com/users/ikmalpani/followers", "following_url": "https://api.github.com/users/ikmalpani/following{/other_user}", "gists_url": "https://api.github.com/users/ikmalpani/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikmalpani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikmalpani/subscriptions", "organizations_url": "https://api.github.com/users/ikmalpani/orgs", "repos_url": "https://api.github.com/users/ikmalpani/repos", "events_url": "https://api.github.com/users/ikmalpani/events{/privacy}", "received_events_url": "https://api.github.com/users/ikmalpani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-04T22:37:59Z", "updated_at": "2018-09-05T19:08:07Z", "closed_at": "2018-09-05T19:08:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to hyperlink some cells to open a webpage to get more information about the cell in question.\r\n\r\nGiven a set of cells with values in them and a set of links(URLs), I want to be able to embed the links to the values in the set of cells.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/277", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/277/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/277/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/277", "id": 356700010, "node_id": "MDU6SXNzdWUzNTY3MDAwMTA=", "number": 277, "title": "What to do to deploy in Web?", "user": {"login": "cnpants", "id": 35827302, "node_id": "MDQ6VXNlcjM1ODI3MzAy", "avatar_url": "https://avatars0.githubusercontent.com/u/35827302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cnpants", "html_url": "https://github.com/cnpants", "followers_url": "https://api.github.com/users/cnpants/followers", "following_url": "https://api.github.com/users/cnpants/following{/other_user}", "gists_url": "https://api.github.com/users/cnpants/gists{/gist_id}", "starred_url": "https://api.github.com/users/cnpants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cnpants/subscriptions", "organizations_url": "https://api.github.com/users/cnpants/orgs", "repos_url": "https://api.github.com/users/cnpants/repos", "events_url": "https://api.github.com/users/cnpants/events{/privacy}", "received_events_url": "https://api.github.com/users/cnpants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-09-04T08:16:57Z", "updated_at": "2018-10-08T08:14:48Z", "closed_at": "2018-10-08T08:14:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I would want to use the package to log periodically on the spreadsheet. These would be on a timely basis and scheduled. I will be using Flask and APScheduler for these. But I think I got a problem when deploying it to Heroku, it won't authenticate via Oauth2. Then it presented me this: [LINK]\r\n\r\nHow do I go about these? Has someone tried it? Thanks!\r\n(https://developers.google.com/api-client-library/python/guide/aaa_client_secrets)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/276", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/276/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/276/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/276", "id": 355274392, "node_id": "MDU6SXNzdWUzNTUyNzQzOTI=", "number": 276, "title": "Improve datarange", "user": {"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518698, "node_id": "MDU6TGFiZWwzODg1MTg2OTg=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-29T18:10:52Z", "updated_at": "2019-10-10T13:04:14Z", "closed_at": "2019-10-10T13:04:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Improve datarange and protected range", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/274", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/274/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/274/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/274", "id": 354615679, "node_id": "MDU6SXNzdWUzNTQ2MTU2Nzk=", "number": 274, "title": "pygsheets.exceptions.RequestError: Timeout : timeout('timed out',)", "user": {"login": "anandgokul18", "id": 7498605, "node_id": "MDQ6VXNlcjc0OTg2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7498605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anandgokul18", "html_url": "https://github.com/anandgokul18", "followers_url": "https://api.github.com/users/anandgokul18/followers", "following_url": "https://api.github.com/users/anandgokul18/following{/other_user}", "gists_url": "https://api.github.com/users/anandgokul18/gists{/gist_id}", "starred_url": "https://api.github.com/users/anandgokul18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anandgokul18/subscriptions", "organizations_url": "https://api.github.com/users/anandgokul18/orgs", "repos_url": "https://api.github.com/users/anandgokul18/repos", "events_url": "https://api.github.com/users/anandgokul18/events{/privacy}", "received_events_url": "https://api.github.com/users/anandgokul18/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-08-28T08:02:55Z", "updated_at": "2019-05-25T14:01:40Z", "closed_at": "2018-08-31T15:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote a script that uses pygsheets to update a Google Sheet. I had setup a cron job to run this script daily. Suddenly, it stopped working with this error: \"pygsheets.exceptions.RequestError: Timeout : timeout('timed out',)\". \r\n\r\nIf I try to run from my laptop (macOS), it is working fine, but, if I try to run this from my Linux machine, it throws up this error.\r\n\r\nAlso, the code is failing at 'authorize()' itself which is weird. The service account key is all correct (since it works from my laptop)\r\n\r\n_Traceback (most recent call last):_\r\n  _File \"rackSheet.py\", line 190, in <module>\r\n    gc = pygsheets.authorize(service_file='/home/anandgokul/BangaloreRackSheet-Script/mypkey.json')_\r\n  _File \"/usr/lib/python2.7/site-packages/pygsheets/client.py\", line 595, in authorize\r\n    rclient = Client(oauth=credentials, **client_kwargs)_\r\n  _File \"/usr/lib/python2.7/site-packages/pygsheets/client.py\", line 84, in __init__\r\n    self._spreadsheeets = self._fetch_sheets()_\r\n  _File \"/usr/lib/python2.7/site-packages/pygsheets/client.py\", line 99, in _fetch_sheets\r\n    results = self._execute_request(None, request, False)_\r\n  _File \"/usr/lib/python2.7/site-packages/pygsheets/client.py\", line 460, in _execute_request\r\n    raise RequestError(\"Timeout : \" + repr(e))_\r\n_pygsheets.exceptions.RequestError: Timeout : timeout('timed out',)_\r\n\r\n\r\nI am not sure why it stopped working all of a sudden. I also tried setting 'retries=5' inside authorize() attribute as per https://github.com/nithinmurali/pygsheets/issues/84, but no use.\r\n\r\nI looked up the RequestError in your code and it means that the script is unable to connect to Google Api. Any idea why this issue is happening?\r\n\r\nI hope my explanation above is clear. Any help or guidance will be appreciated.\r\n\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/273", "repository_url": "https://api.github.com/repos/nithinmurali/pygsheets", "labels_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/273/comments", "events_url": "https://api.github.com/repos/nithinmurali/pygsheets/issues/273/events", "html_url": "https://github.com/nithinmurali/pygsheets/issues/273", "id": 354384519, "node_id": "MDU6SXNzdWUzNTQzODQ1MTk=", "number": 273, "title": "readthedocs version issue", "user": {"login": "nithinmurali", "id": 5932834, "node_id": "MDQ6VXNlcjU5MzI4MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5932834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nithinmurali", "html_url": "https://github.com/nithinmurali", "followers_url": "https://api.github.com/users/nithinmurali/followers", "following_url": "https://api.github.com/users/nithinmurali/following{/other_user}", "gists_url": "https://api.github.com/users/nithinmurali/gists{/gist_id}", "starred_url": "https://api.github.com/users/nithinmurali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nithinmurali/subscriptions", "organizations_url": "https://api.github.com/users/nithinmurali/orgs", "repos_url": "https://api.github.com/users/nithinmurali/repos", "events_url": "https://api.github.com/users/nithinmurali/events{/privacy}", "received_events_url": "https://api.github.com/users/nithinmurali/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 388518696, "node_id": "MDU6TGFiZWwzODg1MTg2OTY=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 388518699, "node_id": "MDU6TGFiZWwzODg1MTg2OTk=", "url": "https://api.github.com/repos/nithinmurali/pygsheets/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-27T16:20:05Z", "updated_at": "2018-08-29T02:19:19Z", "closed_at": "2018-08-29T02:19:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "only one version of readthedocs is getting published. https://pygsheets.readthedocs.io/en/latest is not working but https://pygsheets.readthedocs.io/ is.", "performed_via_github_app": null, "score": 1.0}]}