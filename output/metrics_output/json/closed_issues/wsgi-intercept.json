{"total_count": 22, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/59", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/59/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/59/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/59", "id": 522958439, "node_id": "MDU6SXNzdWU1MjI5NTg0Mzk=", "number": 59, "title": "HTTPS connections with Requests library don't support verify=False to outside domains", "user": {"login": "fuzzyrichie", "id": 52059585, "node_id": "MDQ6VXNlcjUyMDU5NTg1", "avatar_url": "https://avatars3.githubusercontent.com/u/52059585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuzzyrichie", "html_url": "https://github.com/fuzzyrichie", "followers_url": "https://api.github.com/users/fuzzyrichie/followers", "following_url": "https://api.github.com/users/fuzzyrichie/following{/other_user}", "gists_url": "https://api.github.com/users/fuzzyrichie/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuzzyrichie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuzzyrichie/subscriptions", "organizations_url": "https://api.github.com/users/fuzzyrichie/orgs", "repos_url": "https://api.github.com/users/fuzzyrichie/repos", "events_url": "https://api.github.com/users/fuzzyrichie/events{/privacy}", "received_events_url": "https://api.github.com/users/fuzzyrichie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-14T16:11:16Z", "updated_at": "2019-11-15T13:42:12Z", "closed_at": "2019-11-15T13:42:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Was working on some local tests that use verify=False in the code to do calls using the Requests library, and any calls to external resources with this flag were getting SSL verification issues regardless.\r\n\r\nIn WSGI_HTTPSConnection, it doesn't handle the change in the SSL context when calling it for external resources. I've got a patch locally that works for this + with tests. Example test:\r\n\r\n```python\r\ndef test_https_no_ssl_verification_not_intercepted():\r\n    with InstalledApp(wsgi_app.simple_app, host=HOST, port=443) as app:\r\n        resp = requests.get('https://self-signed.badssl.com/', verify=False)\r\n        assert resp.status_code >= 200 and resp.status_code < 300\r\n        assert not app.success()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/55", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/55/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/55/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/55", "id": 341275340, "node_id": "MDU6SXNzdWUzNDEyNzUzNDA=", "number": 55, "title": "Pypi sdist tarball doesn't have README.rst", "user": {"login": "dvzrv", "id": 432519, "node_id": "MDQ6VXNlcjQzMjUxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/432519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvzrv", "html_url": "https://github.com/dvzrv", "followers_url": "https://api.github.com/users/dvzrv/followers", "following_url": "https://api.github.com/users/dvzrv/following{/other_user}", "gists_url": "https://api.github.com/users/dvzrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvzrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvzrv/subscriptions", "organizations_url": "https://api.github.com/users/dvzrv/orgs", "repos_url": "https://api.github.com/users/dvzrv/repos", "events_url": "https://api.github.com/users/dvzrv/events{/privacy}", "received_events_url": "https://api.github.com/users/dvzrv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-14T22:28:54Z", "updated_at": "2018-07-16T09:57:01Z", "closed_at": "2018-07-16T09:57:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nIt would be great to also have README.rst in the pypi sdist tarball, as for consistency I'm using that upstream, when packaging for Arch Linux.\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/53", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/53/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/53/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/53", "id": 314330310, "node_id": "MDU6SXNzdWUzMTQzMzAzMTA=", "number": 53, "title": "Interceptor.uninstall_interceptor turns off intercept for all intercepts using the same module", "user": {"login": "cdent", "id": 34498, "node_id": "MDQ6VXNlcjM0NDk4", "avatar_url": "https://avatars3.githubusercontent.com/u/34498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdent", "html_url": "https://github.com/cdent", "followers_url": "https://api.github.com/users/cdent/followers", "following_url": "https://api.github.com/users/cdent/following{/other_user}", "gists_url": "https://api.github.com/users/cdent/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdent/subscriptions", "organizations_url": "https://api.github.com/users/cdent/orgs", "repos_url": "https://api.github.com/users/cdent/repos", "events_url": "https://api.github.com/users/cdent/events{/privacy}", "received_events_url": "https://api.github.com/users/cdent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 15400341, "node_id": "MDU6TGFiZWwxNTQwMDM0MQ==", "url": "https://api.github.com/repos/cdent/wsgi-intercept/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cdent", "id": 34498, "node_id": "MDQ6VXNlcjM0NDk4", "avatar_url": "https://avatars3.githubusercontent.com/u/34498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdent", "html_url": "https://github.com/cdent", "followers_url": "https://api.github.com/users/cdent/followers", "following_url": "https://api.github.com/users/cdent/following{/other_user}", "gists_url": "https://api.github.com/users/cdent/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdent/subscriptions", "organizations_url": "https://api.github.com/users/cdent/orgs", "repos_url": "https://api.github.com/users/cdent/repos", "events_url": "https://api.github.com/users/cdent/events{/privacy}", "received_events_url": "https://api.github.com/users/cdent/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cdent", "id": 34498, "node_id": "MDQ6VXNlcjM0NDk4", "avatar_url": "https://avatars3.githubusercontent.com/u/34498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdent", "html_url": "https://github.com/cdent", "followers_url": "https://api.github.com/users/cdent/followers", "following_url": "https://api.github.com/users/cdent/following{/other_user}", "gists_url": "https://api.github.com/users/cdent/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdent/subscriptions", "organizations_url": "https://api.github.com/users/cdent/orgs", "repos_url": "https://api.github.com/users/cdent/repos", "events_url": "https://api.github.com/users/cdent/events{/privacy}", "received_events_url": "https://api.github.com/users/cdent/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-04-14T13:46:37Z", "updated_at": "2018-04-14T14:41:54Z", "closed_at": "2018-04-14T14:41:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "If intercepts are created for more than one wsgi application in the same process, using the same interceptor module, uninstalling one of them will turn off intercept for the others because the intercept module's socket class overrides will be removed. This is not desirable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/51", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/51/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/51/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/51", "id": 287756916, "node_id": "MDU6SXNzdWUyODc3NTY5MTY=", "number": 51, "title": "Logs / errors are lost due to `wsgi.errors` not extracted", "user": {"login": "pupssman", "id": 2619359, "node_id": "MDQ6VXNlcjI2MTkzNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2619359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pupssman", "html_url": "https://github.com/pupssman", "followers_url": "https://api.github.com/users/pupssman/followers", "following_url": "https://api.github.com/users/pupssman/following{/other_user}", "gists_url": "https://api.github.com/users/pupssman/gists{/gist_id}", "starred_url": "https://api.github.com/users/pupssman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pupssman/subscriptions", "organizations_url": "https://api.github.com/users/pupssman/orgs", "repos_url": "https://api.github.com/users/pupssman/repos", "events_url": "https://api.github.com/users/pupssman/events{/privacy}", "received_events_url": "https://api.github.com/users/pupssman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 15400341, "node_id": "MDU6TGFiZWwxNTQwMDM0MQ==", "url": "https://api.github.com/repos/cdent/wsgi-intercept/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-11T11:42:22Z", "updated_at": "2018-01-11T12:26:06Z", "closed_at": "2018-01-11T12:26:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey there and thanks for a fancy tool!\r\n\r\nI've noticed that interceptor puts a `io.BytestIO` to `wsgi.errors`.\r\nThat causes some trouble:\r\n* it is never read -- so logs from my flask app crashes are lost\r\n* flask attempts to write a `unicode` there and fails with\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/logging/__init__.py\", line 882, in emit\r\n    stream.write(fs % msg)\r\nTypeError: 'unicode' does not have the buffer interface\r\nLogged from file app.py, line 1560\r\n```\r\n\r\nIMO putting a `sys.stderr` there would actually improve the situation.\r\n\r\nIf it is a viable option I can go ahead and produce a pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/48", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/48/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/48/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/48", "id": 213924715, "node_id": "MDU6SXNzdWUyMTM5MjQ3MTU=", "number": 48, "title": "urllib3 intercept cause TypeError with https URL", "user": {"login": "boralyl", "id": 109865, "node_id": "MDQ6VXNlcjEwOTg2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/109865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boralyl", "html_url": "https://github.com/boralyl", "followers_url": "https://api.github.com/users/boralyl/followers", "following_url": "https://api.github.com/users/boralyl/following{/other_user}", "gists_url": "https://api.github.com/users/boralyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/boralyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boralyl/subscriptions", "organizations_url": "https://api.github.com/users/boralyl/orgs", "repos_url": "https://api.github.com/users/boralyl/repos", "events_url": "https://api.github.com/users/boralyl/events{/privacy}", "received_events_url": "https://api.github.com/users/boralyl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-13T23:15:59Z", "updated_at": "2017-03-15T15:18:04Z", "closed_at": "2017-03-15T15:18:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Relevant traceback:\r\n\r\n```\r\nFile \"/usr/lib/python2.7/site-packages/store_scraper/_fetch.py\", line 21, in _fetch_raw\r\n    r = requests.get(url, params=params, timeout=3.0, **request_kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/api.py\", line 71, in get\r\n    return request('get', url, params=params, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/api.py\", line 57, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/sessions.py\", line 475, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/sessions.py\", line 585, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/adapters.py\", line 403, in send\r\n    timeout=timeout\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 566, in urlopen\r\n    conn = self._get_conn(timeout=pool_timeout)\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 256, in _get_conn\r\n    return conn or self._new_conn()\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 802, in _new_conn\r\n    strict=self.strict, **self.conn_kw)\r\n  File \"/usr/lib/python2.7/site-packages/wsgi_intercept/_urllib3.py\", line 28, in __init__\r\n    WSGI_HTTPSConnection.__init__(self, *args, **kwargs)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 1254, in __init__\r\n    source_address)\r\nTypeError: unbound method __init__() must be called with HTTP_WSGIInterceptor instance as first argument (got HTTPS_WSGIInterceptor instance instead)\r\n```\r\n\r\nIt appears the order of classes is wrong for the [WSGI_HTTPSConnection](https://github.com/cdent/wsgi-intercept/blob/master/wsgi_intercept/__init__.py#L584) class.  If you swap them around the error goes away and https URLs are mocked as expected.\r\n\r\n```python\r\nclass WSGI_HTTPSConnection(WSGI_HTTPConnection, HTTPSConnection):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/46", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/46/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/46/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/46", "id": 211923049, "node_id": "MDU6SXNzdWUyMTE5MjMwNDk=", "number": 46, "title": "Write ignores response body when first item in iterable is an empty string", "user": {"login": "noonat", "id": 2610, "node_id": "MDQ6VXNlcjI2MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noonat", "html_url": "https://github.com/noonat", "followers_url": "https://api.github.com/users/noonat/followers", "following_url": "https://api.github.com/users/noonat/following{/other_user}", "gists_url": "https://api.github.com/users/noonat/gists{/gist_id}", "starred_url": "https://api.github.com/users/noonat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noonat/subscriptions", "organizations_url": "https://api.github.com/users/noonat/orgs", "repos_url": "https://api.github.com/users/noonat/repos", "events_url": "https://api.github.com/users/noonat/events{/privacy}", "received_events_url": "https://api.github.com/users/noonat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-05T01:55:51Z", "updated_at": "2017-03-06T17:40:59Z", "closed_at": "2017-03-06T17:40:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "This line has a check for whether the first return value of the application function's returned iterable is falsey: https://github.com/cdent/wsgi-intercept/blob/ac5f41a/wsgi_intercept/__init__.py#L490\r\n\r\n```python\r\ntry:\r\n    generator_data = None\r\n    try:\r\n        generator_data = next(self.result)\r\n\r\n    finally:\r\n        for data in self.write_results:\r\n            self.output.write(data)\r\n\r\n    if generator_data:\r\n        try:\r\n            self.output.write(generator_data)\r\n        except TypeError as exc:\r\n            raise TypeError('bytes required in response: %s' % exc)\r\n\r\n        while 1:\r\n            data = next(self.result)\r\n            self.output.write(data)\r\n\r\nexcept StopIteration:\r\n    pass\r\n```\r\n\r\nI ran into this bug because the first item in my application's returned iterable was an empty bytestring, and this caused the body to be skipped entirely. This seems incorrect, as PEP-3333 includes specific references to empty byte strings being present in the returned iterable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/43", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/43/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/43/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/43", "id": 178588613, "node_id": "MDU6SXNzdWUxNzg1ODg2MTM=", "number": 43, "title": "wsgi-intercept should build in some character encoding checks", "user": {"login": "cdent", "id": 34498, "node_id": "MDQ6VXNlcjM0NDk4", "avatar_url": "https://avatars3.githubusercontent.com/u/34498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdent", "html_url": "https://github.com/cdent", "followers_url": "https://api.github.com/users/cdent/followers", "following_url": "https://api.github.com/users/cdent/following{/other_user}", "gists_url": "https://api.github.com/users/cdent/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdent/subscriptions", "organizations_url": "https://api.github.com/users/cdent/orgs", "repos_url": "https://api.github.com/users/cdent/repos", "events_url": "https://api.github.com/users/cdent/events{/privacy}", "received_events_url": "https://api.github.com/users/cdent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-22T11:48:08Z", "updated_at": "2016-09-27T09:44:02Z", "closed_at": "2016-09-27T09:44:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "For example, when mod_wsgi gets an outgoing header value that is unicode, it explodes. wsgi-intercept does not, which means that tests can pass in wsgi-intercept that would fail in integration or production. That's a bummer.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/41", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/41/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/41/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/41", "id": 176420346, "node_id": "MDU6SXNzdWUxNzY0MjAzNDY=", "number": 41, "title": "When using the url arg to an Interceptor, if there is no port in the url an error happens", "user": {"login": "cdent", "id": 34498, "node_id": "MDQ6VXNlcjM0NDk4", "avatar_url": "https://avatars3.githubusercontent.com/u/34498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdent", "html_url": "https://github.com/cdent", "followers_url": "https://api.github.com/users/cdent/followers", "following_url": "https://api.github.com/users/cdent/following{/other_user}", "gists_url": "https://api.github.com/users/cdent/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdent/subscriptions", "organizations_url": "https://api.github.com/users/cdent/orgs", "repos_url": "https://api.github.com/users/cdent/repos", "events_url": "https://api.github.com/users/cdent/events{/privacy}", "received_events_url": "https://api.github.com/users/cdent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-12T16:24:36Z", "updated_at": "2016-09-13T15:23:28Z", "closed_at": "2016-09-13T15:23:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This fails:\n\n``` python\ndef test_intercept_by_url():\n    hostname = str(uuid4())\n    url = 'http://%s/foobar' % hostname\n    interceptor = Httplib2Interceptor(app=app, url=url)\n    assert isinstance(interceptor, Interceptor)\n    assert interceptor.app == app\n    assert interceptor.host == hostname\n    assert interceptor.port == 80\n    assert interceptor.script_name == '/foobar'\n    assert interceptor.url == 'http://%s:%s/foobar' % (hostname, port)\n    assert interceptor.url == url\n```\n\nwith\n\n```\nwsgi_intercept/interceptor.py:35: in __init__\n    self._init_from_url(url)\nwsgi_intercept/interceptor.py:70: in _init_from_url\n    host, port = parsed_url.netloc.split(':')\nE   ValueError: need more than 1 value to unpack\n```\n\nBasically that split needs to be safer.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/39", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/39/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/39/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/39", "id": 162885674, "node_id": "MDU6SXNzdWUxNjI4ODU2NzQ=", "number": 39, "title": "wsgi_intercept.make_environ turns headers into unicode", "user": {"login": "socek", "id": 317401, "node_id": "MDQ6VXNlcjMxNzQwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/317401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/socek", "html_url": "https://github.com/socek", "followers_url": "https://api.github.com/users/socek/followers", "following_url": "https://api.github.com/users/socek/following{/other_user}", "gists_url": "https://api.github.com/users/socek/gists{/gist_id}", "starred_url": "https://api.github.com/users/socek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/socek/subscriptions", "organizations_url": "https://api.github.com/users/socek/orgs", "repos_url": "https://api.github.com/users/socek/repos", "events_url": "https://api.github.com/users/socek/events{/privacy}", "received_events_url": "https://api.github.com/users/socek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-29T09:55:54Z", "updated_at": "2016-06-29T18:53:39Z", "closed_at": "2016-06-29T18:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "[wsgi-intercept==1.2.2]\nI'm using requests.Session() -> wsgi_intecept -> falcon\nI'm trying to use cookies, but I can not. wsgi_intercept.make_environ method turns headers into unicode, and this is not working with SimpleCookie.load:\n\n```\ndef load(self, rawdata):\n    if type(rawdata) == type(\"\"):\n        self.__ParseString(rawdata)\n    else:\n        # self.update() wouldn't call our custom __setitem__\n        for k, v in rawdata.items():\n            self[k] = v\n    return\n```\n\nAs you can see, the SimpleCookie check if rawdata is type of \"\", which is not when the rawdata is an unicode, and this result in error: AttributeError: 'unicode' object has no attribute 'items'\n\nThe simplest way to \"fix\" this is to remove line https://github.com/cdent/wsgi-intercept/blob/master/wsgi_intercept/__init__.py#L223 but this line is there for a reason and I do not know why.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/36", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/36/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/36/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/36", "id": 129147409, "node_id": "MDU6SXNzdWUxMjkxNDc0MDk=", "number": 36, "title": "Please allow to disable internet tests", "user": {"login": "thomasgoirand", "id": 1257293, "node_id": "MDQ6VXNlcjEyNTcyOTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1257293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasgoirand", "html_url": "https://github.com/thomasgoirand", "followers_url": "https://api.github.com/users/thomasgoirand/followers", "following_url": "https://api.github.com/users/thomasgoirand/following{/other_user}", "gists_url": "https://api.github.com/users/thomasgoirand/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasgoirand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasgoirand/subscriptions", "organizations_url": "https://api.github.com/users/thomasgoirand/orgs", "repos_url": "https://api.github.com/users/thomasgoirand/repos", "events_url": "https://api.github.com/users/thomasgoirand/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasgoirand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-27T13:41:06Z", "updated_at": "2016-03-14T15:23:03Z", "closed_at": "2016-03-14T15:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When building the package in Debian, I had to patch out all tests doing external network connections (to google.com in this case), because buildd do not have network access (on purpose). The issue is that on each new upstream release, the patch to remove these tests must be rebased, which is annoying.\n\nIt'd be nice to have an option set through environment variable to disable these tests when running pytest. Something like this:\nWSGI_INTERCEPT_DO_NOT_TEST_WITH_INTERNET=yes\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/34", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/34/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/34/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/34", "id": 125610720, "node_id": "MDU6SXNzdWUxMjU2MTA3MjA=", "number": 34, "title": "unexpected keyword argument 'source_address'", "user": {"login": "NGSegovia", "id": 6039636, "node_id": "MDQ6VXNlcjYwMzk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6039636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NGSegovia", "html_url": "https://github.com/NGSegovia", "followers_url": "https://api.github.com/users/NGSegovia/followers", "following_url": "https://api.github.com/users/NGSegovia/following{/other_user}", "gists_url": "https://api.github.com/users/NGSegovia/gists{/gist_id}", "starred_url": "https://api.github.com/users/NGSegovia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NGSegovia/subscriptions", "organizations_url": "https://api.github.com/users/NGSegovia/orgs", "repos_url": "https://api.github.com/users/NGSegovia/repos", "events_url": "https://api.github.com/users/NGSegovia/events{/privacy}", "received_events_url": "https://api.github.com/users/NGSegovia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-08T13:16:58Z", "updated_at": "2016-01-10T00:09:17Z", "closed_at": "2016-01-08T14:09:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since version 1.0.0 wsgi-intercept fails with httplib2_intercept request.\nWith version 0.10.3 work properly. Here are my test:\n[wsgi-intercept-issue.txt](https://github.com/cdent/wsgi-intercept/files/82718/wsgi-intercept-issue.txt)\n\nCongratulations for your project. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/33", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/33/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/33/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/33", "id": 100492417, "node_id": "MDU6SXNzdWUxMDA0OTI0MTc=", "number": 33, "title": "Including LICENSE file in the code repository and Adding it in the Manifest file", "user": {"login": "chkumar246", "id": 7964197, "node_id": "MDQ6VXNlcjc5NjQxOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7964197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chkumar246", "html_url": "https://github.com/chkumar246", "followers_url": "https://api.github.com/users/chkumar246/followers", "following_url": "https://api.github.com/users/chkumar246/following{/other_user}", "gists_url": "https://api.github.com/users/chkumar246/gists{/gist_id}", "starred_url": "https://api.github.com/users/chkumar246/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chkumar246/subscriptions", "organizations_url": "https://api.github.com/users/chkumar246/orgs", "repos_url": "https://api.github.com/users/chkumar246/repos", "events_url": "https://api.github.com/users/chkumar246/events{/privacy}", "received_events_url": "https://api.github.com/users/chkumar246/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-12T08:24:54Z", "updated_at": "2015-08-12T12:46:44Z", "closed_at": "2015-08-12T11:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am packaging wsgi-intercept python module for fedora.\nAs per setup.py file, License is MIT. But License file is missing from the code repository.\nPlease include it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/30", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/30/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/30/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/30", "id": 53095537, "node_id": "MDU6SXNzdWU1MzA5NTUzNw==", "number": 30, "title": "kwarg error when $http_proxy is set in environ", "user": {"login": "aisk", "id": 699636, "node_id": "MDQ6VXNlcjY5OTYzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/699636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aisk", "html_url": "https://github.com/aisk", "followers_url": "https://api.github.com/users/aisk/followers", "following_url": "https://api.github.com/users/aisk/following{/other_user}", "gists_url": "https://api.github.com/users/aisk/gists{/gist_id}", "starred_url": "https://api.github.com/users/aisk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aisk/subscriptions", "organizations_url": "https://api.github.com/users/aisk/orgs", "repos_url": "https://api.github.com/users/aisk/repos", "events_url": "https://api.github.com/users/aisk/events{/privacy}", "received_events_url": "https://api.github.com/users/aisk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-12-30T06:16:27Z", "updated_at": "2016-01-23T06:27:35Z", "closed_at": "2016-01-22T14:33:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` bash\n$ echo $http_proxy\nsome_proxy.com:1234\n```\n\nand run the [requests example](http://wsgi-intercept.readthedocs.org/en/latest/requests.html), I got this error:\n\n```\nTraceback (most recent call last):\n  File \"test.py\", line 20, in <module>\n    resp = requests.get(url)\n  File \"/usr/local/lib/python2.7/site-packages/requests/api.py\", line 60, in get\n    return request('get', url, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/requests/api.py\", line 49, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/requests/sessions.py\", line 457, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/requests/sessions.py\", line 569, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/requests/adapters.py\", line 362, in send\n    timeout=timeout\n  File \"/usr/local/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 511, in urlopen\n    conn = self._get_conn(timeout=pool_timeout)\n  File \"/usr/local/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 231, in _get_conn\n    return conn or self._new_conn()\n  File \"/usr/local/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py\", line 192, in _new_conn\n    strict=self.strict, **self.conn_kw)\n  File \"/usr/local/lib/python2.7/site-packages/wsgi_intercept/requests_intercept.py\", line 22, in __init__\n    WSGI_HTTPConnection.__init__(self, *args, **kwargs)\nTypeError: __init__() got an unexpected keyword argument 'socket_options'\n```\n\nand the kwargs of wsgi_intercept/requests_intercept.py:HTTP_WSGIInterceptor.**init** is \n\n```\n{'strict': False, 'host': 'some_proxy.com', 'socket_options': [], 'timeout': <object object at 0x1028490e0>, 'port': 1234}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/27", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/27/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/27/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/27", "id": 47632066, "node_id": "MDU6SXNzdWU0NzYzMjA2Ng==", "number": 27, "title": "URL path fragment not unquoted when extracted into WSGI PATH_INFO environment variable.", "user": {"login": "Vultaire", "id": 534508, "node_id": "MDQ6VXNlcjUzNDUwOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/534508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vultaire", "html_url": "https://github.com/Vultaire", "followers_url": "https://api.github.com/users/Vultaire/followers", "following_url": "https://api.github.com/users/Vultaire/following{/other_user}", "gists_url": "https://api.github.com/users/Vultaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vultaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vultaire/subscriptions", "organizations_url": "https://api.github.com/users/Vultaire/orgs", "repos_url": "https://api.github.com/users/Vultaire/repos", "events_url": "https://api.github.com/users/Vultaire/events{/privacy}", "received_events_url": "https://api.github.com/users/Vultaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-03T19:15:42Z", "updated_at": "2014-11-09T20:43:18Z", "closed_at": "2014-11-09T18:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems URLs with character escapes (e.g. %3F for an \"escaped\" ? in a URL) are not being unescaped, as is expected by some libraries (bottle in my case).\n\nThis was traced to the WSGI environment variable PATH_INFO.\n\n[PEP 333](http://legacy.python.org/dev/peps/pep-0333/) does not seem to explicitly mandate that PATH_INFO be unescaped when extracted from a URL.  However, it is [implied via its docs](http://legacy.python.org/dev/peps/pep-0333/#url-reconstruction) on how to get a URL from the WSGI environment variables.\n\nHere is my patch (based upon the 0.8.1 release):\n\n``` diff\n--- a/__init__.py   2014-11-03 10:56:56.570455800 -0800\n+++ b/__init__.py   2014-11-03 10:59:48.904455800 -0800\n@@ -106,6 +106,11 @@\n except ImportError:\n     from StringIO import StringIO as BytesIO\n\n+try:\n+    from urllib.parse import unquote as url_unquote\n+except ImportError:\n+    from urllib import unquote as url_unquote\n+\n import traceback\n\n debuglevel = 0\n@@ -224,7 +229,7 @@\n         url = url[len(script_name):]\n\n     url = url.split('?', 1)\n-    path_info = url[0]\n+    path_info = url_unquote(url[0])\n     query_string = \"\"\n     if len(url) == 2:\n         query_string = url[1]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/26", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/26/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/26/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/26", "id": 47439863, "node_id": "MDU6SXNzdWU0NzQzOTg2Mw==", "number": 26, "title": "wsgi.url_scheme is \"http\" even when using https", "user": {"login": "Vultaire", "id": 534508, "node_id": "MDQ6VXNlcjUzNDUwOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/534508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vultaire", "html_url": "https://github.com/Vultaire", "followers_url": "https://api.github.com/users/Vultaire/followers", "following_url": "https://api.github.com/users/Vultaire/following{/other_user}", "gists_url": "https://api.github.com/users/Vultaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vultaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vultaire/subscriptions", "organizations_url": "https://api.github.com/users/Vultaire/orgs", "repos_url": "https://api.github.com/users/Vultaire/repos", "events_url": "https://api.github.com/users/Vultaire/events{/privacy}", "received_events_url": "https://api.github.com/users/Vultaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-31T20:17:45Z", "updated_at": "2014-11-09T18:07:54Z", "closed_at": "2014-11-09T18:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Basically self-explanatory.  If I access my app via wsgi_intercept using HTTPS and receive a redirect, the URLs returned begin with \"http://\" instead of \"https://\".\n\nI traced this down to the wsgi.url_scheme environment parameter.  Based on the current trunk, if you look at [__init__.py line 245](https://github.com/cdent/python3-wsgi-intercept/blob/master/wsgi_intercept/__init__.py#L245) it appears the value is hard-coded into make_environ().\n\nI haven't spent time to get a good feel for the coding style of this library; here is a quick and dirty patch for the issue, please rework as necessary.  (I don't actually modify make_environ() here, but rather the code around it.)\n\n``` diff\n--- a/wsgi_intercept/__init__.py    2014-10-31 13:13:15.000000000 -0700\n+++ b/wsgi_intercept/__init__.py    2014-10-31 13:10:25.399835500 -0700\n@@ -326,7 +326,7 @@\n         data has been sent to the socket by the request class;\n      2. non-persistent (i.e. non-HTTP/1.1) connections.\n     \"\"\"\n-    def __init__(self, app, host, port, script_name):\n+    def __init__(self, app, host, port, script_name, https=False):\n         self.app = app                  # WSGI app object\n         self.host = host\n         self.port = port\n@@ -336,6 +336,7 @@\n         self.write_results = []          # results from the 'write_fn'\n         self.results = None             # results from running the app\n         self.output = BytesIO()        # all output from the app, incl headers\n+        self.https = https\n\n     def makefile(self, *args, **kwargs):\n         \"\"\"\n@@ -382,6 +383,8 @@\n\n         # build the environ dictionary.\n         environ = make_environ(inp, self.host, self.port, self.script_name)\n+        if self.https:\n+            environ[\"wsgi.url_scheme\"] = \"https\"\n\n         # run the application.\n         try:\n@@ -539,7 +542,7 @@\n                     sys.stderr.write('INTERCEPTING call to %s:%s\\n' %\n                                      (self.host, self.port,))\n                 self.sock = wsgi_fake_socket(app, self.host, self.port,\n-                                             script_name)\n+                                             script_name, https=True)\n             else:\n                 HTTPSConnection.connect(self)\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/24", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/24/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/24/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/24", "id": 39398087, "node_id": "MDU6SXNzdWUzOTM5ODA4Nw==", "number": 24, "title": "Unit test errors with Python 3.4", "user": {"login": "thomasgoirand", "id": 1257293, "node_id": "MDQ6VXNlcjEyNTcyOTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1257293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasgoirand", "html_url": "https://github.com/thomasgoirand", "followers_url": "https://api.github.com/users/thomasgoirand/followers", "following_url": "https://api.github.com/users/thomasgoirand/following{/other_user}", "gists_url": "https://api.github.com/users/thomasgoirand/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasgoirand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasgoirand/subscriptions", "organizations_url": "https://api.github.com/users/thomasgoirand/orgs", "repos_url": "https://api.github.com/users/thomasgoirand/repos", "events_url": "https://api.github.com/users/thomasgoirand/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasgoirand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2014-08-04T08:01:45Z", "updated_at": "2014-08-14T06:34:21Z", "closed_at": "2014-08-08T10:26:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nTrying to build wsgi-intercept in Debian Sid, in order to upgrade to version 0.8.0 and fix https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=755315, I get the below unit test errors. It'd be really cool if you could have a look so that I can upload and fix this package.\n\nCheers,\n\nThomas Goirand (zigo)\n\n   debian/rules override_dh_auto_test\nmake[1]: Entering directory '/home/zigo/sources/openstack/juno/python-wsgi-intercept/build-area/python-wsgi-intercept-0.8.0'\nhttp_proxy= https_proxy= dh_auto_test\nI: pybuild base:170: cd /home/zigo/sources/openstack/juno/python-wsgi-intercept/build-area/python-wsgi-intercept-0.8.0/.pybuild/pythonX.Y_2.7/build; python2.7 -m pytest \n============================= test session starts ==============================\nplatform linux2 -- Python 2.7.8 -- py-1.4.22 -- pytest-2.6.0\ncollected 33 items\n\ntest/test_http_client.py .....x\ntest/test_httplib2.py .......\ntest/test_requests.py .........\ntest/test_urllib.py ......\ntest/test_wsgi_compliance.py .....\n\n===================== 32 passed, 1 xfailed in 1.38 seconds =====================\nI: pybuild base:170: cd /home/zigo/sources/openstack/juno/python-wsgi-intercept/build-area/python-wsgi-intercept-0.8.0/.pybuild/pythonX.Y_3.4/build; python3.4 -m pytest \n============================= test session starts ==============================\nplatform linux -- Python 3.4.1 -- py-1.4.22 -- pytest-2.6.0\ncollected 33 items\n\ntest/test_http_client.py .....x\ntest/test_httplib2.py .......\ntest/test_requests.py ....FF..F\ntest/test_urllib.py ......\ntest/test_wsgi_compliance.py .....\n\n=================================== FAILURES ===================================\n__________________________________ test_https __________________________________\n\n```\ndef test_https():\n    with InstalledApp(wsgi_app.simple_app, host=HOST, port=443) as app:\n```\n\n> ```\n>       resp = requests.get('https://some_hopefully_nonexistant_domain:443/')\n> ```\n\ntest/test_requests.py:52: \n\n---\n\n/usr/lib/python3/dist-packages/requests/api.py:55: in get\n    return request('get', url, *_kwargs)\n/usr/lib/python3/dist-packages/requests/api.py:44: in request\n    return session.request(method=method, url=url, *_kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:456: in request\n    resp = self.send(prep, *_send_kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:559: in send\n    r = adapter.send(request, *_kwargs)\n/usr/lib/python3/dist-packages/requests/adapters.py:327: in send\n    timeout=timeout\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:491: in urlopen\n    conn = self._get_conn(timeout=pool_timeout)\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:230: in _get_conn\n    return conn or self._new_conn()\n\n---\n\nself = <urllib3.connectionpool.HTTPSConnectionPool object at 0x7f9263cfb5f8>\n\n```\ndef _new_conn(self):\n    \"\"\"\n        Return a fresh :class:`httplib.HTTPSConnection`.\n        \"\"\"\n    self.num_connections += 1\n    log.info(\"Starting new HTTPS connection (%d): %s\"\n             % (self.num_connections, self.host))\n\n    if not self.ConnectionCls or self.ConnectionCls is DummyConnection:\n        # Platform-specific: Python without ssl\n        raise SSLError(\"Can't connect to HTTPS URL because the SSL \"\n                       \"module is not available.\")\n\n    actual_host = self.host\n    actual_port = self.port\n    if self.proxy is not None:\n        actual_host = self.proxy.host\n        actual_port = self.proxy.port\n\n    conn = self.ConnectionCls(host=actual_host, port=actual_port,\n                              timeout=self.timeout.connect_timeout,\n```\n\n> ```\n>                             strict=self.strict, **self.conn_kw)\n> ```\n> \n> E       TypeError: **init**() got an unexpected keyword argument 'strict'\n\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:678: TypeError\n___________________________ test_https_default_port ____________________________\n\n```\ndef test_https_default_port():\n    with InstalledApp(wsgi_app.simple_app, host=HOST, port=443) as app:\n```\n\n> ```\n>       resp = requests.get('https://some_hopefully_nonexistant_domain/')\n> ```\n\ntest/test_requests.py:59: \n\n---\n\n/usr/lib/python3/dist-packages/requests/api.py:55: in get\n    return request('get', url, *_kwargs)\n/usr/lib/python3/dist-packages/requests/api.py:44: in request\n    return session.request(method=method, url=url, *_kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:456: in request\n    resp = self.send(prep, *_send_kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:559: in send\n    r = adapter.send(request, *_kwargs)\n/usr/lib/python3/dist-packages/requests/adapters.py:327: in send\n    timeout=timeout\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:491: in urlopen\n    conn = self._get_conn(timeout=pool_timeout)\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:230: in _get_conn\n    return conn or self._new_conn()\n\n---\n\nself = <urllib3.connectionpool.HTTPSConnectionPool object at 0x7f926354e710>\n\n```\ndef _new_conn(self):\n    \"\"\"\n        Return a fresh :class:`httplib.HTTPSConnection`.\n        \"\"\"\n    self.num_connections += 1\n    log.info(\"Starting new HTTPS connection (%d): %s\"\n             % (self.num_connections, self.host))\n\n    if not self.ConnectionCls or self.ConnectionCls is DummyConnection:\n        # Platform-specific: Python without ssl\n        raise SSLError(\"Can't connect to HTTPS URL because the SSL \"\n                       \"module is not available.\")\n\n    actual_host = self.host\n    actual_port = self.port\n    if self.proxy is not None:\n        actual_host = self.proxy.host\n        actual_port = self.proxy.port\n\n    conn = self.ConnectionCls(host=actual_host, port=actual_port,\n                              timeout=self.timeout.connect_timeout,\n```\n\n> ```\n>                             strict=self.strict, **self.conn_kw)\n> ```\n> \n> E       TypeError: **init**() got an unexpected keyword argument 'strict'\n\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:678: TypeError\n__________________________ test_https_not_intercepted __________________________\n\n```\ndef test_https_not_intercepted():\n    with InstalledApp(wsgi_app.raises_app, host=HOST, port=80):\n        try:\n```\n\n> ```\n>           resp = requests.get(\"https://google.com\")\n> ```\n\ntest/test_requests.py:84: \n\n---\n\n/usr/lib/python3/dist-packages/requests/api.py:55: in get\n    return request('get', url, *_kwargs)\n/usr/lib/python3/dist-packages/requests/api.py:44: in request\n    return session.request(method=method, url=url, *_kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:456: in request\n    resp = self.send(prep, *_send_kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:559: in send\n    r = adapter.send(request, *_kwargs)\n/usr/lib/python3/dist-packages/requests/adapters.py:327: in send\n    timeout=timeout\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:491: in urlopen\n    conn = self._get_conn(timeout=pool_timeout)\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:230: in _get_conn\n    return conn or self._new_conn()\n\n---\n\nself = <urllib3.connectionpool.HTTPSConnectionPool object at 0x7f9262c91b70>\n\n```\ndef _new_conn(self):\n    \"\"\"\n        Return a fresh :class:`httplib.HTTPSConnection`.\n        \"\"\"\n    self.num_connections += 1\n    log.info(\"Starting new HTTPS connection (%d): %s\"\n             % (self.num_connections, self.host))\n\n    if not self.ConnectionCls or self.ConnectionCls is DummyConnection:\n        # Platform-specific: Python without ssl\n        raise SSLError(\"Can't connect to HTTPS URL because the SSL \"\n                       \"module is not available.\")\n\n    actual_host = self.host\n    actual_port = self.port\n    if self.proxy is not None:\n        actual_host = self.proxy.host\n        actual_port = self.proxy.port\n\n    conn = self.ConnectionCls(host=actual_host, port=actual_port,\n                              timeout=self.timeout.connect_timeout,\n```\n\n> ```\n>                             strict=self.strict, **self.conn_kw)\n> ```\n> \n> E       TypeError: **init**() got an unexpected keyword argument 'strict'\n\n/usr/lib/python3/dist-packages/urllib3/connectionpool.py:678: TypeError\n================ 3 failed, 29 passed, 1 xfailed in 1.45 seconds ================\nE: pybuild pybuild:256: test: plugin distutils failed with: exit code=1: cd /home/zigo/sources/openstack/juno/python-wsgi-intercept/build-area/python-wsgi-intercept-0.8.0/.pybuild/pythonX.Y_3.4/build; python3.4 -m pytest \ndh_auto_test: pybuild --test -i python{version} -p 3.4 --dir . returned exit code 13\ndebian/rules:11: recipe for target 'override_dh_auto_test' failed\nmake[1]: **\\* [override_dh_auto_test] Error 13\nmake[1]: Leaving directory '/home/zigo/sources/openstack/juno/python-wsgi-intercept/build-area/python-wsgi-intercept-0.8.0'\ndebian/rules:8: recipe for target 'build' failed\nmake: **\\* [build] Error 2\ndpkg-buildpackage: error: debian/rules build gave error exit status 2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/21", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/21/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/21/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/21", "id": 37709268, "node_id": "MDU6SXNzdWUzNzcwOTI2OA==", "number": 21, "title": "Type error at http_client_intercept.py", "user": {"login": "yuriiz", "id": 811818, "node_id": "MDQ6VXNlcjgxMTgxOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/811818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuriiz", "html_url": "https://github.com/yuriiz", "followers_url": "https://api.github.com/users/yuriiz/followers", "following_url": "https://api.github.com/users/yuriiz/following{/other_user}", "gists_url": "https://api.github.com/users/yuriiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuriiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuriiz/subscriptions", "organizations_url": "https://api.github.com/users/yuriiz/orgs", "repos_url": "https://api.github.com/users/yuriiz/repos", "events_url": "https://api.github.com/users/yuriiz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuriiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-12T01:04:07Z", "updated_at": "2014-12-06T19:23:37Z", "closed_at": "2014-12-06T19:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "http_client_intercept does not work if non-intercepted HTTPS connections are going to be used by client.\n\n```\n  File \"/.../lib/python2.7/site-packages/oauth2/__init__.py\", line 682, in request\n    connection_type=connection_type)\n  File \"/.../lib/python2.7/site-packages/httplib2/__init__.py\", line 1450, in request\n    self.disable_ssl_certificate_validation)\n  File \"/.../lib/python2.7/site-packages/httplib2/__init__.py\", line 929, in __init__\n    cert_file=cert_file, strict=strict)\n  File \"/.../lib/python2.7/site-packages/wsgi_intercept/http_client_intercept.py\", line 39, in __init__\n    HTTP_WSGIInterceptor.__init__(self, host, **kwargs)\nTypeError: __init__() got an unexpected keyword argument 'cert_file'\n```\n- Python 2.7.6 (default, Nov 21 2013, 15:55:38) [GCC] on linux2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/19", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/19/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/19/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/19", "id": 35601045, "node_id": "MDU6SXNzdWUzNTYwMTA0NQ==", "number": 19, "title": "Link to RTD in readme", "user": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-06-12T16:34:49Z", "updated_at": "2014-06-14T12:43:19Z", "closed_at": "2014-06-14T12:43:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://wsgi-intercept.readthedocs.org/en/latest/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/17", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/17/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/17/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/17", "id": 34394319, "node_id": "MDU6SXNzdWUzNDM5NDMxOQ==", "number": 17, "title": "http.client intercept is fragile (somewhat implemented)", "user": {"login": "sashahart", "id": 696412, "node_id": "MDQ6VXNlcjY5NjQxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/696412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sashahart", "html_url": "https://github.com/sashahart", "followers_url": "https://api.github.com/users/sashahart/followers", "following_url": "https://api.github.com/users/sashahart/following{/other_user}", "gists_url": "https://api.github.com/users/sashahart/gists{/gist_id}", "starred_url": "https://api.github.com/users/sashahart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sashahart/subscriptions", "organizations_url": "https://api.github.com/users/sashahart/orgs", "repos_url": "https://api.github.com/users/sashahart/repos", "events_url": "https://api.github.com/users/sashahart/events{/privacy}", "received_events_url": "https://api.github.com/users/sashahart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-05-27T17:28:42Z", "updated_at": "2014-08-11T02:07:45Z", "closed_at": "2014-08-11T02:07:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I understand that http.client doesn't offer such an obvious way to monkeypatch it (like setting .ConnectionCls in requests, etc.) because it's just not made to be pluggable this way. So of course the current implementation does the obvious thing and replaces HTTPConnection/HTTPSConnection on the imported module object. But this also makes it sensitive to how you import and access the classes, at minimum you shouldn't access attributes of the http.client module object until after our install() ran. Just by accident I've found several ways to make the intercept installation fail.\nIt's all understandable but maybe not so nice for users and I'm not yet sure what to do with it. More cosmetically, it would be nice to be able to toss that snippet in the doc about how it's only somewhat implemented, and the warning snippet I put in the doc example for http.client.\n\nI don't know if it is worth doing a deeper dive into http.client to find a different extension point (messing with its imported socket module or something like that) so that we can change it in-place to avoid some of the import order issue. \n\nAlternatively, wsgi_intercept could provide a fake 'patched' module to use instead of the real one, and we just recommend that usage. This doesn't address uses where you want to run unmodified third-party code with the intercept (in which case, you can probably afford to manage the fiddly import order?), but it does provide a natural usage which is less fragile for things like test code under direct control of the user.\n\nBut directly providing fake modules (imported from wsgi_intercept) is something I consider providing for all the intercepts, so if that is the way to resolve the http.client issue then maybe we should do nothing on http.client and let that bigger change mostly-resolve this case too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/9", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/9/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/9/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/9", "id": 33759734, "node_id": "MDU6SXNzdWUzMzc1OTczNA==", "number": 9, "title": "test_httplib2.test_https_success depends on side effects of other tests", "user": {"login": "sashahart", "id": 696412, "node_id": "MDQ6VXNlcjY5NjQxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/696412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sashahart", "html_url": "https://github.com/sashahart", "followers_url": "https://api.github.com/users/sashahart/followers", "following_url": "https://api.github.com/users/sashahart/following{/other_user}", "gists_url": "https://api.github.com/users/sashahart/gists{/gist_id}", "starred_url": "https://api.github.com/users/sashahart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sashahart/subscriptions", "organizations_url": "https://api.github.com/users/sashahart/orgs", "repos_url": "https://api.github.com/users/sashahart/repos", "events_url": "https://api.github.com/users/sashahart/events{/privacy}", "received_events_url": "https://api.github.com/users/sashahart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-05-18T20:38:34Z", "updated_at": "2014-05-19T21:53:01Z", "closed_at": "2014-05-19T21:53:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I found this while trying out some restructuring of the tests to get rid of the globally shared state between different tests, and found that doing that caused this one test to start failing on python2. Other tests seemed to be working.\n\nTo reproduce, suppose I disable every other test in test_httplib2: for example, if I go into test_httplib2.py and change 'def test_success' to 'def _test_success' and 'def test_bogus_domain' to 'def _test_bogus_domain'. I see that test_https_success fails on python2 (python2.6, python2.7, pypy's 2.7) with ServerNotFoundError: Unable to find the server at some_hopefully_nonexistant_domain. Still seems OK on python3.\n\nRe-enable either of the other tests, and it succeeds for all the versions.\nAs expected, same thing if you use py.test -k https_success to only run that one test without running the others in test_httplib2.\n\nIt stands to reason that this is because of the calls to install() affecting global state to install the intercept, and that state not being reset between tests, creating the implicit dependency of test_https_success on the others' installation of the intercept, and the failure mode of actually trying to do something with the hostname.\n\nIt depends on install() running at all - with all tests running, test_https_success fails in python2 depending on whether or not another test has called install() - tested by commenting out those lines.\n\nIt also depends on what argument is passed to install(). Again with all tests but test_https_success disabled, I modify test_https_success so that install(443) says instead install(). And I see the same test fails on python3 (python3.3, python3.4) with httplib2.ServerNotFoundError: Unable to find the server at some_hopefully_nonexistant_domain. Still seems OK on python2.\n\nTo summarize: in isolation from the other tests, calling install() lets test_https_success pass on python2 but fail on python3, while calling install(443) lets it pass on python3 but fail on python2. The question is why the intercept installation is failing to take in either case, almost certainly involving some python2 vs. python3 branch.\n\nTo be continued with more info\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/5", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/5/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/5/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/5", "id": 33461943, "node_id": "MDU6SXNzdWUzMzQ2MTk0Mw==", "number": 5, "title": "TypeError exceptions from wsgi app are silently absorbed", "user": {"login": "hmoffatt", "id": 7577172, "node_id": "MDQ6VXNlcjc1NzcxNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7577172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmoffatt", "html_url": "https://github.com/hmoffatt", "followers_url": "https://api.github.com/users/hmoffatt/followers", "following_url": "https://api.github.com/users/hmoffatt/following{/other_user}", "gists_url": "https://api.github.com/users/hmoffatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmoffatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmoffatt/subscriptions", "organizations_url": "https://api.github.com/users/hmoffatt/orgs", "repos_url": "https://api.github.com/users/hmoffatt/repos", "events_url": "https://api.github.com/users/hmoffatt/events{/privacy}", "received_events_url": "https://api.github.com/users/hmoffatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-05-14T05:15:46Z", "updated_at": "2014-05-22T18:40:20Z", "closed_at": "2014-05-22T18:40:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm testing my WSGI app using Requests and wsgi_intercept. My app was throwing a TypeError, which was being silently caught once and the WSGI request repeated.\n\nIt appears to be happening in wsgi_intercept. I wonder it's because the wsgi_fake_socket.sendall method catches a TypeError and then tries the request again with a different encoding... but I can't confirm this from the stack trace.\n\n```\nimport requests\nimport wsgi_intercept\nfrom wsgi_intercept import requests_intercept\n\nwsgi_intercept.debuglevel = 2\n\ndef simple_app(environ, start_response):\n    \"\"\"Simplest possible application object\"\"\"\n    status = '200 OK'\n    response_headers = [('Content-type', 'text/plain')]\n    start_response(status, response_headers)\n    raise TypeError, \"bah\"\n    #raise Exception, \"bah\"\n\nif __name__ == '__main__':\n    requests_intercept.install()\n    wsgi_intercept.add_wsgi_intercept('foo', 80, lambda s = simple_app: s)\n    print requests.get('http://foo/')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/1", "repository_url": "https://api.github.com/repos/cdent/wsgi-intercept", "labels_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/1/comments", "events_url": "https://api.github.com/repos/cdent/wsgi-intercept/issues/1/events", "html_url": "https://github.com/cdent/wsgi-intercept/issues/1", "id": 23384303, "node_id": "MDU6SXNzdWUyMzM4NDMwMw==", "number": 1, "title": "test_bogus_domain in test_httplib2.py fails with error, not gaierror", "user": {"login": "dev-zero", "id": 11307, "node_id": "MDQ6VXNlcjExMzA3", "avatar_url": "https://avatars2.githubusercontent.com/u/11307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dev-zero", "html_url": "https://github.com/dev-zero", "followers_url": "https://api.github.com/users/dev-zero/followers", "following_url": "https://api.github.com/users/dev-zero/following{/other_user}", "gists_url": "https://api.github.com/users/dev-zero/gists{/gist_id}", "starred_url": "https://api.github.com/users/dev-zero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dev-zero/subscriptions", "organizations_url": "https://api.github.com/users/dev-zero/orgs", "repos_url": "https://api.github.com/users/dev-zero/repos", "events_url": "https://api.github.com/users/dev-zero/events{/privacy}", "received_events_url": "https://api.github.com/users/dev-zero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-11-27T12:37:33Z", "updated_at": "2014-03-17T18:08:46Z", "closed_at": "2014-03-17T18:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "No idea what else I should write, but I had to replace gaierror with error to get the test to succeed.\n", "performed_via_github_app": null, "score": 1.0}]}