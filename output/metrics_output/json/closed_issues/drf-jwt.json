{"total_count": 16, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/60", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/60/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/60/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/60", "id": 657589586, "node_id": "MDU6SXNzdWU2NTc1ODk1ODY=", "number": 60, "title": "Update documentation to add explicit instructions for installation", "user": {"login": "timmyomahony", "id": 615149, "node_id": "MDQ6VXNlcjYxNTE0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/615149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timmyomahony", "html_url": "https://github.com/timmyomahony", "followers_url": "https://api.github.com/users/timmyomahony/followers", "following_url": "https://api.github.com/users/timmyomahony/following{/other_user}", "gists_url": "https://api.github.com/users/timmyomahony/gists{/gist_id}", "starred_url": "https://api.github.com/users/timmyomahony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timmyomahony/subscriptions", "organizations_url": "https://api.github.com/users/timmyomahony/orgs", "repos_url": "https://api.github.com/users/timmyomahony/repos", "events_url": "https://api.github.com/users/timmyomahony/events{/privacy}", "received_events_url": "https://api.github.com/users/timmyomahony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-15T19:15:41Z", "updated_at": "2020-07-16T14:36:52Z", "closed_at": "2020-07-16T14:36:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add explicit instructions to add both `rest_framework_jwt` **and `rest_framework_jwt.blacklist`** to your `INSTALLED_APPS`.\r\n\r\n```\r\nINSTALLED_APPS = [\r\n  'rest_framework_jwt',\r\n  'rest_framework_jwt.blacklist'\r\n]\r\n```\r\n\r\nI've just spent hours tracking down an issue that was arising when running my tests. I was getting a red-herring error message when setting up my tests:\r\n\r\n> psycopg2.errors.UndefinedTable: relation \"user_customuser\" does not exist\r\n\r\n[Looking online](https://stackoverflow.com/questions/56355516/how-to-resolve-the-psycopg2-errors-undefinedtable-relation-auth-user-does-no), most people with this issue related it to having missing migrations. I checked and double-checked all my migrations for my apps and they were all there.\r\n\r\nIt was only after I ran my tests with `-v 3` did I realise the issue was happening after trying to set up `rest_framework_jwt`: \r\n\r\n```\r\n...\r\nRunning pre-migrate handlers for application team\r\nRunning pre-migrate handlers for application user\r\nRunning pre-migrate handlers for application volume\r\nSynchronizing apps without migrations:\r\n  Creating tables...\r\n    Creating table rest_framework_jwt_blacklistedtoken\r\n    Running deferred SQL...\r\nTraceback (most recent call last):\r\n  File \"/Users/timmyomahony/.virtualenvs/ci-api/lib/python3.7/site-packages/django/db/backends/utils.py\", line 86, in _execute\r\n    return self.cursor.execute(sql, params)\r\npsycopg2.errors.UndefinedTable: relation \"user_customuser\" does not exist\r\n```\r\n\r\nThe problem was that I didn't know about the `blacklist` app within the project, therefore it wasn't included in my `INSTALLEDAPPS`. Regardless, Django was looking for the table `rest_framework_jwt_blacklistedtoken` and was crashing everything.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/59", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/59/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/59/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/59", "id": 653996706, "node_id": "MDU6SXNzdWU2NTM5OTY3MDY=", "number": 59, "title": "Documentation to use Blacklist", "user": {"login": "rwanito", "id": 3319994, "node_id": "MDQ6VXNlcjMzMTk5OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3319994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwanito", "html_url": "https://github.com/rwanito", "followers_url": "https://api.github.com/users/rwanito/followers", "following_url": "https://api.github.com/users/rwanito/following{/other_user}", "gists_url": "https://api.github.com/users/rwanito/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwanito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwanito/subscriptions", "organizations_url": "https://api.github.com/users/rwanito/orgs", "repos_url": "https://api.github.com/users/rwanito/repos", "events_url": "https://api.github.com/users/rwanito/events{/privacy}", "received_events_url": "https://api.github.com/users/rwanito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-09T11:46:10Z", "updated_at": "2020-07-16T14:36:52Z", "closed_at": "2020-07-16T14:36:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\n\r\nI'm triing to set up my first rest api with your work.\r\nI want to make a /logout to blacklist the token but I don't how to use ?\r\n\r\nThe documentation is not very easy to understand in the part of blacklisting.\r\n\r\nThanks a lot for your job !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/56", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/56/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/56/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/56", "id": 631079838, "node_id": "MDU6SXNzdWU2MzEwNzk4Mzg=", "number": 56, "title": "custom username fields are not honored", "user": {"login": "radix", "id": 227068, "node_id": "MDQ6VXNlcjIyNzA2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/227068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radix", "html_url": "https://github.com/radix", "followers_url": "https://api.github.com/users/radix/followers", "following_url": "https://api.github.com/users/radix/following{/other_user}", "gists_url": "https://api.github.com/users/radix/gists{/gist_id}", "starred_url": "https://api.github.com/users/radix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radix/subscriptions", "organizations_url": "https://api.github.com/users/radix/orgs", "repos_url": "https://api.github.com/users/radix/repos", "events_url": "https://api.github.com/users/radix/events{/privacy}", "received_events_url": "https://api.github.com/users/radix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T19:09:46Z", "updated_at": "2020-06-17T17:03:46Z", "closed_at": "2020-06-17T17:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently switched from the old djangorestframework-jwt to this package, and another thing I noticed is that the old package used to honor custom username fields by using `get_user_model().USERNAME_FIELD` (defined in `get_username_field` in `compat.py`). Funnily enough, drf-jwt defines a `get_username_field()` function in `utils.py`, but then doesn't use it, unconditionally assigning to `username`.\r\n\r\nThis ends up breaking my app because my `authenticate` stack requires my custom username field to be in the `**kwargs` that get passed to it, and tokens created with `drf-jwt` don't have that.\r\n\r\nFor now I am working around this problem by defining a custom JWT payload handler and renaming the key.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/55", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/55/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/55/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/55", "id": 630324628, "node_id": "MDU6SXNzdWU2MzAzMjQ2Mjg=", "number": 55, "title": "documentation doesn't mention need of INSTALLED_APPS", "user": {"login": "radix", "id": 227068, "node_id": "MDQ6VXNlcjIyNzA2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/227068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radix", "html_url": "https://github.com/radix", "followers_url": "https://api.github.com/users/radix/followers", "following_url": "https://api.github.com/users/radix/following{/other_user}", "gists_url": "https://api.github.com/users/radix/gists{/gist_id}", "starred_url": "https://api.github.com/users/radix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radix/subscriptions", "organizations_url": "https://api.github.com/users/radix/orgs", "repos_url": "https://api.github.com/users/radix/repos", "events_url": "https://api.github.com/users/radix/events{/privacy}", "received_events_url": "https://api.github.com/users/radix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-03T20:55:30Z", "updated_at": "2020-07-16T14:36:52Z", "closed_at": "2020-07-16T14:36:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just switched from djangorestframework-jwt to this package, and one of the things I ran into was this error:\r\n\r\n```\r\nRuntimeError: Model class rest_framework_jwt.blacklist.models.BlacklistedToken doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.\r\n```\r\n\r\nI had to add `rest_framework_jwt` to `INSTALLED_APPS` in order for my code to work. This isn't mentioned anywhere in the documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/53", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/53/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/53/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/53", "id": 628890367, "node_id": "MDU6SXNzdWU2Mjg4OTAzNjc=", "number": 53, "title": "compat.gettext_lazy is not using the lazy version", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-02T04:26:38Z", "updated_at": "2020-06-02T07:02:31Z", "closed_at": "2020-06-02T07:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```py\r\n...\r\n  File \"/usr/lib/python3.8/site-packages/rest_framework/settings.py\", line 177, in import_from_string\r\n    return import_string(val)\r\n  File \"/usr/lib/python3.8/site-packages/django/utils/module_loading.py\", line 17, in import_string\r\n    module = import_module(module_path)\r\n  File \"/usr/lib64/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"/usr/lib/python3.8/site-packages/rest_framework_jwt/authentication.py\", line 17, in <module>\r\n    from rest_framework_jwt.blacklist.exceptions import (\r\n  File \"/usr/lib/python3.8/site-packages/rest_framework_jwt/blacklist/exceptions.py\", line 8, in <module>\r\n    class MissingToken(AuthenticationFailed):\r\n  File \"/usr/lib/python3.8/site-packages/rest_framework_jwt/blacklist/exceptions.py\", line 10, in MissingToken\r\n    msg = _('The token is missing.')\r\n  File \"/usr/lib/python3.8/site-packages/django/utils/translation/__init__.py\", line 92, in gettext\r\n    return _trans.gettext(message)\r\n  File \"/usr/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 354, in gettext\r\n    _default = _default or translation(settings.LANGUAGE_CODE)\r\n  File \"/usr/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 267, in translation\r\n    _translations[language] = DjangoTranslation(language)\r\n  File \"/usr/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 154, in __init__\r\n    self._add_installed_apps_translations()\r\n  File \"/usr/lib/python3.8/site-packages/django/utils/translation/trans_real.py\", line 195, in _add_installed_apps_translations\r\n    raise AppRegistryNotReady(\r\ndjango.core.exceptions.AppRegistryNotReady: The translation infrastructure cannot be initialized before the apps registry is ready. Check that you don't make non-lazy gettext calls at import time.\r\n```\r\n\r\nPatch OTW.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/47", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/47/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/47/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/47", "id": 604761574, "node_id": "MDU6SXNzdWU2MDQ3NjE1NzQ=", "number": 47, "title": "Tests with settings monkeypatches failing ", "user": {"login": "dominik-bln", "id": 855119, "node_id": "MDQ6VXNlcjg1NTExOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominik-bln", "html_url": "https://github.com/dominik-bln", "followers_url": "https://api.github.com/users/dominik-bln/followers", "following_url": "https://api.github.com/users/dominik-bln/following{/other_user}", "gists_url": "https://api.github.com/users/dominik-bln/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominik-bln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominik-bln/subscriptions", "organizations_url": "https://api.github.com/users/dominik-bln/orgs", "repos_url": "https://api.github.com/users/dominik-bln/repos", "events_url": "https://api.github.com/users/dominik-bln/events{/privacy}", "received_events_url": "https://api.github.com/users/dominik-bln/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T13:33:10Z", "updated_at": "2020-04-23T07:18:11Z", "closed_at": "2020-04-23T07:11:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like all tests that are using `monkeypatch` to make changes to the `api_settings` recently started to fail. I tried a bit to fix this for the PRs I just opened, but am not completely sure what is causing this, might be some update in a dependency (?).\r\n\r\nThe only thing related I could find for this is the following issue in `django-rest-framework`:\r\n\r\nhttps://github.com/encode/django-rest-framework/issues/7120\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/44", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/44/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/44/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/44", "id": 602591621, "node_id": "MDU6SXNzdWU2MDI1OTE2MjE=", "number": 44, "title": "Install instructions missing \"rest_framework_jwt\" for installed apps", "user": {"login": "tithamane", "id": 5633403, "node_id": "MDQ6VXNlcjU2MzM0MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5633403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tithamane", "html_url": "https://github.com/tithamane", "followers_url": "https://api.github.com/users/tithamane/followers", "following_url": "https://api.github.com/users/tithamane/following{/other_user}", "gists_url": "https://api.github.com/users/tithamane/gists{/gist_id}", "starred_url": "https://api.github.com/users/tithamane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tithamane/subscriptions", "organizations_url": "https://api.github.com/users/tithamane/orgs", "repos_url": "https://api.github.com/users/tithamane/repos", "events_url": "https://api.github.com/users/tithamane/events{/privacy}", "received_events_url": "https://api.github.com/users/tithamane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-19T01:16:03Z", "updated_at": "2020-05-11T07:40:24Z", "closed_at": "2020-05-11T07:40:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tend to follow the installation instructions and had this working before. Now after sometime I tried to use this a different project and it refused to work even though I had followed the instructions.\r\n\r\nI had to check an old project to see how I solved it and it turns out that I forgot to add \"rest_framework_jwt\" in the installed APPS.\r\n\r\nCould you maybe add this to you docs for the settings file? Usually when following instructions, it would be good if the thing works without issues.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/43", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/43/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/43/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/43", "id": 602124497, "node_id": "MDU6SXNzdWU2MDIxMjQ0OTc=", "number": 43, "title": "Deprecation Warnings In Django 3", "user": {"login": "dominik-bln", "id": 855119, "node_id": "MDQ6VXNlcjg1NTExOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/855119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominik-bln", "html_url": "https://github.com/dominik-bln", "followers_url": "https://api.github.com/users/dominik-bln/followers", "following_url": "https://api.github.com/users/dominik-bln/following{/other_user}", "gists_url": "https://api.github.com/users/dominik-bln/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominik-bln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominik-bln/subscriptions", "organizations_url": "https://api.github.com/users/dominik-bln/orgs", "repos_url": "https://api.github.com/users/dominik-bln/repos", "events_url": "https://api.github.com/users/dominik-bln/events{/privacy}", "received_events_url": "https://api.github.com/users/dominik-bln/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-17T17:24:19Z", "updated_at": "2020-04-23T08:08:31Z", "closed_at": "2020-04-23T08:08:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "We recently updated from Django 2 to Django 3 and are now seeing quite a few deprecation warnings regarding `RemovedInDjango40Warning: django.utils.translation.ugettext() is deprecated in favor of django.utils.translation.gettext()` coming from this package.\r\n\r\nI believe this is caused by the try-catch block in `compat.py` being \"reused\" for multiple imports where the first line seems to fail in Django 3:\r\n\r\nhttps://github.com/Styria-Digital/django-rest-framework-jwt/blob/master/src/rest_framework_jwt/compat.py#L12\r\n\r\nIt looks like `url` is not part of `django.conf` and therefore always raises `ImportError`:\r\n\r\nhttps://docs.djangoproject.com/en/3.0/ref/urls/\r\n\r\nI believe the following should fix the problem in `compat.py`, I'm just not completely sure if the middle block even makes sense or of it should be completely removed:\r\n\r\n```python\r\ntry:\r\n    from django.urls import include\r\nexcept ImportError:\r\n    from django.conf.urls import include  # noqa: F401\r\n\r\ntry:\r\n  from django.urls import url\r\nexcept ImportError:\r\n  from django.conf.urls import url\r\n\r\ntry:\r\n    from django.utils.translation import gettext as gettext_lazy\r\nexcept ImportError:\r\n    from django.utils.translation import ugettext as gettext_lazy\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/40", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/40/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/40/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/40", "id": 582486544, "node_id": "MDU6SXNzdWU1ODI0ODY1NDQ=", "number": 40, "title": "Migrations fail on MySQL", "user": {"login": "jmbowman", "id": 1005375, "node_id": "MDQ6VXNlcjEwMDUzNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1005375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmbowman", "html_url": "https://github.com/jmbowman", "followers_url": "https://api.github.com/users/jmbowman/followers", "following_url": "https://api.github.com/users/jmbowman/following{/other_user}", "gists_url": "https://api.github.com/users/jmbowman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmbowman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmbowman/subscriptions", "organizations_url": "https://api.github.com/users/jmbowman/orgs", "repos_url": "https://api.github.com/users/jmbowman/repos", "events_url": "https://api.github.com/users/jmbowman/events{/privacy}", "received_events_url": "https://api.github.com/users/jmbowman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1124494313, "node_id": "MDU6TGFiZWwxMTI0NDk0MzEz", "url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1124494317, "node_id": "MDU6TGFiZWwxMTI0NDk0MzE3", "url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-16T17:43:30Z", "updated_at": "2020-06-27T18:01:32Z", "closed_at": "2020-06-27T18:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "The migrations for the new `blacklist` app fail because `TextField` can't have a unique constraint in MySQL: https://docs.djangoproject.com/en/2.2/ref/databases/#textfield-limitations .  It fails with:\r\n\r\n> BLOB/TEXT column 'token' used in key specification without a key length\r\n\r\nFor now we can downgrade to 0.14.0 as we don't need the blacklist functionality yet, but this is a blocker for upgrading until not only a new migration fixes the problem, but the existing migration changes to not blow up on MySQL.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/38", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/38/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/38/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/38", "id": 576230954, "node_id": "MDU6SXNzdWU1NzYyMzA5NTQ=", "number": 38, "title": "maintenance status?", "user": {"login": "nigoroll", "id": 1528104, "node_id": "MDQ6VXNlcjE1MjgxMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1528104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nigoroll", "html_url": "https://github.com/nigoroll", "followers_url": "https://api.github.com/users/nigoroll/followers", "following_url": "https://api.github.com/users/nigoroll/following{/other_user}", "gists_url": "https://api.github.com/users/nigoroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/nigoroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nigoroll/subscriptions", "organizations_url": "https://api.github.com/users/nigoroll/orgs", "repos_url": "https://api.github.com/users/nigoroll/repos", "events_url": "https://api.github.com/users/nigoroll/events{/privacy}", "received_events_url": "https://api.github.com/users/nigoroll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-05T12:51:10Z", "updated_at": "2020-03-11T18:52:31Z", "closed_at": "2020-03-11T18:43:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear people at Styria,\r\n[this comment](https://github.com/Styria-Digital/django-rest-framework-jwt/pull/37#issuecomment-593931259) suggests that there might not be an active maintainer for this package at the moment.\r\nIt would be helpful to get some quick feedback on the maintenance status. If you need any help, please say so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/36", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/36/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/36/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/36", "id": 574221165, "node_id": "MDU6SXNzdWU1NzQyMjExNjU=", "number": 36, "title": "Blacklisted tokens can still be refreshed", "user": {"login": "ashokdelphia", "id": 48444234, "node_id": "MDQ6VXNlcjQ4NDQ0MjM0", "avatar_url": "https://avatars1.githubusercontent.com/u/48444234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashokdelphia", "html_url": "https://github.com/ashokdelphia", "followers_url": "https://api.github.com/users/ashokdelphia/followers", "following_url": "https://api.github.com/users/ashokdelphia/following{/other_user}", "gists_url": "https://api.github.com/users/ashokdelphia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashokdelphia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashokdelphia/subscriptions", "organizations_url": "https://api.github.com/users/ashokdelphia/orgs", "repos_url": "https://api.github.com/users/ashokdelphia/repos", "events_url": "https://api.github.com/users/ashokdelphia/events{/privacy}", "received_events_url": "https://api.github.com/users/ashokdelphia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-02T20:17:34Z", "updated_at": "2020-03-12T09:01:27Z", "closed_at": "2020-03-12T09:01:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you configure an app to allow blacklisting tokens and turn `JWT_ALLOW_REFRESH` on, then you can still operate the refresh endpoint using a blacklisted token, which allows you to side-step the fact that the token is invalidated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/34", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/34/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/34/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/34", "id": 568241132, "node_id": "MDU6SXNzdWU1NjgyNDExMzI=", "number": 34, "title": "[1.15.0] rest-framework-jwt breaks if blacklist app is not installed", "user": {"login": "igadmile", "id": 11078369, "node_id": "MDQ6VXNlcjExMDc4MzY5", "avatar_url": "https://avatars2.githubusercontent.com/u/11078369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igadmile", "html_url": "https://github.com/igadmile", "followers_url": "https://api.github.com/users/igadmile/followers", "following_url": "https://api.github.com/users/igadmile/following{/other_user}", "gists_url": "https://api.github.com/users/igadmile/gists{/gist_id}", "starred_url": "https://api.github.com/users/igadmile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igadmile/subscriptions", "organizations_url": "https://api.github.com/users/igadmile/orgs", "repos_url": "https://api.github.com/users/igadmile/repos", "events_url": "https://api.github.com/users/igadmile/events{/privacy}", "received_events_url": "https://api.github.com/users/igadmile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-20T11:41:28Z", "updated_at": "2020-05-28T14:53:18Z", "closed_at": "2020-02-24T11:15:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "New version forces users to have blacklist app installed even if the feature is not being used.\r\n\r\nEg. of failed test:\r\n\r\n> psycopg2.errors.UndefinedTable: relation \"rest_framework_jwt_blacklistedtoken\" does not exist\r\nE               LINE 1: SELECT (1) AS \"a\" FROM \"rest_framework_jwt_blacklistedtoken\"...\r\n\r\n\r\nI assume the issue is [here](https://github.com/Styria-Digital/django-rest-framework-jwt/blob/master/src/rest_framework_jwt/authentication.py#L70).\r\n\r\nIt wold be desirable to add a check if the app is installed and only run it if it is.\r\n\r\nI can provide a fix if we agree on the solution :smile: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/31", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/31/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/31/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/31", "id": 556780640, "node_id": "MDU6SXNzdWU1NTY3ODA2NDA=", "number": 31, "title": "RFC: Support for multiple key IDs", "user": {"login": "nigoroll", "id": 1528104, "node_id": "MDQ6VXNlcjE1MjgxMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1528104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nigoroll", "html_url": "https://github.com/nigoroll", "followers_url": "https://api.github.com/users/nigoroll/followers", "following_url": "https://api.github.com/users/nigoroll/following{/other_user}", "gists_url": "https://api.github.com/users/nigoroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/nigoroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nigoroll/subscriptions", "organizations_url": "https://api.github.com/users/nigoroll/orgs", "repos_url": "https://api.github.com/users/nigoroll/repos", "events_url": "https://api.github.com/users/nigoroll/events{/privacy}", "received_events_url": "https://api.github.com/users/nigoroll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1124494315, "node_id": "MDU6TGFiZWwxMTI0NDk0MzE1", "url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-29T10:47:59Z", "updated_at": "2020-04-23T10:45:50Z", "closed_at": "2020-04-23T10:45:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before starting any development work, I would like to ask for opinions/advise on the following feature idea:\r\nSeamless changes to the signing key of a JWT, be it symmetrical or asymmetrical, requires a rollover procedure where consumers start to accept a new key before issuers create any tokens signed by it. While it would be possible to support such rollover with just a second key to try (usually called a _transition_ secret or key), using [JSON Web Key (JWK) IDs (kid)](https://tools.ietf.org/html/rfc7515#section-4.1.4) appears to be the cleaner solution:\r\na `kid` (key id) parameter imforms consumers about which (known) key to use for validating a token.\r\n\r\nNotice that this is particularly relevant in scenarios where a single JWT/JWS is used by multiple applications which need to be coordinated for secret/key rollover.\r\n\r\nWhile complete [JSON Web Signature (JWS)](https://tools.ietf.org/html/rfc7515) support would include many more [JOSE header values](https://tools.ietf.org/html/rfc7515#section-4), I would  suggest to only add\r\n* support for the `kid` paramter\r\n* support for multiple public keys / secrets to accept, identified by a `kid`\r\n* stick to a single public key / secret to use for issuing tokens, which also needs to be identified by a `kid`\r\n\r\nOpinions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/10", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/10/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/10/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/10", "id": 452700027, "node_id": "MDU6SXNzdWU0NTI3MDAwMjc=", "number": 10, "title": "custom JWT_RESPONSE_PAYLOAD_HANDLER negated by second call to view serializer", "user": {"login": "fablet", "id": 9263707, "node_id": "MDQ6VXNlcjkyNjM3MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9263707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fablet", "html_url": "https://github.com/fablet", "followers_url": "https://api.github.com/users/fablet/followers", "following_url": "https://api.github.com/users/fablet/following{/other_user}", "gists_url": "https://api.github.com/users/fablet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fablet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fablet/subscriptions", "organizations_url": "https://api.github.com/users/fablet/orgs", "repos_url": "https://api.github.com/users/fablet/repos", "events_url": "https://api.github.com/users/fablet/events{/privacy}", "received_events_url": "https://api.github.com/users/fablet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-05T20:26:18Z", "updated_at": "2019-12-13T11:31:00Z", "closed_at": "2019-12-13T09:49:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Styria-Digital/django-rest-framework-jwt/blob/9d97eab9ad3df81e7418b20b6f2a9dea6e489a0b/src/rest_framework_jwt/views.py#L40\r\n\r\nThe call to self.get_serializer at line 40 in BaseJSONWebTokenAPIView causes the payload created by api_settings.JWT_RESPONSE_PAYLOAD_HANDLER to be run back through the JSONWebTokenSerializer, effectively eliminating anything added to the payload by a custom handler other than the fields in JSONWebTokenSerializer.\r\nFor example, the custom payload handler, that I wrote and have been successfully using with the original GetBlimp package, uses \"authentication_token\", rather than \"token\" to return the token, and includes some additional pieces of data, but with the new view, the only thing returned by the response is \"email\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/8", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/8/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/8/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/8", "id": 435082961, "node_id": "MDU6SXNzdWU0MzUwODI5NjE=", "number": 8, "title": "Django 2.x", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-19T07:41:26Z", "updated_at": "2019-04-23T19:41:32Z", "closed_at": "2019-04-23T19:41:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "setup.py lists install requirements `Django>=1.11,<2.0` , however this passes all tests on Django 2.2 at least, and pypi package `django-restframework-jwt` is known to work fairly well on Django 2.0 and 2.1 even now.\r\n\r\nIs there any reason not to expand the support matrix to include Django 2.x, with .travis.yml/tox.ini matrixes covering those ?\r\n\r\nI think that the lack of stated support for Django 2.x is one of the main reasons people are looking for a maintained drop-in replacement for pypi package `django-restframework-jwt`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/1", "repository_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt", "labels_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/1/comments", "events_url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/issues/1/events", "html_url": "https://github.com/Styria-Digital/django-rest-framework-jwt/issues/1", "id": 383747319, "node_id": "MDU6SXNzdWUzODM3NDczMTk=", "number": 1, "title": "Blacklisting/revoking JWTs", "user": {"login": "fitodic", "id": 9989566, "node_id": "MDQ6VXNlcjk5ODk1NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9989566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fitodic", "html_url": "https://github.com/fitodic", "followers_url": "https://api.github.com/users/fitodic/followers", "following_url": "https://api.github.com/users/fitodic/following{/other_user}", "gists_url": "https://api.github.com/users/fitodic/gists{/gist_id}", "starred_url": "https://api.github.com/users/fitodic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fitodic/subscriptions", "organizations_url": "https://api.github.com/users/fitodic/orgs", "repos_url": "https://api.github.com/users/fitodic/repos", "events_url": "https://api.github.com/users/fitodic/events{/privacy}", "received_events_url": "https://api.github.com/users/fitodic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1124494315, "node_id": "MDU6TGFiZWwxMTI0NDk0MzE1", "url": "https://api.github.com/repos/Styria-Digital/django-rest-framework-jwt/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "mjun", "id": 2719404, "node_id": "MDQ6VXNlcjI3MTk0MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2719404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjun", "html_url": "https://github.com/mjun", "followers_url": "https://api.github.com/users/mjun/followers", "following_url": "https://api.github.com/users/mjun/following{/other_user}", "gists_url": "https://api.github.com/users/mjun/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjun/subscriptions", "organizations_url": "https://api.github.com/users/mjun/orgs", "repos_url": "https://api.github.com/users/mjun/repos", "events_url": "https://api.github.com/users/mjun/events{/privacy}", "received_events_url": "https://api.github.com/users/mjun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mjun", "id": 2719404, "node_id": "MDQ6VXNlcjI3MTk0MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2719404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjun", "html_url": "https://github.com/mjun", "followers_url": "https://api.github.com/users/mjun/followers", "following_url": "https://api.github.com/users/mjun/following{/other_user}", "gists_url": "https://api.github.com/users/mjun/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjun/subscriptions", "organizations_url": "https://api.github.com/users/mjun/orgs", "repos_url": "https://api.github.com/users/mjun/repos", "events_url": "https://api.github.com/users/mjun/events{/privacy}", "received_events_url": "https://api.github.com/users/mjun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-23T09:12:59Z", "updated_at": "2020-02-24T11:23:13Z", "closed_at": "2020-02-24T11:23:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If a user changes its authentication credentials, e.g. its password, the old token is still valid and the user is not \"logged out\". This could be a potential security issue when users' accounts are concerned, at least until the tokens expire.\r\n\r\nCould we implement a mechanism for revoking/blacklisting JWTs? [django-rest-framework-simplejwt](https://github.com/davesque/django-rest-framework-simplejwt#blacklist-app)'s approach could serve as a good starting point.\r\n", "performed_via_github_app": null, "score": 1.0}]}