{"total_count": 54, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/155", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/155/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/155/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/155", "id": 561343176, "node_id": "MDU6SXNzdWU1NjEzNDMxNzY=", "number": 155, "title": "What's the best way to add the current request object to Jinja's globals?", "user": {"login": "Deimos", "id": 9033, "node_id": "MDQ6VXNlcjkwMzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Deimos", "html_url": "https://github.com/Deimos", "followers_url": "https://api.github.com/users/Deimos/followers", "following_url": "https://api.github.com/users/Deimos/following{/other_user}", "gists_url": "https://api.github.com/users/Deimos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Deimos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Deimos/subscriptions", "organizations_url": "https://api.github.com/users/Deimos/orgs", "repos_url": "https://api.github.com/users/Deimos/repos", "events_url": "https://api.github.com/users/Deimos/events{/privacy}", "received_events_url": "https://api.github.com/users/Deimos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-07T00:05:15Z", "updated_at": "2020-02-07T00:42:00Z", "closed_at": "2020-02-07T00:19:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When importing macros in Jinja, [they only have access to the globals by default](https://jinja.palletsprojects.com/en/2.11.x/templates/#import). Quite a few of my macros need to use `request` for things like permission checks (via `.has_permission()`), so those macros always need to be imported using `with context` so that they can use the request object, otherwise it's only accessible in the \"top-level\" template.\r\n\r\nI'd like to try and improve this by adding `request` to the Jinja globals so that macros can always access it, but I'm having trouble figuring out a way to do it.\r\n\r\nFor example, even though it was probably a terrible idea, I tried adding `pyramid.threadlocal.get_current_request()` to the globals, but that doesn't seem to work correctly.\r\n\r\nAny recommendations for a good way (or any way) to accomplish this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/154", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/154/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/154/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/154", "id": 548358046, "node_id": "MDU6SXNzdWU1NDgzNTgwNDY=", "number": 154, "title": "Fix pypy version on Travis", "user": {"login": "stevepiercy", "id": 102112, "node_id": "MDQ6VXNlcjEwMjExMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/102112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevepiercy", "html_url": "https://github.com/stevepiercy", "followers_url": "https://api.github.com/users/stevepiercy/followers", "following_url": "https://api.github.com/users/stevepiercy/following{/other_user}", "gists_url": "https://api.github.com/users/stevepiercy/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevepiercy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevepiercy/subscriptions", "organizations_url": "https://api.github.com/users/stevepiercy/orgs", "repos_url": "https://api.github.com/users/stevepiercy/repos", "events_url": "https://api.github.com/users/stevepiercy/events{/privacy}", "received_events_url": "https://api.github.com/users/stevepiercy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-11T01:05:48Z", "updated_at": "2020-04-17T18:24:53Z", "closed_at": "2020-04-17T18:24:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A recent build failed due to a bad version of pypy.\r\n\r\nhttps://travis-ci.org/Pylons/pyramid_jinja2/jobs/635522957#L164\r\n\r\n`Unable to download pypy-5.4.1 archive. The archive may not exist. Please consider a different version.`\r\n\r\nI can't remember which other Pylons repo had the same issue and how we fixed it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/151", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/151/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/151/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/151", "id": 486108398, "node_id": "MDU6SXNzdWU0ODYxMDgzOTg=", "number": 151, "title": "Support for continue / break statements ", "user": {"login": "afreepenguin", "id": 43551044, "node_id": "MDQ6VXNlcjQzNTUxMDQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/43551044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afreepenguin", "html_url": "https://github.com/afreepenguin", "followers_url": "https://api.github.com/users/afreepenguin/followers", "following_url": "https://api.github.com/users/afreepenguin/following{/other_user}", "gists_url": "https://api.github.com/users/afreepenguin/gists{/gist_id}", "starred_url": "https://api.github.com/users/afreepenguin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afreepenguin/subscriptions", "organizations_url": "https://api.github.com/users/afreepenguin/orgs", "repos_url": "https://api.github.com/users/afreepenguin/repos", "events_url": "https://api.github.com/users/afreepenguin/events{/privacy}", "received_events_url": "https://api.github.com/users/afreepenguin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-28T01:09:55Z", "updated_at": "2019-08-28T03:53:17Z", "closed_at": "2019-08-28T01:55:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Break and continue are not available after loading up loop controls.\r\n`config.add_jinja2_extension('jinja2.ext.loopcontrols')`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/149", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/149/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/149/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/149", "id": 372251328, "node_id": "MDU6SXNzdWUzNzIyNTEzMjg=", "number": 149, "title": "ModuleNotFoundError: No module named 'pyramid_Jinja2'", "user": {"login": "MahamdiAmine", "id": 26410438, "node_id": "MDQ6VXNlcjI2NDEwNDM4", "avatar_url": "https://avatars1.githubusercontent.com/u/26410438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MahamdiAmine", "html_url": "https://github.com/MahamdiAmine", "followers_url": "https://api.github.com/users/MahamdiAmine/followers", "following_url": "https://api.github.com/users/MahamdiAmine/following{/other_user}", "gists_url": "https://api.github.com/users/MahamdiAmine/gists{/gist_id}", "starred_url": "https://api.github.com/users/MahamdiAmine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MahamdiAmine/subscriptions", "organizations_url": "https://api.github.com/users/MahamdiAmine/orgs", "repos_url": "https://api.github.com/users/MahamdiAmine/repos", "events_url": "https://api.github.com/users/MahamdiAmine/events{/privacy}", "received_events_url": "https://api.github.com/users/MahamdiAmine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-20T20:47:06Z", "updated_at": "2018-10-20T21:38:30Z", "closed_at": "2018-10-20T21:38:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "from wsgiref.simple_server import make_server\r\nfrom pyramid.config import Configurator\r\nfrom pyramid.view import view_config\r\n\r\n\r\n@view_config(route_name='hello_world', renderer='hello.jinja2')\r\ndef hello(request):\r\n    return dict(name='World')\r\n\r\n\r\nif __name__ == '__main__':\r\n    config = Configurator()\r\n    config.include('pyramid_jinja2')\r\n    config.add_route('hello_world', '/')\r\n    config.scan()\r\n    app = config.make_wsgi_app()\r\n    server = make_server('0.0.0.0', 6543, app)\r\n    print ('Serving at http://127.0.0.1:6543')\r\n    server.serve_forever()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/148", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/148/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/148/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/148", "id": 356965799, "node_id": "MDU6SXNzdWUzNTY5NjU3OTk=", "number": 148, "title": "Can't list templates", "user": {"login": "kaymccormick", "id": 24615777, "node_id": "MDQ6VXNlcjI0NjE1Nzc3", "avatar_url": "https://avatars3.githubusercontent.com/u/24615777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaymccormick", "html_url": "https://github.com/kaymccormick", "followers_url": "https://api.github.com/users/kaymccormick/followers", "following_url": "https://api.github.com/users/kaymccormick/following{/other_user}", "gists_url": "https://api.github.com/users/kaymccormick/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaymccormick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaymccormick/subscriptions", "organizations_url": "https://api.github.com/users/kaymccormick/orgs", "repos_url": "https://api.github.com/users/kaymccormick/repos", "events_url": "https://api.github.com/users/kaymccormick/events{/privacy}", "received_events_url": "https://api.github.com/users/kaymccormick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-04T20:33:57Z", "updated_at": "2018-09-04T20:39:43Z", "closed_at": "2018-09-04T20:39:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "SmartAssetSpecLoader.list_templates is not supported but there is no capability to specify the FileSystemLoader, so application code is unable to get the list of available templates.\r\n\r\nIs it possible to get this information?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/145", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/145/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/145/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/145", "id": 327912933, "node_id": "MDU6SXNzdWUzMjc5MTI5MzM=", "number": 145, "title": "globals cannot be set to strings", "user": {"login": "bakkerthehacker", "id": 1406235, "node_id": "MDQ6VXNlcjE0MDYyMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1406235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bakkerthehacker", "html_url": "https://github.com/bakkerthehacker", "followers_url": "https://api.github.com/users/bakkerthehacker/followers", "following_url": "https://api.github.com/users/bakkerthehacker/following{/other_user}", "gists_url": "https://api.github.com/users/bakkerthehacker/gists{/gist_id}", "starred_url": "https://api.github.com/users/bakkerthehacker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bakkerthehacker/subscriptions", "organizations_url": "https://api.github.com/users/bakkerthehacker/orgs", "repos_url": "https://api.github.com/users/bakkerthehacker/repos", "events_url": "https://api.github.com/users/bakkerthehacker/events{/privacy}", "received_events_url": "https://api.github.com/users/bakkerthehacker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-30T21:53:42Z", "updated_at": "2018-07-28T20:25:27Z", "closed_at": "2018-07-28T20:25:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Setting the `'jinja2.globals'` to a dictionary with strings as values does not work.  The strings are treated as paths to import and `DottedNameResolver` fails.\r\n\r\n```\r\nconfig = Configurator(settings={'jinja2.globals': {'test_global_key': 'test_global_value'}})\r\n```\r\nproduces the error:\r\n```\r\npyramid.exceptions.ConfigurationExecutionError: <type 'exceptions.ImportError'>: No module named test_global_value\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/125", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/125/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/125/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/125", "id": 173394075, "node_id": "MDU6SXNzdWUxNzMzOTQwNzU=", "number": 125, "title": "Typo in the default template in trans tag causes i18n to fail", "user": {"login": "navinkarkera", "id": 10894099, "node_id": "MDQ6VXNlcjEwODk0MDk5", "avatar_url": "https://avatars3.githubusercontent.com/u/10894099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/navinkarkera", "html_url": "https://github.com/navinkarkera", "followers_url": "https://api.github.com/users/navinkarkera/followers", "following_url": "https://api.github.com/users/navinkarkera/following{/other_user}", "gists_url": "https://api.github.com/users/navinkarkera/gists{/gist_id}", "starred_url": "https://api.github.com/users/navinkarkera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/navinkarkera/subscriptions", "organizations_url": "https://api.github.com/users/navinkarkera/orgs", "repos_url": "https://api.github.com/users/navinkarkera/repos", "events_url": "https://api.github.com/users/navinkarkera/events{/privacy}", "received_events_url": "https://api.github.com/users/navinkarkera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-26T08:06:04Z", "updated_at": "2016-09-30T09:45:12Z", "closed_at": "2016-09-30T09:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The missing \"!\" in the template causes mismatch between trans tag string and the msgid in the pot file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/123", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/123/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/123/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/123", "id": 153584378, "node_id": "MDU6SXNzdWUxNTM1ODQzNzg=", "number": 123, "title": "switch to py.test and pip", "user": {"login": "stevepiercy", "id": 102112, "node_id": "MDQ6VXNlcjEwMjExMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/102112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevepiercy", "html_url": "https://github.com/stevepiercy", "followers_url": "https://api.github.com/users/stevepiercy/followers", "following_url": "https://api.github.com/users/stevepiercy/following{/other_user}", "gists_url": "https://api.github.com/users/stevepiercy/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevepiercy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevepiercy/subscriptions", "organizations_url": "https://api.github.com/users/stevepiercy/orgs", "repos_url": "https://api.github.com/users/stevepiercy/repos", "events_url": "https://api.github.com/users/stevepiercy/events{/privacy}", "received_events_url": "https://api.github.com/users/stevepiercy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "stevepiercy", "id": 102112, "node_id": "MDQ6VXNlcjEwMjExMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/102112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevepiercy", "html_url": "https://github.com/stevepiercy", "followers_url": "https://api.github.com/users/stevepiercy/followers", "following_url": "https://api.github.com/users/stevepiercy/following{/other_user}", "gists_url": "https://api.github.com/users/stevepiercy/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevepiercy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevepiercy/subscriptions", "organizations_url": "https://api.github.com/users/stevepiercy/orgs", "repos_url": "https://api.github.com/users/stevepiercy/repos", "events_url": "https://api.github.com/users/stevepiercy/events{/privacy}", "received_events_url": "https://api.github.com/users/stevepiercy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "stevepiercy", "id": 102112, "node_id": "MDQ6VXNlcjEwMjExMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/102112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevepiercy", "html_url": "https://github.com/stevepiercy", "followers_url": "https://api.github.com/users/stevepiercy/followers", "following_url": "https://api.github.com/users/stevepiercy/following{/other_user}", "gists_url": "https://api.github.com/users/stevepiercy/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevepiercy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevepiercy/subscriptions", "organizations_url": "https://api.github.com/users/stevepiercy/orgs", "repos_url": "https://api.github.com/users/stevepiercy/repos", "events_url": "https://api.github.com/users/stevepiercy/events{/privacy}", "received_events_url": "https://api.github.com/users/stevepiercy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-05-07T09:16:07Z", "updated_at": "2016-09-04T10:51:28Z", "closed_at": "2016-09-04T10:51:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With the release of Pyramid 1.7, we've switched from nose and coverage to py.test and pytest-cov, and have added default configuration for both. We've also switched from easy_install to pip.\n\nSee:\n- http://docs.pylonsproject.org/projects/pyramid/en/1.7-branch/whatsnew-1.7.html#documentation-enhancements\n- https://github.com/Pylons/pyramid/pull/2550\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/122", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/122/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/122/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/122", "id": 139629222, "node_id": "MDU6SXNzdWUxMzk2MjkyMjI=", "number": 122, "title": "Impossible to set `jinja2.i18n.gettext` via configuration file", "user": {"login": "amirouche", "id": 7444897, "node_id": "MDQ6VXNlcjc0NDQ4OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7444897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirouche", "html_url": "https://github.com/amirouche", "followers_url": "https://api.github.com/users/amirouche/followers", "following_url": "https://api.github.com/users/amirouche/following{/other_user}", "gists_url": "https://api.github.com/users/amirouche/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirouche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirouche/subscriptions", "organizations_url": "https://api.github.com/users/amirouche/orgs", "repos_url": "https://api.github.com/users/amirouche/repos", "events_url": "https://api.github.com/users/amirouche/events{/privacy}", "received_events_url": "https://api.github.com/users/amirouche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-09T16:34:08Z", "updated_at": "2016-11-01T04:53:36Z", "closed_at": "2016-11-01T04:53:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Python3, using pyramid_jinja2 2.5, while setting `jinja2.i18n.gettext` I hit the following error:\n\n```\nTraceback (most recent call last):\n  File \"/usr/lib/python3/dist-packages/pyramid/config/__init__.py\", line 1059, in execute_actions\n    callable(*args, **kw)\n  File \"/usr/lib/python3/dist-packages/pyramid_jinja2/__init__.py\", line 440, in register\n    package,\n  File \"/usr/lib/python3/dist-packages/pyramid_jinja2/settings.py\", line 134, in parse_env_options_from_settings\n    if not issubclass(gettext_wrapper, GetTextWrapper):\nTypeError: issubclass() arg 1 must be a class\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/bin/pserve3\", line 9, in <module>\n    load_entry_point('pyramid==1.5.1', 'console_scripts', 'pserve')()\n  File \"/usr/lib/python3/dist-packages/pyramid/scripts/pserve.py\", line 51, in main\n    return command.run()\n  File \"/usr/lib/python3/dist-packages/pyramid/scripts/pserve.py\", line 316, in run\n    global_conf=vars)\n  File \"/usr/lib/python3/dist-packages/pyramid/scripts/pserve.py\", line 340, in loadapp\n    return loadapp(app_spec, name=name, relative_to=relative_to, **kw)\n  File \"/usr/lib/python3/dist-packages/paste/deploy/loadwsgi.py\", line 247, in loadapp\n    return loadobj(APP, uri, name=name, **kw)\n  File \"/usr/lib/python3/dist-packages/paste/deploy/loadwsgi.py\", line 272, in loadobj\n    return context.create()\n  File \"/usr/lib/python3/dist-packages/paste/deploy/loadwsgi.py\", line 710, in create\n    return self.object_type.invoke(self)\n  File \"/usr/lib/python3/dist-packages/paste/deploy/loadwsgi.py\", line 146, in invoke\n    return fix_call(context.object, context.global_conf, **context.local_conf)\n  File \"/usr/lib/python3/dist-packages/paste/deploy/util.py\", line 55, in fix_call\n    val = callable(*args, **kw)\n  File \"/opt/olfeo/lib/python3.4/site-packages/stats_gui/main.py\", line 56, in main\n    return config.make_wsgi_app()\n  File \"/usr/lib/python3/dist-packages/pyramid/config/__init__.py\", line 939, in make_wsgi_app\n    self.commit()\n  File \"/usr/lib/python3/dist-packages/pyramid/config/__init__.py\", line 610, in commit\n    self.action_state.execute_actions(introspector=self.introspector)\n  File \"/usr/lib/python3/dist-packages/pyramid/config/__init__.py\", line 1067, in execute_actions\n    tb)\n  File \"/usr/lib/python3/dist-packages/pyramid/compat.py\", line 131, in reraise\n    raise value.with_traceback(tb)\n  File \"/usr/lib/python3/dist-packages/pyramid/config/__init__.py\", line 1059, in execute_actions\n    callable(*args, **kw)\n  File \"/usr/lib/python3/dist-packages/pyramid_jinja2/__init__.py\", line 440, in register\n    package,\n  File \"/usr/lib/python3/dist-packages/pyramid_jinja2/settings.py\", line 134, in parse_env_options_from_settings\n    if not issubclass(gettext_wrapper, GetTextWrapper):\npyramid.exceptions.ConfigurationExecutionError: <class 'TypeError'>: issubclass() arg 1 must be a class\n  in:\n  Line 482 of file /usr/lib/python3/dist-packages/pyramid_jinja2/__init__.py:\n    config.add_jinja2_renderer('.jinja2', package=package)\n```\n\nI think this is a bug. I am willing to help. Meanwhile can someone provide a wordaround?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/119", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/119/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/119/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/119", "id": 127322139, "node_id": "MDU6SXNzdWUxMjczMjIxMzk=", "number": 119, "title": "add test coverage for python 3.5 and pypy3, remove 3.2", "user": {"login": "stevepiercy", "id": 102112, "node_id": "MDQ6VXNlcjEwMjExMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/102112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevepiercy", "html_url": "https://github.com/stevepiercy", "followers_url": "https://api.github.com/users/stevepiercy/followers", "following_url": "https://api.github.com/users/stevepiercy/following{/other_user}", "gists_url": "https://api.github.com/users/stevepiercy/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevepiercy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevepiercy/subscriptions", "organizations_url": "https://api.github.com/users/stevepiercy/orgs", "repos_url": "https://api.github.com/users/stevepiercy/repos", "events_url": "https://api.github.com/users/stevepiercy/events{/privacy}", "received_events_url": "https://api.github.com/users/stevepiercy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-18T22:19:15Z", "updated_at": "2016-01-23T15:44:43Z", "closed_at": "2016-01-23T15:44:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For consistency with Pyramid 1.5.8 and 1.6.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/117", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/117/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/117/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/117", "id": 127298438, "node_id": "MDU6SXNzdWUxMjcyOTg0Mzg=", "number": 117, "title": "release 2.6", "user": {"login": "stevepiercy", "id": 102112, "node_id": "MDQ6VXNlcjEwMjExMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/102112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevepiercy", "html_url": "https://github.com/stevepiercy", "followers_url": "https://api.github.com/users/stevepiercy/followers", "following_url": "https://api.github.com/users/stevepiercy/following{/other_user}", "gists_url": "https://api.github.com/users/stevepiercy/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevepiercy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevepiercy/subscriptions", "organizations_url": "https://api.github.com/users/stevepiercy/orgs", "repos_url": "https://api.github.com/users/stevepiercy/repos", "events_url": "https://api.github.com/users/stevepiercy/events{/privacy}", "received_events_url": "https://api.github.com/users/stevepiercy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-18T19:51:01Z", "updated_at": "2016-01-20T18:20:47Z", "closed_at": "2016-01-20T18:20:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Howdy, @mmerickel @domenkozar @rockyburt or @mcdonc \n\nI've updated the scaffold to be consistent with Pyramid's default scaffolds in PR #116, and updated changes.txt. I'd like to push a release to PyPI. Is there anything I can do to help?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/115", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/115/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/115/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/115", "id": 115359505, "node_id": "MDU6SXNzdWUxMTUzNTk1MDU=", "number": 115, "title": "jinja2 exceptions propages to top - not caught by debug toolbar", "user": {"login": "alch3m1st", "id": 1112283, "node_id": "MDQ6VXNlcjExMTIyODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alch3m1st", "html_url": "https://github.com/alch3m1st", "followers_url": "https://api.github.com/users/alch3m1st/followers", "following_url": "https://api.github.com/users/alch3m1st/following{/other_user}", "gists_url": "https://api.github.com/users/alch3m1st/gists{/gist_id}", "starred_url": "https://api.github.com/users/alch3m1st/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alch3m1st/subscriptions", "organizations_url": "https://api.github.com/users/alch3m1st/orgs", "repos_url": "https://api.github.com/users/alch3m1st/repos", "events_url": "https://api.github.com/users/alch3m1st/events{/privacy}", "received_events_url": "https://api.github.com/users/alch3m1st/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-11-05T19:46:42Z", "updated_at": "2015-11-06T17:39:09Z", "closed_at": "2015-11-06T17:39:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any thoughts?\nPyramid 1.5.7\npyramid-debugtoolbar\nTried on python 3.4 and 3.5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/114", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/114/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/114/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/114", "id": 112374486, "node_id": "MDU6SXNzdWUxMTIzNzQ0ODY=", "number": 114, "title": "[Resolved]Log warnings while sphinx generate documentation", "user": {"login": "sun4sun", "id": 317829, "node_id": "MDQ6VXNlcjMxNzgyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/317829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sun4sun", "html_url": "https://github.com/sun4sun", "followers_url": "https://api.github.com/users/sun4sun/followers", "following_url": "https://api.github.com/users/sun4sun/following{/other_user}", "gists_url": "https://api.github.com/users/sun4sun/gists{/gist_id}", "starred_url": "https://api.github.com/users/sun4sun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sun4sun/subscriptions", "organizations_url": "https://api.github.com/users/sun4sun/orgs", "repos_url": "https://api.github.com/users/sun4sun/repos", "events_url": "https://api.github.com/users/sun4sun/events{/privacy}", "received_events_url": "https://api.github.com/users/sun4sun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-20T13:56:24Z", "updated_at": "2015-10-21T05:10:06Z", "closed_at": "2015-10-21T05:10:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "versions: Python 3.5.0, Pyramid: v1.6 \n\nhttp://docs.pylonsproject.org/projects/pyramid-jinja2/en/latest/ -> 404\n\n(env) docs > make html \ncd ..; git submodule update --init --recursive; cd docs;\nmkdir -p _build/html _build/doctrees\nsphinx-build -b html -d _build/doctrees  -W . _build/html\nRunning Sphinx v1.3.1\nloading pickled environment... not yet created\nloading intersphinx inventory from http://docs.pylonsproject.org/projects/translationstring/en/latest/objects.inv...\nloading intersphinx inventory from http://docs.sqlalchemy.org/en/latest/objects.inv...\nloading intersphinx inventory from http://docs.python.org/objects.inv...\nloading intersphinx inventory from http://docs.pylonsproject.org/projects/pyramid-jinja2/en/latest/objects.inv...\n\nWarning, treated as error:\nWARNING: intersphinx inventory 'http://docs.pylonsproject.org/projects/pyramid-jinja2/en/latest/objects.inv' not fetchable due to <class 'urllib.error.HTTPError'>: HTTP Error 404: OK\n\nmake: **\\* [html] Error 1\n\nalso in few other projects have 404, for example:\nhttp://docs.pylonsproject.org/projects/pyramid-zcml/en/latest/\n\nThanks for an advice\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/113", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/113/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/113/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/113", "id": 94004996, "node_id": "MDU6SXNzdWU5NDAwNDk5Ng==", "number": 113, "title": "Templates not found in sub-directories (add_jinja2_search_path )", "user": {"login": "martinstein", "id": 1275070, "node_id": "MDQ6VXNlcjEyNzUwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1275070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinstein", "html_url": "https://github.com/martinstein", "followers_url": "https://api.github.com/users/martinstein/followers", "following_url": "https://api.github.com/users/martinstein/following{/other_user}", "gists_url": "https://api.github.com/users/martinstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinstein/subscriptions", "organizations_url": "https://api.github.com/users/martinstein/orgs", "repos_url": "https://api.github.com/users/martinstein/repos", "events_url": "https://api.github.com/users/martinstein/events{/privacy}", "received_events_url": "https://api.github.com/users/martinstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-07-09T09:52:52Z", "updated_at": "2016-12-07T13:44:58Z", "closed_at": "2016-12-07T13:44:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you add a directory to the jinja-search path normally, like this:\n\n``` python\nconfig.add_jinja2_search_path('pyramid_jinja_issue:templates', name='.html')\n```\n\nthen Pyramid/Jinja won't find the template when it's located in a sub-directory. This one works:\n\n``` python\n@view_config(route_name='works', renderer='some_template.html')\ndef my_view(request):\n    ...\n```\n\nbut this one doesn't work:\n\n``` python\n@view_config(route_name='broken', renderer='email/other_template.html')\ndef my_view(request):\n    ...\n```\n\nProviding the full asset-specification works again, but the other way based on the search-path should work, too.\n\nExample to reproduce here (simply try the 3 different routes `/works`, `/works2`, `/broken`:\nhttps://github.com/martinstein/pyramid_jinja_issue\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/111", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/111/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/111/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/111", "id": 76055411, "node_id": "MDU6SXNzdWU3NjA1NTQxMQ==", "number": 111, "title": "After including pyramid_jinja2, config.get_jinja2_environment() is still None", "user": {"login": "anthony-dandrea", "id": 5413624, "node_id": "MDQ6VXNlcjU0MTM2MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5413624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthony-dandrea", "html_url": "https://github.com/anthony-dandrea", "followers_url": "https://api.github.com/users/anthony-dandrea/followers", "following_url": "https://api.github.com/users/anthony-dandrea/following{/other_user}", "gists_url": "https://api.github.com/users/anthony-dandrea/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthony-dandrea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthony-dandrea/subscriptions", "organizations_url": "https://api.github.com/users/anthony-dandrea/orgs", "repos_url": "https://api.github.com/users/anthony-dandrea/repos", "events_url": "https://api.github.com/users/anthony-dandrea/events{/privacy}", "received_events_url": "https://api.github.com/users/anthony-dandrea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-13T17:02:23Z", "updated_at": "2015-05-13T18:12:14Z", "closed_at": "2015-05-13T18:11:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use pyramid_webassets and pyramid_jinja2 together. My main function looks like this.\n\n```\ndef main(global_config, **settings):\n    engine = engine_from_config(settings, 'sqlalchemy.', encoding='utf-8')\n    get_root = appmaker(engine)\n    session_factory = session_factory_from_settings(settings)\n    config = Configurator(settings=settings, root_factory=get_root)\n    config.include('pyramid_handlers')\n    # Jinja2\n    config.include('pyramid_jinja2')\n    config.add_jinja2_renderer('.html')\n    config.add_jinja2_search_path('shared_templates:templates', name='.html')\n    config.add_jinja2_search_path('myapp:templates', name='.html')\n    # Webassets\n    config.include('pyramid_webassets')\n    config.add_jinja2_extension('webassets.ext.jinja2.AssetsExtension')\n    assets_env = config.get_webassets_env()\n    jinja2_env = config.get_jinja2_environment() # is None ???\n    jinja2_env.assets_environment = assets_env\n    ...\n```\n\nThe error I get is `AttributeError: 'NoneType' object has no attribute 'assets_environment'`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/110", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/110/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/110/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/110", "id": 75684047, "node_id": "MDU6SXNzdWU3NTY4NDA0Nw==", "number": 110, "title": "Bug in GETTEXT  when loading templates dynamically", "user": {"login": "AnderUstarroz", "id": 8544110, "node_id": "MDQ6VXNlcjg1NDQxMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8544110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnderUstarroz", "html_url": "https://github.com/AnderUstarroz", "followers_url": "https://api.github.com/users/AnderUstarroz/followers", "following_url": "https://api.github.com/users/AnderUstarroz/following{/other_user}", "gists_url": "https://api.github.com/users/AnderUstarroz/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnderUstarroz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnderUstarroz/subscriptions", "organizations_url": "https://api.github.com/users/AnderUstarroz/orgs", "repos_url": "https://api.github.com/users/AnderUstarroz/repos", "events_url": "https://api.github.com/users/AnderUstarroz/events{/privacy}", "received_events_url": "https://api.github.com/users/AnderUstarroz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-12T17:55:20Z", "updated_at": "2016-11-01T04:47:17Z", "closed_at": "2016-11-01T04:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using **jinja2** templates dynamically in pyramid. It works fine for basic usage, but it fails when trying to load internationalized text with the GETTEXT() function:\n\n```\n@view_config(context=Test)\ndef test_view(request):\n    #Render templates dynamically:\n    template = \"template1.jinja2\"\n    return Response(render(template, {'test1':1}, request=request))\n```\n\nBasic jinja2 template:\n\n```\n<!-- template/template1.jinja2 -->\n{{ GETTEXT('NAME') }} - {{ test1 }}\n```\n\nThrows the following error:\n\n```\nFile \"/python3.4/site-packages/pyramid/i18n.py\", line 218, in get_localizer\n    return request.localizer\nAttributeError: 'NoneType' object has no attribute 'localizer'\n```\n\nI've tracked the error,  it seems to be a problem on file **pyramid_jinja2/i18n.py** when the function **localizer()** is calling **i18n.get_localizer(get_current_request())**, but the  function **get_current_request()** generates a **None** value. So it's not being able to create a valid Request.\n\n```\nclass GetTextWrapper(object):\n\n   ....\n\n    @property\n    def localizer(self):\n        return i18n.get_localizer(get_current_request())\n\n   ....\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/109", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/109/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/109/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/109", "id": 75514101, "node_id": "MDU6SXNzdWU3NTUxNDEwMQ==", "number": 109, "title": "Loading jinja2 templates dynamically from a Pyramid view", "user": {"login": "AnderUstarroz", "id": 8544110, "node_id": "MDQ6VXNlcjg1NDQxMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8544110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnderUstarroz", "html_url": "https://github.com/AnderUstarroz", "followers_url": "https://api.github.com/users/AnderUstarroz/followers", "following_url": "https://api.github.com/users/AnderUstarroz/following{/other_user}", "gists_url": "https://api.github.com/users/AnderUstarroz/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnderUstarroz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnderUstarroz/subscriptions", "organizations_url": "https://api.github.com/users/AnderUstarroz/orgs", "repos_url": "https://api.github.com/users/AnderUstarroz/repos", "events_url": "https://api.github.com/users/AnderUstarroz/events{/privacy}", "received_events_url": "https://api.github.com/users/AnderUstarroz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-12T08:19:51Z", "updated_at": "2015-05-12T15:24:26Z", "closed_at": "2015-05-12T15:24:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following  the [jinja2 documentation](http://jinja.pocoo.org/docs/dev/api/) I've find out a way to load different templates from a unique view. But taking into account that Pyramid_jinja2 was already configured in my app with a default path for templates.  I was wondering if there is another way more elegant to get this done. This is my approach:\n\n```\nfrom jinja2 import Environment, PackageLoader\n\n@view_config(context=Test)\ndef test_view(request):\n    env = Environment(loader=PackageLoader('project_name', 'templates'))\n    template = env.get_template('section1/example1.jinja2')\n    return Response(template.render(data={'a':1,'b':2}))\n```\n\nCan I get an instance of the **pyramid_jinja2** environment from somewhere so I don't have to set again the default path for templates in the view?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/97", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/97/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/97/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/97", "id": 50820178, "node_id": "MDU6SXNzdWU1MDgyMDE3OA==", "number": 97, "title": "Locale in request is ignored", "user": {"login": "rbu", "id": 65913, "node_id": "MDQ6VXNlcjY1OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/65913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbu", "html_url": "https://github.com/rbu", "followers_url": "https://api.github.com/users/rbu/followers", "following_url": "https://api.github.com/users/rbu/following{/other_user}", "gists_url": "https://api.github.com/users/rbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbu/subscriptions", "organizations_url": "https://api.github.com/users/rbu/orgs", "repos_url": "https://api.github.com/users/rbu/repos", "events_url": "https://api.github.com/users/rbu/events{/privacy}", "received_events_url": "https://api.github.com/users/rbu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64899855, "node_id": "MDU6TGFiZWw2NDg5OTg1NQ==", "url": "https://api.github.com/repos/Pylons/pyramid_jinja2/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-03T10:46:36Z", "updated_at": "2016-11-01T05:07:35Z", "closed_at": "2016-11-01T05:07:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The GetText callables installed by pyramid_jinja2 do not honor the request given to the render function but always use the global request instead.\n\nWhile the existence of a global request is an acceptable default, the Jinja2 renderer should prefer an explicit request whenever it is provided. Calling it like so:\n\n``` py\nfrom pyramid.renderers import render\n\nrequest = DummyRequest(...)\nassert request.locale_name == 'es'\n\nrender('some.jinja2', dict(), request=request)\n```\n\nThen the locale from `get_current_request()` will be used instead of the one explicitly specified.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/93", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/93/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/93/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/93", "id": 41978504, "node_id": "MDU6SXNzdWU0MTk3ODUwNA==", "number": 93, "title": "{% trans %} tags just doesn't work when switching from a language to another", "user": {"login": "mlhamel", "id": 214246, "node_id": "MDQ6VXNlcjIxNDI0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/214246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlhamel", "html_url": "https://github.com/mlhamel", "followers_url": "https://api.github.com/users/mlhamel/followers", "following_url": "https://api.github.com/users/mlhamel/following{/other_user}", "gists_url": "https://api.github.com/users/mlhamel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlhamel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlhamel/subscriptions", "organizations_url": "https://api.github.com/users/mlhamel/orgs", "repos_url": "https://api.github.com/users/mlhamel/repos", "events_url": "https://api.github.com/users/mlhamel/events{/privacy}", "received_events_url": "https://api.github.com/users/mlhamel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-09-04T19:59:10Z", "updated_at": "2014-09-05T15:40:51Z", "closed_at": "2014-09-04T20:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a pretty standard Pyramid stack which is using jinja2 and Babel for the localisation. Problem with it, translation is working when using the direct call to the gettext function like that:\n\n{{ _(\"my string\") }}\n\nBut just silently failed when using the {% trans %} tags.\n\nThe documentation doesn't mention anything about the trans tags specifically but it seems something is not handled properly with the default configuration. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/92", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/92/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/92/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/92", "id": 39594974, "node_id": "MDU6SXNzdWUzOTU5NDk3NA==", "number": 92, "title": "Directive not available until after creation of WSGI app.", "user": {"login": "dfee", "id": 262602, "node_id": "MDQ6VXNlcjI2MjYwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/262602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfee", "html_url": "https://github.com/dfee", "followers_url": "https://api.github.com/users/dfee/followers", "following_url": "https://api.github.com/users/dfee/following{/other_user}", "gists_url": "https://api.github.com/users/dfee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfee/subscriptions", "organizations_url": "https://api.github.com/users/dfee/orgs", "repos_url": "https://api.github.com/users/dfee/repos", "events_url": "https://api.github.com/users/dfee/events{/privacy}", "received_events_url": "https://api.github.com/users/dfee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-06T07:07:47Z", "updated_at": "2014-08-06T17:55:29Z", "closed_at": "2014-08-06T17:55:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "config.get_jinja2_environment() is not available until after config.make_wsgi_app(). This is a change from the past.\n\nTo reproduce, simply \"pcreate -s pyramid_jinja2_starter xyz\". Was it Pyramid or pyramid_jinja2 that changed?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/91", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/91/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/91/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/91", "id": 36878401, "node_id": "MDU6SXNzdWUzNjg3ODQwMQ==", "number": 91, "title": "Recursive Import even when jinja2.directories Setting is Already Set", "user": {"login": "aeroheart-c6", "id": 734243, "node_id": "MDQ6VXNlcjczNDI0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/734243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeroheart-c6", "html_url": "https://github.com/aeroheart-c6", "followers_url": "https://api.github.com/users/aeroheart-c6/followers", "following_url": "https://api.github.com/users/aeroheart-c6/following{/other_user}", "gists_url": "https://api.github.com/users/aeroheart-c6/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeroheart-c6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeroheart-c6/subscriptions", "organizations_url": "https://api.github.com/users/aeroheart-c6/orgs", "repos_url": "https://api.github.com/users/aeroheart-c6/repos", "events_url": "https://api.github.com/users/aeroheart-c6/events{/privacy}", "received_events_url": "https://api.github.com/users/aeroheart-c6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-07-01T10:03:59Z", "updated_at": "2014-07-02T14:39:18Z", "closed_at": "2014-07-02T14:30:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the following templates directory arrangement:\n\n```\ntemplates\n    base.html\n    admin/\n        base.html\n        index.html\n```\n\nWhere `admin/index.html` has the following extends tag:\n\n```\n{% extends 'admin/base.html' %}\n```\n\nAnd `admin/base.html` has the following extends tag:\n\n```\n{% extends 'base.html' %}\n{# The path I am trying to say here is to inherit from the templates/base.html #}\n```\n\nWhat happens is that the following error is raised:\n\n```\nRuntimeError: maximum recursion depth exceeded while calling a Python object\n```\n\nNow, what I am not sure if whether my configuration is just wrong or something as to why it works that way with v1.9 but not in v2.3.2. I think though is that it shouldn't throw a recursive error because I wanted a search path approach.\n\nJust for additional information, here is the snippet of my pyramid configuration:\n\n```\n# config.ini\njinja2.directories =\n    alleycat.web:frontend/templates\njinja2.extensions =\n    jinja2.ext.with_\n    jinja2.ext.do\n    jinja2.ext.loopcontrols\n```\n\nAnd here is the snippet from my python configurator code:\n\n```\nfrom pyramid.config import Configurator\n\nconfigurator = Configurator(**{\n    'renderers': (\n        ('.html', 'pyramid_jinja2.renderer_factory'),\n    )\n})\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/89", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/89/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/89/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/89", "id": 35397583, "node_id": "MDU6SXNzdWUzNTM5NzU4Mw==", "number": 89, "title": "deep inheritance hierarchies are not resolving", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-10T16:04:05Z", "updated_at": "2014-06-13T21:27:42Z", "closed_at": "2014-06-13T21:27:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "templates/foo.jinja2\n\n```\n{% extends 'middle.jinja2' %}\n```\n\ntemplates/middle.jinja2\n\n```\n{% extends 'base.jinja2' %}\n```\n\ntemplates/base.jinja2\n\n```\nYo\n```\n\nstarting point:\n\n```\nbody = render('templates/foo.jinja2', {})\n```\n\nCurrently is raising an error like \n\n```\nTemplateNotFound: base.jinja2; asset=base.jinja2; searchpath=['/Users/michael/work/oss/pyramid_jinja2/pyramid_jinja2/tests/templates', '/Users/michael/work/oss/pyramid_jinja2/pyramid_jinja2/tests']; parent=middle.jinja2@@FROM_PARENT@@templates/foo.jinja2\n```\n\nThe template being loaded here is `base.jinja2@@FROM_PARENT@@middle.jinja2@@FROM_PARENT@@templates/foo.jinja2`.\n\nI'm opening this issue temporarily as I try to think through what the appropriate search order should be here. For example, let's assume something like `C/base.jinja2@@FROM_PARENT@@B/middle.jinja2@@FROM_PARENT@@A/foo.jinja2`.\n\nIn this case we should test `['A/B/C/base.jinja2', 'A/C/base.jinja2', 'C/base.jinja2']`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/88", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/88/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/88/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/88", "id": 33084711, "node_id": "MDU6SXNzdWUzMzA4NDcxMQ==", "number": 88, "title": "TemplateNotFound Error When Caller-Relative Template Extends a Path-Based Template", "user": {"login": "peterhudec", "id": 2333157, "node_id": "MDQ6VXNlcjIzMzMxNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2333157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterhudec", "html_url": "https://github.com/peterhudec", "followers_url": "https://api.github.com/users/peterhudec/followers", "following_url": "https://api.github.com/users/peterhudec/following{/other_user}", "gists_url": "https://api.github.com/users/peterhudec/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterhudec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterhudec/subscriptions", "organizations_url": "https://api.github.com/users/peterhudec/orgs", "repos_url": "https://api.github.com/users/peterhudec/repos", "events_url": "https://api.github.com/users/peterhudec/events{/privacy}", "received_events_url": "https://api.github.com/users/peterhudec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2014-05-08T13:47:22Z", "updated_at": "2014-05-30T06:39:37Z", "closed_at": "2014-05-30T06:39:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a _caller-relative_ template extends a _path-based_ template and the `SmartAssetSpecLoader.get_source()` method [tries to load](https://github.com/Pylons/pyramid_jinja2/blob/master/pyramid_jinja2/__init__.py#L163) the _path-based_ template it fails because the filename is prefixed with the caller path `\"caller.path:filename.html\"` and the `TemplateNotFound` is raised.\n\nThis was introduced in this commit:\nhttps://github.com/Pylons/pyramid_jinja2/commit/ed4a5a3c639b84245bae823037f3af95d4a4185a#diff-e576f6688e12c63d080f32947bab398d\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/77", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/77/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/77/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/77", "id": 22610789, "node_id": "MDU6SXNzdWUyMjYxMDc4OQ==", "number": 77, "title": "Why clear bytecode cache atexit?", "user": {"login": "dairiki", "id": 495018, "node_id": "MDQ6VXNlcjQ5NTAxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/495018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dairiki", "html_url": "https://github.com/dairiki", "followers_url": "https://api.github.com/users/dairiki/followers", "following_url": "https://api.github.com/users/dairiki/following{/other_user}", "gists_url": "https://api.github.com/users/dairiki/gists{/gist_id}", "starred_url": "https://api.github.com/users/dairiki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dairiki/subscriptions", "organizations_url": "https://api.github.com/users/dairiki/orgs", "repos_url": "https://api.github.com/users/dairiki/repos", "events_url": "https://api.github.com/users/dairiki/events{/privacy}", "received_events_url": "https://api.github.com/users/dairiki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-11-13T18:20:58Z", "updated_at": "2014-01-11T19:00:32Z", "closed_at": "2014-01-11T18:59:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, if a bytecode cache is enabled, pyramid_jinja2 [registers an atexit callback](https://github.com/Pylons/pyramid_jinja2/blob/master/pyramid_jinja2/__init__.py#L284) to clean out the cache.  As I understand the bytecode cache, this seems to defeat much of the purpose of having one.  Compiled templates (up to a limit set by `cache_size`, at least) are already cached in memory.  For me, much of the point of enabling a bytecode cache is to minimize app startup time \u2014 which it won\u2019t do if it gets deleted upon app termination.\n\nIf the bytecode cache is wiped at exit, and there are fewer than `cache_size` templates used by the app, the bytecode cache does not really help at all (if I understand things correctly.)  In this case, the compiled templates all come straight from the in-memory cache, the filesystem bytecode cache is redundant.\n\nIf I had my druthers:\n- The `bytecode_caching` setting would default to off.\n- I'd do away with the atexit cache cleaner (or at least make it possible to disable it.)\n  As noted [in the docs](http://docs.pylonsproject.org/projects/pyramid_jinja2/en/latest/?awesome#jinja2-bytecode-caching-directory), the atexit cleanup is not always fully effective at eliminating filesystem bloat anyway.\n\nI'd be happy to submit a pull request if there is a consensus on how to proceed. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/75", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/75/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/75/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/75", "id": 22346500, "node_id": "MDU6SXNzdWUyMjM0NjUwMA==", "number": 75, "title": "Relative path to templates do not work with template inheritance", "user": {"login": "domenkozar", "id": 126339, "node_id": "MDQ6VXNlcjEyNjMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/126339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domenkozar", "html_url": "https://github.com/domenkozar", "followers_url": "https://api.github.com/users/domenkozar/followers", "following_url": "https://api.github.com/users/domenkozar/following{/other_user}", "gists_url": "https://api.github.com/users/domenkozar/gists{/gist_id}", "starred_url": "https://api.github.com/users/domenkozar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domenkozar/subscriptions", "organizations_url": "https://api.github.com/users/domenkozar/orgs", "repos_url": "https://api.github.com/users/domenkozar/repos", "events_url": "https://api.github.com/users/domenkozar/events{/privacy}", "received_events_url": "https://api.github.com/users/domenkozar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64899855, "node_id": "MDU6TGFiZWw2NDg5OTg1NQ==", "url": "https://api.github.com/repos/Pylons/pyramid_jinja2/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-11-08T16:16:57Z", "updated_at": "2014-01-19T19:52:12Z", "closed_at": "2014-01-19T19:52:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/Pylons/pyramid_jinja2/pull/33#issuecomment-8529551\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/73", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/73/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/73/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/73", "id": 21431906, "node_id": "MDU6SXNzdWUyMTQzMTkwNg==", "number": 73, "title": "multiple jinja2 renderers", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64899842, "node_id": "MDU6TGFiZWw2NDg5OTg0Mg==", "url": "https://api.github.com/repos/Pylons/pyramid_jinja2/labels/feature", "name": "feature", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-23T03:36:33Z", "updated_at": "2014-01-29T15:49:42Z", "closed_at": "2014-01-29T15:49:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It's not currently possible to define more than one jinja2 renderer unless they share the same settings. There's also threading issues if pyramid_jinja2 isn't included and the global `renderer_factory` is registered to another file extension instead. The config directives are very much based around this idea as well, where add_jinja2_search_path, get_jinja2_environment and add_jinja2_extension all work on the _app-global_ jinja2 environment.\n\nI'd like to fix these issues if you guys are amenable as its something I need and much better going forward if jinja2 is used in multiple addons. For example, I recently solved these problems in pyramid_mako to make it simpler for the pyramid_debugtoolbar to use custom mako settings on its own templates, without affecting your app's configuration.\n\nAs far as these fixes affect the current api, I think you'd want to update them to take an optional extension argument which would default to '.jinja2'. Ideally you'd just deprecate/get rid of them because I think the renderers should be fully-configurable through the settings, but adding the discriminator in the signatures would be the next best thing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/72", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/72/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/72/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/72", "id": 21431548, "node_id": "MDU6SXNzdWUyMTQzMTU0OA==", "number": 72, "title": "caller-relative template loading", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-23T03:21:48Z", "updated_at": "2013-10-29T01:55:03Z", "closed_at": "2013-10-29T01:55:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I just recently added the ability for pyramid_mako to use caller-relative template lookup. I did it in a bw-compat way by deferring to the current search path-based lookup if mako.directories is defined. If it is not, then the template is looked up relative to the place in which the template is requested (this is how chameleon works all the time). Imagine:\n\n``` python\n@view_config(renderer='templates/foo.jinja2')\ndef myview(request):\n    return {}\n```\n\nAre you open to a pull request adding this functionality to jinja2?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/69", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/69/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/69/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/69", "id": 18660912, "node_id": "MDU6SXNzdWUxODY2MDkxMg==", "number": 69, "title": "Could the py3.2 compatibility pinning be done only for py3.2?", "user": {"login": "dairiki", "id": 495018, "node_id": "MDQ6VXNlcjQ5NTAxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/495018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dairiki", "html_url": "https://github.com/dairiki", "followers_url": "https://api.github.com/users/dairiki/followers", "following_url": "https://api.github.com/users/dairiki/following{/other_user}", "gists_url": "https://api.github.com/users/dairiki/gists{/gist_id}", "starred_url": "https://api.github.com/users/dairiki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dairiki/subscriptions", "organizations_url": "https://api.github.com/users/dairiki/orgs", "repos_url": "https://api.github.com/users/dairiki/repos", "events_url": "https://api.github.com/users/dairiki/events{/privacy}", "received_events_url": "https://api.github.com/users/dairiki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-28T10:39:59Z", "updated_at": "2013-10-03T20:29:32Z", "closed_at": "2013-10-03T20:29:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I\u2019d like to use Jinja2>=2.7.  Since 6ee506c4, however this produces a VersionConflict exception.  I\u2019m not running python 3.2 and so do not care about py3.2 compatibility. \n\nThis may be a bad idea, but could the pinning be made conditional on interpreter version?  I mean by doing something like this in `setup.py`\n\n```\nif (3,) < sys.version_info < (3,3):\n    requires..extend([\n        'Jinja2>=2.5.0,<2.7dev', #2.7 drops Python 3.2 compat.\n        'markupsafe<0.16', #0.16 drops Python 3.2 compat\n        ])\nelse:\n    requires..extend([\n        'Jinja2>=2.5.0',\n        'markupsafe',\n        ])\n```\n\nOr is there a better way for me to deal with this on my end?  (Right now I\u2019m pinning `pyramid_jinja2<1.7`.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/68", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/68/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/68/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/68", "id": 18536836, "node_id": "MDU6SXNzdWUxODUzNjgzNg==", "number": 68, "title": "Allow a way to generate only resource path excluding proto://host:port for static_url filter", "user": {"login": "rskumar", "id": 928743, "node_id": "MDQ6VXNlcjkyODc0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/928743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rskumar", "html_url": "https://github.com/rskumar", "followers_url": "https://api.github.com/users/rskumar/followers", "following_url": "https://api.github.com/users/rskumar/following{/other_user}", "gists_url": "https://api.github.com/users/rskumar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rskumar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rskumar/subscriptions", "organizations_url": "https://api.github.com/users/rskumar/orgs", "repos_url": "https://api.github.com/users/rskumar/repos", "events_url": "https://api.github.com/users/rskumar/events{/privacy}", "received_events_url": "https://api.github.com/users/rskumar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-26T07:33:42Z", "updated_at": "2013-11-08T16:07:23Z", "closed_at": "2013-11-08T16:07:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently with static_url filter, generated URL contains **proto://host:port**. There should be another filter or way to generate the absolute resource path only. \n\nLike \n\n``` html\n{{ 'app:static/js/myjs.js'|static_url }} \n```\n\ngenerates http://localhost:6543/static/js/myjs.js. There should be way to generate only /static/js/myjs.js\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/64", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/64/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/64/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/64", "id": 17704615, "node_id": "MDU6SXNzdWUxNzcwNDYxNQ==", "number": 64, "title": "BytecodeCache error on Python 3", "user": {"login": "domenkozar", "id": 126339, "node_id": "MDQ6VXNlcjEyNjMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/126339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domenkozar", "html_url": "https://github.com/domenkozar", "followers_url": "https://api.github.com/users/domenkozar/followers", "following_url": "https://api.github.com/users/domenkozar/following{/other_user}", "gists_url": "https://api.github.com/users/domenkozar/gists{/gist_id}", "starred_url": "https://api.github.com/users/domenkozar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domenkozar/subscriptions", "organizations_url": "https://api.github.com/users/domenkozar/orgs", "repos_url": "https://api.github.com/users/domenkozar/repos", "events_url": "https://api.github.com/users/domenkozar/events{/privacy}", "received_events_url": "https://api.github.com/users/domenkozar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-06T17:52:28Z", "updated_at": "2013-08-16T15:35:28Z", "closed_at": "2013-08-16T15:35:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "To use pyramid_jinja2 on python3 one has to disable bytecodecache. See https://github.com/mitsuhiko/jinja2/pull/240\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/61", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/61/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/61/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/61", "id": 15414046, "node_id": "MDU6SXNzdWUxNTQxNDA0Ng==", "number": 61, "title": "Scaffold should include dependency on nose and install pyramid_debugtoolbar", "user": {"login": "pauleveritt", "id": 455142, "node_id": "MDQ6VXNlcjQ1NTE0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/455142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pauleveritt", "html_url": "https://github.com/pauleveritt", "followers_url": "https://api.github.com/users/pauleveritt/followers", "following_url": "https://api.github.com/users/pauleveritt/following{/other_user}", "gists_url": "https://api.github.com/users/pauleveritt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pauleveritt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pauleveritt/subscriptions", "organizations_url": "https://api.github.com/users/pauleveritt/orgs", "repos_url": "https://api.github.com/users/pauleveritt/repos", "events_url": "https://api.github.com/users/pauleveritt/events{/privacy}", "received_events_url": "https://api.github.com/users/pauleveritt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64899842, "node_id": "MDU6TGFiZWw2NDg5OTg0Mg==", "url": "https://api.github.com/repos/Pylons/pyramid_jinja2/labels/feature", "name": "feature", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-11T18:16:41Z", "updated_at": "2015-02-28T20:11:58Z", "closed_at": "2015-02-28T20:11:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Another note about me doing Getting Started docs. I'm advocating that complete newbies start with debugtoolbar. If I'm preaching pyramid_jinja2 and its starter template, it would be better if that starter template made pyramid_debugtoolbar a dependency and put it in development.ini pyramid includes.\n\nSimilarly, some other nice-to-haves in the scaffold:\n- Use waitress\n- Install nose as the test runner\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/60", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/60/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/60/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/60", "id": 15403494, "node_id": "MDU6SXNzdWUxNTQwMzQ5NA==", "number": 60, "title": "Scaffold generates models.py instead of resources.py", "user": {"login": "pauleveritt", "id": 455142, "node_id": "MDQ6VXNlcjQ1NTE0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/455142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pauleveritt", "html_url": "https://github.com/pauleveritt", "followers_url": "https://api.github.com/users/pauleveritt/followers", "following_url": "https://api.github.com/users/pauleveritt/following{/other_user}", "gists_url": "https://api.github.com/users/pauleveritt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pauleveritt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pauleveritt/subscriptions", "organizations_url": "https://api.github.com/users/pauleveritt/orgs", "repos_url": "https://api.github.com/users/pauleveritt/repos", "events_url": "https://api.github.com/users/pauleveritt/events{/privacy}", "received_events_url": "https://api.github.com/users/pauleveritt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64899842, "node_id": "MDU6TGFiZWw2NDg5OTg0Mg==", "url": "https://api.github.com/repos/Pylons/pyramid_jinja2/labels/feature", "name": "feature", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-11T15:04:08Z", "updated_at": "2015-02-28T20:11:48Z", "closed_at": "2015-02-28T20:11:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a very minor point. Pyramid changed its jargon from \"models\" to \"resources\".\n\nI bring this up because I am writing some new, official Getting Started docs for Pyramid. I'm considering basing the templating part on pyramid_jinja2. As such, I'd like beginners to avoid confusion, which might lead to some other tickets.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/59", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/59/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/59/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/59", "id": 15223602, "node_id": "MDU6SXNzdWUxNTIyMzYwMg==", "number": 59, "title": "NameError: global name 'unicode' is not defined", "user": {"login": "josuemontano", "id": 1854377, "node_id": "MDQ6VXNlcjE4NTQzNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1854377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josuemontano", "html_url": "https://github.com/josuemontano", "followers_url": "https://api.github.com/users/josuemontano/followers", "following_url": "https://api.github.com/users/josuemontano/following{/other_user}", "gists_url": "https://api.github.com/users/josuemontano/gists{/gist_id}", "starred_url": "https://api.github.com/users/josuemontano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josuemontano/subscriptions", "organizations_url": "https://api.github.com/users/josuemontano/orgs", "repos_url": "https://api.github.com/users/josuemontano/repos", "events_url": "https://api.github.com/users/josuemontano/events{/privacy}", "received_events_url": "https://api.github.com/users/josuemontano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-06T13:55:07Z", "updated_at": "2013-06-06T14:41:05Z", "closed_at": "2013-06-06T14:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't make Jinja2 2.8 work with Pyramid 1.4.2 and Python 3.3.2. I got this error:\n\n``` python\nTraceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/waitress-0.8.5-py3.3.egg/waitress/channel.py\", line 332, in service\n    task.service()\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/waitress-0.8.5-py3.3.egg/waitress/task.py\", line 174, in service\n    self.execute()\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/waitress-0.8.5-py3.3.egg/waitress/task.py\", line 382, in execute\n    app_iter = self.channel.server.application(env, start_response)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid-1.4.2-py3.3.egg/pyramid/router.py\", line 251, in __call__\n    response = self.invoke_subrequest(request, use_tweens=True)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid-1.4.2-py3.3.egg/pyramid/router.py\", line 227, in invoke_subrequest\n    response = handle_request(request)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid-1.4.2-py3.3.egg/pyramid/tweens.py\", line 21, in excview_tween\n    response = handler(request)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid_tm-0.7-py3.3.egg/pyramid_tm/__init__.py\", line 82, in tm_tween\n    reraise(*exc_info)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid_tm-0.7-py3.3.egg/pyramid_tm/compat.py\", line 13, in reraise\n    raise value\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid_tm-0.7-py3.3.egg/pyramid_tm/__init__.py\", line 63, in tm_tween\n    response = handler(request)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid-1.4.2-py3.3.egg/pyramid/router.py\", line 161, in handle_request\n    response = view_callable(context, request)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid-1.4.2-py3.3.egg/pyramid/config/views.py\", line 369, in rendered_view\n    context)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid-1.4.2-py3.3.egg/pyramid/renderers.py\", line 531, in render_view\n    return self.render_to_response(response, system, request=request)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid-1.4.2-py3.3.egg/pyramid/renderers.py\", line 561, in render_to_response\n    result = self.render(value, system_values, request=request)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid-1.4.2-py3.3.egg/pyramid/renderers.py\", line 557, in render\n    result = renderer(value, system_values)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid_jinja2-1.6-py3.3.egg/pyramid_jinja2/__init__.py\", line 385, in __call__\n    return self.template.render(system)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/pyramid_jinja2-1.6-py3.3.egg/pyramid_jinja2/__init__.py\", line 371, in template\n    return self.environment.get_template(name)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/Jinja2-2.8_devdev_20130604-py3.3.egg/jinja2/environment.py\", line 791, in get_template\n    return self._load_template(name, self.make_globals(globals))\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/Jinja2-2.8_devdev_20130604-py3.3.egg/jinja2/environment.py\", line 765, in _load_template\n    template = self.loader.load(self, name, globals)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/Jinja2-2.8_devdev_20130604-py3.3.egg/jinja2/loaders.py\", line 119, in load\n    bucket = bcc.get_bucket(environment, name, filename, source)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/Jinja2-2.8_devdev_20130604-py3.3.egg/jinja2/bccache.py\", line 176, in get_bucket\n    key = self.get_cache_key(name, filename)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/Jinja2-2.8_devdev_20130604-py3.3.egg/jinja2/bccache.py\", line 163, in get_cache_key\n    if isinstance(filename, unicode):\nNameError: global name 'unicode' is not defined\n```\n\nI have WebOb 1.2.3 and distribute 0.6.45. Thanks!!!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/57", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/57/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/57/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/57", "id": 12325468, "node_id": "MDU6SXNzdWUxMjMyNTQ2OA==", "number": 57, "title": "Useless warning: `DeprecationWarning: reload_templates setting is deprecated, use pyramid.reload_templates instead.`", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-03-22T16:03:42Z", "updated_at": "2013-03-22T18:35:38Z", "closed_at": "2013-03-22T18:35:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The warning:\n\n`DeprecationWarning: reload_templates setting is deprecated, use pyramid.reload_templates instead.`\n\nis displayed for me whenever I run my nosetests suite for my project which uses `pyramid_jinja2`. For a while I thought this was telling me that I needed to update my configuration, but I couldn't find any trace of the old setting.\n\nIt appears that this message is displayed even if the user doesn't use this setting, because Pyramid itself sets this setting, presumably for backwards compatibility with stuff that looks for it (see [this line of code in pyramid/config/settings.py](https://github.com/Pylons/pyramid/blob/master/pyramid/config/settings.py#L126)).\n\nI propose to remove the warning, since it will be displayed even when the user cannot do anything about it. Unless someone can figure out a way to determine whether the setting came from Pyramid or from a user app, but I don't see a way to do this.\n\nI will send a PR.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/56", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/56/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/56/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/56", "id": 11088049, "node_id": "MDU6SXNzdWUxMTA4ODA0OQ==", "number": 56, "title": "python3.3: Non-ASCII characters in changelog breaks pip installation", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-02-17T15:36:26Z", "updated_at": "2013-08-06T17:52:36Z", "closed_at": "2013-08-06T17:52:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "See http://stackoverflow.com/questions/14922709/error-when-installing-pyramid-jinja2-on-production-server:\n\n```\nroot@vre [/home/vrnet/public_html/env]# sudo -u vrnet ./bin/pip install pyramid_jinja2\n\nDownloading/unpacking pyramid-jinja2\n  Running setup.py egg_info for package pyramid-jinja2\n    Traceback (most recent call last):\n      File \"<string>\", line 16, in <module>\n      File \"/home/vrnet/public_html/env/build/pyramid-jinja2/setup.py\", line 21, in <module>\n        CHANGES = open(os.path.join(here, 'CHANGES.txt')).read()\n      File \"/home/vrnet/public_html/env/lib64/python3.3/encodings/ascii.py\", line 26, in decode\n        return codecs.ascii_decode(input, self.errors)[0]\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc5 in position 131: ordinal not in range(128)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"/home/vrnet/public_html/env/build/pyramid-jinja2/setup.py\", line 21, in <module>\n\n    CHANGES = open(os.path.join(here, 'CHANGES.txt')).read()\n\n  File \"/home/vrnet/public_html/env/lib64/python3.3/encodings/ascii.py\", line 26, in decode\n\n    return codecs.ascii_decode(input, self.errors)[0]\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc5 in position 131: ordinal not in range(128)\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1 in /home/vrnet/public_html/env/build/pyramid-jinja2\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/45", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/45/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/45/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/45", "id": 8257326, "node_id": "MDU6SXNzdWU4MjU3MzI2", "number": 45, "title": "Register atexit handle to call jinja2.clear_caches()", "user": {"login": "domenkozar", "id": 126339, "node_id": "MDQ6VXNlcjEyNjMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/126339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domenkozar", "html_url": "https://github.com/domenkozar", "followers_url": "https://api.github.com/users/domenkozar/followers", "following_url": "https://api.github.com/users/domenkozar/following{/other_user}", "gists_url": "https://api.github.com/users/domenkozar/gists{/gist_id}", "starred_url": "https://api.github.com/users/domenkozar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domenkozar/subscriptions", "organizations_url": "https://api.github.com/users/domenkozar/orgs", "repos_url": "https://api.github.com/users/domenkozar/repos", "events_url": "https://api.github.com/users/domenkozar/events{/privacy}", "received_events_url": "https://api.github.com/users/domenkozar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-11-10T01:28:23Z", "updated_at": "2012-11-24T21:58:15Z", "closed_at": "2012-11-24T21:58:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/44", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/44/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/44/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/44", "id": 8156197, "node_id": "MDU6SXNzdWU4MTU2MTk3", "number": 44, "title": "Caching not being re-cached properly", "user": {"login": "mastergberry", "id": 1483171, "node_id": "MDQ6VXNlcjE0ODMxNzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1483171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastergberry", "html_url": "https://github.com/mastergberry", "followers_url": "https://api.github.com/users/mastergberry/followers", "following_url": "https://api.github.com/users/mastergberry/following{/other_user}", "gists_url": "https://api.github.com/users/mastergberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastergberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastergberry/subscriptions", "organizations_url": "https://api.github.com/users/mastergberry/orgs", "repos_url": "https://api.github.com/users/mastergberry/repos", "events_url": "https://api.github.com/users/mastergberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mastergberry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-11-06T23:20:01Z", "updated_at": "2012-11-24T21:57:42Z", "closed_at": "2012-11-24T21:57:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When switching the HTTP_HOST of a website by changing the port or the URL on which the application is being served from the templates seem to be incorrectly being cached and will not update when the application is run again with the new HTTP_HOST.  Temporary solution is to enable the following option:\n\njinja2.bytecode_caching = false\n\nOtherwise I have had no luck.  On the Pocoo irc i was linked to this in addition, it may serve to help, but i didn't end up using it.  http://stackoverflow.com/questions/8608743/whats-the-best-way-to-disable-jinja2-template-caching-in-bottle-py/8609414#8609414\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/37", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/37/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/37/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/37", "id": 6243745, "node_id": "MDU6SXNzdWU2MjQzNzQ1", "number": 37, "title": "provide a way to add tests", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-15T16:04:17Z", "updated_at": "2012-10-17T08:53:17Z", "closed_at": "2012-10-17T08:53:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently you have to get the `Environment` and do `env.tests['foo'] = some_test` and it might be nice to do it from the INI file similar to filters.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/35", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/35/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/35/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/35", "id": 6014853, "node_id": "MDU6SXNzdWU2MDE0ODUz", "number": 35, "title": "use pyramid.path.AssetResolver to allow assets owerride", "user": {"login": "appetito", "id": 557573, "node_id": "MDQ6VXNlcjU1NzU3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/557573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/appetito", "html_url": "https://github.com/appetito", "followers_url": "https://api.github.com/users/appetito/followers", "following_url": "https://api.github.com/users/appetito/following{/other_user}", "gists_url": "https://api.github.com/users/appetito/gists{/gist_id}", "starred_url": "https://api.github.com/users/appetito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/appetito/subscriptions", "organizations_url": "https://api.github.com/users/appetito/orgs", "repos_url": "https://api.github.com/users/appetito/repos", "events_url": "https://api.github.com/users/appetito/events{/privacy}", "received_events_url": "https://api.github.com/users/appetito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-08-03T13:39:27Z", "updated_at": "2012-08-27T05:58:31Z", "closed_at": "2012-08-27T05:58:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently i'm use monkey patch:\n\n```\n#######################\n\nimport pyramid_jinja2\nfrom pyramid.path import AssetResolver\n\ndef aspec(template, pname='__name__'):\n    return AssetResolver().resolve(template).abspath()\n\npyramid_jinja2.abspath_from_asset_spec = aspec\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/34", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/34/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/34/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/34", "id": 5805715, "node_id": "MDU6SXNzdWU1ODA1NzE1", "number": 34, "title": "add_jinja2_extension creates new environment, killing the existing one", "user": {"login": "rbu", "id": 65913, "node_id": "MDQ6VXNlcjY1OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/65913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbu", "html_url": "https://github.com/rbu", "followers_url": "https://api.github.com/users/rbu/followers", "following_url": "https://api.github.com/users/rbu/following{/other_user}", "gists_url": "https://api.github.com/users/rbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbu/subscriptions", "organizations_url": "https://api.github.com/users/rbu/orgs", "repos_url": "https://api.github.com/users/rbu/repos", "events_url": "https://api.github.com/users/rbu/events{/privacy}", "received_events_url": "https://api.github.com/users/rbu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-07-24T15:36:39Z", "updated_at": "2012-09-12T09:59:17Z", "closed_at": "2012-09-12T09:59:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Calling `config.add_jinja2_extension(\"extension\")` will unregister the existing Jinja2 enviornment and recreate it from scratch, killing all the changes that may have happened to the environment, such as added filters or other gettext callables. This is rather unexpected and does not even create any log output, which makes this very hard to spot.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/32", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/32/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/32/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/32", "id": 4825270, "node_id": "MDU6SXNzdWU0ODI1Mjcw", "number": 32, "title": "Support for relative search path on the template loader", "user": {"login": "jpfarias", "id": 1088009, "node_id": "MDQ6VXNlcjEwODgwMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1088009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpfarias", "html_url": "https://github.com/jpfarias", "followers_url": "https://api.github.com/users/jpfarias/followers", "following_url": "https://api.github.com/users/jpfarias/following{/other_user}", "gists_url": "https://api.github.com/users/jpfarias/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpfarias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpfarias/subscriptions", "organizations_url": "https://api.github.com/users/jpfarias/orgs", "repos_url": "https://api.github.com/users/jpfarias/repos", "events_url": "https://api.github.com/users/jpfarias/events{/privacy}", "received_events_url": "https://api.github.com/users/jpfarias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-05-30T21:27:16Z", "updated_at": "2012-05-31T02:04:26Z", "closed_at": "2012-05-31T02:04:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\n\nI just tried to use the jinja2 loader in the same way as I do for the chameleon loader where it is able to find the assets relative to the current module's path but it didn't work.\n\nInspecting the source code I could figure a solution but I am not sure if this is a good solution, I'm submitting here for review. Once I have more time I will try to make some tests and send a pull request.\n\nThis is what the new Jinja2TemplateRenderer class looks like:\n\n``` python\nclass Jinja2TemplateRenderer(object):\n    '''Renderer for a jinja2 template'''\n    template = None\n\n    def __init__(self, info, environment):\n        self.info = info\n        self.environment = environment\n\n    def implementation(self):\n        return self.template\n\n    @property\n    def template(self):\n        name = self.info.name\n        name_with_package = name\n        package = self.info.package\n        if ':' not in name:\n            name_with_package = '%s:%s' % (package.__name__, name)\n        try:\n            return self.environment.get_template(self.info.name)\n        except TemplateNotFound:\n            return self.environment.get_template(name_with_package)\n\n    def __call__(self, value, system):\n        try:\n            system.update(value)\n        except (TypeError, ValueError):\n            ex = sys.exc_info()[1] # py2.5 - 3.2 compat\n            raise ValueError('renderer was passed non-dictionary '\n                             'as value: %s' % str(ex))\n        return self.template.render(system)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/28", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/28/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/28/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/28", "id": 3191947, "node_id": "MDU6SXNzdWUzMTkxOTQ3", "number": 28, "title": "Keep version branches for backport patches", "user": {"login": "JensRantil", "id": 730342, "node_id": "MDQ6VXNlcjczMDM0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/730342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JensRantil", "html_url": "https://github.com/JensRantil", "followers_url": "https://api.github.com/users/JensRantil/followers", "following_url": "https://api.github.com/users/JensRantil/following{/other_user}", "gists_url": "https://api.github.com/users/JensRantil/gists{/gist_id}", "starred_url": "https://api.github.com/users/JensRantil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JensRantil/subscriptions", "organizations_url": "https://api.github.com/users/JensRantil/orgs", "repos_url": "https://api.github.com/users/JensRantil/repos", "events_url": "https://api.github.com/users/JensRantil/events{/privacy}", "received_events_url": "https://api.github.com/users/JensRantil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-02-12T18:00:07Z", "updated_at": "2013-08-16T16:05:02Z", "closed_at": "2013-08-16T16:05:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that some of the links in mytemplate.jinja2 are broken i version 1.2. How about keeping branches for older versions of pyramid_jinja2 to be able to patch older versions?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/26", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/26/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/26/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/26", "id": 2048650, "node_id": "MDU6SXNzdWUyMDQ4NjUw", "number": 26, "title": "incorrect root factory in paster template", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2011-10-25T19:13:05Z", "updated_at": "2012-09-12T10:03:42Z", "closed_at": "2012-09-12T10:03:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For some reason the root factory takes an `environ` instead of a `request`? It's not used, but it's deceiving.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/25", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/25/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/25/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/25", "id": 2048635, "node_id": "MDU6SXNzdWUyMDQ4NjM1", "number": 25, "title": "Incorrect HTML header in sample jinja2 template", "user": {"login": "pydanny", "id": 62857, "node_id": "MDQ6VXNlcjYyODU3", "avatar_url": "https://avatars1.githubusercontent.com/u/62857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pydanny", "html_url": "https://github.com/pydanny", "followers_url": "https://api.github.com/users/pydanny/followers", "following_url": "https://api.github.com/users/pydanny/following{/other_user}", "gists_url": "https://api.github.com/users/pydanny/gists{/gist_id}", "starred_url": "https://api.github.com/users/pydanny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pydanny/subscriptions", "organizations_url": "https://api.github.com/users/pydanny/orgs", "repos_url": "https://api.github.com/users/pydanny/repos", "events_url": "https://api.github.com/users/pydanny/events{/privacy}", "received_events_url": "https://api.github.com/users/pydanny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-10-25T19:11:58Z", "updated_at": "2013-08-06T07:08:37Z", "closed_at": "2013-08-06T07:08:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I do `$ paster create -t pyramid_jinja2_starter`\n\nNear the top of the sample template I get:\n\n``` html\n  <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" xmlns:tal=\"http://xml.zope.org/namespaces/tal\">\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/22", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/22/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/22/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/22", "id": 888807, "node_id": "MDU6SXNzdWU4ODg4MDc=", "number": 22, "title": "i18n not working at all", "user": {"login": "packardb", "id": 326108, "node_id": "MDQ6VXNlcjMyNjEwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/326108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/packardb", "html_url": "https://github.com/packardb", "followers_url": "https://api.github.com/users/packardb/followers", "following_url": "https://api.github.com/users/packardb/following{/other_user}", "gists_url": "https://api.github.com/users/packardb/gists{/gist_id}", "starred_url": "https://api.github.com/users/packardb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/packardb/subscriptions", "organizations_url": "https://api.github.com/users/packardb/orgs", "repos_url": "https://api.github.com/users/packardb/repos", "events_url": "https://api.github.com/users/packardb/events{/privacy}", "received_events_url": "https://api.github.com/users/packardb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2011-05-12T11:02:53Z", "updated_at": "2011-05-13T10:32:13Z", "closed_at": "2011-05-12T21:01:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "**System:**\n\n  Darwin <removed> 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386\n\n**Packages:** (with version)\n\n  Babel-0.9.6\n  Jinja2-2.5.5\n  pyramid_jinja2-0.6.2\n\n**development.ini:**\n  ...\n  default_locale_name = ro\n  jinja2.directories = templates\n  ...\n\n****init**.py:**\n  ...\n  config.include('pyramid_jinja2')\n  ...\n\n**views.py:** (later explanation)\n\ndef index(request):\n  print get_localizer(request).translate(_('Subscription form'))\n\n**templates/register.jinja2:**\n...\n{% trans %}Subscription form{% endtrans %}\n...\n\n**Issue:**\n\nWhen the index() function from views.py gets called, it prints the translated string (from locale/ro/LC_MESSAGES/...), however, when i render the template, 'Subscription form' doesn't get translated at all.\n\nI also have added jinja2.ext.i18n to jinja2.extensions in development.ini, however, it still won't translate my strings.\n\nWhat am i doing wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/20", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/20/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/20/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/20", "id": 739433, "node_id": "MDU6SXNzdWU3Mzk0MzM=", "number": 20, "title": "Example for adding to Environment.globals", "user": {"login": "brutka", "id": 713389, "node_id": "MDQ6VXNlcjcxMzM4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/713389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brutka", "html_url": "https://github.com/brutka", "followers_url": "https://api.github.com/users/brutka/followers", "following_url": "https://api.github.com/users/brutka/following{/other_user}", "gists_url": "https://api.github.com/users/brutka/gists{/gist_id}", "starred_url": "https://api.github.com/users/brutka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brutka/subscriptions", "organizations_url": "https://api.github.com/users/brutka/orgs", "repos_url": "https://api.github.com/users/brutka/repos", "events_url": "https://api.github.com/users/brutka/events{/privacy}", "received_events_url": "https://api.github.com/users/brutka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-04-06T20:59:39Z", "updated_at": "2011-04-06T21:13:18Z", "closed_at": "2011-04-06T21:13:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "can we have a complete example how to add variables and functions to jinja's Environment.globals?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/19", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/19/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/19/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/19", "id": 738352, "node_id": "MDU6SXNzdWU3MzgzNTI=", "number": 19, "title": "I18n example", "user": {"login": "brutka", "id": 713389, "node_id": "MDQ6VXNlcjcxMzM4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/713389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brutka", "html_url": "https://github.com/brutka", "followers_url": "https://api.github.com/users/brutka/followers", "following_url": "https://api.github.com/users/brutka/following{/other_user}", "gists_url": "https://api.github.com/users/brutka/gists{/gist_id}", "starred_url": "https://api.github.com/users/brutka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brutka/subscriptions", "organizations_url": "https://api.github.com/users/brutka/orgs", "repos_url": "https://api.github.com/users/brutka/repos", "events_url": "https://api.github.com/users/brutka/events{/privacy}", "received_events_url": "https://api.github.com/users/brutka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2011-04-06T15:59:50Z", "updated_at": "2011-04-06T21:00:27Z", "closed_at": "2011-04-06T19:55:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot get I18n working?\nI need to add gettext calls to context globals.\nThere is no any example on the web of doing so.\nI have ended up with: \n\nconfig.include('pyramid_jinja2')\n    includeme(config)\n\n```\njinja2_environment = registry.queryUtility(IJinja2Environment)\njinja2_environment.install_gettext_callables(\n        lambda x: translations.ugettext(x),\n        lambda s, p, n: translations.ungettext(s, p, n),\n        newstyle=True\n    )\n```\n\nbut it doesn't work as well.\n\nPlease, provide any sample of that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/18", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/18/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/18/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/18", "id": 607682, "node_id": "MDU6SXNzdWU2MDc2ODI=", "number": 18, "title": "jinja2.directories clobbering each other for 2 separate WSGI apps", "user": {"login": "371c", "id": 624053, "node_id": "MDQ6VXNlcjYyNDA1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/624053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/371c", "html_url": "https://github.com/371c", "followers_url": "https://api.github.com/users/371c/followers", "following_url": "https://api.github.com/users/371c/following{/other_user}", "gists_url": "https://api.github.com/users/371c/gists{/gist_id}", "starred_url": "https://api.github.com/users/371c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/371c/subscriptions", "organizations_url": "https://api.github.com/users/371c/orgs", "repos_url": "https://api.github.com/users/371c/repos", "events_url": "https://api.github.com/users/371c/events{/privacy}", "received_events_url": "https://api.github.com/users/371c/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-02-17T21:36:16Z", "updated_at": "2011-02-18T19:38:33Z", "closed_at": "2011-02-18T19:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n## My setup\n\npyramid, pyramid_jinja2, sqla ..\n\nsome background: i'm a pyramid newbie so the \"solution\" i'm applying to my \"problem\" may not be the \"best\".\n## Aim\n\nPyramid's virtual hosting as described [here](http://docs.pylonsproject.org/projects/pyramid/dev/narr/vhosting.html)\n\neg.\nhttp://example.com - main website\nhttp://example.com/admin - admin site as a separate wsgi app\n## How i went about it\n\ndefined a \"main\" composite app - important parts below:\n\n```\n[DEFAULT]\n..\n[composite:main]\nuse = egg:Paste#urlmap\n/ = web\n/admin = admin\n\n[app:web]\nuse = egg:Example#main\njinja2.directories = example:templates/web\n\n[app:admin]\nuse = egg:Example#admin\njinja2.directories = example:templates/admin\n...\n```\n\nThis also means that i have **2 separate entry points** in my setup.py (main and admin) which in turn means that i'm creating **2 Configurator() instances** inorder to create the corresponding wsgi apps (both entry points being app factories that have to return wsgi apps - Configurator().make_wsgi_app() ). \n## Problem\n\nThe value of jinja2.directories for the 1st app created is clobbered by the jinja2.directories value for the last app created.\n\nPlease note that this might be a \"faux\" problem because am not sure if its \"right\" to create 2 (or more) configurator instances within the same pyramid project. On the other hand i don't see how we can avoid creating several of those when creating a composite app (or maybe composite app is not the way to go..?).\n\nHope i've been precise..\n\nRegards,\nEric.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/15", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/15/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/15/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/15", "id": 563258, "node_id": "MDU6SXNzdWU1NjMyNTg=", "number": 15, "title": "Paster template needs updating", "user": {"login": "seedifferently", "id": 50830, "node_id": "MDQ6VXNlcjUwODMw", "avatar_url": "https://avatars0.githubusercontent.com/u/50830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seedifferently", "html_url": "https://github.com/seedifferently", "followers_url": "https://api.github.com/users/seedifferently/followers", "following_url": "https://api.github.com/users/seedifferently/following{/other_user}", "gists_url": "https://api.github.com/users/seedifferently/gists{/gist_id}", "starred_url": "https://api.github.com/users/seedifferently/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seedifferently/subscriptions", "organizations_url": "https://api.github.com/users/seedifferently/orgs", "repos_url": "https://api.github.com/users/seedifferently/repos", "events_url": "https://api.github.com/users/seedifferently/events{/privacy}", "received_events_url": "https://api.github.com/users/seedifferently/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-01-31T01:40:21Z", "updated_at": "2011-02-14T13:34:43Z", "closed_at": "2011-02-14T13:34:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "The paster template has gotten behind from the pyramid trunk. It doesn't include a production.ini, MANIFEST.in, setup.cfg, etc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/13", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/13/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/13/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/13", "id": 509794, "node_id": "MDU6SXNzdWU1MDk3OTQ=", "number": 13, "title": "I would like to have access to \"settings\" in my custom IJinja2Environment utility", "user": {"login": "harobed", "id": 230143, "node_id": "MDQ6VXNlcjIzMDE0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/230143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harobed", "html_url": "https://github.com/harobed", "followers_url": "https://api.github.com/users/harobed/followers", "following_url": "https://api.github.com/users/harobed/following{/other_user}", "gists_url": "https://api.github.com/users/harobed/gists{/gist_id}", "starred_url": "https://api.github.com/users/harobed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harobed/subscriptions", "organizations_url": "https://api.github.com/users/harobed/orgs", "repos_url": "https://api.github.com/users/harobed/repos", "events_url": "https://api.github.com/users/harobed/events{/privacy}", "received_events_url": "https://api.github.com/users/harobed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-01-06T07:12:25Z", "updated_at": "2011-03-03T23:28:33Z", "closed_at": "2011-03-03T23:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI use Pyramid and pyramid_jinja2 in my project.\n\nI need to use a personal Jinja2 template template.\n\nI've saw I can register an IJinja2Environment utility.\n\n```\nenvironment = registry.queryUtility(IJinja2Environment)\n```\n\nIn my project, I would like create a \"environment\" almost identical than \nenvironment declaration of \"pyramid_jinja2.renderer_factory\" :\n\n```\nreload_templates = settings.get('reload_templates', False)\ndirectories = settings.get('jinja2.directories')\n\n...\n\nenvironment = Environment(loader=loader,\n                          auto_reload=reload_templates,\n                          autoescape=autoescape,\n                          extensions=extensions)\nenvironment.filters.update(filters)\n```\n\nPersonnaly, I would like the same think but I would like customize the \"loader\".\n\nTo make this, if I register one IJinja2Environment utility I've one problem, in utility I haven't access to settings then I can't do :\n\n```\nreload_templates = settings.get('reload_templates', False)\n...\nfilters = settings.get('jinja2.filters', '')\n```\n\nThis is my suggestion in \"pyramid_jinja2.renderer_factory\" function :\n\n```\ndef renderer_factory(info):\n    registry = info.registry\n    settings = info.settings\n    environment = registry.queryUtility(IJinja2Environment)\n    if environment is None:\n        environment_factory = registry.queryUtility(IJinja2EnvironmentFactory)\n        if environment_factory is None:\n            reload_templates = settings.get('reload_templates', False)\n            directories = settings.get('jinja2.directories')\n            input_encoding = settings.get('jinja2.input_encoding', 'utf-8')\n            autoescape = settings.get('jinja2.autoescape', True)\n            extensions = settings.get('jinja2.extensions', '')\n            filters = settings.get('jinja2.filters', '')\n            if directories is None:\n                raise ConfigurationError(\n                    'Jinja2 template used without a ``jinja2.directories`` setting')\n            if isinstance(directories, basestring):\n                directories = splitlines(directories)\n            directories = [ abspath_from_resource_spec(d) for d in directories ]\n            loader = FileSystemLoader(directories, encoding=input_encoding)\n            autoescape = asbool(autoescape)\n            extensions = parse_extensions(extensions)\n            filters = parse_filters(filters)\n            environment = Environment(loader=loader,\n                                      auto_reload=reload_templates,\n                                      autoescape=autoescape,\n                                      extensions=extensions)\n            environment.filters.update(filters)\n        else:\n            environment = environment_factory(info)\n\n        registry.registerUtility(environment, IJinja2Environment)\n    return Jinja2TemplateRenderer(info, environment)\n```\n\nWith this \"patch\" I can register a IJinja2EnvironmentFactory utility, in this\nfactory I\u00a0have access to \"registry\" and \"settings\" via \"info\" parameter. \n\nWhat do you think about this suggest ? Do you have others solutions / ideas ?\n\nRegards,\nStephane\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/12", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/12/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/12/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/12", "id": 497643, "node_id": "MDU6SXNzdWU0OTc2NDM=", "number": 12, "title": "typo in pyramid_jinja2 docs", "user": {"login": "jeffmad", "id": 109333, "node_id": "MDQ6VXNlcjEwOTMzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/109333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffmad", "html_url": "https://github.com/jeffmad", "followers_url": "https://api.github.com/users/jeffmad/followers", "following_url": "https://api.github.com/users/jeffmad/following{/other_user}", "gists_url": "https://api.github.com/users/jeffmad/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffmad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffmad/subscriptions", "organizations_url": "https://api.github.com/users/jeffmad/orgs", "repos_url": "https://api.github.com/users/jeffmad/repos", "events_url": "https://api.github.com/users/jeffmad/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffmad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-12-29T20:21:49Z", "updated_at": "2011-01-03T04:55:35Z", "closed_at": "2011-01-03T04:55:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Creating a Jinja2 Pyramid Project\u00b6\nat this url: http://docs.pylonshq.com/pyramid_jinja2/dev/\ni think the command should read as follows:\n$ paster create -t  pyramid_jinja2_starter\n\nbut it reads as:\n$ paster create -t bin/paster pyramid_jinja2_starter\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/11", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/11/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/11/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/11", "id": 493363, "node_id": "MDU6SXNzdWU0OTMzNjM=", "number": 11, "title": "render_to_response not working for pyramid 1.0a7 and pyramid_jinja2 0.4", "user": {"login": "slestak", "id": 79189, "node_id": "MDQ6VXNlcjc5MTg5", "avatar_url": "https://avatars0.githubusercontent.com/u/79189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slestak", "html_url": "https://github.com/slestak", "followers_url": "https://api.github.com/users/slestak/followers", "following_url": "https://api.github.com/users/slestak/following{/other_user}", "gists_url": "https://api.github.com/users/slestak/gists{/gist_id}", "starred_url": "https://api.github.com/users/slestak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slestak/subscriptions", "organizations_url": "https://api.github.com/users/slestak/orgs", "repos_url": "https://api.github.com/users/slestak/repos", "events_url": "https://api.github.com/users/slestak/events{/privacy}", "received_events_url": "https://api.github.com/users/slestak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2010-12-27T05:40:44Z", "updated_at": "2010-12-27T18:14:35Z", "closed_at": "2010-12-27T14:03:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs reference:\n\nfrom pyramid.jinja2 import render_to_response\nreturn render_to_response('foo.jinja2', {'foo':1})\n\nhowever, I get an ImportError that pyramid has no module jinja2\n\nModule pyramid_jinja2 has no method render_to_response()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/5", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/5/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/5/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/5", "id": 435843, "node_id": "MDU6SXNzdWU0MzU4NDM=", "number": 5, "title": "needs ways to use custom filters and extensions.", "user": {"login": "aodag", "id": 218344, "node_id": "MDQ6VXNlcjIxODM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/218344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aodag", "html_url": "https://github.com/aodag", "followers_url": "https://api.github.com/users/aodag/followers", "following_url": "https://api.github.com/users/aodag/following{/other_user}", "gists_url": "https://api.github.com/users/aodag/gists{/gist_id}", "starred_url": "https://api.github.com/users/aodag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aodag/subscriptions", "organizations_url": "https://api.github.com/users/aodag/orgs", "repos_url": "https://api.github.com/users/aodag/repos", "events_url": "https://api.github.com/users/aodag/events{/privacy}", "received_events_url": "https://api.github.com/users/aodag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2010-11-24T01:24:35Z", "updated_at": "2010-11-26T04:46:27Z", "closed_at": "2010-11-26T04:46:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Jinja2 has custom filters and extensions.\nTo adding custom filter, we need accessing filters attribute of environ.\nExtensions are added in the environ constructor.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/3", "repository_url": "https://api.github.com/repos/Pylons/pyramid_jinja2", "labels_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/3/comments", "events_url": "https://api.github.com/repos/Pylons/pyramid_jinja2/issues/3/events", "html_url": "https://github.com/Pylons/pyramid_jinja2/issues/3", "id": 403724, "node_id": "MDU6SXNzdWU0MDM3MjQ=", "number": 3, "title": "Documentation Bug, reload_templates = true doesn't appear to work", "user": {"login": "cd34", "id": 214258, "node_id": "MDQ6VXNlcjIxNDI1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/214258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cd34", "html_url": "https://github.com/cd34", "followers_url": "https://api.github.com/users/cd34/followers", "following_url": "https://api.github.com/users/cd34/following{/other_user}", "gists_url": "https://api.github.com/users/cd34/gists{/gist_id}", "starred_url": "https://api.github.com/users/cd34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cd34/subscriptions", "organizations_url": "https://api.github.com/users/cd34/orgs", "repos_url": "https://api.github.com/users/cd34/repos", "events_url": "https://api.github.com/users/cd34/events{/privacy}", "received_events_url": "https://api.github.com/users/cd34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2010-11-06T05:21:27Z", "updated_at": "2010-11-06T06:04:04Z", "closed_at": "2010-11-06T13:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://docs.pylonshq.com/pyramid_jinja2/dev/\n\n2.\n\nfrom pyramid_jinja2 import renderer_factory\nconfig.add_renderer(.'jinja2', renderer_factory)\n\nshould be\n\nfrom pyramid_jinja2 import renderer_factory\nconfig.add_renderer('.jinja2', renderer_factory)\n\nWith\n\nreload_templates = true\n\nset in development.ini, the value is verified as being true prior to:\n\nlib/python2.6/site-packages/pyramid_jinja2-0.1-py2.6.egg/pyramid_jinja2/**init**.py:\n\n```\n    environment = Environment(loader=loader, auto_reload=reload_templates,\n                              autoescape=True)\n```\n\nHowever, modifications made to templates are not reflected until pyramid is restarted.\n", "performed_via_github_app": null, "score": 1.0}]}