{"total_count": 131, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/martinblech/xmltodict/issues/250", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/250/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/250/events", "html_url": "https://github.com/martinblech/xmltodict/issues/250", "id": 635039879, "node_id": "MDU6SXNzdWU2MzUwMzk4Nzk=", "number": 250, "title": "How to unparse a dict with multi-valued node?", "user": {"login": "MuqadderIqbal", "id": 8548346, "node_id": "MDQ6VXNlcjg1NDgzNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8548346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MuqadderIqbal", "html_url": "https://github.com/MuqadderIqbal", "followers_url": "https://api.github.com/users/MuqadderIqbal/followers", "following_url": "https://api.github.com/users/MuqadderIqbal/following{/other_user}", "gists_url": "https://api.github.com/users/MuqadderIqbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/MuqadderIqbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MuqadderIqbal/subscriptions", "organizations_url": "https://api.github.com/users/MuqadderIqbal/orgs", "repos_url": "https://api.github.com/users/MuqadderIqbal/repos", "events_url": "https://api.github.com/users/MuqadderIqbal/events{/privacy}", "received_events_url": "https://api.github.com/users/MuqadderIqbal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-09T01:29:06Z", "updated_at": "2020-06-15T20:34:28Z", "closed_at": "2020-06-15T20:34:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm facing difficulty unparsing a resultset (a dict) that contains nodes that are multi-values (imagine a single customer order transaction containing more than one ordered items). \r\n\r\nHere's my input dict:\r\n\r\n```\r\n{'Transaction': {'Coverages': '[{\"CoverageCode\": \"S18_1749\", \"DiscountRate\": '\r\n                              '30}, {\"CoverageCode\": \"S18_2248\", '\r\n                              '\"DiscountRate\": 50}, {\"CoverageCode\": '\r\n                              '\"S18_4409\", \"DiscountRate\": 22}, '\r\n                              '{\"CoverageCode\": \"S24_3969\", \"DiscountRate\": '\r\n                              '49}]',\r\n                 'TransactionID': 10100,\r\n                 'TransactionType': 'Shipped'}\r\n```\r\n\r\nAnd here's the output XML from print(xmltodict.unparse(json_data_t, pretty=True)):\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Transaction>\r\n\t<TransactionID>10100</TransactionID>\r\n\t<TransactionType>Shipped</TransactionType>\r\n\t<Coverages>[{\"CoverageCode\": \"S18_1749\", \"DiscountRate\": 30}, {\"CoverageCode\": \"S18_2248\", \"DiscountRate\": 50}, {\"CoverageCode\": \"S18_4409\", \"DiscountRate\": 22}, {\"CoverageCode\": \"S24_3969\", \"DiscountRate\": 49}]</Coverages>\r\n</Transaction>\r\n```\r\n\r\nEssentially, I want unparse to also decompose the \"Coverages\" node that contains multi-valued list collection of its own. I wanted to check if \"expand_iter\" helps but I got an error that reads like:-\r\n`TypeError: _emit() got an unexpected keyword argument 'expand_iter'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/248", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/248/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/248/events", "html_url": "https://github.com/martinblech/xmltodict/issues/248", "id": 630341844, "node_id": "MDU6SXNzdWU2MzAzNDE4NDQ=", "number": 248, "title": "OrderedDict doesn't need to be used with python versions > 3.6", "user": {"login": "Mattwmaster58", "id": 26337069, "node_id": "MDQ6VXNlcjI2MzM3MDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/26337069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mattwmaster58", "html_url": "https://github.com/Mattwmaster58", "followers_url": "https://api.github.com/users/Mattwmaster58/followers", "following_url": "https://api.github.com/users/Mattwmaster58/following{/other_user}", "gists_url": "https://api.github.com/users/Mattwmaster58/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mattwmaster58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mattwmaster58/subscriptions", "organizations_url": "https://api.github.com/users/Mattwmaster58/orgs", "repos_url": "https://api.github.com/users/Mattwmaster58/repos", "events_url": "https://api.github.com/users/Mattwmaster58/events{/privacy}", "received_events_url": "https://api.github.com/users/Mattwmaster58/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T21:23:31Z", "updated_at": "2020-06-03T21:28:57Z", "closed_at": "2020-06-03T21:28:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's a bit of an annoying quirk to have to try and read a OrderedDict string representation as well. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/245", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/245/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/245/events", "html_url": "https://github.com/martinblech/xmltodict/issues/245", "id": 614020593, "node_id": "MDU6SXNzdWU2MTQwMjA1OTM=", "number": 245, "title": "Bug? force_list will also do it on tags which are substring of the argument", "user": {"login": "grippon", "id": 1236275, "node_id": "MDQ6VXNlcjEyMzYyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1236275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grippon", "html_url": "https://github.com/grippon", "followers_url": "https://api.github.com/users/grippon/followers", "following_url": "https://api.github.com/users/grippon/following{/other_user}", "gists_url": "https://api.github.com/users/grippon/gists{/gist_id}", "starred_url": "https://api.github.com/users/grippon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grippon/subscriptions", "organizations_url": "https://api.github.com/users/grippon/orgs", "repos_url": "https://api.github.com/users/grippon/repos", "events_url": "https://api.github.com/users/grippon/events{/privacy}", "received_events_url": "https://api.github.com/users/grippon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T12:31:52Z", "updated_at": "2020-05-11T12:50:12Z", "closed_at": "2020-05-11T12:50:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> childxml = \"<Ch><C><Age>5</Age><Choir>Scala</Choir><Name>Joe</Name></C></Ch>\"\r\n>>> json.dumps(xmltodict.parse(childxml))\r\n'{\"Ch\": {\"C\": {\"Age\": \"5\", \"Choir\": \"Scala\", \"Name\": \"Joe\"}}}'\r\n>>> json.dumps(xmltodict.parse(childxml, force_list='Choir'))\r\n'{\"Ch\": [{\"C\": [{\"Age\": \"5\", \"Choir\": [\"Scala\"], \"Name\": \"Joe\"}]}]}'\r\n\r\n```\r\n\r\nAll the tags which are a substring of Choir (from the start) like C, Ch are forced to list as well, is it normal behaviour?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/241", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/241/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/241/events", "html_url": "https://github.com/martinblech/xmltodict/issues/241", "id": 597352010, "node_id": "MDU6SXNzdWU1OTczNTIwMTA=", "number": 241, "title": "skip elements based on parent", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T15:10:10Z", "updated_at": "2020-06-03T19:20:18Z", "closed_at": "2020-06-03T19:20:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering if filtering out specific parent.child is possible.\r\n\r\nhttps://github.com/martinblech/xmltodict/issues/7 shows how to skip elements (keys) using `postprocessor` regardless of the parent.\r\n\r\nWhat if we had:\r\n```\r\n<doc>\r\n    <item>Item1</item>\r\n    <item>Item2</item>\r\n\t<doc>blabla</doc>\r\n    <item>Item4</item>\r\n</doc>'''\r\n```\r\nand wanted to skip `doc` under `item` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/236", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/236/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/236/events", "html_url": "https://github.com/martinblech/xmltodict/issues/236", "id": 550684689, "node_id": "MDU6SXNzdWU1NTA2ODQ2ODk=", "number": 236, "title": "expand_iter doesn't work", "user": {"login": "Seljelid", "id": 10849887, "node_id": "MDQ6VXNlcjEwODQ5ODg3", "avatar_url": "https://avatars2.githubusercontent.com/u/10849887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seljelid", "html_url": "https://github.com/Seljelid", "followers_url": "https://api.github.com/users/Seljelid/followers", "following_url": "https://api.github.com/users/Seljelid/following{/other_user}", "gists_url": "https://api.github.com/users/Seljelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seljelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seljelid/subscriptions", "organizations_url": "https://api.github.com/users/Seljelid/orgs", "repos_url": "https://api.github.com/users/Seljelid/repos", "events_url": "https://api.github.com/users/Seljelid/events{/privacy}", "received_events_url": "https://api.github.com/users/Seljelid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-16T09:36:19Z", "updated_at": "2020-06-09T01:15:09Z", "closed_at": "2020-01-16T10:35:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use the keyword expand_iter I get\r\nTypeError: _emit() got an unexpected keyword argument 'expand_iter', even though I'm using the exact example from the README. Is something broken?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/234", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/234/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/234/events", "html_url": "https://github.com/martinblech/xmltodict/issues/234", "id": 542398159, "node_id": "MDU6SXNzdWU1NDIzOTgxNTk=", "number": 234, "title": "Fix simple typo: precendence -> precedence", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-26T00:27:09Z", "updated_at": "2019-12-26T17:15:01Z", "closed_at": "2019-12-26T17:15:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in xmltodict.py.\nShould read `precedence` rather than `precendence`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/233", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/233/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/233/events", "html_url": "https://github.com/martinblech/xmltodict/issues/233", "id": 538129604, "node_id": "MDU6SXNzdWU1MzgxMjk2MDQ=", "number": 233, "title": "Opened by mistake, please ignore", "user": {"login": "theducvu", "id": 26712323, "node_id": "MDQ6VXNlcjI2NzEyMzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/26712323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theducvu", "html_url": "https://github.com/theducvu", "followers_url": "https://api.github.com/users/theducvu/followers", "following_url": "https://api.github.com/users/theducvu/following{/other_user}", "gists_url": "https://api.github.com/users/theducvu/gists{/gist_id}", "starred_url": "https://api.github.com/users/theducvu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theducvu/subscriptions", "organizations_url": "https://api.github.com/users/theducvu/orgs", "repos_url": "https://api.github.com/users/theducvu/repos", "events_url": "https://api.github.com/users/theducvu/events{/privacy}", "received_events_url": "https://api.github.com/users/theducvu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-16T00:22:45Z", "updated_at": "2019-12-16T00:28:51Z", "closed_at": "2019-12-16T00:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please ignore this issue, it was opened here by mistake.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/218", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/218/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/218/events", "html_url": "https://github.com/martinblech/xmltodict/issues/218", "id": 458842421, "node_id": "MDU6SXNzdWU0NTg4NDI0MjE=", "number": 218, "title": "Issues with variable xml files. ", "user": {"login": "franck-noahk", "id": 46761809, "node_id": "MDQ6VXNlcjQ2NzYxODA5", "avatar_url": "https://avatars3.githubusercontent.com/u/46761809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franck-noahk", "html_url": "https://github.com/franck-noahk", "followers_url": "https://api.github.com/users/franck-noahk/followers", "following_url": "https://api.github.com/users/franck-noahk/following{/other_user}", "gists_url": "https://api.github.com/users/franck-noahk/gists{/gist_id}", "starred_url": "https://api.github.com/users/franck-noahk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franck-noahk/subscriptions", "organizations_url": "https://api.github.com/users/franck-noahk/orgs", "repos_url": "https://api.github.com/users/franck-noahk/repos", "events_url": "https://api.github.com/users/franck-noahk/events{/privacy}", "received_events_url": "https://api.github.com/users/franck-noahk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-20T19:51:01Z", "updated_at": "2019-06-25T03:30:49Z", "closed_at": "2019-06-25T03:30:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have encountered an error I believe in the xmltodict library. I am trying to make a python file that will return different objects created from the xml file that I pass, and it works for really huge data structures of xml, but when I only have one element it messes up. \r\n\r\nxml file tree -> Group - fruits - fruit<@ fruits have atributess> - properties_of_order\r\n\r\n```\r\ndata = xmltodict.parse(xml_string)\r\nlist_of_fruit = data[\"Group\"][\"fruits\"][\"fruit\"]\r\n\r\nfor fruit in list_of_fruit:\r\n    if fruit[\"@name\"] in fruits_to_ignore_list:\r\n        #ignore fruit\r\n    if fruit[\"@name\"] in red_fruit_list:\r\n         #Create red fruit object\r\n```\r\n\r\nThe bug that I think I found is that when I have a huge xml file with 15 - 25 fruit in it, the above code works just fine, but if there is only one fruit, when I loop through my list_of_fruit, the iterable variable 'fruit' is not looping through the single fruit that I have, but it loops through the fruit attributes such as color, texture, and shape.  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/207", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/207/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/207/events", "html_url": "https://github.com/martinblech/xmltodict/issues/207", "id": 413846693, "node_id": "MDU6SXNzdWU0MTM4NDY2OTM=", "number": 207, "title": "Parker convention is not implemented correctly", "user": {"login": "AndreiPashkin", "id": 4378647, "node_id": "MDQ6VXNlcjQzNzg2NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4378647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreiPashkin", "html_url": "https://github.com/AndreiPashkin", "followers_url": "https://api.github.com/users/AndreiPashkin/followers", "following_url": "https://api.github.com/users/AndreiPashkin/following{/other_user}", "gists_url": "https://api.github.com/users/AndreiPashkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreiPashkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreiPashkin/subscriptions", "organizations_url": "https://api.github.com/users/AndreiPashkin/orgs", "repos_url": "https://api.github.com/users/AndreiPashkin/repos", "events_url": "https://api.github.com/users/AndreiPashkin/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreiPashkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-24T17:39:04Z", "updated_at": "2019-02-26T08:07:33Z", "closed_at": "2019-02-26T05:17:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like the way of how the library converts XML using Parker convention differs from how it's defined originally in this repository:\r\nhttps://github.com/doekman/xml2json-xslt\r\n\r\nHere is the comparison:\r\n\r\n**Input data**\r\n```xml\r\n<root>\r\n    <person>\r\n        <age>12</age>\r\n        <height>1.73</height>\r\n    </person>\r\n    <person>\r\n        <age>12</age>\r\n        <height>1.73</height>\r\n    </person>\r\n</root>\r\n```\r\n\r\n**Using xmltodict**\r\n\r\nOutput:\r\n```json\r\n{\r\n    \"person\": [\r\n        {\r\n            \"age\": 12,\r\n            \"height\": 1.73\r\n        },\r\n        {\r\n            \"age\": 12,\r\n            \"height\": 1.73\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Using [XSLT document](https://github.com/doekman/xml2json-xslt/blob/master/xml2json.xslt) from the original Google repository**\r\n\r\nOutput:\r\n```json\r\n{\r\n    \"root\":[\r\n        {\r\n            \"age\":12,\r\n            \"height\":1.73\r\n        },\r\n        {\r\n            \"age\":12,\r\n            \"height\":1.73\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/206", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/206/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/206/events", "html_url": "https://github.com/martinblech/xmltodict/issues/206", "id": 413569086, "node_id": "MDU6SXNzdWU0MTM1NjkwODY=", "number": 206, "title": "NaN string creating 2 key/value", "user": {"login": "xgodon", "id": 9975606, "node_id": "MDQ6VXNlcjk5NzU2MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9975606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xgodon", "html_url": "https://github.com/xgodon", "followers_url": "https://api.github.com/users/xgodon/followers", "following_url": "https://api.github.com/users/xgodon/following{/other_user}", "gists_url": "https://api.github.com/users/xgodon/gists{/gist_id}", "starred_url": "https://api.github.com/users/xgodon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xgodon/subscriptions", "organizations_url": "https://api.github.com/users/xgodon/orgs", "repos_url": "https://api.github.com/users/xgodon/repos", "events_url": "https://api.github.com/users/xgodon/events{/privacy}", "received_events_url": "https://api.github.com/users/xgodon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-22T20:37:09Z", "updated_at": "2019-02-22T20:50:55Z", "closed_at": "2019-02-22T20:50:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "parsing \r\n`<LastName>Nan</LastName>`\r\n\r\nresult in the following : \r\n```\r\n\"LastName\": {\r\n     \"t_float\": NaN,\r\n     \"t_string\": \"Nan\"\r\n},\r\n```\r\nI only need the t_string key/value\r\nHow can i achieve that?\r\n\r\nPython 3.6.8\r\nxmltodict 0.11.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/203", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/203/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/203/events", "html_url": "https://github.com/martinblech/xmltodict/issues/203", "id": 402529346, "node_id": "MDU6SXNzdWU0MDI1MjkzNDY=", "number": 203, "title": "New pypi release", "user": {"login": "impredicative", "id": 566650, "node_id": "MDQ6VXNlcjU2NjY1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/566650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/impredicative", "html_url": "https://github.com/impredicative", "followers_url": "https://api.github.com/users/impredicative/followers", "following_url": "https://api.github.com/users/impredicative/following{/other_user}", "gists_url": "https://api.github.com/users/impredicative/gists{/gist_id}", "starred_url": "https://api.github.com/users/impredicative/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/impredicative/subscriptions", "organizations_url": "https://api.github.com/users/impredicative/orgs", "repos_url": "https://api.github.com/users/impredicative/repos", "events_url": "https://api.github.com/users/impredicative/events{/privacy}", "received_events_url": "https://api.github.com/users/impredicative/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T03:42:31Z", "updated_at": "2019-02-11T07:01:34Z", "closed_at": "2019-02-11T07:01:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The project hasn't been updated on pypi in so long! Is there a planned release cycle? Please release! Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/201", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/201/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/201/events", "html_url": "https://github.com/martinblech/xmltodict/issues/201", "id": 396844102, "node_id": "MDU6SXNzdWUzOTY4NDQxMDI=", "number": 201, "title": "Error in parsing list with only one entry", "user": {"login": "Brun059", "id": 29820365, "node_id": "MDQ6VXNlcjI5ODIwMzY1", "avatar_url": "https://avatars0.githubusercontent.com/u/29820365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Brun059", "html_url": "https://github.com/Brun059", "followers_url": "https://api.github.com/users/Brun059/followers", "following_url": "https://api.github.com/users/Brun059/following{/other_user}", "gists_url": "https://api.github.com/users/Brun059/gists{/gist_id}", "starred_url": "https://api.github.com/users/Brun059/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Brun059/subscriptions", "organizations_url": "https://api.github.com/users/Brun059/orgs", "repos_url": "https://api.github.com/users/Brun059/repos", "events_url": "https://api.github.com/users/Brun059/events{/privacy}", "received_events_url": "https://api.github.com/users/Brun059/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-08T10:33:24Z", "updated_at": "2019-01-09T17:58:11Z", "closed_at": "2019-01-09T17:58:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "A list with two or more entries translate correctly into a list <list>\r\nThe same list, list with only one entry does not yield a list with one entry as expected,\r\ninstead it just returns <class 'collections.OrderedDict'>\r\n\r\nin either case, using doc = xmltodict.parse(payload, encoding='utf-8')\r\n\r\n[Error in parsing arrays with only one entry.pdf](https://github.com/martinblech/xmltodict/files/2736326/Error.in.parsing.arrays.with.only.one.entry.pdf)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/196", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/196/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/196/events", "html_url": "https://github.com/martinblech/xmltodict/issues/196", "id": 372639127, "node_id": "MDU6SXNzdWUzNzI2MzkxMjc=", "number": 196, "title": "XML elements with spaces only", "user": {"login": "flengyel", "id": 431946, "node_id": "MDQ6VXNlcjQzMTk0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/431946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flengyel", "html_url": "https://github.com/flengyel", "followers_url": "https://api.github.com/users/flengyel/followers", "following_url": "https://api.github.com/users/flengyel/following{/other_user}", "gists_url": "https://api.github.com/users/flengyel/gists{/gist_id}", "starred_url": "https://api.github.com/users/flengyel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flengyel/subscriptions", "organizations_url": "https://api.github.com/users/flengyel/orgs", "repos_url": "https://api.github.com/users/flengyel/repos", "events_url": "https://api.github.com/users/flengyel/events{/privacy}", "received_events_url": "https://api.github.com/users/flengyel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-22T18:23:35Z", "updated_at": "2018-11-17T17:47:24Z", "closed_at": "2018-10-22T18:45:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible for xmldict to preserve verbatim XML elements that contain only spaces between the element's start and ending  tag? For example, instead of compressing  &lt;ABC&gt;    &lt;/ABC&gt; to  &lt;ABC&gt; &lt;/ABC&gt;, is it possible to not strip out the spaces so the unparsed XML retains the spaces in   &lt;ABC&gt;    &lt;/ABC&gt;?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/188", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/188/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/188/events", "html_url": "https://github.com/martinblech/xmltodict/issues/188", "id": 348633518, "node_id": "MDU6SXNzdWUzNDg2MzM1MTg=", "number": 188, "title": "TypeError: string indices must be integers when parsing a CAMT.053 file", "user": {"login": "lasalesi", "id": 26505250, "node_id": "MDQ6VXNlcjI2NTA1MjUw", "avatar_url": "https://avatars2.githubusercontent.com/u/26505250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lasalesi", "html_url": "https://github.com/lasalesi", "followers_url": "https://api.github.com/users/lasalesi/followers", "following_url": "https://api.github.com/users/lasalesi/following{/other_user}", "gists_url": "https://api.github.com/users/lasalesi/gists{/gist_id}", "starred_url": "https://api.github.com/users/lasalesi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lasalesi/subscriptions", "organizations_url": "https://api.github.com/users/lasalesi/orgs", "repos_url": "https://api.github.com/users/lasalesi/repos", "events_url": "https://api.github.com/users/lasalesi/events{/privacy}", "received_events_url": "https://api.github.com/users/lasalesi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-08T08:52:50Z", "updated_at": "2018-12-03T18:08:29Z", "closed_at": "2018-12-03T18:08:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI observed the following error:\r\n* XML: http://www.sepa-tool.de/files/Camt.053.xml\r\n\r\nCode:\r\n\r\n    import xmltodict\r\n    doc = xmltodict.parse(content)\r\n    iban = doc['Document']['BkToCstmrStmt']['Stmt']['Acct']['Id']['IBAN']\r\n    for entry in doc['Document']['BkToCstmrStmt']['Stmt']['Ntry']:\r\n        date = entry['BookgDt']['Dt']\r\n        for transaction in entry['NtryDtls']['TxDtls']:\r\n            unique_reference = transaction['Refs']['AcctSvcrRef']\r\n\r\nThis fails with the following traceback:\r\n\r\n    Traceback (most recent call last):\r\n      File \"/home/user/camt.py\", line 464, in read_camt053\r\n        unique_reference = transaction['Refs']['AcctSvcrRef']\r\n    TypeError: string indices must be integers\r\n\r\nIn some cases, several records are read fine before the error occurs. Looking at the underlying json seems to be all fine.\r\n\r\nIs this a bug or is something else wrong? Python is v2.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/185", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/185/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/185/events", "html_url": "https://github.com/martinblech/xmltodict/issues/185", "id": 333003067, "node_id": "MDU6SXNzdWUzMzMwMDMwNjc=", "number": 185, "title": "Problem with list with a single string vs list of chars", "user": {"login": "mtov", "id": 213200, "node_id": "MDQ6VXNlcjIxMzIwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/213200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtov", "html_url": "https://github.com/mtov", "followers_url": "https://api.github.com/users/mtov/followers", "following_url": "https://api.github.com/users/mtov/following{/other_user}", "gists_url": "https://api.github.com/users/mtov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtov/subscriptions", "organizations_url": "https://api.github.com/users/mtov/orgs", "repos_url": "https://api.github.com/users/mtov/repos", "events_url": "https://api.github.com/users/mtov/events{/privacy}", "received_events_url": "https://api.github.com/users/mtov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-16T17:41:41Z", "updated_at": "2018-07-21T00:02:38Z", "closed_at": "2018-07-21T00:01:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am parsing this document using xmltodict:\r\n\r\nhttps://dblp.uni-trier.de/pers/xx/m/Molinaro:Marco.xml\r\n\r\nUsually, since papers have multiple authors, the <author> tag is mapped to a Python list.\r\n\r\nHowever, in the mentioned document, there is one article (lines 131-143) that has a single author (line 132).\r\n\r\nIn this case, the author becomes a list of chars [M,a,r,c,o, ,M,o,l,i,n,a,r,o] instead of ['Marco Molinario'].\r\n\r\nIs this a bug? In other words, why single-author papers are not mapped to a list with a single string element?\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/184", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/184/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/184/events", "html_url": "https://github.com/martinblech/xmltodict/issues/184", "id": 330111170, "node_id": "MDU6SXNzdWUzMzAxMTExNzA=", "number": 184, "title": "json to xml with \"self-closing tags\"", "user": {"login": "Kamakshilk", "id": 35132452, "node_id": "MDQ6VXNlcjM1MTMyNDUy", "avatar_url": "https://avatars0.githubusercontent.com/u/35132452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kamakshilk", "html_url": "https://github.com/Kamakshilk", "followers_url": "https://api.github.com/users/Kamakshilk/followers", "following_url": "https://api.github.com/users/Kamakshilk/following{/other_user}", "gists_url": "https://api.github.com/users/Kamakshilk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kamakshilk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kamakshilk/subscriptions", "organizations_url": "https://api.github.com/users/Kamakshilk/orgs", "repos_url": "https://api.github.com/users/Kamakshilk/repos", "events_url": "https://api.github.com/users/Kamakshilk/events{/privacy}", "received_events_url": "https://api.github.com/users/Kamakshilk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-07T04:16:46Z", "updated_at": "2018-12-03T12:51:51Z", "closed_at": "2018-08-17T16:36:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi experts, \r\n Is there a way to convert from json to xml with self-closing tags.\r\nExample: My json is define as below \r\narr = [{\"@name\": \"transactionId\", \"@value\" : \"1234\", \"@type\": \"u32\"},\r\n       {\"@name\": \"numTransactions\", \"@value\" : \"1\", \"@type\":\"u32\"}]\r\n\r\nwith xmltodict.unparse(), the generated XML has these lines.\r\n<arr name=\"transactionId\" value=\"1234\" type=\"u32\"></arr>\r\n<arr name=\"numTransactions\" value=\"1\" type=\"u32\"></arr>\r\n\r\nBut I need the self-closing tags, like this\r\n<arr name=\"transactionId\" value=\"1234\" type=\"u32\"/>\r\n<arr name=\"numTransactions\" value=\"1\" type=\"u32\"/>\r\n\r\nLooking forward for experts suggestions\r\n\r\nregards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/182", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/182/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/182/events", "html_url": "https://github.com/martinblech/xmltodict/issues/182", "id": 321603422, "node_id": "MDU6SXNzdWUzMjE2MDM0MjI=", "number": 182, "title": "Child Order Not Maintained with Different Tags", "user": {"login": "mcrowson", "id": 6452882, "node_id": "MDQ6VXNlcjY0NTI4ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6452882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrowson", "html_url": "https://github.com/mcrowson", "followers_url": "https://api.github.com/users/mcrowson/followers", "following_url": "https://api.github.com/users/mcrowson/following{/other_user}", "gists_url": "https://api.github.com/users/mcrowson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrowson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrowson/subscriptions", "organizations_url": "https://api.github.com/users/mcrowson/orgs", "repos_url": "https://api.github.com/users/mcrowson/repos", "events_url": "https://api.github.com/users/mcrowson/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrowson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354977, "node_id": "MDU6TGFiZWwzMzU0OTc3", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-09T14:52:31Z", "updated_at": "2019-07-18T18:14:30Z", "closed_at": "2018-05-10T16:04:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "If there is a generic doc that has 4 elements, but one in the middle has a different tag name, that order is not persisted in the round trip\r\n\r\n```python\r\n>>> xml = \"\"\"<doc><el>1</el><el>2</el><el1>3</el1><el>4</el></doc>\"\"\"\r\n>>> d = xmltodict.parse(xml)\r\n>>> round_trip = xmltodict.unparse(d)\r\n>>> print(round_trip)\r\n'<doc><el>1</el><el>2</el><el>4</el><el1>3</el1></doc>'\r\n```\r\n\r\nAs you can see the el1 got moved to the end.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/179", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/179/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/179/events", "html_url": "https://github.com/martinblech/xmltodict/issues/179", "id": 302615719, "node_id": "MDU6SXNzdWUzMDI2MTU3MTk=", "number": 179, "title": "Booleans are unparsed uncorrectly", "user": {"login": "lgilz", "id": 16047062, "node_id": "MDQ6VXNlcjE2MDQ3MDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/16047062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgilz", "html_url": "https://github.com/lgilz", "followers_url": "https://api.github.com/users/lgilz/followers", "following_url": "https://api.github.com/users/lgilz/following{/other_user}", "gists_url": "https://api.github.com/users/lgilz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgilz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgilz/subscriptions", "organizations_url": "https://api.github.com/users/lgilz/orgs", "repos_url": "https://api.github.com/users/lgilz/repos", "events_url": "https://api.github.com/users/lgilz/events{/privacy}", "received_events_url": "https://api.github.com/users/lgilz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-06T09:03:26Z", "updated_at": "2018-03-23T00:13:54Z", "closed_at": "2018-03-23T00:13:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "when running\r\n```\r\nimport xmltodict\r\nxmltodict.unparse(dict(x=True))\r\n```\r\nthe output is \r\n`'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<x>True</x>'`\r\n\r\nAccording to the [XML Schema Specification](https://www.w3.org/TR/xmlschema-2/#boolean) the correct output should be \r\n`'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<x>true</x>'`\r\n\r\n The same goes for `False` -> `false`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/177", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/177/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/177/events", "html_url": "https://github.com/martinblech/xmltodict/issues/177", "id": 300592327, "node_id": "MDU6SXNzdWUzMDA1OTIzMjc=", "number": 177, "title": "No way to change indentation to spaces", "user": {"login": "guysoft", "id": 325670, "node_id": "MDQ6VXNlcjMyNTY3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/325670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guysoft", "html_url": "https://github.com/guysoft", "followers_url": "https://api.github.com/users/guysoft/followers", "following_url": "https://api.github.com/users/guysoft/following{/other_user}", "gists_url": "https://api.github.com/users/guysoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/guysoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guysoft/subscriptions", "organizations_url": "https://api.github.com/users/guysoft/orgs", "repos_url": "https://api.github.com/users/guysoft/repos", "events_url": "https://api.github.com/users/guysoft/events{/privacy}", "received_events_url": "https://api.github.com/users/guysoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-27T11:23:59Z", "updated_at": "2018-07-14T11:16:28Z", "closed_at": "2018-07-14T11:16:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\nTrying to read and write Jenkins jobs, but I can't preform a round trip without the indentation changing.\r\nJenkins uses 2 spaces and xmltodict.unparse only supports unparsing using tabs.\r\n\r\nExample:\r\n\r\n```\r\nimport xmltodict\r\na = \"\"\"<?xml version='1.0' encoding='UTF-8'?>\r\n<project>\r\n  <actions/>\r\n</project>\r\n\"\"\"\r\n\r\nprint(xmltodict.unparse(xmltodict.parse(a), None, 'UTF-8', True, True, pretty=True))\r\n```\r\n\r\nOutput is with tabs and not spaces", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/176", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/176/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/176/events", "html_url": "https://github.com/martinblech/xmltodict/issues/176", "id": 295792863, "node_id": "MDU6SXNzdWUyOTU3OTI4NjM=", "number": 176, "title": "unparse nested attributes", "user": {"login": "mpf82", "id": 10152404, "node_id": "MDQ6VXNlcjEwMTUyNDA0", "avatar_url": "https://avatars0.githubusercontent.com/u/10152404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpf82", "html_url": "https://github.com/mpf82", "followers_url": "https://api.github.com/users/mpf82/followers", "following_url": "https://api.github.com/users/mpf82/following{/other_user}", "gists_url": "https://api.github.com/users/mpf82/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpf82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpf82/subscriptions", "organizations_url": "https://api.github.com/users/mpf82/orgs", "repos_url": "https://api.github.com/users/mpf82/repos", "events_url": "https://api.github.com/users/mpf82/events{/privacy}", "received_events_url": "https://api.github.com/users/mpf82/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354977, "node_id": "MDU6TGFiZWwzMzU0OTc3", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-09T08:39:23Z", "updated_at": "2018-12-03T13:02:22Z", "closed_at": "2018-02-09T19:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I have:\r\n```\r\n{'item': [{'@n': 'LEVEL_1',\r\n           '@v': {'item': [{'@n': 'KEY_2', '@v': 'VAL_2', '@x': 0},\r\n                           {'@n': 'KEY_3', '@v': 'VAL_3', '@x': 0},\r\n                           {'@n': 'KEY_1', '@v': 'VAL_1', '@x': 0}]},\r\n           '@x': 1}]}\r\n```\r\n\r\nWhat I want:\r\n```\r\n<item\r\n    n=\"LEVEL_1\"\r\n    x=1\r\n    v=\"\r\n        <item n=\"KEY_1\" v=\"VAL_1\" x=0 />\r\n        <item n=\"KEY_2\" v=\"VAL_2\" x=0 />\r\n        <item n=\"KEY_3\" v=\"VAL_3\" x=0 />\r\n    \"\r\n/>\r\n```\r\nOf course the content of ``v=\"\"`` needs to be escaped. It does not need line breaks, they are just here for readability and I do not care about the order of the items.\r\n\r\nWhat ``xmltodict.unparse(xd, full_document=False)`` returns:\r\n\r\n``<item x=\"1\" v=\"{'item': [{'@x': 0, '@v': 'VAL_3', '@n': 'KEY_3'}, {'@x': 0, '@v': 'VAL_2', '@n': 'KEY_2'}, {'@x': 0, '@v': 'VAL_1', '@n': 'KEY_1'}]}\" n=\"LEVEL_1\"></item>``\r\n\r\nI tried to write my own preprocessor, but could not get any useful output.\r\n\r\nThe idea is to have deep nested structures within the attributes, that can be parsed as XML later.\r\n\r\nChanging the structure of the original input is also an option.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/175", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/175/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/175/events", "html_url": "https://github.com/martinblech/xmltodict/issues/175", "id": 293654538, "node_id": "MDU6SXNzdWUyOTM2NTQ1Mzg=", "number": 175, "title": "xmltodict mysteriously broke", "user": {"login": "siggib007", "id": 20001822, "node_id": "MDQ6VXNlcjIwMDAxODIy", "avatar_url": "https://avatars1.githubusercontent.com/u/20001822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siggib007", "html_url": "https://github.com/siggib007", "followers_url": "https://api.github.com/users/siggib007/followers", "following_url": "https://api.github.com/users/siggib007/following{/other_user}", "gists_url": "https://api.github.com/users/siggib007/gists{/gist_id}", "starred_url": "https://api.github.com/users/siggib007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siggib007/subscriptions", "organizations_url": "https://api.github.com/users/siggib007/orgs", "repos_url": "https://api.github.com/users/siggib007/repos", "events_url": "https://api.github.com/users/siggib007/events{/privacy}", "received_events_url": "https://api.github.com/users/siggib007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-01T19:29:16Z", "updated_at": "2018-02-03T00:23:48Z", "closed_at": "2018-02-01T20:15:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "What was working 30 min ago is no longer working. Now I'm getting this error in all my scripts\r\n  File \"\\python\\QualysHostDetection.py\", line 161, in MakeAPICall\r\n    dictResponse = xmltodict.parse(WebRequest.text)\r\n  File \"C:\\Users\\sbjarna\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\xmltodict.py\", line 330, in parse\r\n    parser.Parse(xml_input, True)\r\nxml.parsers.expat.ExpatError: syntax error: line 1, column 0\r\nExact same script and same XML that worked 30 min ago is now failing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/172", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/172/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/172/events", "html_url": "https://github.com/martinblech/xmltodict/issues/172", "id": 283302470, "node_id": "MDU6SXNzdWUyODMzMDI0NzA=", "number": 172, "title": "Attributes in streaming mode", "user": {"login": "dafvid", "id": 540592, "node_id": "MDQ6VXNlcjU0MDU5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/540592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafvid", "html_url": "https://github.com/dafvid", "followers_url": "https://api.github.com/users/dafvid/followers", "following_url": "https://api.github.com/users/dafvid/following{/other_user}", "gists_url": "https://api.github.com/users/dafvid/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafvid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafvid/subscriptions", "organizations_url": "https://api.github.com/users/dafvid/orgs", "repos_url": "https://api.github.com/users/dafvid/repos", "events_url": "https://api.github.com/users/dafvid/events{/privacy}", "received_events_url": "https://api.github.com/users/dafvid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-19T17:00:38Z", "updated_at": "2017-12-21T03:04:35Z", "closed_at": "2017-12-21T03:04:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to get the attributes of the items at the specified level. I found that changing the matching condition in startElement fixed the issue.\r\nInstead of\r\n`if len(self.path) > self.item_depth:`\r\nit's\r\n`if len(self.path) >= self.item_depth:`\r\n\r\nThen the attributes gets added to `self.item` and passed to the callback. Otherwise only the child items get attributes added. Is it possible to add this change?\r\nhttps://github.com/martinblech/xmltodict/blame/master/xmltodict.py#L105\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/171", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/171/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/171/events", "html_url": "https://github.com/martinblech/xmltodict/issues/171", "id": 280658351, "node_id": "MDU6SXNzdWUyODA2NTgzNTE=", "number": 171, "title": "Is there a list of the xmltodict method syntax?", "user": {"login": "spark706", "id": 27433514, "node_id": "MDQ6VXNlcjI3NDMzNTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/27433514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spark706", "html_url": "https://github.com/spark706", "followers_url": "https://api.github.com/users/spark706/followers", "following_url": "https://api.github.com/users/spark706/following{/other_user}", "gists_url": "https://api.github.com/users/spark706/gists{/gist_id}", "starred_url": "https://api.github.com/users/spark706/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spark706/subscriptions", "organizations_url": "https://api.github.com/users/spark706/orgs", "repos_url": "https://api.github.com/users/spark706/repos", "events_url": "https://api.github.com/users/spark706/events{/privacy}", "received_events_url": "https://api.github.com/users/spark706/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-09T00:44:04Z", "updated_at": "2017-12-28T01:36:33Z", "closed_at": "2017-12-28T01:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am learning Python to parse xml for calculations at work.  This tool is great, simple, and straight-forward.  So I was wondering if there is a list or cheat sheet somewhere that lists the syntax for xmltodict?  Due to my lack of terminology I am looking for what the various parts are that I can conceivably call to work with xmltodict.  Or is there even such a need, maybe the method call is pretty simple?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/167", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/167/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/167/events", "html_url": "https://github.com/martinblech/xmltodict/issues/167", "id": 257900703, "node_id": "MDU6SXNzdWUyNTc5MDA3MDM=", "number": 167, "title": "Response does not support the buffer interface", "user": {"login": "Hretic", "id": 2313132, "node_id": "MDQ6VXNlcjIzMTMxMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2313132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hretic", "html_url": "https://github.com/Hretic", "followers_url": "https://api.github.com/users/Hretic/followers", "following_url": "https://api.github.com/users/Hretic/following{/other_user}", "gists_url": "https://api.github.com/users/Hretic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hretic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hretic/subscriptions", "organizations_url": "https://api.github.com/users/Hretic/orgs", "repos_url": "https://api.github.com/users/Hretic/repos", "events_url": "https://api.github.com/users/Hretic/events{/privacy}", "received_events_url": "https://api.github.com/users/Hretic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-15T01:22:52Z", "updated_at": "2017-09-15T01:36:50Z", "closed_at": "2017-09-15T01:36:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "im trying to convert and xml which is send to me via API  i gt this error \r\n\r\nRequest Method: | GET\r\nTypeError\r\n'Response' does not support the buffer interface\r\nc:\\Python344\\lib\\site-packages\\xmltodict.py in parse, line 311\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/162", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/162/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/162/events", "html_url": "https://github.com/martinblech/xmltodict/issues/162", "id": 244903052, "node_id": "MDU6SXNzdWUyNDQ5MDMwNTI=", "number": 162, "title": "broken link in readme", "user": {"login": "uludag", "id": 617208, "node_id": "MDQ6VXNlcjYxNzIwOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/617208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uludag", "html_url": "https://github.com/uludag", "followers_url": "https://api.github.com/users/uludag/followers", "following_url": "https://api.github.com/users/uludag/following{/other_user}", "gists_url": "https://api.github.com/users/uludag/gists{/gist_id}", "starred_url": "https://api.github.com/users/uludag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uludag/subscriptions", "organizations_url": "https://api.github.com/users/uludag/orgs", "repos_url": "https://api.github.com/users/uludag/repos", "events_url": "https://api.github.com/users/uludag/events{/privacy}", "received_events_url": "https://api.github.com/users/uludag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-23T10:57:43Z", "updated_at": "2018-03-23T00:13:36Z", "closed_at": "2018-03-23T00:13:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Link (https://admin.fedoraproject.org/pkgdb/acls/name/python-xmltodict) given for \"official Fedora package for xmltodict\" looks broken.\r\n\r\n--mahmut\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/161", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/161/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/161/events", "html_url": "https://github.com/martinblech/xmltodict/issues/161", "id": 244151282, "node_id": "MDU6SXNzdWUyNDQxNTEyODI=", "number": 161, "title": "XML with multiple objects vs one object yields different results.", "user": {"login": "teewuane", "id": 535433, "node_id": "MDQ6VXNlcjUzNTQzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/535433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teewuane", "html_url": "https://github.com/teewuane", "followers_url": "https://api.github.com/users/teewuane/followers", "following_url": "https://api.github.com/users/teewuane/following{/other_user}", "gists_url": "https://api.github.com/users/teewuane/gists{/gist_id}", "starred_url": "https://api.github.com/users/teewuane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teewuane/subscriptions", "organizations_url": "https://api.github.com/users/teewuane/orgs", "repos_url": "https://api.github.com/users/teewuane/repos", "events_url": "https://api.github.com/users/teewuane/events{/privacy}", "received_events_url": "https://api.github.com/users/teewuane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-19T19:39:36Z", "updated_at": "2017-07-19T20:05:55Z", "closed_at": "2017-07-19T20:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "One of my queries to a web service returns multiple `Things` in XML.\r\n\r\n\t<ArrayOfVehicleMakes xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://ws.somedomain.com/\">\r\n\t\t<VehicleMakes>\r\n\t\t\t<VehicleMakeID>28</VehicleMakeID>\r\n\t\t\t<MakeValue>Ford</MakeValue>\r\n\t\t</VehicleMakes>\r\n\t\t<VehicleMakes>\r\n\t\t\t<VehicleMakeID>60</VehicleMakeID>\r\n\t\t\t<MakeValue>Nissan</MakeValue>\r\n\t\t</VehicleMakes>\r\n\t</ArrayOfVehicleMakes>\r\n\r\n\r\n`xmltodict.parse(multiple_VehicleMakes_xml)` yields...\r\n\r\n\tOrderedDict([\r\n\t\t(u'ArrayOfVehicleMakes', OrderedDict([\r\n\t\t\t(u'@xmlns:xsi', u'http://www.w3.org/2001/XMLSchema-instance'),\r\n\t\t\t(u'@xmlns:xsd', u'http://www.w3.org/2001/XMLSchema'),\r\n\t\t\t(u'@xmlns', u'http://ws.somedomain.com/'),\r\n\t\t\t(u'VehicleMakes', [\r\n\t\t\t\tOrderedDict([\r\n\t\t\t\t\t(u'VehicleMakeID', u'28'),\r\n\t\t\t\t\t(u'MakeValue', u'Ford')\r\n\t\t\t\t]),\r\n\t\t\t\tOrderedDict([\r\n\t\t\t\t\t(u'VehicleMakeID', u'60'),\r\n\t\t\t\t\t(u'MakeValue', u'Nissan')\r\n\t\t\t\t])\r\n\t\t\t])\r\n\t\t]))\r\n\t])\r\n\r\nNote that `VehicleMakes` is a list containing two OrderedDicts.\r\n\r\n\r\nAnother query returns only one `VehicleMakes` in XML.\r\n\r\n\t<ArrayOfVehicleMakes xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://ws.somedomain.com/\">\r\n\t\t<VehicleMakes>\r\n\t\t\t<VehicleMakeID>23</VehicleMakeID>\r\n\t\t\t<MakeValue>Dodge</MakeValue>\r\n\t\t</VehicleMakes>\r\n\t</ArrayOfVehicleMakes>\r\n\r\n`xmltodict.parse(one_VehicleMakes_xml)` yields...\r\n\r\n\tOrderedDict([\r\n\t\t(u'ArrayOfVehicleMakes', OrderedDict([\r\n\t\t\t(u'@xmlns:xsi', u'http://www.w3.org/2001/XMLSchema-instance'),\r\n\t\t\t(u'@xmlns:xsd', u'http://www.w3.org/2001/XMLSchema'),\r\n\t\t\t(u'@xmlns', u'http://ws.somedomain.com/'),\r\n\t\t\t(u'VehicleMakes', OrderedDict([\r\n\t\t\t\t(u'VehicleMakeID', u'23'),\r\n\t\t\t\t(u'MakeValue', u'Dodge')\r\n\t\t\t]))\r\n\t\t]))\r\n\t])\r\n\r\nNote that `VehicleMakes` here is an individual OrderedDict.\r\n\r\nI suppose I can check to see what the value of `VehicleMakes` is (list or ordered dict) and act accordingly but I've never run into this before where one way it goes list and one way it goes ordered dict.\r\n\r\nDoes it have to do with the name `VehicleMakes`? Because it is plural?\r\n\r\nI don't have control over the name of `VehicleMakes`, a VehicleMakes represents a single object. I know, it's annoying.\r\n\r\nIs this by design and something I need to be working around in my code, or is it not intended?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/160", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/160/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/160/events", "html_url": "https://github.com/martinblech/xmltodict/issues/160", "id": 243969396, "node_id": "MDU6SXNzdWUyNDM5NjkzOTY=", "number": 160, "title": "nested tag issue, beyond scope of library?", "user": {"login": "svenevs", "id": 5871461, "node_id": "MDQ6VXNlcjU4NzE0NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5871461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenevs", "html_url": "https://github.com/svenevs", "followers_url": "https://api.github.com/users/svenevs/followers", "following_url": "https://api.github.com/users/svenevs/following{/other_user}", "gists_url": "https://api.github.com/users/svenevs/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenevs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenevs/subscriptions", "organizations_url": "https://api.github.com/users/svenevs/orgs", "repos_url": "https://api.github.com/users/svenevs/repos", "events_url": "https://api.github.com/users/svenevs/events{/privacy}", "received_events_url": "https://api.github.com/users/svenevs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-19T08:58:07Z", "updated_at": "2018-12-03T13:22:13Z", "closed_at": "2017-07-19T19:06:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having a hard time understanding why the output I am getting is formatted the way it is.\r\n\r\n## Admonition\r\n\r\nI think this may be \"beyond\" the scope of capabilities of this library.  I don't know much about the formal `xml` standards, but I suspect that the tags parsed correctly such as `para` or `orderedlist` are standardized where as the breaking ones (e.g. `computeroutput`) are not?\r\n\r\nI don't think the application purpose is relevant, but I'm playing around with the doxygen xml output.  These tags are defined in a `compound.xsd` document I can include if desired, but some correctly parsed (`orderedlist`) tags are defined in this -- AKA I'm not sure if this is a bug or unsupported feature.\r\n\r\n## Breaking input\r\n\r\n```py\r\n#!/usr/bin/env python3\r\nimport textwrap\r\nimport xmltodict\r\nimport json\r\n\r\nraw_xml = textwrap.dedent('''\r\n<detaileddescription>\r\n    <para>\r\n        There <computeroutput>once</computeroutput> was a lad who wanted to accomplish things.\r\n    </para>\r\n    <para>\r\n        <orderedlist>\r\n            <listitem><para>He did stuff. There was nothing else he could do.</para></listitem>\r\n            <listitem><para>He enumerated stuff.</para></listitem>\r\n            <listitem><para>He listed stuff. </para></listitem>\r\n        </orderedlist>\r\n    </para>\r\n</detaileddescription>\r\n''')\r\n\r\nxml_dict = xmltodict.parse(raw_xml)\r\nprint(json.dumps(xml_dict, indent=4))\r\n\r\nprint(\"*\" * 77)\r\n\r\nprint(xmltodict.unparse(xml_dict, pretty=True))\r\n```\r\n\r\n### Output json\r\n\r\n```json\r\n{\r\n    \"detaileddescription\": {\r\n        \"para\": [\r\n            {\r\n                \"computeroutput\": \"once\",\r\n                \"#text\": \"There  was a lad who wanted to accomplish things.\"\r\n            },\r\n            {\r\n                \"orderedlist\": {\r\n                    \"listitem\": [\r\n                        {\r\n                            \"para\": \"He did stuff. There was nothing else he could do.\"\r\n                        },\r\n                        {\r\n                            \"para\": \"He enumerated stuff.\"\r\n                        },\r\n                        {\r\n                            \"para\": \"He listed stuff.\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n### Output xml\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<detaileddescription>\r\n\t<para>\r\n\t\t<computeroutput>once</computeroutput>\r\nThere  was a lad who wanted to accomplish things.\t</para>\r\n\t<para>\r\n\t\t<orderedlist>\r\n\t\t\t<listitem>\r\n\t\t\t\t<para>He did stuff. There was nothing else he could do.</para>\r\n\t\t\t</listitem>\r\n\t\t\t<listitem>\r\n\t\t\t\t<para>He enumerated stuff.</para>\r\n\t\t\t</listitem>\r\n\t\t\t<listitem>\r\n\t\t\t\t<para>He listed stuff.</para>\r\n\t\t\t</listitem>\r\n\t\t</orderedlist>\r\n\t</para>\r\n</detaileddescription>\r\n```\r\n\r\nWhat leads the `computeroutput` tag to behave this way?  If you think it's easy to patch I'm down to take a look with some guidance, I **love** being able to parse xml dictionary style :smile:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/159", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/159/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/159/events", "html_url": "https://github.com/martinblech/xmltodict/issues/159", "id": 230015532, "node_id": "MDU6SXNzdWUyMzAwMTU1MzI=", "number": 159, "title": "Custom XML entities are coming out as None, as of 0.11", "user": {"login": "rspeer", "id": 234227, "node_id": "MDQ6VXNlcjIzNDIyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/234227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspeer", "html_url": "https://github.com/rspeer", "followers_url": "https://api.github.com/users/rspeer/followers", "following_url": "https://api.github.com/users/rspeer/following{/other_user}", "gists_url": "https://api.github.com/users/rspeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspeer/subscriptions", "organizations_url": "https://api.github.com/users/rspeer/orgs", "repos_url": "https://api.github.com/users/rspeer/repos", "events_url": "https://api.github.com/users/rspeer/events{/privacy}", "received_events_url": "https://api.github.com/users/rspeer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-19T15:50:02Z", "updated_at": "2017-05-19T22:14:45Z", "closed_at": "2017-05-19T21:35:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use xmltodict to parse a rather complex XML file, the \"JMdict\" Japanese dictionary. The file defines a large number of custom entities, as shorthand for categories such as parts of speech.\r\n\r\nI was previously using xmltodict 0.10.2 to parse the file, and it worked correctly. But now, the entities are coming out with values of None.\r\n\r\nTo reproduce:\r\n\r\n- Download JMdict from http://ftp.monash.edu.au/pub/nihongo/JMdict.gz\r\n- Extract the file and rename its extracted content to \"JMdict.xml\"\r\n- Run this Python code (I'm running it in an IPython 5.1 shell on Python 3.5.3):\r\n\r\n```python\r\n>>> import xmltodict\r\n>>> data = open('JMdict.xml').read()\r\n>>> xml = xmltodict.parse(data)\r\n>>> entry = xml['JMdict']['entry'][0]\r\n>>> entry\r\n\r\nOrderedDict([('ent_seq', '1000000'),\r\n             ('r_ele',\r\n              [OrderedDict([('reb', '\u30fd')]), OrderedDict([('reb', '\u304f\u308a\u304b\u3048\u3057')])]),\r\n             ('sense',\r\n              OrderedDict([('pos', None),\r\n                           ('gloss',\r\n                            [OrderedDict([('@xml:lang', 'eng'),\r\n                                          ('#text',\r\n                                           'repetition mark in katakana')]),\r\n                             OrderedDict([('@xml:lang', 'ita'),\r\n                                          ('#text',\r\n                                           'simbolo di ripetizione in katakana')])])]))])\r\n```\r\n\r\nThe entry being parsed looks like this:\r\n\r\n```xml\r\n<entry>\r\n<ent_seq>1000000</ent_seq>\r\n<r_ele>\r\n<reb>\u30fd</reb>\r\n</r_ele>\r\n<r_ele>\r\n<reb>\u304f\u308a\u304b\u3048\u3057</reb>\r\n</r_ele>\r\n<sense>\r\n<pos>&n;</pos>\r\n<gloss>repetition mark in katakana</gloss>\r\n<gloss xml:lang=\"ger\">(n) Wiederholung</gloss>\r\n<gloss xml:lang=\"ger\">Refrain</gloss>\r\n</sense>\r\n</entry>\r\n```\r\n\r\nNote that the value `&n;` came out as `None`. It used to come out as the string \"noun (common) (futsuumeishi)\", because line 306 contains:\r\n\r\n```xml\r\n<!ENTITY n \"noun (common) (futsuumeishi)\">\r\n```\r\n\r\nI'm working around this for now by downgrading to 0.10.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/156", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/156/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/156/events", "html_url": "https://github.com/martinblech/xmltodict/issues/156", "id": 226130944, "node_id": "MDU6SXNzdWUyMjYxMzA5NDQ=", "number": 156, "title": "Can XMLtoDict Parse Multiple XML Files into a Single Dictionary?", "user": {"login": "mago3421", "id": 19937941, "node_id": "MDQ6VXNlcjE5OTM3OTQx", "avatar_url": "https://avatars1.githubusercontent.com/u/19937941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mago3421", "html_url": "https://github.com/mago3421", "followers_url": "https://api.github.com/users/mago3421/followers", "following_url": "https://api.github.com/users/mago3421/following{/other_user}", "gists_url": "https://api.github.com/users/mago3421/gists{/gist_id}", "starred_url": "https://api.github.com/users/mago3421/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mago3421/subscriptions", "organizations_url": "https://api.github.com/users/mago3421/orgs", "repos_url": "https://api.github.com/users/mago3421/repos", "events_url": "https://api.github.com/users/mago3421/events{/privacy}", "received_events_url": "https://api.github.com/users/mago3421/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354976, "node_id": "MDU6TGFiZWwzMzU0OTc2", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T22:17:48Z", "updated_at": "2017-05-08T18:21:03Z", "closed_at": "2017-05-08T18:21:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Martin,\r\n\r\nGreat library, thanks for creating it. I am using it to read in MAVlink message definitions (from ArduPilot) from an XML file into a single dictionary. However, because of the nature of ArduPilot, there are extra messages defined in other XML files. I've thought about manually combining the XML files but I would like to be able to add files as I go rather than maintain a 'master' file.\r\n\r\nDid you have plans to extend support for parsing multiple XML files into a single dictionary? Is this already supported, if so how?\r\n\r\nMuch thanks! - Marc", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/155", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/155/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/155/events", "html_url": "https://github.com/martinblech/xmltodict/issues/155", "id": 225150875, "node_id": "MDU6SXNzdWUyMjUxNTA4NzU=", "number": 155, "title": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "user": {"login": "coodec", "id": 15266775, "node_id": "MDQ6VXNlcjE1MjY2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/15266775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coodec", "html_url": "https://github.com/coodec", "followers_url": "https://api.github.com/users/coodec/followers", "following_url": "https://api.github.com/users/coodec/following{/other_user}", "gists_url": "https://api.github.com/users/coodec/gists{/gist_id}", "starred_url": "https://api.github.com/users/coodec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coodec/subscriptions", "organizations_url": "https://api.github.com/users/coodec/orgs", "repos_url": "https://api.github.com/users/coodec/repos", "events_url": "https://api.github.com/users/coodec/events{/privacy}", "received_events_url": "https://api.github.com/users/coodec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-28T17:58:22Z", "updated_at": "2017-05-08T19:38:14Z", "closed_at": "2017-05-08T19:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, there is any way to get this declaration instead of the standard one.\r\n\r\nThanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/154", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/154/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/154/events", "html_url": "https://github.com/martinblech/xmltodict/issues/154", "id": 224063345, "node_id": "MDU6SXNzdWUyMjQwNjMzNDU=", "number": 154, "title": "xml.parsers.expat.ExpatError: not well-formed (invalid token)", "user": {"login": "mikusjelly", "id": 2801072, "node_id": "MDQ6VXNlcjI4MDEwNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2801072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikusjelly", "html_url": "https://github.com/mikusjelly", "followers_url": "https://api.github.com/users/mikusjelly/followers", "following_url": "https://api.github.com/users/mikusjelly/following{/other_user}", "gists_url": "https://api.github.com/users/mikusjelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikusjelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikusjelly/subscriptions", "organizations_url": "https://api.github.com/users/mikusjelly/orgs", "repos_url": "https://api.github.com/users/mikusjelly/repos", "events_url": "https://api.github.com/users/mikusjelly/events{/privacy}", "received_events_url": "https://api.github.com/users/mikusjelly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-25T08:40:56Z", "updated_at": "2017-05-04T01:48:54Z", "closed_at": "2017-04-27T19:03:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```xml \r\n        <service\r\n            android:name=\"o.\ufeae\"\r\n            BAD_STRING=\"true\">\r\n        </service>\r\n        <service\r\n            android:name=\"o.\u0135\"\r\n            BAD_STRING=\"true\">\r\n        </service>\r\n        <service\r\n            android:name=\"o.\u0e46\"\r\n            BAD_STRING=\"true\">\r\n        </service>\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\xmltodict.py\", line 309, in parse\r\n    parser.ParseFile(xml_input)\r\nTypeError: argument must have 'read' attribute\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n...\r\n  File \"C:\\Anaconda3\\lib\\site-packages\\xmltodict.py\", line 311, in parse\r\n    parser.Parse(xml_input, True)\r\nxml.parsers.expat.ExpatError: not well-formed (invalid token): line 260, column 0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/153", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/153/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/153/events", "html_url": "https://github.com/martinblech/xmltodict/issues/153", "id": 220644703, "node_id": "MDU6SXNzdWUyMjA2NDQ3MDM=", "number": 153, "title": "Dont blindly catch TypeError/AttributeError when parsing", "user": {"login": "orf", "id": 1027207, "node_id": "MDQ6VXNlcjEwMjcyMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1027207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orf", "html_url": "https://github.com/orf", "followers_url": "https://api.github.com/users/orf/followers", "following_url": "https://api.github.com/users/orf/following{/other_user}", "gists_url": "https://api.github.com/users/orf/gists{/gist_id}", "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orf/subscriptions", "organizations_url": "https://api.github.com/users/orf/orgs", "repos_url": "https://api.github.com/users/orf/repos", "events_url": "https://api.github.com/users/orf/events{/privacy}", "received_events_url": "https://api.github.com/users/orf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-10T13:29:25Z", "updated_at": "2017-04-27T18:41:40Z", "closed_at": "2017-04-27T18:41:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the library uses this code:\r\n\r\n```python\r\n    parser.buffer_text = True\r\n    try:\r\n        parser.ParseFile(xml_input)\r\n    except (TypeError, AttributeError):\r\n        parser.Parse(xml_input, True)\r\n```\r\n\r\nThis is not great if you use callbacks which can raise a TypeError or AttributeError. In this case the original exception is swallowed and another unrelated one is raised (due to the `Parse` call).\r\n\r\nEdit: #150 seems to fix this. Please can this be merged?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/151", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/151/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/151/events", "html_url": "https://github.com/martinblech/xmltodict/issues/151", "id": 216451670, "node_id": "MDU6SXNzdWUyMTY0NTE2NzA=", "number": 151, "title": "Please make new release", "user": {"login": "peterdemin", "id": 1448666, "node_id": "MDQ6VXNlcjE0NDg2NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1448666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterdemin", "html_url": "https://github.com/peterdemin", "followers_url": "https://api.github.com/users/peterdemin/followers", "following_url": "https://api.github.com/users/peterdemin/following{/other_user}", "gists_url": "https://api.github.com/users/peterdemin/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterdemin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterdemin/subscriptions", "organizations_url": "https://api.github.com/users/peterdemin/orgs", "repos_url": "https://api.github.com/users/peterdemin/repos", "events_url": "https://api.github.com/users/peterdemin/events{/privacy}", "received_events_url": "https://api.github.com/users/peterdemin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-23T14:39:27Z", "updated_at": "2017-04-27T19:01:08Z", "closed_at": "2017-04-27T19:01:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I need `short_empty_elements` in `unparse` badly, could you please make a new release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/149", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/149/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/149/events", "html_url": "https://github.com/martinblech/xmltodict/issues/149", "id": 206441126, "node_id": "MDU6SXNzdWUyMDY0NDExMjY=", "number": 149, "title": "Document must have exactly one root?", "user": {"login": "virsystem", "id": 22690648, "node_id": "MDQ6VXNlcjIyNjkwNjQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/22690648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/virsystem", "html_url": "https://github.com/virsystem", "followers_url": "https://api.github.com/users/virsystem/followers", "following_url": "https://api.github.com/users/virsystem/following{/other_user}", "gists_url": "https://api.github.com/users/virsystem/gists{/gist_id}", "starred_url": "https://api.github.com/users/virsystem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/virsystem/subscriptions", "organizations_url": "https://api.github.com/users/virsystem/orgs", "repos_url": "https://api.github.com/users/virsystem/repos", "events_url": "https://api.github.com/users/virsystem/events{/privacy}", "received_events_url": "https://api.github.com/users/virsystem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-09T08:54:12Z", "updated_at": "2017-02-25T19:24:23Z", "closed_at": "2017-02-25T19:24:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I miss?\r\n\r\n>>> type(DEFAULT_CONFIG)\r\n<class 'dict'>\r\n>>> print(DEFAULT_CONFIG)\r\n{'encoding ': 'utf-8', 'header': {'Content-Type': 'type=\"text/xml\"'}}\r\n>>>\r\n>>> print(xmltodict.unparse(DEFAULT_CONFIG))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\python35\\lib\\site-packages\\xmltodict.py\", line 390, in unparse\r\n    raise ValueError('Document must have exactly one root.')\r\nValueError: Document must have exactly one root.\r\n>>> print(xmltodict.unparse(DEFAULT_CONFIG),pretty=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\python35\\lib\\site-packages\\xmltodict.py\", line 390, in unparse\r\n    raise ValueError('Document must have exactly one root.')\r\nValueError: Document must have exactly one root.\r\n\r\n>>> xmltodict.__version__\r\n'0.10.2'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/145", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/145/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/145/events", "html_url": "https://github.com/martinblech/xmltodict/issues/145", "id": 192825300, "node_id": "MDU6SXNzdWUxOTI4MjUzMDA=", "number": 145, "title": "Question concerning stable order of sequence elements when converted to json lists", "user": {"login": "timmwagener", "id": 2694225, "node_id": "MDQ6VXNlcjI2OTQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2694225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timmwagener", "html_url": "https://github.com/timmwagener", "followers_url": "https://api.github.com/users/timmwagener/followers", "following_url": "https://api.github.com/users/timmwagener/following{/other_user}", "gists_url": "https://api.github.com/users/timmwagener/gists{/gist_id}", "starred_url": "https://api.github.com/users/timmwagener/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timmwagener/subscriptions", "organizations_url": "https://api.github.com/users/timmwagener/orgs", "repos_url": "https://api.github.com/users/timmwagener/repos", "events_url": "https://api.github.com/users/timmwagener/events{/privacy}", "received_events_url": "https://api.github.com/users/timmwagener/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-01T11:51:38Z", "updated_at": "2016-12-02T00:01:58Z", "closed_at": "2016-12-02T00:01:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello @martinblech ,\r\nI have a quick question concerning the order of xml ``sequence`` elements, when converted to ``json``. \r\nIn short: *Is it stable in any way?*\r\nThis kind of stability for sequences might be a concern when *diffing* several ``json`` datasets for example with [jsondiff](https://pypi.python.org/pypi/jsondiff)\r\n\r\n#### Example data:\r\n----\r\n```xml\r\n<ValueGroup attribute_a=\"some_value\">\r\n      <Value attribute_b=\"1\"/>\r\n      <Value attribute_b=\"2\"/>\r\n      <Value attribute_b=\"3\"/>\r\n</ValueGroup>\r\n```\r\nA guaranteed, stable result in an ideal world would be:\r\n```json\r\n{\r\n    \"ValueGroup\": {\r\n        \"@attribute_a\": \"some_value\", \r\n        \"Value\": [\r\n            {\r\n                \"@attribute_b\": \"1\"\r\n            }, \r\n            {\r\n                \"@attribute_b\": \"2\"\r\n            }, \r\n            {\r\n                \"@attribute_b\": \"3\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\nUnstable would be like:\r\n```json\r\n...\r\n{\r\n    \"@attribute_b\": \"2\"\r\n},\r\n{\r\n    \"@attribute_b\": \"1\"\r\n},\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/144", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/144/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/144/events", "html_url": "https://github.com/martinblech/xmltodict/issues/144", "id": 192312642, "node_id": "MDU6SXNzdWUxOTIzMTI2NDI=", "number": 144, "title": "Feature request: better output for plural container/repeating children pattern", "user": {"login": "eml-trm", "id": 9491295, "node_id": "MDQ6VXNlcjk0OTEyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9491295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eml-trm", "html_url": "https://github.com/eml-trm", "followers_url": "https://api.github.com/users/eml-trm/followers", "following_url": "https://api.github.com/users/eml-trm/following{/other_user}", "gists_url": "https://api.github.com/users/eml-trm/gists{/gist_id}", "starred_url": "https://api.github.com/users/eml-trm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eml-trm/subscriptions", "organizations_url": "https://api.github.com/users/eml-trm/orgs", "repos_url": "https://api.github.com/users/eml-trm/repos", "events_url": "https://api.github.com/users/eml-trm/events{/privacy}", "received_events_url": "https://api.github.com/users/eml-trm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354977, "node_id": "MDU6TGFiZWwzMzU0OTc3", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-29T15:28:58Z", "updated_at": "2017-05-08T18:26:24Z", "closed_at": "2017-05-08T18:24:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nIt is a common pattern in XML to have a container element in the plural form for repeating element (lists, etc) like this :\r\n```xml\r\n<root>\r\n   <documents>\r\n\t<document>\r\n\t\t<texte>word1</texte>\r\n\t</document>\r\n\t<document>\r\n\t\t<texte>word2</texte>\r\n\t</document>\r\n   </documents>\r\n</root>\r\n```\r\n\r\nI noticed that then xmltodict output a dictionary with  one child as key. In the end we have  twice the \"same\" conceptual node. like this  : \r\n\r\n```json\r\n{\r\n    \"documents\": {\r\n        \"document\": [\r\n            {\r\n                \"texte\": \"word1\"\r\n            },\r\n\t    {\r\n\t\t\"texte\": \"word2\"\r\n\t    }\r\n         ]\r\n    }\r\n}\r\n```\r\nI am aware that there could be two different elements repeated as children of the container but when it is not the case  I would like to have an option to output something like this \r\n\r\n```json\r\n{\r\n     \"document\": [\r\n         {\r\n              \"texte\": \"word1\"\r\n         },\r\n         {\r\n\t      \"texte\": \"word2\"\r\n\t }\r\n     ]\r\n}\r\n```\r\n\r\nThis option would produce such an output only when there is only one repeated element name children of the container element.\r\n\r\nWhat is your opinion on this ? would you accept a pull request in that direction (with an option that default to the current behavior of course) ? Would it be easy for you to point us to the part of the code managing repetition (array creation) ?\r\n\r\nThanks a lot for your time.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/143", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/143/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/143/events", "html_url": "https://github.com/martinblech/xmltodict/issues/143", "id": 188217774, "node_id": "MDU6SXNzdWUxODgyMTc3NzQ=", "number": 143, "title": "Force array during conversion to json", "user": {"login": "umbidel", "id": 19935860, "node_id": "MDQ6VXNlcjE5OTM1ODYw", "avatar_url": "https://avatars3.githubusercontent.com/u/19935860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umbidel", "html_url": "https://github.com/umbidel", "followers_url": "https://api.github.com/users/umbidel/followers", "following_url": "https://api.github.com/users/umbidel/following{/other_user}", "gists_url": "https://api.github.com/users/umbidel/gists{/gist_id}", "starred_url": "https://api.github.com/users/umbidel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umbidel/subscriptions", "organizations_url": "https://api.github.com/users/umbidel/orgs", "repos_url": "https://api.github.com/users/umbidel/repos", "events_url": "https://api.github.com/users/umbidel/events{/privacy}", "received_events_url": "https://api.github.com/users/umbidel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-09T10:52:21Z", "updated_at": "2016-12-02T00:05:00Z", "closed_at": "2016-12-02T00:05:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to force the conversion to a json array by adding a custom attribute to the original xml?\r\n\r\nI am not a python expert but the .NET library Json.NET uses the xml attribute json:Array=\"True\".\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/141", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/141/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/141/events", "html_url": "https://github.com/martinblech/xmltodict/issues/141", "id": 183941932, "node_id": "MDU6SXNzdWUxODM5NDE5MzI=", "number": 141, "title": "very slow for very hierarchical XML document", "user": {"login": "murdav", "id": 1561285, "node_id": "MDQ6VXNlcjE1NjEyODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1561285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murdav", "html_url": "https://github.com/murdav", "followers_url": "https://api.github.com/users/murdav/followers", "following_url": "https://api.github.com/users/murdav/following{/other_user}", "gists_url": "https://api.github.com/users/murdav/gists{/gist_id}", "starred_url": "https://api.github.com/users/murdav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murdav/subscriptions", "organizations_url": "https://api.github.com/users/murdav/orgs", "repos_url": "https://api.github.com/users/murdav/repos", "events_url": "https://api.github.com/users/murdav/events{/privacy}", "received_events_url": "https://api.github.com/users/murdav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-19T11:59:58Z", "updated_at": "2016-10-19T13:10:40Z", "closed_at": "2016-10-19T13:10:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please remove this issue.\nIt's not inherent to xmltodict!\n\nD\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/139", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/139/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/139/events", "html_url": "https://github.com/martinblech/xmltodict/issues/139", "id": 180058091, "node_id": "MDU6SXNzdWUxODAwNTgwOTE=", "number": 139, "title": "ValueError: need more than 0 values to unpack - Incompatible with Python 2.7 ?", "user": {"login": "steftux", "id": 2699270, "node_id": "MDQ6VXNlcjI2OTkyNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2699270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steftux", "html_url": "https://github.com/steftux", "followers_url": "https://api.github.com/users/steftux/followers", "following_url": "https://api.github.com/users/steftux/following{/other_user}", "gists_url": "https://api.github.com/users/steftux/gists{/gist_id}", "starred_url": "https://api.github.com/users/steftux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steftux/subscriptions", "organizations_url": "https://api.github.com/users/steftux/orgs", "repos_url": "https://api.github.com/users/steftux/repos", "events_url": "https://api.github.com/users/steftux/events{/privacy}", "received_events_url": "https://api.github.com/users/steftux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-29T14:02:55Z", "updated_at": "2016-10-04T08:54:12Z", "closed_at": "2016-10-04T08:54:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Loading module: ....\\main\\py\\xmltodict.py\nTraceback (most recent call last):\n ...\n  File \"....\\main\\py\\xmltodict.py\", line 421, in <module>\n    (item_depth,) = sys.argv[1:]\nValueError: need more than 0 values to unpack\n\nAny ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/138", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/138/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/138/events", "html_url": "https://github.com/martinblech/xmltodict/issues/138", "id": 179327010, "node_id": "MDU6SXNzdWUxNzkzMjcwMTA=", "number": 138, "title": "n env list", "user": {"login": "ghaddad-bam", "id": 20778968, "node_id": "MDQ6VXNlcjIwNzc4OTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/20778968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghaddad-bam", "html_url": "https://github.com/ghaddad-bam", "followers_url": "https://api.github.com/users/ghaddad-bam/followers", "following_url": "https://api.github.com/users/ghaddad-bam/following{/other_user}", "gists_url": "https://api.github.com/users/ghaddad-bam/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghaddad-bam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghaddad-bam/subscriptions", "organizations_url": "https://api.github.com/users/ghaddad-bam/orgs", "repos_url": "https://api.github.com/users/ghaddad-bam/repos", "events_url": "https://api.github.com/users/ghaddad-bam/events{/privacy}", "received_events_url": "https://api.github.com/users/ghaddad-bam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-26T20:19:30Z", "updated_at": "2016-10-26T04:34:34Z", "closed_at": "2016-10-26T04:34:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/137", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/137/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/137/events", "html_url": "https://github.com/martinblech/xmltodict/issues/137", "id": 173960365, "node_id": "MDU6SXNzdWUxNzM5NjAzNjU=", "number": 137, "title": "xmltodict is not able to parse \"%\" character", "user": {"login": "omps", "id": 985481, "node_id": "MDQ6VXNlcjk4NTQ4MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/985481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omps", "html_url": "https://github.com/omps", "followers_url": "https://api.github.com/users/omps/followers", "following_url": "https://api.github.com/users/omps/following{/other_user}", "gists_url": "https://api.github.com/users/omps/gists{/gist_id}", "starred_url": "https://api.github.com/users/omps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omps/subscriptions", "organizations_url": "https://api.github.com/users/omps/orgs", "repos_url": "https://api.github.com/users/omps/repos", "events_url": "https://api.github.com/users/omps/events{/privacy}", "received_events_url": "https://api.github.com/users/omps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-30T08:35:19Z", "updated_at": "2016-08-30T10:53:59Z", "closed_at": "2016-08-30T10:44:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to parse a xml file, which on some lines are using \"%\" in the string, the xmltodict.parse is just failing to trnaslate this. any suggestions.\n\nSample string\n\n```\n<iedit src='${APP_SRC_DIR}/somescript.sh' dst='${APP_DIST}/AppDB/${version}/bin/initAppDBC\\\nommon.sh' search='%SEARCH_STRING%' replace='${VARIABLE}'/>\n```\n\nBelow is the error while i am running the parser.\n\n> Traceback (most recent call last):\n>   File \"./xmlparser\", line 58, in <module>\n>     doc = xmltodict.parse(xmlstring)\n>   File \"$HOME/projects/xmlparser/lib/python2.7/site-packages/xmltodict.py\", line 311, in parse\n>     parser.Parse(xml_input, True)\n> xml.parsers.expat.ExpatError: not well-formed (invalid token): line 781, column 143\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/133", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/133/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/133/events", "html_url": "https://github.com/martinblech/xmltodict/issues/133", "id": 163800681, "node_id": "MDU6SXNzdWUxNjM4MDA2ODE=", "number": 133, "title": "Xmltodict Structure - print", "user": {"login": "MortalCatalyst", "id": 432261, "node_id": "MDQ6VXNlcjQzMjI2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/432261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MortalCatalyst", "html_url": "https://github.com/MortalCatalyst", "followers_url": "https://api.github.com/users/MortalCatalyst/followers", "following_url": "https://api.github.com/users/MortalCatalyst/following{/other_user}", "gists_url": "https://api.github.com/users/MortalCatalyst/gists{/gist_id}", "starred_url": "https://api.github.com/users/MortalCatalyst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MortalCatalyst/subscriptions", "organizations_url": "https://api.github.com/users/MortalCatalyst/orgs", "repos_url": "https://api.github.com/users/MortalCatalyst/repos", "events_url": "https://api.github.com/users/MortalCatalyst/events{/privacy}", "received_events_url": "https://api.github.com/users/MortalCatalyst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354976, "node_id": "MDU6TGFiZWwzMzU0OTc2", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-05T08:49:35Z", "updated_at": "2016-07-06T12:34:41Z", "closed_at": "2016-07-05T20:14:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to get xmltodict to show the structure of the document as it is converted as a base skeleton? \n\nI have a highly nested xml doc with many attributes at each level and it's taking a lot of trial and error to match dict & list levels. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/129", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/129/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/129/events", "html_url": "https://github.com/martinblech/xmltodict/issues/129", "id": 153681718, "node_id": "MDU6SXNzdWUxNTM2ODE3MTg=", "number": 129, "title": "Force all elements to dict?", "user": {"login": "variable", "id": 558175, "node_id": "MDQ6VXNlcjU1ODE3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/558175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/variable", "html_url": "https://github.com/variable", "followers_url": "https://api.github.com/users/variable/followers", "following_url": "https://api.github.com/users/variable/following{/other_user}", "gists_url": "https://api.github.com/users/variable/gists{/gist_id}", "starred_url": "https://api.github.com/users/variable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/variable/subscriptions", "organizations_url": "https://api.github.com/users/variable/orgs", "repos_url": "https://api.github.com/users/variable/repos", "events_url": "https://api.github.com/users/variable/events{/privacy}", "received_events_url": "https://api.github.com/users/variable/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-08T22:45:50Z", "updated_at": "2016-05-13T01:45:48Z", "closed_at": "2016-05-12T21:29:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there just wondering if it's possible to force the conversion to dicts even for simple elements,\n\neg.\n\n```\n<root>\n   <item>ABC</item>\n   <item visible=\"true\">BBB</item>\n</root>\n```\n\nwill give:\n\n`{u'root': {u'item': [u'ABC', {'#text': u'BBB', u'@visible': u'true'}]}}`\n\ncan I force the `item` element without attribute to be converted into dict as well? like:\n\n`\n{u'root': {u'item': [{'#text': u'ABC'}, {'#text': u'BBB', u'@visible': u'true'}]}}\n`\nthis helps a lot without doing if is dict instance etc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/126", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/126/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/126/events", "html_url": "https://github.com/martinblech/xmltodict/issues/126", "id": 141379169, "node_id": "MDU6SXNzdWUxNDEzNzkxNjk=", "number": 126, "title": "Is there a way to avoid stripping whitespace?", "user": {"login": "chriskessel", "id": 1497470, "node_id": "MDQ6VXNlcjE0OTc0NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1497470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriskessel", "html_url": "https://github.com/chriskessel", "followers_url": "https://api.github.com/users/chriskessel/followers", "following_url": "https://api.github.com/users/chriskessel/following{/other_user}", "gists_url": "https://api.github.com/users/chriskessel/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriskessel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriskessel/subscriptions", "organizations_url": "https://api.github.com/users/chriskessel/orgs", "repos_url": "https://api.github.com/users/chriskessel/repos", "events_url": "https://api.github.com/users/chriskessel/events{/privacy}", "received_events_url": "https://api.github.com/users/chriskessel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-16T19:35:33Z", "updated_at": "2016-03-17T14:49:35Z", "closed_at": "2016-03-16T22:46:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an (unfortunate) case where leading/trailing whitespace in the XML element is important. It appears that xmltodict is stripping the whitespace though. Is there a way to disable that functionality?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/125", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/125/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/125/events", "html_url": "https://github.com/martinblech/xmltodict/issues/125", "id": 138124698, "node_id": "MDU6SXNzdWUxMzgxMjQ2OTg=", "number": 125, "title": "Is there a way to keep order of mixed and repeating tags?", "user": {"login": "andreif", "id": 259691, "node_id": "MDQ6VXNlcjI1OTY5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/259691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreif", "html_url": "https://github.com/andreif", "followers_url": "https://api.github.com/users/andreif/followers", "following_url": "https://api.github.com/users/andreif/following{/other_user}", "gists_url": "https://api.github.com/users/andreif/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreif/subscriptions", "organizations_url": "https://api.github.com/users/andreif/orgs", "repos_url": "https://api.github.com/users/andreif/repos", "events_url": "https://api.github.com/users/andreif/events{/privacy}", "received_events_url": "https://api.github.com/users/andreif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-03T09:26:27Z", "updated_at": "2019-07-18T18:12:40Z", "closed_at": "2016-09-04T06:08:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example :hamburger: \n\n``` xml\n<DoubleCheeseburger>\n    <Bread/>\n    <Cheese/>\n    <Beef/>\n    <Cheese/>\n    <Beef/>\n    <Bread/>\n</DoubleCheeseburger>\n```\n\n``` py\nimport xmltodict, json\ndata = xmltodict.parse(double_cheeseburger_xml)\nprint(json.dumps(data, indent=3))\n```\n\n``` json\n{\n   \"DoubleCheeseburger\": {\n      \"Bread\": [\n         null,\n         null\n      ],\n      \"Cheese\": [\n         null,\n         null\n      ],\n      \"Beef\": [\n         null,\n         null\n      ]\n   }\n}\n```\n\nCan we tell the order of each `Bread`, `Cheese` and `Beef` with respect to each other not only within the same tag, but also in the parent node (`DoubleCheeseburger`)?\n\nIf not, is there a way to monkeypatch to write it down?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/123", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/123/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/123/events", "html_url": "https://github.com/martinblech/xmltodict/issues/123", "id": 122095178, "node_id": "MDU6SXNzdWUxMjIwOTUxNzg=", "number": 123, "title": "TypeError: __init__() got an unexpected keyword argument 'force_list'", "user": {"login": "mattkohl", "id": 4329213, "node_id": "MDQ6VXNlcjQzMjkyMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4329213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkohl", "html_url": "https://github.com/mattkohl", "followers_url": "https://api.github.com/users/mattkohl/followers", "following_url": "https://api.github.com/users/mattkohl/following{/other_user}", "gists_url": "https://api.github.com/users/mattkohl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkohl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkohl/subscriptions", "organizations_url": "https://api.github.com/users/mattkohl/orgs", "repos_url": "https://api.github.com/users/mattkohl/repos", "events_url": "https://api.github.com/users/mattkohl/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkohl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-14T17:53:36Z", "updated_at": "2016-01-05T13:10:39Z", "closed_at": "2016-01-05T13:10:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm thrilled about the new `force_list` feature and trying to use it. However, when I reproduce the test case (Python 3.4 on both Ubuntu 14.04 and Mac OS X) using this input: \n\n``` Python\nxml = \"\"\"\n        <servers>\n          <server>\n            <name>server1</name>\n            <os>os1</os>\n          </server>\n        </servers>\n        \"\"\"\n```\n\nand this command: \n\n``` Python\nxmltodict.parse(xml, force_list=('server',))\n```\n\nI get the following error:\n\n``` Python\nTypeError: __init__() got an unexpected keyword argument 'force_list'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/118", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/118/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/118/events", "html_url": "https://github.com/martinblech/xmltodict/issues/118", "id": 114796249, "node_id": "MDU6SXNzdWUxMTQ3OTYyNDk=", "number": 118, "title": "XML formatting", "user": {"login": "siv123456", "id": 10827288, "node_id": "MDQ6VXNlcjEwODI3Mjg4", "avatar_url": "https://avatars1.githubusercontent.com/u/10827288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siv123456", "html_url": "https://github.com/siv123456", "followers_url": "https://api.github.com/users/siv123456/followers", "following_url": "https://api.github.com/users/siv123456/following{/other_user}", "gists_url": "https://api.github.com/users/siv123456/gists{/gist_id}", "starred_url": "https://api.github.com/users/siv123456/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siv123456/subscriptions", "organizations_url": "https://api.github.com/users/siv123456/orgs", "repos_url": "https://api.github.com/users/siv123456/repos", "events_url": "https://api.github.com/users/siv123456/events{/privacy}", "received_events_url": "https://api.github.com/users/siv123456/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-03T11:30:49Z", "updated_at": "2015-11-16T09:02:55Z", "closed_at": "2015-11-16T09:02:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\ni started using xmltodict and i'm very happy with its intuitive usage and outcome.\none thing i didn't find is whether i can format the output xml/ right now i get a one line xml and i would like it to use new lines ,make readable to human eyes.\n\nis there such an option ?\n\nThanks in advance\nSivan\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/117", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/117/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/117/events", "html_url": "https://github.com/martinblech/xmltodict/issues/117", "id": 113622277, "node_id": "MDU6SXNzdWUxMTM2MjIyNzc=", "number": 117, "title": "it doesn't works for windows-1252", "user": {"login": "cryptid11", "id": 5619681, "node_id": "MDQ6VXNlcjU2MTk2ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5619681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cryptid11", "html_url": "https://github.com/cryptid11", "followers_url": "https://api.github.com/users/cryptid11/followers", "following_url": "https://api.github.com/users/cryptid11/following{/other_user}", "gists_url": "https://api.github.com/users/cryptid11/gists{/gist_id}", "starred_url": "https://api.github.com/users/cryptid11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cryptid11/subscriptions", "organizations_url": "https://api.github.com/users/cryptid11/orgs", "repos_url": "https://api.github.com/users/cryptid11/repos", "events_url": "https://api.github.com/users/cryptid11/events{/privacy}", "received_events_url": "https://api.github.com/users/cryptid11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-27T16:16:49Z", "updated_at": "2015-10-27T16:22:20Z", "closed_at": "2015-10-27T16:22:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "import xmltodict\nimport codecs\nxml=codecs.open('test.xml','r','windows-1252').read()\nxml=xmltodict.parse(xml, process_namespaces=True)\nxml=xmltodict.unparse(xml, pretty=True)\nxml_new=codecs.open('cameraOA_exp_new.xml','w','windows-1252')\nxml_new.write(xml)\n\ngives me \n\nUnicodeEncodeError: 'charmap' codec can't encode character u'\\x85' in position 143691: character maps to <undefined>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/116", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/116/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/116/events", "html_url": "https://github.com/martinblech/xmltodict/issues/116", "id": 113587530, "node_id": "MDU6SXNzdWUxMTM1ODc1MzA=", "number": 116, "title": "Ignoring specific tags", "user": {"login": "tanzaho", "id": 2247438, "node_id": "MDQ6VXNlcjIyNDc0Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2247438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzaho", "html_url": "https://github.com/tanzaho", "followers_url": "https://api.github.com/users/tanzaho/followers", "following_url": "https://api.github.com/users/tanzaho/following{/other_user}", "gists_url": "https://api.github.com/users/tanzaho/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzaho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzaho/subscriptions", "organizations_url": "https://api.github.com/users/tanzaho/orgs", "repos_url": "https://api.github.com/users/tanzaho/repos", "events_url": "https://api.github.com/users/tanzaho/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzaho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-27T13:49:29Z", "updated_at": "2015-12-30T19:41:25Z", "closed_at": "2015-12-30T19:41:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is is possible to ignore some specific tags during the parsing ?\n\nUse-case : I have an XML with a field that use sup tags (ex: \"Power is:  3<sup>5</sup>\") . I need to keep the sup tags in place as raw text;\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/115", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/115/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/115/events", "html_url": "https://github.com/martinblech/xmltodict/issues/115", "id": 108463905, "node_id": "MDU6SXNzdWUxMDg0NjM5MDU=", "number": 115, "title": "Alternate object for 'None'", "user": {"login": "candlerb", "id": 44789, "node_id": "MDQ6VXNlcjQ0Nzg5", "avatar_url": "https://avatars2.githubusercontent.com/u/44789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/candlerb", "html_url": "https://github.com/candlerb", "followers_url": "https://api.github.com/users/candlerb/followers", "following_url": "https://api.github.com/users/candlerb/following{/other_user}", "gists_url": "https://api.github.com/users/candlerb/gists{/gist_id}", "starred_url": "https://api.github.com/users/candlerb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/candlerb/subscriptions", "organizations_url": "https://api.github.com/users/candlerb/orgs", "repos_url": "https://api.github.com/users/candlerb/repos", "events_url": "https://api.github.com/users/candlerb/events{/privacy}", "received_events_url": "https://api.github.com/users/candlerb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354977, "node_id": "MDU6TGFiZWwzMzU0OTc3", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-26T13:29:36Z", "updated_at": "2016-02-23T05:24:09Z", "closed_at": "2016-02-23T05:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing code like this to extract data from incoming XML:\n\n```\ntry:\n    result = xml['foo']['bar']['baz']\nexcept KeyError as e:\n    return \"Missing element %s\" % e.message\n```\n\nThat is, I want to generate a helpful message saying which element is missing, without having to test individually for `\"foo\" in xml`, `\"bar\" in xml[\"foo\"]`, `\"baz\" in xml[\"foo\"][\"bar\"]` etc.\n\nThis works if you have a `<foo>` which contains an element other than `<bar>`, e.g.\n\n```\n<foo><other>a</other></foo>\n```\n\nBut it fails if `<foo>` is an empty element, because xmltodict gives `{\"foo\": None}` and you get\n\n```\nTypeError: 'NoneType' object has no attribute '__getitem__'\n```\n\nOf course you can catch the TypeError, but it doesn't tell you the name of the item you were trying to access :-( And you can't override `__getitem__` on `NoneType`.\n\nHowever, if xmltodict were able to replace None with an empty dictionary (e.g. `empty_constructor=dict`) then an empty `<foo/>` would parse as `{\"foo\": {}}` and this would work as expected:\n\n```\nKeyError: 'bar'\n```\n\nI think that's useful. But it leaves one remaining problem, which is if `<foo>` contains just text then xmltodict gives `{\"foo\": \"text\"}` and you get\n\n```\nTypeError: string indices must be integers, not str\n```\n\nAgain you've lost the information that you were trying to access a child called \"bar\". I can't see a good solution for this, except perhaps returning a wrapper class instead of str.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/114", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/114/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/114/events", "html_url": "https://github.com/martinblech/xmltodict/issues/114", "id": 108443633, "node_id": "MDU6SXNzdWUxMDg0NDM2MzM=", "number": 114, "title": "how to unpack the same tags?", "user": {"login": "axiaoxin", "id": 2876405, "node_id": "MDQ6VXNlcjI4NzY0MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2876405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axiaoxin", "html_url": "https://github.com/axiaoxin", "followers_url": "https://api.github.com/users/axiaoxin/followers", "following_url": "https://api.github.com/users/axiaoxin/following{/other_user}", "gists_url": "https://api.github.com/users/axiaoxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/axiaoxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axiaoxin/subscriptions", "organizations_url": "https://api.github.com/users/axiaoxin/orgs", "repos_url": "https://api.github.com/users/axiaoxin/repos", "events_url": "https://api.github.com/users/axiaoxin/events{/privacy}", "received_events_url": "https://api.github.com/users/axiaoxin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-26T06:17:38Z", "updated_at": "2015-09-26T06:21:52Z", "closed_at": "2015-09-26T06:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "such as\n\n```\n<rows>\n  <row>\n    <a>1</a>\n  </row>\n  <row>\n    <a>2</a>\n  </row>\n</rows>\n```\n\nthanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/113", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/113/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/113/events", "html_url": "https://github.com/martinblech/xmltodict/issues/113", "id": 107870140, "node_id": "MDU6SXNzdWUxMDc4NzAxNDA=", "number": 113, "title": "Strip namespaces from attributes?", "user": {"login": "gamesbook", "id": 354027, "node_id": "MDQ6VXNlcjM1NDAyNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/354027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gamesbook", "html_url": "https://github.com/gamesbook", "followers_url": "https://api.github.com/users/gamesbook/followers", "following_url": "https://api.github.com/users/gamesbook/following{/other_user}", "gists_url": "https://api.github.com/users/gamesbook/gists{/gist_id}", "starred_url": "https://api.github.com/users/gamesbook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gamesbook/subscriptions", "organizations_url": "https://api.github.com/users/gamesbook/orgs", "repos_url": "https://api.github.com/users/gamesbook/repos", "events_url": "https://api.github.com/users/gamesbook/events{/privacy}", "received_events_url": "https://api.github.com/users/gamesbook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-23T08:13:06Z", "updated_at": "2020-07-17T17:59:34Z", "closed_at": "2016-02-23T05:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have likely not RTFM properly, but I cannot see how to specify that namespaces get removed from attributes as well.  They appear in the output as:\n\n```\n@http:\\long\\namespace:attribute_name\n```\n\nI have written a small routine to strip them out afterwards.\n\n(Very useful library, tho'!)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/112", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/112/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/112/events", "html_url": "https://github.com/martinblech/xmltodict/issues/112", "id": 99646187, "node_id": "MDU6SXNzdWU5OTY0NjE4Nw==", "number": 112, "title": "command line crashes with Python3", "user": {"login": "ctismer", "id": 1782825, "node_id": "MDQ6VXNlcjE3ODI4MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1782825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctismer", "html_url": "https://github.com/ctismer", "followers_url": "https://api.github.com/users/ctismer/followers", "following_url": "https://api.github.com/users/ctismer/following{/other_user}", "gists_url": "https://api.github.com/users/ctismer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctismer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctismer/subscriptions", "organizations_url": "https://api.github.com/users/ctismer/orgs", "repos_url": "https://api.github.com/users/ctismer/repos", "events_url": "https://api.github.com/users/ctismer/events{/privacy}", "received_events_url": "https://api.github.com/users/ctismer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-07T13:22:34Z", "updated_at": "2016-02-23T05:39:14Z", "closed_at": "2016-02-23T05:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "xmltodict claims python3 compatibility, but using the module from python3 always forces\nyou to explicitly open files in binary mode to make it work.\n\nWhen using the command line interface like so:\n\n```\necho '<xml><hi>there</hi></xml>' | python -m xmltodict 0\n```\n\nthen with python3 we get\n\n```\n$ echo '<xml><hi>there</hi></xml>' | python3 -m xmltodict 0 \nTraceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/xmltodict.py\", line 246, in parse\n    parser.ParseFile(xml_input)\nTypeError: read() did not return a bytes object (type=str)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/xmltodict.py\", line 359, in <module>\n    dict_constructor=dict)\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/xmltodict.py\", line 248, in parse\n    parser.Parse(xml_input, True)\nTypeError: '_io.TextIOWrapper' does not support the buffer interface\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/111", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/111/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/111/events", "html_url": "https://github.com/martinblech/xmltodict/issues/111", "id": 99433900, "node_id": "MDU6SXNzdWU5OTQzMzkwMA==", "number": 111, "title": "Optional attributes and unknown children count", "user": {"login": "vovanz", "id": 1778004, "node_id": "MDQ6VXNlcjE3NzgwMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1778004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vovanz", "html_url": "https://github.com/vovanz", "followers_url": "https://api.github.com/users/vovanz/followers", "following_url": "https://api.github.com/users/vovanz/following{/other_user}", "gists_url": "https://api.github.com/users/vovanz/gists{/gist_id}", "starred_url": "https://api.github.com/users/vovanz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vovanz/subscriptions", "organizations_url": "https://api.github.com/users/vovanz/orgs", "repos_url": "https://api.github.com/users/vovanz/repos", "events_url": "https://api.github.com/users/vovanz/events{/privacy}", "received_events_url": "https://api.github.com/users/vovanz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-08-06T13:28:47Z", "updated_at": "2016-02-23T03:11:40Z", "closed_at": "2016-02-23T03:11:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "# What's wrong?\n## 1. Optional attributes\n\nIf i have a tag which can look like this:\n\n``` xml\n<sometag>blablabla</sometag>\n```\n\nor like this:\n\n``` xml\n<sometag attr=\"123\">blablabla</sometag>\n```\n\nIn the first case parse result will look like this:\n\n``` python\n{\n    'sometag': 'blablabla'\n}\n```\n\nand in the second case it will look like:\n\n``` python\n{\n    'sometag': {\n        '@attr': '123',\n         '#text': 'blablabla'\n    }\n}\n```\n\nSo if I want to get its text content I can't just do something like:\n\n``` python\nsomething = parse_result['sometag']['#text']\n```\n\nI have to write such ugly things:\n\n``` python\nsomething = parse_result['sometag']\nsomething = something['#text'] if type(something) is OrderedDict else something\n```\n## 2. Unknown children count\n\nIf I have a tag which can look like this:\n\n``` xml\n<parent>\n    <child>some text</child>\n    <child>other text</child>\n<parent>\n```\n\nAnd I don't know exact children count **(child could be only one!)**\nSo I couldn't iterate over children like this:\n\n``` python\nfor child in parse_result['parent']['child']:\n    # some code\n```\n\nbecause list would be used only if there are more than one child.\nSo in this case I also have to perform some ugly type checking.\nLike this:\n\n``` python\nchildren = parse_result['parent']['child']\nchildren = children if type(children) is list else [children]\nfor child in children:\n    # some code\n```\n# Suggestion\n\nI suggest to add special mode (triggered by special optional argument passed to _parse_ function).\nIn this mode it will always use dictionary for describing tags and always use lists for describing children tags.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/110", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/110/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/110/events", "html_url": "https://github.com/martinblech/xmltodict/issues/110", "id": 95222163, "node_id": "MDU6SXNzdWU5NTIyMjE2Mw==", "number": 110, "title": "Namespace declarations on elements are lost during parsing", "user": {"login": "asandvig", "id": 13351868, "node_id": "MDQ6VXNlcjEzMzUxODY4", "avatar_url": "https://avatars3.githubusercontent.com/u/13351868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asandvig", "html_url": "https://github.com/asandvig", "followers_url": "https://api.github.com/users/asandvig/followers", "following_url": "https://api.github.com/users/asandvig/following{/other_user}", "gists_url": "https://api.github.com/users/asandvig/gists{/gist_id}", "starred_url": "https://api.github.com/users/asandvig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asandvig/subscriptions", "organizations_url": "https://api.github.com/users/asandvig/orgs", "repos_url": "https://api.github.com/users/asandvig/repos", "events_url": "https://api.github.com/users/asandvig/events{/privacy}", "received_events_url": "https://api.github.com/users/asandvig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-15T15:23:05Z", "updated_at": "2016-02-23T05:40:49Z", "closed_at": "2016-02-23T05:40:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, `xmltodict` does not return any information about any namespace declarations that may have been present on the elements.\n\nExpat does not treat these as regular attributes (as they are not part of the XML data, and are only considered useful to the XML parser itself) and they are therefore not included as attributes in the returned dictionary from `xmltodict.parse()` either.\n\nTo get access to the namespace declarations during Expat parsing, you must provide a \"start namespace declaration\" handler for Expat to call (ref. [xml.parsers.expat.xmlparser.StartNamespaceDeclHandler](https://docs.python.org/2/library/pyexpat.html#xml.parsers.expat.xmlparser.StartNamespaceDeclHandler)).\n\nHere's a crude example of how `xmltodict` can be modified to include the namespace declarations as a named attribute (`@xmlns`) on the element where they are defined (the value of the attribute is an ordered dictionary of namespaces keyed by their prefix, as defined in the namespace declaration):\n\n``` diff\n@@ -67,6 +67,7 @@ class _DictSAXHandler(object):\n         self.strip_whitespace = strip_whitespace\n         self.namespace_separator = namespace_separator\n         self.namespaces = namespaces\n+        self.namespace_declarations = OrderedDict()\n\n     def _build_name(self, full_name):\n         if not self.namespaces:\n@@ -86,9 +87,15 @@ class _DictSAXHandler(object):\n             return attrs\n         return self.dict_constructor(zip(attrs[0::2], attrs[1::2]))\n\n+    def startNamespaceDecl(self, prefix, uri):\n+        self.namespace_declarations[prefix] = uri\n+\n     def startElement(self, full_name, attrs):\n         name = self._build_name(full_name)\n         attrs = self._attrs_to_dict(attrs)\n+        if attrs and self.namespace_declarations:\n+            attrs[\"xmlns\"] = self.namespace_declarations\n+            self.namespace_declarations = OrderedDict()\n         self.path.append((name, attrs or None))\n         if len(self.path) > self.item_depth:\n             self.stack.append((self.item, self.data))\n@@ -238,6 +245,7 @@ def parse(xml_input, encoding=None, expat=expat, process_namespaces=False,\n     except AttributeError:\n         # Jython's expat does not support ordered_attributes\n         pass\n+    parser.StartNamespaceDeclHandler = handler.startNamespaceDecl\n     parser.StartElementHandler = handler.startElement\n     parser.EndElementHandler = handler.endElement\n     parser.CharacterDataHandler = handler.characters\n```\n\nThe above code works (for my purposes), but it should probably be made somewhat more elegant if to be included in the official `xmltodict` version.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/109", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/109/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/109/events", "html_url": "https://github.com/martinblech/xmltodict/issues/109", "id": 91799571, "node_id": "MDU6SXNzdWU5MTc5OTU3MQ==", "number": 109, "title": "Is it possible to support comments?", "user": {"login": "y-usuzumi", "id": 1560189, "node_id": "MDQ6VXNlcjE1NjAxODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1560189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y-usuzumi", "html_url": "https://github.com/y-usuzumi", "followers_url": "https://api.github.com/users/y-usuzumi/followers", "following_url": "https://api.github.com/users/y-usuzumi/following{/other_user}", "gists_url": "https://api.github.com/users/y-usuzumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/y-usuzumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y-usuzumi/subscriptions", "organizations_url": "https://api.github.com/users/y-usuzumi/orgs", "repos_url": "https://api.github.com/users/y-usuzumi/repos", "events_url": "https://api.github.com/users/y-usuzumi/events{/privacy}", "received_events_url": "https://api.github.com/users/y-usuzumi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-29T13:09:57Z", "updated_at": "2019-09-18T13:35:46Z", "closed_at": "2016-02-23T05:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd really like to have support for comments in lxml. It might be tricky especially for comments next to the root element.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/108", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/108/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/108/events", "html_url": "https://github.com/martinblech/xmltodict/issues/108", "id": 87674290, "node_id": "MDU6SXNzdWU4NzY3NDI5MA==", "number": 108, "title": "UnicodeDecodeError will be raised when unparsing chinese characters encoded by utf-8", "user": {"login": "dlf412", "id": 4159125, "node_id": "MDQ6VXNlcjQxNTkxMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4159125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlf412", "html_url": "https://github.com/dlf412", "followers_url": "https://api.github.com/users/dlf412/followers", "following_url": "https://api.github.com/users/dlf412/following{/other_user}", "gists_url": "https://api.github.com/users/dlf412/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlf412/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlf412/subscriptions", "organizations_url": "https://api.github.com/users/dlf412/orgs", "repos_url": "https://api.github.com/users/dlf412/repos", "events_url": "https://api.github.com/users/dlf412/events{/privacy}", "received_events_url": "https://api.github.com/users/dlf412/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-12T09:49:34Z", "updated_at": "2016-02-23T05:44:18Z", "closed_at": "2016-02-23T05:44:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 2.7.3 (default, Aug  1 2012, 05:16:07) \n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > import xmltodict\n> > > print xmltodict.**version**\n> > > 0.9.2\n> > > test = {\"root\":{\"data\":[{\"case1\": \"hello world\"}, {\"case2\": \"\u4f60\u597d\uff0c\u4e16\u754c\"}]}}\n> > > test1 = {\"root\":{\"data\":{\"case1\": \"hello world\"}}}\n> > > test2 = {\"root\":{\"data\":{\"case2\": \"\u4f60\u597d\uff0c\u4e16\u754c\"}}}\n> > > xmltodict.unparse(test1)\n> > > u'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<root><data><case1>hello world</case1></data></root>'\n> > > xmltodict.unparse(test2)\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"/usr/local/lib/python2.7/dist-packages/xmltodict.py\", line 333, in unparse\n> > >     *_kwargs)\n> > >   File \"/usr/local/lib/python2.7/dist-packages/xmltodict.py\", line 296, in _emit\n> > >     pretty, newl, indent)\n> > >   File \"/usr/local/lib/python2.7/dist-packages/xmltodict.py\", line 296, in _emit\n> > >     pretty, newl, indent)\n> > >   File \"/usr/local/lib/python2.7/dist-packages/xmltodict.py\", line 274, in _emit\n> > >     v = _unicode(v)\n> > > UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)\n> > > xmltodict.unparse(test)\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"/usr/local/lib/python2.7/dist-packages/xmltodict.py\", line 333, in unparse\n> > >     *_kwargs)\n> > >   File \"/usr/local/lib/python2.7/dist-packages/xmltodict.py\", line 296, in _emit\n> > >     pretty, newl, indent)\n> > >   File \"/usr/local/lib/python2.7/dist-packages/xmltodict.py\", line 296, in _emit\n> > >     pretty, newl, indent)\n> > >   File \"/usr/local/lib/python2.7/dist-packages/xmltodict.py\", line 274, in _emit\n> > >     v = _unicode(v)\n> > > UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)\n> > > \"\u4f60\u597d\uff0c\u4e16\u754c\"\n> > > '\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd\\xef\\xbc\\x8c\\xe4\\xb8\\x96\\xe7\\x95\\x8c'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/107", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/107/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/107/events", "html_url": "https://github.com/martinblech/xmltodict/issues/107", "id": 87215272, "node_id": "MDU6SXNzdWU4NzIxNTI3Mg==", "number": 107, "title": "postprocessor doesn't have effect on attributes?", "user": {"login": "1kko", "id": 2148960, "node_id": "MDQ6VXNlcjIxNDg5NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2148960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1kko", "html_url": "https://github.com/1kko", "followers_url": "https://api.github.com/users/1kko/followers", "following_url": "https://api.github.com/users/1kko/following{/other_user}", "gists_url": "https://api.github.com/users/1kko/gists{/gist_id}", "starred_url": "https://api.github.com/users/1kko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1kko/subscriptions", "organizations_url": "https://api.github.com/users/1kko/orgs", "repos_url": "https://api.github.com/users/1kko/repos", "events_url": "https://api.github.com/users/1kko/events{/privacy}", "received_events_url": "https://api.github.com/users/1kko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-11T05:15:47Z", "updated_at": "2016-02-23T05:59:30Z", "closed_at": "2016-02-23T05:59:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like postprocessor doesn't run on attributes.\n\n```\n>>> def postprocessor(path, key, value):\n... try:\n...     return key, int(value)\n... except (ValueError, TypeError):\n...     return key, value\n>>> doc=\"\"\"<mydoc has=\"an attribute\" version=2><and><many>elements</many><many>more elements</many><numbers>2</numbers></and></mydoc>\"\"\"\n>>> json.dumps(xmltodict.parse(doc))\n'{\"mydoc\": {\"@has\": \"an attribute\", \"@version\": \"2\", \"and\": {\"many\": [\"elements\", \"more elements\"], \"numbers\": \"2\"}}}'\n>>> json.dumps(xmltodict.parse(doc, postprocessor=postprocessor))\n'{\"mydoc\": {\"@has\": \"an attribute\", \"@version\": \"2\", \"and\": {\"many\": [\"elements\", \"more elements\"], \"numbers\": 2}}}'\n\n```\n\nAs of here, `@version` should be converted integer but didn't, while `numbers` converted as integer 2.\n\nIs there other method to run postprocessor on attributes?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/106", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/106/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/106/events", "html_url": "https://github.com/martinblech/xmltodict/issues/106", "id": 84213420, "node_id": "MDU6SXNzdWU4NDIxMzQyMA==", "number": 106, "title": "Namespace declarations in root element disappear on unparse", "user": {"login": "gwillden", "id": 12721085, "node_id": "MDQ6VXNlcjEyNzIxMDg1", "avatar_url": "https://avatars2.githubusercontent.com/u/12721085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwillden", "html_url": "https://github.com/gwillden", "followers_url": "https://api.github.com/users/gwillden/followers", "following_url": "https://api.github.com/users/gwillden/following{/other_user}", "gists_url": "https://api.github.com/users/gwillden/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwillden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwillden/subscriptions", "organizations_url": "https://api.github.com/users/gwillden/orgs", "repos_url": "https://api.github.com/users/gwillden/repos", "events_url": "https://api.github.com/users/gwillden/events{/privacy}", "received_events_url": "https://api.github.com/users/gwillden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-02T21:11:27Z", "updated_at": "2016-02-23T06:00:36Z", "closed_at": "2016-02-23T06:00:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The unparse() method does not properly reserialize the namespace declarations into the XML string.\nPlease compare the output of the various calls below.  In the namespace-enabled case, the unparse method produces invalid XML because it fails to reserialize the \"xmlns\" attributes of the root element.\n\n```\nimport xmltodict\nimport json\n\nxml = \"\"\"\n<root xmlns=\"http://defaultns.com/\"\n      xmlns:a=\"http://a.com/\"\n      xmlns:b=\"http://b.com/\">\n  <x>1</x>\n  <a:y>2</a:y>\n  <b:z>3</b:z>\n</root>\n\"\"\"\n\nnamespaces = {\"http://defaultns.com/\":\"root\",\n              \"http://a.com/\":\"a\",\n              \"http://b.com/\":\"b\"}\n\nprint(xml)\nnons = xmltodict.parse(xml)\nns = xmltodict.parse(xml, process_namespaces=True, namespaces=namespaces)\n\nprint(\"No Namespaces:\")\nprint(xmltodict.unparse(nons, pretty=True))\n\nprint(\"\\nWith Namespaces:\")\nprint(xmltodict.unparse(ns, pretty=True))  #The Namespace declarations in the root element disappear\n```\n\nExample Output:\n\n```\n<root xmlns=\"http://defaultns.com/\"\n      xmlns:a=\"http://a.com/\"\n      xmlns:b=\"http://b.com/\">\n  <x>1</x>\n  <a:y>2</a:y>\n  <b:z>3</b:z>\n</root>\n\nNo Namespaces:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root xmlns=\"http://defaultns.com/\" xmlns:a=\"http://a.com/\" xmlns:b=\"http://b.com/\">\n        <x>1</x>\n        <a:y>2</a:y>\n        <b:z>3</b:z>\n</root>\n\nWith Namespaces:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root:root>\n        <root:x>1</root:x>\n        <a:y>2</a:y>\n        <b:z>3</b:z>\n</root:root>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/105", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/105/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/105/events", "html_url": "https://github.com/martinblech/xmltodict/issues/105", "id": 82259534, "node_id": "MDU6SXNzdWU4MjI1OTUzNA==", "number": 105, "title": "AttributeError: 'module' object has no attribute 'xmltodict'", "user": {"login": "rrajni", "id": 6665844, "node_id": "MDQ6VXNlcjY2NjU4NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6665844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rrajni", "html_url": "https://github.com/rrajni", "followers_url": "https://api.github.com/users/rrajni/followers", "following_url": "https://api.github.com/users/rrajni/following{/other_user}", "gists_url": "https://api.github.com/users/rrajni/gists{/gist_id}", "starred_url": "https://api.github.com/users/rrajni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rrajni/subscriptions", "organizations_url": "https://api.github.com/users/rrajni/orgs", "repos_url": "https://api.github.com/users/rrajni/repos", "events_url": "https://api.github.com/users/rrajni/events{/privacy}", "received_events_url": "https://api.github.com/users/rrajni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-29T04:44:09Z", "updated_at": "2015-05-31T04:33:42Z", "closed_at": "2015-05-31T04:33:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "import json\nimport xmltodict as xml\ns = open(\"Status.xml\").read()\nd = xml.xmltodict(s)\njson.dump(d['subway'][0]['line'],open(\"service_status.json\",'w'))\n\nTrying to run the above code for converting xml to json. But I am getting this error.\nTraceback (most recent call last):\n  File \"L:/VISLZN/P1/PROG1.PY\", line 6, in <module>\n    d = xml.xmltodict(s)\nAttributeError: 'module' object has no attribute 'xmltodict'\n\nI am running 64 bit windows with Python 2.7 installed. Any help will be appreciated\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/103", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/103/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/103/events", "html_url": "https://github.com/martinblech/xmltodict/issues/103", "id": 78502117, "node_id": "MDU6SXNzdWU3ODUwMjExNw==", "number": 103, "title": "xmltodict.unparse() not preserving OrderedDict order", "user": {"login": "anoother", "id": 205690, "node_id": "MDQ6VXNlcjIwNTY5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/205690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anoother", "html_url": "https://github.com/anoother", "followers_url": "https://api.github.com/users/anoother/followers", "following_url": "https://api.github.com/users/anoother/following{/other_user}", "gists_url": "https://api.github.com/users/anoother/gists{/gist_id}", "starred_url": "https://api.github.com/users/anoother/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anoother/subscriptions", "organizations_url": "https://api.github.com/users/anoother/orgs", "repos_url": "https://api.github.com/users/anoother/repos", "events_url": "https://api.github.com/users/anoother/events{/privacy}", "received_events_url": "https://api.github.com/users/anoother/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-20T12:20:59Z", "updated_at": "2015-05-20T12:35:49Z", "closed_at": "2015-05-20T12:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have seen previous issues regarding this, but it seems still not to be working for me in 0.9.2.\n\nGiven the following input:\n\n```\n{'ManagedElement': OrderedDict(\n    Address = {\n        '#text': 'http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous',\n        '@xmlns': 'http://schemas.xmlsoap.org/ws/2004/08/addressing',\n    },  \n    ReferenceParameters = {       \n        'ResourceURI': {    \n            '#text': 'http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem',\n            '@xmlns': 'http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd',\n        },\n        '@xmlns': 'http://schemas.xmlsoap.org/ws/2004/08/addressing',\n        'SelectorSet': {    \n            'Selector': {       \n                '#text': 'ManagedSystem',\n            },\n            '@xmlns': 'http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd',\n        },\n    },\n)}\n```\n\n`xmltodict.unparse()` returns:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ManagedElement>\n        <ReferenceParameters xmlns=\"http://schemas.xmlsoap.org/ws/2004/08/addressing\">\n                <ResourceURI xmlns=\"http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd\">http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem</ResourceURI>\n                <SelectorSet xmlns=\"http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd\">\n                        <Selector>ManagedSystem</Selector>\n                </SelectorSet>\n        </ReferenceParameters>\n        <Address xmlns=\"http://schemas.xmlsoap.org/ws/2004/08/addressing\">http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</Address>\n</ManagedElement>\n```\n\nThe `<Address>` tag has moved to the end of `<ManagedElement>`, as opposed to being at the beginning, as it is in the supplied OrderedDict.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/102", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/102/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/102/events", "html_url": "https://github.com/martinblech/xmltodict/issues/102", "id": 74422044, "node_id": "MDU6SXNzdWU3NDQyMjA0NA==", "number": 102, "title": "Want to add more \"docstring\"", "user": {"login": "kmonsoor", "id": 1219418, "node_id": "MDQ6VXNlcjEyMTk0MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1219418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmonsoor", "html_url": "https://github.com/kmonsoor", "followers_url": "https://api.github.com/users/kmonsoor/followers", "following_url": "https://api.github.com/users/kmonsoor/following{/other_user}", "gists_url": "https://api.github.com/users/kmonsoor/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmonsoor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmonsoor/subscriptions", "organizations_url": "https://api.github.com/users/kmonsoor/orgs", "repos_url": "https://api.github.com/users/kmonsoor/repos", "events_url": "https://api.github.com/users/kmonsoor/events{/privacy}", "received_events_url": "https://api.github.com/users/kmonsoor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-08T16:42:31Z", "updated_at": "2015-05-10T06:41:27Z", "closed_at": "2015-05-10T06:41:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello @martinblech, i am using using this nice little library for quite a while. I feel & would like to do some contribution back. \nAs i am not that good coder to make something new, i want to start with documentation which i felt lack of as a user. If you agree, i want to know which way you prefer it?\n1. All suggested docstring / documentation on a single changelist / branch, or\n2. One-chunk of change in docs at a time ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/101", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/101/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/101/events", "html_url": "https://github.com/martinblech/xmltodict/issues/101", "id": 71380106, "node_id": "MDU6SXNzdWU3MTM4MDEwNg==", "number": 101, "title": "[@Parent] entry to reference parent element ", "user": {"login": "robscott57", "id": 6857380, "node_id": "MDQ6VXNlcjY4NTczODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6857380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robscott57", "html_url": "https://github.com/robscott57", "followers_url": "https://api.github.com/users/robscott57/followers", "following_url": "https://api.github.com/users/robscott57/following{/other_user}", "gists_url": "https://api.github.com/users/robscott57/gists{/gist_id}", "starred_url": "https://api.github.com/users/robscott57/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robscott57/subscriptions", "organizations_url": "https://api.github.com/users/robscott57/orgs", "repos_url": "https://api.github.com/users/robscott57/repos", "events_url": "https://api.github.com/users/robscott57/events{/privacy}", "received_events_url": "https://api.github.com/users/robscott57/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354977, "node_id": "MDU6TGFiZWwzMzU0OTc3", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-27T19:33:34Z", "updated_at": "2016-02-23T06:01:30Z", "closed_at": "2016-02-23T06:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be helpful if I could obtain an elements parent.. perhaps stored as @Parent key\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/100", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/100/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/100/events", "html_url": "https://github.com/martinblech/xmltodict/issues/100", "id": 70221654, "node_id": "MDU6SXNzdWU3MDIyMTY1NA==", "number": 100, "title": "Would like to generate short-form empty elements", "user": {"login": "candlerb", "id": 44789, "node_id": "MDQ6VXNlcjQ0Nzg5", "avatar_url": "https://avatars2.githubusercontent.com/u/44789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/candlerb", "html_url": "https://github.com/candlerb", "followers_url": "https://api.github.com/users/candlerb/followers", "following_url": "https://api.github.com/users/candlerb/following{/other_user}", "gists_url": "https://api.github.com/users/candlerb/gists{/gist_id}", "starred_url": "https://api.github.com/users/candlerb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/candlerb/subscriptions", "organizations_url": "https://api.github.com/users/candlerb/orgs", "repos_url": "https://api.github.com/users/candlerb/repos", "events_url": "https://api.github.com/users/candlerb/events{/privacy}", "received_events_url": "https://api.github.com/users/candlerb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354977, "node_id": "MDU6TGFiZWwzMzU0OTc3", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-22T20:02:19Z", "updated_at": "2019-03-15T23:22:11Z", "closed_at": "2016-02-23T06:01:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> xmltodict.unparse({\"foo\":None}, full_document=False)\nu'<foo></foo>'\n>>> xmltodict.unparse({\"foo\":{\"@bar\":\"baz\"}}, full_document=False)\nu'<foo bar=\"baz\"></foo>'\n```\n\nIf would be nice to have an option to generate `<foo/>` and `<foo bar=\"baz\"/>` respectively.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/97", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/97/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/97/events", "html_url": "https://github.com/martinblech/xmltodict/issues/97", "id": 68820723, "node_id": "MDU6SXNzdWU2ODgyMDcyMw==", "number": 97, "title": "Improve security against maliciously constructed data", "user": {"login": "iyn", "id": 11827785, "node_id": "MDQ6VXNlcjExODI3Nzg1", "avatar_url": "https://avatars3.githubusercontent.com/u/11827785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iyn", "html_url": "https://github.com/iyn", "followers_url": "https://api.github.com/users/iyn/followers", "following_url": "https://api.github.com/users/iyn/following{/other_user}", "gists_url": "https://api.github.com/users/iyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/iyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iyn/subscriptions", "organizations_url": "https://api.github.com/users/iyn/orgs", "repos_url": "https://api.github.com/users/iyn/repos", "events_url": "https://api.github.com/users/iyn/events{/privacy}", "received_events_url": "https://api.github.com/users/iyn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-04-16T01:08:05Z", "updated_at": "2016-02-23T06:37:17Z", "closed_at": "2016-02-23T06:37:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Problem**\n`xmltodict` is Expat-based, which is not secure against maliciously constructed data (it's even mentioned on the package docs: https://docs.python.org/3.4/library/pyexpat.html). \n\n**Possible Solution**\nThere is a project that improves Expat security: `defusedexpat` (PyPI: https://pypi.python.org/pypi/defusedexpat/ Bitbucket: https://bitbucket.org/tiran/defusedexpat). Using it instead of regular Expat could resolve security issues.\n\n**Potential problems with implementation**\nAt this point I haven't researched compatibility issues that may arise if `xmltodict` were to use `defusedexpat`. Will do this in the next few days.\n\n**More information**\nhttps://docs.python.org/3.4/library/xml.html\nhttps://pypi.python.org/pypi/defusedxml/\nhttps://pypi.python.org/pypi/defusedexpat/\nhttps://en.wikipedia.org/wiki/Billion_laughs\nhttps://msdn.microsoft.com/en-us/magazine/ee335713.aspx\n\nLet me know if there's interest in solving this problem. Is somebody interested in forking the repo and implementing the solution or should I do this (I won't be able to work on this until next week)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/95", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/95/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/95/events", "html_url": "https://github.com/martinblech/xmltodict/issues/95", "id": 68631520, "node_id": "MDU6SXNzdWU2ODYzMTUyMA==", "number": 95, "title": "Tests assert particular order of XML tags which is not returned by unparse", "user": {"login": "piotrkilczuk", "id": 365324, "node_id": "MDQ6VXNlcjM2NTMyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/365324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piotrkilczuk", "html_url": "https://github.com/piotrkilczuk", "followers_url": "https://api.github.com/users/piotrkilczuk/followers", "following_url": "https://api.github.com/users/piotrkilczuk/following{/other_user}", "gists_url": "https://api.github.com/users/piotrkilczuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/piotrkilczuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piotrkilczuk/subscriptions", "organizations_url": "https://api.github.com/users/piotrkilczuk/orgs", "repos_url": "https://api.github.com/users/piotrkilczuk/repos", "events_url": "https://api.github.com/users/piotrkilczuk/events{/privacy}", "received_events_url": "https://api.github.com/users/piotrkilczuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-15T09:50:28Z", "updated_at": "2015-04-15T15:15:32Z", "closed_at": "2015-04-15T15:15:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This happens roughly every other test run - for me only on Python 2.6.\n\n```\n======================================================================\nFAIL: test_multiple_roots_nofulldoc (test_dicttoxml.DictToXMLTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/piotr/TyMaszWeb/xmltodict/tests/test_dicttoxml.py\", line 65, in test_multiple_roots_nofulldoc\n    self.assertEqual(xml, '<a>1</a><b>2</b>')\nAssertionError: u'<b>2</b><a>1</a>' != '<a>1</a><b>2</b>'\n\n________________________________________________ summary ________________________________________________\n  py27: commands succeeded\n  py34: commands succeeded\n  pypy: commands succeeded\nERROR:   py26: commands failed\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/91", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/91/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/91/events", "html_url": "https://github.com/martinblech/xmltodict/issues/91", "id": 67950647, "node_id": "MDU6SXNzdWU2Nzk1MDY0Nw==", "number": 91, "title": "Allow generators in input dicts for unparse()", "user": {"login": "bzamecnik", "id": 446124, "node_id": "MDQ6VXNlcjQ0NjEyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/446124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzamecnik", "html_url": "https://github.com/bzamecnik", "followers_url": "https://api.github.com/users/bzamecnik/followers", "following_url": "https://api.github.com/users/bzamecnik/following{/other_user}", "gists_url": "https://api.github.com/users/bzamecnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzamecnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzamecnik/subscriptions", "organizations_url": "https://api.github.com/users/bzamecnik/orgs", "repos_url": "https://api.github.com/users/bzamecnik/repos", "events_url": "https://api.github.com/users/bzamecnik/events{/privacy}", "received_events_url": "https://api.github.com/users/bzamecnik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-12T20:00:46Z", "updated_at": "2015-04-23T20:06:42Z", "closed_at": "2015-04-23T20:06:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to be able to generate XML from lazy-generated input dictionaries. This would eliminate the need to store the whole input in memory and possibly generate the output XML while the input dicts are being prepared from some input stream. In particular I'd like to use a generator or possibly any iterable instead of just a list or tuple for representing children of a node. The current implementation explicitly checks for list or tuple and also checks for single root.\n\nExample (currently works, but requires a static input):\n\n``` python\ncontent = OrderedDict([('items',\n    OrderedDict([('item',\n        # list\n        [i for i in ('foo', 'bar', 'baz')]\n    )]))])\nprint(xmltodict.unparse(content, pretty=True))\n```\n\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<items>\n    <item>foo</item>\n    <item>bar</item>\n    <item>baz</item>\n</items>\n```\n\nHowever, when the input contains a generator, it is converted to string.\n\n``` python\ncontent = OrderedDict([('items',\n    OrderedDict([('item',\n        # generator\n        (i for i in ('foo', 'bar', 'baz'))\n    )]))])\nprint(xmltodict.unparse(content, pretty=True))\n```\n\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<items>\n    <item>&lt;generator object &lt;genexpr&gt; at 0x10ce9f480&gt;</item>\n</items>\n```\n\nThe output of second example should be ideally the same as in the first one.\n\nI started working on a change to xmltodict and hope it would be ready soon. Then I'll make a pull request.\n\nThis change would:\n- allow also a generator to represent node children in the `_emit()` function, not just `list` or `tuple`\n- check for single root inside the loop (with index taken eg. via `enumerate()`) - without the need for materializing the whole sequence\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/87", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/87/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/87/events", "html_url": "https://github.com/martinblech/xmltodict/issues/87", "id": 61329411, "node_id": "MDU6SXNzdWU2MTMyOTQxMQ==", "number": 87, "title": "Not all namespace info processed", "user": {"login": "kputland", "id": 1480163, "node_id": "MDQ6VXNlcjE0ODAxNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1480163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kputland", "html_url": "https://github.com/kputland", "followers_url": "https://api.github.com/users/kputland/followers", "following_url": "https://api.github.com/users/kputland/following{/other_user}", "gists_url": "https://api.github.com/users/kputland/gists{/gist_id}", "starred_url": "https://api.github.com/users/kputland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kputland/subscriptions", "organizations_url": "https://api.github.com/users/kputland/orgs", "repos_url": "https://api.github.com/users/kputland/repos", "events_url": "https://api.github.com/users/kputland/events{/privacy}", "received_events_url": "https://api.github.com/users/kputland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-14T01:06:21Z", "updated_at": "2015-04-17T14:06:42Z", "closed_at": "2015-04-17T14:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "XML Namespaces aren't being completely collapsed.\nxsi is being expanded\n\nXML that I'm trying to process assigned to\n\n``` xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<BroadsoftDocument protocol=\"OCI\" xmlns=\"C\">\n  <userId xmlns=\"\">someuserid!</userId>\n  <command xsi:type=\"UserOutgoingCallingPlanOriginatingModifyRequest\" xmlns=\"\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">;\n    <userId>12345678</userId>\n    <useCustomSettings>true</useCustomSettings>\n    <userPermissions>\n      <group>Allow</group>\n      <local>Allow</local>\n      <tollFree>Allow</tollFree>\n      <toll>Allow</toll>\n      <international>Allow</international>\n      <operatorAssisted>Allow</operatorAssisted>\n      <chargeableDirectoryAssisted>Allow</chargeableDirectoryAssisted>\n      <specialServicesI>Allow</specialServicesI>\n      <specialServicesII>Allow</specialServicesII>\n      <premiumServicesI>Disallow</premiumServicesI>\n      <premiumServicesII>Disallow</premiumServicesII>\n      <casual>Disallow</casual>\n      <urlDialing>Allow</urlDialing>\n      <unknown>Allow</unknown>\n    </userPermissions>\n  </command>\n</BroadsoftDocument>\n```\n\n``` python\n>>> doc = xmltodict.parse(bs[bs.index('\\n')+1:].strip(), process_namespaces=True, namespaces={'C':None, 'xsi':None, 'http://www.w3.org/2001/XMLSchema-instance':None})\n>>> print(json.dumps(doc, indent=2))\n{\n  \"BroadsoftDocument\": {\n    \"@protocol\": \"OCI\", \n    \"userId\": \"someuserid!\", \n    \"command\": {\n      \"@http://www.w3.org/2001/XMLSchema-instance:type\": \"UserOutgoingCallingPlanOriginatingModifyRequest\", \n      \"userId\": \"12345678\", \n      \"useCustomSettings\": \"true\", \n      \"userPermissions\": {\n        \"group\": \"Allow\", \n        \"local\": \"Allow\", \n        \"tollFree\": \"Allow\", \n        \"toll\": \"Allow\", \n        \"international\": \"Allow\", \n        \"operatorAssisted\": \"Allow\", \n        \"chargeableDirectoryAssisted\": \"Allow\", \n        \"specialServicesI\": \"Allow\", \n        \"specialServicesII\": \"Allow\", \n        \"premiumServicesI\": \"Disallow\", \n        \"premiumServicesII\": \"Disallow\", \n        \"casual\": \"Disallow\", \n        \"urlDialing\": \"Allow\", \n        \"unknown\": \"Allow\"\n      }, \n      \"#text\": \";\"\n    }\n  }\n}\n>>> \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/86", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/86/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/86/events", "html_url": "https://github.com/martinblech/xmltodict/issues/86", "id": 59080053, "node_id": "MDU6SXNzdWU1OTA4MDA1Mw==", "number": 86, "title": "AttributeError: 'int' object has no attribute 'replace'", "user": {"login": "piotrkilczuk", "id": 365324, "node_id": "MDQ6VXNlcjM2NTMyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/365324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piotrkilczuk", "html_url": "https://github.com/piotrkilczuk", "followers_url": "https://api.github.com/users/piotrkilczuk/followers", "following_url": "https://api.github.com/users/piotrkilczuk/following{/other_user}", "gists_url": "https://api.github.com/users/piotrkilczuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/piotrkilczuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piotrkilczuk/subscriptions", "organizations_url": "https://api.github.com/users/piotrkilczuk/orgs", "repos_url": "https://api.github.com/users/piotrkilczuk/repos", "events_url": "https://api.github.com/users/piotrkilczuk/events{/privacy}", "received_events_url": "https://api.github.com/users/piotrkilczuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-26T14:28:45Z", "updated_at": "2016-02-23T06:23:11Z", "closed_at": "2016-02-23T06:23:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nIf we try to `xmldict.unparse` the following dict it will fail:\n\n```\n{'MessageData': {\n    '@infotype': 0,\n    '#text': '08',\n}}\n```\n\n```\nTraceback (most recent call last):\n  File \"<input>\", line 1, in <module>\n  File \"/tmp/xmltodictest/lib/python2.7/site-packages/xmltodict.py\", line 333, in unparse\n    **kwargs)\n  File \"/tmp/xmltodictest/lib/python2.7/site-packages/xmltodict.py\", line 296, in _emit\n    pretty, newl, indent)\n  File \"/tmp/xmltodictest/lib/python2.7/site-packages/xmltodict.py\", line 290, in _emit\n    content_handler.startElement(key, AttributesImpl(attrs))\n  File \"/usr/lib64/python2.7/xml/sax/saxutils.py\", line 159, in startElement\n    self._write(u' %s=%s' % (name, quoteattr(value)))\n  File \"/usr/lib64/python2.7/xml/sax/saxutils.py\", line 66, in quoteattr\n    data = escape(data, entities)\n  File \"/usr/lib64/python2.7/xml/sax/saxutils.py\", line 32, in escape\n    data = data.replace(\"&\", \"&amp;\")\nAttributeError: 'int' object has no attribute 'replace'\n```\n\nIt's important that infotype is an attribute. It will work fine if an integer is a text node. \n\n**0.9.2**\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/85", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/85/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/85/events", "html_url": "https://github.com/martinblech/xmltodict/issues/85", "id": 56819802, "node_id": "MDU6SXNzdWU1NjgxOTgwMg==", "number": 85, "title": "unparse preserve element order", "user": {"login": "rotten", "id": 717719, "node_id": "MDQ6VXNlcjcxNzcxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/717719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rotten", "html_url": "https://github.com/rotten", "followers_url": "https://api.github.com/users/rotten/followers", "following_url": "https://api.github.com/users/rotten/following{/other_user}", "gists_url": "https://api.github.com/users/rotten/gists{/gist_id}", "starred_url": "https://api.github.com/users/rotten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rotten/subscriptions", "organizations_url": "https://api.github.com/users/rotten/orgs", "repos_url": "https://api.github.com/users/rotten/repos", "events_url": "https://api.github.com/users/rotten/events{/privacy}", "received_events_url": "https://api.github.com/users/rotten/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354975, "node_id": "MDU6TGFiZWwzMzU0OTc1", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-02-06T14:45:14Z", "updated_at": "2015-02-06T16:08:14Z", "closed_at": "2015-02-06T15:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unfortunately, some XML parsers (ie, third party API's) require the XML elements to be in a specific order.\n\nxmltodict.unparse() scrambles the orders of the elements.\n\nI built my elements, and all of the inner elements with OrderedDict()'s, before passing it to unparse, but it didn't seem to help at all.\n\nI saw an old issue where someone was complaining about this, and that it had apparently been resolved by a patch.  However that feature doesn't seem to be in the current code base.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/84", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/84/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/84/events", "html_url": "https://github.com/martinblech/xmltodict/issues/84", "id": 55573603, "node_id": "MDU6SXNzdWU1NTU3MzYwMw==", "number": 84, "title": "My output has random list element before OrderedDict... ", "user": {"login": "xtiansimon", "id": 279308, "node_id": "MDQ6VXNlcjI3OTMwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/279308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtiansimon", "html_url": "https://github.com/xtiansimon", "followers_url": "https://api.github.com/users/xtiansimon/followers", "following_url": "https://api.github.com/users/xtiansimon/following{/other_user}", "gists_url": "https://api.github.com/users/xtiansimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtiansimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtiansimon/subscriptions", "organizations_url": "https://api.github.com/users/xtiansimon/orgs", "repos_url": "https://api.github.com/users/xtiansimon/repos", "events_url": "https://api.github.com/users/xtiansimon/events{/privacy}", "received_events_url": "https://api.github.com/users/xtiansimon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-27T04:05:24Z", "updated_at": "2015-01-27T14:55:02Z", "closed_at": "2015-01-27T14:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm experiencing some odd list elements randomly inserted in my xmltodict output. I'm working to parse xml data from Wikipedia into a dictionary, so I can extract content elements and return a .csv file. I found xmltodict on StackOv. Problem is my output has random list element before OrderedDict and it's messing up my searching the tree. \n\nI'm something of a forever noob programmer, so maybe I've done something wrong. To troubleshoot the problem I ended up trimming down the original XML file I was working with. You can see this in the XML file below. To keep it simple and not create a lot of ouput files, I simply sent the output of xmltodict to the screen. Once that was working,\n\n```\n11 import xmltodict\n12 import os\n13 import sys\n14 infile = sys.argv[1]\n18 f = open(infile, 'r')\n20 FileDict = xmltodict.parse(f)\n22 print(FileDict)\n24 f.close()\n```\n\nI directed this to a new file on the command line (linux).\n     $ python2 myparse.py meso.xml >> meso.dict\n\nWhen my helper function kept failing, I started walking through the output from xmltodict, and manually breaking the lines so I could figure out what kind of loop structure I needed. (I've never worked with OrderedDict before.) That's when I found a list element which should be just an OrderedDict:\n\n```\n(u'namespaces', OrderedDict([\n                         (u'namespace', [OrderedDict([\n                                        ^\n```\n\nI thought I might have accidentally added this element, so did everything again. Downloaded the content (Wikipedia Special Export), trimmed out 700k lines down to 60 by just including one `<revision>` block of XML. I even used my IDE's jump from the top `<page>` element to the closing tag on the bottom of the XML to make sure I didn't cut out something important (as well as I can tell, the wikimedia Special:Export XML output consists of 45 lines at the top and 2 end tags at the bottom with block after block of `<revision>`) \n\nWhen I realized this list element is not in the same place after the second try, I thought to post this here. Sorry for the long winded, untechnical explanation. \n\nXML: http://pastebin.com/vnMj3S1h\nXMLTODICT: http://pastebin.com/azU78nq0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/83", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/83/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/83/events", "html_url": "https://github.com/martinblech/xmltodict/issues/83", "id": 54858894, "node_id": "MDU6SXNzdWU1NDg1ODg5NA==", "number": 83, "title": "Confusion using defaultdict as dict_constructor", "user": {"login": "carmstrong", "id": 536009, "node_id": "MDQ6VXNlcjUzNjAwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/536009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmstrong", "html_url": "https://github.com/carmstrong", "followers_url": "https://api.github.com/users/carmstrong/followers", "following_url": "https://api.github.com/users/carmstrong/following{/other_user}", "gists_url": "https://api.github.com/users/carmstrong/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmstrong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmstrong/subscriptions", "organizations_url": "https://api.github.com/users/carmstrong/orgs", "repos_url": "https://api.github.com/users/carmstrong/repos", "events_url": "https://api.github.com/users/carmstrong/events{/privacy}", "received_events_url": "https://api.github.com/users/carmstrong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354975, "node_id": "MDU6TGFiZWwzMzU0OTc1", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-20T09:08:49Z", "updated_at": "2015-01-26T17:29:57Z", "closed_at": "2015-01-20T23:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks,\n\nI'm converting an XML document with a lot of optional children, and I'd rather not wrap all of my indexes in a `try` block to `except KeyError` and return an empty string. For example, I want:\n\n```\nres['foo']['bar']['might']['exist']\n```\n\nto simply return `''` instead of throwing a `KeyError`. \n\nWhat I'm really trying to achieve is for keys not found in the resulting dict to just be empty strings. I found the discussion over in #14 regarding Python's `defaultdict` and thought it was relevant, so I tried using it in my code:\n\n```\nres = xmltodict.parse(xml, dict_constructor=lambda *args, **kwargs: defaultdict(str, *args, **kwargs))\n```\n\nAnd it works quite well for values that are not in the resulting dict, but for values which are, I'm getting:\n\n```\nTypeError: list indices must be integers, not str\n```\n\nPerhaps this is confusion with Python, or maybe xmltodict, but from reading the defaultdict [documentation](https://docs.python.org/2/library/collections.html#collections.defaultdict) I thought that this default constructor only applies to _missing_ values, not _all_ values: \"This method is called by the **getitem**() method of the dict class when the requested key is not found; whatever it returns or raises is then returned or raised by **getitem**().\".\n\nCould someone shed some light here? Thanks so much!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/80", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/80/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/80/events", "html_url": "https://github.com/martinblech/xmltodict/issues/80", "id": 54678162, "node_id": "MDU6SXNzdWU1NDY3ODE2Mg==", "number": 80, "title": "Parameter to Disable Multiple Root Check", "user": {"login": "JKillian", "id": 1400151, "node_id": "MDQ6VXNlcjE0MDAxNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JKillian", "html_url": "https://github.com/JKillian", "followers_url": "https://api.github.com/users/JKillian/followers", "following_url": "https://api.github.com/users/JKillian/following{/other_user}", "gists_url": "https://api.github.com/users/JKillian/gists{/gist_id}", "starred_url": "https://api.github.com/users/JKillian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JKillian/subscriptions", "organizations_url": "https://api.github.com/users/JKillian/orgs", "repos_url": "https://api.github.com/users/JKillian/repos", "events_url": "https://api.github.com/users/JKillian/events{/privacy}", "received_events_url": "https://api.github.com/users/JKillian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-17T22:40:56Z", "updated_at": "2015-02-11T04:02:17Z", "closed_at": "2015-01-18T15:36:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to convert a dict to an xml snippet, but this xml snippet is just supposed to be part of a later full document, so it may or may not have one root element. Unfortunately a ValueError is thrown if there is more than one possible root element - it would be great if there was a keyword parameter to disable that check. (Or perhaps when `full_document=False`)\n\nSo for example:\n\n``` python\nxmltodict.unparse({'node': [1,2,3]}, full_document=False)\n\n# would produce something like this without throwing an error:\n\"\"\"<node>1</node>\n<node>2</node>\n<node>3</node>\n\"\"\"\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/79", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/79/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/79/events", "html_url": "https://github.com/martinblech/xmltodict/issues/79", "id": 54246702, "node_id": "MDU6SXNzdWU1NDI0NjcwMg==", "number": 79, "title": "Stop Parsing at Some Level or Exclude Tags", "user": {"login": "beyondai", "id": 2845958, "node_id": "MDQ6VXNlcjI4NDU5NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2845958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beyondai", "html_url": "https://github.com/beyondai", "followers_url": "https://api.github.com/users/beyondai/followers", "following_url": "https://api.github.com/users/beyondai/following{/other_user}", "gists_url": "https://api.github.com/users/beyondai/gists{/gist_id}", "starred_url": "https://api.github.com/users/beyondai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beyondai/subscriptions", "organizations_url": "https://api.github.com/users/beyondai/orgs", "repos_url": "https://api.github.com/users/beyondai/repos", "events_url": "https://api.github.com/users/beyondai/events{/privacy}", "received_events_url": "https://api.github.com/users/beyondai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-13T20:53:23Z", "updated_at": "2015-01-13T21:11:57Z", "closed_at": "2015-01-13T21:11:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is for better formatting before I saw your reply.\nSorry for the repost~\n\nThe issue I have is that current parsing breaks the original text. For example:\n\nInput:\n\n``` xml\n<ABSTRACT>\nBorn: 22 July 1992 Selena <KW>Gomez</KW>\nis an American actress and singer who has been working in the industry for quite some time, but is       best known for her role as Alex\n</ABSTRACT>\n```\n\nso the \"KW\" tag is a markup for import words\nDesired output is:\n\n``` xml\nKey: \"abstract\"\nValue: \"Born: 22 July 1992 Selena <KW>Gomez</KW>\nis an American actress and singer who has been working in the industry for quite some time, but is best known for her role as Alex\"\nThen we can do further processing as needed.\n```\n\nHowever, currently xmltodict gives this result:\n(u'ABSTRACT', OrderedDict([(u'KW', u'Gomez'), ('#text', u'Born: 22 July 1992 Selena  is an American actress and singer who has been working in the industry for quite some time, but is best known for her role as Alex')]))\nIt extracts \"Gomez\" from the original text and we can not recover its original position in the text.\n\nIs there a way to address this kind of issue?\n\nThanks,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/78", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/78/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/78/events", "html_url": "https://github.com/martinblech/xmltodict/issues/78", "id": 54245511, "node_id": "MDU6SXNzdWU1NDI0NTUxMQ==", "number": 78, "title": "Stop Parsing at Some Level or Exclude Tags", "user": {"login": "beyondai", "id": 2845958, "node_id": "MDQ6VXNlcjI4NDU5NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2845958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beyondai", "html_url": "https://github.com/beyondai", "followers_url": "https://api.github.com/users/beyondai/followers", "following_url": "https://api.github.com/users/beyondai/following{/other_user}", "gists_url": "https://api.github.com/users/beyondai/gists{/gist_id}", "starred_url": "https://api.github.com/users/beyondai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beyondai/subscriptions", "organizations_url": "https://api.github.com/users/beyondai/orgs", "repos_url": "https://api.github.com/users/beyondai/repos", "events_url": "https://api.github.com/users/beyondai/events{/privacy}", "received_events_url": "https://api.github.com/users/beyondai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-13T20:43:26Z", "updated_at": "2015-01-13T21:11:06Z", "closed_at": "2015-01-13T20:49:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "The issue I have is that current parsing breaks the original text. For example:\n\nInput:\n\n``` xml\n<ABSTRACT>\nBorn: 22 July 1992 Selena <KW>Gomez</KW>\nis an American actress and singer who has been working in the industry for quite some time, but is       best known for her role as Alex\n</ABSTRACT>\n```\n\nso the \"KW\" tag is a markup for import words\nDesired output is:\n\n``` xml\nKey: \"abstract\"\nValue: \"Born: 22 July 1992 Selena <KW>Gomez</KW>\nis an American actress and singer who has been working in the industry for quite some time, but is best known for her role as Alex\"\nThen we can do further processing as needed.\n```\n\nHowever, currently xmltodict gives this result:\n(u'ABSTRACT', OrderedDict([(u'KW', u'Gomez'), ('#text', u'Born: 22 July 1992 Selena  is an American actress and singer who has been working in the industry for quite some time, but is best known for her role as Alex')]))\nIt extracts \"Gomez\" from the original text and we can not recover its original position in the text.\n\nIs there a way to address this kind of issue?\n\nThanks,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/77", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/77/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/77/events", "html_url": "https://github.com/martinblech/xmltodict/issues/77", "id": 52988864, "node_id": "MDU6SXNzdWU1Mjk4ODg2NA==", "number": 77, "title": "Python 3 issue", "user": {"login": "jabbalaci", "id": 694081, "node_id": "MDQ6VXNlcjY5NDA4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/694081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jabbalaci", "html_url": "https://github.com/jabbalaci", "followers_url": "https://api.github.com/users/jabbalaci/followers", "following_url": "https://api.github.com/users/jabbalaci/following{/other_user}", "gists_url": "https://api.github.com/users/jabbalaci/gists{/gist_id}", "starred_url": "https://api.github.com/users/jabbalaci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jabbalaci/subscriptions", "organizations_url": "https://api.github.com/users/jabbalaci/orgs", "repos_url": "https://api.github.com/users/jabbalaci/repos", "events_url": "https://api.github.com/users/jabbalaci/events{/privacy}", "received_events_url": "https://api.github.com/users/jabbalaci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-28T15:52:25Z", "updated_at": "2017-01-31T16:59:51Z", "closed_at": "2014-12-29T18:09:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Under Python 3.4.2 I get an error:\n\nXML input:\n\n```\n<?xml version=\"1.0\"?>\n<note>\n  <to>Tove</to>\n  <from>Jani</from>\n  <heading>Reminder</heading>\n  <body>Don't forget me this weekend!</body>\n</note>\n```\n\nPython snippet:\n\n```\nwith open(xml_file) as f:\n    d = xmltodict.parse(f, xml_attribs=True)\n```\n\nError message:\n\n```\nTraceback (most recent call last):\n  File \"/usr/lib/python3.4/site-packages/xmltodict.py\", line 246, in parse\n    parser.ParseFile(xml_input)\nTypeError: read() did not return a bytes object (type=str)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"./xml2json.py\", line 27, in <module>\n    print(convert(sys.argv[1]))\n  File \"./xml2json.py\", line 17, in convert\n    d = xmltodict.parse(f, xml_attribs=xml_attribs)\n  File \"/usr/lib/python3.4/site-packages/xmltodict.py\", line 248, in parse\n    parser.Parse(xml_input, True)\nTypeError: '_io.TextIOWrapper' does not support the buffer interface\n```\n\nUnder Python 2.7 this example works fine.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/76", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/76/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/76/events", "html_url": "https://github.com/martinblech/xmltodict/issues/76", "id": 49382561, "node_id": "MDU6SXNzdWU0OTM4MjU2MQ==", "number": 76, "title": "Not handling nil values", "user": {"login": "arikscore", "id": 4019260, "node_id": "MDQ6VXNlcjQwMTkyNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4019260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arikscore", "html_url": "https://github.com/arikscore", "followers_url": "https://api.github.com/users/arikscore/followers", "following_url": "https://api.github.com/users/arikscore/following{/other_user}", "gists_url": "https://api.github.com/users/arikscore/gists{/gist_id}", "starred_url": "https://api.github.com/users/arikscore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arikscore/subscriptions", "organizations_url": "https://api.github.com/users/arikscore/orgs", "repos_url": "https://api.github.com/users/arikscore/repos", "events_url": "https://api.github.com/users/arikscore/events{/privacy}", "received_events_url": "https://api.github.com/users/arikscore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354977, "node_id": "MDU6TGFiZWwzMzU0OTc3", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-19T12:42:43Z", "updated_at": "2019-02-07T00:06:50Z", "closed_at": "2014-11-19T13:46:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "when parsing a node with a nil value:\n`<example xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:nil=\"true\" />`\n\nWe get this result:\n`OrderedDict([(u'@http://www.w3.org/2001/XMLSchema-instance:nil', u'true')])`\n\nI think it should actually return None or something of that form.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/75", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/75/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/75/events", "html_url": "https://github.com/martinblech/xmltodict/issues/75", "id": 48562899, "node_id": "MDU6SXNzdWU0ODU2Mjg5OQ==", "number": 75, "title": "TypeError: string indices must be integers", "user": {"login": "a-x-", "id": 6201068, "node_id": "MDQ6VXNlcjYyMDEwNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6201068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-x-", "html_url": "https://github.com/a-x-", "followers_url": "https://api.github.com/users/a-x-/followers", "following_url": "https://api.github.com/users/a-x-/following{/other_user}", "gists_url": "https://api.github.com/users/a-x-/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-x-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-x-/subscriptions", "organizations_url": "https://api.github.com/users/a-x-/orgs", "repos_url": "https://api.github.com/users/a-x-/repos", "events_url": "https://api.github.com/users/a-x-/events{/privacy}", "received_events_url": "https://api.github.com/users/a-x-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-12T21:10:48Z", "updated_at": "2014-11-16T11:31:30Z", "closed_at": "2014-11-16T11:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "// Excuse my beginner's English\n\nHi, guys!\nI have a trouble...\n\nMy XML:\n`http://images.galser.ru/Galser.xml`\n\nMy code:\n\n``` python\nxml = open('./Galser.xml', 'r')\nimport xmltodict\ndoc = xmltodict.parse(xml.read())\nprint(doc['yml_catalog']['shop']['name']['#text'])\n```\n\nException:\n`TypeError: string indices must be integers`\n\nI have not any ideas now...\n\np.s. I use python3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/74", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/74/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/74/events", "html_url": "https://github.com/martinblech/xmltodict/issues/74", "id": 47179889, "node_id": "MDU6SXNzdWU0NzE3OTg4OQ==", "number": 74, "title": "Streaming mode: More elaboration would be great", "user": {"login": "kmonsoor", "id": 1219418, "node_id": "MDQ6VXNlcjEyMTk0MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1219418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmonsoor", "html_url": "https://github.com/kmonsoor", "followers_url": "https://api.github.com/users/kmonsoor/followers", "following_url": "https://api.github.com/users/kmonsoor/following{/other_user}", "gists_url": "https://api.github.com/users/kmonsoor/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmonsoor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmonsoor/subscriptions", "organizations_url": "https://api.github.com/users/kmonsoor/orgs", "repos_url": "https://api.github.com/users/kmonsoor/repos", "events_url": "https://api.github.com/users/kmonsoor/events{/privacy}", "received_events_url": "https://api.github.com/users/kmonsoor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-29T17:42:17Z", "updated_at": "2018-07-11T12:26:10Z", "closed_at": "2018-07-11T12:26:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The details on the \"Stream mode\" is quite skimpy. As handling huge files is quite a bit challenging, it would be great some more examples and parameter details. A lot of trial-and-error effort could be saved.\n\nfor example,\n\n```\n>>> def handle_artist(_, artist):\n...     print artist['name']\n...     return True\n>>> \n>>> xmltodict.parse(GzipFile('discogs_artists.xml.gz'),\n...     item_depth=2, item_callback=handle_artist)\nA Perfect Circle\nFant\u00f4mas\n```\n\nWho never worked with GZip module, it would be pretty tough to guess, from where **GzipFile** came from. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/73", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/73/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/73/events", "html_url": "https://github.com/martinblech/xmltodict/issues/73", "id": 46715378, "node_id": "MDU6SXNzdWU0NjcxNTM3OA==", "number": 73, "title": "elements should always be lists", "user": {"login": "karantan", "id": 7062631, "node_id": "MDQ6VXNlcjcwNjI2MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7062631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karantan", "html_url": "https://github.com/karantan", "followers_url": "https://api.github.com/users/karantan/followers", "following_url": "https://api.github.com/users/karantan/following{/other_user}", "gists_url": "https://api.github.com/users/karantan/gists{/gist_id}", "starred_url": "https://api.github.com/users/karantan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karantan/subscriptions", "organizations_url": "https://api.github.com/users/karantan/orgs", "repos_url": "https://api.github.com/users/karantan/repos", "events_url": "https://api.github.com/users/karantan/events{/privacy}", "received_events_url": "https://api.github.com/users/karantan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3354973, "node_id": "MDU6TGFiZWwzMzU0OTcz", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 3354977, "node_id": "MDU6TGFiZWwzMzU0OTc3", "url": "https://api.github.com/repos/martinblech/xmltodict/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-24T08:33:32Z", "updated_at": "2014-10-24T14:46:04Z", "closed_at": "2014-10-24T14:46:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "when you parse xml: http://pastebin.com/JyXLJzPN\nobj[\"Responses\"][\"ExtraRS\"][\"ExtraInfo\"] will be OrderedDict\n\nbut if you parse http://pastebin.com/afYUVR7J\nobj[\"Responses\"][\"ExtraRS\"][\"ExtraInfo\"] will be list (list of OrderedDicts)\n\nelements should always be lists even if there is only 1 element. because of the nature of XML structure. you can not know when you will get 1 element or when you will get many. \n\nthe problem occurs when you do the for loop. when you get many elements it is OK but when you receive only 1 elemtn you get OrderedDict when you parse this data.\nAnd when you loop through this OrderedDict you will loop through keys of this dict...\n\nBR,\nkarantan[AT]gmail.com\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/72", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/72/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/72/events", "html_url": "https://github.com/martinblech/xmltodict/issues/72", "id": 45550909, "node_id": "MDU6SXNzdWU0NTU1MDkwOQ==", "number": 72, "title": "Accessing child elements as an iterable", "user": {"login": "garyjohnson", "id": 1094704, "node_id": "MDQ6VXNlcjEwOTQ3MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1094704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyjohnson", "html_url": "https://github.com/garyjohnson", "followers_url": "https://api.github.com/users/garyjohnson/followers", "following_url": "https://api.github.com/users/garyjohnson/following{/other_user}", "gists_url": "https://api.github.com/users/garyjohnson/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyjohnson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyjohnson/subscriptions", "organizations_url": "https://api.github.com/users/garyjohnson/orgs", "repos_url": "https://api.github.com/users/garyjohnson/repos", "events_url": "https://api.github.com/users/garyjohnson/events{/privacy}", "received_events_url": "https://api.github.com/users/garyjohnson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-11T13:20:31Z", "updated_at": "2014-10-11T13:21:59Z", "closed_at": "2014-10-11T13:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm struggling with a case where I have child elements that can be 1 or n, and it seems the case for handling both are different. For instance:\n\n```\n<foo>\n    <bar a='1'/>\n    <bar a='2'/>\n</foo>\n```\n\nCan be accessed like so:\n\n```\n# iterates over all bar elements\nfor single_bar in xml['foo']['bar']:\n    a = single_bar['@a']\n```\n\nAnd that's great. However, in the case there is only one bar:\n\n```\n<foo>\n    <bar a='1'/>\n</foo>\n```\n\n['bar'] returns the single bar instead of a list of one. Then it uses that dict as the iterable.\n\n```\n# returns single bar element as iterable\nfor single_bar in xml['foo']['bar']:\n     # single_bar is actually the key of the first attribute in bar dict, @a.\n```\n\nHow do you normally handle this case without writing some gross code?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/71", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/71/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/71/events", "html_url": "https://github.com/martinblech/xmltodict/issues/71", "id": 45390155, "node_id": "MDU6SXNzdWU0NTM5MDE1NQ==", "number": 71, "title": "Missing Closing Tag When Pretty-Printing", "user": {"login": "Telofy", "id": 223663, "node_id": "MDQ6VXNlcjIyMzY2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/223663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Telofy", "html_url": "https://github.com/Telofy", "followers_url": "https://api.github.com/users/Telofy/followers", "following_url": "https://api.github.com/users/Telofy/following{/other_user}", "gists_url": "https://api.github.com/users/Telofy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Telofy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Telofy/subscriptions", "organizations_url": "https://api.github.com/users/Telofy/orgs", "repos_url": "https://api.github.com/users/Telofy/repos", "events_url": "https://api.github.com/users/Telofy/events{/privacy}", "received_events_url": "https://api.github.com/users/Telofy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-09T16:54:03Z", "updated_at": "2014-10-15T19:16:09Z", "closed_at": "2014-10-15T15:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I parse and then unparse a certain Atom feed with pretty-printing activated, one opening entry tag absconds. I\u2019ve [created a gist with the Atom feed](https://gist.github.com/Telofy/241ca0d28edaef732153), and here are the steps that reproduce the problem for me (on Python 2.7):\n\n```\n>>> from xmltodict import parse, unparse\n>>> with open('master.atom') as feed:\n...     print unparse(parse(feed.read()), pretty=True)\n```\n\nThe result contains the following section:\n\n```\n<entry>\n    <id>tag:github.com,2008:Grit::Commit/53f3af90949c69f0fd9860200077d039107ef2c2</id>\n    <link type=\"text/html\" rel=\"alternate\" href=\"https://github.com/OParl/specs/commit/53f3af90949c69f0fd9860200077d039107ef2c2\"></link>\n    <title>oparl:Person: title: Beschreibung ge\u00e4ndert</title>\n    <updated>2014-07-12T18:11:25+02:00</updated>\n    <media:thumbnail height=\"30\" width=\"30\" url=\"https://avatars2.githubusercontent.com/u/273727?v=2&amp;s=30\"></media:thumbnail>\n    <author>\n        <name>marians</name>\n        <uri>https://github.com/marians</uri>\n    </author>\n    <content type=\"html\">&lt;pre style='white-space:pre-wrap;width:81ex'&gt;oparl:Person: title: Beschreibung ge\u00e4ndert\n\nString an erste Stelle&lt;/pre&gt;</content>\n</entry>\n    <id>tag:github.com,2008:Grit::Commit/2e9098efe0a1a6bcd76cfa7f4fedc3060b5119de</id>\n    <link type=\"text/html\" rel=\"alternate\" href=\"https://github.com/OParl/specs/commit/2e9098efe0a1a6bcd76cfa7f4fedc3060b5119de\"></link>\n    <title>oparl:Person: genier Funktionsweise ge\u00e4ndert</title>\n    <updated>2014-07-12T18:10:41+02:00</updated>\n    <media:thumbnail height=\"30\" width=\"30\" url=\"https://avatars2.githubusercontent.com/u/273727?v=2&amp;s=30\"></media:thumbnail>\n    <author>\n        <name>marians</name>\n        <uri>https://github.com/marians</uri>\n    </author>\n    <content type=\"html\">&lt;pre style='white-space:pre-wrap;width:81ex'&gt;oparl:Person: genier Funktionsweise ge\u00e4ndert\n\nAngeglichen mit anderen Eigenschaften, die Vokabulare zur\nKlassifizierung nutzen.&lt;/pre&gt;</content>\n</entry>\n```\n\nThe problem does not seem to occur without the pretty-printing.\n\nMany thanks for the lovely library!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/70", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/70/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/70/events", "html_url": "https://github.com/martinblech/xmltodict/issues/70", "id": 43318254, "node_id": "MDU6SXNzdWU0MzMxODI1NA==", "number": 70, "title": "_emit skips rendering empty list/tuples", "user": {"login": "pySilver", "id": 1113925, "node_id": "MDQ6VXNlcjExMTM5MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1113925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pySilver", "html_url": "https://github.com/pySilver", "followers_url": "https://api.github.com/users/pySilver/followers", "following_url": "https://api.github.com/users/pySilver/following{/other_user}", "gists_url": "https://api.github.com/users/pySilver/gists{/gist_id}", "starred_url": "https://api.github.com/users/pySilver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pySilver/subscriptions", "organizations_url": "https://api.github.com/users/pySilver/orgs", "repos_url": "https://api.github.com/users/pySilver/repos", "events_url": "https://api.github.com/users/pySilver/events{/privacy}", "received_events_url": "https://api.github.com/users/pySilver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-09-20T19:54:18Z", "updated_at": "2014-11-19T13:47:11Z", "closed_at": "2014-11-19T13:47:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nThanks for handy utility!\n\nI've noticed that _emit ignores empty lists/tuples, so they wouldn't be rendered to xml. That would be handy to have a workaround for this. Issue happens here:\n\nhttps://github.com/martinblech/xmltodict/blob/master/xmltodict.py#L269\n\nan empty list or tuple simply won't iterate.\n\n``` python\nIn [11]: xmltodict.unparse({'item': {\n'foo': 'bar',\n'baz': [],\n}}, full_document=False)\nOut[11]: u'<item><foo>bar</foo></item>'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/69", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/69/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/69/events", "html_url": "https://github.com/martinblech/xmltodict/issues/69", "id": 42044215, "node_id": "MDU6SXNzdWU0MjA0NDIxNQ==", "number": 69, "title": "No attributes when using streaming, item_depth and item_callback", "user": {"login": "werat", "id": 241450, "node_id": "MDQ6VXNlcjI0MTQ1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/241450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/werat", "html_url": "https://github.com/werat", "followers_url": "https://api.github.com/users/werat/followers", "following_url": "https://api.github.com/users/werat/following{/other_user}", "gists_url": "https://api.github.com/users/werat/gists{/gist_id}", "starred_url": "https://api.github.com/users/werat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/werat/subscriptions", "organizations_url": "https://api.github.com/users/werat/orgs", "repos_url": "https://api.github.com/users/werat/repos", "events_url": "https://api.github.com/users/werat/events{/privacy}", "received_events_url": "https://api.github.com/users/werat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-05T13:05:05Z", "updated_at": "2014-09-09T00:21:30Z", "closed_at": "2014-09-09T00:21:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose we have some xml:\n\n``` xml\n<items>\n    <item attr='hello'>\n        <inner>value</inner>\n        <inner2>value2</inner2>\n    </item>\n</items>\n```\n\nNow we parse it:\n\n``` python\nxmltodict.parse(open(xmlfile))\n>>> OrderedDict([(u'items', OrderedDict([(u'item', OrderedDict([(u'@attr', u'hello'), (u'inner', u'value'), (u'inner2', u'value2')]))]))])\n```\n\nEverything seems fine, we have everything we expect.\n\nBut if we use item_depth and item_callback, we'll have some problems:\n\n``` python\ndef cb(_, item):\n    print item\n\nxmltodict.parse(open(xmlfile), item_depth=2, item_callback=cb)\n>>> OrderedDict([(u'inner', u'value'), (u'inner2', u'value2')])\n```\n\nAs you can see, in second example we've lost `attr=\"hello\"`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/68", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/68/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/68/events", "html_url": "https://github.com/martinblech/xmltodict/issues/68", "id": 39155713, "node_id": "MDU6SXNzdWUzOTE1NTcxMw==", "number": 68, "title": "Recent xml2dict installation failed with the following", "user": {"login": "imkin", "id": 2793249, "node_id": "MDQ6VXNlcjI3OTMyNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2793249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imkin", "html_url": "https://github.com/imkin", "followers_url": "https://api.github.com/users/imkin/followers", "following_url": "https://api.github.com/users/imkin/following{/other_user}", "gists_url": "https://api.github.com/users/imkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/imkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imkin/subscriptions", "organizations_url": "https://api.github.com/users/imkin/orgs", "repos_url": "https://api.github.com/users/imkin/repos", "events_url": "https://api.github.com/users/imkin/events{/privacy}", "received_events_url": "https://api.github.com/users/imkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-31T01:53:17Z", "updated_at": "2014-07-31T01:55:37Z", "closed_at": "2014-07-31T01:55:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "  Running setup.py egg_info for package xml2dict\n    Traceback (most recent call last):\n      File \"<string>\", line 16, in <module>\n      File \"/myproj/virtualenv/build/xml2dict/setup.py\", line 14, in <module>\n        long_description=open('README.md').read())\n    IOError: [Errno 2] No such file or directory: 'README.md'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"/myproj/virtualenv/build/xml2dict/setup.py\", line 14, in <module>\n\n```\nlong_description=open('README.md').read())\n```\n\npython 2.7.5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/67", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/67/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/67/events", "html_url": "https://github.com/martinblech/xmltodict/issues/67", "id": 37571665, "node_id": "MDU6SXNzdWUzNzU3MTY2NQ==", "number": 67, "title": "odd parse for same xml structure", "user": {"login": "ZoomQuiet", "id": 22494, "node_id": "MDQ6VXNlcjIyNDk0", "avatar_url": "https://avatars2.githubusercontent.com/u/22494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZoomQuiet", "html_url": "https://github.com/ZoomQuiet", "followers_url": "https://api.github.com/users/ZoomQuiet/followers", "following_url": "https://api.github.com/users/ZoomQuiet/following{/other_user}", "gists_url": "https://api.github.com/users/ZoomQuiet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZoomQuiet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZoomQuiet/subscriptions", "organizations_url": "https://api.github.com/users/ZoomQuiet/orgs", "repos_url": "https://api.github.com/users/ZoomQuiet/repos", "events_url": "https://api.github.com/users/ZoomQuiet/events{/privacy}", "received_events_url": "https://api.github.com/users/ZoomQuiet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-07-10T15:07:37Z", "updated_at": "2014-07-28T01:49:58Z", "closed_at": "2014-07-27T16:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Example\n\n```\nIn [1]: import xmltodict\nIn [2]: rdf = '''\n   ...:   <RDF:Seq RDF:about=\"urn:scrapbook:item20070113201921\">\n   ...:     <RDF:li RDF:resource=\"urn:scrapbook:item20070113201940\"/>\n   ...:   </RDF:Seq>\n   ...: '''\n\nIn [3]: doc = xmltodict.parse(rdf)\n\nIn [6]: rdf2='''  <RDF:Seq RDF:about=\"urn:scrapbook:item20070113201921\">\n   ...:     <RDF:li RDF:resource=\"urn:scrapbook:item20070113201940\"/>\n   ...:     <RDF:li RDF:resource=\"urn:scrapbook:item20070113201941\"/>\n   ...:   </RDF:Seq>\n   ...: '''\n\nIn [7]: doc2=xmltodict.parse(rdf2)\n\nIn [8]: doc['RDF:Seq']['RDF:li']\nOut[8]: OrderedDict([(u'@RDF:resource', u'urn:scrapbook:item20070113201940')])\n\nIn [9]: doc2['RDF:Seq']['RDF:li']\nOut[9]:\n[OrderedDict([(u'@RDF:resource', u'urn:scrapbook:item20070113201940')]),\n OrderedDict([(u'@RDF:resource', u'urn:scrapbook:item20070113201941')])]\n\n```\n# Problem\n\nwhen i enjoy the great lib.\n\ndiscover this:\n- iff sub. node only one\n- `parse()` will make one obj., NOT the list\n\nso means when i walk big xml, had to judge the sub nodes quantity ,\nhad to usage different code!\n\nsuch as:\n\n```\nfor li in SOME_XML[..]['RDF:li']:\n    print li\n    ...\n```\n\ncan not working, i must fixed as:\n\n```\nif 1 == SOME_XML[..]['RDF:li']:\n    print SOME_XML[..]['RDF:li']\nelse:\n    for li in SOME_XML[..]['RDF:li']:\n        print li\n        ...\n```\n\nthat is not pythonic\n# Hope\n\nif all case,is make list obj. \n\nthat is better\n\nthanx for all\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/66", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/66/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/66/events", "html_url": "https://github.com/martinblech/xmltodict/issues/66", "id": 36838066, "node_id": "MDU6SXNzdWUzNjgzODA2Ng==", "number": 66, "title": "Namespaces Bug", "user": {"login": "taylormattison", "id": 7724318, "node_id": "MDQ6VXNlcjc3MjQzMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7724318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taylormattison", "html_url": "https://github.com/taylormattison", "followers_url": "https://api.github.com/users/taylormattison/followers", "following_url": "https://api.github.com/users/taylormattison/following{/other_user}", "gists_url": "https://api.github.com/users/taylormattison/gists{/gist_id}", "starred_url": "https://api.github.com/users/taylormattison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taylormattison/subscriptions", "organizations_url": "https://api.github.com/users/taylormattison/orgs", "repos_url": "https://api.github.com/users/taylormattison/repos", "events_url": "https://api.github.com/users/taylormattison/events{/privacy}", "received_events_url": "https://api.github.com/users/taylormattison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-30T20:58:16Z", "updated_at": "2014-07-28T14:19:06Z", "closed_at": "2014-07-27T17:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The second half of the Namespace Support example in the Readme file does not properly replace namespaces as displayed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/64", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/64/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/64/events", "html_url": "https://github.com/martinblech/xmltodict/issues/64", "id": 34832669, "node_id": "MDU6SXNzdWUzNDgzMjY2OQ==", "number": 64, "title": "Support for object member names that are not valid XML element names, & etc.", "user": {"login": "CamyDee", "id": 6092785, "node_id": "MDQ6VXNlcjYwOTI3ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6092785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CamyDee", "html_url": "https://github.com/CamyDee", "followers_url": "https://api.github.com/users/CamyDee/followers", "following_url": "https://api.github.com/users/CamyDee/following{/other_user}", "gists_url": "https://api.github.com/users/CamyDee/gists{/gist_id}", "starred_url": "https://api.github.com/users/CamyDee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CamyDee/subscriptions", "organizations_url": "https://api.github.com/users/CamyDee/orgs", "repos_url": "https://api.github.com/users/CamyDee/repos", "events_url": "https://api.github.com/users/CamyDee/events{/privacy}", "received_events_url": "https://api.github.com/users/CamyDee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-03T05:10:36Z", "updated_at": "2014-07-10T16:04:04Z", "closed_at": "2014-07-01T03:01:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose I want an end-result like so:\n\n``` python\n'Top': {\n    'One_Thing': 'The first thing',\n    'Two Thing': 'The second thing'\n    27:'And another thing'\n}\n```\n\nThis is only possible if the XML looks like this:\n\n``` XML\n<Top>\n    <One_Thing>The first thing</One_Thing>\n    <Two Thing>The second thing</Two Thing>\n    <27>And another thing</27>\n</Top>\n```\n\n...which is of course, invalid XML.  Element names cannot contain spaces, and there are other characters which are completely valid in a Python dict but are not valid in an XML element name.  Element names cannot be numbers either. This limits the use and applicability of this library.\n\nAnother approach:\n\n``` XML\n<Top>\n    <thing name=\"One Thing\">The first thing</thing>\n    <thing name=\"Two Thing\">The second thing</thing>\n    <thing name=\"27\">And another thing</thing>\n</Top>\n```\n\nalso does not work, because the @name values come out as '@name' and the actual strings come out as #text... nobody wants that. Further, these come out as an array under the name 'thing' - which was not really the intent.\n\nI propose a solution which allows the caller to 'annotate' the XML to define the manner in which the dict is generated. This would enable the generator of the XML to direct the library in ways that are heretofore simply assumptions.  \n\nConsider:\n\n``` XML\n<Top>\n    <One_Thing _x2d_name=\"One Thing\">The first thing</One_Thing>\n    <Two_Thing _x2d_name=\"Two Thing\">The second thing</Two_Thing>\n    <Ano_Thing _x2d_name=\"27\">And another thing</Ano_Thing>\n</Top>\n```\n\nthis annotation attribute could be 'sniffed' by the xmltodict library and understood as a directive to rename the generated element to a value which can easily be stored in an attribute, but which could not otherwise have been in the element name.\n\nThis approach, I would argue, could also be used to help xmltodict generate dictionaries more like users want without having to implement complex post-processing methods. \n\nFor instance:\n\n``` XML\n<Top>\n    <Jan _x2d_type=\"float\">37</Jan>\n    <Feb _x2d_type=\"float\">-42.8</Feb>\n</Top>\n```\n\ncould be used to cause xmltodict to convert the text to a particular python type that is not a string. Currently, this must be done with post-processing. \n\nThere are other common operations which might be valuable additions to this - like converting a comma-separated list to an actual array... \n\nWithout turning this into a full product map, I'd like to propose that at least these two xmltodict directive attributes be supported:\n\n_x2d_name\n_x2d_type\n\nThese would be the first directive attributes that are really 'meta' processing commands, digested during conversion. Callers could annotate the XML prior to passing it into the processor, therefore avoiding having to write post-processing for common conversion needs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/62", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/62/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/62/events", "html_url": "https://github.com/martinblech/xmltodict/issues/62", "id": 32028629, "node_id": "MDU6SXNzdWUzMjAyODYyOQ==", "number": 62, "title": "PIP install on Windows 7 64-bit fails", "user": {"login": "dgonyier", "id": 7379714, "node_id": "MDQ6VXNlcjczNzk3MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7379714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgonyier", "html_url": "https://github.com/dgonyier", "followers_url": "https://api.github.com/users/dgonyier/followers", "following_url": "https://api.github.com/users/dgonyier/following{/other_user}", "gists_url": "https://api.github.com/users/dgonyier/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgonyier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgonyier/subscriptions", "organizations_url": "https://api.github.com/users/dgonyier/orgs", "repos_url": "https://api.github.com/users/dgonyier/repos", "events_url": "https://api.github.com/users/dgonyier/events{/privacy}", "received_events_url": "https://api.github.com/users/dgonyier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-23T02:46:26Z", "updated_at": "2014-04-24T17:22:20Z", "closed_at": "2014-04-23T23:54:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just installed Python 2.7.6 64-bit on Windows 7 Home Premium and added pip.\n\nWhen I try to pip install xmltodict, I get this stack trace. Looks like the code is hitting a UNICODE BOM mark or something.\n\nC:\\Python27\\Scripts>pip install xmltodict\nDownloading/unpacking xmltodict\n  Downloading xmltodict-0.9.0.tar.gz\nCleaning up...\nException:\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\site-packages\\pip\\basecommand.py\", line 122, in main\n    status = self.run(options, args)\n  File \"C:\\Python27\\lib\\site-packages\\pip\\commands\\install.py\", line 278, in run\n\n```\nrequirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundl\n```\n\ne=self.bundle)\n  File \"C:\\Python27\\lib\\site-packages\\pip\\req.py\", line 1229, in prepare_files\n    req_to_install.run_egg_info()\n  File \"C:\\Python27\\lib\\site-packages\\pip\\req.py\", line 292, in run_egg_info\n    logger.notify('Running setup.py (path:%s) egg_info for package %s' % (self.s\netup_py, self.name))\n  File \"C:\\Python27\\lib\\site-packages\\pip\\req.py\", line 265, in setup_py\n    import setuptools\n  File \"C:\\Python27\\lib\\site-packages\\setuptools__init__.py\", line 12, in <modu\nle>\n    from setuptools.extension import Extension\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\extension.py\", line 7, in <modu\nle>\n    from setuptools.dist import _get_unpatched\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\dist.py\", line 15, in <module>\n    from setuptools.compat import numeric_types, basestring\n  File \"C:\\Python27\\lib\\site-packages\\setuptools\\compat.py\", line 19, in <module\n\n> ```\n> from SimpleHTTPServer import SimpleHTTPRequestHandler\n> ```\n> \n>   File \"C:\\Python27\\lib\\SimpleHTTPServer.py\", line 27, in <module>\n>     class SimpleHTTPRequestHandler(BaseHTTPServer.BaseHTTPRequestHandler):\n>   File \"C:\\Python27\\lib\\SimpleHTTPServer.py\", line 208, in SimpleHTTPRequestHand\n> ler\n>     mimetypes.init() # try to read system mime.types\n>   File \"C:\\Python27\\lib\\mimetypes.py\", line 358, in init\n>     db.read_windows_registry()\n>   File \"C:\\Python27\\lib\\mimetypes.py\", line 258, in read_windows_registry\n>     for subkeyname in enum_types(hkcr):\n>   File \"C:\\Python27\\lib\\mimetypes.py\", line 249, in enum_types\n>     ctype = ctype.encode(default_encoding) # omit in 3.x!\n> UnicodeDecodeError: 'ascii' codec can't decode byte 0xae in position 7: ordinal\n> not in range(128)\n\nStoring debug log for failure in F:\\Users\\Virtus Draco\\pip\\pip.log\n\nC:\\Python27\\Scripts>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/61", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/61/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/61/events", "html_url": "https://github.com/martinblech/xmltodict/issues/61", "id": 31728344, "node_id": "MDU6SXNzdWUzMTcyODM0NA==", "number": 61, "title": "Latest version is not x.x.x :-)", "user": {"login": "sbadia", "id": 420848, "node_id": "MDQ6VXNlcjQyMDg0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/420848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbadia", "html_url": "https://github.com/sbadia", "followers_url": "https://api.github.com/users/sbadia/followers", "following_url": "https://api.github.com/users/sbadia/following{/other_user}", "gists_url": "https://api.github.com/users/sbadia/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbadia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbadia/subscriptions", "organizations_url": "https://api.github.com/users/sbadia/orgs", "repos_url": "https://api.github.com/users/sbadia/repos", "events_url": "https://api.github.com/users/sbadia/events{/privacy}", "received_events_url": "https://api.github.com/users/sbadia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-04-17T13:55:36Z", "updated_at": "2014-04-30T01:58:10Z", "closed_at": "2014-04-17T14:52:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, sorry for this issue,\nbut I'm looking to package xmltodict into Debian, but I've a problem with the latest tag.\nCould your change the `v0.9` to `v0.9.0`\nThanks !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/60", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/60/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/60/events", "html_url": "https://github.com/martinblech/xmltodict/issues/60", "id": 31652710, "node_id": "MDU6SXNzdWUzMTY1MjcxMA==", "number": 60, "title": "consider adding a built-in function to obtain the raw text?", "user": {"login": "fyears", "id": 1142836, "node_id": "MDQ6VXNlcjExNDI4MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1142836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fyears", "html_url": "https://github.com/fyears", "followers_url": "https://api.github.com/users/fyears/followers", "following_url": "https://api.github.com/users/fyears/following{/other_user}", "gists_url": "https://api.github.com/users/fyears/gists{/gist_id}", "starred_url": "https://api.github.com/users/fyears/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fyears/subscriptions", "organizations_url": "https://api.github.com/users/fyears/orgs", "repos_url": "https://api.github.com/users/fyears/repos", "events_url": "https://api.github.com/users/fyears/events{/privacy}", "received_events_url": "https://api.github.com/users/fyears/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-16T15:36:10Z", "updated_at": "2014-04-16T20:22:47Z", "closed_at": "2014-04-16T20:22:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example,\n\n```\n>>> doc = xmltodict.parse(\"\"\"\n... <mydocument has=\"an attribute\">\n...   <and>\n...     <many>elements</many>\n...     <many>more elements</many>\n...   </and>\n...   <plus a=\"complex\">\n...     element as well\n...   </plus>\n... </mydocument>\n... \"\"\")\n>>> \n>>> doc['mydocument']['and']\nOrderedDict([(u'many', [u'elements', u'more elements'])])\n```\n\nI want to obtain the raw text:\n\n```\n>>> magic_raw_text(doc['mydocument']['and'])\nu'<many>elements</many>\\n<many>more elements</many>`\n```\n\nI think a built-in `magic_raw_text()` is useful.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/59", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/59/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/59/events", "html_url": "https://github.com/martinblech/xmltodict/issues/59", "id": 31606965, "node_id": "MDU6SXNzdWUzMTYwNjk2NQ==", "number": 59, "title": "consider adding a built-in function to convert the OrderedDict to simple dict", "user": {"login": "fyears", "id": 1142836, "node_id": "MDQ6VXNlcjExNDI4MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1142836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fyears", "html_url": "https://github.com/fyears", "followers_url": "https://api.github.com/users/fyears/followers", "following_url": "https://api.github.com/users/fyears/following{/other_user}", "gists_url": "https://api.github.com/users/fyears/gists{/gist_id}", "starred_url": "https://api.github.com/users/fyears/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fyears/subscriptions", "organizations_url": "https://api.github.com/users/fyears/orgs", "repos_url": "https://api.github.com/users/fyears/repos", "events_url": "https://api.github.com/users/fyears/events{/privacy}", "received_events_url": "https://api.github.com/users/fyears/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-16T02:02:36Z", "updated_at": "2014-04-16T02:56:42Z", "closed_at": "2014-04-16T02:30:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes users may only need the simple `dict` if they only cares about the content.\n\nAlthough users can always use `dict(ordered_dict_obj)` to convert it into a `dict` object, the object generated by `xmltodict` is usually a nested `OrderedDict` of `OrderedDict`s. Users may have to write a function with iteration to convert all the nested `OrderedDict` to `dict`. I think a built-in `.to_simple_nested_dict()` would be handy and useful.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/58", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/58/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/58/events", "html_url": "https://github.com/martinblech/xmltodict/issues/58", "id": 31067693, "node_id": "MDU6SXNzdWUzMTA2NzY5Mw==", "number": 58, "title": "How allways get list of OrderedDict", "user": {"login": "walko1234", "id": 7225117, "node_id": "MDQ6VXNlcjcyMjUxMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7225117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walko1234", "html_url": "https://github.com/walko1234", "followers_url": "https://api.github.com/users/walko1234/followers", "following_url": "https://api.github.com/users/walko1234/following{/other_user}", "gists_url": "https://api.github.com/users/walko1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/walko1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walko1234/subscriptions", "organizations_url": "https://api.github.com/users/walko1234/orgs", "repos_url": "https://api.github.com/users/walko1234/repos", "events_url": "https://api.github.com/users/walko1234/events{/privacy}", "received_events_url": "https://api.github.com/users/walko1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-08T12:55:55Z", "updated_at": "2014-04-09T15:22:37Z", "closed_at": "2014-04-09T15:22:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \n\nI have one question....\nhow can I modify parse function so that I always get list of OrderedDict's not only when the same node name coms more then once.\nIn this sample I have as output list of 3 OrderedDicts:\n\n```\n<modules>\n   <modul id=\"1\"/>\n   <modul id=\"2\"/>\n   <modul id=\"3\"/>\n</modules>\n```\n\n```\nOrderedDict([(u'modules', OrderedDict([(u'modul', [OrderedDict([(u'@id', u'1')]), OrderedDict([(u'@id', u'2')]), OrderedDict([(u'@id', u'3')])])]))])\n```\n\nand here ist only OrderedDict but not list \n\n```\n<modules>\n   <modul id=\"1\"/>\n</modules>\n```\n\n```\nOrderedDict([(u'modules', OrderedDict([(u'modul', OrderedDict([(u'@id', u'1')]))]))])\n```\n\nit is much more complcated to walk over dictionary when you have different  types of varaibles....\n\nany help will be appreciated :)\n\nPiotr\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/57", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/57/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/57/events", "html_url": "https://github.com/martinblech/xmltodict/issues/57", "id": 30509971, "node_id": "MDU6SXNzdWUzMDUwOTk3MQ==", "number": 57, "title": "Ability to avoid <![CDATA[ and ]]> tags to be converted when unparsing", "user": {"login": "skela", "id": 58268, "node_id": "MDQ6VXNlcjU4MjY4", "avatar_url": "https://avatars1.githubusercontent.com/u/58268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skela", "html_url": "https://github.com/skela", "followers_url": "https://api.github.com/users/skela/followers", "following_url": "https://api.github.com/users/skela/following{/other_user}", "gists_url": "https://api.github.com/users/skela/gists{/gist_id}", "starred_url": "https://api.github.com/users/skela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skela/subscriptions", "organizations_url": "https://api.github.com/users/skela/orgs", "repos_url": "https://api.github.com/users/skela/repos", "events_url": "https://api.github.com/users/skela/events{/privacy}", "received_events_url": "https://api.github.com/users/skela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-03-31T13:08:12Z", "updated_at": "2016-03-29T20:57:46Z", "closed_at": "2014-04-09T15:25:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "When programatically creating for example Android XML strings files using your library's unparse functionality the library converts \"<![CDATA[\" into \"& lt;![CDATA[\"\nand \"]]>\" into \"]]& gt;\" (Spaces added between for the two html entities so things show up)\n\nI don't know about other xml readers, but the Android SDK's way of allowing developers to add string resources that contain HTML symbols etc is to use CDATA tags like that.\nI.e. you wrap your html string in CDATA tags and the android sdk doesn't go crazy when trying to parse the xml.\n\nThis is the xml I want to construct:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n<string name=\"some_html\"><![CDATA[<a href=\"http://www.space.com\">Hi my name is Bob</a>]]></string>\n</resources>\n```\n\nThis is what I pass to unparse:\n\n```\nval = '<![CDATA[<a href=\"http://www.space.com\">Hi my name is Bob</a>]]>'\nstrings = [{\"@name\": \"some_html\", \"#text\": val}]\nxmld = {\"resources\": {\"string\": strings}}\nxml = xmltodict.unparse(xmld, pretty=True)\n```\n\nAnd this is the result:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n<string name=\"some_html\">&lt;![CDATA[&lt;a href=\"http://www.space.com\"&gt;Hi my name is Bob&lt;/a&gt;]]&gt;</string>\n</resources>\n```\n\nI can't find a way to tell unparse not to try anything fancy for this particular value, but no luck, and I can't see anything obvious in your samples. Is there a way to achieve what I'm trying to do here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/55", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/55/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/55/events", "html_url": "https://github.com/martinblech/xmltodict/issues/55", "id": 29943506, "node_id": "MDU6SXNzdWUyOTk0MzUwNg==", "number": 55, "title": "Add option to supress xml declaration (snippet-mode?)", "user": {"login": "mmangione", "id": 6395900, "node_id": "MDQ6VXNlcjYzOTU5MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6395900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmangione", "html_url": "https://github.com/mmangione", "followers_url": "https://api.github.com/users/mmangione/followers", "following_url": "https://api.github.com/users/mmangione/following{/other_user}", "gists_url": "https://api.github.com/users/mmangione/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmangione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmangione/subscriptions", "organizations_url": "https://api.github.com/users/mmangione/orgs", "repos_url": "https://api.github.com/users/mmangione/repos", "events_url": "https://api.github.com/users/mmangione/events{/privacy}", "received_events_url": "https://api.github.com/users/mmangione/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-21T22:09:12Z", "updated_at": "2015-01-07T19:51:31Z", "closed_at": "2014-04-16T20:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "This module does a marvelous job of parsing and unparsing XML. However, when I unparse an ordereddict, I do not always need the version and encoding declaration.\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\nFor example, I am creating OrderedDicts from scratch and passing them to unparse. Since these are intended to be snippets instead of fully declared xml, I find myself manually postprocessing this to remove this declaration.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/54", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/54/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/54/events", "html_url": "https://github.com/martinblech/xmltodict/issues/54", "id": 27681031, "node_id": "MDU6SXNzdWUyNzY4MTAzMQ==", "number": 54, "title": "Too many newlines when unparse() with \"pretty\" option", "user": {"login": "josephernest", "id": 6168083, "node_id": "MDQ6VXNlcjYxNjgwODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6168083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephernest", "html_url": "https://github.com/josephernest", "followers_url": "https://api.github.com/users/josephernest/followers", "following_url": "https://api.github.com/users/josephernest/following{/other_user}", "gists_url": "https://api.github.com/users/josephernest/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephernest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephernest/subscriptions", "organizations_url": "https://api.github.com/users/josephernest/orgs", "repos_url": "https://api.github.com/users/josephernest/repos", "events_url": "https://api.github.com/users/josephernest/events{/privacy}", "received_events_url": "https://api.github.com/users/josephernest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-16T20:31:09Z", "updated_at": "2014-02-16T22:54:11Z", "closed_at": "2014-02-16T22:54:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using this as `test2.xml` :\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<mydocument>\n  <and>\n    <many>elements</many>\n    <many>more elements</many>\n  </and>\n  <plus>element as well</plus>\n</mydocument>\n```\n\nthis Python code :\n\n```\nimport xmltodict\nwith open('test2.xml') as f: xml = f.read()\ndoc = xmltodict.parse(xml)\nout = xmltodict.unparse(doc, pretty = True)\nwith open('out2.xml', 'w') as g: g.write(out)\n```\n\nwill give an output with too many blank lines, like :\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<mydocument>\n    <and>\n        <many>elements</many>\n\n        <many>more elements</many>\n    </and>\n\n    <plus>element as well</plus>\n</mydocument>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/53", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/53/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/53/events", "html_url": "https://github.com/martinblech/xmltodict/issues/53", "id": 25570527, "node_id": "MDU6SXNzdWUyNTU3MDUyNw==", "number": 53, "title": "Read encoding in file", "user": {"login": "Kontrolix", "id": 5243814, "node_id": "MDQ6VXNlcjUyNDM4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5243814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kontrolix", "html_url": "https://github.com/Kontrolix", "followers_url": "https://api.github.com/users/Kontrolix/followers", "following_url": "https://api.github.com/users/Kontrolix/following{/other_user}", "gists_url": "https://api.github.com/users/Kontrolix/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kontrolix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kontrolix/subscriptions", "organizations_url": "https://api.github.com/users/Kontrolix/orgs", "repos_url": "https://api.github.com/users/Kontrolix/repos", "events_url": "https://api.github.com/users/Kontrolix/events{/privacy}", "received_events_url": "https://api.github.com/users/Kontrolix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-14T12:30:04Z", "updated_at": "2014-02-03T18:23:44Z", "closed_at": "2014-02-03T17:25:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could it be possible to add by default or with an option a way for \"parse\" function to read file's encoding in the encoding declaration (<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>) ?\n\nI do this that way:\n\nxml = f.read()\nstart = xml.find('encoding=\"') + len('encoding=\"')\nend = xml.find('\"', start)\nxmlEncoding = xml[start : end ]\n\n Maybe you could find a safer way\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/51", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/51/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/51/events", "html_url": "https://github.com/martinblech/xmltodict/issues/51", "id": 24554090, "node_id": "MDU6SXNzdWUyNDU1NDA5MA==", "number": 51, "title": "Configurable Prefixes for Attributes and Text", "user": {"login": "hoppfrosch", "id": 419075, "node_id": "MDQ6VXNlcjQxOTA3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/419075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoppfrosch", "html_url": "https://github.com/hoppfrosch", "followers_url": "https://api.github.com/users/hoppfrosch/followers", "following_url": "https://api.github.com/users/hoppfrosch/following{/other_user}", "gists_url": "https://api.github.com/users/hoppfrosch/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoppfrosch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoppfrosch/subscriptions", "organizations_url": "https://api.github.com/users/hoppfrosch/orgs", "repos_url": "https://api.github.com/users/hoppfrosch/repos", "events_url": "https://api.github.com/users/hoppfrosch/events{/privacy}", "received_events_url": "https://api.github.com/users/hoppfrosch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-19T12:45:38Z", "updated_at": "2013-12-19T12:50:01Z", "closed_at": "2013-12-19T12:50:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use the resulting dictionary from xmltodict within Django templates.\n\nWithin django templates dictionary members are addressed via dot-Notation, i.e\ncontents of `var['node1']['node2']['@ATTR']` is addressed via  `node1.node2.@ATTR` in django templating language. \n\nA problem occurs with those `@` and `#` prefixes for Attributes and Textcontents, as django  cannot evaluate the variable `node1.node2.@ATTR` due to the existance of those prefixes `@` and `#` within its variables.\n\n**Feature Request:**\nMake the used prefixes for Attributes and Textcontents configurable, so the user can determine which prefixes are used (for example `XMLATTR_` instead of `@`)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/50", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/50/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/50/events", "html_url": "https://github.com/martinblech/xmltodict/issues/50", "id": 23920710, "node_id": "MDU6SXNzdWUyMzkyMDcxMA==", "number": 50, "title": "pip install fails due to missing README.md", "user": {"login": "twcook", "id": 2517703, "node_id": "MDQ6VXNlcjI1MTc3MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2517703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twcook", "html_url": "https://github.com/twcook", "followers_url": "https://api.github.com/users/twcook/followers", "following_url": "https://api.github.com/users/twcook/following{/other_user}", "gists_url": "https://api.github.com/users/twcook/gists{/gist_id}", "starred_url": "https://api.github.com/users/twcook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twcook/subscriptions", "organizations_url": "https://api.github.com/users/twcook/orgs", "repos_url": "https://api.github.com/users/twcook/repos", "events_url": "https://api.github.com/users/twcook/events{/privacy}", "received_events_url": "https://api.github.com/users/twcook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-12-08T09:02:22Z", "updated_at": "2014-08-23T12:56:47Z", "closed_at": "2014-04-16T22:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nlong_description=open('README.md').read())\n```\n\nFileNotFoundError: [Errno 2] No such file or directory: 'README.md'\n\nHowever, downloading 0.8.3 and using setup.py install okay.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martinblech/xmltodict/issues/48", "repository_url": "https://api.github.com/repos/martinblech/xmltodict", "labels_url": "https://api.github.com/repos/martinblech/xmltodict/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/martinblech/xmltodict/issues/48/comments", "events_url": "https://api.github.com/repos/martinblech/xmltodict/issues/48/events", "html_url": "https://github.com/martinblech/xmltodict/issues/48", "id": 23243949, "node_id": "MDU6SXNzdWUyMzI0Mzk0OQ==", "number": 48, "title": "Create Changelog.txt", "user": {"login": "Grokzen", "id": 892309, "node_id": "MDQ6VXNlcjg5MjMwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/892309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Grokzen", "html_url": "https://github.com/Grokzen", "followers_url": "https://api.github.com/users/Grokzen/followers", "following_url": "https://api.github.com/users/Grokzen/following{/other_user}", "gists_url": "https://api.github.com/users/Grokzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Grokzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Grokzen/subscriptions", "organizations_url": "https://api.github.com/users/Grokzen/orgs", "repos_url": "https://api.github.com/users/Grokzen/repos", "events_url": "https://api.github.com/users/Grokzen/events{/privacy}", "received_events_url": "https://api.github.com/users/Grokzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-11-25T14:04:33Z", "updated_at": "2014-04-16T22:49:54Z", "closed_at": "2014-04-16T22:49:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no easy way to see changes between versions other than dig through all commits.\n\nSimple Changelog.txt file in the root with all changes relevant changes.\n", "performed_via_github_app": null, "score": 1.0}]}