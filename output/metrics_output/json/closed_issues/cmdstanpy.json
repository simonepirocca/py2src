{"total_count": 127, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/272", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/272/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/272/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/272", "id": 675802422, "node_id": "MDU6SXNzdWU2NzU4MDI0MjI=", "number": 272, "title": "Cmstanpy can not compile model", "user": {"login": "Dpananos", "id": 20362941, "node_id": "MDQ6VXNlcjIwMzYyOTQx", "avatar_url": "https://avatars2.githubusercontent.com/u/20362941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dpananos", "html_url": "https://github.com/Dpananos", "followers_url": "https://api.github.com/users/Dpananos/followers", "following_url": "https://api.github.com/users/Dpananos/following{/other_user}", "gists_url": "https://api.github.com/users/Dpananos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dpananos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dpananos/subscriptions", "organizations_url": "https://api.github.com/users/Dpananos/orgs", "repos_url": "https://api.github.com/users/Dpananos/repos", "events_url": "https://api.github.com/users/Dpananos/events{/privacy}", "received_events_url": "https://api.github.com/users/Dpananos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-10T00:28:06Z", "updated_at": "2020-08-10T15:42:24Z", "closed_at": "2020-08-10T15:42:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nSimilar issues to #108. In that issue, installing cmdstanpy in a new env seemed to solve the issue.  I've installed cmdstanpy in a new conda environment. When I try to compile my model, I get the following error:\r\n\r\n```\r\nINFO:cmdstanpy:compiling stan program, exe file: /var/folders/bp/7wzcfkhj67l2f8d9mlr4zytc0000gn/T/tmp5j8wvysr/tmpohhihkwl\r\nINFO:cmdstanpy:compiler options: stanc_options=None, cpp_options=None\r\nERROR:cmdstanpy:file /var/folders/bp/7wzcfkhj67l2f8d9mlr4zytc0000gn/T/tmp5j8wvysr/tmpohhihkwl.stan, exception ERROR\r\n error: PCH file uses a newer PCH format that cannot be read\r\n1 error generated.\r\nmake: *** [/var/folders/bp/7wzcfkhj67l2f8d9mlr4zytc0000gn/T/tmp5j8wvysr/tmpohhihkwl] Error 1 \r\nERROR:cmdstanpy:model compilation failed\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-8-9623dea85d80> in <module>\r\n----> 1 model= cmdstanpy.CmdStanModel(stan_file='models/model.stan')\r\n\r\n~/miniconda3/envs/stan/lib/python3.8/site-packages/cmdstanpy/model.py in __init__(self, model_name, stan_file, exe_file, compile, stanc_options, cpp_options, logger)\r\n    152             self.compile()\r\n    153             if self._exe_file is None:\r\n--> 154                 raise ValueError(\r\n    155                     'Unable to compile Stan model file: {}.'.format(\r\n    156                         self._stan_file\r\n\r\nValueError: Unable to compile Stan model file: /Users/demetri/Documents/PhD Code/PKBayes2/models/model.stan.\r\n```\r\n\r\n\r\n#### Description:\r\nHere is some model code to replicate the error:\r\n\r\n```\r\nimport cmdstanpy\r\n\r\nmodel_code = '''\r\ndata{\r\n    int N;\r\n    vector[N] y;\r\n}\r\nparameters{\r\n    real mu;\r\n}\r\nmodel{\r\n    mu ~ normal(0,1);\r\n    y~normal(mu,1);\r\n}\r\n'''\r\n\r\nwith open('test.stan','w') as file:\r\n    file.write(model_code)\r\n\r\nmodel = cmdstanpy.CmdStanModel(stan_file='test.stan')\r\n```\r\n\r\n\r\n#### Current Version:\r\n\r\n```\r\n# Name                    Version                   Build  Channel\r\ncmdstanpy                 0.9.63                   pypi_0    pypi\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/259", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/259/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/259/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/259", "id": 671675013, "node_id": "MDU6SXNzdWU2NzE2NzUwMTM=", "number": 259, "title": "only expose `save_diagnostics` for sample method?", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-02T19:28:13Z", "updated_at": "2020-08-03T23:03:05Z", "closed_at": "2020-08-03T23:03:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nCmdStan's arg parser lets any method specify a `diagnostics_file` for output.\r\nInvestigate whether any methods other than the `sample` method use this for anything.\r\n\r\n#### Description:\r\nMake each method have sensible arguments - `save_diagnostics` arg clutters up code and docs.\r\n\r\n\r\n#### Additional Information:\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/256", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/256/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/256/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/256", "id": 668197735, "node_id": "MDU6SXNzdWU2NjgxOTc3MzU=", "number": 256, "title": "implement threading logic", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364767345, "node_id": "MDU6TGFiZWwxMzY0NzY3MzQ1", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/documentation", "name": "documentation", "color": "c2e0c6", "default": true, "description": ""}, {"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T22:04:07Z", "updated_at": "2020-08-04T16:26:55Z", "closed_at": "2020-08-04T16:26:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nIn order for a single chain to take advantage of TBB lib's parallelism, the shell environment variable `STAN_NUM_THREADS` needs to be set.  implement logic, expose controls, following CmdStanR.\r\n\r\n#### Description:\r\nsee CmdStanR PR https://github.com/stan-dev/cmdstanr/pull/185 for implementation details.\r\n\r\n#### Additional Information:\r\nDocument this feature with notebook for new `reduce_sum` feature (CmdStan 2.24)\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/255", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/255/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/255/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/255", "id": 668159901, "node_id": "MDU6SXNzdWU2NjgxNTk5MDE=", "number": 255, "title": "release schedule?", "user": {"login": "seantalts", "id": 805356, "node_id": "MDQ6VXNlcjgwNTM1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/805356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seantalts", "html_url": "https://github.com/seantalts", "followers_url": "https://api.github.com/users/seantalts/followers", "following_url": "https://api.github.com/users/seantalts/following{/other_user}", "gists_url": "https://api.github.com/users/seantalts/gists{/gist_id}", "starred_url": "https://api.github.com/users/seantalts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seantalts/subscriptions", "organizations_url": "https://api.github.com/users/seantalts/orgs", "repos_url": "https://api.github.com/users/seantalts/repos", "events_url": "https://api.github.com/users/seantalts/events{/privacy}", "received_events_url": "https://api.github.com/users/seantalts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-29T21:10:42Z", "updated_at": "2020-08-04T22:33:51Z", "closed_at": "2020-07-29T22:05:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Just wondering - is this going to be released soon? Would love to start using @mitzimorris's new stan_var functions and saw 2.24 come out a couple days ago. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/254", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/254/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/254/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/254", "id": 650154080, "node_id": "MDU6SXNzdWU2NTAxNTQwODA=", "number": 254, "title": "add option to `save_csvfiles` for filename prefix", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-02T19:21:31Z", "updated_at": "2020-08-06T11:05:44Z", "closed_at": "2020-08-06T11:05:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nTo facilitate distributed processing, the `save_csvfiles` method should be able to add a prefix to the\r\nfilename, so that per-node csvfiles from a cluster job can all be written to the same centralized filesystem\r\nwithout filename conflict.\r\n\r\n#### Description:\r\nFrom discussion on the forums:\r\n\r\n> I am working on a distributed computing pool and wish to run many independent instances of an analysis. If these jobs are submitted at the same time, I will get file-name clashes and some results will be overwritten.\r\n\r\nhttps://discourse.mc-stan.org/t/specifying-output-file-names/16345\r\n\r\n\r\n#### Additional Information:\r\n\r\nProposal for argument `prefix` is to preserve information:  model, timestamp, chain - I consider this useful for managing the analysis process, which can be very messy.  Also, easy to implmenet. Discuss?\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/253", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/253/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/253/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/253", "id": 636454175, "node_id": "MDU6SXNzdWU2MzY0NTQxNzU=", "number": 253, "title": "Standard deviation parameter of normal_rng seems to min-max scale", "user": {"login": "petulla", "id": 3466817, "node_id": "MDQ6VXNlcjM0NjY4MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3466817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petulla", "html_url": "https://github.com/petulla", "followers_url": "https://api.github.com/users/petulla/followers", "following_url": "https://api.github.com/users/petulla/following{/other_user}", "gists_url": "https://api.github.com/users/petulla/gists{/gist_id}", "starred_url": "https://api.github.com/users/petulla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petulla/subscriptions", "organizations_url": "https://api.github.com/users/petulla/orgs", "repos_url": "https://api.github.com/users/petulla/repos", "events_url": "https://api.github.com/users/petulla/events{/privacy}", "received_events_url": "https://api.github.com/users/petulla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-10T18:20:22Z", "updated_at": "2020-06-10T19:13:34Z", "closed_at": "2020-06-10T18:58:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nI feel like I'm making a silly mistake.\r\n\r\nLet's say I just want to simulate some normally distributed rv's, using the `fixed_params=True` argument to cmdstanpy:\r\n\r\n```stan\r\ndata {\r\n    int N;\r\n}\r\ngenerated quantities {\r\n    vector[N] y_sim;\r\n    for (i in 1:N) {\r\n        y_sim[i] = normal_rng(20.0, 10.0);\r\n    }\r\n}\r\n```\r\nFor whatever reason, the data I'm generating, while centered at mu, does always is scaled as if std_normal_rng were being called. The data always seems to be scaled back to a 0-1 min-max variance scale.\r\n\r\nI'm sure I've made a simple mistake or is this a bug?\r\n\r\n#### Additional Information:\r\n\r\n```sh\r\ngenerated_quantities with normal_rng(0,15);\r\n-0.666911 \r\n-0.504168 \r\n0.598730\r\n0.726107\r\n0.159824 \r\n0.361373 \r\n0.789769 \r\n```\r\n\r\n\r\n#### Current Version:\r\n0.9.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/250", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/250/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/250/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/250", "id": 633567508, "node_id": "MDU6SXNzdWU2MzM1Njc1MDg=", "number": 250, "title": "Ability to change confidence intervals in summary", "user": {"login": "petulla", "id": 3466817, "node_id": "MDQ6VXNlcjM0NjY4MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3466817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petulla", "html_url": "https://github.com/petulla", "followers_url": "https://api.github.com/users/petulla/followers", "following_url": "https://api.github.com/users/petulla/following{/other_user}", "gists_url": "https://api.github.com/users/petulla/gists{/gist_id}", "starred_url": "https://api.github.com/users/petulla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petulla/subscriptions", "organizations_url": "https://api.github.com/users/petulla/orgs", "repos_url": "https://api.github.com/users/petulla/repos", "events_url": "https://api.github.com/users/petulla/events{/privacy}", "received_events_url": "https://api.github.com/users/petulla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-07T16:46:06Z", "updated_at": "2020-08-05T02:01:25Z", "closed_at": "2020-08-05T02:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nHi, wondering if there is a way to pass in the `probs` argument to summary, as in stansummary. I'd like to alter the CIs.\r\n\r\n\r\n#### Additional Information:\r\nFor example, ideally we could do..\r\n```py\r\nbino_fit.summary(probs=[0.025,0.975])\r\n```\r\n\r\n#### Current Version:\r\n0.9.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/248", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/248/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/248/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/248", "id": 626735936, "node_id": "MDU6SXNzdWU2MjY3MzU5MzY=", "number": 248, "title": "use ProcessPoolExecutor not ThreadPoolExecutor to run chains in parallel", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-28T18:54:21Z", "updated_at": "2020-08-20T20:15:30Z", "closed_at": "2020-08-20T20:15:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nFile `cmdstanpy/model.py` currently uses ThreadPoolExecutor; change to ProcessPoolExecutor, per discussion here:  https://stackoverflow.com/questions/51828790/what-is-the-difference-between-processpoolexecutor-and-threadpoolexecutor\r\n\r\n#### Description:\r\nAs part of implementation, run timing tests to show that this speeds things up.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/247", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/247/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/247/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/247", "id": 625949418, "node_id": "MDU6SXNzdWU2MjU5NDk0MTg=", "number": 247, "title": "reduce_sum + STAN_NUM_THREADS has no effect on tutorial model runtime", "user": {"login": "grburgess", "id": 6764007, "node_id": "MDQ6VXNlcjY3NjQwMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6764007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grburgess", "html_url": "https://github.com/grburgess", "followers_url": "https://api.github.com/users/grburgess/followers", "following_url": "https://api.github.com/users/grburgess/following{/other_user}", "gists_url": "https://api.github.com/users/grburgess/gists{/gist_id}", "starred_url": "https://api.github.com/users/grburgess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grburgess/subscriptions", "organizations_url": "https://api.github.com/users/grburgess/orgs", "repos_url": "https://api.github.com/users/grburgess/repos", "events_url": "https://api.github.com/users/grburgess/events{/privacy}", "received_events_url": "https://api.github.com/users/grburgess/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-27T18:58:54Z", "updated_at": "2020-05-27T19:56:06Z", "closed_at": "2020-05-27T19:45:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nPlease provide a short couple sentence summary.\r\nSTAN_NUM_THREADS seems to have no effect on run time. \r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\nI have tried to run the example here:\r\nhttps://mc-stan.org/users/documentation/case-studies/reduce_sum_tutorial.html\r\n\r\nvia CmdStanPy. But see no effect when changing the number of threads via the environment variable. I have compiled the model with these lines:\r\n```python\r\nmodel = CmdStanModel(stan_file=\"logit.stan\", cpp_options={'STAN_THREADS': True})\r\n```\r\nI have modified make/local to contain:\r\n\r\nCXXFLAGS += -DSTAN_THREADS\r\n\r\nbut nothing seems to affect the run time of the model\r\n\r\n\r\n#### Additional Information:\r\nRunning in a Jupyter notebook via MacOS\r\n2.9 GHz 6-Core Intel Core i9\r\n\r\n#### Current Version:\r\n'0.9.5'\r\nCmdstan version 2.23.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/246", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/246/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/246/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/246", "id": 625933542, "node_id": "MDU6SXNzdWU2MjU5MzM1NDI=", "number": 246, "title": "chain 1 returned error code -11", "user": {"login": "JohannesBuchner", "id": 51015, "node_id": "MDQ6VXNlcjUxMDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/51015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohannesBuchner", "html_url": "https://github.com/JohannesBuchner", "followers_url": "https://api.github.com/users/JohannesBuchner/followers", "following_url": "https://api.github.com/users/JohannesBuchner/following{/other_user}", "gists_url": "https://api.github.com/users/JohannesBuchner/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohannesBuchner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohannesBuchner/subscriptions", "organizations_url": "https://api.github.com/users/JohannesBuchner/orgs", "repos_url": "https://api.github.com/users/JohannesBuchner/repos", "events_url": "https://api.github.com/users/JohannesBuchner/events{/privacy}", "received_events_url": "https://api.github.com/users/JohannesBuchner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-27T18:34:07Z", "updated_at": "2020-08-14T23:17:00Z", "closed_at": "2020-08-14T23:17:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nUnknown error code during sampling.\r\n\r\n#### Description:\r\nI was able to compile, but not sample from a model. The output is merely:\r\n\r\n```\r\nChain 1 -   done:   0%|                                                                                                                        | 0/1 [00:01<?, ?it/s]\r\nTraceback (most recent call last):\r\n  File \"myfile.py\", line 44, in <module>\r\n    fit = sm.sample(data2, chains=1, iter_sampling=250, show_progress=True)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/cmdstanpy/model.py\", line 712, in sample\r\n    raise RuntimeError(err_msg)\r\nRuntimeError: Error during sampling.\r\nchain 1 returned error code -11\r\n```\r\n\r\nSimplifying to `sm.sample(data2)` yields the same result.\r\n\r\nI then tried to find a listing of error codes by searching the cmdstan manual and the cmdstanpy docs for \"error code\", \"exit\", \"return\", but was not able to find anything.\r\n\r\n#### Current Version:\r\ncmdstan-2.23.0\r\ncmdstanpy-0.9.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/245", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/245/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/245/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/245", "id": 625271063, "node_id": "MDU6SXNzdWU2MjUyNzEwNjM=", "number": 245, "title": "CmdStanMCMC object - add function `get_var` and `get_vars`", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-26T23:49:55Z", "updated_at": "2020-06-11T20:53:27Z", "closed_at": "2020-06-11T20:53:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nFor container program variables, i.e., vectors, matrices, and arrays, users need to be able to get the draws for that variable structured accordingly. For scalar variables, this is easy; it is just one column's worth of data and the variable name matches the column name.\r\nFor structured variables, we need to assemble all element of the container.\r\n\r\nThis corresponds to the RStan function `extract`.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/243", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/243/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/243/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/243", "id": 612924264, "node_id": "MDU6SXNzdWU2MTI5MjQyNjQ=", "number": 243, "title": "remove CmdStanModel arg `model_name`", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T22:06:04Z", "updated_at": "2020-08-04T22:08:36Z", "closed_at": "2020-08-04T22:08:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nModel name argument isn't used anywhere in the interface.  Remove it.\r\n\r\n#### Description:\r\nCode cleanup.\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/238", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/238/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/238/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/238", "id": 609540324, "node_id": "MDU6SXNzdWU2MDk1NDAzMjQ=", "number": 238, "title": "add option to sample method to skip validation of csv files", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T03:31:51Z", "updated_at": "2020-08-09T17:23:51Z", "closed_at": "2020-08-09T17:23:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nThe sample method always validates the resulting set of csv files.  Add flag to to sample method to skip this step.\r\n\r\n\r\n#### Description:\r\nValidation of the csv files requires scanning each file line-by-line; with additional processing depending on the section of the csv file.  In order to streamline processing, the user should be able to just run the sampler, and validate downstream, as needed.\r\n\r\n#### Additional Information:\r\nInsure that validation happens prior to assembling the sample.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/235", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/235/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/235/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/235", "id": 601307054, "node_id": "MDU6SXNzdWU2MDEzMDcwNTQ=", "number": 235, "title": "Runtime error when using custom list of chain IDs in sampling", "user": {"login": "xw363", "id": 11285805, "node_id": "MDQ6VXNlcjExMjg1ODA1", "avatar_url": "https://avatars1.githubusercontent.com/u/11285805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xw363", "html_url": "https://github.com/xw363", "followers_url": "https://api.github.com/users/xw363/followers", "following_url": "https://api.github.com/users/xw363/following{/other_user}", "gists_url": "https://api.github.com/users/xw363/gists{/gist_id}", "starred_url": "https://api.github.com/users/xw363/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xw363/subscriptions", "organizations_url": "https://api.github.com/users/xw363/orgs", "repos_url": "https://api.github.com/users/xw363/repos", "events_url": "https://api.github.com/users/xw363/events{/privacy}", "received_events_url": "https://api.github.com/users/xw363/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525781, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgx", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": "Something isn't working"}, {"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-16T18:18:09Z", "updated_at": "2020-08-06T10:58:37Z", "closed_at": "2020-08-06T10:58:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran sampling with a custom list of chain IDs using `CmdStanModel.sample()` but got `TypeError: 'int' object is not iterable` on the following line:\r\n\r\nhttps://github.com/stan-dev/cmdstanpy/blob/53aedc97ffce23064e9740b562c6a6b627a3e371/cmdstanpy/model.py#L599\r\n\r\nChanging it to `for i in chain_ids:` should fix the issue.\r\n\r\nAlso, a suggestion regarding chain IDs: allow 0 as chain ID. Currently, cmdstanpy only allows positive integer IDs. In pystan, however, chain ID starts from 0 by default.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/231", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/231/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/231/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/231", "id": 598177332, "node_id": "MDU6SXNzdWU1OTgxNzczMzI=", "number": 231, "title": "Setup on Windows fails", "user": {"login": "mohamed82008", "id": 19524993, "node_id": "MDQ6VXNlcjE5NTI0OTkz", "avatar_url": "https://avatars1.githubusercontent.com/u/19524993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohamed82008", "html_url": "https://github.com/mohamed82008", "followers_url": "https://api.github.com/users/mohamed82008/followers", "following_url": "https://api.github.com/users/mohamed82008/following{/other_user}", "gists_url": "https://api.github.com/users/mohamed82008/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohamed82008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohamed82008/subscriptions", "organizations_url": "https://api.github.com/users/mohamed82008/orgs", "repos_url": "https://api.github.com/users/mohamed82008/repos", "events_url": "https://api.github.com/users/mohamed82008/events{/privacy}", "received_events_url": "https://api.github.com/users/mohamed82008/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-11T03:11:24Z", "updated_at": "2020-08-10T02:01:30Z", "closed_at": "2020-08-10T02:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI am trying to install and setup cmdstanpy on Windows and Python 3. I installed cmdstanpy[all] with pip but running `cmdstanpy.install_cmdstan()` fails with the following error:\r\n```python\r\nINFO:cmdstanpy:CmdStan version: 2.22.1\r\nINFO:cmdstanpy:Install directory: C:\\Users\\user\\.cmdstanpy\r\nINFO:cmdstanpy:Building cmdstan-2.22.1 binaries\r\nINFO:cmdstanpy:Command \"make build\" failed\r\nINFO:cmdstanpy:File not found - *cvodes*.hpp\r\nINFO:cmdstanpy:File not found - *idas*.hpp\r\nINFO:cmdstanpy:File not found - *kinsol*.hpp\r\nINFO:cmdstanpy:File not found - *_inst.cpp\r\nINFO:cmdstanpy:File not found - *_def.cpp\r\nINFO:cmdstanpy:INFO: Could not find files for the given pattern(s).\r\nINFO:cmdstanpy:File not found - *.hpp\r\nINFO:cmdstanpy:cc1plus.exe: sorry, unimplemented: 64-bit mode not compiled in\r\nINFO:cmdstanpy:src/cmdstan/stansummary.cpp:1:0: sorry, unimplemented: 64-bit mode not compiled in\r\nINFO:cmdstanpy:#include <algorithm>\r\nINFO:cmdstanpy:^\r\nINFO:cmdstanpy:mingw32-make: *** [bin/cmdstan/stansummary.o] Error 1\r\nWARNING:cmdstanpy:CmdStan installation failed\r\nFalse\r\n```\r\nAny clue as to how to fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/229", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/229/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/229/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/229", "id": 597487694, "node_id": "MDU6SXNzdWU1OTc0ODc2OTQ=", "number": 229, "title": "Threading on by default", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}, {"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T18:59:09Z", "updated_at": "2020-08-06T11:08:09Z", "closed_at": "2020-08-06T11:08:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nparallels issue for CmdStanR issue https://github.com/stan-dev/cmdstanr/issues/153 - please discuss there, not here.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/228", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/228/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/228/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/228", "id": 597120865, "node_id": "MDU6SXNzdWU1OTcxMjA4NjU=", "number": 228, "title": "Not create new directory of `output_dir`", "user": {"login": "Cartman0", "id": 10578703, "node_id": "MDQ6VXNlcjEwNTc4NzAz", "avatar_url": "https://avatars1.githubusercontent.com/u/10578703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cartman0", "html_url": "https://github.com/Cartman0", "followers_url": "https://api.github.com/users/Cartman0/followers", "following_url": "https://api.github.com/users/Cartman0/following{/other_user}", "gists_url": "https://api.github.com/users/Cartman0/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cartman0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cartman0/subscriptions", "organizations_url": "https://api.github.com/users/Cartman0/orgs", "repos_url": "https://api.github.com/users/Cartman0/repos", "events_url": "https://api.github.com/users/Cartman0/events{/privacy}", "received_events_url": "https://api.github.com/users/Cartman0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-09T08:41:10Z", "updated_at": "2020-04-10T18:42:24Z", "closed_at": "2020-04-10T18:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nif `output_dir` doesn't exists, not create new directory.\r\n\r\n#### Description:\r\n\r\nrun example:\r\n```python\r\nbern_fit = bernoulli_model.sample(data=bernoulli_data, output_dir='./bernoulli/') # not exist dir\r\nbern_fit\r\n```\r\nresult:\r\n```\r\nFileNotFoundError                         Traceback (most recent call last)\r\n<me>\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\cmdstanpy\\cmdstan_args.py in validate(self)\r\n    533                 testpath = os.path.join(self.output_dir, str(time()))\r\n--> 534                 with open(testpath, 'w+') as fd:\r\n    535                     pass\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\GoogleDrive\\\\JupyterNote\\\\Prob_Stat\\\\Bayes\\\\bernoulli\\\\1586417926.3063903'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-13-af761e60cfb8> in <module>\r\n      1 # import os\r\n      2 # os.makedirs('./bernoulli/', exist_ok=True)\r\n----> 3 bern_fit = bernoulli_model.sample(data=bernoulli_data, output_dir='./bernoulli/')\r\n      4 bern_fit\r\n\r\n<me>\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\cmdstanpy\\model.py in sample(self, data, chains, cores, seed, chain_ids, inits, iter_warmup, iter_sampling, save_warmup, thin, max_treedepth, metric, step_size, adapt_engaged, adapt_delta, fixed_param, output_dir, save_diagnostics, show_progress)\r\n    644                 save_diagnostics=save_diagnostics,\r\n    645                 method_args=sampler_args,\r\n--> 646                 refresh=refresh,\r\n    647             )\r\n    648             runset = RunSet(args=args, chains=chains)\r\n\r\n<me>\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\cmdstanpy\\cmdstan_args.py in __init__(self, model_name, model_exe, chain_ids, method_args, data, seed, inits, output_dir, save_diagnostics, refresh)\r\n    498             self.method = Method.VARIATIONAL\r\n    499         self.method_args.validate(len(chain_ids) if chain_ids else None)\r\n--> 500         self.validate()\r\n    501 \r\n    502     def validate(self) -> None:\r\n\r\n<me>\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\cmdstanpy\\cmdstan_args.py in validate(self)\r\n    538                 raise ValueError(\r\n    539                     'invalid path for output files, '\r\n--> 540                     'cannot write to dir: {}'.format(self.output_dir)\r\n    541                 )\r\n    542 \r\n\r\nValueError: invalid path for output files, cannot write to dir: D:\\GoogleDrive\\JupyterNote\\Prob_Stat\\Bayes\\bernoulli\r\n```\r\n\r\nmaybe, the check of exception as if directory exists (https://github.com/stan-dev/cmdstanpy/blob/master/cmdstanpy/cmdstan_args.py#L532) / is extra.\r\nso, the function [`save_csvfiles` in stanfit.py](https://github.com/stan-dev/cmdstanpy/blob/master/cmdstanpy/stanfit.py#L202) supports `os.makedirs` / isn't call.\r\n\r\n\r\n#### Current Version:\r\nwin10 64bit, python3.7, cmdstanpy0.95\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/226", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/226/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/226/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/226", "id": 579849754, "node_id": "MDU6SXNzdWU1Nzk4NDk3NTQ=", "number": 226, "title": "Generate quantities fails with non-scalar parameters", "user": {"login": "teddygroves", "id": 17163471, "node_id": "MDQ6VXNlcjE3MTYzNDcx", "avatar_url": "https://avatars0.githubusercontent.com/u/17163471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teddygroves", "html_url": "https://github.com/teddygroves", "followers_url": "https://api.github.com/users/teddygroves/followers", "following_url": "https://api.github.com/users/teddygroves/following{/other_user}", "gists_url": "https://api.github.com/users/teddygroves/gists{/gist_id}", "starred_url": "https://api.github.com/users/teddygroves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teddygroves/subscriptions", "organizations_url": "https://api.github.com/users/teddygroves/orgs", "repos_url": "https://api.github.com/users/teddygroves/repos", "events_url": "https://api.github.com/users/teddygroves/events{/privacy}", "received_events_url": "https://api.github.com/users/teddygroves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-12T10:46:29Z", "updated_at": "2020-03-12T14:04:34Z", "closed_at": "2020-03-12T14:04:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nI get the following type of error when running`generate_quantities` method with a model that has vector parameters:\r\n\r\n```\r\nMismatch between model and fitted_parameters csv file \"./samples/2019/model-202003110919-2.csv\"\r\n```\r\n\r\n#### Description:\r\nI can reproduce this bug with the following pair of stan models:\r\n`bern_model.stan`:\r\n```\r\ndata { \r\n  int<lower=0> N; \r\n  int<lower=0,upper=1> y[N];\r\n} \r\nparameters {\r\n  real<lower=0,upper=1> theta[1];\r\n} \r\nmodel {\r\n  theta ~ beta(1,1);\r\n  y ~ bernoulli(theta[1]);\r\n}\r\n```\r\n\r\n`bern_model_gq.stan`:\r\n```\r\ndata { \r\n  int<lower=0> N; \r\n  int<lower=0,upper=1> y[N];\r\n} \r\nparameters {\r\n  real<lower=0,upper=1> theta[1];\r\n} \r\nmodel {\r\n  theta ~ beta(1,1);\r\n  y ~ bernoulli(theta[1]);\r\n}\r\ngenerated quantities {\r\n  int y_sim[N];\r\n  real<lower=0,upper=1> theta_rep;\r\n  for (n in 1:N)\r\n    y_sim[n] = bernoulli_rng(theta[1]);\r\n  theta_rep = sum(y) / N;\r\n}\r\n``` \r\nPython script that reproduces the bug:\r\n\r\n```\r\nfrom cmdstanpy import CmdStanModel, cmdstan_path\r\nimport os\r\n\r\nINFERENCE_MODEL_PATH = \"bern_model.stan\"\r\nGQ_MODEL_PATH = \"bern_model_gq.stan\"\r\n\r\nbernoulli_dir = os.path.join(cmdstan_path(), 'examples', 'bernoulli')\r\nbernoulli_data = os.path.join(bernoulli_dir, 'bernoulli.data.json')\r\n\r\ninference_model = CmdStanModel(stan_file=INFERENCE_MODEL_PATH)\r\ninference_fit = inference_model.sample(data=bernoulli_data)\r\n\r\ngq_model = CmdStanModel(stan_file=GQ_MODEL_PATH)\r\ngqs = gq_model.generate_quantities(\r\n    data=bernoulli_data, mcmc_sample=inference_fit, gq_output_dir='.'\r\n)\r\n```\r\n\r\n#### Additional Information:\r\nTo narrow down what is happening I tried changing [this line](https://github.com/stan-dev/cmdstan/blob/f348bc1dbe8b85f6b94e01a38030ccaa0acb83ed/src/cmdstan/command.hpp#L223) in cmdstan as follows:\r\n\r\n```\r\n          msg << \"Mismatch between model and fitted_parameters csv file \\\"\" << param_names[i] << \"\\\"\" << fitted_params.header[i + hmc_fixed_cols] << \"\\\"\" << std::endl;\r\n\r\n```\r\n\r\nThe error message then changed to:\r\n\r\n```\r\nMismatch between model and fitted_parameters csv file \"theta.1\"theta[1]\"\r\n```\r\n\r\nI think this might mean that the problem is something to do with the `param_names` or `fitted_params.header` objects in that cmdstan file.\r\n\r\n#### Current Version:\r\ncmdstan: 2.22.1\r\ncmdstanpy: 0.9.5\r\npython: 3.7.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/223", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/223/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/223/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/223", "id": 577375893, "node_id": "MDU6SXNzdWU1NzczNzU4OTM=", "number": 223, "title": "expose adaptation warmup schedule args", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-07T17:50:13Z", "updated_at": "2020-04-11T18:24:50Z", "closed_at": "2020-04-11T18:24:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nCmdStan HMC-NUTS sampler allows user to specify schedule for adaptation schedule - \r\n\r\n- Phase 1 - \"Initial Buffer\": adapting the step size only to give the chains time to get close to the typical set, with no guarantee that they will reach the typical set\r\n\r\n- Phase 2 - \"Windowed\": adapting the step size continuously while adapting the inverse metric at the end of increasing windows of iterations\r\n\r\n- Phase 3 - \"Terminal Buffer\": adapting the step size with the final inverse metric configuration fixed\r\n\r\nAlthough argument names are still under discussion here:  https://github.com/stan-dev/design-docs/pull/15,  we should expose this functionality now, with the provisional argument names being:\r\n\r\n- `adapt_init_phase`\r\n- `adapt_metric_window`\r\n- `adapt_step_size`\r\n\r\ncorresponding to CmdStan arguments `init_buffer`, `term_buffer`, `window` sub-args to adapt\r\n\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/221", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/221/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/221/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/221", "id": 574918330, "node_id": "MDU6SXNzdWU1NzQ5MTgzMzA=", "number": 221, "title": "cmdstanpy cmdstanr name consistency for sampler", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2020-03-03T20:22:49Z", "updated_at": "2020-03-08T23:08:30Z", "closed_at": "2020-03-08T23:08:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nimprove consistency of argument names between CmdStanPy and CmdStanR\r\n\r\n#### Description:\r\ndifferent names to sampler function\r\n\r\n- \"cores\" vs \"num_cores\"\r\n- \"chains\" vs \"num_chains\"\r\n- \"warmup_iters\" vs \"num_warmup\"\r\n- \"sampling_iters\" vs \"num_sampling\"\r\n- \"step_size\" vs. \"stepsize\"\r\n- \"max_treedepth\" vs \"max_depth\"\r\n\r\nafter discussion here: stan-dev/design-docs#15, argument names for sampler methods are:\r\n\r\n- `cores`  (current name)\r\n- `chains` (current name)\r\n- `iter_warmup` instead of \"warmup_iters\"\r\n- `iter_sampling` instead of \"sampling_iters\"\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/217", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/217/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/217/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/217", "id": 564935080, "node_id": "MDU6SXNzdWU1NjQ5MzUwODA=", "number": 217, "title": "simplify/generalize model compilation options", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}, {"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-13T20:34:47Z", "updated_at": "2020-02-24T20:06:29Z", "closed_at": "2020-02-24T20:06:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nhttps://github.com/stan-dev/cmdstanr/issues/121\r\n\r\n#### Description:\r\nCmdStanR provides flags to the CmdStanModel `compile` function for opencl and use of `DSTAN_THREADS` - add this functionality to CmdStanPy but in the most general way possible.\r\n\r\n#### Additional Information:\r\nrelated issues:\r\n\r\n- https://github.com/stan-dev/cmdstanpy/issues/202\r\n- https://github.com/stan-dev/cmdstanpy/issues/186\r\n\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/213", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/213/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/213/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/213", "id": 561958513, "node_id": "MDU6SXNzdWU1NjE5NTg1MTM=", "number": 213, "title": "Method CmdStanMLE:optimized_params_np is lying about its return type", "user": {"login": "wsuchy", "id": 5363614, "node_id": "MDQ6VXNlcjUzNjM2MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5363614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsuchy", "html_url": "https://github.com/wsuchy", "followers_url": "https://api.github.com/users/wsuchy/followers", "following_url": "https://api.github.com/users/wsuchy/following{/other_user}", "gists_url": "https://api.github.com/users/wsuchy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsuchy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsuchy/subscriptions", "organizations_url": "https://api.github.com/users/wsuchy/orgs", "repos_url": "https://api.github.com/users/wsuchy/repos", "events_url": "https://api.github.com/users/wsuchy/events{/privacy}", "received_events_url": "https://api.github.com/users/wsuchy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525781, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgx", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-08T02:43:18Z", "updated_at": "2020-02-09T23:37:00Z", "closed_at": "2020-02-09T23:37:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nThe method `optimized_params_np(self) -> np.array`\r\ndefined here: https://github.com/stan-dev/cmdstanpy/blob/master/cmdstanpy/stanfit.py#L547\r\nis lying about its return type because the function `def scan_optimize_csv(path: str)`\r\ndoesn't produce numpy object, but a list.\r\n\r\n\r\n@mitzimorris I am creating this issue because we've finally merged https://github.com/facebook/prophet/pull/1083 and I thought it would be nice to use most recent version of this library in prophet. Unfortunately this is one of the reasons why fbprophet doesn't work with cmdstanpy in version 0.8 out of the box.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/211", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/211/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/211/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/211", "id": 561570503, "node_id": "MDU6SXNzdWU1NjE1NzA1MDM=", "number": 211, "title": "CmdStan bad syntax error message", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-07T11:05:28Z", "updated_at": "2020-02-24T20:38:39Z", "closed_at": "2020-02-24T20:38:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Shown here https://travis-ci.org/stan-dev/cmdstanpy/jobs/644423199?utm_medium=notification&utm_source=github_status\r\n\r\n```\r\n    def test_model_syntax_error(self):\r\n        stan = os.path.join(DATAFILES_PATH, 'bad_syntax.stan')\r\n    \r\n        with LogCapture() as log:\r\n            with self.assertRaises(Exception):\r\n                CmdStanModel(stan_file=stan)\r\n    \r\n            # Join all the log messages into one string\r\n            error_message = \"@( * O * )@\".join(np.array(log.actual())[:, -1])\r\n    \r\n            # Ensure the new line character in error message is not escaped\r\n            # so the error message is readable\r\n>           self.assertRegex(error_message, r'PARSER EXPECTED: \";\"(\\r\\n|\\r|\\n)')\r\nE           AssertionError: Regex didn't match: 'PARSER EXPECTED: \";\"(\\\\r\\\\n|\\\\r|\\\\n)' not found in 'stan to c++ (/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.hpp)@( * O * )@cmd: [\\'make\\', \\'/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax\\', \\'STANCFLAGS+=--o=/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.hpp\\']@( * O * )@file /home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.stan, exception ERROR\\n Syntax error in \\'/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.stan\\', line 9, column 18 to column 19, parsing error:\\n   -------------------------------------------------\\n     7:  }\\n     8:  model {\\n     9:    theta ~ beta(1,1)\\n                            ^\\n    10:    for (n in 1:N)\\n    11:      y[n] ~ bernoulli(theta);\\n   -------------------------------------------------\\n\\nIll-formed \"~\"-statement. Expected \";\" or \"T[\" optional expression \",\" optional expression \"];\".\\n\\n\\nmake: *** No rule to make target \\'/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.hpp\\', needed by \\'/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax\\'.  Stop. @( * O * )@model compilation failed'\r\n../test/test_model.py:143: AssertionError\r\n```\r\n\r\n-->\r\n\r\n```\r\n'stan to c++ (/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.hpp)@( * O * )@cmd: ['make', '/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax', 'STANCFLAGS+=--o=/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.hpp']@( * O * )@file /home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.stan, exception ERROR\r\n Syntax error in '/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.stan', line 9, column 18 to column 19, parsing error:\r\n   -------------------------------------------------\r\n     7:  }\r\n     8:  model {\r\n     9:    theta ~ beta(1,1)\r\n                            ^\r\n    10:    for (n in 1:N)\r\n    11:      y[n] ~ bernoulli(theta);\r\n   -------------------------------------------------\r\n\r\nIll-formed \"~\"-statement. Expected \";\" or \"T[\" optional expression \",\" optional expression \"];\".\r\n\r\n\r\nmake: *** No rule to make target '/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax.hpp', needed by '/home/travis/build/stan-dev/cmdstanpy/test/data/bad_syntax'.  Stop. @( * O * )@model compilation failed'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/210", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/210/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/210/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/210", "id": 561559029, "node_id": "MDU6SXNzdWU1NjE1NTkwMjk=", "number": 210, "title": "Bug: sampling fails if the `metric` argument is a string", "user": {"login": "teddygroves", "id": 17163471, "node_id": "MDQ6VXNlcjE3MTYzNDcx", "avatar_url": "https://avatars0.githubusercontent.com/u/17163471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teddygroves", "html_url": "https://github.com/teddygroves", "followers_url": "https://api.github.com/users/teddygroves/followers", "following_url": "https://api.github.com/users/teddygroves/following{/other_user}", "gists_url": "https://api.github.com/users/teddygroves/gists{/gist_id}", "starred_url": "https://api.github.com/users/teddygroves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teddygroves/subscriptions", "organizations_url": "https://api.github.com/users/teddygroves/orgs", "repos_url": "https://api.github.com/users/teddygroves/repos", "events_url": "https://api.github.com/users/teddygroves/events{/privacy}", "received_events_url": "https://api.github.com/users/teddygroves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-07T10:42:43Z", "updated_at": "2020-02-07T22:59:45Z", "closed_at": "2020-02-07T22:59:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nI got an error trying to run `CmdStanModel.sample` with the `metric` option set to `'dense'`. Attempted fix [here](https://github.com/stan-dev/cmdstanpy/pull/209).\r\n\r\n#### Description:\r\nCode to reproduce the bug:\r\n```\r\nimport cmdstanpy\r\nimport os\r\n\r\nbernoulli_stan = os.path.join(\r\n    cmdstanpy.cmdstan_path(), 'examples', 'bernoulli', 'bernoulli.stan'\r\n)\r\nbernoulli_model = cmdstanpy.CmdStanModel(stan_file=bernoulli_stan)\r\nbernoulli_data = { \"N\" : 10, \"y\" : [0,1,0,0,0,0,0,0,0,1] }\r\nbern_fit = bernoulli_model.sample(\r\n    data=bernoulli_data, output_dir='.', metric='dense'\r\n)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nmethod = sample (Default)\r\n  sample\r\n    num_samples = 1000 (Default)\r\n    num_warmup = 1000 (Default)\r\n    save_warmup = 0 (Default)\r\n    thin = 1 (Default)\r\n    adapt\r\n      engaged = 1 (Default)\r\n      gamma = 0.050000000000000003 (Default)\r\n      delta = 0.80000000000000004 (Default)\r\n      kappa = 0.75 (Default)\r\n      t0 = 10 (Default)\r\n      init_buffer = 75 (Default)\r\n      term_buffer = 50 (Default)\r\n      window = 25 (Default)\r\n    algorithm = hmc (Default)\r\n      hmc\r\n        engine = nuts (Default)\r\n          nuts\r\n            max_depth = 10 (Default)\r\n        metric = dense_e\r\n        metric_file = \"dense_e\"\r\n        stepsize = 1 (Default)\r\n        stepsize_jitter = 0 (Default)\r\nid = 4\r\ndata\r\n  file = /var/folders/nw/nbg0t9fx0hvdhwlgwk2kb48wqkndw3/T/tmp3jtwxoqx/hhy87zkt.json\r\ninit = 2 (Default)\r\nrandom\r\n  seed = 32077\r\noutput\r\n  file = /Users/tedgro/Code/pyhack/bernoulli-202002071207-4.csv\r\n  diagnostic_file =  (Default)\r\n  refresh = 100 (Default)\r\n\r\nCan't open specified file, \"\"dense_e\"\"\r\n```\r\n\r\n\r\n#### Additional Information:\r\nI think the problem happens because the if statement at [line 173](https://github.com/stan-dev/cmdstanpy/blob/edd34ed072cfb3cc30f0a9d8d8df2a7fd267d529/cmdstanpy/cmdstan_args.py#L173) of `cmdstan_args.py` isn't being triggered.\r\n\r\n#### Current Version:\r\n\r\nStan: 2.22.1\r\ncmdstanpy: 0.8.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/203", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/203/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/203/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/203", "id": 556518495, "node_id": "MDU6SXNzdWU1NTY1MTg0OTU=", "number": 203, "title": "Stan math can't multiply zero-sized arrays (was json dump can't handle ...)", "user": {"login": "SiegeLordEx", "id": 43966695, "node_id": "MDQ6VXNlcjQzOTY2Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/43966695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLordEx", "html_url": "https://github.com/SiegeLordEx", "followers_url": "https://api.github.com/users/SiegeLordEx/followers", "following_url": "https://api.github.com/users/SiegeLordEx/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLordEx/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLordEx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLordEx/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLordEx/orgs", "repos_url": "https://api.github.com/users/SiegeLordEx/repos", "events_url": "https://api.github.com/users/SiegeLordEx/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLordEx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-01-28T22:33:30Z", "updated_at": "2020-02-08T21:15:17Z", "closed_at": "2020-02-03T20:44:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nWhen passing zero size arrays (any of the dimensions are 0) as data, cmdstanpy loses the shape information.\r\n\r\n#### Description:\r\nConsider this code:\r\n\r\n```python\r\nimport os\r\nimport cmdstanpy\r\nimport numpy as np\r\n\r\ncode = \"\"\"\r\ndata {\r\n  int num_points;\r\n  matrix[num_points, 1] features;\r\n  int labels[num_points];\r\n}\r\nparameters {\r\n  vector[1] x;\r\n}\r\nmodel {\r\n  x[1] ~ normal(0, 1);\r\n}\r\ngenerated quantities {\r\n  real test_log_likelihood;\r\n  test_log_likelihood = bernoulli_logit_lpmf(labels | features * x);\r\n}\r\n\"\"\"\r\n\r\nfilename = '/tmp/stan_test.stan'\r\nwith open(filename, 'w') as f:\r\n  f.write(code)\r\n\r\nmodel = cmdstanpy.CmdStanModel(stan_file=filename)\r\nmodel.compile()\r\n\r\nout_dir = '/tmp/zero_stan_out'\r\nos.makedirs(out_dir)\r\nnum_points = 0\r\nprint(model.sample(\r\n    data={\r\n        'num_points': num_points,\r\n        'features': np.ones([num_points, 1]),\r\n        'labels': np.zeros([num_points], dtype=np.int32)\r\n    }, output_dir=out_dir).summary())\r\n```\r\n\r\nWhen I run it, I get a runtime error. Looking at the logs I see this:\r\n\r\n```\r\nException: mismatch in number dimensions declared and found in context; processing stage=data initializat\r\nion; variable name=features; dims declared=(0,1); dims found=(0)  (in '/tmp/stan_test.stan' at line 4)\r\n```\r\n\r\nIf I hack cmdstanpy/util.py to always use `rdump` instead of `jsondump`, it works fine, so it seems that `jsondump` is a lossy encoding in this situation.\r\n\r\n#### Additional Information\r\n\r\nThe use case is that I have a generic regression model where sometimes I have held out data I want to compute some quantity on. When I don't, I tried to represent it as an empty array, but that didn't work out.\r\n\r\nAs a workaround, I'll use some dummy test data for now.\r\n\r\n#### Current Version:\r\n0.0.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/202", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/202/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/202/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/202", "id": 555544197, "node_id": "MDU6SXNzdWU1NTU1NDQxOTc=", "number": 202, "title": "add args to CmdStanModel.compile() to debug new compiler", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-27T12:32:18Z", "updated_at": "2020-02-24T20:09:38Z", "closed_at": "2020-02-24T20:09:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nrelease 2.22 introduces stanc3 compiler, but also include stanc2 compiler.  to facilitate debugging, add arg `stanc2` to compile method - `False` by default - can be turned on to debug compiler issues.\r\n\r\n\r\n#### Description:\r\nsee https://github.com/stan-dev/cmdstanr/issues/115\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/200", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/200/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/200/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/200", "id": 555136879, "node_id": "MDU6SXNzdWU1NTUxMzY4Nzk=", "number": 200, "title": "Installation failing for CmdStan v. 2.22.0", "user": {"login": "justinbois", "id": 1873517, "node_id": "MDQ6VXNlcjE4NzM1MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1873517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinbois", "html_url": "https://github.com/justinbois", "followers_url": "https://api.github.com/users/justinbois/followers", "following_url": "https://api.github.com/users/justinbois/following{/other_user}", "gists_url": "https://api.github.com/users/justinbois/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinbois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinbois/subscriptions", "organizations_url": "https://api.github.com/users/justinbois/orgs", "repos_url": "https://api.github.com/users/justinbois/repos", "events_url": "https://api.github.com/users/justinbois/events{/privacy}", "received_events_url": "https://api.github.com/users/justinbois/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-25T20:52:16Z", "updated_at": "2020-02-03T17:18:51Z", "closed_at": "2020-02-03T17:18:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nInstallation on MacOS of CmdStan v. 2.22.0 fails.\r\n\r\n\r\n#### Description:\r\nI attempted to install CmdStan v. 2.22.0 by doing the following at the command line:\r\n\r\n`python -c \"import cmdstanpy; cmdstanpy.install_cmdstan()\";`\r\n\r\nThe `~/.cmdstanpy` directory did not exist prior to running this command.\r\n\r\nThe results are:\r\n```\r\n$ python -c \"import cmdstanpy; cmdstanpy.install_cmdstan()\";\r\nINFO:cmdstanpy:CmdStan version: 2.22.0\r\nINFO:cmdstanpy:Install directory: /Users/bois/.cmdstanpy\r\nINFO:cmdstanpy:Downloading CmdStan version 2.22.0\r\nINFO:cmdstanpy:Download successful, file: /var/folders/tj/4wnqnhc13cl70g85k6w4kbh80000gn/T/tmpoxhtudl7\r\nINFO:cmdstanpy:Unpacked download as cmdstan-2.22.0\r\nINFO:cmdstanpy:Building cmdstan-2.22.0 binaries\r\nINFO:cmdstanpy:Command \"make build\" failed\r\nINFO:cmdstanpy:/bin/sh: -c: line 0: syntax error near unexpected token `)'\r\nINFO:cmdstanpy:/bin/sh: -c: line 0: `cp bin/mac-stanc) bin/stanc'\r\nINFO:cmdstanpy:make: *** [bin/stanc] Error 2\r\nWARNING:cmdstanpy:CmdStan installation failed\r\ndeleting tmpfiles dir: /var/folders/tj/4wnqnhc13cl70g85k6w4kbh80000gn/T/tmpkeqfp8w6\r\ndone\r\n\r\n``` \r\n\r\nHowever installation of v. 2.21.0 is successful.\r\n\r\n```\r\n$ python -c \"import cmdstanpy; cmdstanpy.install_cmdstan(version='2.21.0')\";\r\nINFO:cmdstanpy:CmdStan version: 2.21.0\r\nINFO:cmdstanpy:Install directory: /Users/bois/.cmdstanpy\r\nINFO:cmdstanpy:Downloading CmdStan version 2.21.0\r\nINFO:cmdstanpy:Download successful, file: /var/folders/tj/4wnqnhc13cl70g85k6w4kbh80000gn/T/tmp1s17snp7\r\nINFO:cmdstanpy:Unpacked download as cmdstan-2.21.0\r\nINFO:cmdstanpy:Building cmdstan-2.21.0 binaries\r\nINFO:cmdstanpy:Test model compilation\r\nINFO:cmdstanpy:Installed cmdstan-2.21.0\r\ndeleting tmpfiles dir: /var/folders/tj/4wnqnhc13cl70g85k6w4kbh80000gn/T/tmpruubvn6c\r\ndone\r\n\r\n```\r\n\r\n#### Additional Information:\r\nmacos: Version 10.15.2\r\nXCode: Version 11.3.1 (11C504)\r\n\r\n#### Current Version:\r\ncmdstanpy: 0.8.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/199", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/199/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/199/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/199", "id": 551645873, "node_id": "MDU6SXNzdWU1NTE2NDU4NzM=", "number": 199, "title": "Need some way to display sampling error messages", "user": {"login": "seantalts", "id": 805356, "node_id": "MDQ6VXNlcjgwNTM1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/805356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seantalts", "html_url": "https://github.com/seantalts", "followers_url": "https://api.github.com/users/seantalts/followers", "following_url": "https://api.github.com/users/seantalts/following{/other_user}", "gists_url": "https://api.github.com/users/seantalts/gists{/gist_id}", "starred_url": "https://api.github.com/users/seantalts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seantalts/subscriptions", "organizations_url": "https://api.github.com/users/seantalts/orgs", "repos_url": "https://api.github.com/users/seantalts/repos", "events_url": "https://api.github.com/users/seantalts/events{/privacy}", "received_events_url": "https://api.github.com/users/seantalts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-17T21:43:56Z", "updated_at": "2020-03-08T23:09:14Z", "closed_at": "2020-03-08T23:09:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nI took a quick look and didn't see anything related to this - I can't figure out how to see error messages from CmdStanPy that are encountered during sampling (and ones encountered during compilation are not printed in a pretty way). Here is what error messages during sampling look like in colab:\r\n\r\n```\r\n/usr/local/lib/python3.6/dist-packages/cmdstanpy/model.py in sample(self, data, chains, cores, seed, chain_ids, inits, warmup_iters, sampling_iters, save_warmup, thin, max_treedepth, metric, step_size, adapt_engaged, adapt_delta, fixed_param, output_dir, save_diagnostics, show_progress)\r\n    726                             msg, i, runset._retcode(i)\r\n    727                         )\r\n--> 728                 raise RuntimeError(msg)\r\n    729             mcmc = CmdStanMCMC(runset, fixed_param)\r\n    730             mcmc._validate_csv_files()\r\n\r\nRuntimeError: Error during sampling, chain 0 returned error code 70, chain 1 returned error code 70, chain 2 returned error code 70, chain 3 returned error code 70\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/193", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/193/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/193/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/193", "id": 545381331, "node_id": "MDU6SXNzdWU1NDUzODEzMzE=", "number": 193, "title": "Stan model error output is unreadable", "user": {"login": "evgenyneu", "id": 880411, "node_id": "MDQ6VXNlcjg4MDQxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/880411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evgenyneu", "html_url": "https://github.com/evgenyneu", "followers_url": "https://api.github.com/users/evgenyneu/followers", "following_url": "https://api.github.com/users/evgenyneu/following{/other_user}", "gists_url": "https://api.github.com/users/evgenyneu/gists{/gist_id}", "starred_url": "https://api.github.com/users/evgenyneu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evgenyneu/subscriptions", "organizations_url": "https://api.github.com/users/evgenyneu/orgs", "repos_url": "https://api.github.com/users/evgenyneu/repos", "events_url": "https://api.github.com/users/evgenyneu/events{/privacy}", "received_events_url": "https://api.github.com/users/evgenyneu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-05T06:58:35Z", "updated_at": "2020-02-03T17:20:12Z", "closed_at": "2020-02-03T17:20:12Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nIf there are syntax errors in *.stan file, the error output is messy.\r\n\r\n#### Description:\r\n\r\nUse the code below and run it from the Terminal\r\n\r\n```\r\npython eight_schools.py\r\n```\r\n\r\nThe eight_schools.stan model has a syntax error (missing semicolon in declaration of `tau` parameter), so Stan complains. The problem is that the error messages are not printed very nicely and are hard to read:\r\n\r\n```\r\nINFO:cmdstanpy:stan to c++ (/Users/evgenii/Documents/2019_summer_project/logbook/a2020/a01/05_python_model/code/for_github/eight_schools.hpp)\r\nERROR:cmdstanpy:file /Users/evgenii/Documents/2019_summer_project/logbook/a2020/a01/05_python_model/code/for_github/eight_schools.stan, exception RuntimeError('ERROR\\n SYNTAX ERROR, MESSAGE(S) FROM PARSER:\\n error in \\'/Users/evgenii/Documents/2019_summer_project/logbook/a2020/a01/05_python_model/code/for_github/eight_schools.stan\\' at line 10, column 2\\n  -------------------------------------------------\\n     8:   real mu;                // population treatment effect\\n     9:   real<lower=0> tau       // MISSING SEMICOLON, standard deviation in treatment effects\\n    10:   vector[J] eta;          // unscaled deviation from mu by school\\n         ^\\n    11: }\\n  -------------------------------------------------\\n\\nPARSER EXPECTED: \";\"\\n\\nmake: *** [/Users/evgenii/Documents/2019_summer_project/logbook/a2020/a01/05_python_model/code/for_github/eight_schools.hpp] Error 253 ')\r\nERROR:cmdstanpy:model compilation failed\r\nTraceback (most recent call last):\r\n  File \"eight_schools.py\", line 3, in <module>\r\n    model = CmdStanModel(stan_file=\"eight_schools.stan\")\r\n  File \"/opt/miniconda3/lib/python3.7/site-packages/cmdstanpy/model.py\", line 138, in __init__\r\n    self._stan_file\r\nValueError: unable to compile Stan model file: /Users/evgenii/Documents/2019_summer_project/logbook/a2020/a01/05_python_model/code/for_github/eight_schools.stan\r\ndeleting tmpfiles dir: /var/folders/4s/0b1x7wr50dbdvx5skpv8j0sm0000gn/T/tmpfsltbmq5\r\ndone\r\n```\r\n\r\nIs there a way to make the error messages more readable? In particular, I would like to quickly see what is the problem in my *.stan file and what's the line number. As you can see, this is a bit hard to decipher from the output at the moment. Thanks :)\r\n\r\n#### Current Version:\r\n\r\n0.8.0\r\n\r\n## Code\r\n\r\n### eight_schools.py\r\n\r\n```Python\r\nfrom cmdstanpy import CmdStanModel\r\n\r\nmodel = CmdStanModel(stan_file=\"eight_schools.stan\")\r\n\r\ndata = {\r\n    \"J\": 8,\r\n    \"y\": [28,  8, -3,  7, -1,  1, 18, 12],\r\n    \"sigma\": [15, 10, 16, 11,  9, 11, 10, 18]\r\n}\r\n\r\nfit = model.sample(data=data)\r\nprint(fit.summary())\r\n```\r\n\r\n### eight_schools.stan\r\n\r\n```Stan\r\n// saved as 8schools.stan\r\ndata {\r\n  int<lower=0> J;         // number of schools\r\n  real y[J];              // estimated treatment effects\r\n  real<lower=0> sigma[J]; // standard error of effect estimates\r\n}\r\nparameters {\r\n  real mu;                // population treatment effect\r\n  real<lower=0> tau       // MISSING SEMICOLON, standard deviation in treatment effects\r\n  vector[J] eta;          // unscaled deviation from mu by school\r\n}\r\ntransformed parameters {\r\n  vector[J] theta = mu + tau * eta;        // school treatment effects\r\n}\r\nmodel {\r\n  target += normal_lpdf(eta | 0, 1);       // prior log-density\r\n  target += normal_lpdf(y | theta, sigma); // log-likelihood\r\n}\r\n\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/192", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/192/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/192/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/192", "id": 545377948, "node_id": "MDU6SXNzdWU1NDUzNzc5NDg=", "number": 192, "title": "How to specify a directory for compiled model?", "user": {"login": "evgenyneu", "id": 880411, "node_id": "MDQ6VXNlcjg4MDQxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/880411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evgenyneu", "html_url": "https://github.com/evgenyneu", "followers_url": "https://api.github.com/users/evgenyneu/followers", "following_url": "https://api.github.com/users/evgenyneu/following{/other_user}", "gists_url": "https://api.github.com/users/evgenyneu/gists{/gist_id}", "starred_url": "https://api.github.com/users/evgenyneu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evgenyneu/subscriptions", "organizations_url": "https://api.github.com/users/evgenyneu/orgs", "repos_url": "https://api.github.com/users/evgenyneu/repos", "events_url": "https://api.github.com/users/evgenyneu/events{/privacy}", "received_events_url": "https://api.github.com/users/evgenyneu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-05T06:19:39Z", "updated_at": "2020-01-06T04:09:12Z", "closed_at": "2020-01-06T04:08:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "When I call `CmdStanModel(stan_file=\"my_model.stan\")` it creates .hpp, .o and the binary file in the directory where `my_model.stan` is located. This is a bit inconvenient because I don't want to commit those files (.hpp, .o and binary) into git (I only need to commit the *.stan files). Is there a way to specify a different directory for those three files instead? This way, I can call this directory `stan_compile`, for example, and put it into .gitignore. Or maybe you can suggest a different way of achieving what I want?\r\n\r\nRight now, I use a hacky way of ignoring the compiled files, by putting the `my_model.stan` into `stan_compile` directory and adding this to .gitignore\r\n\r\n```\r\n**/stan_compile/*\r\n!**/stan_compile/*.stan\r\n```\r\n\r\nThis way I tell Git to ignore everything in `stan_compile` directory except files with .stan extension. I don't like this trick very much though, because it is a bit complicated and requires keeping the *.stan files in subdirectories.\r\n\r\n#### Current Version:\r\n\r\n0.8.0\r\n\r\nThanks :)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/191", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/191/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/191/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/191", "id": 543965888, "node_id": "MDU6SXNzdWU1NDM5NjU4ODg=", "number": 191, "title": "CmdStanModel not compiling by default?", "user": {"login": "seantalts", "id": 805356, "node_id": "MDQ6VXNlcjgwNTM1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/805356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seantalts", "html_url": "https://github.com/seantalts", "followers_url": "https://api.github.com/users/seantalts/followers", "following_url": "https://api.github.com/users/seantalts/following{/other_user}", "gists_url": "https://api.github.com/users/seantalts/gists{/gist_id}", "starred_url": "https://api.github.com/users/seantalts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seantalts/subscriptions", "organizations_url": "https://api.github.com/users/seantalts/orgs", "repos_url": "https://api.github.com/users/seantalts/repos", "events_url": "https://api.github.com/users/seantalts/events{/privacy}", "received_events_url": "https://api.github.com/users/seantalts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-30T18:12:24Z", "updated_at": "2019-12-31T20:59:56Z", "closed_at": "2019-12-31T00:10:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nCmdStanModel seems like it's defaulting to compile=False.\r\n\r\n#### Description:\r\nrunning something like\r\n```python\r\ncm = CmdStanModel(\"/home/sean/scm/cmdstan/examples/bernoulli/bernoulli.stan\")    \r\ncm.sample() \r\n```\r\nresults in ValueError: model not compiled\r\n```\r\nIn [10]: cm.sample()                                                                                 \r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-10-31b74a9f17cd> in <module>\r\n----> 1 cm.sample()\r\n\r\n~/scm/sbc/sbc.py/env/lib/python3.6/site-packages/cmdstanpy/model.py in sample(self, data, chains, cores, seed, chain_ids, inits, warmup_iters, sampling_iters, save_warmup, thin, max_treedepth, metric, step_size, adapt_engaged, adapt_delta, fixed_param, csv_basename, show_progress)\r\n    538                 output_basename=csv_basename,\r\n    539                 method_args=sampler_args,\r\n--> 540                 refresh=refresh,\r\n    541             )\r\n    542 \r\n\r\n~/scm/sbc/sbc.py/env/lib/python3.6/site-packages/cmdstanpy/cmdstan_args.py in __init__(self, model_name, model_exe, chain_ids, method_args, data, seed, inits, output_basename, refresh)\r\n    487             self.method = Method.VARIATIONAL\r\n    488         self.method_args.validate(len(chain_ids) if chain_ids else None)\r\n--> 489         self.validate()\r\n    490 \r\n    491     def validate(self) -> None:\r\n\r\n~/scm/sbc/sbc.py/env/lib/python3.6/site-packages/cmdstanpy/cmdstan_args.py in validate(self)\r\n    501             raise ValueError('no stan model specified')\r\n    502         if self.model_exe is None:\r\n--> 503             raise ValueError('model not compiled')\r\n    504 \r\n    505         if self.chain_ids is not None:\r\n\r\nValueError: model not compiled\r\n```\r\n#### Current Version:\r\n0.6.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/188", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/188/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/188/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/188", "id": 535857299, "node_id": "MDU6SXNzdWU1MzU4NTcyOTk=", "number": 188, "title": "Setting CMDSTAN environment variable causes test to fail", "user": {"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525781, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgx", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-10T16:51:32Z", "updated_at": "2020-02-18T14:40:35Z", "closed_at": "2020-02-18T14:40:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "#### Summary:\r\ncmdstanpy properly finds cmdstan when `CMDSTAN` environment is set, but one test does fail. \r\n\r\n#### Description:\r\nThere is a test to see that cmdstan is located at `~/.cmdstanpy/cmdstan-<version>`, but a user can change the location of cmdstan by setting `CMDSTAN` environment variable.\r\n\r\nhttps://github.com/stan-dev/cmdstanpy/blob/f20c9bb9002387dfc662fe84d98d24f9df1850e8/test/test_utils.py#L35-L40\r\n\r\n#### Current Version:\r\nmaster\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/186", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/186/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/186/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/186", "id": 534577226, "node_id": "MDU6SXNzdWU1MzQ1NzcyMjY=", "number": 186, "title": "allow all stanc and stanc3 compiler flags", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-08T17:59:15Z", "updated_at": "2020-02-24T20:14:54Z", "closed_at": "2020-02-24T20:14:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nsee discussion and solution for CmdStanR:\r\nhttps://github.com/stan-dev/cmdstanr/issues/71\r\n\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/185", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/185/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/185/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/185", "id": 533084476, "node_id": "MDU6SXNzdWU1MzMwODQ0NzY=", "number": 185, "title": "test for `csv_basename ` path clobbers files", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525781, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgx", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-05T02:29:00Z", "updated_at": "2019-12-10T20:46:13Z", "closed_at": "2019-12-10T20:46:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nNeed to refine logic here: https://github.com/stan-dev/cmdstanpy/blob/6469b46f396be4602cf64cf500f1dca3fe39fae2/cmdstanpy/cmdstan_args.py#L518-L528\r\n\r\n\r\n\r\n#### Description:\r\nexample - given model named \"foo.stan\",  compiled exe (on Linux and Mac) is \"foo\".\r\ncommand:  \r\n```\r\nfoo_model.sample(chains=1, csv_basename='./foo')\r\n```\r\ninadvertantly removes exe file - results in error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-7-31bf37869889> in <module>\r\n----> 1 foo_model.sample(chains=1, csv_basename='./foo')\r\n\r\n~/github/stan-dev/cmdstanpy/cmdstanpy/model.py in sample(self, data, chains, cores, seed, chain_ids, inits, warmup_iters, sampling_iters, save_warmup, thin, max_treedepth, metric, step_size, adapt_engaged, adapt_delta, fixed_param, csv_basename, show_progress)\r\n    685                             msg, i, runset._retcode(i)\r\n    686                         )\r\n--> 687                 raise RuntimeError(msg)\r\n    688             mcmc = CmdStanMCMC(runset, fixed_param)\r\n    689             mcmc._validate_csv_files()\r\n\r\nRuntimeError: Error during sampling, chain 0 returned error code -1\r\n```\r\n\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/178", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/178/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/178/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/178", "id": 527620734, "node_id": "MDU6SXNzdWU1Mjc2MjA3MzQ=", "number": 178, "title": "Some missing code blocks on readthedocs", "user": {"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-23T22:57:46Z", "updated_at": "2019-11-26T21:51:45Z", "closed_at": "2019-11-26T21:51:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nThere are a few code blocks that are not rendered in the online documentation.\r\n\r\n#### Description:\r\n\r\nMissing code blocks are present on the following pages:\r\n\r\n- https://cmdstanpy.readthedocs.io/en/latest/generate_quantities.html\r\n- https://cmdstanpy.readthedocs.io/en/latest/variational_bayes.html\r\n- https://cmdstanpy.readthedocs.io/en/latest/optimize.html\r\n\r\nThese code blocks render correctly on Github and when building the documentation offline via `sphinx-build`. Seems like it might be an issue specific to readthedocs.\r\n\r\nMost missing code blocks are `ipython3` or do not have a language specified. `python` code blocks are rendered correctly.\r\n\r\n`code-block::` doesn't seem to render online when the language is not specified, but `code::` does:\r\n\r\n- https://cmdstanpy.readthedocs.io/en/latest/sample.html\r\n\r\n#### Current Version:\r\nmaster (0.6.0)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/176", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/176/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/176/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/176", "id": 527209622, "node_id": "MDU6SXNzdWU1MjcyMDk2MjI=", "number": 176, "title": "Set __all__ in __init__.py", "user": {"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-22T13:56:27Z", "updated_at": "2020-02-12T02:29:17Z", "closed_at": "2020-02-12T02:29:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nGood morning! I think `__all__` should be set in `__init__.py`\r\n\r\n#### Description:\r\n\r\nI realize the following is not usually considered good practice, but if someone imports as follows it imports everything not prefixed with an underscore:\r\n\r\n```\r\n>>>from cmdstanpy import *\r\n>>> dir()\r\n['CmdStanGQ', 'CmdStanMCMC', 'CmdStanMLE', 'CmdStanModel', 'CmdStanVB', \r\n'STANSUMMARY_STATS', 'TMPDIR', '__annotations__', '__builtins__', '__doc__', '__loader__', \r\n'__name__', '__package__', '__spec__', 'atexit', 'cleanup_tmpdir', 'cmdstan_args', 'cmdstan_path',\r\n'install_cmdstan', 'model', 'set_cmdstan_path', 'set_make_env', 'shutil', 'stanfit', 'tempfile', 'utils']\r\n```\r\n\r\nTo solve this either `__all__` can be set explicitly to those items that the project wants exported for the \"public API\".\r\n\r\nFor example, it could be set as:\r\n\r\n```\r\n__all__ = ['set_cmdstan_path', 'cmdstan_path', 'set_make_env',\r\n            'install_cmdstan', 'set_cmdstan_path', 'CmdStanMLE', 'CmdStanGQ',\r\n            'CmdStanVB', 'CmdStanModel' ]\r\n```\r\n\r\nAlternatively it could be set to an empty list indicating the module is not designed for this type of import statement:\r\n\r\n```\r\n__all__ = []\r\n```\r\n\r\nIn this case the module can still be imported as usual with:\r\n\r\n```\r\nimport cmdstanpy\r\n```\r\n\r\nor one can indicate what to import explicitly:\r\n\r\n```\r\nfrom cmdstanpy import cmdstan_path\r\n```\r\n\r\nHere is the [PEP8 reference](https://www.python.org/dev/peps/pep-0008/#public-and-internal-interfaces).\r\n\r\n#### Current Version:\r\n\r\nmaster branch (0.6.0)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/174", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/174/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/174/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/174", "id": 526855444, "node_id": "MDU6SXNzdWU1MjY4NTU0NDQ=", "number": 174, "title": "Cleanup compiled files after tests", "user": {"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-21T21:37:41Z", "updated_at": "2019-11-24T03:13:10Z", "closed_at": "2019-11-24T03:13:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nI would like to implement a way to cleanup the executable files, object files, and header files generated from running `pytest`.\r\n\r\n#### Description:\r\n\r\nSeveral files are generated after tests are run. These can be automatically removed as part of the tests by using a pytest fixture for each class.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/173", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/173/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/173/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/173", "id": 526676034, "node_id": "MDU6SXNzdWU1MjY2NzYwMzQ=", "number": 173, "title": "Windows 10 cannot import cmdstanpy after installation", "user": {"login": "footballdaniel", "id": 49101345, "node_id": "MDQ6VXNlcjQ5MTAxMzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/49101345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/footballdaniel", "html_url": "https://github.com/footballdaniel", "followers_url": "https://api.github.com/users/footballdaniel/followers", "following_url": "https://api.github.com/users/footballdaniel/following{/other_user}", "gists_url": "https://api.github.com/users/footballdaniel/gists{/gist_id}", "starred_url": "https://api.github.com/users/footballdaniel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/footballdaniel/subscriptions", "organizations_url": "https://api.github.com/users/footballdaniel/orgs", "repos_url": "https://api.github.com/users/footballdaniel/repos", "events_url": "https://api.github.com/users/footballdaniel/events{/privacy}", "received_events_url": "https://api.github.com/users/footballdaniel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-21T15:42:52Z", "updated_at": "2020-03-10T18:34:00Z", "closed_at": "2020-03-10T18:33:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nAfter successful cmdstan installation trough the python console, running the bernoulli-example in a virtual conda environment doesn't work.\r\n\r\n#### Description:\r\nI tried using cmdstanpy two different ways\r\n- Installing `pip install cmdstanpy` works, but the import of the package in the bernoulli script fails: `ImportError: cannot import name 'Model' from 'cmdstanpy`\r\n- Installing `pip install -e git+https://github.com/stan-dev/cmdstanpy#egg=cmdstanpy` yields the same error\r\n\r\n#### Additional Information:\r\nTo build cmdstan (trough `import cmdstanpy\r\ncmdstanpy.install_cmdstan()`), I had to:\r\n`SET PATH=C:\\Rtools\\bin;C:\\Rtools\\mingw_64\\bin;%PATH%`\r\n`SET MAKE=mingw32-make.exe`\r\n\r\n#### Current Version:\r\nWindows 10\r\nRtools 3.4\r\nPython 3.74\r\nconda 4.7.12\r\ngcc 4.9.3\r\nMingw64\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/169", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/169/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/169/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/169", "id": 520328753, "node_id": "MDU6SXNzdWU1MjAzMjg3NTM=", "number": 169, "title": "compile should call make, not bin/stanc", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-09T04:05:03Z", "updated_at": "2019-11-14T03:18:50Z", "closed_at": "2019-11-14T03:18:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\ncompile should use the `make` command, not `bin/stanc`\r\nsee implementation in CmdStanR.\r\n\r\n#### Description:\r\n`make` command add compiler flags.\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/167", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/167/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/167/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/167", "id": 519222533, "node_id": "MDU6SXNzdWU1MTkyMjI1MzM=", "number": 167, "title": "Spaces in directory path cause errors in sampling", "user": {"login": "wesbarnett", "id": 5508833, "node_id": "MDQ6VXNlcjU1MDg4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesbarnett", "html_url": "https://github.com/wesbarnett", "followers_url": "https://api.github.com/users/wesbarnett/followers", "following_url": "https://api.github.com/users/wesbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/wesbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesbarnett/subscriptions", "organizations_url": "https://api.github.com/users/wesbarnett/orgs", "repos_url": "https://api.github.com/users/wesbarnett/repos", "events_url": "https://api.github.com/users/wesbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/wesbarnett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-11-07T11:58:21Z", "updated_at": "2019-11-25T22:14:53Z", "closed_at": "2019-11-14T04:10:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "#### Summary:\r\nI was at the tutorial session at PyData NYC on Wednesday afternoon. I'm getting an error running some of the tutorial code on my Mac (but can run it fine on Linux).\r\n\r\n#### Description:\r\nHere is the python code, stan code, and data that are causing the error:\r\n\r\n```python\r\nimport os\r\nfrom cmdstanpy import CmdStanModel\r\nimport pandas as pd\r\n\r\nseason_1975 = pd.read_csv('efron-morris-75-data.csv')\r\ndata_dict = {'N': season_1975.shape[0], 'y' : season_1975['Hits'].tolist(), 'K' : season_1975['At-Bats'].tolist()}\r\n\r\nmodel_complete_pool = CmdStanModel(stan_file='simple_pool.stan')\r\nmodel_complete_pool.compile()\r\ncomplete_pool_fit = model_complete_pool.sample(data=data_dict)\r\ncomplete_pool_fit.summary().round(decimals=2)\r\n```\r\n\r\n```\r\nFirstName,LastName,At-Bats,Hits,BattingAverage,RemainingAt-Bats,RemainingAverage,SeasonAt-Bats,SeasonHits,SeasonAverage\r\nRoberto,Clemente,45,18,0.4,367,0.346,412,145,0.352\r\nFrank,Robinson,45,17,0.378,426,0.2981,471,144,0.306\r\nFrank,Howard,45,16,0.356,521,0.2764,566,160,0.283\r\nJay,Johnstone,45,15,0.333,275,0.2218,320,76,0.238\r\nKen,Berry,45,14,0.311,418,0.2727,463,128,0.276\r\nJim,Spencer,45,14,0.311,466,0.2704,511,140,0.274\r\nDon,Kessinger,45,13,0.289,586,0.2645,631,168,0.266\r\nLuis,Alvarado,45,12,0.267,138,0.2101,183,41,0.224\r\nRon,Santo,45,11,0.244,510,0.2686,555,148,0.267\r\nRon,Swaboda,45,11,0.244,200,0.23,245,57,0.233\r\nRico,Petrocelli,45,10,0.222,538,0.2639,583,152,0.261\r\nEllie,Rodriguez,45,10,0.222,186,0.2258,231,52,0.225\r\nGeorge,Scott,45,10,0.222,435,0.3034,480,142,0.296\r\nDel,Unser,45,10,0.222,277,0.2635,322,83,0.258\r\nBilly,Williams,45,10,0.222,591,0.3299,636,205,0.251\r\nBert,Campaneris,45,9,0.2,558,0.2849,603,168,0.279\r\nThurman,Munson,45,8,0.178,408,0.3162,453,137,0.302\r\nMax,Alvis,45,7,0.156,70,0.2,115,21,0.183\r\n```\r\n\r\n```stan\r\ndata {\r\n  int<lower=0> N;           // items\r\n  int<lower=0> K[N];        // initial trials\r\n  int<lower=0> y[N];        // initial successes\r\n}\r\nparameters {\r\n  real<lower=0, upper=1> phi;  // chance of success (pooled)\r\n}\r\nmodel {\r\n  y ~ binomial(K, phi);  // likelihood\r\n}\r\n```\r\n\r\nThe error I am getting is the following:\r\n```\r\nINFO:cmdstanpy:stan to c++ (/var/folders/yl/v6d742w56rjdcr406hdxkfpr0000gn/T/tmpuy6wrr9z/tmpwf4d7zmm.hpp)\r\nINFO:cmdstanpy:compiling c++\r\nINFO:cmdstanpy:compiled model file: simple_pool\r\nINFO:cmdstanpy:start chain 1\r\nINFO:cmdstanpy:start chain 2\r\nINFO:cmdstanpy:start chain 3\r\nINFO:cmdstanpy:start chain 4\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 10, in <module>\r\n    complete_pool_fit = model_complete_pool.sample(data=data_dict)\r\n  File \"/Users/<user>/Documents/PyData NYC 2019/bayesian_inference/venv/lib/python3.7/site-packages/cmdstanpy/model.py\", line 615, in sample\r\n    raise RuntimeError(msg)\r\nRuntimeError: Error during sampling, chain 0 returned error code -1, chain 1 returned error code -1, chain 2 returned error code -1, chain 3 returned error code -1\r\ndeleting tmpfiles dir: /var/folders/yl/v6d742w56rjdcr406hdxkfpr0000gn/T/tmpjwvcen19\r\ndone\r\n```\r\n\r\n#### Additional Information:\r\nThis error only occurs on MacOS. It does not seem to be a problem on my Linux machine. I've tried reinstalling both cmdstan and cmdstanpy.\r\n\r\n#### Current Version:\r\ncmdstanpy: 0.6.0\r\ncmdstan: 2.21.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/165", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/165/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/165/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/165", "id": 516836595, "node_id": "MDU6SXNzdWU1MTY4MzY1OTU=", "number": 165, "title": "Use linting to check code", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-03T14:35:01Z", "updated_at": "2019-12-05T01:54:30Z", "closed_at": "2019-12-05T01:54:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nWe should check our PR with linting (e.g. pylint) so invalid code does not get into codebase.\r\n\r\n\r\n#### Description:\r\n\r\nThere was `os.path.exist` vs `os.path.exists` issue (typo I accidentally created). I though we had some linting checks, but apparently we don't have.\r\n\r\n#### Additional Information:\r\n\r\nI usually use `pylint`.\r\n\r\n#### Current Version:\r\n\r\nmaster", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/161", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/161/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/161/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/161", "id": 516813516, "node_id": "MDU6SXNzdWU1MTY4MTM1MTY=", "number": 161, "title": "AttributeError: module 'ntpath' has no attribute 'exist'", "user": {"login": "guihigashi", "id": 7825153, "node_id": "MDQ6VXNlcjc4MjUxNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7825153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guihigashi", "html_url": "https://github.com/guihigashi", "followers_url": "https://api.github.com/users/guihigashi/followers", "following_url": "https://api.github.com/users/guihigashi/following{/other_user}", "gists_url": "https://api.github.com/users/guihigashi/gists{/gist_id}", "starred_url": "https://api.github.com/users/guihigashi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guihigashi/subscriptions", "organizations_url": "https://api.github.com/users/guihigashi/orgs", "repos_url": "https://api.github.com/users/guihigashi/repos", "events_url": "https://api.github.com/users/guihigashi/events{/privacy}", "received_events_url": "https://api.github.com/users/guihigashi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-03T11:19:24Z", "updated_at": "2019-11-03T14:12:09Z", "closed_at": "2019-11-03T14:12:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nPlease provide a short couple sentence summary.\r\n\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\nutils.py line 228\r\n`        elif os.path.exist(os.path.join(toolchain_root, 'mingw64')):`\r\ni believe the function is \"`exists`\" not \"`exist`\"\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/158", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/158/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/158/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/158", "id": 515704396, "node_id": "MDU6SXNzdWU1MTU3MDQzOTY=", "number": 158, "title": "sampler should allow output diagnostic file - \"save_diagnostics\"", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-31T19:55:29Z", "updated_at": "2019-12-05T23:59:07Z", "closed_at": "2019-12-05T23:59:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nmatch existing functionality in CmdStanR\r\n\r\nhttps://github.com/stan-dev/cmdstanr/pull/52\r\n\r\n#### Description:\r\nsee implementation here\r\n\r\nhttps://github.com/stan-dev/cmdstanr/blob/e9aa12576d7ee7843274d46a154ec4112c0a446a/R/args.R#L72\r\n\r\nhttps://github.com/stan-dev/cmdstanr/blob/e9aa12576d7ee7843274d46a154ec4112c0a446a/R/fit.R#L364-L393\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/157", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/157/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/157/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/157", "id": 514312694, "node_id": "MDU6SXNzdWU1MTQzMTI2OTQ=", "number": 157, "title": "Consider using hash of source rather than mtime to invalidate the exe file.", "user": {"login": "SiegeLordEx", "id": 43966695, "node_id": "MDQ6VXNlcjQzOTY2Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/43966695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLordEx", "html_url": "https://github.com/SiegeLordEx", "followers_url": "https://api.github.com/users/SiegeLordEx/followers", "following_url": "https://api.github.com/users/SiegeLordEx/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLordEx/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLordEx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLordEx/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLordEx/orgs", "repos_url": "https://api.github.com/users/SiegeLordEx/repos", "events_url": "https://api.github.com/users/SiegeLordEx/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLordEx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-30T00:19:21Z", "updated_at": "2019-11-01T12:55:02Z", "closed_at": "2019-11-01T12:55:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nWhen storing the source file inline (like https://github.com/stan-dev/cmdstanpy/issues/102#issuecomment-520237832), the CmdStanPy will constantly recompile the model because the source file will be re-written each time the Python source is ran. To avoid this, a user could check that the .stan file already exists or do some hash check to avoid re-writing the file, letting the current CmdStanPy's mtime-based caching logic do its thing. I am suggesting changing CmdStanPy to base its cache invalidation logic on the hash of the .stan file.\r\n\r\nI.e. upon compilation, CmdStanPy would store the hash of the source file somewhere, and next time `compile` is called, it would check the hash of the source against what is stored on disk and recompile if there's a mismatch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/156", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/156/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/156/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/156", "id": 514307250, "node_id": "MDU6SXNzdWU1MTQzMDcyNTA=", "number": 156, "title": "Float doesn't work as initialization for `sample`.", "user": {"login": "SiegeLordEx", "id": 43966695, "node_id": "MDQ6VXNlcjQzOTY2Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/43966695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLordEx", "html_url": "https://github.com/SiegeLordEx", "followers_url": "https://api.github.com/users/SiegeLordEx/followers", "following_url": "https://api.github.com/users/SiegeLordEx/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLordEx/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLordEx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLordEx/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLordEx/orgs", "repos_url": "https://api.github.com/users/SiegeLordEx/repos", "events_url": "https://api.github.com/users/SiegeLordEx/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLordEx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525781, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgx", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-30T00:03:52Z", "updated_at": "2019-11-27T00:02:55Z", "closed_at": "2019-11-27T00:02:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nThe documentation for `sample` in version 0.6.0 says that in addition to strings and dictionaries, single non-negative floats should also work, but in actuality they raise an error.\r\n\r\n#### Description:\r\nConsider this code:\r\n\r\n```python\r\nimport cmdstanpy\r\n\r\ncode = \"\"\"\r\nparameters {\r\n  real x;\r\n}\r\nmodel {\r\n  x ~ normal(0, 1);\r\n}\r\n\"\"\"\r\n\r\nfilename = '/tmp/stan_test.stan'\r\nwith open(filename, 'w') as f:\r\n  f.write(code)\r\n\r\nmodel = cmdstanpy.CmdStanModel(stan_file=filename)\r\nmodel.compile()\r\nmodel.sample(inits=0.)\r\n```\r\n\r\nThis raises the error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 18, in <module>\r\n    model.sample(inits=0.)\r\n  File \"/usr/local/google/home/siege/.local/lib/python3.7/site-packages/cmdstanpy/model.py\", line 530, in sample                           \r\n    with MaybeDictToFilePath(data, inits) as (_data, _inits):\r\n  File \"/usr/local/google/home/siege/.local/lib/python3.7/site-packages/cmdstanpy/utils.py\", line 84, in __init__                          \r\n    raise ValueError('data must be string or dict')\r\nValueError: data must be string or dict\r\n```\r\n\r\nChanging it to `model.sample(inits={'x': 0.})` works, but shouldn't be necessary according to the documentation.\r\n\r\n#### Current Version:\r\n0.6.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/155", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/155/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/155/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/155", "id": 512667051, "node_id": "MDU6SXNzdWU1MTI2NjcwNTE=", "number": 155, "title": "rethinking fixed_params=True - sampling always runs 4 chains", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-25T18:52:59Z", "updated_at": "2020-04-11T18:26:13Z", "closed_at": "2020-04-11T18:26:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nrunning 4 chains with fixed params = True can run 4 chains in parallel because there's no work to be done, so it's pretty lightweight\r\n\r\n#### Description:\r\nif this makes code cleaner and more maintainable, implement, else don't.\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/154", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/154/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/154/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/154", "id": 512660269, "node_id": "MDU6SXNzdWU1MTI2NjAyNjk=", "number": 154, "title": "sampling argument names - again!  warmup_iters, sampling_iters don't match cmdstan", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-25T18:38:22Z", "updated_at": "2020-03-07T17:53:14Z", "closed_at": "2020-03-07T17:53:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nCmdStanPy and CmdStanR should find a good consistent names for these and they should be updated for CmdStan and the semantics must be the same everywhere.\r\n\r\n\r\n#### Description:\r\nin CmdStan, total number of iterations is num_warmup + num_samples\r\nCmdStanPy and CmdStanR should do the same thing.\r\n\r\nthere is noise from the fact that RStan does things differently and PyStan follows RStan.\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/153", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/153/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/153/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/153", "id": 512643758, "node_id": "MDU6SXNzdWU1MTI2NDM3NTg=", "number": 153, "title": "CmdStanModel - default behavoir - compile on instantiation", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T17:57:44Z", "updated_at": "2019-11-08T18:40:50Z", "closed_at": "2019-11-08T18:40:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nquestion from user:  why not compile automatically on instantiation?\r\n\r\n\r\n#### Description:\r\n\r\nadd argument to init function `compile: bool = True`\r\n\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/152", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/152/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/152/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/152", "id": 512017704, "node_id": "MDU6SXNzdWU1MTIwMTc3MDQ=", "number": 152, "title": "more options for handling console output", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-24T15:24:20Z", "updated_at": "2020-03-08T23:55:38Z", "closed_at": "2020-03-08T23:55:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nBy default, console output goes to a file - allow user to let it stream to python console as needed.\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/150", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/150/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/150/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/150", "id": 510790796, "node_id": "MDU6SXNzdWU1MTA3OTA3OTY=", "number": 150, "title": "Another code 70 run time error, string being passed as data, confusing error", "user": {"login": "breckbaldwin", "id": 6377185, "node_id": "MDQ6VXNlcjYzNzcxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6377185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/breckbaldwin", "html_url": "https://github.com/breckbaldwin", "followers_url": "https://api.github.com/users/breckbaldwin/followers", "following_url": "https://api.github.com/users/breckbaldwin/following{/other_user}", "gists_url": "https://api.github.com/users/breckbaldwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/breckbaldwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/breckbaldwin/subscriptions", "organizations_url": "https://api.github.com/users/breckbaldwin/orgs", "repos_url": "https://api.github.com/users/breckbaldwin/repos", "events_url": "https://api.github.com/users/breckbaldwin/events{/privacy}", "received_events_url": "https://api.github.com/users/breckbaldwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-22T17:09:02Z", "updated_at": "2019-10-24T14:22:38Z", "closed_at": "2019-10-24T14:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nMalformed data values will crash with inexplicable code 70 run time error, cmdstan has more sensible \"variable: N, error: string values not allowed\" for same problem.\r\n\r\n\r\n#### Description:\r\n```\r\nimport os\r\nfrom cmdstanpy import cmdstan_path, CmdStanModel\r\nimport sys\r\n\r\nmodel_code = \"\"\"\r\ndata {\r\n   int N;\r\n}\r\n\r\nparameters {\r\n  real<lower=0,upper=1> theta;\r\n} \r\nmodel {\r\n   N ~ normal(theta,1);\r\n}\r\n\"\"\"\r\n\r\npath='/tmp/foo.stan'\r\n\r\nwith open(path, 'w') as f:\r\n  f.write(model_code)\r\n\r\n\r\nhello_model = CmdStanModel(stan_file=path)\r\nhello_model.compile()\r\n\r\n\r\njson_data = {\"N\" : \"1\"} #bombs out with code 70 error\r\n\r\n#json_data = {\"N\" : 1} #works\r\n\r\nfit = hello_model.sample(data=json_data, csv_basename='./hello')\r\n\r\n\r\n```\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\ncmdstanpy, 0.5.0, cmdstan 2.20.0 , OSX 10.13.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/149", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/149/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/149/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/149", "id": 510725911, "node_id": "MDU6SXNzdWU1MTA3MjU5MTE=", "number": 149, "title": "Stan program prints not getting through to console ", "user": {"login": "breckbaldwin", "id": 6377185, "node_id": "MDQ6VXNlcjYzNzcxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6377185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/breckbaldwin", "html_url": "https://github.com/breckbaldwin", "followers_url": "https://api.github.com/users/breckbaldwin/followers", "following_url": "https://api.github.com/users/breckbaldwin/following{/other_user}", "gists_url": "https://api.github.com/users/breckbaldwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/breckbaldwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/breckbaldwin/subscriptions", "organizations_url": "https://api.github.com/users/breckbaldwin/orgs", "repos_url": "https://api.github.com/users/breckbaldwin/repos", "events_url": "https://api.github.com/users/breckbaldwin/events{/privacy}", "received_events_url": "https://api.github.com/users/breckbaldwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-22T15:12:57Z", "updated_at": "2020-02-25T23:34:58Z", "closed_at": "2020-02-25T23:34:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nCould use print statements for Stan debugging but the below Stan print statements do not make it to the console. \r\n\r\n\r\n#### Description:\r\n\r\nCode: \r\n```\r\nimport os\r\nfrom cmdstanpy import cmdstan_path, CmdStanModel\r\n\r\nmodel_code = \"\"\"transformed data {\r\n  print(\"Hello from transformed data\");\r\n}\r\n\r\nparameters {\r\n  real<lower=0,upper=1> theta3;\r\n} \r\nmodel {\r\n  print(\"hi from the model block\");\r\n}\r\n\"\"\"\r\n\r\npath='/tmp/foo.stan'\r\n\r\nwith open(path, 'w') as f:\r\n  f.write(model_code)\r\n\r\n\r\nhello_model = CmdStanModel(stan_file=path)\r\nhello_model.compile()\r\n\r\nfit = hello_model.sample(csv_basename='./hello')\r\n```\r\n\r\n\r\n\r\n#### Additional Information:\r\nNone\r\n\r\n#### Current Version:\r\ncmdstanpy, 0.5.0, cmdstan 2.20.0 , OSX 10.13.6\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/146", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/146/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/146/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/146", "id": 509412532, "node_id": "MDU6SXNzdWU1MDk0MTI1MzI=", "number": 146, "title": "Handle TBB lib on Windows", "user": {"login": "rok-cesnovar", "id": 28476796, "node_id": "MDQ6VXNlcjI4NDc2Nzk2", "avatar_url": "https://avatars0.githubusercontent.com/u/28476796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rok-cesnovar", "html_url": "https://github.com/rok-cesnovar", "followers_url": "https://api.github.com/users/rok-cesnovar/followers", "following_url": "https://api.github.com/users/rok-cesnovar/following{/other_user}", "gists_url": "https://api.github.com/users/rok-cesnovar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rok-cesnovar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rok-cesnovar/subscriptions", "organizations_url": "https://api.github.com/users/rok-cesnovar/orgs", "repos_url": "https://api.github.com/users/rok-cesnovar/repos", "events_url": "https://api.github.com/users/rok-cesnovar/events{/privacy}", "received_events_url": "https://api.github.com/users/rok-cesnovar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-19T07:57:23Z", "updated_at": "2019-10-24T14:08:08Z", "closed_at": "2019-10-24T14:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nCmdstan 2.21 now includes the Intel TBB library. This changes nothing for non-Windows users in terms of how they build models.\r\n\r\nWindows users of cmdstan have the option of adding the path to the build library (`<cmdstan-path>/stan/lib/stan_math/lib/tbb`) to their user of system PATH variable. If they dont do that, the tbb.dll is copied to the executable folder for each model. \r\n\r\nSo techincally they also dont have to do anything, but to avoid copying of dlls or requiring the users to set the path variable cmdstanpy and cmdstanr could provide convenience features that Windows users dont have to add that. \r\n\r\nThe easiest solution would be to add the above path to the PATH variable for the session or simply for every run.\r\n\r\n#### Additional Information:\r\n/\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/142", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/142/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/142/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/142", "id": 507419607, "node_id": "MDU6SXNzdWU1MDc0MTk2MDc=", "number": 142, "title": "show_progress with warmup_iters causes exception", "user": {"login": "brianwa84", "id": 22173987, "node_id": "MDQ6VXNlcjIyMTczOTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/22173987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianwa84", "html_url": "https://github.com/brianwa84", "followers_url": "https://api.github.com/users/brianwa84/followers", "following_url": "https://api.github.com/users/brianwa84/following{/other_user}", "gists_url": "https://api.github.com/users/brianwa84/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianwa84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianwa84/subscriptions", "organizations_url": "https://api.github.com/users/brianwa84/orgs", "repos_url": "https://api.github.com/users/brianwa84/repos", "events_url": "https://api.github.com/users/brianwa84/events{/privacy}", "received_events_url": "https://api.github.com/users/brianwa84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-15T18:48:56Z", "updated_at": "2019-10-16T11:45:48Z", "closed_at": "2019-10-16T11:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nAsking for progress bars while also specifying warmup_iters causes an exception.\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\n\r\n```\r\nUnboundLocalError                         Traceback (most recent call last)\r\n<ipython-input-76-8ee5387fd82b> in <module>()\r\n     42             durations=np.float64([2., 4., 3.]),\r\n     43             observations=np.int64([100, 175, 165]))\r\n---> 44 fit = m.sample(chains=4, cores=2, data=data, warmup_iters=500, sampling_iters=500, step_size=.005, thin=150, show_progress=True)\r\n     45 fit.summary()\r\n\r\n/usr/local/lib/python3.6/dist-packages/cmdstanpy/model.py in sample(self, data, chains, cores, seed, chain_ids, inits, warmup_iters, sampling_iters, save_warmup, thin, max_treedepth, metric, step_size, adapt_engaged, adapt_delta, fixed_param, csv_basename, show_progress)\r\n    496                     s_iters = 1000\r\n    497                 refresh = max(\r\n--> 498                     int((s_iters + w_iters) // num_updates),\r\n    499                     1,\r\n    500                 )\r\n\r\nUnboundLocalError: local variable 'w_iters' referenced before assignment\r\n```\r\nIt appears the code in question will only work when `warmup_iters is None`\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n2.19.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/141", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/141/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/141/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/141", "id": 507410276, "node_id": "MDU6SXNzdWU1MDc0MTAyNzY=", "number": 141, "title": "Error code 70", "user": {"login": "brianwa84", "id": 22173987, "node_id": "MDQ6VXNlcjIyMTczOTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/22173987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianwa84", "html_url": "https://github.com/brianwa84", "followers_url": "https://api.github.com/users/brianwa84/followers", "following_url": "https://api.github.com/users/brianwa84/following{/other_user}", "gists_url": "https://api.github.com/users/brianwa84/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianwa84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianwa84/subscriptions", "organizations_url": "https://api.github.com/users/brianwa84/orgs", "repos_url": "https://api.github.com/users/brianwa84/repos", "events_url": "https://api.github.com/users/brianwa84/events{/privacy}", "received_events_url": "https://api.github.com/users/brianwa84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-10-15T18:29:06Z", "updated_at": "2020-03-08T23:18:57Z", "closed_at": "2020-03-08T23:18:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nI have a model, and it compiles. Yay! But when I try to sample, I get error code 70 on each chain, with no explanation about what that means.\r\n\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible. Code is below. The stack trace is ~useless.\r\n\r\n```python\r\n\r\nimport cmdstanpy\r\nmodel_code = \"\"\"\r\n  data {\r\n    int <lower=0> num_points;\r\n    int <lower=0> num_features;\r\n    vector[num_features] locations[num_points];\r\n    real <lower=0> durations[num_points];\r\n    int <lower=0> observations[num_points];\r\n  }\r\n  parameters {\r\n    real <lower=0> amplitude;\r\n    real <lower=0> length_scale;\r\n    vector[num_points] log_intensities;\r\n  }\r\n  transformed parameters {\r\n    vector[num_points] zero;\r\n    matrix[num_points, num_points] L_K;\r\n    real mean_log_intensity;\r\n    {\r\n      matrix[num_points, num_points] K = gp_matern32_cov(locations, amplitude, length_scale);\r\n      L_K = cholesky_decompose(K);\r\n      for (i in 1:num_points) mean_log_intensity += (log(observations[i]) - log(durations[i]));\r\n      mean_log_intensity /= num_points;\r\n    }\r\n  }\r\n  model {\r\n    log_intensities ~ multi_normal_cholesky(zero, L_K);\r\n    for (i in 1:num_points) observations[i] ~ poisson_log(mean_log_intensity + log_intensities[i] + log(durations[i]));\r\n  }\r\n\"\"\"\r\n\r\npath='/tmp/foo.stan'\r\nwith open(path, 'w') as f:\r\n  f.write(model_code)\r\n\r\nm = cmdstanpy.Model(path)\r\nm.compile()\r\nfit = m.sample(chains=4, cores=2, data=dict(num_points=3, num_features=2, locations=[[1., 2.], [2., 3], [3., 4]], durations=[2., 4., 3.], observations=[100., 175., 165.]))\r\nfit.summary()\r\n\r\n```\r\n\r\nError log here:\r\n```\r\nINFO:cmdstanpy:compiling c++\r\nINFO:cmdstanpy:compiled model file: /tmp/foo\r\nINFO:cmdstanpy:start chain 1\r\nINFO:cmdstanpy:start chain 2\r\nINFO:cmdstanpy:finish chain 1\r\nINFO:cmdstanpy:start chain 3\r\nINFO:cmdstanpy:finish chain 2\r\nINFO:cmdstanpy:start chain 4\r\nINFO:cmdstanpy:finish chain 3\r\nINFO:cmdstanpy:finish chain 4\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-59-09ad9f23ba87> in <module>()\r\n     39 m.compile()\r\n     40 # print(m.code())\r\n---> 41 fit = m.sample(chains=4, cores=2, data=dict(num_points=3, num_features=2, locations=[[1., 2.], [2., 3], [3., 4]], durations=[2., 4., 3.], observations=[100., 175., 165.]))\r\n     42 fit.summary()\r\n\r\n/usr/local/lib/python3.6/dist-packages/cmdstanpy/model.py in sample(self, data, chains, cores, seed, chain_ids, inits, warmup_iters, sampling_iters, save_warmup, thin, max_treedepth, metric, step_size, adapt_engaged, adapt_delta, fixed_param, csv_basename, show_progress)\r\n    610                             msg, i, runset._retcode(i)\r\n    611                         )\r\n--> 612                 raise RuntimeError(msg)\r\n    613             stanfit = StanFit(runset, fixed_param)\r\n    614             stanfit._validate_csv_files()\r\n\r\nRuntimeError: Error during sampling, chain 0 returned error code 70, chain 1 returned error code 70, chain 2 returned error code 70, chain 3 returned error code 70\r\n```\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n'2.19.0.0'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/140", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/140/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/140/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/140", "id": 506409029, "node_id": "MDU6SXNzdWU1MDY0MDkwMjk=", "number": 140, "title": "run_generated_quantities arg `csv_files` - change name, allow StanMCMC obj as input", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-14T01:04:56Z", "updated_at": "2019-10-20T13:34:18Z", "closed_at": "2019-10-20T13:34:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nmethod `run_generated_quantities` takes argument \"csv_files\" - change to \"sample\" - allow StanMCMC object as input as well\r\n\r\n#### Description:\r\n\r\n\r\n\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/139", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/139/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/139/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/139", "id": 505947509, "node_id": "MDU6SXNzdWU1MDU5NDc1MDk=", "number": 139, "title": "add codecov to travis and then add hooks to readme", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-11T16:29:13Z", "updated_at": "2019-12-30T18:46:19Z", "closed_at": "2019-12-30T18:46:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nsubject says it all - add Python codecov to travis config.\r\n\r\n\r\n#### Description:\r\nhttps://blog.travis-ci.com/2019-08-07-extensive-python-testing-on-travis-ci\r\n\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/137", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/137/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/137/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/137", "id": 505937131, "node_id": "MDU6SXNzdWU1MDU5MzcxMzE=", "number": 137, "title": "standardize class and method names - align with CmdStanR", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-11T16:05:43Z", "updated_at": "2019-10-15T23:22:25Z", "closed_at": "2019-10-15T23:22:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nThe `Model` class methods which invoke cmdstan and the corresponding returned object classname should align across CmdStanXXX interfaces.\r\n\r\n- method `sample` - change `StanMCMC` to `CmdStanMCMC`\r\n- method `optimize` - change `StanMLE` to `CmdStanMLE`\r\n- method `run_generated_quantities` rename as `generate_quantities` and change `StanQuantities` to `CmdStanGQ`\r\n- method `variational` - change `StanVariational` to `CmdStanVB`\r\n\r\n\r\n#### Description:\r\nsee stan-dev/cmdstanr#24\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/135", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/135/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/135/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/135", "id": 505727625, "node_id": "MDU6SXNzdWU1MDU3Mjc2MjU=", "number": 135, "title": "add property 'csv_files' to `StanMCMC` et al ", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-10-11T08:59:33Z", "updated_at": "2020-02-25T23:36:25Z", "closed_at": "2020-02-25T23:36:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nthe coupling between methods `sample` and `run_generated_quantities` requires a list of csv files as input;  the StanMCMC method should provide this via property `csv_files`.\r\n\r\n#### Description:\r\nConvenience method on classes that wrap result of CmdStan run.\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/134", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/134/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/134/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/134", "id": 505581175, "node_id": "MDU6SXNzdWU1MDU1ODExNzU=", "number": 134, "title": "add method  to `StanQuantities` that combines input sample with generated QoIs", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-11T00:55:12Z", "updated_at": "2019-10-20T13:34:48Z", "closed_at": "2019-10-20T13:34:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nStanQuantities takes as input an existing sample and produces a new sample containing just the variables in the model's generated quantities block.   Add a method which returns the combined inputs and outputs as a single pandas dataframe or numpy ndarray.\r\n\r\n#### Description:\r\nCombination of inputs and outputs corresponds to estimates that would be obtained by running the sampler. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/133", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/133/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/133/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/133", "id": 505483648, "node_id": "MDU6SXNzdWU1MDU0ODM2NDg=", "number": 133, "title": "improve argument name `csv_basename`", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364767345, "node_id": "MDU6TGFiZWwxMzY0NzY3MzQ1", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/documentation", "name": "documentation", "color": "c2e0c6", "default": true, "description": ""}, {"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}, {"id": 1178525787, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzg3", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-10-10T20:07:50Z", "updated_at": "2019-12-10T20:46:50Z", "closed_at": "2019-12-10T20:46:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n`csv_basename` is the path prefix used for CmdStan's output.csv files and the console messages written to stdout and stderr by CmdStan.  e.g., `csv_basename='./foo'` when running 3 chains results in the following set of files:\r\n\r\n```\r\n csv_files:\r\n\t./foo-1.csv\r\n\t./foo-2.csv\r\n\t./foo-3.csv\r\n console_files\r\n\t./foo-1.txt\r\n\t./foo-2.txt\r\n\t./foo-3.txt\r\n```\r\n\r\n#### Description:\r\n\r\nthis name is slightly misleading, because\r\n-  it's not just used for the csv files, but also for console msgs files\r\n-  it must be a valid path\r\n- it's only a prefix, and the chain id plus possible temporary file gunk is added into the name\r\n\r\npossible names:\r\n\r\n- `output` takes tuple (dir, prefix) - short and easy to grok\r\n\r\n- `output_file`\r\n- `output_path`\r\n- `output_prefix`\r\n\r\n????\r\n\r\n#### Update\r\n\r\nthe use case for this feature would be production runs.\r\n\r\n\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/128", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/128/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/128/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/128", "id": 502959323, "node_id": "MDU6SXNzdWU1MDI5NTkzMjM=", "number": 128, "title": "add properties to report location of output files", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-05T12:49:01Z", "updated_at": "2019-10-05T17:12:30Z", "closed_at": "2019-10-05T17:12:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nCmdStanPy captures CmdStan csv output files as well as the console messages to stdout and stderr and stores these in the `RunSet` object's `csv_files` and `console_files` attributes.  Add properties to the `StanFit` et al objects to expose this information to the user.\r\n\r\n\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/127", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/127/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/127/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/127", "id": 502956456, "node_id": "MDU6SXNzdWU1MDI5NTY0NTY=", "number": 127, "title": "progress bar issues", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-10-05T12:20:07Z", "updated_at": "2020-02-24T20:16:38Z", "closed_at": "2020-02-24T20:16:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nSimplify progress bar display:\r\n\r\n+ single progress bar for warmup/sampling\r\n+ bar should track progress - no longer doing so\r\n+ most relevant timing information is estimate of remaining time; rest of information provided by % completed.\r\n\r\n#### Description:\r\n\r\nThe progress bar display in the jupyter notebook is somewhat difficult to interpret -\r\nthe width of the bars doesn't update; there's too much information on the right-hand side which is redundant.  attaching 3 screenshots - during warmup/sampling I expected the progress bar itself to grow/change color according to % completed.\r\n\r\n#### Additional Information:\r\n\r\nNeed to test this on a model that takes a minute or two to run.  Also test behavoir where specified number of chains is greater than specified number of cores.  Capture screenshots and add to docs.\r\n<img width=\"864\" alt=\"progress_bar_3\" src=\"https://user-images.githubusercontent.com/5466612/66254750-d0e76d00-e748-11e9-8ef8-498d541fe745.png\">\r\n<img width=\"994\" alt=\"progress_bar_2\" src=\"https://user-images.githubusercontent.com/5466612/66254751-d0e76d00-e748-11e9-9e79-9544d9597e3e.png\">\r\n<img width=\"1008\" alt=\"progress_bar\" src=\"https://user-images.githubusercontent.com/5466612/66254752-d0e76d00-e748-11e9-94c6-0d7bdb3f0e83.png\">\r\n\r\n\r\n\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/126", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/126/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/126/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/126", "id": 502850068, "node_id": "MDU6SXNzdWU1MDI4NTAwNjg=", "number": 126, "title": "add `__repr__` functions to classes `StanFit`, et. al.", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-10-04T21:22:16Z", "updated_at": "2019-10-06T09:59:56Z", "closed_at": "2019-10-06T09:59:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nadd `__repr__` functions to classes StanFit/StanMCMC, StanMLE, StanQuantities, StanVariational - expose RunSet, CmdStanArgs info\r\n\r\n#### Description:\r\nallow users to see what the command that was run was, where the output files are.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/125", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/125/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/125/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/125", "id": 502683876, "node_id": "MDU6SXNzdWU1MDI2ODM4NzY=", "number": 125, "title": "Change class `StanFit` name to `StanMCMC`", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-10-04T14:54:51Z", "updated_at": "2019-10-06T10:00:17Z", "closed_at": "2019-10-06T10:00:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nMake names precise -  'StanFit' is an RStan, PyStan legacy, but 'StanMCMC' is more descriptive.\r\n\r\n#### Description:\r\nInvestigate consequences for arviz.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/124", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/124/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/124/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/124", "id": 502679406, "node_id": "MDU6SXNzdWU1MDI2Nzk0MDY=", "number": 124, "title": "compile - don't print traceback, just error message", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-04T14:46:28Z", "updated_at": "2019-10-06T09:59:02Z", "closed_at": "2019-10-06T09:59:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\ncompiler error includes traceback - remove before we get out of beta\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/123", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/123/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/123/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/123", "id": 502671401, "node_id": "MDU6SXNzdWU1MDI2NzE0MDE=", "number": 123, "title": "model `compile` function timestamp on source, exe", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-04T14:31:37Z", "updated_at": "2019-10-06T09:58:46Z", "closed_at": "2019-10-06T09:58:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nskip compilation when exe file exists and the source file hasn't been changed since last compilation (i.e., exe file is newer than source file).\r\n\r\n#### Description:\r\navoid unnecessary compilation\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/122", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/122/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/122/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/122", "id": 502343874, "node_id": "MDU6SXNzdWU1MDIzNDM4NzQ=", "number": 122, "title": "adopt git branching model used by core stan", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T23:14:54Z", "updated_at": "2020-08-07T12:17:15Z", "closed_at": "2020-08-07T12:17:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nadopt git branching model outlined here:  https://nvie.com/posts/a-successful-git-branching-model/\r\n\r\n- document process on wiki\r\n- keep tags in sync with new uploads to PyPi\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/121", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/121/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/121/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/121", "id": 502274341, "node_id": "MDU6SXNzdWU1MDIyNzQzNDE=", "number": 121, "title": "after CmdStan 2.21.0 release, allow 0-length JSON arrays", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-03T20:14:04Z", "updated_at": "2019-11-09T04:03:07Z", "closed_at": "2019-11-09T04:03:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nPR #118 should allow 0 as well as 1-element arrays for both JSON and Rdump format, but given limitations of CmdStan's JSON parser, 0-len arrays are disallowed.  this has been fixed on CmdStan develop branch and will be in next release.  \r\n \r\n\r\n#### Description:\r\n\r\nin file `cmdstanpy/utils.py` remove check in `jsondump`:\r\n\r\n```\r\n        if isinstance(val, Sequence) and not val:\r\n            raise ValueError(\r\n                'variable: {}, error: '\r\n                'empty array not allowed with JSON interface'.format(\r\n                    val\r\n                )\r\n            )\r\n```\r\n\r\n\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/114", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/114/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/114/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/114", "id": 493517388, "node_id": "MDU6SXNzdWU0OTM1MTczODg=", "number": 114, "title": "Setting `thin` on Model.sample() raises a type error", "user": {"login": "wyegelwel", "id": 1468189, "node_id": "MDQ6VXNlcjE0NjgxODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1468189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyegelwel", "html_url": "https://github.com/wyegelwel", "followers_url": "https://api.github.com/users/wyegelwel/followers", "following_url": "https://api.github.com/users/wyegelwel/following{/other_user}", "gists_url": "https://api.github.com/users/wyegelwel/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyegelwel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyegelwel/subscriptions", "organizations_url": "https://api.github.com/users/wyegelwel/orgs", "repos_url": "https://api.github.com/users/wyegelwel/repos", "events_url": "https://api.github.com/users/wyegelwel/events{/privacy}", "received_events_url": "https://api.github.com/users/wyegelwel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-13T21:07:37Z", "updated_at": "2019-09-24T14:28:02Z", "closed_at": "2019-09-19T20:49:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Description:\r\nThe following code produces a type error\r\n```\r\nimport os\r\nfrom cmdstanpy import cmdstan_path, Model, StanFit\r\n\r\nbernoulli_stan = os.path.join(cmdstan_path(), 'examples', 'bernoulli', 'bernoulli.stan')\r\nbernoulli_model = Model(stan_file=bernoulli_stan)\r\nbernoulli_model.compile()\r\nbernoulli_data = { \"N\" : 10, \"y\" : [0,1,0,0,0,0,0,0,0,1] }\r\nbern_fit = bernoulli_model.sample(data=bernoulli_data, thin=10)\r\n```\r\n\r\n```\r\nINFO:cmdstanpy:start chain 1\r\nINFO:cmdstanpy:start chain 2\r\nINFO:cmdstanpy:start chain 3\r\nINFO:cmdstanpy:start chain 4\r\nINFO:cmdstanpy:finish chain 1\r\nINFO:cmdstanpy:finish chain 2\r\nINFO:cmdstanpy:finish chain 3\r\nINFO:cmdstanpy:finish chain 4\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-32-09430006521a> in <module>\r\n      1 bernoulli_data = { \"N\" : 10, \"y\" : [0,1,0,0,0,0,0,0,0,1] }\r\n----> 2 bern_fit = bernoulli_model.sample(data=bernoulli_data, thin=10)\r\n\r\npython3.6/cmdstanpy/model.py in sample(self, data, chains, cores, seed, chain_ids, inits, warmup_iters, sampling_iters, save_warmup, thin, max_treedepth, metric, step_size, adapt_engaged, adapt_delta, csv_basename, show_progress)\r\n    562                         )\r\n    563                 raise RuntimeError(msg)\r\n--> 564             stanfit._validate_csv_files()\r\n    565         return stanfit\r\n    566 \r\n\r\npython3.6/cmdstanpy/stanfit.py in _validate_csv_files(self)\r\n    245                     self._csv_files[i],\r\n    246                     is_optimizing=self.is_optimizing,\r\n--> 247                     is_sampling=self.is_sampling,\r\n    248                 )\r\n    249             else:\r\n\r\npython3.6/cmdstanpy/utils.py in check_csv(path, is_optimizing, is_sampling)\r\n    288         draws_spec = int(meta.get('num_samples', 1000))\r\n    289         if 'thin' in meta:\r\n--> 290             draws_spec = int(math.ceil(draws_spec / meta['thin']))\r\n    291     if meta['draws'] != draws_spec:\r\n    292         raise ValueError(\r\n\r\nTypeError: unsupported operand type(s) for /: 'int' and 'str'\r\n```\r\n\r\n\r\n#### Current Version:\r\n0.4.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/113", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/113/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/113/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/113", "id": 493488205, "node_id": "MDU6SXNzdWU0OTM0ODgyMDU=", "number": 113, "title": "Have Model.sample allow values to be numpy arrays", "user": {"login": "wyegelwel", "id": 1468189, "node_id": "MDQ6VXNlcjE0NjgxODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1468189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyegelwel", "html_url": "https://github.com/wyegelwel", "followers_url": "https://api.github.com/users/wyegelwel/followers", "following_url": "https://api.github.com/users/wyegelwel/following{/other_user}", "gists_url": "https://api.github.com/users/wyegelwel/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyegelwel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyegelwel/subscriptions", "organizations_url": "https://api.github.com/users/wyegelwel/orgs", "repos_url": "https://api.github.com/users/wyegelwel/repos", "events_url": "https://api.github.com/users/wyegelwel/events{/privacy}", "received_events_url": "https://api.github.com/users/wyegelwel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525781, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgx", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-13T19:43:27Z", "updated_at": "2019-10-03T19:58:08Z", "closed_at": "2019-10-03T19:58:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nCurrently, if you have a data that is passed into Model.sample where the value is a numpy array, you will get an error `TypeError: Object of type 'ndarray' is not JSON serializable`. This is easy to work around by doing something like: `stan_data_list = {k: v if not isinstance(v, np.ndarray) else v.tolist() for k,v in stan_data.items()}`. \r\n\r\nEven though the workaround is easy, I expect it will be common for users to pass in numpy arrays as input and so doing this conversion within cmdstanpy would make a more seamless experience for new users. \r\n\r\n#### Current Version:\r\n\r\n0.4.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/112", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/112/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/112/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/112", "id": 493301296, "node_id": "MDU6SXNzdWU0OTMzMDEyOTY=", "number": 112, "title": "Refactor - create classes appropriate to `optimize`, `vb` methods (not `StanFit`)", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-09-13T12:34:39Z", "updated_at": "2019-09-19T20:50:20Z", "closed_at": "2019-09-19T20:50:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nThe `StanFit` class has too many method-specific properties.  Create method-appropriate classes for `optimize`method and `vb` (advi) methods.\r\n\r\n#### Description:\r\nAll calls to CmdStan require specifying the method to be called on the model executable.   Make this explicit via an enum class which reflects the method, and add method-specific classes returned by `optimize` and `vb` methods.\r\n\r\nClass names - `StanMLE` ? (penalized maximum likelihood estimate of the posterior density)\r\nthis class should allow user to get the Hessian (see RStan fuctionality).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/111", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/111/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/111/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/111", "id": 492792323, "node_id": "MDU6SXNzdWU0OTI3OTIzMjM=", "number": 111, "title": "optimize method should allow multiple chains", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-12T13:03:25Z", "updated_at": "2019-09-13T12:26:30Z", "closed_at": "2019-09-13T12:26:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nAllow users to run several chains for the `optimize` method.\r\n\r\n#### Description:\r\nCurrent recommendation is to always run multiple chains, even for optimization.  Current implementation of `optimize` method only runs one chain.  Instead, 1 chain should be the default which can be overridden.\r\n\r\n#### Additional Information:\r\nThis may require some refactoring of the code in the `StanFit` class.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/110", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/110/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/110/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/110", "id": 484674388, "node_id": "MDU6SXNzdWU0ODQ2NzQzODg=", "number": 110, "title": "Recurrent environment compilation issues", "user": {"login": "tommylees112", "id": 21049064, "node_id": "MDQ6VXNlcjIxMDQ5MDY0", "avatar_url": "https://avatars1.githubusercontent.com/u/21049064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommylees112", "html_url": "https://github.com/tommylees112", "followers_url": "https://api.github.com/users/tommylees112/followers", "following_url": "https://api.github.com/users/tommylees112/following{/other_user}", "gists_url": "https://api.github.com/users/tommylees112/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommylees112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommylees112/subscriptions", "organizations_url": "https://api.github.com/users/tommylees112/orgs", "repos_url": "https://api.github.com/users/tommylees112/repos", "events_url": "https://api.github.com/users/tommylees112/events{/privacy}", "received_events_url": "https://api.github.com/users/tommylees112/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-23T19:15:46Z", "updated_at": "2020-03-08T23:20:29Z", "closed_at": "2020-03-08T23:20:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nPlease provide a short couple sentence summary.\r\nI found that I had to keep creating a new conda environment if i download a wrong package and starting again.\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\n\r\nMost recent failure was with this envrionment:\r\n```\r\n(cmdstanpy) \u279c  stancon_2019 conda list\r\n# packages in environment at /Users/tommylees/miniconda3/envs/cmdstanpy:\r\n#\r\n# Name                    Version                   Build  Channel\r\n_r-mutex                  1.0.1               anacondar_1    conda-forge\r\nappnope                   0.1.0                 py37_1000    conda-forge\r\narrow-cpp                 0.12.1           py37h2ddd891_0    conda-forge\r\narviz                     0.4.1                    pypi_0    pypi\r\nattrs                     19.1.0                     py_0    conda-forge\r\nbackcall                  0.1.0                      py_0    conda-forge\r\nbleach                    3.1.0                      py_0    conda-forge\r\nboost-cpp                 1.68.0            h6f8c590_1000    conda-forge\r\nbwidget                   1.9.11                        0    conda-forge\r\nbzip2                     1.0.8                h01d97ff_0    conda-forge\r\nca-certificates           2019.6.16            hecc5488_0    conda-forge\r\ncairo                     1.14.12           h9d4d9ac_1005    conda-forge\r\ncctools                   895                           1    conda-forge\r\ncertifi                   2019.6.16                py37_1    conda-forge\r\ncftime                    1.0.3.4                  pypi_0    pypi\r\nclang                     8.0.1                h770b8ee_0    conda-forge\r\nclang_osx-64              8.0.1               h22b1bf0_18    conda-forge\r\nclangxx                   8.0.1                         0    conda-forge\r\nclangxx_osx-64            8.0.1               h22b1bf0_18    conda-forge\r\ncmdstanpy                 0.4.3                    pypi_0    pypi\r\ncompiler-rt               8.0.1                hef50cfd_0    conda-forge\r\ncurl                      7.65.3               h22ea746_0    conda-forge\r\ncycler                    0.10.0                   pypi_0    pypi\r\ndecorator                 4.4.0                      py_0    conda-forge\r\ndefusedxml                0.5.0                      py_1    conda-forge\r\nentrypoints               0.3                   py37_1000    conda-forge\r\nfeather-format            0.4.0                   py_1003    conda-forge\r\nfontconfig                2.13.1            h1027ab8_1000    conda-forge\r\nfreetype                  2.10.0               h24853df_1    conda-forge\r\ngettext                   0.19.8.1          h46ab8bc_1002    conda-forge\r\ngfortran_osx-64           4.8.5                h22b1bf0_8    conda-forge\r\nglib                      2.56.2            h67dad55_1001    conda-forge\r\ngraphite2                 1.3.13            h2098e52_1000    conda-forge\r\ngsl                       2.5                  ha2d443c_0    conda-forge\r\nharfbuzz                  1.9.0             h9889186_1001    conda-forge\r\nicu                       58.2              h0a44026_1000    conda-forge\r\nipykernel                 5.1.2            py37h5ca1d4c_0    conda-forge\r\nipython                   7.7.0            py37h5ca1d4c_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\njedi                      0.15.1                   py37_0    conda-forge\r\njinja2                    2.10.1                     py_0    conda-forge\r\njoblib                    0.13.2                   pypi_0    pypi\r\njpeg                      9c                h1de35cc_1001    conda-forge\r\njsonschema                3.0.2                    py37_0    conda-forge\r\njupyter_client            5.3.1                      py_0    conda-forge\r\njupyter_core              4.4.0                      py_0    conda-forge\r\nkiwisolver                1.1.0                    pypi_0    pypi\r\nkrb5                      1.16.3            hcfa6398_1001    conda-forge\r\nld64                      274.2                h7c2db76_0    conda-forge\r\nlibblas                   3.8.0               12_openblas    conda-forge\r\nlibcblas                  3.8.0               12_openblas    conda-forge\r\nlibcurl                   7.65.3               h16faf7d_0    conda-forge\r\nlibcxx                    8.0.1                         0    conda-forge\r\nlibcxxabi                 8.0.1                         0    conda-forge\r\nlibedit                   3.1.20170329      hcfe32e1_1001    conda-forge\r\nlibffi                    3.2.1             h6de7cb9_1006    conda-forge\r\nlibgcc                    4.8.5                         1    conda-forge\r\nlibgfortran               3.0.1                         0    conda-forge\r\nlibiconv                  1.15              h01d97ff_1005    conda-forge\r\nliblapack                 3.8.0               12_openblas    conda-forge\r\nlibllvm8                  8.0.1                h770b8ee_0    conda-forge\r\nlibopenblas               0.3.7                hd44dcd8_1    conda-forge\r\nlibpng                    1.6.37               h2573ce8_0    conda-forge\r\nlibprotobuf               3.6.1             hd9629dc_1001    conda-forge\r\nlibsodium                 1.0.17               h01d97ff_0    conda-forge\r\nlibssh2                   1.8.2                hcdc9a53_2    conda-forge\r\nlibtiff                   4.0.10            hd08fb8f_1003    conda-forge\r\nlibxml2                   2.9.9                hd80cff7_2    conda-forge\r\nllvm-lto-tapi             4.0.1                h6701bc3_0    conda-forge\r\nllvm-openmp               8.0.1                h770b8ee_0    conda-forge\r\nlz4-c                     1.8.3             h6de7cb9_1001    conda-forge\r\nmake                      4.2.1             h1de35cc_2004    conda-forge\r\nmarkupsafe                1.1.1            py37h1de35cc_0    conda-forge\r\nmatplotlib                3.1.1                    pypi_0    pypi\r\nmistune                   0.8.4           py37h1de35cc_1000    conda-forge\r\nnbconvert                 5.6.0                      py_0    conda-forge\r\nnbformat                  4.4.0                      py_1    conda-forge\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnetcdf4                   1.5.1.2                  pypi_0    pypi\r\nnotebook                  6.0.1                    py37_0    conda-forge\r\nnumpy                     1.17.0           py37h6b0580a_0    conda-forge\r\nopenssl                   1.1.1c               h01d97ff_0    conda-forge\r\npandas                    0.25.0                   pypi_0    pypi\r\npandoc                    2.7.3                         0    conda-forge\r\npandocfilters             1.4.2                      py_1    conda-forge\r\npango                     1.40.14           h57a785b_1003    conda-forge\r\nparquet-cpp               1.5.1                         4    conda-forge\r\nparso                     0.5.1                      py_0    conda-forge\r\npcre                      8.41              h0a44026_1003    conda-forge\r\npexpect                   4.7.0                    py37_0    conda-forge\r\npickleshare               0.7.5                 py37_1000    conda-forge\r\npip                       19.2.2                   py37_0    conda-forge\r\npixman                    0.34.0            h1de35cc_1003    conda-forge\r\nprometheus_client         0.7.1                      py_0    conda-forge\r\nprompt_toolkit            2.0.9                      py_0    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npyarrow                   0.12.1           py37hf9e6f3b_0    conda-forge\r\npygments                  2.4.2                      py_0    conda-forge\r\npyparsing                 2.4.2                    pypi_0    pypi\r\npyrsistent                0.15.4           py37h01d97ff_0    conda-forge\r\npython                    3.7.3                h0d93f26_0    conda-forge\r\npython-dateutil           2.8.0                      py_0    conda-forge\r\npytz                      2019.2                     py_0    conda-forge\r\npyzmq                     18.0.2           py37hee98d25_2    conda-forge\r\nr                         3.5.1                  r35_1003    conda-forge\r\nr-abind                   1.4_5           r35h6115d3f_1002    conda-forge\r\nr-askpass                 1.1               r35h159158b_1    conda-forge\r\nr-assertthat              0.2.1             r35h6115d3f_1    conda-forge\r\nr-backports               1.1.4             r35h159158b_1    conda-forge\r\nr-base                    3.5.1             he1ce5cd_1005    conda-forge\r\nr-base64enc               0.1_3           r35h159158b_1003    conda-forge\r\nr-bh                      1.69.0_1          r35h6115d3f_1    conda-forge\r\nr-bitops                  1.0_6           r35h159158b_1003    conda-forge\r\nr-boot                    1.3_23            r35h6115d3f_2    conda-forge\r\nr-broom                   0.5.2             r35h6115d3f_1    conda-forge\r\nr-callr                   3.3.1             r35h6115d3f_0    conda-forge\r\nr-car                     3.0_3             r35h6115d3f_1    conda-forge\r\nr-cardata                 3.0_2             r35h6115d3f_1    conda-forge\r\nr-caret                   6.0_84            r35h159158b_1    conda-forge\r\nr-catools                 1.17.1.2          r35hf99fc2c_1    conda-forge\r\nr-cellranger              1.1.0           r35h6115d3f_1002    conda-forge\r\nr-chron                   2.3_53          r35h159158b_1001    conda-forge\r\nr-class                   7.3_15          r35h159158b_1001    conda-forge\r\nr-cli                     1.1.0             r35h6115d3f_1    conda-forge\r\nr-clipr                   0.7.0             r35h6115d3f_0    conda-forge\r\nr-cluster                 2.1.0             r35haf69682_2    conda-forge\r\nr-codetools               0.2_16          r35h6115d3f_1001    conda-forge\r\nr-colorspace              1.4_1             r35h159158b_1    conda-forge\r\nr-crayon                  1.3.4           r35h6115d3f_1002    conda-forge\r\nr-curl                    4.0               r35h159158b_0    conda-forge\r\nr-data.table              1.12.2            r35h159158b_1    conda-forge\r\nr-dbi                     1.0.0           r35h6115d3f_1002    conda-forge\r\nr-dbplyr                  1.4.2             r35h6115d3f_1    conda-forge\r\nr-dichromat               2.0_0                  r35_2001    conda-forge\r\nr-digest                  0.6.20            r35hf99fc2c_1    conda-forge\r\nr-dplyr                   0.8.3             r35hf99fc2c_1    conda-forge\r\nr-ellipsis                0.2.0.1           r35h159158b_1    conda-forge\r\nr-essentials              3.5.1                  r35_2001    conda-forge\r\nr-evaluate                0.14              r35h6115d3f_1    conda-forge\r\nr-fansi                   0.4.0           r35h159158b_1001    conda-forge\r\nr-feather                 0.3.3             r35hf99fc2c_1    conda-forge\r\nr-forcats                 0.4.0             r35h6115d3f_1    conda-forge\r\nr-foreach                 1.4.7             r35h6115d3f_0    conda-forge\r\nr-foreign                 0.8_71          r35h159158b_1003    conda-forge\r\nr-formatr                 1.7               r35h6115d3f_1    conda-forge\r\nr-fs                      1.3.1             r35hf99fc2c_1    conda-forge\r\nr-generics                0.0.2           r35h6115d3f_1002    conda-forge\r\nr-ggplot2                 3.2.1             r35h6115d3f_0    conda-forge\r\nr-gistr                   0.4.2           r35h6115d3f_1002    conda-forge\r\nr-glmnet                  2.0_18            r35haf69682_2    conda-forge\r\nr-glue                    1.3.1             r35h159158b_1    conda-forge\r\nr-gower                   0.2.1             r35h159158b_1    conda-forge\r\nr-gtable                  0.3.0             r35h6115d3f_2    conda-forge\r\nr-haven                   2.1.1             r35hf99fc2c_1    conda-forge\r\nr-hexbin                  1.27.3            r35haf69682_2    conda-forge\r\nr-highr                   0.8               r35h6115d3f_1    conda-forge\r\nr-hms                     0.5.1             r35h6115d3f_0    conda-forge\r\nr-htmltools               0.3.6           r35h6de7cb9_1003    conda-forge\r\nr-htmlwidgets             1.3             r35h6115d3f_1001    conda-forge\r\nr-httpuv                  1.5.1             r35hf99fc2c_1    conda-forge\r\nr-httr                    1.4.1             r35h6115d3f_0    conda-forge\r\nr-ipred                   0.9_9             r35h159158b_1    conda-forge\r\nr-irdisplay               0.7                    r35_1001    conda-forge\r\nr-irkernel                1.0.2             r35h6115d3f_2    conda-forge\r\nr-iterators               1.0.12            r35h6115d3f_0    conda-forge\r\nr-jsonlite                1.6             r35h159158b_1001    conda-forge\r\nr-kernsmooth              2.23_15         r35haf69682_1004    conda-forge\r\nr-knitr                   1.24              r35h6115d3f_0    conda-forge\r\nr-labeling                0.3             r35h6115d3f_1002    conda-forge\r\nr-later                   0.8.0             r35hf99fc2c_1    conda-forge\r\nr-lattice                 0.20_38         r35h159158b_1002    conda-forge\r\nr-lava                    1.6.5             r35h6115d3f_1    conda-forge\r\nr-lazyeval                0.2.2             r35h159158b_1    conda-forge\r\nr-lme4                    1.1_21            r35hf99fc2c_1    conda-forge\r\nr-lubridate               1.7.4           r35hf99fc2c_1002    conda-forge\r\nr-magrittr                1.5             r35h6115d3f_1002    conda-forge\r\nr-maps                    3.3.0           r35h159158b_1003    conda-forge\r\nr-maptools                0.9_5             r35h159158b_1    conda-forge\r\nr-markdown                1.1               r35h159158b_0    conda-forge\r\nr-mass                    7.3_51.4          r35h159158b_1    conda-forge\r\nr-matrix                  1.2_17            r35h159158b_1    conda-forge\r\nr-matrixmodels            0.4_1           r35h6115d3f_1002    conda-forge\r\nr-memoise                 1.1.0           r35h6115d3f_1002    conda-forge\r\nr-mgcv                    1.8_28            r35h159158b_1    conda-forge\r\nr-mime                    0.7               r35h159158b_1    conda-forge\r\nr-minqa                   1.2.4           r35h75781db_1004    conda-forge\r\nr-modelmetrics            1.2.2             r35hf99fc2c_1    conda-forge\r\nr-modelr                  0.1.5             r35h6115d3f_0    conda-forge\r\nr-munsell                 0.5.0           r35h6115d3f_1002    conda-forge\r\nr-nlme                    3.1_141           r35haf69682_1    conda-forge\r\nr-nloptr                  1.2.1             r35hf99fc2c_1    conda-forge\r\nr-nnet                    7.3_12          r35h159158b_1003    conda-forge\r\nr-numderiv                2016.8_1.1        r35h6115d3f_1    conda-forge\r\nr-openssl                 1.4.1             r35hdb18a49_0    conda-forge\r\nr-openxlsx                4.1.0.1           r35hf99fc2c_1    conda-forge\r\nr-pbdzmq                  0.3_3           r35hfe6df53_1002    conda-forge\r\nr-pbkrtest                0.4_7           r35h6115d3f_1002    conda-forge\r\nr-pillar                  1.4.2             r35h6115d3f_2    conda-forge\r\nr-pkgconfig               2.0.2           r35h6115d3f_1002    conda-forge\r\nr-plogr                   0.2.0           r35h6115d3f_1002    conda-forge\r\nr-plyr                    1.8.4           r35hf99fc2c_1003    conda-forge\r\nr-prettyunits             1.0.2           r35h6115d3f_1002    conda-forge\r\nr-processx                3.4.1             r35h159158b_0    conda-forge\r\nr-prodlim                 2018.04.18      r35hf99fc2c_1003    conda-forge\r\nr-progress                1.2.2             r35h6115d3f_1    conda-forge\r\nr-promises                1.0.1           r35hf99fc2c_1001    conda-forge\r\nr-pryr                    0.1.4           r35hf99fc2c_1003    conda-forge\r\nr-ps                      1.3.0           r35h159158b_1001    conda-forge\r\nr-purrr                   0.3.2             r35h159158b_1    conda-forge\r\nr-quantmod                0.4_15            r35h6115d3f_1    conda-forge\r\nr-quantreg                5.42.1            r35haf69682_1    conda-forge\r\nr-r6                      2.4.0             r35h6115d3f_2    conda-forge\r\nr-randomforest            4.6_14          r35haf69682_1002    conda-forge\r\nr-rbokeh                  0.5.0           r35h6115d3f_1002    conda-forge\r\nr-rcolorbrewer            1.1_2           r35h6115d3f_1002    conda-forge\r\nr-rcpp                    1.0.2             r35hf99fc2c_0    conda-forge\r\nr-rcppeigen               0.3.3.5.0         r35hf99fc2c_1    conda-forge\r\nr-readr                   1.3.1           r35hf99fc2c_1001    conda-forge\r\nr-readxl                  1.3.1             r35hf99fc2c_1    conda-forge\r\nr-recipes                 0.1.6             r35h6115d3f_1    conda-forge\r\nr-recommended             3.5.1                  r35_1003    conda-forge\r\nr-rematch                 1.0.1           r35h6115d3f_1002    conda-forge\r\nr-repr                    1.0.1             r35h6115d3f_1    conda-forge\r\nr-reprex                  0.3.0             r35h6115d3f_1    conda-forge\r\nr-reshape2                1.4.3           r35hf99fc2c_1004    conda-forge\r\nr-rio                     0.5.16          r35h6115d3f_1001    conda-forge\r\nr-rlang                   0.4.0             r35h159158b_1    conda-forge\r\nr-rmarkdown               1.14              r35h6115d3f_1    conda-forge\r\nr-rpart                   4.1_15            r35h159158b_1    conda-forge\r\nr-rstudioapi              0.10              r35h6115d3f_1    conda-forge\r\nr-rvest                   0.3.4             r35h6115d3f_1    conda-forge\r\nr-scales                  1.0.0           r35hf99fc2c_1002    conda-forge\r\nr-selectr                 0.4_1           r35h6115d3f_1001    conda-forge\r\nr-shiny                   1.3.2             r35h6115d3f_1    conda-forge\r\nr-sourcetools             0.1.7           r35h6de7cb9_1001    conda-forge\r\nr-sp                      1.3_1           r35h159158b_1001    conda-forge\r\nr-sparsem                 1.77            r35haf69682_1003    conda-forge\r\nr-spatial                 7.3_11          r35h159158b_1003    conda-forge\r\nr-squarem                 2017.10_1       r35h6115d3f_1002    conda-forge\r\nr-stringi                 1.4.3             r35hf99fc2c_2    conda-forge\r\nr-stringr                 1.4.0             r35h6115d3f_1    conda-forge\r\nr-survival                2.44_1.1          r35h159158b_1    conda-forge\r\nr-sys                     3.2               r35h159158b_1    conda-forge\r\nr-tibble                  2.1.3             r35h159158b_1    conda-forge\r\nr-tidyr                   0.8.3             r35hf99fc2c_1    conda-forge\r\nr-tidyselect              0.2.5           r35hf99fc2c_1001    conda-forge\r\nr-tidyverse               1.2.1           r35h6115d3f_1002    conda-forge\r\nr-timedate                3043.102        r35h6115d3f_1001    conda-forge\r\nr-tinytex                 0.15              r35h6115d3f_0    conda-forge\r\nr-ttr                     0.23_4          r35haf69682_1002    conda-forge\r\nr-utf8                    1.1.4           r35h159158b_1001    conda-forge\r\nr-uuid                    0.1_2           r35h159158b_1002    conda-forge\r\nr-vctrs                   0.2.0             r35h159158b_1    conda-forge\r\nr-viridislite             0.3.0           r35h6115d3f_1002    conda-forge\r\nr-whisker                 0.3_2           r35h6115d3f_1002    conda-forge\r\nr-withr                   2.1.2           r35h6115d3f_1001    conda-forge\r\nr-xfun                    0.8               r35h6115d3f_1    conda-forge\r\nr-xml2                    1.2.2             r35hf99fc2c_0    conda-forge\r\nr-xtable                  1.8_4             r35h6115d3f_2    conda-forge\r\nr-xts                     0.11_2            r35h159158b_1    conda-forge\r\nr-yaml                    2.2.0           r35h159158b_1002    conda-forge\r\nr-zeallot                 0.1.0           r35h6115d3f_1001    conda-forge\r\nr-zip                     2.0.3             r35h159158b_1    conda-forge\r\nr-zoo                     1.8_6             r35h159158b_1    conda-forge\r\nreadline                  7.0               hcfe32e1_1001    conda-forge\r\nscikit-learn              0.21.3                   pypi_0    pypi\r\nscipy                     1.3.1                    pypi_0    pypi\r\nseaborn                   0.9.0                    pypi_0    pypi\r\nsend2trash                1.5.0                      py_0    conda-forge\r\nsetuptools                41.0.1                   py37_0    conda-forge\r\nsix                       1.12.0                   pypi_0    pypi\r\nsklearn                   0.0                      pypi_0    pypi\r\nsqlite                    3.28.0               h9721f7c_0    conda-forge\r\nterminado                 0.8.2                    py37_0    conda-forge\r\ntestpath                  0.4.2                   py_1001    conda-forge\r\nthrift-cpp                0.12.0            hdedcb34_1002    conda-forge\r\ntk                        8.6.9             h2573ce8_1002    conda-forge\r\ntktable                   2.10                 hfa822fa_1    conda-forge\r\ntornado                   6.0.3            py37h01d97ff_0    conda-forge\r\ntraitlets                 4.3.2                 py37_1000    conda-forge\r\nwcwidth                   0.1.7                      py_1    conda-forge\r\nwebencodings              0.5.1                      py_1    conda-forge\r\nwheel                     0.33.6                   py37_0    conda-forge\r\nxarray                    0.12.3                   pypi_0    pypi\r\nxz                        5.2.4             h1de35cc_1001    conda-forge\r\nzeromq                    4.3.2                h6de7cb9_2    conda-forge\r\nzlib                      1.2.11            h01d97ff_1005    conda-forge\r\nzstd                      1.4.0                ha9f0a20_0    conda-forge\r\n```\r\n\r\nthis environment works:\r\n```\r\n(cmd) \u279c  stancon_2019 conda list\r\n# packages in environment at /Users/tommylees/miniconda3/envs/cmd:\r\n#\r\n# Name                    Version                   Build  Channel\r\nappnope                   0.1.0                 py37_1000    conda-forge\r\nbackcall                  0.1.0                      py_0    conda-forge\r\nbzip2                     1.0.8                h01d97ff_0    conda-forge\r\nca-certificates           2019.6.16            hecc5488_0    conda-forge\r\ncertifi                   2019.6.16                py37_1    conda-forge\r\ncmdstanpy                 0.4.3                    pypi_0    pypi\r\ncycler                    0.10.0                   pypi_0    pypi\r\ndecorator                 4.4.0                      py_0    conda-forge\r\nipython                   7.7.0            py37h5ca1d4c_0    conda-forge\r\nipython_genutils          0.2.0                      py_1    conda-forge\r\njedi                      0.15.1                   py37_0    conda-forge\r\nkiwisolver                1.1.0                    pypi_0    pypi\r\nlibblas                   3.8.0               12_openblas    conda-forge\r\nlibcblas                  3.8.0               12_openblas    conda-forge\r\nlibcxx                    8.0.1                         0    conda-forge\r\nlibcxxabi                 8.0.1                         0    conda-forge\r\nlibffi                    3.2.1             h6de7cb9_1006    conda-forge\r\nlibgfortran               4.0.0                         2    conda-forge\r\nliblapack                 3.8.0               12_openblas    conda-forge\r\nlibopenblas               0.3.7                h4bb4525_1    conda-forge\r\nllvm-openmp               8.0.1                h770b8ee_0    conda-forge\r\nmatplotlib                3.1.1                    pypi_0    pypi\r\nncurses                   6.1               h0a44026_1002    conda-forge\r\nnumpy                     1.17.0           py37h6b0580a_0    conda-forge\r\nopenssl                   1.1.1c               h01d97ff_0    conda-forge\r\npandas                    0.25.1           py37h86efe34_0    conda-forge\r\nparso                     0.5.1                      py_0    conda-forge\r\npexpect                   4.7.0                    py37_0    conda-forge\r\npickleshare               0.7.5                 py37_1000    conda-forge\r\npip                       19.2.2                   py37_0    conda-forge\r\nprompt_toolkit            2.0.9                      py_0    conda-forge\r\nptyprocess                0.6.0                   py_1001    conda-forge\r\npygments                  2.4.2                      py_0    conda-forge\r\npyparsing                 2.4.2                    pypi_0    pypi\r\npython                    3.7.3                h93065d6_1    conda-forge\r\npython-dateutil           2.8.0                      py_0    conda-forge\r\npytz                      2019.2                     py_0    conda-forge\r\nreadline                  8.0                  hcfe32e1_0    conda-forge\r\nscipy                     1.3.1                    pypi_0    pypi\r\nseaborn                   0.9.0                    pypi_0    pypi\r\nsetuptools                41.2.0                   py37_0    conda-forge\r\nsix                       1.12.0                py37_1000    conda-forge\r\nsqlite                    3.29.0               hb7d70f7_0    conda-forge\r\ntk                        8.6.9             h2573ce8_1002    conda-forge\r\ntraitlets                 4.3.2                 py37_1000    conda-forge\r\nwcwidth                   0.1.7                      py_1    conda-forge\r\nwheel                     0.33.6                   py37_0    conda-forge\r\nxz                        5.2.4             h1de35cc_1001    conda-forge\r\nzlib                      1.2.11            h01d97ff_1005    conda-forge\r\n```\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\nMore a note that something isn't working with packages playing together. \r\n\r\n#### Current Version:\r\n```\r\ncmdstanpy                 0.4.3                    pypi_0    pypi\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/108", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/108/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/108/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/108", "id": 482846262, "node_id": "MDU6SXNzdWU0ODI4NDYyNjI=", "number": 108, "title": "Compilation errors of model with `cmdstanpy`", "user": {"login": "tommylees112", "id": 21049064, "node_id": "MDQ6VXNlcjIxMDQ5MDY0", "avatar_url": "https://avatars1.githubusercontent.com/u/21049064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommylees112", "html_url": "https://github.com/tommylees112", "followers_url": "https://api.github.com/users/tommylees112/followers", "following_url": "https://api.github.com/users/tommylees112/following{/other_user}", "gists_url": "https://api.github.com/users/tommylees112/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommylees112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommylees112/subscriptions", "organizations_url": "https://api.github.com/users/tommylees112/orgs", "repos_url": "https://api.github.com/users/tommylees112/repos", "events_url": "https://api.github.com/users/tommylees112/events{/privacy}", "received_events_url": "https://api.github.com/users/tommylees112/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-08-20T12:59:53Z", "updated_at": "2020-02-24T20:24:24Z", "closed_at": "2020-02-24T20:24:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nPlease provide a short couple sentence summary.\r\nI am trying to install and run a simple model as part of StanCon2019: https://github.com/lauken13/Beginners_Bayes_Workshop/blob/master/stan_programs/simple_poisson_regression.stan\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\nI tried to compile the model:\r\n```python\r\nfrom pathlib import Path\r\nfrom cmdstanpy import cmdstan_path, Model, StanFit\r\nmodel_path = Path('stan_programs/simple_poisson_regression.stan')\r\nm = Model(model_path)\r\n\r\nm.compile()\r\n```\r\n\r\nGives me the following error message\r\n```\r\nINFO:cmdstanpy:compiling c++\r\nERROR:cmdstanpy:make cmd failed ERROR\r\n error: PCH file uses a newer PCH format that cannot be read\r\n1 error generated.\r\nmake: *** [/Users/tommylees/github/stancon_2019/Beginners_Bayes_Workshop/stan_programs/simple_poisson_regression] Error 1\r\nERROR:cmdstanpy:model compilation failed\r\n```\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\nI installed `cmdstan` using the `install_cmdstan` option.\r\n\r\nI also have a working installation of Stan on my R environment which allows me to compile the model. This might be interfering with the cmdstan installation\r\n\r\n#### Current Version:\r\n```python\r\nIn [23]: cmdstanpy.__version__\r\nOut[23]: '0.4.2'\r\n\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/105", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/105/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/105/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/105", "id": 481697789, "node_id": "MDU6SXNzdWU0ODE2OTc3ODk=", "number": 105, "title": "update getting started guide", "user": {"login": "annapaux", "id": 15922024, "node_id": "MDQ6VXNlcjE1OTIyMDI0", "avatar_url": "https://avatars3.githubusercontent.com/u/15922024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annapaux", "html_url": "https://github.com/annapaux", "followers_url": "https://api.github.com/users/annapaux/followers", "following_url": "https://api.github.com/users/annapaux/following{/other_user}", "gists_url": "https://api.github.com/users/annapaux/gists{/gist_id}", "starred_url": "https://api.github.com/users/annapaux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annapaux/subscriptions", "organizations_url": "https://api.github.com/users/annapaux/orgs", "repos_url": "https://api.github.com/users/annapaux/repos", "events_url": "https://api.github.com/users/annapaux/events{/privacy}", "received_events_url": "https://api.github.com/users/annapaux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-16T16:56:05Z", "updated_at": "2019-08-16T19:16:47Z", "closed_at": "2019-08-16T19:16:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nUpdate the getting started guide that is displayed on readthedocs\r\nhttps://github.com/stan-dev/cmdstanpy/blob/master/docs/getting_started.rst\r\n\r\n\r\n#### Description:\r\nChanges to be made: \r\nadd comma after stan_file and rename stan_exe --> exe_file\r\n\r\nbernoulli_model = Model(\r\n    stan_file = os.path.join(cmdstan_path(), 'examples', 'bernoulli', 'bernoulli.stan')\r\n    stan_exe = os.path.join(cmdstan_path(), 'examples', 'bernoulli', 'bernoulli')\r\n    )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/103", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/103/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/103/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/103", "id": 481131342, "node_id": "MDU6SXNzdWU0ODExMzEzNDI=", "number": 103, "title": "`sample` doesn't run in parallel", "user": {"login": "teddygroves", "id": 17163471, "node_id": "MDQ6VXNlcjE3MTYzNDcx", "avatar_url": "https://avatars0.githubusercontent.com/u/17163471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teddygroves", "html_url": "https://github.com/teddygroves", "followers_url": "https://api.github.com/users/teddygroves/followers", "following_url": "https://api.github.com/users/teddygroves/following{/other_user}", "gists_url": "https://api.github.com/users/teddygroves/gists{/gist_id}", "starred_url": "https://api.github.com/users/teddygroves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teddygroves/subscriptions", "organizations_url": "https://api.github.com/users/teddygroves/orgs", "repos_url": "https://api.github.com/users/teddygroves/repos", "events_url": "https://api.github.com/users/teddygroves/events{/privacy}", "received_events_url": "https://api.github.com/users/teddygroves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-08-15T12:37:21Z", "updated_at": "2019-08-20T10:09:56Z", "closed_at": "2019-08-20T10:09:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nThe latest version of cmdstanpy doesn't seem to run the `sample` method in parallel.\r\n\r\n#### Description:\r\n\r\nTo reproduce the issue I made a file in a new folder called `check.py` which is as follows:\r\n\r\n```\r\nimport cmdstanpy\r\n\r\n\r\nstan_code = \"\"\"\r\ndata { \r\n  int<lower=0> N; \r\n  int<lower=0,upper=1> y[N];\r\n} \r\nparameters {\r\n  real<lower=0,upper=1> theta;\r\n} \r\nmodel {\r\n  theta ~ beta(1,1);\r\n  for (n in 1:N) \r\n    y[n] ~ bernoulli(theta);\r\n}\r\n\"\"\"\r\ndata = {\r\n    \"N\" : 10,\r\n    \"y\" : [0,1,0,0,0,0,0,0,0,1]\r\n}\r\n\r\nwith open(\"bernoulli.stan\", 'w') as f:\r\n    f.write(stan_code)\r\n\r\nmodel = cmdstanpy.Model('bernoulli.stan')\r\nmodel.compile()\r\nfit = model.sample(warmup_iters=100000, cores=2, chains=2, data=data)\r\n\r\n```\r\n\r\nThen I ran the following shell commands:\r\n\r\n```\r\nvirtualenv venv\r\nsource venv/bin/activate\r\npip install --no-cache-dir cmdstanpy\r\ninstall_cmdstan\r\npython check.py\r\n```\r\nHere's the output:\r\n\r\n```\r\n~/Code/cmdstanpy_bug $ virtualenv venv\r\nUsing base prefix '/Users/tedgro/.pyenv/versions/3.7.2'\r\nNew python executable in /Users/tedgro/Code/cmdstanpy_bug/venv/bin/python3.7\r\nAlso creating executable in /Users/tedgro/Code/cmdstanpy_bug/venv/bin/python\r\nInstalling setuptools, pip, wheel...\r\ndone.\r\n~/Code/cmdstanpy_bug $ source venv/bin/activate\r\n(venv) ~/Code/cmdstanpy_bug $ pip install --no-cache-dir cmdstanpy\r\nCollecting cmdstanpy\r\n  Downloading https://files.pythonhosted.org/packages/fa/4c/5fd03a75a71cca63b80b774003e67c8f513d139198f5192b58d4379d1fd7/cmdstanpy-0.4.2-py3-none-any.whl\r\nCollecting pandas (from cmdstanpy)\r\n  Downloading https://files.pythonhosted.org/packages/39/b7/441375a152f3f9929ff8bc2915218ff1a063a59d7137ae0546db616749f9/pandas-0.25.0-cp37-cp37m-macosx_10_9_x86_64.macosx_10_10_x86_64.whl (10.1MB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10.1MB 731kB/s \r\nCollecting numpy (from cmdstanpy)\r\n  Downloading https://files.pythonhosted.org/packages/c1/4b/78119133136c20e5ad2e01bf72b0633241defd619939908223cd394a9c32/numpy-1.17.0-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (15.0MB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 15.0MB 776kB/s \r\nCollecting python-dateutil>=2.6.1 (from pandas->cmdstanpy)\r\n  Downloading https://files.pythonhosted.org/packages/41/17/c62faccbfbd163c7f57f3844689e3a78bae1f403648a6afb1d0866d87fbb/python_dateutil-2.8.0-py2.py3-none-any.whl (226kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 235kB 3.3MB/s \r\nCollecting pytz>=2017.2 (from pandas->cmdstanpy)\r\n  Downloading https://files.pythonhosted.org/packages/87/76/46d697698a143e05f77bec5a526bf4e56a0be61d63425b68f4ba553b51f2/pytz-2019.2-py2.py3-none-any.whl (508kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 512kB 3.1MB/s \r\nCollecting six>=1.5 (from python-dateutil>=2.6.1->pandas->cmdstanpy)\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nInstalling collected packages: six, python-dateutil, pytz, numpy, pandas, cmdstanpy\r\nSuccessfully installed cmdstanpy-0.4.2 numpy-1.17.0 pandas-0.25.0 python-dateutil-2.8.0 pytz-2019.2 six-1.12.0\r\n(venv) ~/Code/cmdstanpy_bug $ install_cmdstan\r\nCmdStan version: 2.20.0\r\nInstall directory: /Users/tedgro/.cmdstanpy\r\nCmdStan version 2.20.0 already installed\r\ndeleting tmpfiles dir: /var/folders/nw/nbg0t9fx0hvdhwlgwk2kb48wqkndw3/T/tmp2iqsdetp\r\ndone\r\n(venv) ~/Code/cmdstanpy_bug $ python check.py\r\nINFO:cmdstanpy:stan to c++ (bernoulli.hpp)\r\nINFO:cmdstanpy:compiling c++\r\nINFO:cmdstanpy:compiled model file: /Users/tedgro/Code/cmdstanpy_bug/bernoulli\r\nINFO:cmdstanpy:start chain 1\r\nINFO:cmdstanpy:finish chain 1\r\nINFO:cmdstanpy:start chain 2\r\nINFO:cmdstanpy:finish chain 2\r\ndeleting tmpfiles dir: /var/folders/nw/nbg0t9fx0hvdhwlgwk2kb48wqkndw3/T/tmpl9f05dxe\r\ndone\r\n(venv) ~/Code/cmdstanpy_bug $ \r\n```\r\nChain 2 did not start sampling until chain 1 had finished.\r\n\r\n#### Current Version:\r\npython: 3.7.2\r\ncmdstan: 2.20.0\r\ncmdstanpy: 0.4.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/102", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/102/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/102/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/102", "id": 479380654, "node_id": "MDU6SXNzdWU0NzkzODA2NTQ=", "number": 102, "title": "Support stan model as a string in `cmdstanpy.Model`", "user": {"login": "thomasjpfan", "id": 5402633, "node_id": "MDQ6VXNlcjU0MDI2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5402633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasjpfan", "html_url": "https://github.com/thomasjpfan", "followers_url": "https://api.github.com/users/thomasjpfan/followers", "following_url": "https://api.github.com/users/thomasjpfan/following{/other_user}", "gists_url": "https://api.github.com/users/thomasjpfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasjpfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasjpfan/subscriptions", "organizations_url": "https://api.github.com/users/thomasjpfan/orgs", "repos_url": "https://api.github.com/users/thomasjpfan/repos", "events_url": "https://api.github.com/users/thomasjpfan/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasjpfan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-11T15:20:14Z", "updated_at": "2019-08-12T16:24:38Z", "closed_at": "2019-08-11T19:53:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nCurrently the workflow of developing a model in a jupyter notebook as follows:\r\n\r\n1. Create jupyter notebook\r\n2. Write stan model file\r\n3. Compile model\r\n4. Sample from model\r\n\r\nIf the compilation failed or if the sampling was not successful, one would need to jump out of the jupyter notebook, and edit the stan model file and go back into the notebook to compile and sample.\r\n\r\nSince the model is not defined in the notebook, notebooks would need to embed the model definition into it as show in the [pyladies bayesian workshop notebook](https://github.com/nyc-pyladies/2019-cmdstanpy-bayesian-workshop/blob/master/notebooks/WWC2019.ipynb). The writer would need to keep the stan model and the embedded model in the jupyter notebook text in sync.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/100", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/100/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/100/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/100", "id": 479174448, "node_id": "MDU6SXNzdWU0NzkxNzQ0NDg=", "number": 100, "title": "install_cmdstan fails on W10", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2019-08-09T21:30:37Z", "updated_at": "2020-04-08T13:01:52Z", "closed_at": "2020-03-09T13:44:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nRunning `python bin/install_cmdstan` fails on Windows 10.\r\n\r\nTested with `conda install m2w64-toolchain -c msys2` and `MAKE=mingw32-make`\r\n\r\nand\r\n\r\nRTools35\r\n\r\n#### Description:\r\n\r\nTrying to install on W10 leads to errors :\r\n\r\n```\r\n...\r\nbin/cmdstan/stanc.o:stanc.cpp:(.text+0x13d4e): undefined reference to `stan::lang::block_var_decl::type() const'\r\n...\r\nbin/cmdstan/stanc.o:stanc.cpp:(.text$_ZN5boost6detail7variant15backup_assignerINS_7variantINS_17recursive_wrapperIN4stan4lang3nilEEEINS4_INS6_11int_literalEEENS4_INS6_14double_literalEEENS4_INS6_10array_exprEEENS4_INS6_11matrix_exprEEENS4_INS6_15row_vector_exprEEENS4_INS6_8variableEEENS4_INS6_3funEEENS4_INS6_12integrate_1dEEENS4_INS6_13integrate_odeEEENS4_INS6_21integrate_ode_controlEEENS4_INS6_14algebra_solverEEENS4_INS6_22algebra_solver_controlEEENS4_INS6_8map_rectEEENS4_INS6_8index_opEEENS4_INS6_15index_op_slicedEEENS4_INS6_14conditional_opEEENS4_INS6_9binary_opEEENS4_INS6_8unary_opEEEEEEE14construct_implISY_EEvPvPKv[_ZN5boost6detail7variant15backup_assignerINS_7variantINS_17recursive_wrapperIN4stan4lang3nilEEEINS4_INS6_11int_literalEEENS4_INS6_14double_literalEEENS4_INS6_10array_exprEEENS4_INS6_11matrix_exprEEENS4_INS6_15row_vector_exprEEENS4_INS6_8variableEEENS4_INS6_3funEEENS4_INS6_12integrate_1dEEENS4_INS6_13integrate_odeEEENS4_INS6_21integrate_ode_controlEEENS4_INS6_14algebra_solverEEENS4_INS6_22algebra_solver_controlEEENS4_INS6_8map_rectEEENS4_INS6_8index_opEEENS4_INS6_15index_op_slicedEEENS4_INS6_14conditional_opEEENS4_INS6_9binary_opEEENS4_INS6_8unary_opEEEEEEE14construct_implISY_EEvPvPKv]+0x26): undefined reference to `stan::lang::map_rect::map_rect(stan::lang::map_rect const&)'\r\n...\r\ncollect2.exe: error: ld returned 1 exit status\r\nmake: *** [make/stanc:23: bin/stanc.exe] Error 1\r\n```\r\n\r\n#### Additional Information:\r\n\r\nI have probably fixed this before, but currently, I don't remember what I did, so I added this issue and at the same time we can document the fix.\r\n\r\nWorks fine with Ubuntu 18\r\n\r\n#### Current Version:\r\n\r\ncmdstanpy master\r\ncmdstan 2.20", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/94", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/94/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/94/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/94", "id": 475878121, "node_id": "MDU6SXNzdWU0NzU4NzgxMjE=", "number": 94, "title": "Add functionality to edit make/local", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-01T20:38:30Z", "updated_at": "2020-02-24T20:30:54Z", "closed_at": "2020-02-24T20:30:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nPlease provide a short couple sentence summary.\r\n\r\nThis should be simple and flexible (also foolproof=backup old?)\r\n\r\nFunctions:\r\nRead -> list of lines (or if multiline cmd, by block?) or dict?\r\nCreate <- list of lines or dict?\r\nWrite <- list of lines or dict?\r\nAppend\r\n\r\nOption to change `\\` -> `/`, true by default\r\nOption to run shortpath function on Windows?\r\n\r\nHelpers for GPU, MPI, threading\r\n\r\nOption to run cmdstanpy provided compilers (in future)\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\n\r\nedit make/local\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\nlatest git master", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/93", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/93/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/93/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/93", "id": 475874402, "node_id": "MDU6SXNzdWU0NzU4NzQ0MDI=", "number": 93, "title": "make failure still return stanfit with exe", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525781, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgx", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-01T20:28:55Z", "updated_at": "2019-08-09T14:44:05Z", "closed_at": "2019-08-09T14:44:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nPlease provide a short couple sentence summary.\r\n\r\nIn case of make failure, no exe file is created (or it's broken), stanfit is still updated and a new compilation fails.\r\n\r\n#### Description:\r\nDescribe the issue as clearly as possible.\r\n\r\nfail to create exe --> stanfit still think everything is fine.\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\nlatest git master", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/91", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/91/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/91/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/91", "id": 474491412, "node_id": "MDU6SXNzdWU0NzQ0OTE0MTI=", "number": 91, "title": "Gather commands to a list", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525785, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzg1", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-30T10:01:18Z", "updated_at": "2019-11-14T04:10:42Z", "closed_at": "2019-11-14T04:10:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nCalling subprocess needs a list of commands. \r\nCurrently `_run_cmdstan` functions uses `.split` method to create a list from the cmd string.\r\nIf one of the items contains whitespace (a path for example) then the subprocess will fail.\r\n\r\nhttps://github.com/stan-dev/cmdstanpy/blob/9dd4b45788e0e59ad2230ec60b854dbf592bf6c4/cmdstanpy/model.py#L566\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/89", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/89/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/89/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/89", "id": 473321277, "node_id": "MDU6SXNzdWU0NzMzMjEyNzc=", "number": 89, "title": "Add rload function", "user": {"login": "maedoc", "id": 5189886, "node_id": "MDQ6VXNlcjUxODk4ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5189886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maedoc", "html_url": "https://github.com/maedoc", "followers_url": "https://api.github.com/users/maedoc/followers", "following_url": "https://api.github.com/users/maedoc/following{/other_user}", "gists_url": "https://api.github.com/users/maedoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/maedoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maedoc/subscriptions", "organizations_url": "https://api.github.com/users/maedoc/orgs", "repos_url": "https://api.github.com/users/maedoc/repos", "events_url": "https://api.github.com/users/maedoc/events{/privacy}", "received_events_url": "https://api.github.com/users/maedoc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-07-26T11:52:21Z", "updated_at": "2019-08-09T22:30:36Z", "closed_at": "2019-08-09T22:30:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nAdd a `rload` that reads a file generated by `rdump`.\r\n\r\n#### Description:\r\nSome of my workflows find use for reading an Rdump file back into memory, e.g. instead of rerunning an expensive script that generates the Rdump file in the first place.  In `pycmdstan` I had a `rload` but it doesn't seem to have survived.\r\n\r\n\r\n#### Additional Information:\r\nFrom [here](https://gitlab.thevirtualbrain.org/tvb/pycmdstan/blob/master/pycmdstan/io.py#L39) it reads\r\n```python\r\ndef rload(fname):\r\n    \"\"\"Load a dict of data from an R dump format file.\r\n    \"\"\"\r\n    with open(fname, 'r') as fd:\r\n        lines = fd.readlines()\r\n    data = {}\r\n    for line in lines:\r\n        lhs, rhs = [_.strip() for _ in line.split('<-')]\r\n        if rhs.startswith('structure'):\r\n            *_, vals, dim = rhs.replace('(', ' ').replace(')', ' ').split('c')\r\n            vals = [float(v) for v in vals.split(',')[:-1]]\r\n            dim = [int(v) for v in dim.split(',')]\r\n            val = np.array(vals).reshape(dim[::-1]).T\r\n        elif rhs.startswith('c'):\r\n            val = np.array([float(_) for _ in rhs[2:-1].split(',')])\r\n        else:\r\n            try:\r\n                val = int(rhs)\r\n            except:\r\n                try:\r\n                    val = float(rhs)\r\n                except:\r\n                    raise ValueError(rhs)\r\n        data[lhs] = val\r\n    return data\r\n```\r\nand may find use within other library functions such as the read_metric function.\r\n\r\n#### Current Version:\r\nI just pip installed it, 0.4.1 I think.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/85", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/85/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/85/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/85", "id": 471668654, "node_id": "MDU6SXNzdWU0NzE2Njg2NTQ=", "number": 85, "title": "Add config for Windows to test config", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-07-23T12:29:38Z", "updated_at": "2019-07-24T13:49:48Z", "closed_at": "2019-07-24T13:49:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "CmdStanPy has Windows-specific logic - add config to make sure this gets tested by Travis.\r\n\r\nYes, we can add `.appveyor.yml`, I can do it in another PR.\r\n\r\n_Originally posted by @ahartikainen in https://github.com/stan-dev/cmdstanpy/pull/82#issuecomment-514175896_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/80", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/80/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/80/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/80", "id": 470638054, "node_id": "MDU6SXNzdWU0NzA2MzgwNTQ=", "number": 80, "title": "os.makedirs before saving files", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-20T05:34:22Z", "updated_at": "2019-07-21T17:54:00Z", "closed_at": "2019-07-21T17:54:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nSaving csv files fails if dir does not exist.\r\n\r\n`fit.save_csvfiles(\"data_folder\", \"basename\")` \r\n\r\n`os.makedirs` should be called before saving the file (or tested if file can be saved)\r\n\r\n#### Current Version:\r\n\r\n0.4.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/74", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/74/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/74/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/74", "id": 468233661, "node_id": "MDU6SXNzdWU0NjgyMzM2NjE=", "number": 74, "title": "Use logging module instead of print", "user": {"login": "wsuchy", "id": 5363614, "node_id": "MDQ6VXNlcjUzNjM2MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5363614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsuchy", "html_url": "https://github.com/wsuchy", "followers_url": "https://api.github.com/users/wsuchy/followers", "following_url": "https://api.github.com/users/wsuchy/following{/other_user}", "gists_url": "https://api.github.com/users/wsuchy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsuchy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsuchy/subscriptions", "organizations_url": "https://api.github.com/users/wsuchy/orgs", "repos_url": "https://api.github.com/users/wsuchy/repos", "events_url": "https://api.github.com/users/wsuchy/events{/privacy}", "received_events_url": "https://api.github.com/users/wsuchy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-15T16:55:54Z", "updated_at": "2019-07-17T21:53:25Z", "closed_at": "2019-07-17T21:53:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Summary:\r\nCurrently we log our messages via `print` method call which makes it impossible to control it\r\n#### Description:\r\nLogging should be done using `import logging` (the same way as in `fbprophet`)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/68", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/68/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/68/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/68", "id": 464567508, "node_id": "MDU6SXNzdWU0NjQ1Njc1MDg=", "number": 68, "title": "Read Stan csv to StanFit", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-05T10:08:39Z", "updated_at": "2019-07-21T11:01:02Z", "closed_at": "2019-07-21T11:01:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We need (or do we have this already) a function that can take a list of (stan) csv and outputs StanFit.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/67", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/67/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/67/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/67", "id": 463778844, "node_id": "MDU6SXNzdWU0NjM3Nzg4NDQ=", "number": 67, "title": "implement `run_generated_quantities` method", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-03T14:15:33Z", "updated_at": "2019-09-16T11:17:57Z", "closed_at": "2019-09-16T11:17:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nAdd methods to run the CmdStan `generate_quantities` method and to retrieve estimates from the resulting Stan csv files. \r\n\r\n#### Description:\r\n\r\nThe generated quantities is used to define values that depend on parameters and data - \"quantities of interest\" or QOIs.  This includes predictive inferences as well as forward simulation for posterior predictive checks.     The standalone generated quantities method allows users to ask additional questions of a fitted model by taking an existing sample given a model and data, and for each draw in the sample,  use the fitted parameter values for that draw to run just the standalone generated quantities block.\r\n\r\nThe inputs to the standalone generated quantities method are:\r\n\r\n +  a sample generated from an given model and dataset (as a Stan csv file)\r\n + a new version of that model which has the same data and parameters but which defines new/different variables in the generated quantities block \r\n + the data used to fit the model\r\n\r\nTo add this functionality we need to:\r\n\r\n- add method `run_generated_quantities` to Model class\r\n- add new class `GenerateQuantitiesArgs` in file `cmdstan_args.py` and allow this type to be one of the types allowed for `method` attributes of a `CmdStanPy` object.\r\n- unit tests for all of the above\r\n- ideally, Jupyter notebook showing how to use this - input data, model, run, output, etc.\r\n\r\nIf possible, the method name should be both concise and descriptive - `run_generated_quantities` seems too long and `run_gqs` seems too short.  \r\n\r\n#### Additional Information:\r\nThe output csv file is essentially the same as the output from the `sample` command, but minus sampler state information.  should the result be exposed as property `sample` or should there be a different property `generated_quantities` ?\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/66", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/66/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/66/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/66", "id": 463763681, "node_id": "MDU6SXNzdWU0NjM3NjM2ODE=", "number": 66, "title": "C++ toolchain - install instructions or lightweight download?", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}, {"id": 1178525782, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgy", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}, {"id": 1178525784, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzg0", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-03T13:47:55Z", "updated_at": "2019-07-10T19:29:32Z", "closed_at": "2019-07-10T19:29:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nCmdStanPy provides script `install_cmdstan` but that depends on already having a C++11 (or higher?) compiler installed.   Investigate how to automate toolchain install and/or provide platform-specific foolproof step-by-step instructions\r\n\r\n#### Description:\r\nInstallation has always been a huge pain point for non-programmers, which is the category that many working statisticians and data analyists fall into.  For them, we need a painless install experience.\r\n\r\n\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/64", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/64/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/64/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/64", "id": 463757754, "node_id": "MDU6SXNzdWU0NjM3NTc3NTQ=", "number": 64, "title": "add method `Fixed_Param`", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-03T13:36:42Z", "updated_at": "2019-10-03T22:56:24Z", "closed_at": "2019-10-03T22:53:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nImplement logic for `algorithm=Fixed_Param`\r\n\r\n#### Description:\r\nfrom the CmdStan manual:\r\n\r\n> Fixed Parameter Sampler\r\n> The fixed parameter sampler generates a new sample without changing the current state of the Markov chain; only generated quantities may change. This can be useful when, for example, trying to generate pseudo-data using the generated quantities block. If the parameters block is empty (no parameters) then using algorithm=fixed_param is mandatory.\r\n\r\nThis generates the same output as the `sample` command.  \r\n\r\n~~- add method `fixed_param` to Model class~~\r\n~~- implement placeholder class `FixedParamArgs` in file `cmdstan_args.py` as needed.~~\r\n- unit tests\r\n- jupyter notebook\r\n\r\nUpdate:  \"algorithm=fixed_param\" is part of method sample - added boolean arg `fixed_param`, default is false.  don't need additional methods or class `FixedParamArgs`.\r\n\r\n#### Additional Information:\r\n\r\n\"Fixed_Param\" is a terrible name.  alternatives:  \"run_program\".  Need to get across idea that sample is not generated by MCMC, instead using  RNG functions to generate outputs.\r\n\r\n#### Current Version:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/63", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/63/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/63/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/63", "id": 463745721, "node_id": "MDU6SXNzdWU0NjM3NDU3MjE=", "number": 63, "title": "Add method `variational`", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T13:13:04Z", "updated_at": "2019-10-03T22:57:04Z", "closed_at": "2019-10-03T22:57:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nAdd methods to run the CmdStan `variational` method and to retrieve estimates from the resulting Stan csv files.\r\n\r\n#### Description:\r\n\r\nTo add this functionality we need to:\r\n\r\n- add method `variational` to Model class\r\n- add new class `VariationalArgs` in file `cmdstan_args.py` and allow this type to be one of the types allowed for `method` attributes of a `CmdStanPy` object.\r\n- add new class `StanADVI` which holds resulting inference\r\n- add methods to parse this information out of the Stan csv file\r\n- unit tests for all of the above\r\n- ideally, Jupyter notebook showing how to use this - input data, model, run, output, etc.\r\n\r\n#### Additional Information:\r\n\r\nSee issue #58 \r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/60", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/60/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/60/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/60", "id": 462698456, "node_id": "MDU6SXNzdWU0NjI2OTg0NTY=", "number": 60, "title": "add method `optimize`", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "wsuchy", "id": 5363614, "node_id": "MDQ6VXNlcjUzNjM2MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5363614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsuchy", "html_url": "https://github.com/wsuchy", "followers_url": "https://api.github.com/users/wsuchy/followers", "following_url": "https://api.github.com/users/wsuchy/following{/other_user}", "gists_url": "https://api.github.com/users/wsuchy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsuchy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsuchy/subscriptions", "organizations_url": "https://api.github.com/users/wsuchy/orgs", "repos_url": "https://api.github.com/users/wsuchy/repos", "events_url": "https://api.github.com/users/wsuchy/events{/privacy}", "received_events_url": "https://api.github.com/users/wsuchy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wsuchy", "id": 5363614, "node_id": "MDQ6VXNlcjUzNjM2MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5363614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsuchy", "html_url": "https://github.com/wsuchy", "followers_url": "https://api.github.com/users/wsuchy/followers", "following_url": "https://api.github.com/users/wsuchy/following{/other_user}", "gists_url": "https://api.github.com/users/wsuchy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsuchy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsuchy/subscriptions", "organizations_url": "https://api.github.com/users/wsuchy/orgs", "repos_url": "https://api.github.com/users/wsuchy/repos", "events_url": "https://api.github.com/users/wsuchy/events{/privacy}", "received_events_url": "https://api.github.com/users/wsuchy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-07-01T12:54:41Z", "updated_at": "2019-07-11T17:35:38Z", "closed_at": "2019-07-11T17:35:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nAdd methods to run the CmdStan `optimize` method and to retrieve estimates from the resulting Stan csv files.\r\n\r\n#### Description:\r\nTo add this functionality we need to:\r\n  + add method `optimize` to `Model` class\r\n  + add methods to parse this information out of the Stan csv file\r\n\r\nthe current set of csv parsing utilities are specific to the csv produced by the NUTS-HMC sampler.  parsing the `optimize` csv is far more straightforward.\r\n\r\n#### Additional Information:\r\nProvide any additional information here.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/58", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/58/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/58/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/58", "id": 462249839, "node_id": "MDU6SXNzdWU0NjIyNDk4Mzk=", "number": 58, "title": "expose CmdStan methods `optimize`, `variational`, `generate_quantities`, sampling with `fixed_param`", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-06-29T01:00:44Z", "updated_at": "2019-10-03T22:58:01Z", "closed_at": "2019-10-03T22:58:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nThe beta version of CmdStanPy only has function `sample` which runs the NUTS-HMC sampler.   Expose the following additional CmdStan methods:\r\n\r\n- `optimize`\r\n- `variational`\r\n- `generate_quantities`\r\n- sampler algorithm `fixed_param` which is used for Stan programs without any parameters.\r\n\r\nThis is an umbrella issue.  We need per-method issue to break this down into managable chunks.    This issue is intended to be used to work out the best possible factorization of the CmdStanPy code base, as well as  the best function and argument names for cross-interface compatibility.\r\n\r\n#### Description:\r\n\r\nThe CmdStan CLI has common arguments and method and algorithm-specific arguments.\r\nAs currently implemented, CmdStanPy has a helper class `SamplerArgs` which is a composite of the data, output, and NUTS sampling algorithm arguments.  Keep as a single composite, or refactor into sub-compontents?\r\n\r\nEach method writes its output to the specified output file in a method-specific format - this requires writing additional parsing routines, and adding methods to the StanFit (fka RunSet) object to return this information using the appropriate Python object.\r\n\r\n#### Additional Information:\r\n\r\nThe CmdStan argument names don't line up with RStan/PyStan names:\r\n\r\n- `sample` -> `sampling`\r\n- `optimize` -> `optimizing`\r\n- `variational` -> `vb`\r\n\r\ncurrently only CmdStan exposes the method `stan::services::generate_quantities`.  should this be called `generated_quantities`?  This seems like the better name, in which case, we should change the CmdStan CLI arguments as well.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/57", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/57/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/57/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/57", "id": 462150640, "node_id": "MDU6SXNzdWU0NjIxNTA2NDA=", "number": 57, "title": "API changes - rename `RunSet`,  make first-class functions into class methods", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364766846, "node_id": "MDU6TGFiZWwxMzY0NzY2ODQ2", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/code%20cleanup", "name": "code cleanup", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-06-28T18:09:10Z", "updated_at": "2019-07-10T19:27:02Z", "closed_at": "2019-07-10T19:27:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nAll interfaces should use similar if not identical names for functions and objects as much as possible so that we can leverage documentation, teaching materials, etc.\r\n\r\nIn particular the name `RunSet` is not a good innovation.  Change to `StanFit`\r\n\r\nIn anticipation of a lightweight R wrapper, make first-class functions `compile_model` and `sample` into `Model` object class methods `compile` and `sample`.\r\n\r\n#### Description:\r\n\r\nChange the API and code organization.   Split file `lib.py` into modules `Model` and `StanFit` and `SamplerArgs`.  Make first-class functions in `cmds.py` into class methods objects.\r\n\r\nThis will clear up packaging dependencies as well.\r\n\r\n#### Current Version:\r\n\r\nBeta", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/55", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/55/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/55/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/55", "id": 461846272, "node_id": "MDU6SXNzdWU0NjE4NDYyNzI=", "number": 55, "title": "RunSet's __repr__ throws an error", "user": {"login": "daikonradish", "id": 3773819, "node_id": "MDQ6VXNlcjM3NzM4MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3773819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daikonradish", "html_url": "https://github.com/daikonradish", "followers_url": "https://api.github.com/users/daikonradish/followers", "following_url": "https://api.github.com/users/daikonradish/following{/other_user}", "gists_url": "https://api.github.com/users/daikonradish/gists{/gist_id}", "starred_url": "https://api.github.com/users/daikonradish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daikonradish/subscriptions", "organizations_url": "https://api.github.com/users/daikonradish/orgs", "repos_url": "https://api.github.com/users/daikonradish/repos", "events_url": "https://api.github.com/users/daikonradish/events{/privacy}", "received_events_url": "https://api.github.com/users/daikonradish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-28T04:11:33Z", "updated_at": "2019-06-28T17:09:04Z", "closed_at": "2019-06-28T17:09:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\n`RunSet`'s `__repr__` is broken.\r\n\r\n#### Description:\r\nFollowed the instructions in the notebook.\r\n\r\n    import os\r\n    import os.path\r\n    from cmdstanpy import cmdstan_path, compile_model, sample, get_drawset, summary, diagnose\r\n\r\n    bernoulli_path = os.path.join(cmdstan_path(), 'examples', 'bernoulli')\r\n    bernoulli_stan = os.path.join(bernoulli_path, 'bernoulli.stan')\r\n    bernoulli_model = compile_model(bernoulli_stan)\r\n    bern_data = { \"N\" : 10, \"y\" : [0,1,0,0,0,0,0,0,0,1] }\r\n\r\n    bern_fit = sample(bernoulli_model, data=bern_data)\r\n\r\n    bern_fit . # Error!\r\n\r\n\r\n#### Additional Information:\r\nOffending line is here: https://github.com/daikonradish/cmdstanpy/blob/master/cmdstanpy/lib.py#L500\r\n\r\n(Should be `self._args`)\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/51", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/51/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/51/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/51", "id": 457462454, "node_id": "MDU6SXNzdWU0NTc0NjI0NTQ=", "number": 51, "title": "Configure \u201calgorithm=fixed_param\u201d in new API", "user": {"login": "rndpolytope", "id": 49790072, "node_id": "MDQ6VXNlcjQ5NzkwMDcy", "avatar_url": "https://avatars0.githubusercontent.com/u/49790072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rndpolytope", "html_url": "https://github.com/rndpolytope", "followers_url": "https://api.github.com/users/rndpolytope/followers", "following_url": "https://api.github.com/users/rndpolytope/following{/other_user}", "gists_url": "https://api.github.com/users/rndpolytope/gists{/gist_id}", "starred_url": "https://api.github.com/users/rndpolytope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rndpolytope/subscriptions", "organizations_url": "https://api.github.com/users/rndpolytope/orgs", "repos_url": "https://api.github.com/users/rndpolytope/repos", "events_url": "https://api.github.com/users/rndpolytope/events{/privacy}", "received_events_url": "https://api.github.com/users/rndpolytope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-18T12:50:41Z", "updated_at": "2019-06-18T16:46:55Z", "closed_at": "2019-06-18T15:16:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Summary:\r\nIt seems not an option to configure algorithm=fixed_param in the new API.\r\nIn the old API, this is done by using [keyword argument](https://gitlab.thevirtualbrain.org/tvb/pycmdstan/blob/master/pycmdstan/model.py#L141). However, this is not an option as in the [new model class](https://github.com/stan-dev/cmdstanpy/blob/master/cmdstanpy/lib.py#L242).\r\n\r\n#### Current Version:\r\nNewest commit as of Jun 18.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/50", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/50/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/50/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/50", "id": 456643296, "node_id": "MDU6SXNzdWU0NTY2NDMyOTY=", "number": 50, "title": "add logic to csv parsing to handle saved warmup iterations", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525781, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgx", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": "Something isn't working"}, {"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-16T13:47:05Z", "updated_at": "2019-07-10T19:26:23Z", "closed_at": "2019-07-10T19:26:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nIf `save_warmup` is True, sampler writes warmup iterations to stan_csv file.\r\nThe current parsing logic doesn't account for this.  This is a bug.\r\n\r\nPeople like to use `save_warmup` to try to diagnose model problems and get an idea of how many warmup iterations are necessary.  Determine whether or not this is good practice. If it is, spec out the functions (if any) that should be added to CmdStanPy to allow users to do this.  If not, document other ways to do this in CmdStanPy .  This is a feature.\r\n\r\n#### Description:\r\nWarmup iterations come directly after csv header line, before the comment lines which report adaptation termination, step size and metric.\r\nAdd logic to parser routines to check for rows following header but before adaptation section.\r\n\r\n#### Additional Information:\r\nIn the long run, better output handling by core Stan should make the csv files go away.  Until then, we make do.\r\n\r\n#### Current Version:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/47", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/47/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/47/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/47", "id": 454162111, "node_id": "MDU6SXNzdWU0NTQxNjIxMTE=", "number": 47, "title": "investigate whether or not `make` works on all supported platforms.", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}, {"id": 1178525784, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzg0", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-10T13:08:20Z", "updated_at": "2020-08-14T23:13:56Z", "closed_at": "2020-08-14T23:13:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nOn some systems make is not called make. \r\nInvestigate ways for users to set up their environment to deal with this.\r\n\r\n#### Description:\r\nsee discussion here: https://github.com/stan-dev/cmdstanpy/pull/45#discussion_r291842496\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/42", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/42/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/42/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/42", "id": 451147722, "node_id": "MDU6SXNzdWU0NTExNDc3MjI=", "number": 42, "title": "refactor - conflate RunSet, PosteriorSample", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-02T03:15:41Z", "updated_at": "2019-06-03T22:05:52Z", "closed_at": "2019-06-03T22:05:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nThere's too much overlap between `RunSet` and `PosteriorSample` objects - investigate how to refactor. \r\n\r\n#### Description:\r\nThe `sample` command instantiates a `RunSet` object which keeps track of the number of chains, config, return code and output files.  If all chains run to completion successfully and return the same number of draws, then the `sample` command instantiates and returns a `PosteriorSample` object.\r\n\r\nThe essential feature of the PosteriorSample object is that it lazily instantiates the in-memory representation of the sample from the stan_csv output files, but this logic could just as easily be done by a `RunSet`.\r\n\r\nPosteriorSample functions `summary` and `diagnose` should first-class functions which take a `RunSet` argument.\r\n\r\n#### Additional Information:\r\nInitial versions of the functional spec had this design.\r\n\r\n#### Current Version:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/41", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/41/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/41/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/41", "id": 449004623, "node_id": "MDU6SXNzdWU0NDkwMDQ2MjM=", "number": 41, "title": "windows install script or instructions for CmdStan", "user": {"login": "mitzimorris", "id": 5466612, "node_id": "MDQ6VXNlcjU0NjY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5466612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitzimorris", "html_url": "https://github.com/mitzimorris", "followers_url": "https://api.github.com/users/mitzimorris/followers", "following_url": "https://api.github.com/users/mitzimorris/following{/other_user}", "gists_url": "https://api.github.com/users/mitzimorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitzimorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitzimorris/subscriptions", "organizations_url": "https://api.github.com/users/mitzimorris/orgs", "repos_url": "https://api.github.com/users/mitzimorris/repos", "events_url": "https://api.github.com/users/mitzimorris/events{/privacy}", "received_events_url": "https://api.github.com/users/mitzimorris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1364772033, "node_id": "MDU6TGFiZWwxMzY0NzcyMDMz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/build", "name": "build", "color": "fbca04", "default": false, "description": "download, install, and devops issues"}, {"id": 1178525784, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzg0", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-27T22:35:27Z", "updated_at": "2019-06-10T20:50:14Z", "closed_at": "2019-06-10T20:50:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\n\r\nCmdStanPy requires a local install of CmdStan.  The environment variable `CMDSTAN` is used to specify the path to the CmdStan install.  If this variable isn't set, CmdStanPy uses default directory location `~/.cmdstanpy`.   The script `make_cmdstan.sh` downloads and compiles the latest release of CmdStan from GitHub.  By default it installs the latest version of CmdStan in the default directory.    Flags `-d` and  `-v` are used to specify the directory and version, respectively. \r\n\r\nModify script `make_cmdstan.sh` as needed for Windows or create a Windows-appropriate install script or installer for CmdStan.\r\n\r\n#### Additional Information:\r\n\r\n#### Current Version:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/38", "repository_url": "https://api.github.com/repos/stan-dev/cmdstanpy", "labels_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/38/comments", "events_url": "https://api.github.com/repos/stan-dev/cmdstanpy/issues/38/events", "html_url": "https://github.com/stan-dev/cmdstanpy/issues/38", "id": 446230048, "node_id": "MDU6SXNzdWU0NDYyMzAwNDg=", "number": 38, "title": "Support ujson if available", "user": {"login": "seantalts", "id": 805356, "node_id": "MDQ6VXNlcjgwNTM1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/805356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seantalts", "html_url": "https://github.com/seantalts", "followers_url": "https://api.github.com/users/seantalts/followers", "following_url": "https://api.github.com/users/seantalts/following{/other_user}", "gists_url": "https://api.github.com/users/seantalts/gists{/gist_id}", "starred_url": "https://api.github.com/users/seantalts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seantalts/subscriptions", "organizations_url": "https://api.github.com/users/seantalts/orgs", "repos_url": "https://api.github.com/users/seantalts/repos", "events_url": "https://api.github.com/users/seantalts/events{/privacy}", "received_events_url": "https://api.github.com/users/seantalts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1178525783, "node_id": "MDU6TGFiZWwxMTc4NTI1Nzgz", "url": "https://api.github.com/repos/stan-dev/cmdstanpy/labels/feature", "name": "feature", "color": "84b6eb", "default": false, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2019-05-20T17:29:50Z", "updated_at": "2019-07-23T11:12:25Z", "closed_at": "2019-07-23T11:12:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### Summary:\r\nIf ujson (drop-in replacement for stdlib's json module) is available, use that instead as its several orders of magnitude faster. I think this is a 4 line change:\r\n\r\n```python\r\ntry:\r\n    import ujson as json\r\nexcept ImportError: \r\n    import json\r\n```\r\n\r\nThat should get us within @maedoc's 5% of fit time quite easily.\r\n\r\n==================\r\nWAS: request for faster data transfer\r\nIdeas:\r\n* Unix sockets (or in general allowing users to pass in the file handle for whatever they want to use to do communication between CmdStanPy and CmdStan). This should be a pretty quick fix to the code, just allowing for an additional argument.\r\n* Something faster to parse and create than JSON (I know this would also require changes in CmdStan). This post compares a few options: https://yuhui-lin.github.io/blog/2017/08/01/serialization\r\n", "performed_via_github_app": null, "score": 1.0}]}