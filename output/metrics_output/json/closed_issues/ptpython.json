{"total_count": 127, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/361", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/361/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/361/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/361", "id": 623092563, "node_id": "MDU6SXNzdWU2MjMwOTI1NjM=", "number": 361, "title": "Avoid completion of methods/attributes starting with underscore", "user": {"login": "piertoni", "id": 3265937, "node_id": "MDQ6VXNlcjMyNjU5Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3265937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piertoni", "html_url": "https://github.com/piertoni", "followers_url": "https://api.github.com/users/piertoni/followers", "following_url": "https://api.github.com/users/piertoni/following{/other_user}", "gists_url": "https://api.github.com/users/piertoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/piertoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piertoni/subscriptions", "organizations_url": "https://api.github.com/users/piertoni/orgs", "repos_url": "https://api.github.com/users/piertoni/repos", "events_url": "https://api.github.com/users/piertoni/events{/privacy}", "received_events_url": "https://api.github.com/users/piertoni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T09:51:33Z", "updated_at": "2020-06-05T13:24:25Z", "closed_at": "2020-06-05T13:24:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to achieve a behavior similar to `ipython`: no completion provided for methods and attributes starting with `_`, but if you start typing `object._` than they will show.\r\n\r\nHow is possible to do this?\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/351", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/351/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/351/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/351", "id": 590846544, "node_id": "MDU6SXNzdWU1OTA4NDY1NDQ=", "number": 351, "title": "raising __getattribute__ causes unhandled exception in event loop", "user": {"login": "linupi", "id": 3169764, "node_id": "MDQ6VXNlcjMxNjk3NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3169764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linupi", "html_url": "https://github.com/linupi", "followers_url": "https://api.github.com/users/linupi/followers", "following_url": "https://api.github.com/users/linupi/following{/other_user}", "gists_url": "https://api.github.com/users/linupi/gists{/gist_id}", "starred_url": "https://api.github.com/users/linupi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linupi/subscriptions", "organizations_url": "https://api.github.com/users/linupi/orgs", "repos_url": "https://api.github.com/users/linupi/repos", "events_url": "https://api.github.com/users/linupi/events{/privacy}", "received_events_url": "https://api.github.com/users/linupi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-31T06:55:46Z", "updated_at": "2020-07-10T14:05:21Z", "closed_at": "2020-07-10T14:05:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "working on linux64 with ptpython 3.0.1 on top of python 3.7.7 I see the following difference between ptpython and native python command-line:\r\n\r\nptpython\r\n-----------\r\n```python\r\n>>> class Foo(): \r\n...     def __getattribute__(self,*args): \r\n...         raise Exception()                                                                                                                             \r\n\r\n>>> f=Foo()                                                                                                                                               \r\n\r\n\r\nUnhandled exception in event loop:\r\n  File \"... lib/python3.7/asyncio/events.py\", line 88, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File \"... lib/python3.7/site-packages/prompt_toolkit/application/application.py\", line 653, in read_from_input\r\n    self.key_processor.process_keys()\r\n  File \"... lib/python3.7/site-packages/prompt_toolkit/key_binding/key_processor.py\", line 274, in process_keys\r\n    self._process_coroutine.send(key_press)\r\n  File \"... lib/python3.7/site-packages/prompt_toolkit/key_binding/key_processor.py\", line 186, in _process\r\n    self._call_handler(matches[-1], key_sequence=buffer[:])\r\n  File \"... lib/python3.7/site-packages/prompt_toolkit/key_binding/key_processor.py\", line 329, in _call_handler\r\n    handler.call(event)\r\n  File \"... lib/python3.7/site-packages/prompt_toolkit/key_binding/key_bindings.py\", line 101, in call\r\n    self.handler(event)\r\n  File \"... lib/python3.7/site-packages/ptpython/key_bindings.py\", line 124, in _\r\n    if b.validate():\r\n  File \"... lib/python3.7/site-packages/prompt_toolkit/buffer.py\", line 1262, in validate\r\n    self.validator.validate(self.document)\r\n  File \"... lib/python3.7/site-packages/prompt_toolkit/validation.py\", line 175, in validate\r\n    self.validator.validate(document)\r\n  File \"... lib/python3.7/site-packages/ptpython/validator.py\", line 28, in validate\r\n    flags = self.get_compiler_flags()\r\n  File \"... lib/python3.7/site-packages/ptpython/python_input.py\", line 362, in get_compiler_flags\r\n    if isinstance(value, __future__._Feature):\r\n  File \"<stdin>\", line 3, in __getattribute__\r\n\r\nException \r\nPress ENTER to continue... \r\n```\r\n\r\npython cmd\r\n---------------\r\n\r\n```python\r\n>>> class Foo():\r\n...   def __getattribute__(self,*args):\r\n...     raise Exception()\r\n... \r\n>>> f=Foo()\r\n>>>\r\n```\r\n\r\nis this the desired/expected behavior of ptpython?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/349", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/349/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/349/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/349", "id": 588740742, "node_id": "MDU6SXNzdWU1ODg3NDA3NDI=", "number": 349, "title": "Clear the screen", "user": {"login": "jebr", "id": 7726815, "node_id": "MDQ6VXNlcjc3MjY4MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7726815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jebr", "html_url": "https://github.com/jebr", "followers_url": "https://api.github.com/users/jebr/followers", "following_url": "https://api.github.com/users/jebr/following{/other_user}", "gists_url": "https://api.github.com/users/jebr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jebr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jebr/subscriptions", "organizations_url": "https://api.github.com/users/jebr/orgs", "repos_url": "https://api.github.com/users/jebr/repos", "events_url": "https://api.github.com/users/jebr/events{/privacy}", "received_events_url": "https://api.github.com/users/jebr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-26T21:28:21Z", "updated_at": "2020-03-27T14:02:43Z", "closed_at": "2020-03-27T14:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, \r\nI just started using ptpython and can't find a way to clear the console. Is there a command or a function for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/341", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/341/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/341/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/341", "id": 563706169, "node_id": "MDU6SXNzdWU1NjM3MDYxNjk=", "number": 341, "title": "Use IPython's `run` command", "user": {"login": "vict0rsch", "id": 9283470, "node_id": "MDQ6VXNlcjkyODM0NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9283470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vict0rsch", "html_url": "https://github.com/vict0rsch", "followers_url": "https://api.github.com/users/vict0rsch/followers", "following_url": "https://api.github.com/users/vict0rsch/following{/other_user}", "gists_url": "https://api.github.com/users/vict0rsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/vict0rsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vict0rsch/subscriptions", "organizations_url": "https://api.github.com/users/vict0rsch/orgs", "repos_url": "https://api.github.com/users/vict0rsch/repos", "events_url": "https://api.github.com/users/vict0rsch/events{/privacy}", "received_events_url": "https://api.github.com/users/vict0rsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-12T02:54:45Z", "updated_at": "2020-02-12T02:55:18Z", "closed_at": "2020-02-12T02:55:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "IPython has this really great command: `run file.py` that executes it. Is this doable in some way with `ptipython`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/338", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/338/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/338/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/338", "id": 560083546, "node_id": "MDU6SXNzdWU1NjAwODM1NDY=", "number": 338, "title": "django-extensions shell_plus command breaks with ptpython v3.0", "user": {"login": "blackrobot", "id": 85895, "node_id": "MDQ6VXNlcjg1ODk1", "avatar_url": "https://avatars1.githubusercontent.com/u/85895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackrobot", "html_url": "https://github.com/blackrobot", "followers_url": "https://api.github.com/users/blackrobot/followers", "following_url": "https://api.github.com/users/blackrobot/following{/other_user}", "gists_url": "https://api.github.com/users/blackrobot/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackrobot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackrobot/subscriptions", "organizations_url": "https://api.github.com/users/blackrobot/orgs", "repos_url": "https://api.github.com/users/blackrobot/repos", "events_url": "https://api.github.com/users/blackrobot/events{/privacy}", "received_events_url": "https://api.github.com/users/blackrobot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-05T01:19:42Z", "updated_at": "2020-03-27T21:25:05Z", "closed_at": "2020-03-27T21:25:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [django-extensions] package's `shell_plus` command doesn't work with v3.0 of ptpython.\r\n\r\nI've also opened an issue on django-extensions detailing the problem:\r\nhttps://github.com/django-extensions/django-extensions/issues/1473\r\n\r\nIt seems like this may be a problem with the changes in the `run_config` function. The breaking [changes from v2.0.5 to v3.0.0 can be seen here][run_config]:\r\n\r\n```diff\r\n- def run_config(repl, config_file='~/.ptpython/config.py'):\r\n+ def run_config(repl: PythonInput, config_file: str) -> None:\r\n```\r\n\r\nWhat was the reason for removing the default `config_file` argument? Would it be ok to add the updated default path back?\r\n\r\n```python\r\ndefault_config_file = os.path.join(\r\n    appdirs.user_config_dir(\"ptpython\", \"prompt_toolkit\"),\r\n    \"config.py\",\r\n)\r\n\r\ndef run_config(repl: PythonInput, config_file: str = None) -> None:\r\n    if not config_file:\r\n        # try the default\r\n\t\tif os.path.exists(default_config_file):\r\n\t\t\tconfig_file = default_config_file\r\n\telif not os.path.exists(config_file):\r\n\t\t...\r\n```\r\n\r\n\r\n[django-extensions]: https://github.com/django-extensions/django-extensions\r\n[run_config]: https://github.com/prompt-toolkit/ptpython/compare/2.0.5...3.0.0#diff-e9d446ba3ffd819acabbe2d59ef4bf2dL243-R271", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/335", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/335/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/335/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/335", "id": 558701989, "node_id": "MDU6SXNzdWU1NTg3MDE5ODk=", "number": 335, "title": "3.0.0 release on PyPi but not here?", "user": {"login": "riconnon", "id": 1963938, "node_id": "MDQ6VXNlcjE5NjM5Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1963938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riconnon", "html_url": "https://github.com/riconnon", "followers_url": "https://api.github.com/users/riconnon/followers", "following_url": "https://api.github.com/users/riconnon/following{/other_user}", "gists_url": "https://api.github.com/users/riconnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/riconnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riconnon/subscriptions", "organizations_url": "https://api.github.com/users/riconnon/orgs", "repos_url": "https://api.github.com/users/riconnon/repos", "events_url": "https://api.github.com/users/riconnon/events{/privacy}", "received_events_url": "https://api.github.com/users/riconnon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-02T14:10:57Z", "updated_at": "2020-02-02T17:16:47Z", "closed_at": "2020-02-02T17:16:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be a new 3.0.0 release on PyPi but no corresponding tag or changelog entry here.\r\nCan someone clarify what's going on here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/331", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/331/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/331/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/331", "id": 543691870, "node_id": "MDU6SXNzdWU1NDM2OTE4NzA=", "number": 331, "title": "Fix simple typo: registeres -> registers", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-30T02:44:38Z", "updated_at": "2019-12-30T08:14:32Z", "closed_at": "2019-12-30T08:14:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in ptpython/eventloop.py.\nShould read `registers` rather than `registeres`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/321", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/321/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/321/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/321", "id": 505040886, "node_id": "MDU6SXNzdWU1MDUwNDA4ODY=", "number": 321, "title": "ptipython 2.0.5 does not work due to missing required positional argument", "user": {"login": "dnivra", "id": 281957, "node_id": "MDQ6VXNlcjI4MTk1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/281957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnivra", "html_url": "https://github.com/dnivra", "followers_url": "https://api.github.com/users/dnivra/followers", "following_url": "https://api.github.com/users/dnivra/following{/other_user}", "gists_url": "https://api.github.com/users/dnivra/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnivra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnivra/subscriptions", "organizations_url": "https://api.github.com/users/dnivra/orgs", "repos_url": "https://api.github.com/users/dnivra/repos", "events_url": "https://api.github.com/users/dnivra/events{/privacy}", "received_events_url": "https://api.github.com/users/dnivra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-10T05:20:07Z", "updated_at": "2019-10-10T15:55:45Z", "closed_at": "2019-10-10T15:55:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "ptipython 2.0.5 does not start up correctly due to the following error but ptpython works fine.\r\n\r\n```\r\n$ ptipython3                                                                                                                                                               \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n~/.virtualenvs/test/bin/ptipython3 in <module>\r\n      8 if __name__ == '__main__':\r\n      9     sys.argv[0] = re.sub(r'(-script\\.pyw?|\\.exe)?$', '', sys.argv[0])\r\n---> 10     sys.exit(run())\r\n\r\n~/.virtualenvs/test/lib/python3.6/site-packages/ptpython/entry_points/run_ptipython.py in run(user_ns)\r\n     93               configure=configure,\r\n     94               user_ns=user_ns,\r\n---> 95               title='IPython REPL (ptipython)')\r\n     96\r\n     97\r\n\r\n~/.virtualenvs/test/lib/python3.6/site-packages/ptpython/ipython.py in embed(**kwargs)\r\n    255         config.InteractiveShellEmbed = config.TerminalInteractiveShell\r\n    256         kwargs['config'] = config\r\n--> 257     shell = InteractiveShellEmbed.instance(**kwargs)\r\n    258     initialize_extensions(shell, config['InteractiveShellApp']['extensions'])\r\n    259     shell(header=header, stack_depth=2, compile_flags=compile_flags)\r\n\r\n~/.virtualenvs/test/lib/python3.6/site-packages/traitlets/config/configurable.py in instance(cls, *args, **kwargs)\r\n    410         # Create and save the instance\r\n    411         if cls._instance is None:\r\n--> 412             inst = cls(*args, **kwargs)\r\n    413             # Now make sure that the instance will also be returned by\r\n    414             # parent classes' _instance attribute.\r\n\r\n~/.virtualenvs/test/lib/python3.6/site-packages/ptpython/ipython.py in __init__(self, *a, **kw)\r\n    206             self,\r\n    207             get_globals=get_globals, vi_mode=vi_mode,\r\n--> 208             history_filename=history_filename)\r\n    209\r\n    210         if title:\r\n\r\n~/.virtualenvs/test/lib/python3.6/site-packages/ptpython/ipython.py in __init__(self, ipython_shell, *a, **kw)\r\n    155         kw['_completer'] = create_completer(kw['get_globals'], kw['get_globals'],\r\n    156                                             ipython_shell.magics_manager,\r\n--> 157                                             ipython_shell.alias_manager)\r\n    158         kw['_lexer'] = create_lexer()\r\n    159         kw['_validator'] = IPythonValidator(\r\n\r\n~/.virtualenvs/test/lib/python3.6/site-packages/ptpython/ipython.py in create_completer(get_globals, get_locals, magics_manager, alias_manager)\r\n     95\r\n     96     return GrammarCompleter(g, {\r\n---> 97         'python': PythonCompleter(get_globals, get_locals),\r\n     98         'magic': MagicsCompleter(magics_manager),\r\n     99         'alias_name': AliasCompleter(alias_manager),\r\n\r\nTypeError: __init__() missing 1 required positional argument: 'get_enable_dictionary_completion'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/312", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/312/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/312/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/312", "id": 468939672, "node_id": "MDU6SXNzdWU0Njg5Mzk2NzI=", "number": 312, "title": "Feature request: Auto close quotes, parentheses etc", "user": {"login": "securisec", "id": 22226823, "node_id": "MDQ6VXNlcjIyMjI2ODIz", "avatar_url": "https://avatars2.githubusercontent.com/u/22226823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/securisec", "html_url": "https://github.com/securisec", "followers_url": "https://api.github.com/users/securisec/followers", "following_url": "https://api.github.com/users/securisec/following{/other_user}", "gists_url": "https://api.github.com/users/securisec/gists{/gist_id}", "starred_url": "https://api.github.com/users/securisec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/securisec/subscriptions", "organizations_url": "https://api.github.com/users/securisec/orgs", "repos_url": "https://api.github.com/users/securisec/repos", "events_url": "https://api.github.com/users/securisec/events{/privacy}", "received_events_url": "https://api.github.com/users/securisec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-17T01:20:54Z", "updated_at": "2020-02-10T03:31:07Z", "closed_at": "2020-02-10T03:31:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have a zsh like feature where quotes can be automatically closed\r\n\r\nhttps://github.com/hlissner/zsh-autopair", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/310", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/310/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/310/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/310", "id": 459434152, "node_id": "MDU6SXNzdWU0NTk0MzQxNTI=", "number": 310, "title": "[Feature Request] Add a `--version` flag to ptipython", "user": {"login": "lynncyrin", "id": 5768468, "node_id": "MDQ6VXNlcjU3Njg0Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5768468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lynncyrin", "html_url": "https://github.com/lynncyrin", "followers_url": "https://api.github.com/users/lynncyrin/followers", "following_url": "https://api.github.com/users/lynncyrin/following{/other_user}", "gists_url": "https://api.github.com/users/lynncyrin/gists{/gist_id}", "starred_url": "https://api.github.com/users/lynncyrin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lynncyrin/subscriptions", "organizations_url": "https://api.github.com/users/lynncyrin/orgs", "repos_url": "https://api.github.com/users/lynncyrin/repos", "events_url": "https://api.github.com/users/lynncyrin/events{/privacy}", "received_events_url": "https://api.github.com/users/lynncyrin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-22T04:20:31Z", "updated_at": "2020-01-18T22:36:21Z", "closed_at": "2020-01-18T22:36:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What\r\n\r\nI would like to be able to do `ptipython --version` and get some amount of version information\r\n\r\n### Why\r\n\r\nBeing able to do `{some-cli} --version` is a dev tool \"create comfort\", so to speak. It makes me feel good \u2728\r\n\r\n### Who\r\n\r\nI would explicitly prefer to add in this feature myself, contributing to new libraries is fun! I'll work on it if I get a \ud83d\udc4d  from a contributor.\r\n\r\n### Context\r\n\r\nThis issue is identical to https://github.com/prompt-toolkit/ptpython/issues/208. I just prefer to open my own issue whenever a related issue is >1 year old ^^ Feel free to close this one as a duplicate, but please include a comment confirming that you're accepting PRs!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/302", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/302/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/302/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/302", "id": 433347616, "node_id": "MDU6SXNzdWU0MzMzNDc2MTY=", "number": 302, "title": "How does ptpython handle multiline inputs?", "user": {"login": "JonasVautherin", "id": 2606672, "node_id": "MDQ6VXNlcjI2MDY2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2606672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonasVautherin", "html_url": "https://github.com/JonasVautherin", "followers_url": "https://api.github.com/users/JonasVautherin/followers", "following_url": "https://api.github.com/users/JonasVautherin/following{/other_user}", "gists_url": "https://api.github.com/users/JonasVautherin/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonasVautherin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonasVautherin/subscriptions", "organizations_url": "https://api.github.com/users/JonasVautherin/orgs", "repos_url": "https://api.github.com/users/JonasVautherin/repos", "events_url": "https://api.github.com/users/JonasVautherin/events{/privacy}", "received_events_url": "https://api.github.com/users/JonasVautherin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-15T15:32:27Z", "updated_at": "2019-04-16T08:59:57Z", "closed_at": "2019-04-16T08:59:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get that when I hit \"Enter\", it calls the `_accept_handler` that exits the application and returns the code I typed. Then that code is [compiled in \"eval\" mode](https://github.com/prompt-toolkit/ptpython/blob/master/ptpython/repl.py#L124). If that fails, it is [compiled in \"exec\"](https://github.com/prompt-toolkit/ptpython/blob/master/ptpython/repl.py#L163) mode.\r\n\r\nHowever, if I start writing a multiline code like:\r\n\r\n```python\r\nwhile True:\r\n    print(42)\r\n```\r\n\r\n`_accept_handler` will be called first with `while True:`, which will fail both \"eval\" and \"exec\" compilations. I can't seem to understand how it works in this case. Somehow it is just ignored, so that when I type `print(42)`, both lines get evaluated, right? Where is that happening in the code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/301", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/301/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/301/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/301", "id": 432822827, "node_id": "MDU6SXNzdWU0MzI4MjI4Mjc=", "number": 301, "title": "Embedding does not allow custom input/output", "user": {"login": "vxgmichel", "id": 7490006, "node_id": "MDQ6VXNlcjc0OTAwMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7490006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vxgmichel", "html_url": "https://github.com/vxgmichel", "followers_url": "https://api.github.com/users/vxgmichel/followers", "following_url": "https://api.github.com/users/vxgmichel/following{/other_user}", "gists_url": "https://api.github.com/users/vxgmichel/gists{/gist_id}", "starred_url": "https://api.github.com/users/vxgmichel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vxgmichel/subscriptions", "organizations_url": "https://api.github.com/users/vxgmichel/orgs", "repos_url": "https://api.github.com/users/vxgmichel/repos", "events_url": "https://api.github.com/users/vxgmichel/events{/privacy}", "received_events_url": "https://api.github.com/users/vxgmichel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-13T08:19:30Z", "updated_at": "2020-07-02T15:53:23Z", "closed_at": "2020-07-02T15:53:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "*Issue # 3 from [this gist](https://gist.github.com/vxgmichel/f99c372f05dafb16ab24960d985ba61a)*\r\n\r\nThe [ptpython.repl.embed](https://github.com/prompt-toolkit/ptpython#embedding-the-repl) function doesn't allow custom input/output. Extra arguments could be easily added, except maybe for the fact that `ptpython.embed.run_config` uses `six.moves.input`. That means the following line wouldn't work as expected.\r\n\r\n```python\r\nfrom ptpython.repl import embed, run_config\r\n[...]\r\nembed(input=custom_input, output=custom_output, config=run_config)\r\n```\r\n\r\nLooking at the code, it also seems like `PythonRepl` is missing a `run_async` method (similar to the `run` method):\r\n\r\nhttps://github.com/prompt-toolkit/ptpython/blob/b1bba26a491324cd65e0ef46c7b818c4b88fd993/ptpython/repl.py#L337-L351\r\n\r\nI can submit a PR if it helps.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/300", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/300/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/300/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/300", "id": 432820381, "node_id": "MDU6SXNzdWU0MzI4MjAzODE=", "number": 300, "title": "REPL does not always use the provided output", "user": {"login": "vxgmichel", "id": 7490006, "node_id": "MDQ6VXNlcjc0OTAwMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7490006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vxgmichel", "html_url": "https://github.com/vxgmichel", "followers_url": "https://api.github.com/users/vxgmichel/followers", "following_url": "https://api.github.com/users/vxgmichel/following{/other_user}", "gists_url": "https://api.github.com/users/vxgmichel/gists{/gist_id}", "starred_url": "https://api.github.com/users/vxgmichel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vxgmichel/subscriptions", "organizations_url": "https://api.github.com/users/vxgmichel/orgs", "repos_url": "https://api.github.com/users/vxgmichel/repos", "events_url": "https://api.github.com/users/vxgmichel/events{/privacy}", "received_events_url": "https://api.github.com/users/vxgmichel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-13T07:48:41Z", "updated_at": "2020-07-02T15:49:41Z", "closed_at": "2020-07-02T15:49:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "*Issue # 2 from [this gist](https://gist.github.com/vxgmichel/f99c372f05dafb16ab24960d985ba61a)*\r\n\r\nFor instance, the result of the evaluation is printed with `print_formatted_text` without passing the output object explicitly:\r\n\r\nhttps://github.com/prompt-toolkit/ptpython/blob/b1bba26a491324cd65e0ef46c7b818c4b88fd993/ptpython/repl.py#L156-L159\r\n\r\nI can provide a PR if it helps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/299", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/299/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/299/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/299", "id": 432820031, "node_id": "MDU6SXNzdWU0MzI4MjAwMzE=", "number": 299, "title": "REPL does not use the task-local defaults", "user": {"login": "vxgmichel", "id": 7490006, "node_id": "MDQ6VXNlcjc0OTAwMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7490006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vxgmichel", "html_url": "https://github.com/vxgmichel", "followers_url": "https://api.github.com/users/vxgmichel/followers", "following_url": "https://api.github.com/users/vxgmichel/following{/other_user}", "gists_url": "https://api.github.com/users/vxgmichel/gists{/gist_id}", "starred_url": "https://api.github.com/users/vxgmichel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vxgmichel/subscriptions", "organizations_url": "https://api.github.com/users/vxgmichel/orgs", "repos_url": "https://api.github.com/users/vxgmichel/repos", "events_url": "https://api.github.com/users/vxgmichel/events{/privacy}", "received_events_url": "https://api.github.com/users/vxgmichel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-13T07:43:57Z", "updated_at": "2020-07-02T15:48:32Z", "closed_at": "2020-07-02T15:48:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "*Issue # 1 from [this gist](https://gist.github.com/vxgmichel/f99c372f05dafb16ab24960d985ba61a)*\r\n\r\nWhen no input/output is provided to the REPL, it defaults to `sys.stdin/stdout`:\r\n\r\nhttps://github.com/prompt-toolkit/ptpython/blob/b1bba26a491324cd65e0ef46c7b818c4b88fd993/ptpython/python_input.py#L253-L254\r\n\r\nI was expecting [get_default_input](https://python-prompt-toolkit.readthedocs.io/en/stable/pages/reference.html?highlight=defaults#prompt_toolkit.input.get_default_input) and [get_default_output](https://python-prompt-toolkit.readthedocs.io/en/stable/pages/reference.html?highlight=defaults#prompt_toolkit.output.get_default_output) like applications do.\r\n\r\nI can provide a PR if it helps.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/290", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/290/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/290/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/290", "id": 408487716, "node_id": "MDU6SXNzdWU0MDg0ODc3MTY=", "number": 290, "title": "Embed ptpython repl in a prompt_toolkit app", "user": {"login": "JonasVautherin", "id": 2606672, "node_id": "MDQ6VXNlcjI2MDY2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2606672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonasVautherin", "html_url": "https://github.com/JonasVautherin", "followers_url": "https://api.github.com/users/JonasVautherin/followers", "following_url": "https://api.github.com/users/JonasVautherin/following{/other_user}", "gists_url": "https://api.github.com/users/JonasVautherin/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonasVautherin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonasVautherin/subscriptions", "organizations_url": "https://api.github.com/users/JonasVautherin/orgs", "repos_url": "https://api.github.com/users/JonasVautherin/repos", "events_url": "https://api.github.com/users/JonasVautherin/events{/privacy}", "received_events_url": "https://api.github.com/users/JonasVautherin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-10T00:54:09Z", "updated_at": "2019-02-19T21:54:33Z", "closed_at": "2019-02-19T21:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to embed ptpython repl as an element of a prompt_toolkit app, or doesn't it make sense at all?\r\n\r\nI just discovered prompt_toolkit (and ptpython) and I am playing with them. I am wondering if I could:\r\n\r\n1. Create a prompt_toolkit app that would show some data (say something like the output of the `top` command) in a window, and the ptpython repl in another.\r\n2. If 1. is possible, could I use the repl in order to edit the running app? Like adding windows etc?\r\n\r\nThat would make a super cool playground :-).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/288", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/288/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/288/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/288", "id": 406938915, "node_id": "MDU6SXNzdWU0MDY5Mzg5MTU=", "number": 288, "title": "embedded asyncio REPL fails to interpret commands and closes immediately", "user": {"login": "derekbrokeit", "id": 171628, "node_id": "MDQ6VXNlcjE3MTYyOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/171628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekbrokeit", "html_url": "https://github.com/derekbrokeit", "followers_url": "https://api.github.com/users/derekbrokeit/followers", "following_url": "https://api.github.com/users/derekbrokeit/following{/other_user}", "gists_url": "https://api.github.com/users/derekbrokeit/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekbrokeit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekbrokeit/subscriptions", "organizations_url": "https://api.github.com/users/derekbrokeit/orgs", "repos_url": "https://api.github.com/users/derekbrokeit/repos", "events_url": "https://api.github.com/users/derekbrokeit/events{/privacy}", "received_events_url": "https://api.github.com/users/derekbrokeit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-05T19:29:19Z", "updated_at": "2019-02-06T07:15:59Z", "closed_at": "2019-02-06T07:15:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running the `asyncio-python-embed` example fails to interpret any commands. I broke down the embed function to a simpler example, which demonstrates the failure using a background counting task and and REPL:\r\n\r\n```python\r\nimport asyncio\r\nfrom ptpython.repl import PythonRepl\r\nfrom prompt_toolkit.eventloop.defaults import use_asyncio_event_loop\r\nfrom prompt_toolkit.patch_stdout import patch_stdout\r\n\r\nuse_asyncio_event_loop()\r\n\r\n\r\nasync def print_counter():\r\n    \"\"\"\r\n    Coroutine that prints counters and saves it in a global variable.\r\n    \"\"\"\r\n    i = 0\r\n    while True:\r\n        print(f'Counter: {i}')\r\n        await asyncio.sleep(3)\r\n        i += 1\r\n\r\n\r\nasync def interactive_shell():\r\n    \"\"\"\r\n    Coroutine that starts a Python REPL from which we can access the global\r\n    counter variable.\r\n    \"\"\"\r\n    print('You should be able to read and update the \"counter[0]\" variable from this shell.')\r\n\r\n    # Create REPL.\r\n    repl = PythonRepl(vi_mode=False)\r\n    repl.terminal_title = 'howdy'\r\n\r\n    app = repl.app\r\n\r\n    # Start repl.\r\n    with patch_stdout():\r\n        retval = await app.run_async().to_asyncio_future()\r\n        print(f'retval: {retval}')\r\n\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\n# create the counting task\r\nloop.create_task(print_counter())\r\n\r\n# begin the shell\r\nloop.run_until_complete(interactive_shell())\r\nloop.close()\r\n```\r\n\r\nInstead of running an interpretted shell, it simply returns the intput. Here is the output of a shell session as can be seen by the value of the `retval` variable:\r\n\r\n```python\r\nCounter: 0\r\nYou should be able to read and update the \"counter[0]\" variable from this shell.\r\nCounter: 1\r\n>>> print('foo')                                                                                                                                           \r\nCounter: 2\r\nretval: 'print('foo')'\r\n```\r\nInterestingly, it does seem to properly understand the shell for the first command though:\r\n\r\n```python\r\nCounter: 0\r\nYou should be able to read and update the \"counter[0]\" variable from this shell.\r\nCounter: 1\r\nCounter: 2\r\n>>> def foo(): \r\n...     x = 2 \r\n...     print(x) \r\n...     return x                                                                                                                                                                                                                              \r\nretval: 'def foo():\\n    x = 2\\n    print(x)\\n    return x'                                                                                                                                           \r\n```\r\n\r\n                                                                                                                                                           ```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/285", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/285/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/285/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/285", "id": 404820047, "node_id": "MDU6SXNzdWU0MDQ4MjAwNDc=", "number": 285, "title": "Running shell command in Vi (NAV) mode returns an Exception", "user": {"login": "jcrmatos", "id": 1813375, "node_id": "MDQ6VXNlcjE4MTMzNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1813375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcrmatos", "html_url": "https://github.com/jcrmatos", "followers_url": "https://api.github.com/users/jcrmatos/followers", "following_url": "https://api.github.com/users/jcrmatos/following{/other_user}", "gists_url": "https://api.github.com/users/jcrmatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcrmatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcrmatos/subscriptions", "organizations_url": "https://api.github.com/users/jcrmatos/orgs", "repos_url": "https://api.github.com/users/jcrmatos/repos", "events_url": "https://api.github.com/users/jcrmatos/events{/privacy}", "received_events_url": "https://api.github.com/users/jcrmatos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-30T15:18:59Z", "updated_at": "2019-01-30T21:07:26Z", "closed_at": "2019-01-30T21:07:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "ptpython 2.0.4 in Python 3.7.1 32b.\r\nRunning shell command in Vi (NAV) mode returns an Exception\r\n\r\n```\r\nUnhandled exception in event loop:\r\n  File \"C:\\Users\\JMatos\\OneDrive\\Python\\winpython371-32\\python-3.7.1\\lib\\site-pa\r\nckages\\prompt_toolkit\\eventloop\\coroutine.py\", line 90, in step_next\r\n    new_f = coroutine.throw(exc)\r\n  File \"C:\\Users\\JMatos\\OneDrive\\Python\\winpython371-32\\python-3.7.1\\lib\\site-pa\r\nckages\\prompt_toolkit\\application\\run_in_terminal.py\", line 95, in _run_in_t\r\n    result = yield From(async_func())\r\n  File \"C:\\Users\\JMatos\\OneDrive\\Python\\winpython371-32\\python-3.7.1\\lib\\site-pa\r\nckages\\prompt_toolkit\\eventloop\\coroutine.py\", line 86, in step_next\r\n    new_f = coroutine.send(None)\r\n  File \"C:\\Users\\JMatos\\OneDrive\\Python\\winpython371-32\\python-3.7.1\\lib\\site-pa\r\nckages\\prompt_toolkit\\application\\application.py\", line 771, in run\r\n    input_fd = self.input.fileno()\r\n  File \"C:\\Users\\JMatos\\OneDrive\\Python\\winpython371-32\\python-3.7.1\\lib\\site-pa\r\nckages\\prompt_toolkit\\input\\win32.py\", line 73, in fileno\r\n    raise NotImplementedError\r\n\r\nException\r\nPress ENTER to continue...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/273", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/273/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/273/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/273", "id": 374629214, "node_id": "MDU6SXNzdWUzNzQ2MjkyMTQ=", "number": 273, "title": "Custom key bindings for auto suggestion", "user": {"login": "volodymyrprokopyuk", "id": 3127565, "node_id": "MDQ6VXNlcjMxMjc1NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3127565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volodymyrprokopyuk", "html_url": "https://github.com/volodymyrprokopyuk", "followers_url": "https://api.github.com/users/volodymyrprokopyuk/followers", "following_url": "https://api.github.com/users/volodymyrprokopyuk/following{/other_user}", "gists_url": "https://api.github.com/users/volodymyrprokopyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/volodymyrprokopyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volodymyrprokopyuk/subscriptions", "organizations_url": "https://api.github.com/users/volodymyrprokopyuk/orgs", "repos_url": "https://api.github.com/users/volodymyrprokopyuk/repos", "events_url": "https://api.github.com/users/volodymyrprokopyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/volodymyrprokopyuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-27T10:08:40Z", "updated_at": "2020-05-20T18:03:30Z", "closed_at": "2020-05-20T18:03:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Current key bindings for the auto suggestion is the `Right arrow` that implies hand movement on the keyboard and is less comfortable.\r\n\r\nHow the key bindings for auto suggestion can be changed to `Alt + ;` that is much more comfortable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/272", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/272/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/272/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/272", "id": 372862664, "node_id": "MDU6SXNzdWUzNzI4NjI2NjQ=", "number": 272, "title": "ctrl+c will stop ptipython", "user": {"login": "nasyxx", "id": 5007613, "node_id": "MDQ6VXNlcjUwMDc2MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5007613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasyxx", "html_url": "https://github.com/nasyxx", "followers_url": "https://api.github.com/users/nasyxx/followers", "following_url": "https://api.github.com/users/nasyxx/following{/other_user}", "gists_url": "https://api.github.com/users/nasyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasyxx/subscriptions", "organizations_url": "https://api.github.com/users/nasyxx/orgs", "repos_url": "https://api.github.com/users/nasyxx/repos", "events_url": "https://api.github.com/users/nasyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/nasyxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-23T08:08:46Z", "updated_at": "2018-11-09T14:28:24Z", "closed_at": "2018-11-09T14:28:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "ctrl+c will stop ptipython on macOS. Here is the traceback.\r\n\r\n```\r\n\u03bb ptipython                                                                                                                                                   \r\nIn [1]:                                                                                                                                                                 \r\n---------------------------------------------------------------------------\r\nKeyboardInterrupt                         Traceback (most recent call last)\r\n/usr/local/bin/ptipython in <module>\r\n      9 if __name__ == '__main__':\r\n     10     sys.argv[0] = re.sub(r'(-script\\.pyw?|\\.exe)?$', '', sys.argv[0])\r\n---> 11     sys.exit(run())\r\n\r\n/usr/local/lib/python3.7/site-packages/ptpython/entry_points/run_ptipython.py in run(user_ns)\r\n     93               configure=configure,\r\n     94               user_ns=user_ns,\r\n---> 95               title='IPython REPL (ptipython)')\r\n     96 \r\n     97 \r\n\r\n/usr/local/lib/python3.7/site-packages/ptpython/ipython.py in embed(**kwargs)\r\n    253     shell = InteractiveShellEmbed.instance(**kwargs)\r\n    254     initialize_extensions(shell, config['InteractiveShellApp']['extensions'])\r\n--> 255     shell(header=header, stack_depth=2, compile_flags=compile_flags)\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/terminal/embed.py in __call__(self, header, local_ns, module, dummy, stack_depth, global_ns, compile_flags, **kw)\r\n    227         # our call and get the original caller's namespaces.\r\n    228         self.mainloop(local_ns, module, stack_depth=stack_depth,\r\n--> 229                       global_ns=global_ns, compile_flags=compile_flags)\r\n    230 \r\n    231         self.banner2 = self.old_banner2\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/terminal/embed.py in mainloop(self, local_ns, module, stack_depth, display_banner, global_ns, compile_flags)\r\n    322 \r\n    323         with self.builtin_trap, self.display_trap:\r\n--> 324             self.interact()\r\n    325 \r\n    326         # now, purge out the local namespace of IPython's hidden variables.\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/terminal/interactiveshell.py in interact(self, display_banner)\r\n    453 \r\n    454             try:\r\n--> 455                 code = self.prompt_for_code()\r\n    456             except EOFError:\r\n    457                 if (not self.confirm_exit) \\\r\n\r\n/usr/local/lib/python3.7/site-packages/ptpython/ipython.py in prompt_for_code(self)\r\n    218 \r\n    219     def prompt_for_code(self):\r\n--> 220         return self.python_input.app.run()\r\n    221 \r\n    222 \r\n\r\n/usr/local/lib/python3.7/site-packages/prompt_toolkit/application/application.py in run(self, pre_run, set_exception_handler, inputhook)\r\n    696             loop.set_exception_handler(handle_exception)\r\n    697             try:\r\n--> 698                 return run()\r\n    699             finally:\r\n    700                 loop.set_exception_handler(previous_exc_handler)\r\n\r\n/usr/local/lib/python3.7/site-packages/prompt_toolkit/application/application.py in run()\r\n    670             f = self.run_async(pre_run=pre_run)\r\n    671             run_until_complete(f, inputhook=inputhook)\r\n--> 672             return f.result()\r\n    673 \r\n    674         def handle_exception(context):\r\n\r\n/usr/local/lib/python3.7/site-packages/prompt_toolkit/eventloop/future.py in result(self)\r\n    147         self._retrieved_result = True\r\n    148         if self._exception:\r\n--> 149             raise self._exception\r\n    150         else:\r\n    151             return self._result\r\n\r\n/usr/local/lib/python3.7/site-packages/prompt_toolkit/eventloop/coroutine.py in step_next(f)\r\n     88                 exc = f.exception()\r\n     89                 if exc:\r\n---> 90                     new_f = coroutine.throw(exc)\r\n     91                 else:\r\n     92                     new_f = coroutine.send(f.result())\r\n\r\n/usr/local/lib/python3.7/site-packages/prompt_toolkit/application/application.py in _run_async2()\r\n    649                 try:\r\n    650                     f = From(_run_async())\r\n--> 651                     result = yield f\r\n    652                 finally:\r\n    653                     assert not self._is_running\r\n\r\n/usr/local/lib/python3.7/site-packages/prompt_toolkit/eventloop/coroutine.py in step_next(f)\r\n     90                     new_f = coroutine.throw(exc)\r\n     91                 else:\r\n---> 92                     new_f = coroutine.send(f.result())\r\n     93         except StopIteration as e:\r\n     94             # Stop coroutine. Make sure that a result has been set in the future,\r\n\r\n/usr/local/lib/python3.7/site-packages/prompt_toolkit/application/application.py in _run_async()\r\n    601                     # Wait for UI to finish.\r\n    602                     try:\r\n--> 603                         result = yield From(f)\r\n    604                     finally:\r\n    605                         # In any case, when the application finishes. (Successful,\r\n\r\nKeyboardInterrupt: \r\nTime: 0h:00m:06s  \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/271", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/271/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/271/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/271", "id": 372626323, "node_id": "MDU6SXNzdWUzNzI2MjYzMjM=", "number": 271, "title": "^Z doesn't seem to work", "user": {"login": "alexis-layton", "id": 24704378, "node_id": "MDQ6VXNlcjI0NzA0Mzc4", "avatar_url": "https://avatars2.githubusercontent.com/u/24704378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexis-layton", "html_url": "https://github.com/alexis-layton", "followers_url": "https://api.github.com/users/alexis-layton/followers", "following_url": "https://api.github.com/users/alexis-layton/following{/other_user}", "gists_url": "https://api.github.com/users/alexis-layton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexis-layton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexis-layton/subscriptions", "organizations_url": "https://api.github.com/users/alexis-layton/orgs", "repos_url": "https://api.github.com/users/alexis-layton/repos", "events_url": "https://api.github.com/users/alexis-layton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexis-layton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-22T17:52:02Z", "updated_at": "2018-12-15T05:31:15Z", "closed_at": "2018-12-15T05:31:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if this is the same issue as the recently-closed ^D bug or if it was never intended to work, but typing ^Z does not suspend ptpython and return to the shell. (2.0.3)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/268", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/268/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/268/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/268", "id": 369849619, "node_id": "MDU6SXNzdWUzNjk4NDk2MTk=", "number": 268, "title": "Autosuggestion completion no longer works", "user": {"login": "john9631", "id": 2434319, "node_id": "MDQ6VXNlcjI0MzQzMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2434319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john9631", "html_url": "https://github.com/john9631", "followers_url": "https://api.github.com/users/john9631/followers", "following_url": "https://api.github.com/users/john9631/following{/other_user}", "gists_url": "https://api.github.com/users/john9631/gists{/gist_id}", "starred_url": "https://api.github.com/users/john9631/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john9631/subscriptions", "organizations_url": "https://api.github.com/users/john9631/orgs", "repos_url": "https://api.github.com/users/john9631/repos", "events_url": "https://api.github.com/users/john9631/events{/privacy}", "received_events_url": "https://api.github.com/users/john9631/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-13T22:58:07Z", "updated_at": "2018-10-16T01:10:58Z", "closed_at": "2018-10-16T01:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the amazing tool Jonathan.   \r\n\r\nI've got a recent problem (pretty sure it didn't exist before I did a complete Python 3.7.0 packages upgrade yesterday.  Its been working on 3.7 since the betas.  I'm currently on ptpython 2.0.3 and prompt-toolkit 2.0.6.\r\n\r\nTo replicate:  I have a history file in .ptpython and have xxx'd out my config file so it starts default.  Open in terminal with ptpython.  F2, Autosuggestion on.   \r\n\r\nType start of command from history & it shows a completion option  https://i.imgur.com/Ryvvwff.png\r\n\r\nLast week I would have used right arrow to complete followed by enter.  This no longer works.  Nor does ctrl e or anything else I've tried.   Any ideas?\r\n\r\nThanks, John", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/267", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/267/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/267/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/267", "id": 369812313, "node_id": "MDU6SXNzdWUzNjk4MTIzMTM=", "number": 267, "title": "Something has changed about true_color", "user": {"login": "Julian", "id": 329822, "node_id": "MDQ6VXNlcjMyOTgyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/329822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian", "html_url": "https://github.com/Julian", "followers_url": "https://api.github.com/users/Julian/followers", "following_url": "https://api.github.com/users/Julian/following{/other_user}", "gists_url": "https://api.github.com/users/Julian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian/subscriptions", "organizations_url": "https://api.github.com/users/Julian/orgs", "repos_url": "https://api.github.com/users/Julian/repos", "events_url": "https://api.github.com/users/Julian/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-13T15:26:23Z", "updated_at": "2018-10-13T21:33:01Z", "closed_at": "2018-10-13T21:33:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, apologies for what undoubtedly will be a partial issue report, will update it as I figure out what's up, but in updating recently to a more recent release, something has changed about the way to enable true color support.\r\n\r\n[The example](https://github.com/jonathanslenders/ptpython/blob/master/examples/ptpython_config/config.py#L108) still does things the way I do (by setting a `true_color` attribute), but that's the only reference to that attribute in the repo.\r\n\r\nThe reason I notice is because I am [proactively making sure I don't set useless attributes](https://github.com/Julian/dotfiles/blob/d490b983431db5f4a983af21145d976a5420b1b6/.config/ptpython/config.py#L4-L10) when setting config variables, and that safeguard started now failing and telling me that attribute has disappeared. If that's what's happened (the name of the attribute has changed say), it's IMHO a bad antipattern to have to set attributes on someone else's object like this rather than the object taking them as arguments to `__init__`, for exactly the reason in this ticket -- namely, the attribute disappears, and no one notices.\r\n\r\nSo, tl;dr, I am like 60% sure that perhaps what's changed is that now the expected API is to set the [`color_depth` attribute](https://github.com/jonathanslenders/ptpython/blob/master/ptpython/python_input.py#L232) to `ColorDepth.24_Bit`, in which case this issue boils down to:\r\n\r\n* the config example is out of date\r\n* it uses an \"unsafe\" way to configure the REPL, so ideally the REPL would grow a safer one", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/265", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/265/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/265/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/265", "id": 365325319, "node_id": "MDU6SXNzdWUzNjUzMjUzMTk=", "number": 265, "title": "Ctrl-D not working properly in 2.0.1", "user": {"login": "xiaket", "id": 171967, "node_id": "MDQ6VXNlcjE3MTk2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/171967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaket", "html_url": "https://github.com/xiaket", "followers_url": "https://api.github.com/users/xiaket/followers", "following_url": "https://api.github.com/users/xiaket/following{/other_user}", "gists_url": "https://api.github.com/users/xiaket/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaket/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaket/subscriptions", "organizations_url": "https://api.github.com/users/xiaket/orgs", "repos_url": "https://api.github.com/users/xiaket/repos", "events_url": "https://api.github.com/users/xiaket/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaket/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-01T06:32:47Z", "updated_at": "2018-10-16T00:51:49Z", "closed_at": "2018-10-16T00:51:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\n\r\nBefore the version upgrade, I have set `repl.confirm_exit = False` in `~/.ptpython/config.py` and it was working as intended. However, after the version upgrade, with `repl.confirm_exit = False`, Ctrl-D will not work: ptpython will not do anything about it. If I switch it back to `repl.confirm_exit = True`, Ctrl-D will correctly raise the prompt and work again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/263", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/263/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/263/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/263", "id": 365253417, "node_id": "MDU6SXNzdWUzNjUyNTM0MTc=", "number": 263, "title": "New version has import errors", "user": {"login": "afrieder", "id": 8473729, "node_id": "MDQ6VXNlcjg0NzM3Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8473729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afrieder", "html_url": "https://github.com/afrieder", "followers_url": "https://api.github.com/users/afrieder/followers", "following_url": "https://api.github.com/users/afrieder/following{/other_user}", "gists_url": "https://api.github.com/users/afrieder/gists{/gist_id}", "starred_url": "https://api.github.com/users/afrieder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afrieder/subscriptions", "organizations_url": "https://api.github.com/users/afrieder/orgs", "repos_url": "https://api.github.com/users/afrieder/repos", "events_url": "https://api.github.com/users/afrieder/events{/privacy}", "received_events_url": "https://api.github.com/users/afrieder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-30T19:27:23Z", "updated_at": "2019-02-14T09:56:23Z", "closed_at": "2018-10-15T04:44:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there, I'm super excited about the new version of both prompt_toolkit and ptpython. I just installed the newest versions of both, as well as iPython (pip list shows `prompt_toolkit==2.0.5`, `ptpython==2.0.1`, `ipython==7.0.1`). Upon trying to launch ptpython I get various import errors: \r\n\r\n`ImportError: cannot import name 'PathCompleter' from 'prompt_toolkit.contrib.completers'` since https://github.com/jonathanslenders/ptpython/blob/6c0b99ea2b4be963b42c1062b2f33880ba30b6d3/ptpython/ipython.py#L14 is still using the old path for `PathCompleter` and `WordCompleter`, and fixing that raises an issue with https://github.com/jonathanslenders/ptpython/blob/9b61c9941bd4a5dff61c7bbb03172b0a515ee83b/ptpython/ipython.py#L19 since `CommandLineInterface` has been removed. \r\n\r\nIs there a newer version of this file which supports prompt_toolkit 2.0? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/260", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/260/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/260/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/260", "id": 364566388, "node_id": "MDU6SXNzdWUzNjQ1NjYzODg=", "number": 260, "title": "How to use within a virtual environment?", "user": {"login": "BoltzmannBrain", "id": 8323700, "node_id": "MDQ6VXNlcjgzMjM3MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8323700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoltzmannBrain", "html_url": "https://github.com/BoltzmannBrain", "followers_url": "https://api.github.com/users/BoltzmannBrain/followers", "following_url": "https://api.github.com/users/BoltzmannBrain/following{/other_user}", "gists_url": "https://api.github.com/users/BoltzmannBrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoltzmannBrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoltzmannBrain/subscriptions", "organizations_url": "https://api.github.com/users/BoltzmannBrain/orgs", "repos_url": "https://api.github.com/users/BoltzmannBrain/repos", "events_url": "https://api.github.com/users/BoltzmannBrain/events{/privacy}", "received_events_url": "https://api.github.com/users/BoltzmannBrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-27T16:55:27Z", "updated_at": "2020-05-04T09:59:23Z", "closed_at": "2018-09-30T19:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to start a ptpython session while in a virtualenv, where it doesn't use the system python?\r\nNote this is with ptpython installed in my system packages, not within the virtualenv.\r\nFor example, one can do `virtualenv --python /path/to/my/python` to specify the interpreter. Is something is similar possible w/ ptpython?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/258", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/258/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/258/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/258", "id": 364079634, "node_id": "MDU6SXNzdWUzNjQwNzk2MzQ=", "number": 258, "title": "Preset for switching to Vi mode to start in normal mode ", "user": {"login": "mkatychev", "id": 11223234, "node_id": "MDQ6VXNlcjExMjIzMjM0", "avatar_url": "https://avatars0.githubusercontent.com/u/11223234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkatychev", "html_url": "https://github.com/mkatychev", "followers_url": "https://api.github.com/users/mkatychev/followers", "following_url": "https://api.github.com/users/mkatychev/following{/other_user}", "gists_url": "https://api.github.com/users/mkatychev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkatychev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkatychev/subscriptions", "organizations_url": "https://api.github.com/users/mkatychev/orgs", "repos_url": "https://api.github.com/users/mkatychev/repos", "events_url": "https://api.github.com/users/mkatychev/events{/privacy}", "received_events_url": "https://api.github.com/users/mkatychev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-26T15:08:36Z", "updated_at": "2020-08-06T10:43:04Z", "closed_at": "2020-08-06T10:43:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I really enjoy toggling between emacs and vi mode. However, when switching to vi mode, I get thrown off when I go into insert mode by default. Is there a way to set normal mode as the default vi input mode?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/256", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/256/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/256/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/256", "id": 359570424, "node_id": "MDU6SXNzdWUzNTk1NzA0MjQ=", "number": 256, "title": "why still required prompt-toolkit-1.0.15 ", "user": {"login": "copdips", "id": 13083856, "node_id": "MDQ6VXNlcjEzMDgzODU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13083856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/copdips", "html_url": "https://github.com/copdips", "followers_url": "https://api.github.com/users/copdips/followers", "following_url": "https://api.github.com/users/copdips/following{/other_user}", "gists_url": "https://api.github.com/users/copdips/gists{/gist_id}", "starred_url": "https://api.github.com/users/copdips/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/copdips/subscriptions", "organizations_url": "https://api.github.com/users/copdips/orgs", "repos_url": "https://api.github.com/users/copdips/repos", "events_url": "https://api.github.com/users/copdips/events{/privacy}", "received_events_url": "https://api.github.com/users/copdips/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-12T16:59:41Z", "updated_at": "2018-09-30T19:56:02Z", "closed_at": "2018-09-30T19:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nit's strange that although in the setup.py, it gives `'prompt_toolkit>=2.0.0,<2.1.0',`\r\nhttps://github.com/jonathanslenders/ptpython/blob/master/setup.py#L25.\r\n\r\nBut when I install by using pip install ptpython, it is prompt-toolkit-1.0.15 installed.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/253", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/253/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/253/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/253", "id": 351109583, "node_id": "MDU6SXNzdWUzNTExMDk1ODM=", "number": 253, "title": "import error with config.py", "user": {"login": "alexomics", "id": 30386655, "node_id": "MDQ6VXNlcjMwMzg2NjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/30386655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexomics", "html_url": "https://github.com/alexomics", "followers_url": "https://api.github.com/users/alexomics/followers", "following_url": "https://api.github.com/users/alexomics/following{/other_user}", "gists_url": "https://api.github.com/users/alexomics/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexomics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexomics/subscriptions", "organizations_url": "https://api.github.com/users/alexomics/orgs", "repos_url": "https://api.github.com/users/alexomics/repos", "events_url": "https://api.github.com/users/alexomics/events{/privacy}", "received_events_url": "https://api.github.com/users/alexomics/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-16T08:41:28Z", "updated_at": "2019-12-24T20:10:43Z", "closed_at": "2018-08-23T12:30:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the example config.py ([from here](https://github.com/jonathanslenders/ptpython/blob/master/examples/ptpython_config/config.py)) I get a `ModuleNotFoundError`:\r\n\r\n```Traceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/ptpython/repl.py\", line 244, in run_config\r\n    six.exec_(code, namespace, namespace)\r\n  File \"/Users/Alex/.ptpython/config.py\", line 8, in <module>\r\n    from prompt_toolkit.key_binding.key_processor import KeyPress\r\nModuleNotFoundError: No module named 'prompt_toolkit.key_binding.key_processor'\r\n```\r\n\r\n`prompt_toolkit.key_binding` is installed, but I don't have the `key_processor` module.\r\n\r\nOther info:\r\n- Installed via pip\r\n- Python 3.6\r\n- MacOS 10.13.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/248", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/248/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/248/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/248", "id": 330515005, "node_id": "MDU6SXNzdWUzMzA1MTUwMDU=", "number": 248, "title": "Can't import modules anymore", "user": {"login": "r6203", "id": 4466258, "node_id": "MDQ6VXNlcjQ0NjYyNTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4466258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r6203", "html_url": "https://github.com/r6203", "followers_url": "https://api.github.com/users/r6203/followers", "following_url": "https://api.github.com/users/r6203/following{/other_user}", "gists_url": "https://api.github.com/users/r6203/gists{/gist_id}", "starred_url": "https://api.github.com/users/r6203/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r6203/subscriptions", "organizations_url": "https://api.github.com/users/r6203/orgs", "repos_url": "https://api.github.com/users/r6203/repos", "events_url": "https://api.github.com/users/r6203/events{/privacy}", "received_events_url": "https://api.github.com/users/r6203/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-06-08T04:24:31Z", "updated_at": "2018-10-10T18:56:51Z", "closed_at": "2018-10-10T11:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't import any modules from within my project (venv). I just get a \"No module named\" error.\r\nThis was all working fine a few hours ago... since then I've changed nothing (intentional).\r\n\r\nHowever, importing modules from within the standard Python shell works still fine.\r\n\r\nThis issue now happens in every project.\r\n\r\nI'm using ptpython version 0.41 and Python 3.6.5\r\n\r\nAny idea on this?\r\n\r\nedit: Seems to be related to #246 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/247", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/247/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/247/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/247", "id": 330024150, "node_id": "MDU6SXNzdWUzMzAwMjQxNTA=", "number": 247, "title": "Decode Error on Interactive mode", "user": {"login": "ju-w", "id": 22564375, "node_id": "MDQ6VXNlcjIyNTY0Mzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/22564375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ju-w", "html_url": "https://github.com/ju-w", "followers_url": "https://api.github.com/users/ju-w/followers", "following_url": "https://api.github.com/users/ju-w/following{/other_user}", "gists_url": "https://api.github.com/users/ju-w/gists{/gist_id}", "starred_url": "https://api.github.com/users/ju-w/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ju-w/subscriptions", "organizations_url": "https://api.github.com/users/ju-w/orgs", "repos_url": "https://api.github.com/users/ju-w/repos", "events_url": "https://api.github.com/users/ju-w/events{/privacy}", "received_events_url": "https://api.github.com/users/ju-w/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-06T20:39:50Z", "updated_at": "2018-06-19T21:15:05Z", "closed_at": "2018-06-19T21:15:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a UTF-8 file that looks like this:\r\n\r\n`error.py`\r\n\r\n```\r\na = '\u201d'\r\n```\r\nWhen I run `ptpython -i error.py`, I get the following traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"c:\\python36\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"c:\\python36\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Python36\\Scripts\\ptpython.exe\\__main__.py\", line 9, in <module>\r\n  File \"c:\\python36\\lib\\site-packages\\ptpython\\entry_points\\run_ptpython.py\", line 74, in run\r\n    title='Python REPL (ptpython)')\r\n  File \"c:\\python36\\lib\\site-packages\\ptpython\\repl.py\", line 320, in embed\r\n    cli.run()\r\n  File \"c:\\python36\\lib\\site-packages\\prompt_toolkit\\interface.py\", line 404, in run\r\n    self.on_start.fire()\r\n  File \"c:\\python36\\lib\\site-packages\\prompt_toolkit\\utils.py\", line 60, in fire\r\n    self()\r\n  File \"c:\\python36\\lib\\site-packages\\prompt_toolkit\\utils.py\", line 56, in __call__\r\n    handler(self.sender)\r\n  File \"c:\\python36\\lib\\site-packages\\ptpython\\repl.py\", line 62, in _on_start\r\n    code = compile(f.read(), path, 'exec')\r\n  File \"c:\\python36\\lib\\encodings\\cp1252.py\", line 23, in decode\r\n    return codecs.charmap_decode(input,self.errors,decoding_table)[0]\r\nUnicodeDecodeError: 'charmap' codec can't decode byte 0x9d in position 2: character maps to <undefined>\r\n```\r\n`python -i error.py` works fine, also `ptpython` and `import error` is no problem.\r\n\r\nI get this error under Windows, Linux is fine.\r\n\r\nA file containing only:\r\n```\r\n# \u201d\r\n```\r\nalso triggers the issue.\r\n\r\n[error.txt](https://github.com/jonathanslenders/ptpython/files/2078096/error.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/246", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/246/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/246/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/246", "id": 330016379, "node_id": "MDU6SXNzdWUzMzAwMTYzNzk=", "number": 246, "title": "Not adding current directory to sys.path", "user": {"login": "yulqen", "id": 246857, "node_id": "MDQ6VXNlcjI0Njg1Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/246857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yulqen", "html_url": "https://github.com/yulqen", "followers_url": "https://api.github.com/users/yulqen/followers", "following_url": "https://api.github.com/users/yulqen/following{/other_user}", "gists_url": "https://api.github.com/users/yulqen/gists{/gist_id}", "starred_url": "https://api.github.com/users/yulqen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yulqen/subscriptions", "organizations_url": "https://api.github.com/users/yulqen/orgs", "repos_url": "https://api.github.com/users/yulqen/repos", "events_url": "https://api.github.com/users/yulqen/events{/privacy}", "received_events_url": "https://api.github.com/users/yulqen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-06-06T20:15:56Z", "updated_at": "2018-10-13T21:13:53Z", "closed_at": "2018-10-13T21:13:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't work out why some instances of `ptpython` add the current directory to `sys.path`. Most of my projects to date, using 0.41, do this with no issues, but in recent installations I've noticed that it is missing from `sys.path`. Is there a condition for this I'm missing? I can't do basic imports. Stock `python` (3.6.4) interpreter and `bpython` - as a quick check - add the current directory without an issue. Tested in a variety of virtualenvs. `$PYTHONPATH` not set. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/242", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/242/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/242/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/242", "id": 315457181, "node_id": "MDU6SXNzdWUzMTU0NTcxODE=", "number": 242, "title": "Proposal: Pin `jedi>=0.9.0,<=0.10.2'` due to regression in `0.11.0`", "user": {"login": "myii", "id": 10231489, "node_id": "MDQ6VXNlcjEwMjMxNDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/10231489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myii", "html_url": "https://github.com/myii", "followers_url": "https://api.github.com/users/myii/followers", "following_url": "https://api.github.com/users/myii/following{/other_user}", "gists_url": "https://api.github.com/users/myii/gists{/gist_id}", "starred_url": "https://api.github.com/users/myii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myii/subscriptions", "organizations_url": "https://api.github.com/users/myii/orgs", "repos_url": "https://api.github.com/users/myii/repos", "events_url": "https://api.github.com/users/myii/events{/privacy}", "received_events_url": "https://api.github.com/users/myii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-04-18T12:24:47Z", "updated_at": "2018-10-13T21:38:39Z", "closed_at": "2018-10-13T21:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Proposal\r\n\r\nhttps://github.com/jonathanslenders/ptpython/blob/da2c5281f60c2d8a92749709219771ffaa84220f/setup.py#L24\r\n\r\nChange this to either:\r\n\r\n* `jedi>=0.9.0,<=0.10.2',`\r\n* `'jedi>=0.9.0,<0.11.0',`\r\n\r\nThis resolves the issues explained below.\r\n\r\nAlso resolves #229.\r\n\r\n#### Description of problems\r\n\r\nEncountered a crash when typing the period of `Revision.`, a [django-reversion](https://github.com/etianen/django-reversion) model:\r\n\r\n```python-traceback\r\nIn [1]: Revision.Exception in thread Thread-429:\r\nTraceback (most recent call last):\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/cache.py\", line 46, in wrapper\r\n    return getattr(self, name)\r\nAttributeError: 'MixedName' object has no attribute '_infer'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/evaluate/compiled/access.py\", line 120, in wrapper\r\n    cache[key]\r\nKeyError: 140232415539440\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \".../.pyenv/versions/3.6.4/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \".../.pyenv/versions/3.6.4/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/prompt_toolkit/interface.py\", line 865, in run\r\n    completions = list(buffer.completer.get_completions(document, complete_event))\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/prompt_toolkit/contrib/regular_languages/completion.py\", line 37, in get_completions\r\n    self._get_completions_for_match(m, complete_event))\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/prompt_toolkit/contrib/regular_languages/completion.py\", line 81, in _remove_duplicates\r\n    for i in items:\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/prompt_toolkit/contrib/regular_languages/completion.py\", line 64, in _get_completions_for_match\r\n    for completion in completer.get_completions(document, complete_event):\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/ptpython/completer.py\", line 127, in get_completions\r\n    completions = script.completions()\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/api/__init__.py\", line 174, in completions\r\n    completions = completion.completions()\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/api/completion.py\", line 102, in completions\r\n    return sorted(completions, key=lambda x: (x.name.startswith('__'),\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/api/completion.py\", line 43, in filter_names\r\n    k = (new.name, new.complete)  # key\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/api/classes.py\", line 436, in complete\r\n    return self._complete(True)\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/api/classes.py\", line 406, in _complete\r\n    if self._name.api_type == 'param' and self._stack is not None:\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/evaluate/compiled/mixed.py\", line 90, in api_type\r\n    return next(iter(self.infer())).api_type\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/cache.py\", line 48, in wrapper\r\n    result = func(self)\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/evaluate/compiled/mixed.py\", line 85, in infer\r\n    _create(self._evaluator, access_handle, parent_context=self.parent_context)\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/evaluate/compiled/access.py\", line 125, in wrapper\r\n    result = func(evaluator, obj, parent_context)\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/evaluate/compiled/mixed.py\", line 205, in _create\r\n    result = _find_syntax_node_name(evaluator, access_handle)\r\n  File \".../.pyenv/versions/Django_v2.0.x/lib/python3.6/site-packages/jedi/evaluate/compiled/mixed.py\", line 197, in _find_syntax_node_name\r\n    return module_node, names[-1].parent, path, code_lines\r\nIndexError: list index out of range\r\n```\r\n\r\n* While looking for a solution, found issue #229 with a similar traceback\r\n\r\nAfter restarting `shell_plus`, found further problems with both autocomplete and the documentation popup while typing `User.objects.get(pk=1)`:\r\n\r\n* Autocomplete problem\r\n    * Autocomplete is displayed after `User.`\r\n    * But not working after `User.objects.`\r\n* Documentation popup\r\n    * Not displayed at `User.objects.get(`\r\n\r\n#### Solution: Downgrading `jedi` to `0.10.2`\r\n\r\nIt was obvious that this must have been working at some point in history, so worked through the [release history](https://pypi.org/project/jedi/#history) installing previous versions of `jedi`.  Once I got to `0.10.2`, **everything mentioned above** started working properly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/236", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/236/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/236/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/236", "id": 299947205, "node_id": "MDU6SXNzdWUyOTk5NDcyMDU=", "number": 236, "title": "2.0 branch text-editor.py example has undefined search_field in do_find", "user": {"login": "meeas", "id": 1956932, "node_id": "MDQ6VXNlcjE5NTY5MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1956932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meeas", "html_url": "https://github.com/meeas", "followers_url": "https://api.github.com/users/meeas/followers", "following_url": "https://api.github.com/users/meeas/following{/other_user}", "gists_url": "https://api.github.com/users/meeas/gists{/gist_id}", "starred_url": "https://api.github.com/users/meeas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meeas/subscriptions", "organizations_url": "https://api.github.com/users/meeas/orgs", "repos_url": "https://api.github.com/users/meeas/repos", "events_url": "https://api.github.com/users/meeas/events{/privacy}", "received_events_url": "https://api.github.com/users/meeas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-24T15:05:39Z", "updated_at": "2018-10-13T21:19:00Z", "closed_at": "2018-10-13T21:19:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "  File \"text-editor.py\", line 245, in do_find\r\n    get_app().layout.focus(search_field)\r\n\r\nException name 'search_field' is not defined\r\n\r\nHaven't played with the library enough to spot the problem as it seems like it is defined on line 53 in the call to TextArea. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/233", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/233/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/233/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/233", "id": 294343678, "node_id": "MDU6SXNzdWUyOTQzNDM2Nzg=", "number": 233, "title": "Vi Mode Not Read from Config", "user": {"login": "ossie-git", "id": 25382296, "node_id": "MDQ6VXNlcjI1MzgyMjk2", "avatar_url": "https://avatars2.githubusercontent.com/u/25382296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ossie-git", "html_url": "https://github.com/ossie-git", "followers_url": "https://api.github.com/users/ossie-git/followers", "following_url": "https://api.github.com/users/ossie-git/following{/other_user}", "gists_url": "https://api.github.com/users/ossie-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/ossie-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ossie-git/subscriptions", "organizations_url": "https://api.github.com/users/ossie-git/orgs", "repos_url": "https://api.github.com/users/ossie-git/repos", "events_url": "https://api.github.com/users/ossie-git/events{/privacy}", "received_events_url": "https://api.github.com/users/ossie-git/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-05T10:31:36Z", "updated_at": "2018-02-08T01:27:37Z", "closed_at": "2018-02-08T01:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI created the file ~/.ptpython/config.py and used this:  https://github.com/jonathanslenders/ptpython/blob/master/examples/ptpython_config/config.py as my config file\r\n\r\nI then modified the following line:\r\n\r\n```\r\nrepl.vi_mode = False\r\n```\r\n\r\nand set it to:\r\n\r\n```\r\nrepl.vi_mode = True\r\n```\r\n\r\nHowever, when I then start a new ptpython session, it still defaults to Emacs mode.  Am I missing something?  Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/216", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/216/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/216/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/216", "id": 255998693, "node_id": "MDU6SXNzdWUyNTU5OTg2OTM=", "number": 216, "title": "pdb.post_mortem() is broken in ptpython", "user": {"login": "mosco", "id": 150537, "node_id": "MDQ6VXNlcjE1MDUzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/150537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mosco", "html_url": "https://github.com/mosco", "followers_url": "https://api.github.com/users/mosco/followers", "following_url": "https://api.github.com/users/mosco/following{/other_user}", "gists_url": "https://api.github.com/users/mosco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mosco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mosco/subscriptions", "organizations_url": "https://api.github.com/users/mosco/orgs", "repos_url": "https://api.github.com/users/mosco/repos", "events_url": "https://api.github.com/users/mosco/events{/privacy}", "received_events_url": "https://api.github.com/users/mosco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-07T16:34:28Z", "updated_at": "2018-09-30T19:35:43Z", "closed_at": "2018-09-30T19:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "pdb.pm() doesn't seem to work in ptpython.\r\n\r\nAfter an exception is triggered, this is what I get:\r\n```\r\n>>> pdb.pm()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/mosco/anaconda/lib/python3.6/pdb.py\", line 1604, in pm\r\n    post_mortem(sys.last_traceback)\r\nAttributeError: module 'sys' has no attribute 'last_traceback'\r\nmodule 'sys' has no attribute 'last_traceback'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/214", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/214/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/214/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/214", "id": 254317628, "node_id": "MDU6SXNzdWUyNTQzMTc2Mjg=", "number": 214, "title": "Crash when trying to move \"nothing\" to history pane", "user": {"login": "kannes", "id": 7661092, "node_id": "MDQ6VXNlcjc2NjEwOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7661092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kannes", "html_url": "https://github.com/kannes", "followers_url": "https://api.github.com/users/kannes/followers", "following_url": "https://api.github.com/users/kannes/following{/other_user}", "gists_url": "https://api.github.com/users/kannes/gists{/gist_id}", "starred_url": "https://api.github.com/users/kannes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kannes/subscriptions", "organizations_url": "https://api.github.com/users/kannes/orgs", "repos_url": "https://api.github.com/users/kannes/repos", "events_url": "https://api.github.com/users/kannes/events{/privacy}", "received_events_url": "https://api.github.com/users/kannes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T12:29:18Z", "updated_at": "2018-09-30T19:25:21Z", "closed_at": "2018-09-30T19:25:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installed ptpython-0.41-py3-none-any.whl from pip then ran ~/.local/bin/ptpython3 . I entered nothing but hit F3 and then hit Space. ptpython crashed with:\r\n\r\n```\r\n  Traceback (most recent call last):                                                           \u2502 \r\n  File \"/home/me/.local/bin/ptpython3\", line 11, in <module>                               \u2502 \r\n    sys.exit(run())                                                                            \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/ptpython/entry_points/run_ptpython.py\", line 74, in run\r\n    title='Python REPL (ptpython)')                                                            \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/ptpython/repl.py\", line 320, in embed  \u2502 \r\n    cli.run()                                                                                  \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/interface.py\", line 415, in run\r\n    self.eventloop.run(self.input, self.create_eventloop_callbacks())                          \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/eventloop/posix.py\", line 159, in run\r\n    t()                                                                                        \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/eventloop/posix.py\", line 82, in read_from_stdin\r\n    inputstream.feed(data)                                                                     \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/terminal/vt100_input.py\", line 398, in feed\r\n    self._input_parser.send(c)                                                                 \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/terminal/vt100_input.py\", line 325, in _input_parser_generator\r\n    self._call_handler(prefix[0], prefix[0])                                                   \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/terminal/vt100_input.py\", line 340, in _call_handler\r\n    self.feed_key_callback(KeyPress(key, insert_text))                                         \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/interface.py\", line 1048, in feed_key\r\n    cli.input_processor.process_keys()                                                         \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/key_binding/input_processor.py\", line 219, in process_keys\r\n    self._process_coroutine.send(key_press)                                                    \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/key_binding/input_processor.py\", line 176, in _process\r\n    self._call_handler(matches[-1], key_sequence=buffer[:])                                    \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/key_binding/input_processor.py\", line 247, in _call_handler\r\n    handler.call(event)                                                                        \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/prompt_toolkit/key_binding/registry.py\", line 61, in call\r\n    return self.handler(event)                                                                 \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/ptpython/history_browser.py\", line 443, in _\r\n    history_mapping.update_default_buffer(event.cli)                                           \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/ptpython/history_browser.py\", line 399, in update_default_buffer\r\n    self.get_new_document(b.cursor_position), bypass_readonly=True)                            \u2502 \r\n  File \"/home/me/.local/lib/python3.6/site-packages/ptpython/history_browser.py\", line 383, in get_new_document\r\n    lines.append(self.history_lines[line_no])                                                  \u2502 \r\nIndexError: list index out of range                                                            \u2502 \r\n```\r\n\r\nI guess it tried to append something that does not exist yet ;)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/207", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/207/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/207/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/207", "id": 244915618, "node_id": "MDU6SXNzdWUyNDQ5MTU2MTg=", "number": 207, "title": "ptpython Debian package", "user": {"login": "cdluminate", "id": 5723047, "node_id": "MDQ6VXNlcjU3MjMwNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5723047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdluminate", "html_url": "https://github.com/cdluminate", "followers_url": "https://api.github.com/users/cdluminate/followers", "following_url": "https://api.github.com/users/cdluminate/following{/other_user}", "gists_url": "https://api.github.com/users/cdluminate/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdluminate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdluminate/subscriptions", "organizations_url": "https://api.github.com/users/cdluminate/orgs", "repos_url": "https://api.github.com/users/cdluminate/repos", "events_url": "https://api.github.com/users/cdluminate/events{/privacy}", "received_events_url": "https://api.github.com/users/cdluminate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-23T15:02:10Z", "updated_at": "2019-02-06T05:44:34Z", "closed_at": "2019-02-06T05:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Temporary working but hacky package available here\r\nhttp://debomatic-amd64.debian.net/distribution#experimental/ptpython/0.39~1/buildlog\r\n\r\nThis is still a work in progress.\r\n\r\nhttp://debomatic-amd64.debian.net/debomatic/experimental/pool/ptpython_0.39~1/python-ptpython_0.39~1_amd64.deb\r\nhttp://debomatic-amd64.debian.net/debomatic/experimental/pool/ptpython_0.39~1/python3-ptpython_0.39~1_amd64.deb", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/201", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/201/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/201/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/201", "id": 238532017, "node_id": "MDU6SXNzdWUyMzg1MzIwMTc=", "number": 201, "title": "__main__ behaviour differs from vanilla python repl", "user": {"login": "PeterHolloway", "id": 6058211, "node_id": "MDQ6VXNlcjYwNTgyMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6058211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterHolloway", "html_url": "https://github.com/PeterHolloway", "followers_url": "https://api.github.com/users/PeterHolloway/followers", "following_url": "https://api.github.com/users/PeterHolloway/following{/other_user}", "gists_url": "https://api.github.com/users/PeterHolloway/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterHolloway/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterHolloway/subscriptions", "organizations_url": "https://api.github.com/users/PeterHolloway/orgs", "repos_url": "https://api.github.com/users/PeterHolloway/repos", "events_url": "https://api.github.com/users/PeterHolloway/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterHolloway/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-26T12:48:24Z", "updated_at": "2017-06-29T11:50:20Z", "closed_at": "2017-06-29T11:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 'standard' cpython interpreter\r\n```python\r\n>>> a = 3\r\n>>> import __main__\r\n>>> __main__.a\r\n3\r\n```\r\n\r\nIn ptpython interpreter\r\n```python\r\n>>> a = 3\r\n>>> import __main__\r\n>>> __main__.a\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'module' object has no attribute 'a'\r\n'module' object has no attribute 'a'\r\n```\r\n\r\nIs there something odd being done to the __main__ module?\r\n\r\nPossible related to #148 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/200", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/200/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/200/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/200", "id": 238402199, "node_id": "MDU6SXNzdWUyMzg0MDIxOTk=", "number": 200, "title": "Cannot use z.i with ptpython", "user": {"login": "Julian", "id": 329822, "node_id": "MDQ6VXNlcjMyOTgyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/329822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian", "html_url": "https://github.com/Julian", "followers_url": "https://api.github.com/users/Julian/followers", "following_url": "https://api.github.com/users/Julian/following{/other_user}", "gists_url": "https://api.github.com/users/Julian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian/subscriptions", "organizations_url": "https://api.github.com/users/Julian/orgs", "repos_url": "https://api.github.com/users/Julian/repos", "events_url": "https://api.github.com/users/Julian/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-25T19:56:48Z", "updated_at": "2017-07-27T10:26:00Z", "closed_at": "2017-07-27T10:26:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I haven't looked at the code yet, but ptpython is executing code differently than a regular interpreter would.\r\n\r\nAfter `pip install zope.interface`\r\n\r\n```\r\nimport zope.interface\r\n\r\nclass I(zope.interface.Interface):\r\n    pass\r\n```\r\n\r\nworks fine in a regular REPL, but in ptpython produces:\r\n\r\n```\r\n>>> class I(zope.interface.Interface):\r\n...     pass\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/julian/.local/share/virtualenvs/dev/site-packages/zope/interface/interface.py\", line 369, in __init__\r\n    raise InvalidInterface(\"Concrete attribute, \" + name)\r\nInvalidInterface: Concrete attribute, __module__\r\nConcrete attribute, __module__\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/196", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/196/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/196/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/196", "id": 228873058, "node_id": "MDU6SXNzdWUyMjg4NzMwNTg=", "number": 196, "title": "Make <C-w> only delete till dot?", "user": {"login": "alok", "id": 8325708, "node_id": "MDQ6VXNlcjgzMjU3MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8325708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alok", "html_url": "https://github.com/alok", "followers_url": "https://api.github.com/users/alok/followers", "following_url": "https://api.github.com/users/alok/following{/other_user}", "gists_url": "https://api.github.com/users/alok/gists{/gist_id}", "starred_url": "https://api.github.com/users/alok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alok/subscriptions", "organizations_url": "https://api.github.com/users/alok/orgs", "repos_url": "https://api.github.com/users/alok/repos", "events_url": "https://api.github.com/users/alok/events{/privacy}", "received_events_url": "https://api.github.com/users/alok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-15T23:20:00Z", "updated_at": "2017-05-15T23:53:40Z", "closed_at": "2017-05-15T23:53:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have text like `env = gym.maek` and I want to kill the word up to the dot to correct it, but `<c-w>` deletes the entire phrase. Is there a way around that? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/190", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/190/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/190/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/190", "id": 220832634, "node_id": "MDU6SXNzdWUyMjA4MzI2MzQ=", "number": 190, "title": "ptpython over socket?", "user": {"login": "traverseda", "id": 2125828, "node_id": "MDQ6VXNlcjIxMjU4Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2125828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traverseda", "html_url": "https://github.com/traverseda", "followers_url": "https://api.github.com/users/traverseda/followers", "following_url": "https://api.github.com/users/traverseda/following{/other_user}", "gists_url": "https://api.github.com/users/traverseda/gists{/gist_id}", "starred_url": "https://api.github.com/users/traverseda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traverseda/subscriptions", "organizations_url": "https://api.github.com/users/traverseda/orgs", "repos_url": "https://api.github.com/users/traverseda/repos", "events_url": "https://api.github.com/users/traverseda/events{/privacy}", "received_events_url": "https://api.github.com/users/traverseda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-11T03:56:14Z", "updated_at": "2017-04-11T23:50:59Z", "closed_at": "2017-04-11T23:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to run ptpython over a websocket, but it seems pretty tied to stdout/stdin. How would I go about capturing the IO for a ptpython console and sending/receiving from a custom data source?\r\n\r\nI've tried something like `sys.stdout=FakeStdOut(webSocket)`, and that doesn't seem to work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/187", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/187/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/187/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/187", "id": 218649331, "node_id": "MDU6SXNzdWUyMTg2NDkzMzE=", "number": 187, "title": "Completer in main thread?", "user": {"login": "randy3k", "id": 1690993, "node_id": "MDQ6VXNlcjE2OTA5OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1690993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randy3k", "html_url": "https://github.com/randy3k", "followers_url": "https://api.github.com/users/randy3k/followers", "following_url": "https://api.github.com/users/randy3k/following{/other_user}", "gists_url": "https://api.github.com/users/randy3k/gists{/gist_id}", "starred_url": "https://api.github.com/users/randy3k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randy3k/subscriptions", "organizations_url": "https://api.github.com/users/randy3k/orgs", "repos_url": "https://api.github.com/users/randy3k/repos", "events_url": "https://api.github.com/users/randy3k/events{/privacy}", "received_events_url": "https://api.github.com/users/randy3k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-01T00:22:05Z", "updated_at": "2017-04-01T00:24:36Z", "closed_at": "2017-04-01T00:24:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I note that the completers are [running in other threads][1] asynchronously. I wonder if it is possible to execute them under the main thread. In my use case, my completion functions are written in C and they need to be in the main thread.\r\n\r\n```python\r\nclass RCompleter(Completer):\r\n    def get_completions(self, document, complete_event):\r\n        # do some calls in C via ctyes.\r\n```\r\n\r\n[1]: https://github.com/jonathanslenders/python-prompt-toolkit/blob/2f9b04e1750fc94d07df511e637e77b069a85753/prompt_toolkit/interface.py#L826", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/184", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/184/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/184/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/184", "id": 217033374, "node_id": "MDU6SXNzdWUyMTcwMzMzNzQ=", "number": 184, "title": "Scrolling up the terminal during the session.", "user": {"login": "abhi18av", "id": 12799326, "node_id": "MDQ6VXNlcjEyNzk5MzI2", "avatar_url": "https://avatars1.githubusercontent.com/u/12799326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhi18av", "html_url": "https://github.com/abhi18av", "followers_url": "https://api.github.com/users/abhi18av/followers", "following_url": "https://api.github.com/users/abhi18av/following{/other_user}", "gists_url": "https://api.github.com/users/abhi18av/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhi18av/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhi18av/subscriptions", "organizations_url": "https://api.github.com/users/abhi18av/orgs", "repos_url": "https://api.github.com/users/abhi18av/repos", "events_url": "https://api.github.com/users/abhi18av/events{/privacy}", "received_events_url": "https://api.github.com/users/abhi18av/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-26T07:17:15Z", "updated_at": "2020-02-15T07:40:08Z", "closed_at": "2017-05-28T20:50:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @jonathanslenders ,\r\n\r\nThis is an amazing piece of work!! Thanks :smile: \r\n\r\nHowever, I feel that the ability to scroll up/down the terminal during a session would be a real add-on to the repl. In case, I've overlooked some such setting already could you please let me know? I'm still somewhat of a beginner with terminal programs ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/180", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/180/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/180/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/180", "id": 213777891, "node_id": "MDU6SXNzdWUyMTM3Nzc4OTE=", "number": 180, "title": "Is there a way to know whether I'm using ptpython?", "user": {"login": "laike9m", "id": 2592205, "node_id": "MDQ6VXNlcjI1OTIyMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2592205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laike9m", "html_url": "https://github.com/laike9m", "followers_url": "https://api.github.com/users/laike9m/followers", "following_url": "https://api.github.com/users/laike9m/following{/other_user}", "gists_url": "https://api.github.com/users/laike9m/gists{/gist_id}", "starred_url": "https://api.github.com/users/laike9m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laike9m/subscriptions", "organizations_url": "https://api.github.com/users/laike9m/orgs", "repos_url": "https://api.github.com/users/laike9m/repos", "events_url": "https://api.github.com/users/laike9m/events{/privacy}", "received_events_url": "https://api.github.com/users/laike9m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-13T14:10:16Z", "updated_at": "2017-03-23T03:32:12Z", "closed_at": "2017-03-23T03:32:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "`ipython` can be detected by checking `__IPYTHON__`'s existence. What to do in ptpython?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/179", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/179/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/179/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/179", "id": 212203723, "node_id": "MDU6SXNzdWUyMTIyMDM3MjM=", "number": 179, "title": "[question] Indention on output when embedded from different curses app", "user": {"login": "cthrax", "id": 102173, "node_id": "MDQ6VXNlcjEwMjE3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/102173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cthrax", "html_url": "https://github.com/cthrax", "followers_url": "https://api.github.com/users/cthrax/followers", "following_url": "https://api.github.com/users/cthrax/following{/other_user}", "gists_url": "https://api.github.com/users/cthrax/gists{/gist_id}", "starred_url": "https://api.github.com/users/cthrax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cthrax/subscriptions", "organizations_url": "https://api.github.com/users/cthrax/orgs", "repos_url": "https://api.github.com/users/cthrax/repos", "events_url": "https://api.github.com/users/cthrax/events{/privacy}", "received_events_url": "https://api.github.com/users/cthrax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-06T18:07:49Z", "updated_at": "2017-03-11T19:20:44Z", "closed_at": "2017-03-11T19:20:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nYou may not be able to help me, but this is my first foray into curses and I've got an app that I'm able to open ptpython in (and subsequently close, very useful!), but all the output from ptpython behaves as if bracketed paste mode was required (indenting every new line more). Do you know of a setting that would help with this? It'd be awesome to run some setting before calling embed, then revert it after so my original curses app behaves as expected.\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/175", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/175/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/175/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/175", "id": 209495339, "node_id": "MDU6SXNzdWUyMDk0OTUzMzk=", "number": 175, "title": "No attribute suggestion for pandas objects on Python 3.6", "user": {"login": "shaypal5", "id": 917954, "node_id": "MDQ6VXNlcjkxNzk1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/917954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaypal5", "html_url": "https://github.com/shaypal5", "followers_url": "https://api.github.com/users/shaypal5/followers", "following_url": "https://api.github.com/users/shaypal5/following{/other_user}", "gists_url": "https://api.github.com/users/shaypal5/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaypal5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaypal5/subscriptions", "organizations_url": "https://api.github.com/users/shaypal5/orgs", "repos_url": "https://api.github.com/users/shaypal5/repos", "events_url": "https://api.github.com/users/shaypal5/events{/privacy}", "received_events_url": "https://api.github.com/users/shaypal5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-22T15:53:30Z", "updated_at": "2017-02-22T19:17:19Z", "closed_at": "2017-02-22T19:17:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there, \ud83d\ude03 \r\n\r\nI just upgraded my python today from 3.5 to 3.6.\r\n\r\nI reinstalled my whole python installation in my 'conda' virtual environment from scratch, and as a result I have, at the moment, fresh installation of Python 3.6.0, iPython, ptpython, jedi and so forth.\r\n\r\nAnyway, as a result of the upgrade, the attribute windows that would pop up as I would write a dot after a variable holding a pandas.DataFrame or pandas.Series object no longer pops up. \r\n\r\nSpecifically for pandas.Series the following error prints:\r\n_\"is_time_series is deprecated. Please use Series.index.is_all_dates\"_\r\n\r\nThe source of this message can be found in line 284 of the following `pandas` source file:\r\n[https://github.com/pandas-dev/pandas/blob/master/pandas/core/series.py](https://github.com/pandas-dev/pandas/blob/master/pandas/core/series.py)\r\n\r\nThis does not happen for the same attribute-pop-up scenario in iPython or Jupyter Notebook; it works fine in both cases.\r\n\r\nIt happened with both `jedi 0.9` and `jedi 0.10`\r\n\r\nAttached below is a print-screen of the phenomenon:\r\n![image](https://cloud.githubusercontent.com/assets/917954/23218869/1a7bf27e-f926-11e6-956a-28da775cb1e2.png)\r\n\r\nCheers,\r\nShay", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/170", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/170/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/170/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/170", "id": 204919503, "node_id": "MDU6SXNzdWUyMDQ5MTk1MDM=", "number": 170, "title": "Problem with \"v\" key", "user": {"login": "ingvast", "id": 11376995, "node_id": "MDQ6VXNlcjExMzc2OTk1", "avatar_url": "https://avatars1.githubusercontent.com/u/11376995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ingvast", "html_url": "https://github.com/ingvast", "followers_url": "https://api.github.com/users/ingvast/followers", "following_url": "https://api.github.com/users/ingvast/following{/other_user}", "gists_url": "https://api.github.com/users/ingvast/gists{/gist_id}", "starred_url": "https://api.github.com/users/ingvast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ingvast/subscriptions", "organizations_url": "https://api.github.com/users/ingvast/orgs", "repos_url": "https://api.github.com/users/ingvast/repos", "events_url": "https://api.github.com/users/ingvast/events{/privacy}", "received_events_url": "https://api.github.com/users/ingvast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-02T16:13:11Z", "updated_at": "2017-02-02T21:34:50Z", "closed_at": "2017-02-02T21:34:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "My installation with ptpython has a problem with the \"v\" key.  Pressing it throws me directly to the nano editor.\r\nIt happens in vi Insert mode as well as in emacs mode.\r\nIs there something with keymappings gone wrong?\r\nAny hint is welcome.\r\n\r\nApart from this \"little\" problem I really like the repl interface. Great programming.\r\n/johan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/159", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/159/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/159/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/159", "id": 196995188, "node_id": "MDU6SXNzdWUxOTY5OTUxODg=", "number": 159, "title": "Allow Ctrl-d as exit confirmation", "user": {"login": "ulope", "id": 55078, "node_id": "MDQ6VXNlcjU1MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/55078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulope", "html_url": "https://github.com/ulope", "followers_url": "https://api.github.com/users/ulope/followers", "following_url": "https://api.github.com/users/ulope/following{/other_user}", "gists_url": "https://api.github.com/users/ulope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulope/subscriptions", "organizations_url": "https://api.github.com/users/ulope/orgs", "repos_url": "https://api.github.com/users/ulope/repos", "events_url": "https://api.github.com/users/ulope/events{/privacy}", "received_events_url": "https://api.github.com/users/ulope/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-21T17:56:32Z", "updated_at": "2016-12-21T18:33:40Z", "closed_at": "2016-12-21T18:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very nice if `Ctrl-d` could be used as an alternative confirmation for the \"Do you really want to exit\" dialog. IPython handles it the same way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/158", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/158/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/158/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/158", "id": 196255183, "node_id": "MDU6SXNzdWUxOTYyNTUxODM=", "number": 158, "title": "from ptpython.repl import embed throwing ImportError", "user": {"login": "lschumm", "id": 15222678, "node_id": "MDQ6VXNlcjE1MjIyNjc4", "avatar_url": "https://avatars0.githubusercontent.com/u/15222678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lschumm", "html_url": "https://github.com/lschumm", "followers_url": "https://api.github.com/users/lschumm/followers", "following_url": "https://api.github.com/users/lschumm/following{/other_user}", "gists_url": "https://api.github.com/users/lschumm/gists{/gist_id}", "starred_url": "https://api.github.com/users/lschumm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lschumm/subscriptions", "organizations_url": "https://api.github.com/users/lschumm/orgs", "repos_url": "https://api.github.com/users/lschumm/repos", "events_url": "https://api.github.com/users/lschumm/events{/privacy}", "received_events_url": "https://api.github.com/users/lschumm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-18T03:00:20Z", "updated_at": "2016-12-18T03:01:55Z", "closed_at": "2016-12-18T03:01:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "# The Issue\r\n\r\nI was trying out launching PtPython from within Python. I ran\r\n\r\n```\r\nfrom ptpython.repl import embed\r\n```\r\n\r\nAs the README instructs. However, the following error arose:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Library/Python/2.7/site-packages/ptpython/repl.py\", line 20, in <module>\r\n    from prompt_toolkit.styles import style_from_pygments\r\nImportError: cannot import name style_from_pigments\r\n```\r\n\r\n# Info\r\n- Python 2.7.10 (default, Jul 30 2016, 18:31:42) \r\n- [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.34)] on darwin\r\n- MacBook Air (4GB RAM, Core i5), Mid '16, OS X Sierra 10.11, Safari Version 10.0.1 (12602.2.14.0.7), Google Chrome 53.0.2785.89 (64-bit)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/156", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/156/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/156/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/156", "id": 194842527, "node_id": "MDU6SXNzdWUxOTQ4NDI1Mjc=", "number": 156, "title": "Interpreter/namespaces not functioning as expected", "user": {"login": "saluker", "id": 1184995, "node_id": "MDQ6VXNlcjExODQ5OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1184995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saluker", "html_url": "https://github.com/saluker", "followers_url": "https://api.github.com/users/saluker/followers", "following_url": "https://api.github.com/users/saluker/following{/other_user}", "gists_url": "https://api.github.com/users/saluker/gists{/gist_id}", "starred_url": "https://api.github.com/users/saluker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saluker/subscriptions", "organizations_url": "https://api.github.com/users/saluker/orgs", "repos_url": "https://api.github.com/users/saluker/repos", "events_url": "https://api.github.com/users/saluker/events{/privacy}", "received_events_url": "https://api.github.com/users/saluker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-12-11T17:01:01Z", "updated_at": "2016-12-13T00:51:40Z", "closed_at": "2016-12-11T21:56:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "My understanding from https://github.com/davidhalter/jedi-vim/issues/498 was that using the Interpreter with namespaces is highly more performant that pure static analysis and should return the same (if not better) results.  I'm getting slower performance and incorrect results using namespaces/Interpreter.  See below:\r\n\r\n```python\r\nimport jedi\r\ndef x():\r\n    return ''  \r\nscript = jedi.Interpreter('''\r\nx().startsw''', [locals()])\r\nprint 'w/ namespace:',', '.join([c.name for c in script.completions()])\r\n\r\nscript = jedi.Interpreter('''\r\ndef x():\r\n    return ''  \r\nx().startsw''', [])\r\nprint 'w/o namespace:',', '.join([c.name for c in script.completions()])\r\n```\r\n\r\nResults in:\r\n```\r\nw/ namespace: \r\nw/o namespace: startswith\r\n```\r\n\r\nI'm using it based on the docstring in the Interpreter class.  Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/154", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/154/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/154/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/154", "id": 193543571, "node_id": "MDU6SXNzdWUxOTM1NDM1NzE=", "number": 154, "title": "Crashes if an invalid \\x escape is entered ", "user": {"login": "xsleonard", "id": 1879136, "node_id": "MDQ6VXNlcjE4NzkxMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1879136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xsleonard", "html_url": "https://github.com/xsleonard", "followers_url": "https://api.github.com/users/xsleonard/followers", "following_url": "https://api.github.com/users/xsleonard/following{/other_user}", "gists_url": "https://api.github.com/users/xsleonard/gists{/gist_id}", "starred_url": "https://api.github.com/users/xsleonard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xsleonard/subscriptions", "organizations_url": "https://api.github.com/users/xsleonard/orgs", "repos_url": "https://api.github.com/users/xsleonard/repos", "events_url": "https://api.github.com/users/xsleonard/events{/privacy}", "received_events_url": "https://api.github.com/users/xsleonard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-05T16:24:14Z", "updated_at": "2016-12-06T21:16:08Z", "closed_at": "2016-12-06T21:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "If an invalid `\\x` escape char is entered into the repl, e.g. `'\\x'`, `'\\x9'`, `'\\xZZ'` (must be a valid hex code), crashes with the following error:\r\n\r\n```~\u00bb ptpython\r\n>>> '\\x9'                                                                                                \r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/ptpython\", line 11, in <module>\r\n    sys.exit(run())\r\n  File \"/usr/local/lib/python2.7/site-packages/ptpython/entry_points/run_ptpython.py\", line 71, in run\r\n    title='Python REPL (ptpython)')\r\n  File \"/usr/local/lib/python2.7/site-packages/ptpython/repl.py\", line 309, in embed\r\n    cli.run()\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/interface.py\", line 388, in run\r\n    self.eventloop.run(self.input, self.create_eventloop_callbacks())\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/eventloop/posix.py\", line 154, in run\r\n    t()\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/eventloop/posix.py\", line 82, in read_from_stdin\r\n    inputstream.feed(data)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/terminal/vt100_input.py\", line 376, in feed\r\n    self._input_parser.send(c)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/terminal/vt100_input.py\", line 295, in _input_parser_generator\r\n    self._call_handler(match, prefix)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/terminal/vt100_input.py\", line 328, in _call_handler\r\n    self.feed_key_callback(KeyPress(key, insert_text))\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/interface.py\", line 947, in feed_key\r\n    cli.input_processor.process_keys()\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/key_binding/input_processor.py\", line 201, in process_keys\r\n    self._process_coroutine.send(key_press)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/key_binding/input_processor.py\", line 158, in _process\r\n    self._call_handler(matches[-1], key_sequence=buffer)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/key_binding/input_processor.py\", line 228, in _call_handler\r\n    handler.call(event)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/key_binding/registry.py\", line 31, in call\r\n    return self.handler(event)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/key_binding/bindings/basic.py\", line 159, in _\r\n    buff.accept_action.validate_and_handle(event.cli, buff)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/buffer.py\", line 81, in validate_and_handle\r\n    if buffer.validate():\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/buffer.py\", line 976, in validate\r\n    self.validator.validate(self.document)\r\n  File \"/usr/local/lib/python2.7/site-packages/prompt_toolkit/validation.py\", line 64, in validate\r\n    self.validator.validate(document)\r\n  File \"/usr/local/lib/python2.7/site-packages/ptpython/validator.py\", line 35, in validate\r\n    compile(document.text, '<input>', 'exec', flags=flags, dont_inherit=True)\r\nValueError: invalid \\x escape\r\n```\r\n\r\nThere doesn't seem to be a way to get the version, e.g. `ptpython -V`, but I'm using whatever is in homebrew.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/152", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/152/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/152/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/152", "id": 191241857, "node_id": "MDU6SXNzdWUxOTEyNDE4NTc=", "number": 152, "title": "IndexError: list index out of range in apply_transformation", "user": {"login": "kiddick", "id": 9250239, "node_id": "MDQ6VXNlcjkyNTAyMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9250239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiddick", "html_url": "https://github.com/kiddick", "followers_url": "https://api.github.com/users/kiddick/followers", "following_url": "https://api.github.com/users/kiddick/following{/other_user}", "gists_url": "https://api.github.com/users/kiddick/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiddick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiddick/subscriptions", "organizations_url": "https://api.github.com/users/kiddick/orgs", "repos_url": "https://api.github.com/users/kiddick/repos", "events_url": "https://api.github.com/users/kiddick/events{/privacy}", "received_events_url": "https://api.github.com/users/kiddick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-23T11:04:23Z", "updated_at": "2016-11-29T22:12:52Z", "closed_at": "2016-11-29T22:12:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to reproduce:\r\n\r\n1. Copy-paste some text with newline(s) in some text editor. Often case with coping from terminal.\r\nex:\r\n```\r\nss\r\n\r\n```\r\n\r\n2. open ptpython\r\n3. open circle bracket\r\n`>>> (`\r\n4. Insert from clipboard\r\nAs you can see cursor've moved to beginning of line\r\n![image](https://cloud.githubusercontent.com/assets/9250239/20559432/cf343f9a-b18d-11e6-935e-e0c87137ffc7.png)\r\n5. close circle bracket\r\n6. fail\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/ptpython\", line 11, in <module>\r\n    sys.exit(run())\r\n  File \"/usr/local/lib/python2.7/dist-packages/ptpython/entry_points/run_ptpython.py\", line 71, in run\r\n    title='Python REPL (ptpython)')\r\n  File \"/usr/local/lib/python2.7/dist-packages/ptpython/repl.py\", line 315, in embed\r\n    cli.run()\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/interface.py\", line 389, in run\r\n    self.eventloop.run(self.input, self.create_eventloop_callbacks())\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/eventloop/posix.py\", line 153, in run\r\n    t()\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/interface.py\", line 326, in redraw\r\n    self._redraw()\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/interface.py\", line 346, in _redraw\r\n    self.renderer.render(self, self.layout, is_done=self.is_done)\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/renderer.py\", line 436, in render\r\n    extended_height=size.rows,\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/containers.py\", line 142, in write_to_screen\r\n    sizes = self._divide_heigths(cli, write_position)\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/containers.py\", line 177, in _divide_heigths\r\n    dimensions = [get_dimension_for_child(c, index) for index, c in enumerate(self.children)]\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/containers.py\", line 175, in get_dimension_for_child\r\n    return c.preferred_height(cli, write_position.width, write_position.extended_height)\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/containers.py\", line 259, in preferred_height\r\n    for s, c in zip(sizes, self.children)]\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/containers.py\", line 128, in preferred_height\r\n    dimensions = [c.preferred_height(cli, width, max_available_height) for c in self.children]\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/containers.py\", line 395, in preferred_height\r\n    return self.content.preferred_height(cli, width, max_available_height)\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/containers.py\", line 128, in preferred_height\r\n    dimensions = [c.preferred_height(cli, width, max_available_height) for c in self.children]\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/containers.py\", line 1000, in preferred_height\r\n    cli, width - total_margin_width, max_available_height, wrap_lines),\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/controls.py\", line 502, in preferred_height\r\n    content = self.create_content(cli, width, None)\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/controls.py\", line 641, in create_content\r\n    document.cursor_position_col),\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/controls.py\", line 623, in translate_rowcol\r\n    return Point(y=row, x=get_processed_line(row).source_to_display(col))\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/controls.py\", line 583, in get_processed_line\r\n    processed_line = transform(i, get_line(i))\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/controls.py\", line 559, in transform\r\n    cli, document, lineno, source_to_display, tokens)\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/processors.py\", line 554, in apply_transformation\r\n    cli, document, lineno, source_to_display, tokens)\r\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/layout/processors.py\", line 255, in apply_transformation\r\n    token, text = tokens[col]\r\nIndexError: list index out of range\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/148", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/148/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/148/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/148", "id": 187831119, "node_id": "MDU6SXNzdWUxODc4MzExMTk=", "number": 148, "title": "Cannot patch __main__.open", "user": {"login": "butla", "id": 1710591, "node_id": "MDQ6VXNlcjE3MTA1OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1710591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/butla", "html_url": "https://github.com/butla", "followers_url": "https://api.github.com/users/butla/followers", "following_url": "https://api.github.com/users/butla/following{/other_user}", "gists_url": "https://api.github.com/users/butla/gists{/gist_id}", "starred_url": "https://api.github.com/users/butla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/butla/subscriptions", "organizations_url": "https://api.github.com/users/butla/orgs", "repos_url": "https://api.github.com/users/butla/repos", "events_url": "https://api.github.com/users/butla/events{/privacy}", "received_events_url": "https://api.github.com/users/butla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-11-07T21:17:27Z", "updated_at": "2017-06-28T21:03:41Z", "closed_at": "2017-06-28T21:03:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a strange behavior that I've noticed while running some [sample from Python documentation](https://docs.python.org/3/library/unittest.mock.html#mock-open). Patching doesn't fail, but it doesn't really succeed, as a real file gets saved. Does ptpython do some magic with `__main__`?\r\n\r\nAnyway, below is the terminal session explaining the issue:\r\n```\r\nbutla@b2:~$ python3\r\nPython 3.5.2 (default, Sep 10 2016, 08:21:44)\r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from unittest.mock import patch, mock_open\r\n>>> m = mock_open()\r\n>>> with patch('__main__.open', m):\r\n...     with open('foo', 'w') as h:\r\n...         h.write('some stuff')\r\n...\r\n>>> m.mock_calls\r\n[call('foo', 'w'),\r\n call().__enter__(),\r\n call().write('some stuff'),\r\n call().__exit__(None, None, None)]\r\n>>>\r\nbutla@b2:~$ # works fine with the regular interpreter\r\nbutla@b2:~$ \r\nbutla@b2:~$ ptpython\r\n>>> import sys\r\n\r\n>>> sys.version\r\n'3.5.2 (default, Sep 10 2016, 08:21:44) \\n[GCC 5.4.0 20160609]'\r\n\r\n>>> from unittest.mock import patch, mock_open\r\n\r\n>>> m = mock_open()\r\n\r\n>>> with patch('__main__.open', m):\r\n  2     with open('foo', 'w') as h:\r\n  3         h.write('some stuff')\r\n\r\n>>> print(m.mock_calls)\r\n[]\r\n```\r\n\r\nVersion: 0.36\r\nOS: Kubuntu 16.04", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/147", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/147/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/147/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/147", "id": 186814295, "node_id": "MDU6SXNzdWUxODY4MTQyOTU=", "number": 147, "title": "input/getpass not working in ptpython", "user": {"login": "Red5d", "id": 1693880, "node_id": "MDQ6VXNlcjE2OTM4ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1693880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Red5d", "html_url": "https://github.com/Red5d", "followers_url": "https://api.github.com/users/Red5d/followers", "following_url": "https://api.github.com/users/Red5d/following{/other_user}", "gists_url": "https://api.github.com/users/Red5d/gists{/gist_id}", "starred_url": "https://api.github.com/users/Red5d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Red5d/subscriptions", "organizations_url": "https://api.github.com/users/Red5d/orgs", "repos_url": "https://api.github.com/users/Red5d/repos", "events_url": "https://api.github.com/users/Red5d/events{/privacy}", "received_events_url": "https://api.github.com/users/Red5d/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-02T14:23:01Z", "updated_at": "2016-11-07T21:46:32Z", "closed_at": "2016-11-07T21:46:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tested in python 2.6, 2.7, and 3.5.\r\n\r\nThe input(), raw_input(), and getpass.getpass() functions don't work properly in ptpython. When pressing \"enter\" after typing in text at the prompt from these functions, \"^M\" characters appear (when using input/raw_input) and the prompt doesn't return.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/146", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/146/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/146/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/146", "id": 186726504, "node_id": "MDU6SXNzdWUxODY3MjY1MDQ=", "number": 146, "title": "Wrong python version with python wheels", "user": {"login": "jnth", "id": 7796167, "node_id": "MDQ6VXNlcjc3OTYxNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7796167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnth", "html_url": "https://github.com/jnth", "followers_url": "https://api.github.com/users/jnth/followers", "following_url": "https://api.github.com/users/jnth/following{/other_user}", "gists_url": "https://api.github.com/users/jnth/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnth/subscriptions", "organizations_url": "https://api.github.com/users/jnth/orgs", "repos_url": "https://api.github.com/users/jnth/repos", "events_url": "https://api.github.com/users/jnth/events{/privacy}", "received_events_url": "https://api.github.com/users/jnth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-02T07:01:19Z", "updated_at": "2017-01-05T19:59:15Z", "closed_at": "2017-01-05T19:59:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi all,\r\n\r\nAfter installing `ptpython` with `pip install ptpython`, I found wrong python version in executable names:\r\n\r\nHere's an example with a Python 3.4 virtual environment:\r\n```\r\n-rwxrwxr-x 1 jv jv  243 nov.   2 07:29 easy_install\r\n-rwxrwxr-x 1 jv jv  243 nov.   2 07:29 easy_install-3.4\r\n-rwxrwxr-x 1 jv jv  215 nov.   2 07:29 pip\r\n-rwxrwxr-x 1 jv jv  215 nov.   2 07:29 pip3\r\n-rwxrwxr-x 1 jv jv  215 nov.   2 07:29 pip3.4\r\n-rwxrwxr-x 1 jv jv  245 nov.   2 07:29 ptipython\r\n-rwxrwxr-x 1 jv jv  245 nov.   2 07:29 ptipython3\r\n-rwxrwxr-x 1 jv jv  245 nov.   2 07:29 ptipython3.5\r\n-rwxrwxr-x 1 jv jv  244 nov.   2 07:29 ptpython\r\n-rwxrwxr-x 1 jv jv  244 nov.   2 07:29 ptpython3\r\n-rwxrwxr-x 1 jv jv  244 nov.   2 07:29 ptpython3.5\r\nlrwxrwxrwx 1 jv jv    7 nov.   2 07:29 python -> python3\r\n-rwxrwxr-x 1 jv jv 3,6M nov.   2 07:29 python3\r\nlrwxrwxrwx 1 jv jv    7 nov.   2 07:29 python3.4 -> python3\r\n-rwxrwxr-x 1 jv jv 2,3K nov.   2 07:29 python-config\r\n-rwxrwxr-x 1 jv jv  222 nov.   2 07:29 wheel\r\n```\r\n\r\nAfter digging why this issue occur, I found that the wheel version in PyPi (`ptpython-0.36-py3-none-any.whl`) contains this entry point:\r\n\r\n```\r\n[console_scripts]\r\nptipython = ptpython.entry_points.run_ptipython:run\r\nptipython3 = ptpython.entry_points.run_ptipython:run\r\nptipython3.5 = ptpython.entry_points.run_ptipython:run\r\nptpython = ptpython.entry_points.run_ptpython:run\r\nptpython3 = ptpython.entry_points.run_ptpython:run\r\nptpython3.5 = ptpython.entry_points.run_ptpython:run\r\n```\r\n\r\nI can suggest you:\r\n  - to be less specific (remove the minor version in executable names: `ptipython3.5` and `ptpython3.5`)\r\n  - or to build specific wheels with:\r\n    - `python3.4 setup.py bdist_wheel --python-tag py34`\r\n    - `python3.5 setup.py bdist_wheel --python-tag py35`\r\n    - `python3.6 setup.py bdist_wheel --python-tag py36`.\r\n    - ...\r\n\r\nI can help to open a PR in the first case or upload wheel to PyPi.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/144", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/144/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/144/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/144", "id": 186237016, "node_id": "MDU6SXNzdWUxODYyMzcwMTY=", "number": 144, "title": "slime type of plugins doesn't work with ptpython", "user": {"login": "kecmen", "id": 15016892, "node_id": "MDQ6VXNlcjE1MDE2ODky", "avatar_url": "https://avatars2.githubusercontent.com/u/15016892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kecmen", "html_url": "https://github.com/kecmen", "followers_url": "https://api.github.com/users/kecmen/followers", "following_url": "https://api.github.com/users/kecmen/following{/other_user}", "gists_url": "https://api.github.com/users/kecmen/gists{/gist_id}", "starred_url": "https://api.github.com/users/kecmen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kecmen/subscriptions", "organizations_url": "https://api.github.com/users/kecmen/orgs", "repos_url": "https://api.github.com/users/kecmen/repos", "events_url": "https://api.github.com/users/kecmen/events{/privacy}", "received_events_url": "https://api.github.com/users/kecmen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-31T09:19:14Z", "updated_at": "2017-08-13T18:25:32Z", "closed_at": "2016-11-01T16:01:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using tmux and vim together with python console. There are couple of plugins to vim that allows it to integrate with tmux:\r\nhttps://github.com/jgdavey/tslime.vim\r\nhttps://github.com/jpalardy/vim-slime\r\nhttps://github.com/epeli/slimux\r\n\r\nBasically what these plugin does is they allow to send selected text to other tmux window. This works fine when I have python source opened and I send the text (for example class definition code) to window in which python interpreter is running. But sending the same code to ptpyhon messes the indentation. The reason is that ptpython has (rather nice and useful) feature of 'autoindenting'. This is great for interactive work, but it's problematic in cases like this. Even stripping lines before sending them from vim doesn't work - in this case the indentation is removed so ptpython threats every new method definition as being defined within the previous one.\r\n\r\nExamples:\r\nThe code itself:\r\n```\r\nclass A:\r\n    def a(self):\r\n        print('a')\r\n    def b(self):\r\n        print('b')\r\n    def c(self):\r\n        print('c')\r\n```\r\n\r\nwithout stripping the starting whitespaces:\r\n```\r\n>>> class A:\r\n  2         def a(self):\r\n  3                     print('a')\r\n  4                         def b(self):\r\n  5                                     print('b')\r\n  6                                         def c(self):\r\n  7                                                     print('c')\r\n  8\r\n \r\n```\r\nwith starting whitespaces removed - ptpython treats each new function as being part of the previous one:\r\n```\r\n>>> class A:\r\n  2     def a(self):\r\n  3         print('a')\r\n  4         def b(self):\r\n  5             print('b')\r\n  6             def c(self):\r\n  7                 print('c')\r\n```\r\n\r\nThis can be handled by setting\r\n`repl.paste_mode = True` in ~/.ptpython/config.py but then the interactive shell lost the ability to indent. Is there any possible way to treat this (like IPython?)\r\n\r\nThanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/143", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/143/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/143/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/143", "id": 186235158, "node_id": "MDU6SXNzdWUxODYyMzUxNTg=", "number": 143, "title": "interactive reading needs EOF to be inserted (2 times)", "user": {"login": "kecmen", "id": 15016892, "node_id": "MDQ6VXNlcjE1MDE2ODky", "avatar_url": "https://avatars2.githubusercontent.com/u/15016892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kecmen", "html_url": "https://github.com/kecmen", "followers_url": "https://api.github.com/users/kecmen/followers", "following_url": "https://api.github.com/users/kecmen/following{/other_user}", "gists_url": "https://api.github.com/users/kecmen/gists{/gist_id}", "starred_url": "https://api.github.com/users/kecmen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kecmen/subscriptions", "organizations_url": "https://api.github.com/users/kecmen/orgs", "repos_url": "https://api.github.com/users/kecmen/repos", "events_url": "https://api.github.com/users/kecmen/events{/privacy}", "received_events_url": "https://api.github.com/users/kecmen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-31T09:07:48Z", "updated_at": "2016-11-02T22:32:24Z", "closed_at": "2016-11-02T22:32:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst, I really like this ptpython, thanks for this tool :)\r\n\r\nHere's my issue:\r\nWhen I try to read from stdin from within ptpython console, I need to press Ctrl-D two times to signal EOF.\r\nWhen running the same command from standard python console, simple Enter does the job.\r\nFor example:\r\n```\r\n>>> import sys, getpass\r\n>>> sys.stdin.readline()\r\nI need to press C-D 2x to make ptpython to accept this line'I need to press C-D 2x to make ptpython to accept this line'\r\n>>> getpass.getpass('the same issue here')\r\nthe same issue here\r\n' I needed to press C-D 2x'\r\n>>>\r\n```\r\n\r\nStandard python3 console:\r\n```\r\nPython 3.4.3 (default, May  5 2015, 17:58:45)\r\n[GCC 4.9.2] on cygwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sys, getpass\r\n>>> sys.stdin.readline()\r\nIt ends just by pressing enter\r\n'It ends just by pressing enter\\n'\r\n>>> getpass.getpass('I need to press enter to finish inserting')\r\nI need to press enter to finish inserting\r\n'Just pressed enter'\r\n>>>\r\n```\r\n\r\nI think the behaviour here should be consistent with the standard interpreter.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/141", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/141/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/141/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/141", "id": 184458307, "node_id": "MDU6SXNzdWUxODQ0NTgzMDc=", "number": 141, "title": "previous .ptpython symlink breaks initial startup", "user": {"login": "robphoenix", "id": 9257284, "node_id": "MDQ6VXNlcjkyNTcyODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9257284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robphoenix", "html_url": "https://github.com/robphoenix", "followers_url": "https://api.github.com/users/robphoenix/followers", "following_url": "https://api.github.com/users/robphoenix/following{/other_user}", "gists_url": "https://api.github.com/users/robphoenix/gists{/gist_id}", "starred_url": "https://api.github.com/users/robphoenix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robphoenix/subscriptions", "organizations_url": "https://api.github.com/users/robphoenix/orgs", "repos_url": "https://api.github.com/users/robphoenix/repos", "events_url": "https://api.github.com/users/robphoenix/events{/privacy}", "received_events_url": "https://api.github.com/users/robphoenix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-21T10:59:38Z", "updated_at": "2017-01-05T19:51:26Z", "closed_at": "2017-01-05T19:51:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On my Windows 7 machine I have a symlink to a previous ptpython configuration.\n\n`~/.ptpython` points to `~/dotfiles/.ptpython`\n\nI uninstalled ptpython via pip and then reinstalled it. On first startup I got this error:\n\n```\n> ptpython\nTraceback (most recent call last):\n  File \"c:\\users\\robertph\\appdata\\local\\programs\\python\\python35-32\\lib\\runpy.py\", line 184, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"c:\\users\\robertph\\appdata\\local\\programs\\python\\python35-32\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Users\\robertph\\AppData\\Local\\Programs\\Python\\Python35-32\\Scripts\\ptpython.exe\\__main__.py\", line 9, in <module>\n  File \"c:\\users\\robertph\\appdata\\local\\programs\\python\\python35-32\\lib\\site-packages\\ptpython\\entry_points\\run_ptpython.py\", line 36, in run\n    os.mkdir(config_dir)\nFileExistsError: [WinError 183] Cannot create a file when that file already exists: 'C:\\\\Users\\\\robertph/.ptpython/'\n```\n\nWhen I deleted the symlink, ptpython loaded up fine.\n\nThis appears to be Windows specific, when I recreate this on my Linux machine the existing symlink is respected and doesn't cause any problems.\n\nI'd be interested in opening a PR to fix this, [here](https://github.com/jonathanslenders/ptpython/blob/master/ptpython/entry_points/run_ptpython.py#L32-L36), I just wanted to check my assumptions were ok with you before I opened the PR. \nI was thinking of changing:\n\n```\nconfig_dir = os.path.expanduser(a['--config-dir'] or '~/.ptpython/')\n\nif not os.path.isdir(config_dir):\n        os.mkdir(config_dir)\n```\n\nto\n\n```\nconfig_dir = os.path.expanduser(a['--config-dir'] or os.path.join('~', '.ptpython'))\n\nif not os.path.isdir(config_dir) or not os.path.islink(config_dir):\n        os.mkdir(config_dir)\n```\n\nLet me know what you think.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/140", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/140/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/140/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/140", "id": 177763064, "node_id": "MDU6SXNzdWUxNzc3NjMwNjQ=", "number": 140, "title": "Question: What limitation stops ptpython being an editor", "user": {"login": "MortalCatalyst", "id": 432261, "node_id": "MDQ6VXNlcjQzMjI2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/432261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MortalCatalyst", "html_url": "https://github.com/MortalCatalyst", "followers_url": "https://api.github.com/users/MortalCatalyst/followers", "following_url": "https://api.github.com/users/MortalCatalyst/following{/other_user}", "gists_url": "https://api.github.com/users/MortalCatalyst/gists{/gist_id}", "starred_url": "https://api.github.com/users/MortalCatalyst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MortalCatalyst/subscriptions", "organizations_url": "https://api.github.com/users/MortalCatalyst/orgs", "repos_url": "https://api.github.com/users/MortalCatalyst/repos", "events_url": "https://api.github.com/users/MortalCatalyst/events{/privacy}", "received_events_url": "https://api.github.com/users/MortalCatalyst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385214, "node_id": "MDU6TGFiZWwxMzMzODUyMTQ=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-19T11:41:28Z", "updated_at": "2018-09-30T19:13:30Z", "closed_at": "2018-09-30T19:13:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\n\nReally like using Ptpython it works at just the right feature level making me quite productive. What limitation is there to a flag allowing ptpython to edit in file mode not REPL?\n\nHaving tried to get nice Emacs and Vim configs and never quite succeeding, Ptpython just nails it perfectly and seems perfect that I could switch between REPL and file edit. Not putting this on the project alone just sussing out its viability. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/136", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/136/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/136/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/136", "id": 170277646, "node_id": "MDU6SXNzdWUxNzAyNzc2NDY=", "number": 136, "title": "AttributeError: 'Lambda' object has no attribute 'get_subscope_by_name' when signature is shown", "user": {"login": "ShadowKyogre", "id": 673620, "node_id": "MDQ6VXNlcjY3MzYyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/673620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShadowKyogre", "html_url": "https://github.com/ShadowKyogre", "followers_url": "https://api.github.com/users/ShadowKyogre/followers", "following_url": "https://api.github.com/users/ShadowKyogre/following{/other_user}", "gists_url": "https://api.github.com/users/ShadowKyogre/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShadowKyogre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShadowKyogre/subscriptions", "organizations_url": "https://api.github.com/users/ShadowKyogre/orgs", "repos_url": "https://api.github.com/users/ShadowKyogre/repos", "events_url": "https://api.github.com/users/ShadowKyogre/events{/privacy}", "received_events_url": "https://api.github.com/users/ShadowKyogre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-09T21:39:29Z", "updated_at": "2016-10-16T19:50:24Z", "closed_at": "2016-10-16T19:50:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Details\n\nptpython version: 0.35\ntested with module: lxml\n# Steps to reproduce\n- Launch ptpython with a clean configuration\n- Turn on showing signatures\n- Type the following into the shell:\n\n``` python\nfrom lxml.html import builder as E\nE.HTML(\n       # ignore this line, as the comment here is just meant to indicate where to tab\n```\n# Expected result\n\nNo crash.\n# Actual Result\n\n```\n>>> from lxml.html import builder as E\n\n>>> E.HTML(                                                                                                       \nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/cache.py\", line 32, in get\n    return self._data[key]\nKeyError: 51\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/bin/ptpython\", line 9, in <module>\n    load_entry_point('ptpython==0.35', 'console_scripts', 'ptpython')()\n  File \"/usr/lib/python3.5/site-packages/ptpython/entry_points/run_ptpython.py\", line 71, in run\n    title='Python REPL (ptpython)')\n  File \"/usr/lib/python3.5/site-packages/ptpython/repl.py\", line 315, in embed\n    cli.run()\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/interface.py\", line 389, in run\n    self.eventloop.run(self.input, self.create_eventloop_callbacks())\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/eventloop/posix.py\", line 154, in run\n    t()\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/interface.py\", line 326, in redraw\n    self._redraw()\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/interface.py\", line 346, in _redraw\n    self.renderer.render(self, self.layout, is_done=self.is_done)\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/renderer.py\", line 429, in render\n    extended_height=size.rows,\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/containers.py\", line 157, in write_to_screen\n    c.write_to_screen(cli, screen, mouse_handlers, WritePosition(xpos, ypos, width, s))\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/containers.py\", line 348, in write_to_screen\n    c.write_to_screen(cli, screen, mouse_handlers, WritePosition(xpos, ypos, s, height))\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/containers.py\", line 157, in write_to_screen\n    c.write_to_screen(cli, screen, mouse_handlers, WritePosition(xpos, ypos, width, s))\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/containers.py\", line 428, in write_to_screen\n    width = fl.content.preferred_width(cli, write_position.width).preferred\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/containers.py\", line 1644, in preferred_width\n    return self.content.preferred_width(cli, max_available_width)\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/containers.py\", line 980, in preferred_width\n    cli, max_available_width - total_margin_width)\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/controls.py\", line 249, in preferred_width\n    text = token_list_to_text(self._get_tokens_cached(cli))\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/controls.py\", line 239, in _get_tokens_cached\n    cli.render_counter, lambda: self.get_tokens(cli))\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/cache.py\", line 35, in get\n    value = getter_func()\n  File \"/usr/lib/python3.5/site-packages/prompt_toolkit/layout/controls.py\", line 239, in <lambda>\n    cli.render_counter, lambda: self.get_tokens(cli))\n  File \"/usr/lib/python3.5/site-packages/ptpython/layout.py\", line 211, in get_tokens\n    for i, p in enumerate(sig.params):\n  File \"/usr/lib/python3.5/site-packages/jedi/evaluate/cache.py\", line 41, in wrapper\n    rv = function(obj, *args, **kwargs)\n  File \"/usr/lib/python3.5/site-packages/jedi/api/classes.py\", line 348, in params\n    sub = followed.get_subscope_by_name('__init__')\n  File \"/usr/lib/python3.5/site-packages/jedi/evaluate/representation.py\", line 563, in __getattr__\n    return getattr(self.base_func, name)\nAttributeError: 'Lambda' object has no attribute 'get_subscope_by_name'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/135", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/135/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/135/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/135", "id": 169640949, "node_id": "MDU6SXNzdWUxNjk2NDA5NDk=", "number": 135, "title": "ptipython automatically makes logging go to the terminal?", "user": {"login": "seemethere", "id": 1700823, "node_id": "MDQ6VXNlcjE3MDA4MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1700823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seemethere", "html_url": "https://github.com/seemethere", "followers_url": "https://api.github.com/users/seemethere/followers", "following_url": "https://api.github.com/users/seemethere/following{/other_user}", "gists_url": "https://api.github.com/users/seemethere/gists{/gist_id}", "starred_url": "https://api.github.com/users/seemethere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seemethere/subscriptions", "organizations_url": "https://api.github.com/users/seemethere/orgs", "repos_url": "https://api.github.com/users/seemethere/repos", "events_url": "https://api.github.com/users/seemethere/events{/privacy}", "received_events_url": "https://api.github.com/users/seemethere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-05T16:05:21Z", "updated_at": "2016-08-23T03:06:37Z", "closed_at": "2016-08-23T03:06:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using ptipython earlier today I noticed that all the logging messages were going to the terminal even when I did not set up a handler to go to the terminal. Is anyone else experiencing this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/134", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/134/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/134/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/134", "id": 169194813, "node_id": "MDU6SXNzdWUxNjkxOTQ4MTM=", "number": 134, "title": "pypy", "user": {"login": "Duality4Y", "id": 1276401, "node_id": "MDQ6VXNlcjEyNzY0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1276401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Duality4Y", "html_url": "https://github.com/Duality4Y", "followers_url": "https://api.github.com/users/Duality4Y/followers", "following_url": "https://api.github.com/users/Duality4Y/following{/other_user}", "gists_url": "https://api.github.com/users/Duality4Y/gists{/gist_id}", "starred_url": "https://api.github.com/users/Duality4Y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Duality4Y/subscriptions", "organizations_url": "https://api.github.com/users/Duality4Y/orgs", "repos_url": "https://api.github.com/users/Duality4Y/repos", "events_url": "https://api.github.com/users/Duality4Y/events{/privacy}", "received_events_url": "https://api.github.com/users/Duality4Y/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385214, "node_id": "MDU6TGFiZWwxMzMzODUyMTQ=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-03T18:02:20Z", "updated_at": "2016-08-23T23:33:05Z", "closed_at": "2016-08-23T23:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "would it be possible to use ptpython with pypy ?\ncause that would be awesome ! :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/133", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/133/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/133/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/133", "id": 167677276, "node_id": "MDU6SXNzdWUxNjc2NzcyNzY=", "number": 133, "title": "importError by Tensorflow", "user": {"login": "romanegloo", "id": 1327993, "node_id": "MDQ6VXNlcjEzMjc5OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1327993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romanegloo", "html_url": "https://github.com/romanegloo", "followers_url": "https://api.github.com/users/romanegloo/followers", "following_url": "https://api.github.com/users/romanegloo/following{/other_user}", "gists_url": "https://api.github.com/users/romanegloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/romanegloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romanegloo/subscriptions", "organizations_url": "https://api.github.com/users/romanegloo/orgs", "repos_url": "https://api.github.com/users/romanegloo/repos", "events_url": "https://api.github.com/users/romanegloo/events{/privacy}", "received_events_url": "https://api.github.com/users/romanegloo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-26T18:26:09Z", "updated_at": "2016-08-03T19:25:05Z", "closed_at": "2016-08-03T19:25:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if this is a bug, or I didn't configured ptpython correctly.\n\nWhen I try to import tensorflow, it complains like below:\n\n`\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/jiho/pyenv/tf/lib/python2.7/site-packages/tensorflow/**init**.py\", line 23, in <module>\n    from tensorflow.python import *\n  File \"/home/jiho/pyenv/tf/lib/python2.7/site-packages/tensorflow/python/**init**.py\", line 58, in <module>\n    raise ImportError(msg)\nImportError: Traceback (most recent call last):\n  File \"/home/jiho/pyenv/tf/lib/python2.7/site-packages/tensorflow/python/**init**.py\", line 52, in <module>\n    from tensorflow.core.framework.graph_pb2 import *\n  File \"/home/jiho/pyenv/tf/lib/python2.7/site-packages/tensorflow/core/framework/graph_pb2.py\", line 6, in <module>\n    from google.protobuf import descriptor as _descriptor\nImportError: No module named google.protobuf\n\nError importing tensorflow.  Unless you are using bazel,\nyou should not try to import tensorflow from its source directory;\nplease exit the tensorflow source tree, and relaunch your python interpreter\nfrom there.\nTraceback (most recent call last):\n  File \"/home/jiho/pyenv/tf/lib/python2.7/site-packages/tensorflow/python/**init**.py\", line 52, in <module>\n    from tensorflow.core.framework.graph_pb2 import *\n  File \"/home/jiho/pyenv/tf/lib/python2.7/site-packages/tensorflow/core/framework/graph_pb2.py\", line 6, in <module>\n    from google.protobuf import descriptor as _descriptor\nImportError: No module named google.protobuf\n\nError importing tensorflow.  Unless you are using bazel,\nyou should not try to import tensorflow from its source directory;\nplease exit the tensorflow source tree, and relaunch your python interpreter\nfrom there.\n`\n\nStandard python interpreter works fine on importing tensorflow. Let me know if you need more information other than the error message above. Thanks for your supports.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/132", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/132/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/132/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/132", "id": 167570993, "node_id": "MDU6SXNzdWUxNjc1NzA5OTM=", "number": 132, "title": "Please use XDG paths for config.py and history by default", "user": {"login": "z0rc", "id": 787519, "node_id": "MDQ6VXNlcjc4NzUxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/787519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0rc", "html_url": "https://github.com/z0rc", "followers_url": "https://api.github.com/users/z0rc/followers", "following_url": "https://api.github.com/users/z0rc/following{/other_user}", "gists_url": "https://api.github.com/users/z0rc/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0rc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0rc/subscriptions", "organizations_url": "https://api.github.com/users/z0rc/orgs", "repos_url": "https://api.github.com/users/z0rc/repos", "events_url": "https://api.github.com/users/z0rc/events{/privacy}", "received_events_url": "https://api.github.com/users/z0rc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-26T10:10:55Z", "updated_at": "2020-03-02T14:11:11Z", "closed_at": "2019-11-26T16:29:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "[XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) has been around for several years already. Please use recommended folders for storing `config.py` and `history` files.\n\n`config.py` should be stored in `$XDG_CONFIG_HOME/ptpython/config.py` with fallback to `$HOME/.config/ptpython/config.py` if `$XDG_COFIG_HOME` is not set. You may fall back to `$HOME/.ptpython/config.py` is it wasn't found at XDG path and this file is present.\n\n`history` should be stored in `$XDG_DATA_HOME/ptpython/history` with fallback to `$HOME/.local/share/ptpython/config.py` if `$XDG_DATA_HOME` is not set. Again you may fall back to `$HOME/.ptpython/history` if it wasn't found at XDG path and this file is present.\n\nIdeally application should warn user that he is using legacy configuration path or just migrate automatically existing `config.py` and `history` to new locations.\n\nGrand plan behind all of this is to eliminate dotfiles clutter from user's home folder.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/131", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/131/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/131/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/131", "id": 166231429, "node_id": "MDU6SXNzdWUxNjYyMzE0Mjk=", "number": 131, "title": "ptipython crashes on startup: AttributeError: 'InteractiveShellEmbed' object has no attribute 'prompt_manager'", "user": {"login": "lillian27", "id": 2107631, "node_id": "MDQ6VXNlcjIxMDc2MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2107631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lillian27", "html_url": "https://github.com/lillian27", "followers_url": "https://api.github.com/users/lillian27/followers", "following_url": "https://api.github.com/users/lillian27/following{/other_user}", "gists_url": "https://api.github.com/users/lillian27/gists{/gist_id}", "starred_url": "https://api.github.com/users/lillian27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lillian27/subscriptions", "organizations_url": "https://api.github.com/users/lillian27/orgs", "repos_url": "https://api.github.com/users/lillian27/repos", "events_url": "https://api.github.com/users/lillian27/events{/privacy}", "received_events_url": "https://api.github.com/users/lillian27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-19T01:53:59Z", "updated_at": "2016-07-21T21:08:20Z", "closed_at": "2016-07-21T21:08:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "New 2.7.10 virtualenv on OS X.  Installed ipython and ptpython with pip.  pip freeze says:\n\nPygments==2.1.3\nappnope==0.1.0\nbackports.shutil-get-terminal-size==1.0.0\ndecorator==4.0.10\ndocopt==0.6.2\nipython==5.0.0\nipython-genutils==0.1.0\njedi==0.9.0\npathlib2==2.1.0\npexpect==4.2.0\npickleshare==0.7.3\nprompt-toolkit==1.0.3\nptpython==0.34\nptyprocess==0.5.1\nsimplegeneric==0.8.1\nsix==1.10.0\ntraitlets==4.2.2\nwcwidth==0.1.7\nwsgiref==0.1.2\n\nOn startup (last frame of trace, ipython.pyc):\n\n```\n168         self.ipython_shell = ipython_shell\n169\n```\n\n--> 170         self.all_prompt_styles['ipython'] = IPythonPrompt(ipython_shell.prompt_manager)\n    171         self.prompt_style = 'ipython'\n    172\n\nAttributeError: 'InteractiveShellEmbed' object has no attribute 'prompt_manager'\n\nipython and ptpython seem to work as expected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/128", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/128/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/128/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/128", "id": 164501196, "node_id": "MDU6SXNzdWUxNjQ1MDExOTY=", "number": 128, "title": "ptipython is not working with ipython 5.0.0", "user": {"login": "ivikash", "id": 371007, "node_id": "MDQ6VXNlcjM3MTAwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/371007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivikash", "html_url": "https://github.com/ivikash", "followers_url": "https://api.github.com/users/ivikash/followers", "following_url": "https://api.github.com/users/ivikash/following{/other_user}", "gists_url": "https://api.github.com/users/ivikash/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivikash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivikash/subscriptions", "organizations_url": "https://api.github.com/users/ivikash/orgs", "repos_url": "https://api.github.com/users/ivikash/repos", "events_url": "https://api.github.com/users/ivikash/events{/privacy}", "received_events_url": "https://api.github.com/users/ivikash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-07-08T10:18:18Z", "updated_at": "2016-07-10T09:44:29Z", "closed_at": "2016-07-08T10:24:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you please help me with this. ptipython is not working with ipython 5.0.0\n\n```\n(py2_kernel)~/py2_kernel \u276f\u276f\u276f ptipython\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n/Users/Vikash/py2_kernel/bin/ptipython in <module>()\n      9 if __name__ == '__main__':\n     10     sys.argv[0] = re.sub(r'(-script\\.pyw|\\.exe)?$', '', sys.argv[0])\n---> 11     sys.exit(run())\n\n/Users/Vikash/py2_kernel/lib/python2.7/site-packages/ptpython/entry_points/run_ptipython.pyc in run()\n     89               configure=configure,\n     90               user_ns=user_ns,\n---> 91               title='IPython REPL (ptipython)')\n     92 \n     93 \n\n/Users/Vikash/py2_kernel/lib/python2.7/site-packages/ptpython/ipython.pyc in embed(**kwargs)\n    252         config.InteractiveShellEmbed = config.TerminalInteractiveShell\n    253         kwargs['config'] = config\n--> 254     shell = InteractiveShellEmbed.instance(**kwargs)\n    255     initialize_extensions(shell, config['InteractiveShellApp']['extensions'])\n    256     shell(header=header, stack_depth=2, compile_flags=compile_flags)\n\n/Users/Vikash/py2_kernel/lib/python2.7/site-packages/traitlets/config/configurable.pyc in instance(cls, *args, **kwargs)\n    410         # Create and save the instance\n    411         if cls._instance is None:\n--> 412             inst = cls(*args, **kwargs)\n    413             # Now make sure that the instance will also be returned by\n    414             # parent classes' _instance attribute.\n\n/Users/Vikash/py2_kernel/lib/python2.7/site-packages/ptpython/ipython.pyc in __init__(self, *a, **kw)\n    194             self,\n    195             get_globals=get_globals, vi_mode=vi_mode,\n--> 196             history_filename=history_filename)\n    197 \n    198         if title:\n\n/Users/Vikash/py2_kernel/lib/python2.7/site-packages/ptpython/ipython.pyc in __init__(self, ipython_shell, *a, **kw)\n    168         self.ipython_shell = ipython_shell\n    169 \n--> 170         self.all_prompt_styles['ipython'] = IPythonPrompt(ipython_shell.prompt_manager)\n    171         self.prompt_style = 'ipython'\n    172 \n\nAttributeError: 'InteractiveShellEmbed' object has no attribute 'prompt_manager'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/127", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/127/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/127/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/127", "id": 163670020, "node_id": "MDU6SXNzdWUxNjM2NzAwMjA=", "number": 127, "title": "ptipython does not clear line after execution", "user": {"login": "c4traz", "id": 822081, "node_id": "MDQ6VXNlcjgyMjA4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/822081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c4traz", "html_url": "https://github.com/c4traz", "followers_url": "https://api.github.com/users/c4traz/followers", "following_url": "https://api.github.com/users/c4traz/following{/other_user}", "gists_url": "https://api.github.com/users/c4traz/gists{/gist_id}", "starred_url": "https://api.github.com/users/c4traz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c4traz/subscriptions", "organizations_url": "https://api.github.com/users/c4traz/orgs", "repos_url": "https://api.github.com/users/c4traz/repos", "events_url": "https://api.github.com/users/c4traz/events{/privacy}", "received_events_url": "https://api.github.com/users/c4traz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-04T12:47:45Z", "updated_at": "2016-07-21T21:51:46Z", "closed_at": "2016-07-21T21:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using pt**i**python 0.33 in a ssh session on a Ubuntu 14.04.3 LTS server and experience weird behavior.\nAfter executing a line, I have to manually remove what I entered as the command remains in the new line:\n\n```\n$ ptipython\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 4.1.2 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: 1+1\nOut[1]: 2\n\nIn [2]: 1+1  <-- anything entered in previous line still appears as if newly entered on following line\n```\n\nptpython is not doing it, also ipython is not doing it.\n\nMy config file: [config.py.txt](https://github.com/jonathanslenders/ptpython/files/346292/config.py.txt)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/122", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/122/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/122/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/122", "id": 158293632, "node_id": "MDU6SXNzdWUxNTgyOTM2MzI=", "number": 122, "title": "Installing both python2 and python3 versions", "user": {"login": "dnivra", "id": 281957, "node_id": "MDQ6VXNlcjI4MTk1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/281957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnivra", "html_url": "https://github.com/dnivra", "followers_url": "https://api.github.com/users/dnivra/followers", "following_url": "https://api.github.com/users/dnivra/following{/other_user}", "gists_url": "https://api.github.com/users/dnivra/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnivra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnivra/subscriptions", "organizations_url": "https://api.github.com/users/dnivra/orgs", "repos_url": "https://api.github.com/users/dnivra/repos", "events_url": "https://api.github.com/users/dnivra/events{/privacy}", "received_events_url": "https://api.github.com/users/dnivra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-03T05:27:23Z", "updated_at": "2016-08-06T07:58:29Z", "closed_at": "2016-08-06T07:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to have separate installations of pyt[i]python for Python 2 and Python 3 like how IPython does it(ipython2 vs ipython3) while also having a default ipython(which will be the last installed version)? Right now, pt[i]python defaults to the latest installed version(I'm using pip).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/121", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/121/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/121/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/121", "id": 158092905, "node_id": "MDU6SXNzdWUxNTgwOTI5MDU=", "number": 121, "title": "terminal scrolling", "user": {"login": "twice", "id": 406968, "node_id": "MDQ6VXNlcjQwNjk2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/406968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twice", "html_url": "https://github.com/twice", "followers_url": "https://api.github.com/users/twice/followers", "following_url": "https://api.github.com/users/twice/following{/other_user}", "gists_url": "https://api.github.com/users/twice/gists{/gist_id}", "starred_url": "https://api.github.com/users/twice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twice/subscriptions", "organizations_url": "https://api.github.com/users/twice/orgs", "repos_url": "https://api.github.com/users/twice/repos", "events_url": "https://api.github.com/users/twice/events{/privacy}", "received_events_url": "https://api.github.com/users/twice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-02T09:08:37Z", "updated_at": "2020-03-27T04:33:04Z", "closed_at": "2016-06-16T07:07:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using iterm2, the problem I have is that terminal scrolling does not seem to work. This is problematic for long outputs. I can't seem to find my way out using vi navigation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/119", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/119/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/119/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/119", "id": 156438478, "node_id": "MDU6SXNzdWUxNTY0Mzg0Nzg=", "number": 119, "title": "ptpython hangs pasting large string", "user": {"login": "dakra", "id": 574659, "node_id": "MDQ6VXNlcjU3NDY1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/574659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dakra", "html_url": "https://github.com/dakra", "followers_url": "https://api.github.com/users/dakra/followers", "following_url": "https://api.github.com/users/dakra/following{/other_user}", "gists_url": "https://api.github.com/users/dakra/gists{/gist_id}", "starred_url": "https://api.github.com/users/dakra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dakra/subscriptions", "organizations_url": "https://api.github.com/users/dakra/orgs", "repos_url": "https://api.github.com/users/dakra/repos", "events_url": "https://api.github.com/users/dakra/events{/privacy}", "received_events_url": "https://api.github.com/users/dakra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-24T07:33:49Z", "updated_at": "2016-09-14T06:06:57Z", "closed_at": "2016-09-14T06:06:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Enter/copy this in ptpython freezes:\n\n`\n\"\"\"Ynchm51ACAAAA+HRSTlMAAQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGhscHR4fICEiIyQlJicoKSorLC0uL\\\nzAxMjM0NTY3ODk6Ozw9Pj9AQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpbXF1eX2BhYmNkZWZnaGlqa21ucHFyc3\\\nR1dnd4eXp8fX5/gIGCg4SFhoeIiYqLjI2Oj5CRkpOUlZaXmJmanZ6foKGio6SlpqeoqaqrrK2ur7CxsrO0tba3uLm\\\n6u72+v8DBwsPExcbHyMnKy8zNzs/Q0dLT1NXW19jZ2tvc3d7f4OHi4+Tl5ufo6err7O3u7/Dx8vP09fb3+Pn6+/z9\\\n/k//w+EAAAfzSURBVHgBYiAZKM642yXGMOzAsh8/fnQPO1/xfgZ668Ww85bEDxAY9dbgAKPeGvXWqLdGvTXqLUAtd\\\nh8e05n+Afw7M4kgkyBIfopKvBMVfqKtra2WtVZX6yUVKkgsbdFtqy0bSlmKrpfYZavbra7d2lqiFKmuYku87G5bBO\\\nuFaDakdkkJJUkz95973fecnHnOmedcM9c1k88/mfOcXDPne87zPOd+nthuI+cUvD4jq13oWOm5ubl9ECSuQ+bwy\\\na8sndAI4eg9afbqdfOmDoqBXcJPZyxav/yl7LbQiIee7lyTvMIztWQ4tao3xMCiipXxwbHcRcT+FguLPr+9SX5b4cC\\\nV//WhLLCOay6ToXLjQCjcEz+pJsPf5yTYL3RTbUkvp/u+t25vDwQkr7pBFr5NXbj9HBHNCI41kv\\\nyyEeCddoxMtY3BkmA3mIhueQHMqiHVljTU++EXpKqY6oZqMrfdBx3vCSLajHru6ZUU5PvXgL784XBwrHzy+yVMeVWkq\\\nE0BkFNGV6bC6h0+Ox7oU0tWN4fAb76PbLY2geJX3HQkzqkSp29hSCkmrXWeQfznTHCs1neJ1ZqD0LOaLFYCGEpsNCw2\\\ncdvzwAyyqxkH1p+CHW2OgB73uOl3sDFv9gfw63SBDDcOvz93+pKNxXXkt+1xh1jotmrfvn0F3WBI+pQMF3e8\\\n88bzTyab94726GP1rSGq3jFzeMaQaSuukLjTGQDWE7uwKOeRflmv7vKReB+KKcRmwm64XHZpK4jMayTqNnaFod1cI2m\\\nRPpZdz/NGv/1oqAumfcS+1MdC5rKxzeEXm32JWLEHwMtEdPonbvh1fJvEU1CslYc7EFadZSB9lwGR+i0x3+YeULhfuU\\\ncinFgdrpN4+36oFhNbo49l1fogsV8ASF5/fKE6S+fJ1FLRUn0PHeCmb9pC5S0hNh4i9gix8kzYPHA83FiN/0Gs9\\\nllYxXN7SVI4sRAns2j1Awg2mtifoUgpkxHXGAGurcTeUucVOtsBQeIPhxlrLbHKwbCLnfLWtKYIKxZ6yUNZB41NxFKgy\\\nJS+9HsEzCX2qQfiIRmTl5Oh0fJ0WLHSZaTe6g5nrtCxsNz6U4rWt/nUOKhyib2Aek/IRVxMgt92Ge\\\nmPQKt9RTixdugmJkXSwTufJYeO1YNYG2h8yGfWw+LX0u8fhV8XmSBu1/fhnvKwFsDBC2HE6kes2A0ne4joZOhYkL4xA\\\nRrZfOYcLGL2c+O1dmAJp4iNhWEDH/23KRw0vhI61kqZbXvBkUz+GaFjreAzy6CRSKwJLJK/ljer9PFtxJbC4\\\nJHKdD4c5YeM5ZJvXwNnX0mVFTrWz/nMu9CRerU9rPpxpVPOn14nVuSGob+MrFZwNDhkrAHE+sOZPM7ToWNl8Zkd0DnJ\\\np/4fNjk+ogIAI2QknW+BenP4+BicDQoZa6HMpFC0zHpxiDrSHieWFjLWD6xltUpKs2GwG1U4ywt0lS5XlQ7TTm5YHl\\\nGsP0h5ob49ueQobgdTrJT2g0PGypB7Dh0ZOznQSjwjRdIYBPxT1kwRxZI6ZrZSnNQSO+CGScqVyeHFKnWO\\\nlQsd13bLCklIhfnjiGKVKoUY20h+A2GSejm/gWItILbTDYW8xAZEFEs69o9g+pL8XoLpPT4uaJhYT/mk9msGVXXkseSBP\\\n20brtauvYWP32iQWN1v6Qq38zIUI4p11HaZU0lUtoZJ1gjTGyJWs3/JdDESVp/I2ziiWLu4ZQkCZIFQrRZB5dwysg\\\nFiuXaQ2RFU67j144hiFciGifpbP9v91bvquimNWP8GiLWI2HYX4J3UGwHT5c42jyTWE9xSlwRnL8t2UKPoxxrlk/o\\\nlEWh7g3zTYfo/WaXkRRIrvlp/nbY320ZEPVYPmS5udgUwj2/tUJj28pnjnghi+b/iUgyc9Jd7OirqsZqfleliBH+eL\\\ndtmaaj3LLEZkcQaR2wKnBySvbIm0Y7l3klsHljiBXk88TAkyvr3euswY6UQ80DlLpGvaA+9icSWIdqxFhMrd\\\nEH0kn2BD1Evj9ixhPBixcpYbKN7XIdiodNXfu9qQrRjjZGuXWJ+71hic2BwHSH217iwYuHffPwgLNzHiP1Rl+u\\\n+cmK5iHKsnlXyzu8M01KZkYfBkFlD7KNmYcU6qFvJpFYSK/LCbkAZsQOuKMdqfk5CDFdvbpFMG51gyK4jVv5kOL\\\nFWy95HG3u9SeLkY7CIebWG2NlWiG4s925i+VC1kErwhNdWxdEmpXOlv1m0PUUTqzuxY21htZD8tijVhWfSeRLXOiHK\\\nsd4k9hdYpd+2ts4iw/lFg7okIjEzb78UVZpY+IxY1doJaW4oXqwjv1MLHkuNQYuuz2y4Sn7/eRBRjvU0sRPxsMmyPc\\\nOZdyjgLhm+0MXKMP+1bDwUo78j0/c1ZJLlf3RjdZKncqMjgiwha7WRuoeCFQF4VN01EtlkSoWi937SKYiF1Qfc+hw0e\\\nku5Ap1CddtgtVy8bk3v3mU8DlPudbI52wWA92bQNvEE8z/HwGLMRbLb1gd2z3F7OjQafSO1o+MWYmd1zLwGHZkhS6Dw\\\nji+8RwGfP9MIbKGPKm3XlrLhDrGKOFjFTfxY7X6Vf+qDYAll0g908n1UNVB/uaVEhTC0vCxbXVrdr1Ld\\\nNFgl5vxmS3Hp3fID780NzGj3ZzWBXdMxKzZ/vjgNwVrkrd9dUlV16ejO+Q97oOUZ8TAcpOYkQM89LAOmmFEPw\\\nUlSdir+B2hn2K7/vBBtAAAAAElFTkSuQmCC\\\n\"\"\"`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/118", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/118/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/118/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/118", "id": 155969518, "node_id": "MDU6SXNzdWUxNTU5Njk1MTg=", "number": 118, "title": "How Do I Map Vi <ESC> to jj?", "user": {"login": "austincrft", "id": 3616544, "node_id": "MDQ6VXNlcjM2MTY1NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3616544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austincrft", "html_url": "https://github.com/austincrft", "followers_url": "https://api.github.com/users/austincrft/followers", "following_url": "https://api.github.com/users/austincrft/following{/other_user}", "gists_url": "https://api.github.com/users/austincrft/gists{/gist_id}", "starred_url": "https://api.github.com/users/austincrft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austincrft/subscriptions", "organizations_url": "https://api.github.com/users/austincrft/orgs", "repos_url": "https://api.github.com/users/austincrft/repos", "events_url": "https://api.github.com/users/austincrft/events{/privacy}", "received_events_url": "https://api.github.com/users/austincrft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-20T13:59:28Z", "updated_at": "2018-09-30T19:14:53Z", "closed_at": "2018-09-30T19:14:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Vim, I use the mapping `imap jj <Esc>`.\n\nIs there a way to do this using `~/.ptpython/config.py`? I couldn't get it working using the example keybindings.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/115", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/115/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/115/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/115", "id": 153501723, "node_id": "MDU6SXNzdWUxNTM1MDE3MjM=", "number": 115, "title": "Updates to pip repository ....", "user": {"login": "nmvega", "id": 4001382, "node_id": "MDQ6VXNlcjQwMDEzODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4001382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmvega", "html_url": "https://github.com/nmvega", "followers_url": "https://api.github.com/users/nmvega/followers", "following_url": "https://api.github.com/users/nmvega/following{/other_user}", "gists_url": "https://api.github.com/users/nmvega/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmvega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmvega/subscriptions", "organizations_url": "https://api.github.com/users/nmvega/orgs", "repos_url": "https://api.github.com/users/nmvega/repos", "events_url": "https://api.github.com/users/nmvega/events{/privacy}", "received_events_url": "https://api.github.com/users/nmvega/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-06T17:38:51Z", "updated_at": "2016-05-06T18:10:20Z", "closed_at": "2016-05-06T18:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Jonathan:\n\nI was wondering how often updates here are submitted to the PIP repository. I think there have been updates here (I could be wrong), but notice during '_conda-updates_' (the Andconda Python update tool), that they are not reflected in the PIP repository. Should I just update manually from here instead?\n\nThank you! =:)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/114", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/114/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/114/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/114", "id": 153469052, "node_id": "MDU6SXNzdWUxNTM0NjkwNTI=", "number": 114, "title": "executed commands in ptipython is copied onto next line", "user": {"login": "ned2", "id": 2831640, "node_id": "MDQ6VXNlcjI4MzE2NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2831640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ned2", "html_url": "https://github.com/ned2", "followers_url": "https://api.github.com/users/ned2/followers", "following_url": "https://api.github.com/users/ned2/following{/other_user}", "gists_url": "https://api.github.com/users/ned2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ned2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ned2/subscriptions", "organizations_url": "https://api.github.com/users/ned2/orgs", "repos_url": "https://api.github.com/users/ned2/repos", "events_url": "https://api.github.com/users/ned2/events{/privacy}", "received_events_url": "https://api.github.com/users/ned2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-06T14:54:45Z", "updated_at": "2016-05-07T02:33:06Z", "closed_at": "2016-05-06T17:16:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "After executing a command inside of `ptipython`, the command is copied onto the next prompt line, making the REPL unusable as the line has to be deleted before new input can be performed. I've got the same behaviour happening on both Ubuntu 16.04 and 15.10 and in both Python 2 and 3. The problem is not happening with vanilla `ptpython` \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/109", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/109/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/109/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/109", "id": 148810255, "node_id": "MDU6SXNzdWUxNDg4MTAyNTU=", "number": 109, "title": "config.py syntax error", "user": {"login": "JeffMelton", "id": 165736, "node_id": "MDQ6VXNlcjE2NTczNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/165736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffMelton", "html_url": "https://github.com/JeffMelton", "followers_url": "https://api.github.com/users/JeffMelton/followers", "following_url": "https://api.github.com/users/JeffMelton/following{/other_user}", "gists_url": "https://api.github.com/users/JeffMelton/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffMelton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffMelton/subscriptions", "organizations_url": "https://api.github.com/users/JeffMelton/orgs", "repos_url": "https://api.github.com/users/JeffMelton/repos", "events_url": "https://api.github.com/users/JeffMelton/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffMelton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-16T02:44:15Z", "updated_at": "2016-04-16T07:02:01Z", "closed_at": "2016-04-16T07:02:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Line 71 should read:\n    `repl.insert_blank_line_after_output = False`\n\ninstead of:\n    `self.insert_blank_line_after_output = False`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/103", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/103/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/103/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/103", "id": 142967554, "node_id": "MDU6SXNzdWUxNDI5Njc1NTQ=", "number": 103, "title": "AttributeError: 'PythonRepl' object has no attribute 'cli' on ptpython start", "user": {"login": "chmielsen", "id": 2966554, "node_id": "MDQ6VXNlcjI5NjY1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2966554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chmielsen", "html_url": "https://github.com/chmielsen", "followers_url": "https://api.github.com/users/chmielsen/followers", "following_url": "https://api.github.com/users/chmielsen/following{/other_user}", "gists_url": "https://api.github.com/users/chmielsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chmielsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chmielsen/subscriptions", "organizations_url": "https://api.github.com/users/chmielsen/orgs", "repos_url": "https://api.github.com/users/chmielsen/repos", "events_url": "https://api.github.com/users/chmielsen/events{/privacy}", "received_events_url": "https://api.github.com/users/chmielsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-23T14:02:18Z", "updated_at": "2016-03-24T19:49:56Z", "closed_at": "2016-03-23T14:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run ptpython, but this happens:\n\n```\n$ ptpython\n>>>\nTraceback (most recent call last):\n  File \"/usr/local/bin/ptpython\", line 11, in <module>\n    sys.exit(run())\n  File \"/usr/local/lib/python2.7/site-packages/ptpython/entry_points/run_ptpython.py\", line 71, in run\n    title='Python REPL (ptpython)')\n  File \"/usr/local/lib/python2.7/site-packages/ptpython/repl.py\", line 307, in embed\n    cli.run()\n  File \"/Library/Python/2.7/site-packages/prompt_toolkit/interface.py\", line 358, in run\n    self.application.on_start.fire(self)\n  File \"/Library/Python/2.7/site-packages/prompt_toolkit/utils.py\", line 52, in fire\n    handler(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/ptpython/repl.py\", line 64, in _on_start\n    output = self.cli.output\nAttributeError: 'PythonRepl' object has no attribute 'cli'  \n```\n\nVersion info:\n\n```\n$ pip show ptpython\n\n---\nMetadata-Version: 2.0\nName: ptpython\nVersion: 0.31\nSummary: Python REPL build on top of prompt_toolkit\nHome-page: https://github.com/jonathanslenders/ptpython\nAuthor: Jonathan Slenders\nAuthor-email: UNKNOWN\nInstaller: pip\nLicense: UNKNOWN\nLocation: /usr/local/lib/python2.7/site-packages\nRequires: jedi, docopt, pygments, prompt-toolkit\nClassifiers:\nEntry-points:\n  [console_scripts]\n  ptipython = ptpython.entry_points.run_ptipython:run\n  ptpython = ptpython.entry_points.run_ptpython:run\n```\n\nSystem info:\n\n```\n$ sw_vers\nProductName:    Mac OS X\nProductVersion: 10.10.5\nBuildVersion:   14F1605\n```\n\nAny ideas how can I solve this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/102", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/102/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/102/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/102", "id": 133697481, "node_id": "MDU6SXNzdWUxMzM2OTc0ODE=", "number": 102, "title": "PythonInput.on_reset()", "user": {"login": "38elements", "id": 2399132, "node_id": "MDQ6VXNlcjIzOTkxMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2399132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/38elements", "html_url": "https://github.com/38elements", "followers_url": "https://api.github.com/users/38elements/followers", "following_url": "https://api.github.com/users/38elements/following{/other_user}", "gists_url": "https://api.github.com/users/38elements/gists{/gist_id}", "starred_url": "https://api.github.com/users/38elements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/38elements/subscriptions", "organizations_url": "https://api.github.com/users/38elements/orgs", "repos_url": "https://api.github.com/users/38elements/repos", "events_url": "https://api.github.com/users/38elements/events{/privacy}", "received_events_url": "https://api.github.com/users/38elements/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-15T12:11:14Z", "updated_at": "2016-02-24T09:41:51Z", "closed_at": "2016-02-24T09:41:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "[KeyBindingManager.reset()](https://github.com/jonathanslenders/python-prompt-toolkit/blob/9927cbe6a5a125847584c83b5b02574f4270538f/prompt_toolkit/key_binding/manager.py#L153) is in need of a parameter.\nIt does not pass a variable as follows in [PythonInput.on_reset()](https://github.com/jonathanslenders/ptpython/blob/f9bca69af7b7823146af744493906f89260ea75e/ptpython/python_input.py#L617-L619).\n\n```\n    def on_reset(self, cli):\n        self.key_bindings_manager.reset()\n        self.signatures = []\n```\n\nMaybe, `PythonInput.on_reset()` may not have been used.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/98", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/98/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/98/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/98", "id": 128407499, "node_id": "MDU6SXNzdWUxMjg0MDc0OTk=", "number": 98, "title": "Weird PyQt behavior", "user": {"login": "kernc", "id": 684364, "node_id": "MDQ6VXNlcjY4NDM2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kernc", "html_url": "https://github.com/kernc", "followers_url": "https://api.github.com/users/kernc/followers", "following_url": "https://api.github.com/users/kernc/following{/other_user}", "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}", "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kernc/subscriptions", "organizations_url": "https://api.github.com/users/kernc/orgs", "repos_url": "https://api.github.com/users/kernc/repos", "events_url": "https://api.github.com/users/kernc/events{/privacy}", "received_events_url": "https://api.github.com/users/kernc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-24T16:27:39Z", "updated_at": "2017-03-08T15:51:27Z", "closed_at": "2016-05-02T18:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "With ptipython, the following produces an empty, widget-less window (or so it appears):\n\n``` python\nimport pyqtgraph.examples as ex\nex.run()\n```\n\nIn IPython, the same code works as expected.\n\nHow would I debug this further or can you try it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/96", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/96/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/96/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/96", "id": 125913728, "node_id": "MDU6SXNzdWUxMjU5MTM3Mjg=", "number": 96, "title": "<Up> in ptipython does not do history substring search", "user": {"login": "Wilfred", "id": 70800, "node_id": "MDQ6VXNlcjcwODAw", "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wilfred", "html_url": "https://github.com/Wilfred", "followers_url": "https://api.github.com/users/Wilfred/followers", "following_url": "https://api.github.com/users/Wilfred/following{/other_user}", "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions", "organizations_url": "https://api.github.com/users/Wilfred/orgs", "repos_url": "https://api.github.com/users/Wilfred/repos", "events_url": "https://api.github.com/users/Wilfred/events{/privacy}", "received_events_url": "https://api.github.com/users/Wilfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-11T10:22:08Z", "updated_at": "2016-02-03T09:44:56Z", "closed_at": "2016-02-03T09:44:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "In ipython, I can do the following:\n\n```\nIn [1]: x = 1 + 1\n\nIn [2]: y = 2 + 2\n\nIn [3]: x = <up arrow key on keyboard>\n```\n\nand ipython completes it to `x = 1 + 1`. I can't see any way of doing this in ptipython.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/95", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/95/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/95/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/95", "id": 125499936, "node_id": "MDU6SXNzdWUxMjU0OTk5MzY=", "number": 95, "title": "Can we have tab command completion ?", "user": {"login": "lowks", "id": 517395, "node_id": "MDQ6VXNlcjUxNzM5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/517395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowks", "html_url": "https://github.com/lowks", "followers_url": "https://api.github.com/users/lowks/followers", "following_url": "https://api.github.com/users/lowks/following{/other_user}", "gists_url": "https://api.github.com/users/lowks/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowks/subscriptions", "organizations_url": "https://api.github.com/users/lowks/orgs", "repos_url": "https://api.github.com/users/lowks/repos", "events_url": "https://api.github.com/users/lowks/events{/privacy}", "received_events_url": "https://api.github.com/users/lowks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-07T22:32:00Z", "updated_at": "2016-01-16T18:56:32Z", "closed_at": "2016-01-16T18:56:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we have tab command completion ? Really miss this coming from `ipython`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/93", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/93/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/93/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/93", "id": 124357732, "node_id": "MDU6SXNzdWUxMjQzNTc3MzI=", "number": 93, "title": "Colors are rendered incorrectly", "user": {"login": "Cutuchiqueno", "id": 306064, "node_id": "MDQ6VXNlcjMwNjA2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/306064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cutuchiqueno", "html_url": "https://github.com/Cutuchiqueno", "followers_url": "https://api.github.com/users/Cutuchiqueno/followers", "following_url": "https://api.github.com/users/Cutuchiqueno/following{/other_user}", "gists_url": "https://api.github.com/users/Cutuchiqueno/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cutuchiqueno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cutuchiqueno/subscriptions", "organizations_url": "https://api.github.com/users/Cutuchiqueno/orgs", "repos_url": "https://api.github.com/users/Cutuchiqueno/repos", "events_url": "https://api.github.com/users/Cutuchiqueno/events{/privacy}", "received_events_url": "https://api.github.com/users/Cutuchiqueno/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-12-30T14:53:15Z", "updated_at": "2017-03-22T16:20:49Z", "closed_at": "2017-03-22T16:20:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I modify colos in the config.py so that they match the colors of base16-monokai which I use in all of my environment. However, I noticed that some of the color values are shown differently from the way they are shown for any other (shell) program or even in the same shell outside of ptipython. Thus, it seems to me that color values are modified incorrectly somewhere albeit I don't really know what the reason is.\n\n![colors](https://cloud.githubusercontent.com/assets/306064/12052207/d30844a6-af0c-11e5-9b84-15157e15c782.png)\n\nIn this example blue and green show up correctly (folder color in shell - command color  in ptipython; command color in shell - \"In [1]\" color in ptipython). However, the color in the type signature which looks like light red/pink has the same color value and thus should look the same way as the yellow user/host line in the shell (\"cutuchiqueno \u2026 sputnik3arch)\n\nThe same happens with some other but not all colors.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/91", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/91/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/91/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/91", "id": 122462199, "node_id": "MDU6SXNzdWUxMjI0NjIxOTk=", "number": 91, "title": "Jedi crash.", "user": {"login": "jonathanslenders", "id": 216638, "node_id": "MDQ6VXNlcjIxNjYzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanslenders", "html_url": "https://github.com/jonathanslenders", "followers_url": "https://api.github.com/users/jonathanslenders/followers", "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions", "organizations_url": "https://api.github.com/users/jonathanslenders/orgs", "repos_url": "https://api.github.com/users/jonathanslenders/repos", "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanslenders/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-16T09:29:22Z", "updated_at": "2016-10-16T19:51:38Z", "closed_at": "2016-10-16T19:51:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\n  File \"/home/jonathan/git/ptpython/ptpython/utils.py\", line 52, t                                                                                 \n    namespaces=[locals, globals])                                                                                                                  \n  File \"/home/jonathan/.virtualenvs/python35/lib/python3.5/site-p_                                                                                 \n    self._parser.module())                                                                                                                         \n  File \"/home/jonathan/.virtualenvs/python35/lib/python3.5/site-pe                                                                                 \n    return self._parser().module                                                                                                                   \n  File \"/home/jonathan/.virtualenvs/python35/lib/python3.5/site-pr                                                                                 \n    result = func(self)                                                                                                                            \n  File \"/home/jonathan/.virtualenvs/python35/lib/python3.5/site-pr                                                                                 \n    parser = Parser(self._grammar, self._source, self._path)                                                                                       \n  File \"/home/jonathan/.virtualenvs/python35/lib/python3.5/site-p_                                                                                 \n    self.module = p.parse(self._tokenize(tokenizer))                                                                                               \n  File \"/home/jonathan/.virtualenvs/python35/lib/python3.5/site-pe                                                                                 \n    raise ParseError(\"incomplete input\", type, value, start_pos)                                                                                   \njedi.parser.pgen2.parse.ParseError: incomplete input: type='ENDMA)                                                                                 \n\nDuring handling of the above exception, another exception occurre:                                                                                 \n\nTraceback (most recent call last):                                                                                                                 \n  File \"/usr/lib/python3.5/threading.py\", line 923, in _bootstrapr                                                                                 \n    self.run()                                                                                                                                     \n  File \"/usr/lib/python3.5/threading.py\", line 871, in run                                                                                         \n    self._target(*self._args, **self._kwargs)                                                                                                      \n  File \"/home/jonathan/git/python-prompt-toolkit/prompt_toolkit/in                                                                                 \n    completions = list(buffer.completer.get_completions(document,)                                                                                 \n  File \"/home/jonathan/git/ptpython/ptpython/completer.py\", line s                                                                                 \n    script = get_jedi_script_from_document(document, self.get_loc)                                                                                 \n  File \"/home/jonathan/git/ptpython/ptpython/utils.py\", line 67, t                                                                                 \n    except jedi.ParseError:                     \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/90", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/90/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/90/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/90", "id": 121727879, "node_id": "MDU6SXNzdWUxMjE3Mjc4Nzk=", "number": 90, "title": "ptpython breaks all iTerm2 keybinds", "user": {"login": "hassek", "id": 778410, "node_id": "MDQ6VXNlcjc3ODQxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/778410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hassek", "html_url": "https://github.com/hassek", "followers_url": "https://api.github.com/users/hassek/followers", "following_url": "https://api.github.com/users/hassek/following{/other_user}", "gists_url": "https://api.github.com/users/hassek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hassek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hassek/subscriptions", "organizations_url": "https://api.github.com/users/hassek/orgs", "repos_url": "https://api.github.com/users/hassek/repos", "events_url": "https://api.github.com/users/hassek/events{/privacy}", "received_events_url": "https://api.github.com/users/hassek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-11T15:20:54Z", "updated_at": "2015-12-13T05:15:50Z", "closed_at": "2015-12-11T16:17:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "after I run ptipython all my iTerm2 keybinds get broken (for example, I can't do Ctrl-a to jump to the start of the line) \n\nThis gets fixed by reseting the bash shell with _reset_ but is still kind of a pain.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/89", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/89/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/89/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/89", "id": 121065262, "node_id": "MDU6SXNzdWUxMjEwNjUyNjI=", "number": 89, "title": "Exception in Jedi crashes ptpython (another nother one)", "user": {"login": "liavkoren", "id": 5854101, "node_id": "MDQ6VXNlcjU4NTQxMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5854101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liavkoren", "html_url": "https://github.com/liavkoren", "followers_url": "https://api.github.com/users/liavkoren/followers", "following_url": "https://api.github.com/users/liavkoren/following{/other_user}", "gists_url": "https://api.github.com/users/liavkoren/gists{/gist_id}", "starred_url": "https://api.github.com/users/liavkoren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liavkoren/subscriptions", "organizations_url": "https://api.github.com/users/liavkoren/orgs", "repos_url": "https://api.github.com/users/liavkoren/repos", "events_url": "https://api.github.com/users/liavkoren/events{/privacy}", "received_events_url": "https://api.github.com/users/liavkoren/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-08T18:07:44Z", "updated_at": "2015-12-31T12:38:09Z", "closed_at": "2015-12-31T12:38:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I'm on the current cheese-shop release. Test.py is:\n\n``` python\ndef foo(dt):\n    return True\n\ndef bar(usage_records):\n    a_lambda = lambda (foo): 'foobar' == 'foobar' \n```\n\nin a clean virtual env, (only pip installed ptpython and ipython), launching ptpython and then doing:\n\n``` python\nimport test\ntest.foo(<any character>...\n```\n\ncrashes jedi with the following stack trace:\n\n``` python\n>>> test.foo(aException in thread Thread-142:\nTraceback (most recent call last):\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 808, in __bootstrap_inner\n    self.run()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 761, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/prompt_toolkit/interface.py\", line 647, in run                                         \n    completions = list(buffer.completer.get_completions(document, complete_event))\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/ptpython/completer.py\", line 127, in get_completions\n    completions = script.completions()\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/api/__init__.py\", line 192, in completions\n    for call_sig in self.call_signatures():\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/api/__init__.py\", line 521, in call_signatures\n    self.source, self._pos)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/cache.py\", line 93, in wrapper\n    value = next(generator)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/cache.py\", line 115, in cache_call_signatures\n    yield evaluator.eval_element(call)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/cache.py\", line 41, in wrapper\n    rv = function(obj, *args, **kwargs)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/__init__.py\", line 183, in eval_element\n    types = self._eval_atom(element.children[0])\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/__init__.py\", line 230, in _eval_atom\n    return self.find_types(scope, atom, stmt.start_pos, search_global=True)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/__init__.py\", line 120, in find_types\n    return f.find(scopes, search_global)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/debug.py\", line 52, in wrapper\n    result = func(*args, **kwargs)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/finder.py\", line 86, in find\n    names = self.filter_name(scopes)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/finder.py\", line 177, in filter_name\n    names = self.names_dict_lookup(names_dict, position)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/finder.py\", line 125, in names_dict_lookup\n    names = filter_definition_names(names, self.name_str, position)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/finder.py\", line 57, in filter_definition_names\n    stmt = names[0].get_definition()\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/evaluate/helpers.py\", line 159, in get_definition\n    return self.parent\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/cache.py\", line 143, in wrapper\n    result = func(self)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/api/interpreter.py\", line 83, in parent\n    mod = FastParser(load_grammar(), source, path[:-1]).module\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/fast.py\", line 106, in __call__\n    p = super(CachedFastParser, self).__call__(grammar, source, module_path)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/fast.py\", line 243, in __init__\n    self.update(source)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/fast.py\", line 257, in update\n    self._parse(source)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/fast.py\", line 383, in _parse\n    line_offset, nodes)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/fast.py\", line 435, in _get_node\n    p = Parser(self._grammar, parser_code, self.module_path, tokenizer=tokenizer)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/__init__.py\", line 155, in __init__\n    self.module = p.parse(self._tokenize(tokenizer))\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/pgen2/parse.py\", line 106, in parse\n    if self.addtoken(type, value, prefix, start_pos):\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/pgen2/parse.py\", line 170, in addtoken\n    value, start_pos, prefix, self.addtoken)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/__init__.py\", line 269, in error_recovery\n    self._stack_removal(grammar, stack, index + 1, value, start_pos)\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/__init__.py\", line 304, in _stack_removal\n    clear_names(children=node[1])\n  File \"/Users/liavkoren/Envs/test/lib/python2.7/site-packages/jedi/parser/__init__.py\", line 298, in clear_names\n    self._scope_names_stack[-1][c.value].remove(c)\nKeyError: u'a_lambda'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/88", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/88/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/88/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/88", "id": 120721601, "node_id": "MDU6SXNzdWUxMjA3MjE2MDE=", "number": 88, "title": "`yield from` Syntax Error", "user": {"login": "dakra", "id": 574659, "node_id": "MDQ6VXNlcjU3NDY1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/574659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dakra", "html_url": "https://github.com/dakra", "followers_url": "https://api.github.com/users/dakra/followers", "following_url": "https://api.github.com/users/dakra/following{/other_user}", "gists_url": "https://api.github.com/users/dakra/gists{/gist_id}", "starred_url": "https://api.github.com/users/dakra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dakra/subscriptions", "organizations_url": "https://api.github.com/users/dakra/orgs", "repos_url": "https://api.github.com/users/dakra/repos", "events_url": "https://api.github.com/users/dakra/events{/privacy}", "received_events_url": "https://api.github.com/users/dakra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-07T08:18:32Z", "updated_at": "2015-12-07T08:20:00Z", "closed_at": "2015-12-07T08:20:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`yield from` is marked as a syntax error in python 3.5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/87", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/87/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/87/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/87", "id": 120683063, "node_id": "MDU6SXNzdWUxMjA2ODMwNjM=", "number": 87, "title": "Show signature does not work for globals", "user": {"login": "AXGKl", "id": 9989548, "node_id": "MDQ6VXNlcjk5ODk1NDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9989548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AXGKl", "html_url": "https://github.com/AXGKl", "followers_url": "https://api.github.com/users/AXGKl/followers", "following_url": "https://api.github.com/users/AXGKl/following{/other_user}", "gists_url": "https://api.github.com/users/AXGKl/gists{/gist_id}", "starred_url": "https://api.github.com/users/AXGKl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AXGKl/subscriptions", "organizations_url": "https://api.github.com/users/AXGKl/orgs", "repos_url": "https://api.github.com/users/AXGKl/repos", "events_url": "https://api.github.com/users/AXGKl/events{/privacy}", "received_events_url": "https://api.github.com/users/AXGKl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-07T01:58:37Z", "updated_at": "2015-12-18T19:53:31Z", "closed_at": "2015-12-18T19:53:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\ngreat work!\n\nCompared to bpython I \"only\" miss one thing - but this is imho nearly a blocker to use it as 'cheap' interactive shell replacement for non technical people:\n\n```\n$ bpython\nbpython version 0.14.2 on top of Python 2.7.9 /usr/bin/python\n>>> def foo(bar='baz'):\n...     print bar\n>>> foo(\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2502 foo: (bar=baz)                                  \n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n```\n\nIn ptpython the globals seem to be ignored by the signature based argument help - so the above example is just saying: `function foo()`, no help on arguments - so the user is lost.\n\nThis gets severe for many of my use cases, when assigning objects to vars:\n\n```\nconn = SSH(myhost)\nconn.send( [ no help for the user] \n```\n\nalthough `SSH(myhost).send(` nicely displays the help.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/86", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/86/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/86/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/86", "id": 120525511, "node_id": "MDU6SXNzdWUxMjA1MjU1MTE=", "number": 86, "title": "ptipython with barry_as_FLUFL from future", "user": {"login": "feigaoxyz", "id": 5907519, "node_id": "MDQ6VXNlcjU5MDc1MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5907519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feigaoxyz", "html_url": "https://github.com/feigaoxyz", "followers_url": "https://api.github.com/users/feigaoxyz/followers", "following_url": "https://api.github.com/users/feigaoxyz/following{/other_user}", "gists_url": "https://api.github.com/users/feigaoxyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/feigaoxyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feigaoxyz/subscriptions", "organizations_url": "https://api.github.com/users/feigaoxyz/orgs", "repos_url": "https://api.github.com/users/feigaoxyz/repos", "events_url": "https://api.github.com/users/feigaoxyz/events{/privacy}", "received_events_url": "https://api.github.com/users/feigaoxyz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-05T03:22:15Z", "updated_at": "2015-12-31T12:37:56Z", "closed_at": "2015-12-31T12:37:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code snippet is reported a syntax error on `>` by **ptipython** and can not executed.\n\n``` python\nIn: from __future__ import barry_as_FLUFL\nIn: 1 <> 2\n```\n\nIt works as expected in ptpython, python, and ipython.\n\n``` Python\nOut: True\n```\n\nEnv:\nPython 3.5.0\nIPython 4.0.0\nptpython 0.25\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/83", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/83/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/83/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/83", "id": 118056954, "node_id": "MDU6SXNzdWUxMTgwNTY5NTQ=", "number": 83, "title": "Does not recognize some built-in functions", "user": {"login": "thudfoo", "id": 12476951, "node_id": "MDQ6VXNlcjEyNDc2OTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/12476951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thudfoo", "html_url": "https://github.com/thudfoo", "followers_url": "https://api.github.com/users/thudfoo/followers", "following_url": "https://api.github.com/users/thudfoo/following{/other_user}", "gists_url": "https://api.github.com/users/thudfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/thudfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thudfoo/subscriptions", "organizations_url": "https://api.github.com/users/thudfoo/orgs", "repos_url": "https://api.github.com/users/thudfoo/repos", "events_url": "https://api.github.com/users/thudfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/thudfoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-20T14:53:52Z", "updated_at": "2015-11-20T16:13:30Z", "closed_at": "2015-11-20T16:09:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Neither **reduce** nor **reload** for instance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/77", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/77/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/77/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/77", "id": 114390682, "node_id": "MDU6SXNzdWUxMTQzOTA2ODI=", "number": 77, "title": "Using pt(i)python while in a virtualenv uses the system install instead of local install", "user": {"login": "lynncyrin", "id": 5768468, "node_id": "MDQ6VXNlcjU3Njg0Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5768468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lynncyrin", "html_url": "https://github.com/lynncyrin", "followers_url": "https://api.github.com/users/lynncyrin/followers", "following_url": "https://api.github.com/users/lynncyrin/following{/other_user}", "gists_url": "https://api.github.com/users/lynncyrin/gists{/gist_id}", "starred_url": "https://api.github.com/users/lynncyrin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lynncyrin/subscriptions", "organizations_url": "https://api.github.com/users/lynncyrin/orgs", "repos_url": "https://api.github.com/users/lynncyrin/repos", "events_url": "https://api.github.com/users/lynncyrin/events{/privacy}", "received_events_url": "https://api.github.com/users/lynncyrin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-10-31T06:22:11Z", "updated_at": "2019-08-15T03:34:23Z", "closed_at": "2019-08-15T03:34:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "tell me if I need to explain the issue in more detail?\n\n(it should be noted that I really didn't need a system install of ptpython, and uninstalling it fixed the issue)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/75", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/75/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/75/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/75", "id": 110126038, "node_id": "MDU6SXNzdWUxMTAxMjYwMzg=", "number": 75, "title": "Add --pylab mode for ptipython ?", "user": {"login": "Naereen", "id": 11994719, "node_id": "MDQ6VXNlcjExOTk0NzE5", "avatar_url": "https://avatars2.githubusercontent.com/u/11994719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Naereen", "html_url": "https://github.com/Naereen", "followers_url": "https://api.github.com/users/Naereen/followers", "following_url": "https://api.github.com/users/Naereen/following{/other_user}", "gists_url": "https://api.github.com/users/Naereen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Naereen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Naereen/subscriptions", "organizations_url": "https://api.github.com/users/Naereen/orgs", "repos_url": "https://api.github.com/users/Naereen/repos", "events_url": "https://api.github.com/users/Naereen/events{/privacy}", "received_events_url": "https://api.github.com/users/Naereen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-06T23:57:01Z", "updated_at": "2017-10-16T08:19:08Z", "closed_at": "2017-10-16T08:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found no easy way to allow `ptipython` to launch `ipython` with the [`--pylab` mode](http://matplotlib.org/users/shell.html#ipython-to-the-rescue).\n\nCould you add `--pylab` as an accepted command-line option (and pass it to `ipython`)?\nThanks in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/72", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/72/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/72/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/72", "id": 106978150, "node_id": "MDU6SXNzdWUxMDY5NzgxNTA=", "number": 72, "title": "Display docstring of all objects", "user": {"login": "jhrmnn", "id": 940353, "node_id": "MDQ6VXNlcjk0MDM1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/940353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhrmnn", "html_url": "https://github.com/jhrmnn", "followers_url": "https://api.github.com/users/jhrmnn/followers", "following_url": "https://api.github.com/users/jhrmnn/following{/other_user}", "gists_url": "https://api.github.com/users/jhrmnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhrmnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhrmnn/subscriptions", "organizations_url": "https://api.github.com/users/jhrmnn/orgs", "repos_url": "https://api.github.com/users/jhrmnn/repos", "events_url": "https://api.github.com/users/jhrmnn/events{/privacy}", "received_events_url": "https://api.github.com/users/jhrmnn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-17T12:58:03Z", "updated_at": "2015-11-23T17:21:47Z", "closed_at": "2015-11-23T17:21:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that the docstring is not displayed for all types of objects with `show_docstring = True`. My guess would be that it is displayed only for function objects? But the docstring might be present in other objects, in my case it is the fortran object from f2py. The wrapped fortran functions have a useful auto-generated docstring (documenting the function interface) and it would be very helpful to see it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/71", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/71/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/71/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/71", "id": 105742145, "node_id": "MDU6SXNzdWUxMDU3NDIxNDU=", "number": 71, "title": "Exception in jedi crashes ptpython(another one)", "user": {"login": "zhoushun123", "id": 12932569, "node_id": "MDQ6VXNlcjEyOTMyNTY5", "avatar_url": "https://avatars3.githubusercontent.com/u/12932569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhoushun123", "html_url": "https://github.com/zhoushun123", "followers_url": "https://api.github.com/users/zhoushun123/followers", "following_url": "https://api.github.com/users/zhoushun123/following{/other_user}", "gists_url": "https://api.github.com/users/zhoushun123/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhoushun123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhoushun123/subscriptions", "organizations_url": "https://api.github.com/users/zhoushun123/orgs", "repos_url": "https://api.github.com/users/zhoushun123/repos", "events_url": "https://api.github.com/users/zhoushun123/events{/privacy}", "received_events_url": "https://api.github.com/users/zhoushun123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-10T06:46:41Z", "updated_at": "2015-12-31T12:38:53Z", "closed_at": "2015-12-31T12:38:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following crashes ptpython, it exists  immediately after entering the '0' sign.\nMy python Env:\nWindows7 x64 with SP1\nPython 2.7.10 (default, May 23 2015, 09:44:00) [MSC v.1500 64 bit (AMD64)]\ndocopt (0.6.2)\nipython (4.0.0)\nipython-genutils (0.1.0)\njedi (0.9.0)\nprompt-toolkit (0.50)\nptpython (0.22)\n\n``` python\nIn [1]:   1 def frange(start, stop, increment):\n          2     x = start\n          3     while x < stop:\n          4         yield x\n          5         x += increment\n\nIn [2]: for n in frange(0Exception in thread Thread-176:\nTraceback (most recent call last):\n  File \"d:\\python27\\lib\\threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"d:\\python27\\lib\\threading.py\", line 763, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"d:\\python27\\lib\\site-packages\\prompt_toolkit\\interface.py\", line 612, in\n run\n    CompleteEvent(text_inserted=True)))\n  File \"d:\\python27\\lib\\site-packages\\prompt_toolkit\\contrib\\regular_languages\\c\nompletion.py\", line 37, in get_completions\n    self._get_completions_for_match(m, complete_event))\n  File \"d:\\python27\\lib\\site-packages\\prompt_toolkit\\contrib\\regular_languages\\c\nompletion.py\", line 81, in _remove_duplicates\n    for i in items:\n  File \"d:\\python27\\lib\\site-packages\\prompt_toolkit\\contrib\\regular_languages\\c\nompletion.py\", line 64, in _get_completions_for_match\n    for completion in completer.get_completions(document, complete_event):\n  File \"d:\\python27\\lib\\site-packages\\ptpython\\completer.py\", line 127, in get_c\nompletions\n    completions = script.completions()\n  File \"d:\\python27\\lib\\site-packages\\jedi\\api\\__init__.py\", line 192, in comple\ntions\n    for call_sig in self.call_signatures():\n  File \"d:\\python27\\lib\\site-packages\\jedi\\api\\__init__.py\", line 521, in call_s\nignatures\n    self.source, self._pos)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\cache.py\", line 93, in wrapper\n    value = next(generator)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\cache.py\", line 115, in cache_call_si\ngnatures\n    yield evaluator.eval_element(call)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\cache.py\", line 41, in wrapp\ner\n    rv = function(obj, *args, **kwargs)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\__init__.py\", line 169, in e\nval_element\n    return self._eval_atom(element)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\__init__.py\", line 230, in _\neval_atom\n    return self.find_types(scope, atom, stmt.start_pos, search_global=True)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\__init__.py\", line 120, in f\nind_types\n    return f.find(scopes, search_global)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\debug.py\", line 52, in wrapper\n    result = func(*args, **kwargs)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\finder.py\", line 86, in find\n\n    names = self.filter_name(scopes)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\finder.py\", line 177, in fil\nter_name\n    names = self.names_dict_lookup(names_dict, position)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\finder.py\", line 125, in nam\nes_dict_lookup\n    names = filter_definition_names(names, self.name_str, position)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\finder.py\", line 57, in filt\ner_definition_names\n    stmt = names[0].get_definition()\n  File \"d:\\python27\\lib\\site-packages\\jedi\\evaluate\\helpers.py\", line 159, in ge\nt_definition\n    return self.parent\n  File \"d:\\python27\\lib\\site-packages\\jedi\\cache.py\", line 143, in wrapper\n    result = func(self)\n  File \"d:\\python27\\lib\\site-packages\\jedi\\api\\interpreter.py\", line 81, in pare\nnt\n    with open(path) as f:\nIOError: [Errno 2] No such file or directory: 'D:\\\\Python27\\\\Scripts\\\\ptipython.\nexe\\\\__main__.py'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/66", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/66/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/66/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/66", "id": 101311885, "node_id": "MDU6SXNzdWUxMDEzMTE4ODU=", "number": 66, "title": "Custom Dynamic Prompt with PtPython", "user": {"login": "valencra", "id": 9492937, "node_id": "MDQ6VXNlcjk0OTI5Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9492937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valencra", "html_url": "https://github.com/valencra", "followers_url": "https://api.github.com/users/valencra/followers", "following_url": "https://api.github.com/users/valencra/following{/other_user}", "gists_url": "https://api.github.com/users/valencra/gists{/gist_id}", "starred_url": "https://api.github.com/users/valencra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valencra/subscriptions", "organizations_url": "https://api.github.com/users/valencra/orgs", "repos_url": "https://api.github.com/users/valencra/repos", "events_url": "https://api.github.com/users/valencra/events{/privacy}", "received_events_url": "https://api.github.com/users/valencra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-08-17T00:20:33Z", "updated_at": "2015-08-25T12:23:39Z", "closed_at": "2015-08-25T12:23:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello Jonathan,\n\nWould it be possible to have a feature where an embedded PtPython instance can actively \"listen\" to a variable from where the instance was created, and then alter the prompt's output based on that variables changing values? I have an instance of a class in the \"if **name** == '**main**''\" section of the module when it is being run in interpreted mode, and the user can alter some of its attributes by typing in certain commands or functions. I would like to dynamically change the prompt to display what the current value of those instance attributes are. The attributes whose values have to be displayed in the prompt are known in advance. Please let me know if this is possible with the current PtPython.\n\nThank you,\nRobert Valencia\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/63", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/63/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/63/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/63", "id": 99143605, "node_id": "MDU6SXNzdWU5OTE0MzYwNQ==", "number": 63, "title": "support XDG spec", "user": {"login": "flying-sheep", "id": 291575, "node_id": "MDQ6VXNlcjI5MTU3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flying-sheep", "html_url": "https://github.com/flying-sheep", "followers_url": "https://api.github.com/users/flying-sheep/followers", "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}", "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}", "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions", "organizations_url": "https://api.github.com/users/flying-sheep/orgs", "repos_url": "https://api.github.com/users/flying-sheep/repos", "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}", "received_events_url": "https://api.github.com/users/flying-sheep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-08-05T07:41:29Z", "updated_at": "2019-11-26T16:29:08Z", "closed_at": "2019-11-26T16:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "please use [`appdirs`](https://pypi.python.org/pypi/appdirs/1.4.0) to not pollute my `$HOME` with a `.ptpython` directory.\n\nwith `dirs = AppDirs('ptpython', 'Jonathan Slenders')`, your stuff should go into `dirs.user_data_dir`, `dirs.user_config_dir`, and  `dirs.user_cache_dir`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/62", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/62/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/62/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/62", "id": 99143104, "node_id": "MDU6SXNzdWU5OTE0MzEwNA==", "number": 62, "title": "FileNotFoundError: [Errno 2] No such file or directory: '/home/angerer/.ptpython/history'", "user": {"login": "flying-sheep", "id": 291575, "node_id": "MDQ6VXNlcjI5MTU3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flying-sheep", "html_url": "https://github.com/flying-sheep", "followers_url": "https://api.github.com/users/flying-sheep/followers", "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}", "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}", "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions", "organizations_url": "https://api.github.com/users/flying-sheep/orgs", "repos_url": "https://api.github.com/users/flying-sheep/repos", "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}", "received_events_url": "https://api.github.com/users/flying-sheep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-05T07:37:35Z", "updated_at": "2015-09-05T18:20:46Z", "closed_at": "2015-09-05T18:20:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "when executing any first of code in ptipython, i get this:\n\n``` pytb\nFileNotFoundError                         Traceback (most recent call last)\n/usr/lib/python3.4/site-packages/ptpython/ipython.py in raw_input(self, prompt)\n    196         print('')ore        \n    197         try:    display     \n--> 198             string = self._cli.run().text\n    199 acs   1/1   [F6] Paste mode (off)                                                                                                                                              [F2] Options - CPython 3.4.3 \n    200             # In case of multiline input, make sure to append a newline to the input,\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/interface.py in run(self, reset_current_buffer)\n    272                 self._redraw()\n    273 \n--> 274                 self.eventloop.run(self.input, self.create_eventloop_callbacks())\n    275         finally:\n    276             # Clean up renderer. (This will leave the alternate screen, if we use\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/eventloop/posix.py in run(self, stdin, callbacks)\n     85                     # Feed input text.\n     86                     data = stdin_reader.read()\n---> 87                     inputstream.feed(data)\n     88                     callbacks.redraw()\n     89 \n\n/usr/lib/python3.4/site-packages/prompt_toolkit/terminal/vt100_input.py in feed(self, data)\n    300             if c == '\\r':\n    301                 c = '\\n'\n--> 302             self._input_parser.send(c)\n    303 \n    304     def flush(self):\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/terminal/vt100_input.py in _input_parser_generator(self)\n    252                 # Exact matches found, call handlers..\n    253                 if (flush or not is_prefix_of_longer_match) and match:\n--> 254                     self._call_handler(match, prefix)\n    255                     prefix = ''\n    256 \n\n/usr/lib/python3.4/site-packages/prompt_toolkit/terminal/vt100_input.py in _call_handler(self, key, insert_text)\n    281                 self._call_handler(k, insert_text)\n    282         else:\n--> 283             self.feed_key_callback(KeyPress(key, insert_text))\n    284 \n    285     def feed(self, data):\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/interface.py in feed_key(self, key_press)\n    605         \"\"\"\n    606         # Feed the key and redraw.\n--> 607         self.cli.input_processor.feed_key(key_press)\n    608 \n    609     def redraw(self):\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/key_binding/input_processor.py in feed_key(self, key_press)\n    163             self.beforeKeyPress.fire()\n    164 \n--> 165         self._process_coroutine.send(key_press)\n    166 \n    167         if key_press.key != Keys.CPRResponse:\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/key_binding/input_processor.py in _process(self)\n    135                 # Exact matches found, call handler.\n    136                 if not is_prefix_of_longer_match and matches:\n--> 137                     self._call_handler(matches[-1], key_sequence=buffer)\n    138                     buffer = []\n    139 \n\n/usr/lib/python3.4/site-packages/prompt_toolkit/key_binding/input_processor.py in _call_handler(self, handler, key_sequence)\n    174         event = Event(weakref.ref(self), arg=arg, key_sequence=key_sequence,\n    175                       previous_key_sequence=self._previous_key_sequence)\n--> 176         handler.call(event)\n    177         self._registry.on_handler_called.fire(event)\n    178 \n\n/usr/lib/python3.4/site-packages/prompt_toolkit/key_binding/registry.py in call(self, event)\n     24 \n     25     def call(self, event):\n---> 26         return self._handler(event)\n     27 \n     28     def __repr__(self):\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/key_binding/bindings/utils.py in wrapper(event)\n     28                 if safe_before:\n     29                     event.cli.current_buffer.save_to_undo_stack()\n---> 30                 handler_func(event)\n     31             return handler_func\n     32         return decorator\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/key_binding/bindings/basic.py in _(event)\n    177         else:\n    178             if b.accept_action.is_returnable:\n--> 179                 b.accept_action.validate_and_handle(event.cli, b)\n    180 \n    181     @handle(Keys.ControlK, filter= ~has_selection)\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/buffer.py in validate_and_handle(self, cli, buffer)\n     71                 self.handler(cli, buffer)\n     72 \n---> 73             buffer.append_to_history()\n     74 \n     75 \n\n/usr/lib/python3.4/site-packages/prompt_toolkit/buffer.py in append_to_history(self)\n    898         # history is already the same.)\n    899         if self.text and (not len(self._history) or self._history[-1] != self.text):\n--> 900             self._history.append(self.text)\n    901 \n    902     def _search(self, search_state):\n\n/usr/lib/python3.4/site-packages/prompt_toolkit/history.py in append(self, string)\n     70 \n     71         # Save to file.\n---> 72         with open(self.filename, 'ab') as f:\n     73             write = lambda t: f.write(t.encode('utf-8'))\n     74 \n\nFileNotFoundError: [Errno 2] No such file or directory: '/home/angerer/.ptpython/history'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/60", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/60/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/60/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/60", "id": 98255578, "node_id": "MDU6SXNzdWU5ODI1NTU3OA==", "number": 60, "title": "\"ImportError: cannot import name windll\" on Mac OS X", "user": {"login": "martinpllu", "id": 783830, "node_id": "MDQ6VXNlcjc4MzgzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/783830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinpllu", "html_url": "https://github.com/martinpllu", "followers_url": "https://api.github.com/users/martinpllu/followers", "following_url": "https://api.github.com/users/martinpllu/following{/other_user}", "gists_url": "https://api.github.com/users/martinpllu/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinpllu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinpllu/subscriptions", "organizations_url": "https://api.github.com/users/martinpllu/orgs", "repos_url": "https://api.github.com/users/martinpllu/repos", "events_url": "https://api.github.com/users/martinpllu/events{/privacy}", "received_events_url": "https://api.github.com/users/martinpllu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-30T20:23:19Z", "updated_at": "2015-07-31T13:51:01Z", "closed_at": "2015-07-31T13:51:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I launch on Mac OS X 10.9.5, Python 2.7.5 I get the error below. I also get the same error in a new virtualenv. \n\nI guess this might be a prompt_toolkit bug but I thought I'd start here.\n\nThanks. \n\n\u279c  ~  ptpython\nTraceback (most recent call last):\n  File \"/usr/local/bin/ptpython\", line 7, in <module>\n    from ptpython.entry_points.run_ptpython import run\n  File \"/Library/Python/2.7/site-packages/ptpython/entry_points/run_ptpython.py\", line 25, in <module>\n    from ptpython.repl import embed, enable_deprecation_warnings, run_config\n  File \"/Library/Python/2.7/site-packages/ptpython/repl.py\", line 16, in <module>\n    from prompt_toolkit.application import AbortAction\n  File \"/Library/Python/2.7/site-packages/prompt_toolkit/**init**.py\", line 16, in <module>\n    from .interface import CommandLineInterface\n  File \"/Library/Python/2.7/site-packages/prompt_toolkit/interface.py\", line 22, in <module>\n    from .input import StdinInput, Input\n  File \"/Library/Python/2.7/site-packages/prompt_toolkit/input.py\", line 14, in <module>\n    from .terminal.win32_input import raw_mode, cooked_mode\n  File \"/Library/Python/2.7/site-packages/prompt_toolkit/terminal/win32_input.py\", line 1, in <module>\n    from ctypes import windll, pointer\nImportError: cannot import name windll\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/58", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/58/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/58/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/58", "id": 97323398, "node_id": "MDU6SXNzdWU5NzMyMzM5OA==", "number": 58, "title": "how can I specify the python version used by ptpython", "user": {"login": "bluealert", "id": 2254200, "node_id": "MDQ6VXNlcjIyNTQyMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2254200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluealert", "html_url": "https://github.com/bluealert", "followers_url": "https://api.github.com/users/bluealert/followers", "following_url": "https://api.github.com/users/bluealert/following{/other_user}", "gists_url": "https://api.github.com/users/bluealert/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluealert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluealert/subscriptions", "organizations_url": "https://api.github.com/users/bluealert/orgs", "repos_url": "https://api.github.com/users/bluealert/repos", "events_url": "https://api.github.com/users/bluealert/events{/privacy}", "received_events_url": "https://api.github.com/users/bluealert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-07-26T14:45:35Z", "updated_at": "2016-11-06T17:20:22Z", "closed_at": "2015-07-29T15:30:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "can I config it? I cannot find this configuration in https://github.com/jonathanslenders/ptpython/blob/master/examples/ptpython_config/config.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/54", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/54/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/54/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/54", "id": 93650441, "node_id": "MDU6SXNzdWU5MzY1MDQ0MQ==", "number": 54, "title": "Provide an ability to configure hotkeys", "user": {"login": "dangusev", "id": 3066740, "node_id": "MDQ6VXNlcjMwNjY3NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3066740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangusev", "html_url": "https://github.com/dangusev", "followers_url": "https://api.github.com/users/dangusev/followers", "following_url": "https://api.github.com/users/dangusev/following{/other_user}", "gists_url": "https://api.github.com/users/dangusev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangusev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangusev/subscriptions", "organizations_url": "https://api.github.com/users/dangusev/orgs", "repos_url": "https://api.github.com/users/dangusev/repos", "events_url": "https://api.github.com/users/dangusev/events{/privacy}", "received_events_url": "https://api.github.com/users/dangusev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-07T23:10:20Z", "updated_at": "2015-08-10T07:17:55Z", "closed_at": "2015-08-10T07:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I've got a problem with \"Execute\" (Meta+Enter) in Paste mode because I'm using i3wm and the same hotkeys already assigned to \"Open terminal\" command. I'm sure that I'm not the only one who have this issue. Can you consider this improvement? Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/53", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/53/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/53/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/53", "id": 92857405, "node_id": "MDU6SXNzdWU5Mjg1NzQwNQ==", "number": 53, "title": "ptpython can't import a local package named `test`", "user": {"login": "obmarg", "id": 556490, "node_id": "MDQ6VXNlcjU1NjQ5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/556490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obmarg", "html_url": "https://github.com/obmarg", "followers_url": "https://api.github.com/users/obmarg/followers", "following_url": "https://api.github.com/users/obmarg/following{/other_user}", "gists_url": "https://api.github.com/users/obmarg/gists{/gist_id}", "starred_url": "https://api.github.com/users/obmarg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obmarg/subscriptions", "organizations_url": "https://api.github.com/users/obmarg/orgs", "repos_url": "https://api.github.com/users/obmarg/repos", "events_url": "https://api.github.com/users/obmarg/events{/privacy}", "received_events_url": "https://api.github.com/users/obmarg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385209, "node_id": "MDU6TGFiZWwxMzMzODUyMDk=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-03T11:38:35Z", "updated_at": "2015-09-06T08:07:07Z", "closed_at": "2015-09-06T08:07:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a 'test' package in the top-level of my project that I'm trying to import a file from, but ptpython (and ptipython) won't let me.  It seems to be picking the `test` package from the python standard library instead.  Plain python (and plain ipython) do not have this problem.  This is on python3, though I haven't tested with python2.\n\nSteps to reproduce:\n\n```\n$ mkdir python-test\n$ cd python-test\n$ mkvirtualenv -p /usr/local/bin/python3 python-test\n$ pip install ptpython\n$ mkdir test\n$ touch test/__init__.py\n$ touch test/schema_data.py\n```\n\nAnd demonstration of the bug:\n\n```\n$ python\nPython 3.4.1 (default, Aug 24 2014, 21:31:55)\n[GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import test.schema_data\n>>> quit()\n$ ptpython\nIn [1]: import test.schema_data\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nImportError: No module named 'test.schema_data'\nNo module named 'test.schema_data'\n\nIn [2]: import test\n\nIn [3]: test\nOut[3]: <module 'test' from '/usr/local/Cellar/python3/3.4.1_1/Frameworks/Python.framework/Versions/3.4/lib/python3.4/test/__init__.py'>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/51", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/51/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/51/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/51", "id": 92309065, "node_id": "MDU6SXNzdWU5MjMwOTA2NQ==", "number": 51, "title": "It is better if ptpython support pyenv", "user": {"login": "axiaoxin", "id": 2876405, "node_id": "MDQ6VXNlcjI4NzY0MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2876405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axiaoxin", "html_url": "https://github.com/axiaoxin", "followers_url": "https://api.github.com/users/axiaoxin/followers", "following_url": "https://api.github.com/users/axiaoxin/following{/other_user}", "gists_url": "https://api.github.com/users/axiaoxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/axiaoxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axiaoxin/subscriptions", "organizations_url": "https://api.github.com/users/axiaoxin/orgs", "repos_url": "https://api.github.com/users/axiaoxin/repos", "events_url": "https://api.github.com/users/axiaoxin/events{/privacy}", "received_events_url": "https://api.github.com/users/axiaoxin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385214, "node_id": "MDU6TGFiZWwxMzMzODUyMTQ=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-07-01T08:11:01Z", "updated_at": "2017-12-16T05:54:03Z", "closed_at": "2015-07-30T19:37:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I usually use pyenv, when I switch from python2 to python3, the ptpython still python2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/50", "repository_url": "https://api.github.com/repos/prompt-toolkit/ptpython", "labels_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/50/comments", "events_url": "https://api.github.com/repos/prompt-toolkit/ptpython/issues/50/events", "html_url": "https://github.com/prompt-toolkit/ptpython/issues/50", "id": 90919217, "node_id": "MDU6SXNzdWU5MDkxOTIxNw==", "number": 50, "title": "Interactive mode with ptipython", "user": {"login": "NamanJn", "id": 10748922, "node_id": "MDQ6VXNlcjEwNzQ4OTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/10748922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NamanJn", "html_url": "https://github.com/NamanJn", "followers_url": "https://api.github.com/users/NamanJn/followers", "following_url": "https://api.github.com/users/NamanJn/following{/other_user}", "gists_url": "https://api.github.com/users/NamanJn/gists{/gist_id}", "starred_url": "https://api.github.com/users/NamanJn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NamanJn/subscriptions", "organizations_url": "https://api.github.com/users/NamanJn/orgs", "repos_url": "https://api.github.com/users/NamanJn/repos", "events_url": "https://api.github.com/users/NamanJn/events{/privacy}", "received_events_url": "https://api.github.com/users/NamanJn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 133385211, "node_id": "MDU6TGFiZWwxMzMzODUyMTE=", "url": "https://api.github.com/repos/prompt-toolkit/ptpython/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-25T10:13:59Z", "updated_at": "2015-08-01T14:52:53Z", "closed_at": "2015-07-30T19:38:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "<code> ptipython --vi --interactive=&lt;file_name&gt;</code>\n\nI cannot seem to get this working. Am I missing something or this feature does not exist?\n", "performed_via_github_app": null, "score": 1.0}]}