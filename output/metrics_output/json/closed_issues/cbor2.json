{"total_count": 39, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/agronholm/cbor2/issues/93", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/93/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/93/events", "html_url": "https://github.com/agronholm/cbor2/issues/93", "id": 671970455, "node_id": "MDU6SXNzdWU2NzE5NzA0NTU=", "number": 93, "title": "segfault of cbor2.load with python 3.8.2", "user": {"login": "gsalzer", "id": 13353518, "node_id": "MDQ6VXNlcjEzMzUzNTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/13353518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsalzer", "html_url": "https://github.com/gsalzer", "followers_url": "https://api.github.com/users/gsalzer/followers", "following_url": "https://api.github.com/users/gsalzer/following{/other_user}", "gists_url": "https://api.github.com/users/gsalzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsalzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsalzer/subscriptions", "organizations_url": "https://api.github.com/users/gsalzer/orgs", "repos_url": "https://api.github.com/users/gsalzer/repos", "events_url": "https://api.github.com/users/gsalzer/events{/privacy}", "received_events_url": "https://api.github.com/users/gsalzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-03T10:20:50Z", "updated_at": "2020-08-07T09:29:00Z", "closed_at": "2020-08-06T13:05:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ pip install cbor2\r\nCollecting cbor2\r\n  Using cached cbor2-5.1.2.tar.gz (73 kB)\r\nBuilding wheels for collected packages: cbor2\r\n  Building wheel for cbor2 (setup.py) ... done\r\n  Created wheel for cbor2: filename=cbor2-5.1.2-cp38-cp38-linux_x86_64.whl size=173916 sha256=a5197fd079744f4d0e09bebb936e7a3ee6b7a8d3ef62cdab1f05c5fbf1c9e089\r\n  Stored in directory: /home/user/.cache/pip/wheels/ee/62/04/40cf369149e4f154952feb7c9a64f00ffa35b64cd2bfa5c3dd\r\nSuccessfully built cbor2\r\nInstalling collected packages: cbor2\r\nSuccessfully installed cbor2-5.1.2\r\n$ python\r\nPython 3.8.2 (default, Jul 16 2020, 14:00:26) \r\n[GCC 9.3.0] on linux\r\n>>> import io,cbor2\r\n>>> fp = io.BytesIO(b'\\x9b78\\x85\\x19%\\x1a\\xe9\\xca')\r\n>>> cbor2.load(fp)\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nExpected behaviour: Exception\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/89", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/89/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/89/events", "html_url": "https://github.com/agronholm/cbor2/issues/89", "id": 646257786, "node_id": "MDU6SXNzdWU2NDYyNTc3ODY=", "number": 89, "title": "Segmentation fault at shutdown", "user": {"login": "chrysn", "id": 442326, "node_id": "MDQ6VXNlcjQ0MjMyNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/442326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrysn", "html_url": "https://github.com/chrysn", "followers_url": "https://api.github.com/users/chrysn/followers", "following_url": "https://api.github.com/users/chrysn/following{/other_user}", "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions", "organizations_url": "https://api.github.com/users/chrysn/orgs", "repos_url": "https://api.github.com/users/chrysn/repos", "events_url": "https://api.github.com/users/chrysn/events{/privacy}", "received_events_url": "https://api.github.com/users/chrysn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-26T13:18:42Z", "updated_at": "2020-07-21T16:39:39Z", "closed_at": "2020-07-21T16:39:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've found a segmentation fault that I could reproduce on different machines, yet failed to pin down any further. As cbor2 is the only non-standard module involved I could not remove (started with four), I'm reporting this here. Please bear with me as some parts of this seem like no-ops, but I haven't found anything in this I could remove:\r\n\r\n* Use a recent Debian sid (any state in the last few days should do, as systems I tested with ranged from not updated since end of May to freshly set up).\r\n* `git clone https://github.com/agronholm/cbor2` (alternatively, wget and unpack [5.1.0](https://files.pythonhosted.org/packages/ee/80/bc617b7fd89855649e48eb8242e09535e1b75371ec8389313fa0f97e2a70/cbor2-5.1.0.tar.gz)).\r\n* `python3 setup.py build`\r\n* Create a `/tmp/test.py` containing\r\n\r\n```python\r\nimport inspect\r\nimport cbor2\r\nimport csv\r\n```\r\n\r\n* `PYTHONPATH=build/lib.linux-x86_64-3.8 python3 /tmp/test.py`\r\n\r\nOn the first run, all is fine. On the second and subsequent runs, this segfaults. (No error message is printed, so unless your shell shows error codes, look at the return code).\r\n\r\nVarious observations I've made which didn't get me any further but might help you:\r\n\r\n* This only happens at shutdown. When I found this, I was running through my test suite, which always passed, but segfaulted for some test cases to be run but not for others. The above is the minimal error case distilled from that.\r\n* The first-run behavior stems from the `.pyc` files in the build directory. (Which is good because it's the only legitimate kind-of-reason I could come up with for this).\r\n* The `-d -v -X faulthandler` arguments don't affect the segmentation fault, and may help in debugging.\r\n* Running Python with `-X dev` or `-X tracemalloc` cause the error to disappear.\r\n* `python -c \"import inspect; ...\"` does not cause the error.\r\n* The last import can be replaced with other simple modules like argparse or socket. For the first import, I haven't found suitable substitutes.\r\n* Running in gdb gives me the following traceback:\r\n\r\n```backtrace\r\n#0  unlink_chunk (p=p@entry=0xa45f60, av=0x7ffff7f75b80 <main_arena>) at malloc.c:1466\r\n#1  0x00007ffff7e3fcc5 in _int_free (av=0x7ffff7f75b80 <main_arena>, p=0xa45f60, have_lock=<optimized out>) at malloc.c:4333\r\n#2  0x00000000005ca653 in _Py_Dealloc (op=<optimized out>) at ../Objects/object.c:2215\r\n#3  _Py_DECREF (filename=<synthetic pointer>, lineno=541, op=<optimized out>) at ../Include/object.h:478\r\n#4  _Py_XDECREF (op=<optimized out>) at ../Include/object.h:541\r\n#5  free_keys_object (keys=0xa3aec0) at ../Objects/dictobject.c:584\r\n#6  0x00000000005caffc in dictkeys_decref (dk=0xa3aec0) at ../Objects/dictobject.c:324\r\n#7  dict_dealloc (mp=0x7ffff76a5640) at ../Objects/dictobject.c:1998\r\n#8  0x000000000069d953 in _Py_DECREF (filename=0x87d3e8 \"../Objects/moduleobject.c\", lineno=791, op=<optimized out>) at ../Include/object.h:478\r\n#9  module_clear (m=<optimized out>) at ../Objects/moduleobject.c:791\r\n#10 0x00000000004ec288 in delete_garbage (state=<optimized out>, state=<optimized out>, old=0x934820 <_PyRuntime+416>, collectable=0x7fffffffdcd0) at ../Modules/gcmodule.c:948\r\n#11 collect.constprop.0 (generation=generation@entry=2, n_collected=n_collected@entry=0x0, n_uncollectable=n_uncollectable@entry=0x0, nofail=nofail@entry=1, \r\n    state=0x9347d8 <_PyRuntime+344>) at ../Modules/gcmodule.c:1123\r\n#12 0x000000000066ab3b in _PyGC_CollectNoFail () at ../Modules/gcmodule.c:1866\r\n#13 0x000000000067d580 in PyImport_Cleanup () at ../Python/import.c:542\r\n#14 0x0000000000677ad0 in Py_FinalizeEx () at ../Python/pylifecycle.c:1240\r\n#15 0x00000000006aea19 in Py_RunMain () at ../Modules/main.c:646\r\n#16 0x00000000006aec89 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at ../Modules/main.c:698\r\n#17 0x00007ffff7ddfe0b in __libc_start_main (main=0x4eb6e0 <main>, argc=2, argv=0x7fffffffe018, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, \r\n    stack_end=0x7fffffffe008) at ../csu/libc-start.c:308\r\n#18 0x00000000005f59da in _start () at ../Objects/obmalloc.c:1233\r\n```\r\nI didn't find any local that I could make sense of, especially with all the op being optimzied out.\r\n\r\nI'll try to keep the particular setup around in case you can't repoduce it, but have ideas on which experiments to make with this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/88", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/88/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/88/events", "html_url": "https://github.com/agronholm/cbor2/issues/88", "id": 638330690, "node_id": "MDU6SXNzdWU2MzgzMzA2OTA=", "number": 88, "title": "C backend won't be built on most platforms due to glibc version check", "user": {"login": "JayH5", "id": 1748643, "node_id": "MDQ6VXNlcjE3NDg2NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1748643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JayH5", "html_url": "https://github.com/JayH5", "followers_url": "https://api.github.com/users/JayH5/followers", "following_url": "https://api.github.com/users/JayH5/following{/other_user}", "gists_url": "https://api.github.com/users/JayH5/gists{/gist_id}", "starred_url": "https://api.github.com/users/JayH5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JayH5/subscriptions", "organizations_url": "https://api.github.com/users/JayH5/orgs", "repos_url": "https://api.github.com/users/JayH5/repos", "events_url": "https://api.github.com/users/JayH5/events{/privacy}", "received_events_url": "https://api.github.com/users/JayH5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-14T11:09:11Z", "updated_at": "2020-07-03T13:23:32Z", "closed_at": "2020-07-03T13:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Impacted: v5.1.0, master@5e8491f\r\n\r\ncbor2 does a check that a new enough glibc is installed before enabling the C backend. It does this using the value returned by `platform.libc_ver()`. Unfortunately, this value can't be relied upon  on many versions of Python (seems like anything less than Python 3.8 because 3.8 has [bpo-35389](https://bugs.python.org/issue35389)).\r\n\r\nFor example, on Python 3.7:\r\n```\r\n\u276f docker run --rm python:3.7-slim python -c 'import platform; print(platform.libc_ver())'\r\n('glibc', '2.2.5')\r\n```\r\n...this is less than the version cbor2 requires (2.9) but the OS actually has glibc 2.28:\r\n```\r\n\u276f docker run --rm python:3.7-slim ldd --version | head -n 1\r\nldd (Debian GLIBC 2.28-10) 2.28\r\n```\r\n\r\nNote that pip implements its own version of `libc_ver()` to get around this: https://github.com/pypa/pip/blob/20.1.1/src/pip/_internal/utils/glibc.py#L70-L87", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/86", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/86/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/86/events", "html_url": "https://github.com/agronholm/cbor2/issues/86", "id": 638216049, "node_id": "MDU6SXNzdWU2MzgyMTYwNDk=", "number": 86, "title": "Installation requires a compiler", "user": {"login": "virtuald", "id": 567900, "node_id": "MDQ6VXNlcjU2NzkwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/567900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/virtuald", "html_url": "https://github.com/virtuald", "followers_url": "https://api.github.com/users/virtuald/followers", "following_url": "https://api.github.com/users/virtuald/following{/other_user}", "gists_url": "https://api.github.com/users/virtuald/gists{/gist_id}", "starred_url": "https://api.github.com/users/virtuald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/virtuald/subscriptions", "organizations_url": "https://api.github.com/users/virtuald/orgs", "repos_url": "https://api.github.com/users/virtuald/repos", "events_url": "https://api.github.com/users/virtuald/events{/privacy}", "received_events_url": "https://api.github.com/users/virtuald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-13T19:17:44Z", "updated_at": "2020-07-03T13:18:56Z", "closed_at": "2020-07-03T13:18:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, installing cbor2 fails if a compiler isn't installed. See https://github.com/agronholm/cbor2/blob/5e8491fe9449cbb4990d36e1fee2c93e9a10a499/setup.py#L24\r\n\r\nThere is a pure python fallback, but it seems the current setup.py will not actually use it most of the time. It would be great if the setup.py could check to see if compilation succeeds/could succeed, and fallback to pure python if the compilation fails. \r\n\r\nAlternatively publishing wheels for all common platforms would be great as well. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/75", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/75/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/75/events", "html_url": "https://github.com/agronholm/cbor2/issues/75", "id": 581370721, "node_id": "MDU6SXNzdWU1ODEzNzA3MjE=", "number": 75, "title": "cbor encoded message can not be passed to machine with different endianness", "user": {"login": "tytgatlieven", "id": 3863842, "node_id": "MDQ6VXNlcjM4NjM4NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3863842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tytgatlieven", "html_url": "https://github.com/tytgatlieven", "followers_url": "https://api.github.com/users/tytgatlieven/followers", "following_url": "https://api.github.com/users/tytgatlieven/following{/other_user}", "gists_url": "https://api.github.com/users/tytgatlieven/gists{/gist_id}", "starred_url": "https://api.github.com/users/tytgatlieven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tytgatlieven/subscriptions", "organizations_url": "https://api.github.com/users/tytgatlieven/orgs", "repos_url": "https://api.github.com/users/tytgatlieven/repos", "events_url": "https://api.github.com/users/tytgatlieven/events{/privacy}", "received_events_url": "https://api.github.com/users/tytgatlieven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 20, "created_at": "2020-03-14T21:01:07Z", "updated_at": "2020-03-17T17:26:03Z", "closed_at": "2020-03-17T17:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear\r\n\r\nIt seems impossible to transmit data in between machines when they have different endiannes.\r\nThe encoded version of a single data structure is different on different endiannes machines.\r\n\r\nBelow the tests I have executed on a mips (big endian) and a intel (little endian) sending a dict with some data.\r\n\r\nBoth using version 5.0.1. On the mips machine I tested using pure python version and using compiled version\r\n\r\n### intel device (little endian)\r\n>>> sys.byteorderr\n'little'\r\n>>> d = {1: 'test1', 2: 2, 3:b'123456789'}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \r\n>>> cbor2.dumps(dr\nb'\\xa3\\x01etest1\\x02\\x02\\x03I123456789'\r\n>>> cbor2.loads(cbor2.dumps(dr\n{1: 'test1', 2: 2, 3: b'123456789'}\r\n>>> cbor2.loads(b'\\x1d\\x08+test1\\x10\\x10\\x18J123456789') \r\n---------------------------------------------------------------------------\r\nCBORDecodeError                           Traceback (most recent call last)\r\n<ipython-input-12-358b0f597a24> in <module>\r\n----> 1 cbor2.loads(b'\\x1d\\x08+test1\\x10\\x10\\x18J123456789')\r\n\r\n~/.local/lib/python3.6/site-packages/cbor2/decoder.py in loads(payload, **kwargs)\r\n    429     \"\"\"\r\n    430     fp = BytesIO(payload)\r\n--> 431     return CBORDecoder(fp, **kwargs).decode()\r\n    432 \r\n    433 \r\n\r\n~/.local/lib/python3.6/site-packages/cbor2/decoder.py in decode(self, shareable_index)\r\n    397         decoder = major_decoders[major_type]\r\n    398         try:\r\n--> 399             return decoder(self, subtype, shareable_index)\r\n    400         except CBORDecodeError:\r\n    401             raise\r\n\r\n~/.local/lib/python3.6/site-packages/cbor2/decoder.py in decode_uint(decoder, subtype, shareable_index, allow_indefinite)\r\n     30         return None\r\n     31     else:\r\n---> 32         raise CBORDecodeError('unknown unsigned integer subtype 0x%x' % subtype)\r\n     33 \r\n     34 \r\n\r\nCBORDecodeError: unknown unsigned integer subtype 0x1d\r\n\r\n\r\n**mips device (big endian)**\r\n>>> sys.byteorder\r\n'big'\r\n>>> d = {1: 'test1', 2: 2, 3:b'123456789'}\r\n>>> cbor2.dumps(d)\r\nb'\\x1d\\x08+test1\\x10\\x10\\x18J123456789'\r\n>>> cbor2.loads(cbor2.dumps(d))\r\n{1: 'test1', 2: 2, 3: b'123456789'}\r\n>>> cbor2.loads(b'\\xa3\\x01etest1\\x02\\x02\\x03I123456789')\r\n'\\x01etest1\\x02\\x02\\x03I123456789'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/74", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/74/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/74/events", "html_url": "https://github.com/agronholm/cbor2/issues/74", "id": 581188270, "node_id": "MDU6SXNzdWU1ODExODgyNzA=", "number": 74, "title": "`cbor2` cannot be installed when the system locale is C", "user": {"login": "a-rodin", "id": 1885277, "node_id": "MDQ6VXNlcjE4ODUyNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1885277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-rodin", "html_url": "https://github.com/a-rodin", "followers_url": "https://api.github.com/users/a-rodin/followers", "following_url": "https://api.github.com/users/a-rodin/following{/other_user}", "gists_url": "https://api.github.com/users/a-rodin/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-rodin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-rodin/subscriptions", "organizations_url": "https://api.github.com/users/a-rodin/orgs", "repos_url": "https://api.github.com/users/a-rodin/repos", "events_url": "https://api.github.com/users/a-rodin/events{/privacy}", "received_events_url": "https://api.github.com/users/a-rodin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-03-14T12:28:35Z", "updated_at": "2020-03-17T11:44:02Z", "closed_at": "2020-03-17T11:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest version 5.0.1 of `cbor2` package cannot be installed using `pip` from Python 3 when the system locale is `C`.\r\n\r\nIt means, in particular, that installation fails if `cbor2` is installed during building of a Docker image based on Ubuntu or Debian, unless the locale is explicitly configured before installing `cbor2`:\r\n\r\n`Dockerfile`\r\n```Dockerfile\r\nFROM ubuntu:18.04\r\nRUN apt-get update && apt-get install -y python3-pip\r\nRUN pip3 install cbor2==5.0.1\r\n```\r\n\r\n```bash\r\n$ docker build .\r\n...\r\nStep 3/3 : RUN pip3 install cbor2==5.0.1\r\n ---> Running in d25611af1b36\r\nCollecting cbor2==5.0.1\r\n  Downloading https://files.pythonhosted.org/packages/3e/2c/188d040bd4cf99012d0e847a3d95bf1ef1f783859b09eb9f736950af84f0/cbor2-5.0.1.tar.gz (72kB)\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-3fenoodl/cbor2/setup.py\", line 52, in <module>\r\n        **kwargs\r\n      File \"/usr/lib/python3/dist-packages/setuptools/__init__.py\", line 128, in setup\r\n        _install_setup_requires(attrs)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/__init__.py\", line 121, in _install_setup_requires\r\n        dist.parse_config_files(ignore_option_errors=True)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 491, in parse_config_files\r\n        _Distribution.parse_config_files(self, filenames=filenames)\r\n      File \"/usr/lib/python3.6/distutils/dist.py\", line 395, in parse_config_files\r\n        parser.read(filename)\r\n      File \"/usr/lib/python3.6/configparser.py\", line 697, in read\r\n        self._read(fp, filename)\r\n      File \"/usr/lib/python3.6/configparser.py\", line 1015, in _read\r\n        for lineno, line in enumerate(fp, start=1):\r\n      File \"/usr/lib/python3.6/encodings/ascii.py\", line 26, in decode\r\n        return codecs.ascii_decode(input, self.errors)[0]\r\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 149: ordinal not in range(128)\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-3fenoodl/cbor2/\r\nThe command '/bin/sh -c pip3 install cbor2==5.0.1' returned a non-zero code: 1\r\n```\r\n\r\nIt is possible to configure the locale before running `pip`, for example by setting it to `en_US.UTF-8`, as suggested in https://github.com/dbohdan/remarshal/issues/24#issuecomment-599047829, but it would be nice if it was possible to install `cbor2` for any system locale.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/71", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/71/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/71/events", "html_url": "https://github.com/agronholm/cbor2/issues/71", "id": 564870593, "node_id": "MDU6SXNzdWU1NjQ4NzA1OTM=", "number": 71, "title": "CBORSimpleValue differs between C lib and Python", "user": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-13T18:28:13Z", "updated_at": "2020-03-19T00:05:44Z", "closed_at": "2020-03-19T00:05:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "A CBORSimpleValue returned by the C library is a subclass of namedtuple instead of the object defined in `cbor2/types.py`\r\n\r\nI have a fix on the way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/70", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/70/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/70/events", "html_url": "https://github.com/agronholm/cbor2/issues/70", "id": 560555604, "node_id": "MDU6SXNzdWU1NjA1NTU2MDQ=", "number": 70, "title": "Differing results on Python 2.7 and 3.7 when decoding canonical data", "user": {"login": "thephez", "id": 8145677, "node_id": "MDQ6VXNlcjgxNDU2Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8145677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thephez", "html_url": "https://github.com/thephez", "followers_url": "https://api.github.com/users/thephez/followers", "following_url": "https://api.github.com/users/thephez/following{/other_user}", "gists_url": "https://api.github.com/users/thephez/gists{/gist_id}", "starred_url": "https://api.github.com/users/thephez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thephez/subscriptions", "organizations_url": "https://api.github.com/users/thephez/orgs", "repos_url": "https://api.github.com/users/thephez/repos", "events_url": "https://api.github.com/users/thephez/events{/privacy}", "received_events_url": "https://api.github.com/users/thephez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-05T18:37:44Z", "updated_at": "2020-02-06T12:58:18Z", "closed_at": "2020-02-06T12:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Stumbled across this today. When decoding the same bit of data, I'm getting results in different orders in Python2 vs 3. \r\n\r\nPython 3.7 is doing what I expect - I can encode the data and end up with the same result as the received, already encoded data. Python 2 provides a different result.\r\n\r\nI created a repl to show each case. The code is identical - only the Python version is different (cbor2 v5.0.1). You can find them here:\r\nPython 2.7 - https://repl.it/@thephez/cbor2-py27\r\nPython 3.7 - https://repl.it/@thephez/cbor2-py37", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/67", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/67/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/67/events", "html_url": "https://github.com/agronholm/cbor2/issues/67", "id": 550893868, "node_id": "MDU6SXNzdWU1NTA4OTM4Njg=", "number": 67, "title": "wheel fails to build for 4.2.0 on python 3.6.1", "user": {"login": "patr1ckm", "id": 427445, "node_id": "MDQ6VXNlcjQyNzQ0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/427445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patr1ckm", "html_url": "https://github.com/patr1ckm", "followers_url": "https://api.github.com/users/patr1ckm/followers", "following_url": "https://api.github.com/users/patr1ckm/following{/other_user}", "gists_url": "https://api.github.com/users/patr1ckm/gists{/gist_id}", "starred_url": "https://api.github.com/users/patr1ckm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patr1ckm/subscriptions", "organizations_url": "https://api.github.com/users/patr1ckm/orgs", "repos_url": "https://api.github.com/users/patr1ckm/repos", "events_url": "https://api.github.com/users/patr1ckm/events{/privacy}", "received_events_url": "https://api.github.com/users/patr1ckm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2020-01-16T15:49:14Z", "updated_at": "2020-01-20T17:37:27Z", "closed_at": "2020-01-20T17:37:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n  Running setup.py bdist_wheel for cbor2 ... -\b \b\\\b \berror\r\n  Complete output from command /home/circleci/project/venv/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-af288b_v/cbor2/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /tmp/tmped_mpc5xpip-wheel- --python-tag cp36:\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-3.6\r\n  creating build/lib.linux-x86_64-3.6/cbor2\r\n  copying cbor2/__init__.py -> build/lib.linux-x86_64-3.6/cbor2\r\n  copying cbor2/types.py -> build/lib.linux-x86_64-3.6/cbor2\r\n  copying cbor2/decoder.py -> build/lib.linux-x86_64-3.6/cbor2\r\n  copying cbor2/compat.py -> build/lib.linux-x86_64-3.6/cbor2\r\n  copying cbor2/encoder.py -> build/lib.linux-x86_64-3.6/cbor2\r\n  running build_ext\r\n  building '_cbor2' extension\r\n  creating build/temp.linux-x86_64-3.6\r\n  creating build/temp.linux-x86_64-3.6/source\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/circleci/project/venv/include -I/usr/local/include/python3.6m -c source/module.c -o build/temp.linux-x86_64-3.6/source/module.o\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/circleci/project/venv/include -I/usr/local/include/python3.6m -c source/encoder.c -o build/temp.linux-x86_64-3.6/source/encoder.o\r\n  source/encoder.c: In function \u2018CBOREncoder_init\u2019:\r\n  source/encoder.c:162:36: warning: initialization from incompatible pointer type\r\n           PyObject *datetime_class = PyDateTimeAPI->DateType;\r\n                                      ^\r\n  source/encoder.c: In function \u2018encode_decimal_digits\u2019:\r\n  source/encoder.c:1010:21: error: \u2018for\u2019 loop initial declarations are only allowed in C99 or C11 mode\r\n                       for (Py_ssize_t i = 0; i < length; ++i) {\r\n                       ^\r\n  source/encoder.c:1010:21: note: use option -std=c99, -std=gnu99, -std=c11 or -std=gnu11 to compile your code\r\n  error: command 'gcc' failed with exit status 1\r\n  \r\n  ----------------------------------------\r\n  Failed building wheel for cbor2\r\n  Running setup.py clean for cbor2\r\n  Running setup.py bdist_wheel for pyrsistent ... -\b \b\\\b \b|\b \b/\b \bdone\r\n  Stored in directory: /home/circleci/.cache/pip/wheels/b5/78/ac/f26a78a989cd97f90981d96a560d7e1da5e1307284301d94e8\r\nSuccessfully built pubnub pyyaml pyrsistent\r\nFailed to build cbor2\r\nInstalling collected packages: idna, chardet, certifi, urllib3, requests, pycryptodomex, cbor2, pubnub, pyrsistent, jsonschema, click, jsonref, pyyaml, joblib, cloudpickle, civis, numpy, patsy, pytz, python-dateutil, pandas, scipy, scikit-learn\r\n  Running setup.py install for cbor2 ... -\b \b\\\b \berror\r\n    Complete output from command /home/circleci/project/venv/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-af288b_v/cbor2/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-b2dsp124-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/circleci/project/venv/include/site/python3.6/cbor2:\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.linux-x86_64-3.6\r\n    creating build/lib.linux-x86_64-3.6/cbor2\r\n    copying cbor2/__init__.py -> build/lib.linux-x86_64-3.6/cbor2\r\n    copying cbor2/types.py -> build/lib.linux-x86_64-3.6/cbor2\r\n    copying cbor2/decoder.py -> build/lib.linux-x86_64-3.6/cbor2\r\n    copying cbor2/compat.py -> build/lib.linux-x86_64-3.6/cbor2\r\n    copying cbor2/encoder.py -> build/lib.linux-x86_64-3.6/cbor2\r\n    running build_ext\r\n    building '_cbor2' extension\r\n    creating build/temp.linux-x86_64-3.6\r\n    creating build/temp.linux-x86_64-3.6/source\r\n    gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/circleci/project/venv/include -I/usr/local/include/python3.6m -c source/module.c -o build/temp.linux-x86_64-3.6/source/module.o\r\n    gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/home/circleci/project/venv/include -I/usr/local/include/python3.6m -c source/encoder.c -o build/temp.linux-x86_64-3.6/source/encoder.o\r\n    source/encoder.c: In function \u2018CBOREncoder_init\u2019:\r\n    source/encoder.c:162:36: warning: initialization from incompatible pointer type\r\n             PyObject *datetime_class = PyDateTimeAPI->DateType;\r\n                                        ^\r\n    source/encoder.c: In function \u2018encode_decimal_digits\u2019:\r\n    source/encoder.c:1010:21: error: \u2018for\u2019 loop initial declarations are only allowed in C99 or C11 mode\r\n                         for (Py_ssize_t i = 0; i < length; ++i) {\r\n                         ^\r\n    source/encoder.c:1010:21: note: use option -std=c99, -std=gnu99, -std=c11 or -std=gnu11 to compile your code\r\n    error: command 'gcc' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\nCommand \"/home/circleci/project/venv/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-af288b_v/cbor2/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-b2dsp124-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/circleci/project/venv/include/site/python3.6/cbor2\" failed with error code 1 in /tmp/pip-build-af288b_v/cbor2/\r\nYou are using pip version 9.0.1, however version 19.3.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\r\nExited with code exit status 1\r\n```\r\n\r\nUpgrading pip/wheel does not address the issue, and reverting back to the previous release does `4.1.2`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/63", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/63/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/63/events", "html_url": "https://github.com/agronholm/cbor2/issues/63", "id": 513402117, "node_id": "MDU6SXNzdWU1MTM0MDIxMTc=", "number": 63, "title": "JSON Compatible flag is not used", "user": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716910, "node_id": "MDU6TGFiZWwzODk3MTY5MTA=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}, {"id": 389716912, "node_id": "MDU6TGFiZWwzODk3MTY5MTI=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T16:05:50Z", "updated_at": "2019-10-29T10:32:23Z", "closed_at": "2019-10-29T10:32:23Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There is a json_compatible flag mentioned in the documentation and in the encoder __slots__ attribute, but it appears to be unused.\r\n\r\nAny objection to removing this, or is there an implementation somewhere?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/62", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/62/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/62/events", "html_url": "https://github.com/agronholm/cbor2/issues/62", "id": 507522507, "node_id": "MDU6SXNzdWU1MDc1MjI1MDc=", "number": 62, "title": "Docs/Clarification", "user": {"login": "felipeochoa", "id": 2739312, "node_id": "MDQ6VXNlcjI3MzkzMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2739312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felipeochoa", "html_url": "https://github.com/felipeochoa", "followers_url": "https://api.github.com/users/felipeochoa/followers", "following_url": "https://api.github.com/users/felipeochoa/following{/other_user}", "gists_url": "https://api.github.com/users/felipeochoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/felipeochoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felipeochoa/subscriptions", "organizations_url": "https://api.github.com/users/felipeochoa/orgs", "repos_url": "https://api.github.com/users/felipeochoa/repos", "events_url": "https://api.github.com/users/felipeochoa/events{/privacy}", "received_events_url": "https://api.github.com/users/felipeochoa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-15T22:54:40Z", "updated_at": "2019-10-22T01:49:23Z", "closed_at": "2019-10-22T01:49:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `CBOREncoder` docstring says that setting `value_sharing` to `True`, \"allows more efficient serializing of repeated values\".\r\n\r\nThe main docs only reference this param in terms of cyclic structures, so I was wondering if there was a benefit to allowing this on non-cyclic but repetitive structures. Something like:\r\n\r\n```python\r\na = <something large but without cycles>\r\ncbor2.dumps({'a': a, 'x': a}, value_sharing=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/60", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/60/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/60/events", "html_url": "https://github.com/agronholm/cbor2/issues/60", "id": 499258533, "node_id": "MDU6SXNzdWU0OTkyNTg1MzM=", "number": 60, "title": "requesting support for decoding multiple objects", "user": {"login": "toravir", "id": 12477550, "node_id": "MDQ6VXNlcjEyNDc3NTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/12477550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toravir", "html_url": "https://github.com/toravir", "followers_url": "https://api.github.com/users/toravir/followers", "following_url": "https://api.github.com/users/toravir/following{/other_user}", "gists_url": "https://api.github.com/users/toravir/gists{/gist_id}", "starred_url": "https://api.github.com/users/toravir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toravir/subscriptions", "organizations_url": "https://api.github.com/users/toravir/orgs", "repos_url": "https://api.github.com/users/toravir/repos", "events_url": "https://api.github.com/users/toravir/events{/privacy}", "received_events_url": "https://api.github.com/users/toravir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-27T06:23:53Z", "updated_at": "2019-10-29T04:58:24Z", "closed_at": "2019-10-29T04:58:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the logs are in cbor format, there are multiple objects - they are NOT in an array - just objects back to back to back. Example like:\r\n\r\n```\r\n{\"price\":100,\"Desc\":\"Hundred Dollars\",\"level\":\"info\",\"time\":\"2019-09-23T11:25:50-07:00\"}\r\n{\"price\":1000,\"Desc\":\"Thousand Dollars\",\"level\":\"warn\",\"time\":\"2019-09-23T11:25:50-07:00\"}\r\n{\"price\":1000,\"Desc\":\"Without TS\",\"level\":\"warn\"}\r\n```\r\nload() and loads() just returns the first log line.\r\n\r\nOne such logger is github.com/rs/zerolog - the binary log format is a CBOR.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/58", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/58/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/58/events", "html_url": "https://github.com/agronholm/cbor2/issues/58", "id": 491191920, "node_id": "MDU6SXNzdWU0OTExOTE5MjA=", "number": 58, "title": "cbor2 'types.py' module triggers deprecation warning", "user": {"login": "ddiminnie", "id": 9123285, "node_id": "MDQ6VXNlcjkxMjMyODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9123285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddiminnie", "html_url": "https://github.com/ddiminnie", "followers_url": "https://api.github.com/users/ddiminnie/followers", "following_url": "https://api.github.com/users/ddiminnie/following{/other_user}", "gists_url": "https://api.github.com/users/ddiminnie/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddiminnie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddiminnie/subscriptions", "organizations_url": "https://api.github.com/users/ddiminnie/orgs", "repos_url": "https://api.github.com/users/ddiminnie/repos", "events_url": "https://api.github.com/users/ddiminnie/events{/privacy}", "received_events_url": "https://api.github.com/users/ddiminnie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-09T16:12:39Z", "updated_at": "2019-09-09T17:51:39Z", "closed_at": "2019-09-09T17:51:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not a high-priority issue (for reasons that will become apparent below), but it will need to be addressed eventually.\r\n\r\nThe types.py module includes the following import statement:\r\n\r\n```python\r\nfrom collections import Mapping\r\n```\r\n\r\nThis import triggers the following deprecation warning under python 3.7:\r\n\r\n```\r\nDeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n```\r\n\r\nAccording to the [python 3.8.0b4 changelog](https://docs.python.org/3.8/whatsnew/changelog.html#changelog), the decision to remove the ABC aliases from the collections module has been bumped to python 3.9, so fixing this warning is not immediately necessary (as mentioned above)... but I thought you folks would like to know about the potential problem before it becomes... um... a problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/56", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/56/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/56/events", "html_url": "https://github.com/agronholm/cbor2/issues/56", "id": 468646364, "node_id": "MDU6SXNzdWU0Njg2NDYzNjQ=", "number": 56, "title": "Build fails on macOS (various duplicate symbols)", "user": {"login": "jonashoechst", "id": 13436604, "node_id": "MDQ6VXNlcjEzNDM2NjA0", "avatar_url": "https://avatars0.githubusercontent.com/u/13436604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashoechst", "html_url": "https://github.com/jonashoechst", "followers_url": "https://api.github.com/users/jonashoechst/followers", "following_url": "https://api.github.com/users/jonashoechst/following{/other_user}", "gists_url": "https://api.github.com/users/jonashoechst/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashoechst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashoechst/subscriptions", "organizations_url": "https://api.github.com/users/jonashoechst/orgs", "repos_url": "https://api.github.com/users/jonashoechst/repos", "events_url": "https://api.github.com/users/jonashoechst/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashoechst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-16T13:12:08Z", "updated_at": "2019-10-28T16:19:56Z", "closed_at": "2019-10-28T16:19:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I try to build and install the most recent version of cbor2 on macOS, linking fails because of various duplicate symbol linking errors: \r\n\r\n```\r\n...\r\nclang -bundle -undefined dynamic_lookup -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk build/temp.macosx-10.14-x86_64-3.7/source/module.o build/temp.macosx-10.14-x86_64-3.7/source/encoder.o build/temp.macosx-10.14-x86_64-3.7/source/decoder.o build/temp.macosx-10.14-x86_64-3.7/source/tags.o build/temp.macosx-10.14-x86_64-3.7/source/halffloat.o -L/usr/local/lib -L/usr/local/opt/openssl/lib -L/usr/local/opt/sqlite/lib -lm -o build/lib.macosx-10.14-x86_64-3.7/_cbor2.cpython-37m-darwin.so\r\nduplicate symbol _CBOREncoderType in:\r\n    build/temp.macosx-10.14-x86_64-3.7/source/module.o\r\n    build/temp.macosx-10.14-x86_64-3.7/source/encoder.o\r\nduplicate symbol _CBORTagType in:\r\n    build/temp.macosx-10.14-x86_64-3.7/source/module.o\r\n    build/temp.macosx-10.14-x86_64-3.7/source/encoder.o\r\nduplicate symbol _CBORDecoderType in:\r\n    build/temp.macosx-10.14-x86_64-3.7/source/module.o\r\n    build/temp.macosx-10.14-x86_64-3.7/source/decoder.o\r\nduplicate symbol _CBORTagType in:\r\n    build/temp.macosx-10.14-x86_64-3.7/source/module.o\r\n    build/temp.macosx-10.14-x86_64-3.7/source/decoder.o\r\nduplicate symbol _CBORTagType in:\r\n    build/temp.macosx-10.14-x86_64-3.7/source/module.o\r\n    build/temp.macosx-10.14-x86_64-3.7/source/tags.o\r\nld: 5 duplicate symbols for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nerror: command 'clang' failed with exit status 1\r\n```\r\n\r\nHaving a starting point, I think I could help debug the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/55", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/55/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/55/events", "html_url": "https://github.com/agronholm/cbor2/issues/55", "id": 461515190, "node_id": "MDU6SXNzdWU0NjE1MTUxOTA=", "number": 55, "title": "Decoding the full contents of a cbor-encoded urllib3 HTTPResponse", "user": {"login": "urieli", "id": 851962, "node_id": "MDQ6VXNlcjg1MTk2Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/851962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urieli", "html_url": "https://github.com/urieli", "followers_url": "https://api.github.com/users/urieli/followers", "following_url": "https://api.github.com/users/urieli/following{/other_user}", "gists_url": "https://api.github.com/users/urieli/gists{/gist_id}", "starred_url": "https://api.github.com/users/urieli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urieli/subscriptions", "organizations_url": "https://api.github.com/users/urieli/orgs", "repos_url": "https://api.github.com/users/urieli/repos", "events_url": "https://api.github.com/users/urieli/events{/privacy}", "received_events_url": "https://api.github.com/users/urieli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-27T12:59:53Z", "updated_at": "2019-06-28T08:46:17Z", "closed_at": "2019-06-28T08:41:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using cbor2 version 4.1.2 on Python 2.7.\r\n\r\nI'm receiving a cbor-encoded [urllib3.response.HTTPResponse](https://urllib3.readthedocs.io/en/latest/reference/#urllib3.response.HTTPResponse), which implements [io.ioBase](https://docs.python.org/2.7/library/io.html#io.IOBase).\r\n\r\nHow do I use cbor2 to decode this stream? Do I use `load`, `loads` or `CBORDecoder`? Can you give an example?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/53", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/53/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/53/events", "html_url": "https://github.com/agronholm/cbor2/issues/53", "id": 459519698, "node_id": "MDU6SXNzdWU0NTk1MTk2OTg=", "number": 53, "title": "Mem-leak in loads()", "user": {"login": "waveform80", "id": 1076190, "node_id": "MDQ6VXNlcjEwNzYxOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1076190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waveform80", "html_url": "https://github.com/waveform80", "followers_url": "https://api.github.com/users/waveform80/followers", "following_url": "https://api.github.com/users/waveform80/following{/other_user}", "gists_url": "https://api.github.com/users/waveform80/gists{/gist_id}", "starred_url": "https://api.github.com/users/waveform80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waveform80/subscriptions", "organizations_url": "https://api.github.com/users/waveform80/orgs", "repos_url": "https://api.github.com/users/waveform80/repos", "events_url": "https://api.github.com/users/waveform80/events{/privacy}", "received_events_url": "https://api.github.com/users/waveform80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-22T23:26:41Z", "updated_at": "2019-10-28T13:48:28Z", "closed_at": "2019-10-28T13:48:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Argh, I was afraid I hadn't caught everything in the C-based implementation and so it's turned out. When testing the C-based implementation on piwheels we had it fall over a couple of times with out-of-mem errors. A bit of further testing revealed there was definitely an issue *somewhere* in the C-based implementation but I'm afraid it's taken me about a week to track down exactly where. Turns out it's a trivial ref-leak in the C-based loads() function (it leaks the byte-string it's passed). I've got a patch in the works; just trying to figure out an extension to the ref-leak testing script to catch things like this a bit more easily in future!\r\n\r\nAnyway, sorry about that - will post the PR hopefully tomorrow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/50", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/50/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/50/events", "html_url": "https://github.com/agronholm/cbor2/issues/50", "id": 443950563, "node_id": "MDU6SXNzdWU0NDM5NTA1NjM=", "number": 50, "title": "Difference between Float and Double types when writing to CBOR", "user": {"login": "abrighton", "id": 4173116, "node_id": "MDQ6VXNlcjQxNzMxMTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4173116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrighton", "html_url": "https://github.com/abrighton", "followers_url": "https://api.github.com/users/abrighton/followers", "following_url": "https://api.github.com/users/abrighton/following{/other_user}", "gists_url": "https://api.github.com/users/abrighton/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrighton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrighton/subscriptions", "organizations_url": "https://api.github.com/users/abrighton/orgs", "repos_url": "https://api.github.com/users/abrighton/repos", "events_url": "https://api.github.com/users/abrighton/events{/privacy}", "received_events_url": "https://api.github.com/users/abrighton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716912, "node_id": "MDU6TGFiZWwzODk3MTY5MTI=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-14T14:32:32Z", "updated_at": "2019-05-14T19:50:30Z", "closed_at": "2019-05-14T19:50:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to differentiate between float and double when calling cbor2.dumps()? \r\nI've run into the problem that all floating point values written from Python are treated as double on the receiving end (Scala code). Is there some way to hint that certain values or arrays should be float instead of double?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/49", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/49/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/49/events", "html_url": "https://github.com/agronholm/cbor2/issues/49", "id": 441669239, "node_id": "MDU6SXNzdWU0NDE2NjkyMzk=", "number": 49, "title": "schema validation using cddl fails against encoded strings", "user": {"login": "Dollyg", "id": 10329479, "node_id": "MDQ6VXNlcjEwMzI5NDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/10329479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dollyg", "html_url": "https://github.com/Dollyg", "followers_url": "https://api.github.com/users/Dollyg/followers", "following_url": "https://api.github.com/users/Dollyg/following{/other_user}", "gists_url": "https://api.github.com/users/Dollyg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dollyg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dollyg/subscriptions", "organizations_url": "https://api.github.com/users/Dollyg/orgs", "repos_url": "https://api.github.com/users/Dollyg/repos", "events_url": "https://api.github.com/users/Dollyg/events{/privacy}", "received_events_url": "https://api.github.com/users/Dollyg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-08T10:42:55Z", "updated_at": "2019-05-11T08:56:12Z", "closed_at": "2019-05-11T08:54:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a sample python script I have written to reproduce the issue\r\n\r\n```\r\nimport os.path\r\nfrom cbor2 import *\r\n\r\nmy_path = os.path.abspath(os.path.dirname(__file__))\r\ninput_cbor_path = os.path.join(my_path, \"event.cbor\")\r\n\r\nobj = {\r\n    \"x\": \"one\"\r\n}\r\nwith open(input_cbor_path, 'wb') as fp:\r\n    dump(obj, fp)\r\n\r\nwith open(input_cbor_path, 'rb') as fp:\r\n    parsed_obj = load(fp)\r\n    print parsed_obj\r\n```\r\n\r\nI am running the cddl tool to validate the encoded cbor against the schema\r\n\r\n`cddl event.cddl validate event.cbor`\r\n\r\nThe schema (event.cddl) is defined as below:\r\n```\r\nevent = {\r\n    x: tstr\r\n}\r\n```\r\n\r\nBy shallow inspection, it seems there is some issue with the way strings are encoded.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/47", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/47/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/47/events", "html_url": "https://github.com/agronholm/cbor2/issues/47", "id": 437124949, "node_id": "MDU6SXNzdWU0MzcxMjQ5NDk=", "number": 47, "title": "Combine cboar and cbor2?", "user": {"login": "waveform80", "id": 1076190, "node_id": "MDQ6VXNlcjEwNzYxOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1076190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waveform80", "html_url": "https://github.com/waveform80", "followers_url": "https://api.github.com/users/waveform80/followers", "following_url": "https://api.github.com/users/waveform80/following{/other_user}", "gists_url": "https://api.github.com/users/waveform80/gists{/gist_id}", "starred_url": "https://api.github.com/users/waveform80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waveform80/subscriptions", "organizations_url": "https://api.github.com/users/waveform80/orgs", "repos_url": "https://api.github.com/users/waveform80/repos", "events_url": "https://api.github.com/users/waveform80/events{/privacy}", "received_events_url": "https://api.github.com/users/waveform80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-04-25T10:29:26Z", "updated_at": "2020-01-10T15:54:54Z", "closed_at": "2020-01-10T15:54:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not so much an issue this one as a place for discussion of the possibility, raised in #44, of eventually combining the cboar and cbor2 projects (assuming I get cboar finished and released :).\r\n\r\nThe case *for* merging:\r\n\r\n* All cbor2 users get a decent, free speed boost\r\n* There's very little sacrifice of flexibility (though there is *some* - I've already locked down the initial set of encoders in cboar as an optimization because it led to a substantial speed boost)\r\n* There's no sacrifice of functionality (it's basically the same API, right down to the constructor arguments for CBOREncoder and CBORDecoder, though at the moment I haven't bothered with separate exception classes because I thought that bit of cbor2 was a bit odd - naturally I'd change that if the projects were to merge because backwards compatibility would be a concern)\r\n\r\nThe case *against* merging:\r\n\r\n* A C-based library would be less approachable for people to hack on\r\n* A C-based implementation doesn't have the *fairly* strong guarantee against memory leaks that a pure Python version has\r\n* My original thoughts for cboar were that it would remain an \"optimized cbor2\", i.e. cbor2 would be its \"upstream\" defining the functionality and API, and that for 99% of users it would be the library of choice while cboar would exist for the 1% running on weird platforms or with weird requirements who needed the speed and were prepared to sacrifice a little flexibility and the memory leak guarantees\r\n\r\nAnyway, I'm happy to be persuaded either way but before anybody at the cbor2 end makes a choice I should probably outline some of the changes I've made in [cboar] (there's not many and they're fairly subtle but they might be important). I'll try and find the time to document more of those tonight (or if you're happy perusing C, go have a look at the code!).\r\n\r\nDiscuss!\r\n\r\n[cboar]: https://github.com/waveform80/cboar", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/46", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/46/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/46/events", "html_url": "https://github.com/agronholm/cbor2/issues/46", "id": 437117999, "node_id": "MDU6SXNzdWU0MzcxMTc5OTk=", "number": 46, "title": "Shared immutable arrays aren't shared after load", "user": {"login": "waveform80", "id": 1076190, "node_id": "MDQ6VXNlcjEwNzYxOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1076190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waveform80", "html_url": "https://github.com/waveform80", "followers_url": "https://api.github.com/users/waveform80/followers", "following_url": "https://api.github.com/users/waveform80/following{/other_user}", "gists_url": "https://api.github.com/users/waveform80/gists{/gist_id}", "starred_url": "https://api.github.com/users/waveform80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waveform80/subscriptions", "organizations_url": "https://api.github.com/users/waveform80/orgs", "repos_url": "https://api.github.com/users/waveform80/repos", "events_url": "https://api.github.com/users/waveform80/events{/privacy}", "received_events_url": "https://api.github.com/users/waveform80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-25T10:13:05Z", "updated_at": "2019-04-29T09:23:03Z", "closed_at": "2019-04-29T09:23:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Another minor (and very esoteric) issue I came across in the course of writing cboar which is probably best illustrated by example:\r\n\r\n```python\r\n>>> import cbor2\r\n>>> a = (1, 2, 3)\r\n>>> b = ((a, a), a)\r\n>>> c = cbor2.loads(cbor2.dumps(b, value_sharing=True))\r\n>>> c\r\n[[[1, 2, 3], [1, 2, 3]], [1, 2, 3]]\r\n>>> c[0][0] is c[0][1]\r\nTrue\r\n>>> c[0][0] is c[1]\r\nTrue\r\n>>> c = cbor2.loads(cbor2.dumps(set(b), value_sharing=True))\r\nTraceback (most recent call last):\r\n  File \"/home/dave/projects/cbor2/cbor2/decoder.py\", line 399, in decode\r\n    return decoder(self, subtype, shareable_index)\r\n  File \"/home/dave/projects/cbor2/cbor2/decoder.py\", line 142, in decode_semantic\r\n    return semantic_decoder(decoder, value, shareable_index)\r\n  File \"/home/dave/projects/cbor2/cbor2/decoder.py\", line 253, in decode_set\r\n    return set(value)\r\nTypeError: unhashable type: 'list'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/dave/projects/cbor2/cbor2/decoder.py\", line 431, in loads\r\n    return CBORDecoder(fp, **kwargs).decode()\r\n  File \"/home/dave/projects/cbor2/cbor2/decoder.py\", line 403, in decode\r\n    raise CBORDecodeError('error decoding value at index {}: {}'.format(self.fp.tell(), e))\r\ncbor2.decoder.CBORDecodeError: error decoding value at index 21: unhashable type: 'list'\r\n>>> c = cbor2.loads(cbor2.dumps(set(b), value_sharing=False))\r\n>>> c\r\n{((1, 2, 3), (1, 2, 3)), (1, 2, 3)}\r\n```\r\n\r\nThe reason this occurs is that `decode_array` the function creates the list in which to decode the contents and sets it as the current shareable (assuming a semantic shareable tag has preceded it). However, if immutable is also set (as it will be when encoding the set in the above example) then once the array has been filled it is replaced with a tuple before return, but the *shareable* that was set earlier is *still the list* (not the newly created tuple).\r\n\r\nIt's probably enough to simply replace the shareable after constructing the tuple (but before returning it). In cboar I've gone a slightly different route but that's because constructing a tuple and a list is rather similar at the C level (and it's a lot more efficient to construct the tuple on the fly than convert a list afterward, assuming the length is known up front).\r\n\r\nThere's probably a similar issue with `decode_map` when it's outputting a FrozenDict but I haven't come up with a test case for that yet. Anyway, I'll bash together another PR for this later on.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/44", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/44/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/44/events", "html_url": "https://github.com/agronholm/cbor2/issues/44", "id": 433966171, "node_id": "MDU6SXNzdWU0MzM5NjYxNzE=", "number": 44, "title": "Timestamp encoding throws away microseconds", "user": {"login": "waveform80", "id": 1076190, "node_id": "MDQ6VXNlcjEwNzYxOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1076190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waveform80", "html_url": "https://github.com/waveform80", "followers_url": "https://api.github.com/users/waveform80/followers", "following_url": "https://api.github.com/users/waveform80/following{/other_user}", "gists_url": "https://api.github.com/users/waveform80/gists{/gist_id}", "starred_url": "https://api.github.com/users/waveform80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waveform80/subscriptions", "organizations_url": "https://api.github.com/users/waveform80/orgs", "repos_url": "https://api.github.com/users/waveform80/repos", "events_url": "https://api.github.com/users/waveform80/events{/privacy}", "received_events_url": "https://api.github.com/users/waveform80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-16T20:17:43Z", "updated_at": "2019-06-03T13:46:20Z", "closed_at": "2019-06-03T13:46:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get the impression from `encode_datetime` in encoder.py (https://github.com/agronholm/cbor2/blob/master/cbor2/encoder.py#L138) that the intention for timestamp encoding is to calculate a floating-point value to encode. Unfortunately, integer division (// instead of /) is being used with the microseconds field. Given microseconds can never be >1000000 (the value it is being divided by), the result of the division will always be 0, effectively throwing the microseconds data away.\r\n\r\nFor example, under Python 3.5:\r\n\r\n```python3\r\n>>> import cbor2\r\n>>> import datetime as dt\r\n>>> ts = dt.datetime.now()\r\n>>> cbor2.loads(cbor2.dumps(ts, datetime_as_timestamp=1, timezone=dt.timezone.utc))\r\ndatetime.datetime(2019, 4, 16, 21, 16, 9, tzinfo=datetime.timezone.utc)\r\n>>> cbor2.loads(cbor2.dumps(ts, datetime_as_timestamp=0, timezone=dt.timezone.utc))\r\ndatetime.datetime(2019, 4, 16, 21, 16, 9, 167883, tzinfo=datetime.timezone.utc)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/43", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/43/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/43/events", "html_url": "https://github.com/agronholm/cbor2/issues/43", "id": 423741995, "node_id": "MDU6SXNzdWU0MjM3NDE5OTU=", "number": 43, "title": "Find a way to share objects by hash as well as id", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716913, "node_id": "MDU6TGFiZWwzODk3MTY5MTM=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-21T13:56:31Z", "updated_at": "2019-04-25T09:49:48Z", "closed_at": "2019-04-25T09:49:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now we only reference an object if it's exactly the same id.\r\nWe could however use the hash of the object whenever it is available to share objects since if the hashes are equal the objects should be equivalent and interchangeable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/38", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/38/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/38/events", "html_url": "https://github.com/agronholm/cbor2/issues/38", "id": 411720581, "node_id": "MDU6SXNzdWU0MTE3MjA1ODE=", "number": 38, "title": "setup.py fails on Python 2", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716907, "node_id": "MDU6TGFiZWwzODk3MTY5MDc=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-19T02:49:50Z", "updated_at": "2019-02-19T11:13:36Z", "closed_at": "2019-02-19T11:12:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Very likely caused by `author = Alex Gr\u00f6nholm` in setup.cfg\r\n\r\nObviously an upstream bug, but may be solvable with higher minimums.\r\n\r\n```py\r\n[    9s] [147/155] keeping python2-setuptools-40.7.2-1.1\r\n[    9s] [148/155] keeping python2-setuptools_scm-3.1.0-4.2\r\n...\r\n[   19s] + /usr/bin/python2 setup.py build '--executable=/usr/bin/python2 -s'\r\n[   20s] Traceback (most recent call last):\r\n[   20s]   File \"setup.py\", line 10, in <module>\r\n[   20s]     'setuptools_scm >= 1.7.0'\r\n[   20s]   File \"/usr/lib/python2.7/site-packages/setuptools/__init__.py\", line 144, in setup\r\n[   20s]     _install_setup_requires(attrs)\r\n[   20s]   File \"/usr/lib/python2.7/site-packages/setuptools/__init__.py\", line 137, in _install_setup_requires\r\n[   20s]     dist.parse_config_files(ignore_option_errors=True)\r\n[   20s]   File \"/usr/lib/python2.7/site-packages/setuptools/dist.py\", line 702, in parse_config_files\r\n[   20s]     self._parse_config_files(filenames=filenames)\r\n[   20s]   File \"/usr/lib/python2.7/site-packages/setuptools/dist.py\", line 599, in _parse_config_files\r\n[   20s]     (parser.read_file if six.PY3 else parser.readfp)(reader)\r\n[   20s]   File \"/usr/lib64/python2.7/ConfigParser.py\", line 324, in readfp\r\n[   20s]     self._read(fp, filename)\r\n[   20s]   File \"/usr/lib64/python2.7/ConfigParser.py\", line 479, in _read\r\n[   20s]     line = fp.readline()\r\n[   20s]   File \"/usr/lib64/python2.7/encodings/ascii.py\", line 26, in decode\r\n[   21s]     return codecs.ascii_decode(input, self.errors)[0]\r\n[   21s] UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 149: ordinal not in range(128)\r\n[   21s] error: Bad exit status from /var/tmp/rpm-tmp.9bXmyv (%build)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/37", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/37/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/37/events", "html_url": "https://github.com/agronholm/cbor2/issues/37", "id": 408536848, "node_id": "MDU6SXNzdWU0MDg1MzY4NDg=", "number": 37, "title": "dates are encoded as datetimes", "user": {"login": "Changaco", "id": 1581590, "node_id": "MDQ6VXNlcjE1ODE1OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1581590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Changaco", "html_url": "https://github.com/Changaco", "followers_url": "https://api.github.com/users/Changaco/followers", "following_url": "https://api.github.com/users/Changaco/following{/other_user}", "gists_url": "https://api.github.com/users/Changaco/gists{/gist_id}", "starred_url": "https://api.github.com/users/Changaco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Changaco/subscriptions", "organizations_url": "https://api.github.com/users/Changaco/orgs", "repos_url": "https://api.github.com/users/Changaco/repos", "events_url": "https://api.github.com/users/Changaco/events{/privacy}", "received_events_url": "https://api.github.com/users/Changaco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-10T13:48:26Z", "updated_at": "2019-10-28T13:19:40Z", "closed_at": "2019-10-28T13:19:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/agronholm/cbor2/blob/bf4acfd4ba08959a8b18f6c97981bae6d9bd22ca/cbor2/encoder.py#L156-L158\r\n\r\nIn my opinion the default behavior of the encoder should be to refuse to serialize an object if the decoder isn't capable of recreating it exactly. Converting to and from CBOR shouldn't be a lossy operation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/35", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/35/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/35/events", "html_url": "https://github.com/agronholm/cbor2/issues/35", "id": 402199559, "node_id": "MDU6SXNzdWU0MDIxOTk1NTk=", "number": 35, "title": "How to effiently encode a list of dicts", "user": {"login": "BrendanSimon", "id": 472245, "node_id": "MDQ6VXNlcjQ3MjI0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/472245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrendanSimon", "html_url": "https://github.com/BrendanSimon", "followers_url": "https://api.github.com/users/BrendanSimon/followers", "following_url": "https://api.github.com/users/BrendanSimon/following{/other_user}", "gists_url": "https://api.github.com/users/BrendanSimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrendanSimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrendanSimon/subscriptions", "organizations_url": "https://api.github.com/users/BrendanSimon/orgs", "repos_url": "https://api.github.com/users/BrendanSimon/repos", "events_url": "https://api.github.com/users/BrendanSimon/events{/privacy}", "received_events_url": "https://api.github.com/users/BrendanSimon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716912, "node_id": "MDU6TGFiZWwzODk3MTY5MTI=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-23T11:41:57Z", "updated_at": "2019-01-23T15:18:46Z", "closed_at": "2019-01-23T15:18:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a program that periodically accumulates a set of data into a dictionary and queues (appends) the dictionary to a list.  When the list gets to a certain size (60), the list is converted to CSV format (using csv.DictWriter).\r\n\r\nI want to make the transport usage more efficient and using CBOR seems like a good fit (instead of ascii text).\r\n\r\nIf I encode each dict using `dumps()`, then each key field is encoded and duplicated.  This is inefficient as there are multiple copies (60) of each key field.\r\n\r\nIs there a way to encode this more efficiently with cbor2, where the keys are only represented once? (with csv this encoded in the first line as a header).\r\n\r\nDoes using something like Pandas or Numpy (or even sqllite3?) and cattrs.unstructure() help in any way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/34", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/34/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/34/events", "html_url": "https://github.com/agronholm/cbor2/issues/34", "id": 383520883, "node_id": "MDU6SXNzdWUzODM1MjA4ODM=", "number": 34, "title": "Support encoding a stream without first reading it into memory", "user": {"login": "vashek", "id": 7998032, "node_id": "MDQ6VXNlcjc5OTgwMzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7998032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vashek", "html_url": "https://github.com/vashek", "followers_url": "https://api.github.com/users/vashek/followers", "following_url": "https://api.github.com/users/vashek/following{/other_user}", "gists_url": "https://api.github.com/users/vashek/gists{/gist_id}", "starred_url": "https://api.github.com/users/vashek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vashek/subscriptions", "organizations_url": "https://api.github.com/users/vashek/orgs", "repos_url": "https://api.github.com/users/vashek/repos", "events_url": "https://api.github.com/users/vashek/events{/privacy}", "received_events_url": "https://api.github.com/users/vashek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-22T12:46:26Z", "updated_at": "2018-12-04T18:32:51Z", "closed_at": "2018-12-04T14:24:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Support encoding a stream without first reading it into memory. Something like:\r\nx = cbor2.dumps({\"name\": open(\"file.zip\", \"rb\")})\r\n\r\n(The other part of this would be to then return a file-like object from which the caller can read the encoded stream, so that neither the input nor the output ever needs to be entirely in memory.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/29", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/29/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/29/events", "html_url": "https://github.com/agronholm/cbor2/issues/29", "id": 377836198, "node_id": "MDU6SXNzdWUzNzc4MzYxOTg=", "number": 29, "title": "Bigint encoding takes quadratic O(n^2) time", "user": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-11-06T13:00:57Z", "updated_at": "2018-11-12T10:27:37Z", "closed_at": "2018-11-12T10:27:37Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "> The code seems to be a long integer time complexity O (n ^ 2)?\r\n> Let's say I have a 10,000 bit integer\r\n\r\n_Originally posted by @fsssosei in https://github.com/agronholm/cbor2/issues/28#issuecomment-435314182_\r\n\r\nThe repeated divisions and inserting at the beginning of the list get noticeably slow once you get to about 100000 digits.\r\n\r\n```python\r\n>>> timeit(lambda: cbor2.dumps(2**200), number=50000)\r\n1.3028403969080813\r\n>>> timeit(lambda: cbor2.dumps(2**2000), number=50000)\r\n12.468400787521446\r\n>>> timeit(lambda: cbor2.dumps(2**20000), number=50000)\r\n710.3362544665841\r\n>>> \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/26", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/26/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/26/events", "html_url": "https://github.com/agronholm/cbor2/issues/26", "id": 370513998, "node_id": "MDU6SXNzdWUzNzA1MTM5OTg=", "number": 26, "title": "Overflow error encoding large float with canonical=True", "user": {"login": "bmerry", "id": 1963944, "node_id": "MDQ6VXNlcjE5NjM5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1963944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmerry", "html_url": "https://github.com/bmerry", "followers_url": "https://api.github.com/users/bmerry/followers", "following_url": "https://api.github.com/users/bmerry/following{/other_user}", "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions", "organizations_url": "https://api.github.com/users/bmerry/orgs", "repos_url": "https://api.github.com/users/bmerry/repos", "events_url": "https://api.github.com/users/bmerry/events{/privacy}", "received_events_url": "https://api.github.com/users/bmerry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-16T09:14:25Z", "updated_at": "2018-11-13T10:00:27Z", "closed_at": "2018-11-12T10:04:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n>>> cbor2.dumps(1e300, canonical=True)\r\nOverflowError: float too large to pack with f format\r\n```\r\n\r\nUsing cbor2 4.1.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/24", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/24/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/24/events", "html_url": "https://github.com/agronholm/cbor2/issues/24", "id": 369134309, "node_id": "MDU6SXNzdWUzNjkxMzQzMDk=", "number": 24, "title": "encode_decimal loses sign information.", "user": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-11T13:57:11Z", "updated_at": "2018-10-14T18:34:36Z", "closed_at": "2018-10-14T18:34:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "expected Behaviour:\r\n\r\n```python\r\n>>> from cbor2 import dumps, loads\r\n>>> from decimal import Decimal\r\n>>> a = Decimal('-0.3')\r\n>>> loads(dumps(a))\r\nDecimal('-0.3')\r\n```\r\nActual behaviour:\r\n\r\n```python\r\n>>> from cbor2 import dumps, loads\r\n>>> from decimal import Decimal\r\n>>> a = Decimal('-0.3')\r\n>>> loads(dumps(a))\r\nDecimal('0.3')\r\n```\r\n\r\nWhat's happening is that the sign information is not being added to the mantissa during encoding.\r\n\r\nI will submit a pull request if I get time in the next few days.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/18", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/18/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/18/events", "html_url": "https://github.com/agronholm/cbor2/issues/18", "id": 293175742, "node_id": "MDU6SXNzdWUyOTMxNzU3NDI=", "number": 18, "title": "Is it possible to return an iterator or generator for indefinite length data types?", "user": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-31T14:24:05Z", "updated_at": "2018-01-31T22:11:53Z", "closed_at": "2018-01-31T22:11:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Let's say I have a large file with streamed data items in a CBOR indefinite array.\r\n\r\nWhat's the most efficient way to stream them?\r\n\r\nAnd could this be done with more than one indefinite stream in a single file (for example if the app streaming to the file had to close it and then re-open it)\r\n\r\nI am thinking of something like the following:\r\n\r\n```python\r\nwith open('data.cbor', 'rb') as f:\r\n    s = load_streaming(f)\r\n    header = s[0]\r\n    rows = s[1] # returns an iterator\r\n    counter = 0\r\n    for row in rows:\r\n        if row[1] > 53:\r\n            counter += 1\r\n    print('count:', counter)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/15", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/15/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/15/events", "html_url": "https://github.com/agronholm/cbor2/issues/15", "id": 292168790, "node_id": "MDU6SXNzdWUyOTIxNjg3OTA=", "number": 15, "title": "CBOR supports Arrays and bytestrings as Map keys, but lists and bytearrays are mutable", "user": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716907, "node_id": "MDU6TGFiZWwzODk3MTY5MDc=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-28T01:40:51Z", "updated_at": "2018-04-08T09:16:50Z", "closed_at": "2018-04-08T09:16:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This may be a bit of an edge case, but this breaks any python implementation of `dict = loads('cbor map')` since by default Arrays are interpreted as lists.\r\n\r\nAn actual use case would be storing Markov Chains which are usually represented as a sequence of tokens as the key, with the following likely tokens stored as a list of values.\r\n\r\nHere's a failing test case:\r\n\r\n```python\r\n@pytest.mark.parametrize('payload, expected', [\r\n    ('A18201026178', {(1, 2): 'x'})\r\n])\r\ndef test_map(payload, expected):\r\n    decoded = loads(unhexlify(payload))\r\n    assert decoded == expected\r\n```\r\n\r\nA possible solution is to add an argument to any decoder that usually returns a mutable sequence to let it know that it's being called on a map key and to try and return an immutable type instead.\r\n\r\nAn even more crazy (and related) edge case is an indefinite length byte-stream being used as a map key, like this: `loads(unhexlify('a15f4100ff01'))` ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/14", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/14/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/14/events", "html_url": "https://github.com/agronholm/cbor2/issues/14", "id": 291939317, "node_id": "MDU6SXNzdWUyOTE5MzkzMTc=", "number": 14, "title": "Add tag 258 for sets", "user": {"login": "Sekenre", "id": 17621700, "node_id": "MDQ6VXNlcjE3NjIxNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/17621700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sekenre", "html_url": "https://github.com/Sekenre", "followers_url": "https://api.github.com/users/Sekenre/followers", "following_url": "https://api.github.com/users/Sekenre/following{/other_user}", "gists_url": "https://api.github.com/users/Sekenre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sekenre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sekenre/subscriptions", "organizations_url": "https://api.github.com/users/Sekenre/orgs", "repos_url": "https://api.github.com/users/Sekenre/repos", "events_url": "https://api.github.com/users/Sekenre/events{/privacy}", "received_events_url": "https://api.github.com/users/Sekenre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716909, "node_id": "MDU6TGFiZWwzODk3MTY5MDk=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-26T15:37:18Z", "updated_at": "2018-03-06T19:33:45Z", "closed_at": "2018-03-06T19:33:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "An optional tag type allows for python set() objects to be encoded and decoded.\r\n\r\n[Spec document:](https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/12", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/12/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/12/events", "html_url": "https://github.com/agronholm/cbor2/issues/12", "id": 278055087, "node_id": "MDU6SXNzdWUyNzgwNTUwODc=", "number": 12, "title": "Problem with mutliread of cbor2 object ... (generator pattern).", "user": {"login": "ChameleonRed", "id": 1080880, "node_id": "MDQ6VXNlcjEwODA4ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1080880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChameleonRed", "html_url": "https://github.com/ChameleonRed", "followers_url": "https://api.github.com/users/ChameleonRed/followers", "following_url": "https://api.github.com/users/ChameleonRed/following{/other_user}", "gists_url": "https://api.github.com/users/ChameleonRed/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChameleonRed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChameleonRed/subscriptions", "organizations_url": "https://api.github.com/users/ChameleonRed/orgs", "repos_url": "https://api.github.com/users/ChameleonRed/repos", "events_url": "https://api.github.com/users/ChameleonRed/events{/privacy}", "received_events_url": "https://api.github.com/users/ChameleonRed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-11-30T09:41:39Z", "updated_at": "2019-11-08T10:06:56Z", "closed_at": "2019-11-08T10:06:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to write many objects into one file without use list as proxy since it can be very large amount of data.\r\n\r\nHow to do it in cbor2 (see cbor works with EOFError pattern)?\r\nIt is works in cbor2 looks like bug I get different exception?\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:/Users/Cezary Wagner/PycharmProjects/chess-lichess-eval-parse/sandbox/decode_games/s01_pgn_to_cbor.py\", line 42, in <module>\r\n    main()\r\n  File \"C:/Users/Cezary Wagner/PycharmProjects/chess-lichess-eval-parse/sandbox/decode_games/s01_pgn_to_cbor.py\", line 34, in main\r\n    cbor2.load(f)\r\n  File \"C:\\root\\Python36-64\\lib\\site-packages\\cbor2\\decoder.py\", line 411, in load\r\n    return CBORDecoder(fp, **kwargs).decode()\r\n  File \"C:\\root\\Python36-64\\lib\\site-packages\\cbor2\\decoder.py\", line 363, in decode\r\n    .format(self.fp.tell(), e))\r\ncbor2.decoder.CBORDecodeError: error reading major type at index 10126175: index out of range\r\n```\r\n\r\n```\r\nimport datetime\r\n\r\nimport cbor2\r\nfrom cbor import cbor\r\n\r\nfrom cw_chess.perfect_pgn import PerfectPgnGamesOffsetsParser\r\n\r\n\r\ndef main():\r\n    start_time = datetime.datetime.utcnow()\r\n    with open('../parser_eval/data/out-6976.txt', newline='') as pgn, \\\r\n            open('data/games_offsets.cbor', 'wb') as f:\r\n        pgn_games_offset_parser = PerfectPgnGamesOffsetsParser(pgn)\r\n\r\n        for game_offset in pgn_games_offset_parser.games_offsets():\r\n            cbor.dump(game_offset, f)\r\n    end_time = datetime.datetime.utcnow()\r\n    print(end_time - start_time)\r\n\r\n    start_time = datetime.datetime.utcnow()\r\n    with open('data/games_offsets.cbor', 'rb') as f:\r\n        while True:\r\n            try:\r\n                cbor.load(f)\r\n            except EOFError:\r\n                break\r\n    end_time = datetime.datetime.utcnow()\r\n    print(end_time - start_time)\r\n\r\n    start_time = datetime.datetime.utcnow()\r\n    with open('data/games_offsets.cbor', 'rb') as f:\r\n        while True:\r\n            try:\r\n                cbor2.load(f)\r\n            except EOFError:\r\n                break\r\n    end_time = datetime.datetime.utcnow()\r\n    print(end_time - start_time)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/11", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/11/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/11/events", "html_url": "https://github.com/agronholm/cbor2/issues/11", "id": 251523606, "node_id": "MDU6SXNzdWUyNTE1MjM2MDY=", "number": 11, "title": "Truncated byte string inside Tag 24 does not raise exception", "user": {"login": "becarpenter", "id": 5808719, "node_id": "MDQ6VXNlcjU4MDg3MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5808719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/becarpenter", "html_url": "https://github.com/becarpenter", "followers_url": "https://api.github.com/users/becarpenter/followers", "following_url": "https://api.github.com/users/becarpenter/following{/other_user}", "gists_url": "https://api.github.com/users/becarpenter/gists{/gist_id}", "starred_url": "https://api.github.com/users/becarpenter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/becarpenter/subscriptions", "organizations_url": "https://api.github.com/users/becarpenter/orgs", "repos_url": "https://api.github.com/users/becarpenter/repos", "events_url": "https://api.github.com/users/becarpenter/events{/privacy}", "received_events_url": "https://api.github.com/users/becarpenter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716907, "node_id": "MDU6TGFiZWwzODk3MTY5MDc=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-20T23:59:39Z", "updated_at": "2017-08-21T20:22:46Z", "closed_at": "2017-08-21T20:14:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's a bit sad but I just reported this issue for the original Python cbor and I find it also applies to cbor2:\r\n\r\nIf cbor2.loads() encounters a Tag 24 (CBOR-in-CBOR) item whose byte string is accidentally truncated, it does not throw an exception; it simply returns a truncated result. Here's an example. The call 'cbor2.loads(raw2)' should raise an exception, because the Tag 24 length indicates 233 (0xe9) bytes but there are fewer than that. (Carsten Bormann confirms that the Ruby code does raise EOFError in this case.)\r\n\r\nTested on Windows/Python 3.\r\n\r\nimport cbor2\r\nraw1=bytes.fromhex('d81858e95900e686782650545220202a205a65726f636f6e662e5f687474702e5f7463702e646e732d73642e6f72672e82781853525620302030203830207a65726f636f6e662e6f72672e70412035302e3139372e3133382e31303178185458542022747874766572733d31222022706174683d2f22782b50545220202a204d756c74696361737420444e532e5f687474702e5f7463702e646e732d73642e6f72672e82781c53525620302030203830206d756c746963617374646e732e6f72672e70412035302e3139372e3133382e31303178185458542022747874766572733d31222022706174683d2f22')\r\nprint(cbor2.loads(raw1))\r\n##outputs: CBORTag(24, b'Y\\x00\\xe6\\x86x&PTR  * Zeroconf._http._tcp.dns-sd.org.\\x82x\\x18SRV 0 0 80 zeroconf.org.pA 50.197.138.101x\\x18TXT \"txtvers=1\" \"path=/\"x+PTR  * Multicast DNS._http._tcp.dns-sd.org.\\x82x\\x1cSRV 0 0 80 multicastdns.org.pA 50.197.138.101x\\x18TXT \"txtvers=1\" \"path=/\"')\r\nraw2=bytes.fromhex('d81858e95900e686782650545220202a205a65726f636f6e662e5f687474702e5f7463702e646e732d73642e6f72672e82781853525620302030203830207a65726f636f6e662e6f72672e70412035302e3139372e3133382e31303178185458542022747874766572733d31222022706174683d2f22782b50545220202a204d756c74696361737420444e532e5f687474702e5f7463702e646e732d73642e6f72672e82781c53525620302030203830206d756c746963617374646e732e6f72672e70412035302e3139372e3133382e31303178185458542022747874766572733d312220')\r\nprint(cbor2.loads(raw2))\r\n##outputs:  CBORTag(24, b'Y\\x00\\xe6\\x86x&PTR  * Zeroconf._http._tcp.dns-sd.org.\\x82x\\x18SRV 0 0 80 zeroconf.org.pA 50.197.138.101x\\x18TXT \"txtvers=1\" \"path=/\"x+PTR  * Multicast DNS._http._tcp.dns-sd.org.\\x82x\\x1cSRV 0 0 80 multicastdns.org.pA 50.197.138.101x\\x18TXT \"txtvers=1\" ')\r\nprint(len(raw1),len(raw2),0xe9)\r\n##outputs:  237, 229, 233\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/10", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/10/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/10/events", "html_url": "https://github.com/agronholm/cbor2/issues/10", "id": 247340343, "node_id": "MDU6SXNzdWUyNDczNDAzNDM=", "number": 10, "title": "How to serialize an object with a set as attribute???", "user": {"login": "frapik99", "id": 22319973, "node_id": "MDQ6VXNlcjIyMzE5OTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/22319973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frapik99", "html_url": "https://github.com/frapik99", "followers_url": "https://api.github.com/users/frapik99/followers", "following_url": "https://api.github.com/users/frapik99/following{/other_user}", "gists_url": "https://api.github.com/users/frapik99/gists{/gist_id}", "starred_url": "https://api.github.com/users/frapik99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frapik99/subscriptions", "organizations_url": "https://api.github.com/users/frapik99/orgs", "repos_url": "https://api.github.com/users/frapik99/repos", "events_url": "https://api.github.com/users/frapik99/events{/privacy}", "received_events_url": "https://api.github.com/users/frapik99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716912, "node_id": "MDU6TGFiZWwzODk3MTY5MTI=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-02T10:18:04Z", "updated_at": "2018-03-03T12:45:37Z", "closed_at": "2018-03-03T12:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nlet's supposed I have the following class:\r\n\r\n```\r\nclass Point(object):\r\n    def __init__(self, x, y):\r\n        self.x = x\r\n        self.y = y\r\n        self.set = set()\r\n```\r\n\r\nI need to serialize and deserialize it. I think the best approach would be to create a new encoder like the following:\r\n\r\n```\r\n@shareable_encoder  \r\n    def default_encoder(encoder, value):\r\n       print value\r\n       serialized_state = encoder.encode_to_bytes(value.__dict__)\r\n       encoder.encode(CBORTag(3000, serialized_state))\r\n```\r\n\r\nThe problem is that a ```set``` object does not have ```__dict__``` how should I approach in this case?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/9", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/9/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/9/events", "html_url": "https://github.com/agronholm/cbor2/issues/9", "id": 245829209, "node_id": "MDU6SXNzdWUyNDU4MjkyMDk=", "number": 9, "title": "Use OrderedDict to ensure re-encoded CBOR matches original CBOR", "user": {"login": "xachin", "id": 409807, "node_id": "MDQ6VXNlcjQwOTgwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/409807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xachin", "html_url": "https://github.com/xachin", "followers_url": "https://api.github.com/users/xachin/followers", "following_url": "https://api.github.com/users/xachin/following{/other_user}", "gists_url": "https://api.github.com/users/xachin/gists{/gist_id}", "starred_url": "https://api.github.com/users/xachin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xachin/subscriptions", "organizations_url": "https://api.github.com/users/xachin/orgs", "repos_url": "https://api.github.com/users/xachin/repos", "events_url": "https://api.github.com/users/xachin/events{/privacy}", "received_events_url": "https://api.github.com/users/xachin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-26T19:29:47Z", "updated_at": "2018-03-03T12:46:50Z", "closed_at": "2018-03-03T12:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if you decode a CBOR that contains a map of inner maps and then re-encode the result back to CBOR then the re-encoded CBOR does not match the original CBOR.\r\n\r\nThis is because Python's dictionary does not preserve the key order. If an OrderedDict is used to represent CBOR maps in Python then this issue can be resolved.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/8", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/8/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/8/events", "html_url": "https://github.com/agronholm/cbor2/issues/8", "id": 245392870, "node_id": "MDU6SXNzdWUyNDUzOTI4NzA=", "number": 8, "title": "Error ingesting datetime with fractional seconds", "user": {"login": "BSipos-RKF", "id": 2365205, "node_id": "MDQ6VXNlcjIzNjUyMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2365205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BSipos-RKF", "html_url": "https://github.com/BSipos-RKF", "followers_url": "https://api.github.com/users/BSipos-RKF/followers", "following_url": "https://api.github.com/users/BSipos-RKF/following{/other_user}", "gists_url": "https://api.github.com/users/BSipos-RKF/gists{/gist_id}", "starred_url": "https://api.github.com/users/BSipos-RKF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BSipos-RKF/subscriptions", "organizations_url": "https://api.github.com/users/BSipos-RKF/orgs", "repos_url": "https://api.github.com/users/BSipos-RKF/repos", "events_url": "https://api.github.com/users/BSipos-RKF/events{/privacy}", "received_events_url": "https://api.github.com/users/BSipos-RKF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716908, "node_id": "MDU6TGFiZWwzODk3MTY5MDg=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-25T12:59:57Z", "updated_at": "2017-12-01T19:00:08Z", "closed_at": "2017-12-01T19:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the cbor2.load encounters a text-string-encoded date-time-tagged value which contains fractional seconds, the cbor2 library raises an `cbor2.decoder.CBORDecodeError` exception.\r\n\r\nThis occurs for string literals, for example '2017-07-22T00:24:07.236Z' and the library also fails loopback reading of library encoded date-times, for example:\r\n`import cbor2\r\nimport datetime\r\nimport pytz\r\ncbor2.loads(cbor2.dumps(datetime.datetime(2004, 5, 6, 7, 8, 9, tzinfo=pytz.utc)))\r\ncbor2.loads(cbor2.dumps(datetime.datetime(2004, 5, 6, 7, 8, 9, 10, tzinfo=pytz.utc)))\r\n`\r\nresults in exception:\r\n`cbor2.decoder.CBORDecodeError: error decoding value at index 30: microsecond must be in 0..999999`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/6", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/6/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/6/events", "html_url": "https://github.com/agronholm/cbor2/issues/6", "id": 191246475, "node_id": "MDU6SXNzdWUxOTEyNDY0NzU=", "number": 6, "title": "Canonical cbor", "user": {"login": "jkbbwr", "id": 307167, "node_id": "MDQ6VXNlcjMwNzE2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/307167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkbbwr", "html_url": "https://github.com/jkbbwr", "followers_url": "https://api.github.com/users/jkbbwr/followers", "following_url": "https://api.github.com/users/jkbbwr/following{/other_user}", "gists_url": "https://api.github.com/users/jkbbwr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkbbwr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkbbwr/subscriptions", "organizations_url": "https://api.github.com/users/jkbbwr/orgs", "repos_url": "https://api.github.com/users/jkbbwr/repos", "events_url": "https://api.github.com/users/jkbbwr/events{/privacy}", "received_events_url": "https://api.github.com/users/jkbbwr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 389716909, "node_id": "MDU6TGFiZWwzODk3MTY5MDk=", "url": "https://api.github.com/repos/agronholm/cbor2/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-11-23T11:28:09Z", "updated_at": "2018-03-02T09:05:32Z", "closed_at": "2018-03-02T09:05:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can this library support canonical encoding\r\n\r\nThe RFC has some suggestions for canonical encoding, the most important is map ordering. Can this library support the ordering for the maps \r\n\r\n>    o  The keys in every map must be sorted lowest value to highest.\r\n      Sorting is performed on the bytes of the representation of the key\r\n      data items without paying attention to the 3/5 bit splitting for\r\n      major types.  (Note that this rule allows maps that have keys of\r\n      different types, even though that is probably a bad practice that\r\n      could lead to errors in some canonicalization implementations.)\r\n      The sorting rules are:\r\n      *  If two keys have different lengths, the shorter one sorts\r\n         earlier;\r\n      *  If two keys have the same length, the one with the lower value\r\n         in (byte-wise) lexical order sorts earlier.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/cbor2/issues/3", "repository_url": "https://api.github.com/repos/agronholm/cbor2", "labels_url": "https://api.github.com/repos/agronholm/cbor2/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/cbor2/issues/3/comments", "events_url": "https://api.github.com/repos/agronholm/cbor2/issues/3/events", "html_url": "https://github.com/agronholm/cbor2/issues/3", "id": 178940693, "node_id": "MDU6SXNzdWUxNzg5NDA2OTM=", "number": 3, "title": "Problems with datetime objects", "user": {"login": "podshumok", "id": 314085, "node_id": "MDQ6VXNlcjMxNDA4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/314085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/podshumok", "html_url": "https://github.com/podshumok", "followers_url": "https://api.github.com/users/podshumok/followers", "following_url": "https://api.github.com/users/podshumok/following{/other_user}", "gists_url": "https://api.github.com/users/podshumok/gists{/gist_id}", "starred_url": "https://api.github.com/users/podshumok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/podshumok/subscriptions", "organizations_url": "https://api.github.com/users/podshumok/orgs", "repos_url": "https://api.github.com/users/podshumok/repos", "events_url": "https://api.github.com/users/podshumok/events{/privacy}", "received_events_url": "https://api.github.com/users/podshumok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-23T18:16:05Z", "updated_at": "2016-09-24T14:16:01Z", "closed_at": "2016-09-23T21:13:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a traceback:\n\n```\nPython 3.5.0+ (default, Oct 11 2015, 09:05:38) \n[GCC 5.2.1 20151010] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import cbor2\n>>> import datetime\n>>> cbor2.loads(cbor2.dumps({1: [], '1': {}, 0: datetime.datetime.now(datetime.timezone.utc)}))\nTraceback (most recent call last):\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 304, in decode\n    return decoder(self, subtype, fp, shareable_index)\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 153, in decode_semantic\n    return decoder(self, value, fp, shareable_index)\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 175, in decode_datetime_string\n    microsecond, tz)\nOverflowError: signed integer is greater than maximum\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 322, in loads\n    return decoder.decode(buf)\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 304, in decode\n    return decoder(self, subtype, fp, shareable_index)\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 144, in decode_semantic\n    return self.decode(fp, shareable_index)\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 304, in decode\n    return decoder(self, subtype, fp, shareable_index)\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 131, in decode_map\n    value = self.decode(fp)\n  File \"/tmp/venv/lib/python3.5/site-packages/cbor2/decoder.py\", line 308, in decode\n    raise CBORDecodeError('error decoding value at index {}: {}'.format(fp.tell(), e))\ncbor2.decoder.CBORDecodeError: error decoding value at index 34: signed integer is greater than maximum\n```\n\nVersion:\ncbor2==3.0.1\n", "performed_via_github_app": null, "score": 1.0}]}