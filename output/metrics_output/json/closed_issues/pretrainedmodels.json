{"total_count": 85, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/192", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/192/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/192/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/192", "id": 616345957, "node_id": "MDU6SXNzdWU2MTYzNDU5NTc=", "number": 192, "title": "CUDA error: an illegal memory access was encountered", "user": {"login": "ooodragon94", "id": 34847452, "node_id": "MDQ6VXNlcjM0ODQ3NDUy", "avatar_url": "https://avatars3.githubusercontent.com/u/34847452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ooodragon94", "html_url": "https://github.com/ooodragon94", "followers_url": "https://api.github.com/users/ooodragon94/followers", "following_url": "https://api.github.com/users/ooodragon94/following{/other_user}", "gists_url": "https://api.github.com/users/ooodragon94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ooodragon94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ooodragon94/subscriptions", "organizations_url": "https://api.github.com/users/ooodragon94/orgs", "repos_url": "https://api.github.com/users/ooodragon94/repos", "events_url": "https://api.github.com/users/ooodragon94/events{/privacy}", "received_events_url": "https://api.github.com/users/ooodragon94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T04:17:57Z", "updated_at": "2020-05-14T07:20:08Z", "closed_at": "2020-05-14T07:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello, trying to use inceptionv4\r\na long, unprecedented error shown to me..\r\n\r\n```\r\nTHCudaCheck FAIL file=/pytorch/aten/src/THC/THCCachingHostAllocator.cpp line=278 error=700 : an illegal memory access was encountered\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 605, in <module>\r\n    main()\r\n  File \"main.py\", line 166, in main\r\n    main_worker(args.gpu, ngpus_per_node, args)\r\n  File \"main.py\", line 366, in main_worker\r\n    train_kd(train_loader, teacher, model, criterion, optimizer, epoch, args)\r\n  File \"main.py\", line 415, in train_kd\r\n    o_teacher = Variable(teacher(images), requires_grad=False)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/parallel/data_parallel.py\", line 155, in forward\r\n    outputs = self.parallel_apply(replicas, inputs, kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/parallel/data_parallel.py\", line 165, in parallel_apply\r\n    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/parallel/parallel_apply.py\", line 85, in parallel_apply\r\n    output.reraise()\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/_utils.py\", line 395, in reraise\r\n    raise self.exc_type(msg)\r\nRuntimeError: Caught RuntimeError in replica 0 on device 0.\r\n```\r\n\r\n\r\nand than it goes on..\r\n\r\n```\r\nOriginal Traceback (most recent call last):\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/parallel/parallel_apply.py\", line 60, in _worker\r\n    output = module(*input, **kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/pretrainedmodels/models/inceptionv4.py\", line 307, in forward\r\n    x = self.features(input)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/container.py\", line 100, in forward\r\n    input = module(input)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/pretrainedmodels/models/inceptionv4.py\", line 87, in forward\r\n    x1 = self.branch1(x)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/container.py\", line 100, in forward\r\n    input = module(input)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/pretrainedmodels/models/inceptionv4.py\", line 50, in forward\r\n    x = self.relu(x)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 550, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/modules/activation.py\", line 94, in forward\r\n    return F.relu(input, inplace=self.inplace)\r\n  File \"/home/USER/.local/lib/python3.6/site-packages/torch/nn/functional.py\", line 1061, in relu\r\n    result = torch.relu_(input)   \r\nRuntimeError: CUDA error: an illegal memory access was encountered\r\n\r\nterminate called after throwing an instance of 'c10::Error'\r\n  what():  CUDA error: an illegal memory access was encountered (insert_events at /pytorch/c10/cuda/CUDACachingAllocator.cpp:771)\r\nframe #0: c10::Error::Error(c10::SourceLocation, std::string const&) + 0x46 (0x7f293ae2b536 in /home/USER/.local/lib/python3.6/site-packages/torch/lib/libc10.so)\r\nframe #1: c10::cuda::CUDACachingAllocator::raw_delete(void*) + 0x7ae (0x7f293b06efbe in /home/USER/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)\r\nframe #2: c10::TensorImpl::release_resources() + 0x4d (0x7f293ae1babd in /home/USER/.local/lib/python3.6/site-packages/torch/lib/libc10.so)\r\nframe #3: <unknown function> + 0x523142 (0x7f29380c3142 in /home/USER/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)\r\nframe #4: <unknown function> + 0x5231e6 (0x7f29380c31e6 in /home/USER/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)\r\nframe #5: python3() [0x54ef16]\r\nframe #6: python3() [0x54ec1b]\r\nframe #7: python3() [0x54ec1b]\r\nframe #8: python3() [0x588948]\r\nframe #9: python3() [0x5ad438]\r\nframe #10: python3() [0x5ad44e]   \r\nframe #11: python3() [0x5ad44e]   \r\nframe #12: python3() [0x5ad44e]   \r\nframe #13: python3() [0x5ad44e]   \r\nframe #14: python3() [0x5ad44e]   \r\nframe #15: python3() [0x56b276]   \r\n<omitting python frames>\r\nframe #21: __libc_start_main + 0xe7 (0x7f2945bdab97 in /lib/x86_64-linux-gnu/libc.so.6)\r\n\r\n```\r\n\r\n\r\nany idea or suggestions? help me please!! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/191", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/191/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/191/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/191", "id": 615342293, "node_id": "MDU6SXNzdWU2MTUzNDIyOTM=", "number": 191, "title": "Pretrained models for se_resnet with input_3x3=True?", "user": {"login": "jonbakerfish", "id": 2463872, "node_id": "MDQ6VXNlcjI0NjM4NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2463872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonbakerfish", "html_url": "https://github.com/jonbakerfish", "followers_url": "https://api.github.com/users/jonbakerfish/followers", "following_url": "https://api.github.com/users/jonbakerfish/following{/other_user}", "gists_url": "https://api.github.com/users/jonbakerfish/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonbakerfish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonbakerfish/subscriptions", "organizations_url": "https://api.github.com/users/jonbakerfish/orgs", "repos_url": "https://api.github.com/users/jonbakerfish/repos", "events_url": "https://api.github.com/users/jonbakerfish/events{/privacy}", "received_events_url": "https://api.github.com/users/jonbakerfish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-10T08:21:06Z", "updated_at": "2020-05-15T00:12:22Z", "closed_at": "2020-05-15T00:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any pretrained se_resnet with `input_3x3=True` available?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/178", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/178/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/178/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/178", "id": 575668148, "node_id": "MDU6SXNzdWU1NzU2NjgxNDg=", "number": 178, "title": "Failed to install on CoLab.", "user": {"login": "gireeshkbogu", "id": 3885659, "node_id": "MDQ6VXNlcjM4ODU2NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3885659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gireeshkbogu", "html_url": "https://github.com/gireeshkbogu", "followers_url": "https://api.github.com/users/gireeshkbogu/followers", "following_url": "https://api.github.com/users/gireeshkbogu/following{/other_user}", "gists_url": "https://api.github.com/users/gireeshkbogu/gists{/gist_id}", "starred_url": "https://api.github.com/users/gireeshkbogu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gireeshkbogu/subscriptions", "organizations_url": "https://api.github.com/users/gireeshkbogu/orgs", "repos_url": "https://api.github.com/users/gireeshkbogu/repos", "events_url": "https://api.github.com/users/gireeshkbogu/events{/privacy}", "received_events_url": "https://api.github.com/users/gireeshkbogu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T18:50:16Z", "updated_at": "2020-03-04T18:52:51Z", "closed_at": "2020-03-04T18:52:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I install this on google's CoLab?\r\n\r\n`!pip install git+https://github.com/Cadene/pretrained-models.pytorch#egg=pretrained-models.pytorch`\r\n\r\nError\r\n`Collecting pretrained-models.pytorch\r\n  Cloning https://github.com/Cadene/pretrained-models.pytorch to /tmp/pip-install-yi78uxr5/pretrained-models.pytorch\r\n  Running command git clone -q https://github.com/Cadene/pretrained-models.pytorch /tmp/pip-install-yi78uxr5/pretrained-models.pytorch\r\n  WARNING: Generating metadata for package pretrained-models.pytorch produced metadata for project name pretrainedmodels. Fix your #egg=pretrained-models.pytorch fragments.\r\nRequirement already satisfied (use --upgrade to upgrade): pretrainedmodels from git+https://github.com/Cadene/pretrained-models.pytorch#egg=pretrained-models.pytorch in /root/.local/lib/python3.6/site-packages\r\nRequirement already satisfied: torch in /usr/local/lib/python3.6/dist-packages (from pretrainedmodels) (1.4.0)\r\nRequirement already satisfied: torchvision in /usr/local/lib/python3.6/dist-packages (from pretrainedmodels) (0.5.0)\r\nRequirement already satisfied: munch in /root/.local/lib/python3.6/site-packages (from pretrainedmodels) (2.5.0)\r\nRequirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from pretrainedmodels) (4.28.1)\r\nRequirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from torchvision->pretrainedmodels) (1.17.5)\r\nRequirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from torchvision->pretrainedmodels) (1.12.0)\r\nRequirement already satisfied: pillow>=4.1.1 in /usr/local/lib/python3.6/dist-packages (from torchvision->pretrainedmodels) (6.2.2)\r\nBuilding wheels for collected packages: pretrainedmodels, pretrainedmodels\r\n  Building wheel for pretrainedmodels (setup.py) ... done\r\n  Created wheel for pretrainedmodels: filename=pretrainedmodels-0.7.4-cp36-none-any.whl size=62049 sha256=881bb553109b6155de1a046872a7ab9cea48a71404f798072b13849f72272a8c\r\n  Stored in directory: /tmp/pip-ephem-wheel-cache-amrb_oco/wheels/3b/8c/ec/be73ea3fc3a627a32bb05b613cece4e101d18ce28f0b90864c\r\n  Building wheel for pretrainedmodels (setup.py) ... error\r\n  ERROR: Failed building wheel for pretrainedmodels\r\n  Running setup.py clean for pretrainedmodels\r\n  ERROR: Failed cleaning build dir for pretrainedmodels\r\nSuccessfully built pretrainedmodels\r\nFailed to build pretrainedmodels`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/169", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/169/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/169/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/169", "id": 486348417, "node_id": "MDU6SXNzdWU0ODYzNDg0MTc=", "number": 169, "title": "How do you add a new model to the pretrained-models repo?", "user": {"login": "Vanrap", "id": 44259234, "node_id": "MDQ6VXNlcjQ0MjU5MjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/44259234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vanrap", "html_url": "https://github.com/Vanrap", "followers_url": "https://api.github.com/users/Vanrap/followers", "following_url": "https://api.github.com/users/Vanrap/following{/other_user}", "gists_url": "https://api.github.com/users/Vanrap/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vanrap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vanrap/subscriptions", "organizations_url": "https://api.github.com/users/Vanrap/orgs", "repos_url": "https://api.github.com/users/Vanrap/repos", "events_url": "https://api.github.com/users/Vanrap/events{/privacy}", "received_events_url": "https://api.github.com/users/Vanrap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-28T12:22:15Z", "updated_at": "2019-08-28T14:04:49Z", "closed_at": "2019-08-28T14:04:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wish to make a few pull requests which add pre-trained models to this repo. Can someone please walk me through the steps/requirements to add a model to this repo? Do I need to have a pytorch implementation of my model? If I do, what next?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/161", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/161/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/161/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/161", "id": 475475036, "node_id": "MDU6SXNzdWU0NzU0NzUwMzY=", "number": 161, "title": "No download from Colab in the last couple of days", "user": {"login": "MITEL-UNIUD", "id": 14541654, "node_id": "MDQ6VXNlcjE0NTQxNjU0", "avatar_url": "https://avatars2.githubusercontent.com/u/14541654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MITEL-UNIUD", "html_url": "https://github.com/MITEL-UNIUD", "followers_url": "https://api.github.com/users/MITEL-UNIUD/followers", "following_url": "https://api.github.com/users/MITEL-UNIUD/following{/other_user}", "gists_url": "https://api.github.com/users/MITEL-UNIUD/gists{/gist_id}", "starred_url": "https://api.github.com/users/MITEL-UNIUD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MITEL-UNIUD/subscriptions", "organizations_url": "https://api.github.com/users/MITEL-UNIUD/orgs", "repos_url": "https://api.github.com/users/MITEL-UNIUD/repos", "events_url": "https://api.github.com/users/MITEL-UNIUD/events{/privacy}", "received_events_url": "https://api.github.com/users/MITEL-UNIUD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-01T05:09:22Z", "updated_at": "2019-08-05T10:17:43Z", "closed_at": "2019-08-05T10:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for this beautiful repository. I am using Cadene pretrained models inside Fastai on Colab, however in the last two days every attempt stops at , e.g., \r\n> Downloading: \"http://data.lip6.fr/cadene/pretrainedmodels/se_resnext50_32x4d-a260b3a4.pth\"\r\n\r\nwith timeout issues. Also a direct wget on Colab does not download the file. \r\nHowever this is strange because from my computer I am indeed able to download the very same model. \r\nAny ideas? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/160", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/160/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/160/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/160", "id": 474039319, "node_id": "MDU6SXNzdWU0NzQwMzkzMTk=", "number": 160, "title": "Mulit label support", "user": {"login": "DecentMakeover", "id": 25679895, "node_id": "MDQ6VXNlcjI1Njc5ODk1", "avatar_url": "https://avatars3.githubusercontent.com/u/25679895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DecentMakeover", "html_url": "https://github.com/DecentMakeover", "followers_url": "https://api.github.com/users/DecentMakeover/followers", "following_url": "https://api.github.com/users/DecentMakeover/following{/other_user}", "gists_url": "https://api.github.com/users/DecentMakeover/gists{/gist_id}", "starred_url": "https://api.github.com/users/DecentMakeover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DecentMakeover/subscriptions", "organizations_url": "https://api.github.com/users/DecentMakeover/orgs", "repos_url": "https://api.github.com/users/DecentMakeover/repos", "events_url": "https://api.github.com/users/DecentMakeover/events{/privacy}", "received_events_url": "https://api.github.com/users/DecentMakeover/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-29T13:03:00Z", "updated_at": "2020-01-03T05:31:18Z", "closed_at": "2020-01-03T05:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\n\r\nThanks for sharing your work, is there support for multi-label image classification ?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/147", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/147/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/147/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/147", "id": 431697351, "node_id": "MDU6SXNzdWU0MzE2OTczNTE=", "number": 147, "title": "Add speed metrics to the leaderboard", "user": {"login": "cy69855522", "id": 33852040, "node_id": "MDQ6VXNlcjMzODUyMDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/33852040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy69855522", "html_url": "https://github.com/cy69855522", "followers_url": "https://api.github.com/users/cy69855522/followers", "following_url": "https://api.github.com/users/cy69855522/following{/other_user}", "gists_url": "https://api.github.com/users/cy69855522/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy69855522/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy69855522/subscriptions", "organizations_url": "https://api.github.com/users/cy69855522/orgs", "repos_url": "https://api.github.com/users/cy69855522/repos", "events_url": "https://api.github.com/users/cy69855522/events{/privacy}", "received_events_url": "https://api.github.com/users/cy69855522/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-10T20:29:07Z", "updated_at": "2019-04-10T20:53:45Z", "closed_at": "2019-04-10T20:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thx 4 such a wonderful repo, this is one of my favorite stars. And I think the leaderboard is important for someone, why not add speed metrics to it\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/137", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/137/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/137/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/137", "id": 419532809, "node_id": "MDU6SXNzdWU0MTk1MzI4MDk=", "number": 137, "title": "A small bug in `nasnetamobile.py` file", "user": {"login": "pyaf", "id": 17473589, "node_id": "MDQ6VXNlcjE3NDczNTg5", "avatar_url": "https://avatars3.githubusercontent.com/u/17473589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyaf", "html_url": "https://github.com/pyaf", "followers_url": "https://api.github.com/users/pyaf/followers", "following_url": "https://api.github.com/users/pyaf/following{/other_user}", "gists_url": "https://api.github.com/users/pyaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyaf/subscriptions", "organizations_url": "https://api.github.com/users/pyaf/orgs", "repos_url": "https://api.github.com/users/pyaf/repos", "events_url": "https://api.github.com/users/pyaf/events{/privacy}", "received_events_url": "https://api.github.com/users/pyaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-11T15:29:40Z", "updated_at": "2019-03-13T11:21:09Z", "closed_at": "2019-03-13T11:21:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, the default setting of `num_classes` for `nasnetamobile` model is 1000 [See here](https://github.com/Cadene/pretrained-models.pytorch/blob/master/pretrainedmodels/models/nasnet_mobile.py#L32)\r\n\r\nBut the `NASNetAMobile` class is initialized with default num_classes as 1001 [here](https://github.com/Cadene/pretrained-models.pytorch/blob/master/pretrainedmodels/models/nasnet_mobile.py#L523), which throws mismatch error of when num_classes is not explicitly specified during model initialization.\r\n\r\nWould love to raise a PR to fix this, if you allow.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/135", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/135/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/135/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/135", "id": 416132227, "node_id": "MDU6SXNzdWU0MTYxMzIyMjc=", "number": 135, "title": "RuntimeError: Expected object of backend CPU but got backend CUDA for argument #2 'weight'", "user": {"login": "marsggbo", "id": 13477956, "node_id": "MDQ6VXNlcjEzNDc3OTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/13477956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marsggbo", "html_url": "https://github.com/marsggbo", "followers_url": "https://api.github.com/users/marsggbo/followers", "following_url": "https://api.github.com/users/marsggbo/following{/other_user}", "gists_url": "https://api.github.com/users/marsggbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/marsggbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marsggbo/subscriptions", "organizations_url": "https://api.github.com/users/marsggbo/orgs", "repos_url": "https://api.github.com/users/marsggbo/repos", "events_url": "https://api.github.com/users/marsggbo/events{/privacy}", "received_events_url": "https://api.github.com/users/marsggbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-01T14:40:13Z", "updated_at": "2019-03-01T15:28:08Z", "closed_at": "2019-03-01T15:28:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```Traceback (most recent call last):\r\n  File \"select_100classes.py\", line 114, in <module>\r\n    main()\r\n  File \"select_100classes.py\", line 68, in main\r\n    outputs = model(inputs)\r\n  File \"D:\\Continuum\\anaconda3\\envs\\py36\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 489, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"D:\\Continuum\\anaconda3\\envs\\py36\\lib\\site-packages\\pretrainedmodels\\models\\pnasnet.py\", line 367, in forward\r\n    x = self.features(input)\r\n  File \"D:\\Continuum\\anaconda3\\envs\\py36\\lib\\site-packages\\pretrainedmodels\\models\\pnasnet.py\", line 341, in features\r\n\r\n    x_conv_0 = self.conv_0(x)\r\n  File \"D:\\Continuum\\anaconda3\\envs\\py36\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 489, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"D:\\Continuum\\anaconda3\\envs\\py36\\lib\\site-packages\\torch\\nn\\modules\\container.py\", line 92, in forward\r\n    input = module(input)\r\n  File \"D:\\Continuum\\anaconda3\\envs\\py36\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 489, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"D:\\Continuum\\anaconda3\\envs\\py36\\lib\\site-packages\\torch\\nn\\modules\\conv.py\", line 320, in forward\r\n    self.padding, self.dilation, self.groups)\r\nRuntimeError: Expected object of backend CPU but got backend CUDA for argument #2 'weight'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/132", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/132/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/132/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/132", "id": 414113851, "node_id": "MDU6SXNzdWU0MTQxMTM4NTE=", "number": 132, "title": "nasnetamobile TypeError: forward() missing 1 required positional argument: 'x_stem_0'", "user": {"login": "ChristophNeuner", "id": 19358803, "node_id": "MDQ6VXNlcjE5MzU4ODAz", "avatar_url": "https://avatars0.githubusercontent.com/u/19358803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristophNeuner", "html_url": "https://github.com/ChristophNeuner", "followers_url": "https://api.github.com/users/ChristophNeuner/followers", "following_url": "https://api.github.com/users/ChristophNeuner/following{/other_user}", "gists_url": "https://api.github.com/users/ChristophNeuner/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristophNeuner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristophNeuner/subscriptions", "organizations_url": "https://api.github.com/users/ChristophNeuner/orgs", "repos_url": "https://api.github.com/users/ChristophNeuner/repos", "events_url": "https://api.github.com/users/ChristophNeuner/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristophNeuner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579998406, "node_id": "MDU6TGFiZWw1Nzk5OTg0MDY=", "url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Cadene", "id": 4681518, "node_id": "MDQ6VXNlcjQ2ODE1MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4681518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cadene", "html_url": "https://github.com/Cadene", "followers_url": "https://api.github.com/users/Cadene/followers", "following_url": "https://api.github.com/users/Cadene/following{/other_user}", "gists_url": "https://api.github.com/users/Cadene/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cadene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cadene/subscriptions", "organizations_url": "https://api.github.com/users/Cadene/orgs", "repos_url": "https://api.github.com/users/Cadene/repos", "events_url": "https://api.github.com/users/Cadene/events{/privacy}", "received_events_url": "https://api.github.com/users/Cadene/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Cadene", "id": 4681518, "node_id": "MDQ6VXNlcjQ2ODE1MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4681518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cadene", "html_url": "https://github.com/Cadene", "followers_url": "https://api.github.com/users/Cadene/followers", "following_url": "https://api.github.com/users/Cadene/following{/other_user}", "gists_url": "https://api.github.com/users/Cadene/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cadene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cadene/subscriptions", "organizations_url": "https://api.github.com/users/Cadene/orgs", "repos_url": "https://api.github.com/users/Cadene/repos", "events_url": "https://api.github.com/users/Cadene/events{/privacy}", "received_events_url": "https://api.github.com/users/Cadene/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-02-25T13:49:55Z", "updated_at": "2019-03-01T21:15:30Z", "closed_at": "2019-03-01T21:15:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to get the nasnetamobile to work with fastai.\r\nUnfortunately this error occures, but I do not know how to fix it:\r\n\r\n`TypeError                                 Traceback (most recent call last)\r\n<ipython-input-12-13ecf5042fd9> in <module>\r\n      3                      metrics=[accuracy, auc_score_1, auc_score_2],\r\n      4                      ps=dropout,\r\n----> 5                      pretrained='imagenet')\r\n\r\n~/work/network/fastai/fastai/vision/learner.py in create_cnn(data, arch, cut, pretrained, lin_ftrs, ps, custom_head, split_on, bn_final, **learn_kwargs)\r\n     72     meta = cnn_config(arch)\r\n     73     body = create_body(arch, pretrained, cut)\r\n---> 74     nf = num_features_model(body) * 2\r\n     75     head = custom_head or create_head(nf, data.c, lin_ftrs, ps=ps, bn_final=bn_final)\r\n     76     model = nn.Sequential(body, head)\r\n\r\n~/work/network/fastai/fastai/callbacks/hooks.py in num_features_model(m)\r\n    117     sz = 64\r\n    118     while True:\r\n--> 119         try: return model_sizes(m, size=(sz,sz))[-1][1]\r\n    120         except Exception as e:\r\n    121             sz *= 2\r\n\r\n~/work/network/fastai/fastai/callbacks/hooks.py in model_sizes(m, size)\r\n    110     \"Pass a dummy input through the model `m` to get the various sizes of activations.\"\r\n    111     with hook_outputs(m) as hooks:\r\n--> 112         x = dummy_eval(m, size)\r\n    113         return [o.stored.shape for o in hooks]\r\n    114 \r\n\r\n~/work/network/fastai/fastai/callbacks/hooks.py in dummy_eval(m, size)\r\n    105 def dummy_eval(m:nn.Module, size:tuple=(64,64)):\r\n    106     \"Pass a `dummy_batch` in evaluation mode in `m` with `size`.\"\r\n--> 107     return m.eval()(dummy_batch(m, size))\r\n    108 \r\n    109 def model_sizes(m:nn.Module, size:tuple=(64,64))->Tuple[Sizes,Tensor,Hooks]:\r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    487             result = self._slow_forward(*input, **kwargs)\r\n    488         else:\r\n--> 489             result = self.forward(*input, **kwargs)\r\n    490         for hook in self._forward_hooks.values():\r\n    491             hook_result = hook(self, input, result)\r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/container.py in forward(self, input)\r\n     90     def forward(self, input):\r\n     91         for module in self._modules.values():\r\n---> 92             input = module(input)\r\n     93         return input\r\n     94 \r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    487             result = self._slow_forward(*input, **kwargs)\r\n    488         else:\r\n--> 489             result = self.forward(*input, **kwargs)\r\n    490         for hook in self._forward_hooks.values():\r\n    491             hook_result = hook(self, input, result)\r\n\r\nTypeError: forward() missing 1 required positional argument: 'x_stem_0'`\r\n\r\n\r\n\r\nThanks in advance!\r\n\r\nChristoph", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/131", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/131/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/131/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/131", "id": 413700633, "node_id": "MDU6SXNzdWU0MTM3MDA2MzM=", "number": 131, "title": "Using model without pertained weights", "user": {"login": "arthursdays", "id": 20555217, "node_id": "MDQ6VXNlcjIwNTU1MjE3", "avatar_url": "https://avatars0.githubusercontent.com/u/20555217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthursdays", "html_url": "https://github.com/arthursdays", "followers_url": "https://api.github.com/users/arthursdays/followers", "following_url": "https://api.github.com/users/arthursdays/following{/other_user}", "gists_url": "https://api.github.com/users/arthursdays/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthursdays/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthursdays/subscriptions", "organizations_url": "https://api.github.com/users/arthursdays/orgs", "repos_url": "https://api.github.com/users/arthursdays/repos", "events_url": "https://api.github.com/users/arthursdays/events{/privacy}", "received_events_url": "https://api.github.com/users/arthursdays/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-23T14:23:21Z", "updated_at": "2019-02-23T15:27:37Z", "closed_at": "2019-02-23T15:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI wonder is there a way to only use the model themselves without loading the pre-trained weights into them? Something like \"model=pnasnet5large(num_classes=1000, pretrained='None')\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/127", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/127/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/127/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/127", "id": 409555572, "node_id": "MDU6SXNzdWU0MDk1NTU1NzI=", "number": 127, "title": "Sending inputs through pnasnet error", "user": {"login": "mark-hoffmann", "id": 12927193, "node_id": "MDQ6VXNlcjEyOTI3MTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/12927193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-hoffmann", "html_url": "https://github.com/mark-hoffmann", "followers_url": "https://api.github.com/users/mark-hoffmann/followers", "following_url": "https://api.github.com/users/mark-hoffmann/following{/other_user}", "gists_url": "https://api.github.com/users/mark-hoffmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-hoffmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-hoffmann/subscriptions", "organizations_url": "https://api.github.com/users/mark-hoffmann/orgs", "repos_url": "https://api.github.com/users/mark-hoffmann/repos", "events_url": "https://api.github.com/users/mark-hoffmann/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-hoffmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579998406, "node_id": "MDU6TGFiZWw1Nzk5OTg0MDY=", "url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Cadene", "id": 4681518, "node_id": "MDQ6VXNlcjQ2ODE1MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4681518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cadene", "html_url": "https://github.com/Cadene", "followers_url": "https://api.github.com/users/Cadene/followers", "following_url": "https://api.github.com/users/Cadene/following{/other_user}", "gists_url": "https://api.github.com/users/Cadene/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cadene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cadene/subscriptions", "organizations_url": "https://api.github.com/users/Cadene/orgs", "repos_url": "https://api.github.com/users/Cadene/repos", "events_url": "https://api.github.com/users/Cadene/events{/privacy}", "received_events_url": "https://api.github.com/users/Cadene/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Cadene", "id": 4681518, "node_id": "MDQ6VXNlcjQ2ODE1MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4681518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cadene", "html_url": "https://github.com/Cadene", "followers_url": "https://api.github.com/users/Cadene/followers", "following_url": "https://api.github.com/users/Cadene/following{/other_user}", "gists_url": "https://api.github.com/users/Cadene/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cadene/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cadene/subscriptions", "organizations_url": "https://api.github.com/users/Cadene/orgs", "repos_url": "https://api.github.com/users/Cadene/repos", "events_url": "https://api.github.com/users/Cadene/events{/privacy}", "received_events_url": "https://api.github.com/users/Cadene/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-02-12T23:49:39Z", "updated_at": "2019-03-03T20:04:48Z", "closed_at": "2019-03-03T20:04:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having a hard time using pnasnet5large. When I try to pass a test data input through the model I'm pulling it results in the error: `TypeError: forward() missing 1 required positional argument: 'x_right'`\r\n\r\nPytroch version: 1.0.0\r\npretrainedmodels version: 0.7.4\r\n\r\nExample passthrough:\r\n`model(batch[0].cuda())`\r\n\r\nThis is only the case for this particular network. For all other networks I have tried in this library, my test data input through works correctly. Is there something additional I need to do for my input data?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/126", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/126/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/126/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/126", "id": 407239411, "node_id": "MDU6SXNzdWU0MDcyMzk0MTE=", "number": 126, "title": "Error in loading pretrained VGG 16", "user": {"login": "harshsha5", "id": 43480657, "node_id": "MDQ6VXNlcjQzNDgwNjU3", "avatar_url": "https://avatars1.githubusercontent.com/u/43480657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshsha5", "html_url": "https://github.com/harshsha5", "followers_url": "https://api.github.com/users/harshsha5/followers", "following_url": "https://api.github.com/users/harshsha5/following{/other_user}", "gists_url": "https://api.github.com/users/harshsha5/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshsha5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshsha5/subscriptions", "organizations_url": "https://api.github.com/users/harshsha5/orgs", "repos_url": "https://api.github.com/users/harshsha5/repos", "events_url": "https://api.github.com/users/harshsha5/events{/privacy}", "received_events_url": "https://api.github.com/users/harshsha5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-06T13:38:27Z", "updated_at": "2019-02-06T13:49:20Z", "closed_at": "2019-02-06T13:49:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running the following lines as of now:\r\n\r\nimport pretrainedmodels\r\n\r\nmodel_name = 'vgg16'\r\nmodel = pretrainedmodels._dict_[model_name](num_classes=1000, pretrained='imagenet')\r\nmodel.eval()\r\n\r\nGetting the following error:\r\n\r\nTraceback (most recent call last):\r\nFile \"custom.py\", line 7, in \r\nmodel = pretrainedmodels._dict_[model_name](num_classes=1000, pretrained='imagenet')\r\nAttributeError: module 'pretrainedmodels' has no attribute '_dict_'\r\n\r\nNote: All are underscore dict underscore\r\n\r\nAny ideas on how to go about fixing it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/116", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/116/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/116/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/116", "id": 393070068, "node_id": "MDU6SXNzdWUzOTMwNzAwNjg=", "number": 116, "title": "PNASNet-5-Large --TypeError: forward() missing 1 required positional argument: 'x_right'", "user": {"login": "Bonsen", "id": 6490238, "node_id": "MDQ6VXNlcjY0OTAyMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6490238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bonsen", "html_url": "https://github.com/Bonsen", "followers_url": "https://api.github.com/users/Bonsen/followers", "following_url": "https://api.github.com/users/Bonsen/following{/other_user}", "gists_url": "https://api.github.com/users/Bonsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bonsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bonsen/subscriptions", "organizations_url": "https://api.github.com/users/Bonsen/orgs", "repos_url": "https://api.github.com/users/Bonsen/repos", "events_url": "https://api.github.com/users/Bonsen/events{/privacy}", "received_events_url": "https://api.github.com/users/Bonsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-20T14:29:21Z", "updated_at": "2019-02-12T21:37:37Z", "closed_at": "2018-12-20T14:58:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "~/anaconda36/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    487             result = self._slow_forward(*input, **kwargs)\r\n    488         else:\r\n--> 489             result = self.forward(*input, **kwargs)\r\n    490         for hook in self._forward_hooks.values():\r\n    491             hook_result = hook(self, input, result)\r\n\r\n~/anaconda36/lib/python3.6/site-packages/torch/nn/modules/container.py in forward(self, input)\r\n     90     def forward(self, input):\r\n     91         for module in self._modules.values():\r\n---> 92             input = module(input)\r\n     93         return input\r\n     94 \r\n\r\n~/anaconda36/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    487             result = self._slow_forward(*input, **kwargs)\r\n    488         else:\r\n--> 489             result = self.forward(*input, **kwargs)\r\n    490         for hook in self._forward_hooks.values():\r\n    491             hook_result = hook(self, input, result)\r\n\r\nTypeError: forward() missing 1 required positional argument: 'x_right'\r\npytorch1.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/115", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/115/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/115/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/115", "id": 392256232, "node_id": "MDU6SXNzdWUzOTIyNTYyMzI=", "number": 115, "title": "Problem loading SE Resnext pretrained model", "user": {"login": "Karthik-Suresh93", "id": 25709940, "node_id": "MDQ6VXNlcjI1NzA5OTQw", "avatar_url": "https://avatars2.githubusercontent.com/u/25709940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Karthik-Suresh93", "html_url": "https://github.com/Karthik-Suresh93", "followers_url": "https://api.github.com/users/Karthik-Suresh93/followers", "following_url": "https://api.github.com/users/Karthik-Suresh93/following{/other_user}", "gists_url": "https://api.github.com/users/Karthik-Suresh93/gists{/gist_id}", "starred_url": "https://api.github.com/users/Karthik-Suresh93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Karthik-Suresh93/subscriptions", "organizations_url": "https://api.github.com/users/Karthik-Suresh93/orgs", "repos_url": "https://api.github.com/users/Karthik-Suresh93/repos", "events_url": "https://api.github.com/users/Karthik-Suresh93/events{/privacy}", "received_events_url": "https://api.github.com/users/Karthik-Suresh93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-18T17:18:46Z", "updated_at": "2019-01-04T03:40:51Z", "closed_at": "2018-12-18T20:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to load the imagenet pretrained SE Resnext model (50 and 101). Both give the following error:\r\n\r\n`>>> pretrainedmodels.__version__`\r\n'0.7.4'\r\n\r\n`>>>model_name = 'se_resnext101_32x4d'`\r\n`>>> model = pretrainedmodels.__dict__[model_name](num_classes=1000, pretrained='imagenet')`\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ksuresh/.conda/envs/pytorch0.3/lib/python2.7/site-packages/pretrainedmodels/models/senet.py\", line 438, in se_resnext101_32x4d\r\n    num_classes=num_classes)\r\n  File \"/home/ksuresh/.conda/envs/pytorch0.3/lib/python2.7/site-packages/pretrainedmodels/models/senet.py\", line 291, in __init__\r\n    downsample_padding=0\r\n  File \"/home/ksuresh/.conda/envs/pytorch0.3/lib/python2.7/site-packages/pretrainedmodels/models/senet.py\", line 340, in _make_layer\r\n    downsample))\r\n  File \"/home/ksuresh/.conda/envs/pytorch0.3/lib/python2.7/site-packages/pretrainedmodels/models/senet.py\", line 194, in __init__\r\n    stride=1)\r\n  File \"/home/ksuresh/.conda/envs/pytorch0.3/lib/python2.7/site-packages/torch/nn/modules/conv.py\", line 278, in __init__\r\n    False, _pair(0), groups, bias)\r\n  File \"/home/ksuresh/.conda/envs/pytorch0.3/lib/python2.7/site-packages/torch/nn/modules/conv.py\", line 33, in __init__\r\n    out_channels, in_channels // groups, *kernel_size))\r\nTypeError: torch.FloatTensor constructor received an invalid combination of arguments - got (float, int, int, int), but expected one of:\r\n * no arguments\r\n * (int ...)\r\n      didn't match because some of the arguments have invalid types: (float, int, int, int)\r\n * (torch.FloatTensor viewed_tensor)\r\n * (torch.Size size)\r\n * (torch.FloatStorage data)\r\n * (Sequence data)\r\n\r\nCould you please tell me what the issue is?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/114", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/114/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/114/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/114", "id": 390122777, "node_id": "MDU6SXNzdWUzOTAxMjI3Nzc=", "number": 114, "title": "'nasnetamobile' not in model_names", "user": {"login": "askerlee", "id": 1575461, "node_id": "MDQ6VXNlcjE1NzU0NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1575461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/askerlee", "html_url": "https://github.com/askerlee", "followers_url": "https://api.github.com/users/askerlee/followers", "following_url": "https://api.github.com/users/askerlee/following{/other_user}", "gists_url": "https://api.github.com/users/askerlee/gists{/gist_id}", "starred_url": "https://api.github.com/users/askerlee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/askerlee/subscriptions", "organizations_url": "https://api.github.com/users/askerlee/orgs", "repos_url": "https://api.github.com/users/askerlee/repos", "events_url": "https://api.github.com/users/askerlee/events{/privacy}", "received_events_url": "https://api.github.com/users/askerlee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-12T08:52:44Z", "updated_at": "2018-12-14T06:43:23Z", "closed_at": "2018-12-13T20:13:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the up-to-date code. As you can see, `pretrainedmodels.model_names` does not include `nasnetamobile`. But I can still load the model nonetheless. Python is version 3.7. \r\n```\r\n>>> pretrainedmodels.__version__\r\n'0.2.1'\r\n>>> print(pretrainedmodels.model_names)\r\n['fbresnet152', 'bninception', 'resnext101_32x4d', 'resnext101_64x4d', 'inceptionv4', 'inceptionresnetv2', 'alexnet', 'densenet121', 'densenet169', 'densenet201', 'densenet161', 'resnet18', 'resnet34', 'resnet50', 'resnet101', 'resnet152', 'inceptionv3', 'squeezenet1_0', 'squeezenet1_1', 'vgg11', 'vgg11_bn', 'vgg13', 'vgg13_bn', 'vgg16', 'vgg16_bn', 'vgg19_bn', 'vgg19', 'nasnetalarge', 'dpn68', 'dpn68b', 'dpn92', 'dpn98', 'dpn131', 'dpn107', 'xception']\r\n>>> pretrainedmodels.__dict__.keys()\r\ndict_keys(['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__path__', '__file__', '__cached__', '__builtins__', 'version', '__version__', 'models', 'datasets', 'pretrained_settings', 'model_names', 'fbresnet152', 'bninception', 'resnext101_32x4d', 'resnext101_64x4d', 'inceptionv4', 'inceptionresnetv2', 'nasnetalarge', 'nasnetamobile', 'alexnet', 'densenet121', 'densenet169', 'densenet201', 'densenet161', 'resnet18', 'resnet34', 'resnet50', 'resnet101', 'resnet152', 'inceptionv3', 'squeezenet1_0', 'squeezenet1_1', 'vgg11', 'vgg11_bn', 'vgg13', 'vgg13_bn', 'vgg16', 'vgg16_bn', 'vgg19_bn', 'vgg19', 'dpn68', 'dpn68b', 'dpn92', 'dpn98', 'dpn131', 'dpn107', 'xception'])\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/108", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/108/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/108/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/108", "id": 385692883, "node_id": "MDU6SXNzdWUzODU2OTI4ODM=", "number": 108, "title": "How to do multiple crops such as 10-crop in the validation ?", "user": {"login": "lith0613", "id": 31385806, "node_id": "MDQ6VXNlcjMxMzg1ODA2", "avatar_url": "https://avatars0.githubusercontent.com/u/31385806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lith0613", "html_url": "https://github.com/lith0613", "followers_url": "https://api.github.com/users/lith0613/followers", "following_url": "https://api.github.com/users/lith0613/following{/other_user}", "gists_url": "https://api.github.com/users/lith0613/gists{/gist_id}", "starred_url": "https://api.github.com/users/lith0613/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lith0613/subscriptions", "organizations_url": "https://api.github.com/users/lith0613/orgs", "repos_url": "https://api.github.com/users/lith0613/repos", "events_url": "https://api.github.com/users/lith0613/events{/privacy}", "received_events_url": "https://api.github.com/users/lith0613/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-29T11:34:39Z", "updated_at": "2018-12-13T20:06:23Z", "closed_at": "2018-12-13T20:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/105", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/105/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/105/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/105", "id": 381941051, "node_id": "MDU6SXNzdWUzODE5NDEwNTE=", "number": 105, "title": "How to install it with torch-1.0.0-dev", "user": {"login": "InsightDev", "id": 18297757, "node_id": "MDQ6VXNlcjE4Mjk3NzU3", "avatar_url": "https://avatars0.githubusercontent.com/u/18297757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/InsightDev", "html_url": "https://github.com/InsightDev", "followers_url": "https://api.github.com/users/InsightDev/followers", "following_url": "https://api.github.com/users/InsightDev/following{/other_user}", "gists_url": "https://api.github.com/users/InsightDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/InsightDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/InsightDev/subscriptions", "organizations_url": "https://api.github.com/users/InsightDev/orgs", "repos_url": "https://api.github.com/users/InsightDev/repos", "events_url": "https://api.github.com/users/InsightDev/events{/privacy}", "received_events_url": "https://api.github.com/users/InsightDev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-18T08:47:43Z", "updated_at": "2018-12-13T20:08:21Z", "closed_at": "2018-12-13T20:08:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use `sudo pip install pretrainedmodels` to install pretrained-models.pytorch, it download torch-0.4.1 dependency package. But my system have install torch-1.0.0-dev.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/103", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/103/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/103/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/103", "id": 378162852, "node_id": "MDU6SXNzdWUzNzgxNjI4NTI=", "number": 103, "title": "Running with Pytorch0.4", "user": {"login": "Markovcom", "id": 26458922, "node_id": "MDQ6VXNlcjI2NDU4OTIy", "avatar_url": "https://avatars0.githubusercontent.com/u/26458922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Markovcom", "html_url": "https://github.com/Markovcom", "followers_url": "https://api.github.com/users/Markovcom/followers", "following_url": "https://api.github.com/users/Markovcom/following{/other_user}", "gists_url": "https://api.github.com/users/Markovcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/Markovcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Markovcom/subscriptions", "organizations_url": "https://api.github.com/users/Markovcom/orgs", "repos_url": "https://api.github.com/users/Markovcom/repos", "events_url": "https://api.github.com/users/Markovcom/events{/privacy}", "received_events_url": "https://api.github.com/users/Markovcom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-07T06:50:17Z", "updated_at": "2018-12-13T20:14:23Z", "closed_at": "2018-12-13T20:14:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/26458922/48115052-6c9ffd00-e29c-11e8-9f21-6372ebc3f547.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/102", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/102/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/102/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/102", "id": 378153586, "node_id": "MDU6SXNzdWUzNzgxNTM1ODY=", "number": 102, "title": "Adding number of parameters / complexity to the table", "user": {"login": "ialhashim", "id": 2434978, "node_id": "MDQ6VXNlcjI0MzQ5Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2434978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ialhashim", "html_url": "https://github.com/ialhashim", "followers_url": "https://api.github.com/users/ialhashim/followers", "following_url": "https://api.github.com/users/ialhashim/following{/other_user}", "gists_url": "https://api.github.com/users/ialhashim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ialhashim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ialhashim/subscriptions", "organizations_url": "https://api.github.com/users/ialhashim/orgs", "repos_url": "https://api.github.com/users/ialhashim/repos", "events_url": "https://api.github.com/users/ialhashim/events{/privacy}", "received_events_url": "https://api.github.com/users/ialhashim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-07T06:01:25Z", "updated_at": "2018-11-08T14:02:30Z", "closed_at": "2018-11-08T14:02:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great resource, thanks for your efforts. \r\n\r\nIs it possible to also include the number of parameters along with the ImageNet accuracy?\r\n\r\nAlso, a side note, have you considred ShuffleNetV2? here is a great implementation with two pretrained models https://github.com/ericsun99/Shufflenet-v2-Pytorch", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/100", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/100/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/100/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/100", "id": 377207941, "node_id": "MDU6SXNzdWUzNzcyMDc5NDE=", "number": 100, "title": "How to use this code on my own pretrsined model?", "user": {"login": "Maryames", "id": 22487576, "node_id": "MDQ6VXNlcjIyNDg3NTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/22487576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maryames", "html_url": "https://github.com/Maryames", "followers_url": "https://api.github.com/users/Maryames/followers", "following_url": "https://api.github.com/users/Maryames/following{/other_user}", "gists_url": "https://api.github.com/users/Maryames/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maryames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maryames/subscriptions", "organizations_url": "https://api.github.com/users/Maryames/orgs", "repos_url": "https://api.github.com/users/Maryames/repos", "events_url": "https://api.github.com/users/Maryames/events{/privacy}", "received_events_url": "https://api.github.com/users/Maryames/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-04T23:32:19Z", "updated_at": "2018-12-13T20:11:21Z", "closed_at": "2018-12-13T20:11:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I use this code for evaluating my own pretrained model on PASCAL VOC ?I really need your help. I cannot find any pytorch code for voc classification and I need to evaluate my pretrained model with other papers while all of them used CAFFE code and my model is pth.\r\nappreciate your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/99", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/99/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/99/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/99", "id": 376229713, "node_id": "MDU6SXNzdWUzNzYyMjk3MTM=", "number": 99, "title": "InceptionV3's Conv2d_2a_3x3.bn.running_var is incorrect", "user": {"login": "ypw-cortex", "id": 44594132, "node_id": "MDQ6VXNlcjQ0NTk0MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/44594132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ypw-cortex", "html_url": "https://github.com/ypw-cortex", "followers_url": "https://api.github.com/users/ypw-cortex/followers", "following_url": "https://api.github.com/users/ypw-cortex/following{/other_user}", "gists_url": "https://api.github.com/users/ypw-cortex/gists{/gist_id}", "starred_url": "https://api.github.com/users/ypw-cortex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ypw-cortex/subscriptions", "organizations_url": "https://api.github.com/users/ypw-cortex/orgs", "repos_url": "https://api.github.com/users/ypw-cortex/repos", "events_url": "https://api.github.com/users/ypw-cortex/events{/privacy}", "received_events_url": "https://api.github.com/users/ypw-cortex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-01T02:31:36Z", "updated_at": "2018-11-06T10:33:35Z", "closed_at": "2018-11-06T10:33:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://gist.github.com/ypw-cortex/e924d2bcc689c6037821a8c21ac77cf9\r\n\r\nThe running_var of batchnorm should not be so small.\r\n\r\n```py\r\nbn = model.Conv2d_2a_3x3.bn\r\nbn.running_var[11], bn.running_var[13]\r\n\r\n(tensor(1.8647e-14), tensor(3.7400e-14))\r\n```\r\n\r\nThe equivalent weight of batchnorm should not be so large.\r\n```py\r\nrunning_std = bn.running_var.sqrt() + bn.eps\r\neq_weight = bn.weight / running_std\r\n\r\ntensor([  1.1262,   1.0825,   0.8164,   1.2763,   3.4662,   0.8985,   0.8461,\r\n          1.2279,   0.3658,   2.4894,   0.8431, 999.8634,   0.3131, 999.8066,\r\n          1.0949,   1.1219,   0.3374,   0.7440,   2.7890,   0.3605,   1.1327,\r\n          0.5710,   0.5503,   0.6672,   0.6222,   0.3376,   0.4227,   0.9465,\r\n          0.2870,   0.8486,   0.9414,   0.6925], grad_fn=<DivBackward1>)\r\n```\r\n\r\nThe weight of the convolutional layer should not be so small too.\r\n```py\r\nconv = model.Conv2d_2a_3x3.conv\r\nweight = conv.weight.data.mean(dim=-1).mean(dim=-1).mean(dim=-1)\r\nweight[11], weight[13]\r\n\r\n(tensor(2.9088e-10), tensor(2.5552e-10))\r\n```\r\n\r\nThe other layer is the correct equivalent weight.\r\n```py\r\nbn = model.Conv2d_1a_3x3.bn\r\nrunning_std = bn.running_var.sqrt() + bn.eps\r\nweights = bn.weight / running_std\r\n\r\ntensor([1.7271, 2.6709, 1.7531, 1.0139, 1.2894, 1.0954, 6.3732, 2.8702, 3.4773,\r\n        1.6405, 2.6034, 1.4568, 1.0404, 3.3769, 2.1268, 2.3463, 1.2395, 1.1246,\r\n        4.8683, 4.0129, 2.3488, 3.3749, 1.9351, 2.2495, 3.9881, 0.8731, 2.5312,\r\n        1.1476, 2.0904, 2.0541, 2.6836, 5.9335], grad_fn=<DivBackward1>)\r\n```\r\n\r\nIt can calculate the correct result in float32. But when I do 8-bit fixed-point, it can't get the correct result because of the great equivalent weight.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/97", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/97/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/97/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/97", "id": 373593710, "node_id": "MDU6SXNzdWUzNzM1OTM3MTA=", "number": 97, "title": "Can't save the model", "user": {"login": "eric01300", "id": 21077719, "node_id": "MDQ6VXNlcjIxMDc3NzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/21077719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eric01300", "html_url": "https://github.com/eric01300", "followers_url": "https://api.github.com/users/eric01300/followers", "following_url": "https://api.github.com/users/eric01300/following{/other_user}", "gists_url": "https://api.github.com/users/eric01300/gists{/gist_id}", "starred_url": "https://api.github.com/users/eric01300/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eric01300/subscriptions", "organizations_url": "https://api.github.com/users/eric01300/orgs", "repos_url": "https://api.github.com/users/eric01300/repos", "events_url": "https://api.github.com/users/eric01300/events{/privacy}", "received_events_url": "https://api.github.com/users/eric01300/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-24T17:29:21Z", "updated_at": "2018-10-27T14:25:02Z", "closed_at": "2018-10-27T14:25:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've loaded the resnext101_64x4d model and fine-tuned the model with other datasets.\r\nThe training was successful, but when I tried to save the model, I've encountered an error : Can't pickle <function <lambda> at 0x7f6ec8356268>: attribute lookup <lambda> on pretrainedmodels.models.resnext_features.resnext101_64x4d_features failed. \r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/96", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/96/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/96/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/96", "id": 372913908, "node_id": "MDU6SXNzdWUzNzI5MTM5MDg=", "number": 96, "title": "The BNinception model", "user": {"login": "queenie88", "id": 18275110, "node_id": "MDQ6VXNlcjE4Mjc1MTEw", "avatar_url": "https://avatars3.githubusercontent.com/u/18275110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/queenie88", "html_url": "https://github.com/queenie88", "followers_url": "https://api.github.com/users/queenie88/followers", "following_url": "https://api.github.com/users/queenie88/following{/other_user}", "gists_url": "https://api.github.com/users/queenie88/gists{/gist_id}", "starred_url": "https://api.github.com/users/queenie88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/queenie88/subscriptions", "organizations_url": "https://api.github.com/users/queenie88/orgs", "repos_url": "https://api.github.com/users/queenie88/repos", "events_url": "https://api.github.com/users/queenie88/events{/privacy}", "received_events_url": "https://api.github.com/users/queenie88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579998406, "node_id": "MDU6TGFiZWw1Nzk5OTg0MDY=", "url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-23T09:58:38Z", "updated_at": "2018-10-29T08:19:48Z", "closed_at": "2018-10-29T08:19:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I trained with the bninception model. But I still face this problem when I trained on my datasets.\r\n0 Epoch, 2900 Iter,Time :0.189,Data:0.012 Loss: 2.6701, Acc: 0.0469\r\n0 Epoch, 3000 Iter,Time :0.189,Data:0.012 Loss: 2.6671, Acc: 0.0625\r\n0 Epoch, 3100 Iter,Time :0.189,Data:0.012 Loss: 2.6090, Acc: 0.0469\r\n0 Epoch, 3200 Iter,Time :0.189,Data:0.012 Loss: 2.5923, Acc: 0.0781\r\n0 Epoch, 3300 Iter,Time :0.189,Data:0.012 Loss: 2.6018, Acc: 0.0781\r\n0 Epoch, 3400 Iter,Time :0.188,Data:0.012 Loss: 2.5977, Acc: 0.0938\r\nWe can see the loss is not reduced and the acc is not to improve. If I change the lr, I also face the nan problem. I also find the example about the file of voc2007_extract.py. This model can be extracted the feature. But when I use this model to train with the public dataset, it is still facing the loss is not descend or nan problem.  I use other models, such as xception is not face these problems.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/95", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/95/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/95/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/95", "id": 370786016, "node_id": "MDU6SXNzdWUzNzA3ODYwMTY=", "number": 95, "title": "http://data.lip6.fr/cadene/ is not available", "user": {"login": "dkozlov", "id": 1515942, "node_id": "MDQ6VXNlcjE1MTU5NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1515942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkozlov", "html_url": "https://github.com/dkozlov", "followers_url": "https://api.github.com/users/dkozlov/followers", "following_url": "https://api.github.com/users/dkozlov/following{/other_user}", "gists_url": "https://api.github.com/users/dkozlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkozlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkozlov/subscriptions", "organizations_url": "https://api.github.com/users/dkozlov/orgs", "repos_url": "https://api.github.com/users/dkozlov/repos", "events_url": "https://api.github.com/users/dkozlov/events{/privacy}", "received_events_url": "https://api.github.com/users/dkozlov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-16T20:28:35Z", "updated_at": "2018-11-02T05:03:17Z", "closed_at": "2018-11-02T05:03:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://data.lip6.fr/cadene/ is not available", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/94", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/94/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/94/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/94", "id": 370591770, "node_id": "MDU6SXNzdWUzNzA1OTE3NzA=", "number": 94, "title": "how set the ouput size while extract features from a pre-trained model?", "user": {"login": "zhiqiangzhongddu", "id": 17181332, "node_id": "MDQ6VXNlcjE3MTgxMzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/17181332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhiqiangzhongddu", "html_url": "https://github.com/zhiqiangzhongddu", "followers_url": "https://api.github.com/users/zhiqiangzhongddu/followers", "following_url": "https://api.github.com/users/zhiqiangzhongddu/following{/other_user}", "gists_url": "https://api.github.com/users/zhiqiangzhongddu/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhiqiangzhongddu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhiqiangzhongddu/subscriptions", "organizations_url": "https://api.github.com/users/zhiqiangzhongddu/orgs", "repos_url": "https://api.github.com/users/zhiqiangzhongddu/repos", "events_url": "https://api.github.com/users/zhiqiangzhongddu/events{/privacy}", "received_events_url": "https://api.github.com/users/zhiqiangzhongddu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T12:40:00Z", "updated_at": "2018-10-27T14:22:06Z", "closed_at": "2018-10-27T14:22:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use some pretrained models to extract image features, as in voc2007_extract. but i would have a low dimension 256. how could I get it, add a pooling layer? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/93", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/93/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/93/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/93", "id": 369782255, "node_id": "MDU6SXNzdWUzNjk3ODIyNTU=", "number": 93, "title": "About nasnet mobile training", "user": {"login": "billhhh", "id": 7709725, "node_id": "MDQ6VXNlcjc3MDk3MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7709725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billhhh", "html_url": "https://github.com/billhhh", "followers_url": "https://api.github.com/users/billhhh/followers", "following_url": "https://api.github.com/users/billhhh/following{/other_user}", "gists_url": "https://api.github.com/users/billhhh/gists{/gist_id}", "starred_url": "https://api.github.com/users/billhhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billhhh/subscriptions", "organizations_url": "https://api.github.com/users/billhhh/orgs", "repos_url": "https://api.github.com/users/billhhh/repos", "events_url": "https://api.github.com/users/billhhh/events{/privacy}", "received_events_url": "https://api.github.com/users/billhhh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-13T08:48:37Z", "updated_at": "2018-10-28T03:31:17Z", "closed_at": "2018-10-27T14:21:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for sharing your codes! I have a lit bit many questions to consult you about the pretrained model trained on Imagenet\r\n\r\n1. May I know your hyper params (batchsize, lr, weight_decay and how many gpus did you use and how many epochs did the model converge)\r\n2. May I know how did you do data pre-processing(crop methods and other data augmentation?)?\r\n3. Did you use Rmsprop as the paper says?\r\n4. May I know did you use standard splitting(1281167 for training and 50000 for validation) on imagenet?\r\n\r\nSorry for a little bit too many questions. Thank you so much!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/92", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/92/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/92/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/92", "id": 368011128, "node_id": "MDU6SXNzdWUzNjgwMTExMjg=", "number": 92, "title": "Init pretrained densenet key error", "user": {"login": "wvinzh", "id": 17807170, "node_id": "MDQ6VXNlcjE3ODA3MTcw", "avatar_url": "https://avatars1.githubusercontent.com/u/17807170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wvinzh", "html_url": "https://github.com/wvinzh", "followers_url": "https://api.github.com/users/wvinzh/followers", "following_url": "https://api.github.com/users/wvinzh/following{/other_user}", "gists_url": "https://api.github.com/users/wvinzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wvinzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wvinzh/subscriptions", "organizations_url": "https://api.github.com/users/wvinzh/orgs", "repos_url": "https://api.github.com/users/wvinzh/repos", "events_url": "https://api.github.com/users/wvinzh/events{/privacy}", "received_events_url": "https://api.github.com/users/wvinzh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-09T01:53:46Z", "updated_at": "2018-10-27T14:19:00Z", "closed_at": "2018-10-27T14:19:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`\r\nimport pretrainedmodels`\r\n`model_name = 'densenet121' `\r\n`model = pretrainedmodels.__dict__[model_name](num_classes=1000, pretrained='imagenet')\r\n`\r\nwhen using such code to init a pretrained densenet, it occured a key error.\r\nWhen I looked into the torchvision's densenet model code, I found you missed [such lines](https://github.com/pytorch/vision/blob/86001a871d3335046e2dca7715d9babf73e6956f/torchvision/models/densenet.py#L33-L41)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/90", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/90/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/90/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/90", "id": 366536532, "node_id": "MDU6SXNzdWUzNjY1MzY1MzI=", "number": 90, "title": "InceptionV1 relu", "user": {"login": "fuankarion", "id": 16943391, "node_id": "MDQ6VXNlcjE2OTQzMzkx", "avatar_url": "https://avatars0.githubusercontent.com/u/16943391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuankarion", "html_url": "https://github.com/fuankarion", "followers_url": "https://api.github.com/users/fuankarion/followers", "following_url": "https://api.github.com/users/fuankarion/following{/other_user}", "gists_url": "https://api.github.com/users/fuankarion/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuankarion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuankarion/subscriptions", "organizations_url": "https://api.github.com/users/fuankarion/orgs", "repos_url": "https://api.github.com/users/fuankarion/repos", "events_url": "https://api.github.com/users/fuankarion/events{/privacy}", "received_events_url": "https://api.github.com/users/fuankarion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579998406, "node_id": "MDU6TGFiZWw1Nzk5OTg0MDY=", "url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-03T21:27:27Z", "updated_at": "2018-10-29T09:51:45Z", "closed_at": "2018-10-29T08:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI Think some of the relu activations on the InceptionV1 model (bninception.py) are just ignored, for example in line 299 \r\n\r\n`inception_3b_relu_1x1_out = self.inception_3b_relu_1x1(inception_3b_1x1_bn_out)`\r\n\r\nthe output 'inception_3b_relu_1x1_out', is never used again, and the input 'inception_3b_1x1_bn_out' is passed to the inception module concatenated output, see line 310.\r\n\r\n`inception_3b_output_out = torch.cat([inception_3b_1x1_bn_out,inception_3b_3x3_bn_out,inception_3b_double_3x3_2_bn_out,inception_3b_pool_proj_bn_out], 1)`\r\n\r\nIs this a bug or am I missing something? \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/89", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/89/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/89/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/89", "id": 365290977, "node_id": "MDU6SXNzdWUzNjUyOTA5Nzc=", "number": 89, "title": "'imagenet'['url'] in pretrained nasnet ", "user": {"login": "SherleyC", "id": 34031163, "node_id": "MDQ6VXNlcjM0MDMxMTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/34031163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SherleyC", "html_url": "https://github.com/SherleyC", "followers_url": "https://api.github.com/users/SherleyC/followers", "following_url": "https://api.github.com/users/SherleyC/following{/other_user}", "gists_url": "https://api.github.com/users/SherleyC/gists{/gist_id}", "starred_url": "https://api.github.com/users/SherleyC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SherleyC/subscriptions", "organizations_url": "https://api.github.com/users/SherleyC/orgs", "repos_url": "https://api.github.com/users/SherleyC/repos", "events_url": "https://api.github.com/users/SherleyC/events{/privacy}", "received_events_url": "https://api.github.com/users/SherleyC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-01T02:42:00Z", "updated_at": "2018-10-03T23:42:50Z", "closed_at": "2018-10-03T23:42:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "isssue: 'imagenet' has the same 'url' with 'imagenet+background' \r\npretrained_settings = {\r\n    'nasnetalarge': {\r\n        'imagenet': {\r\n            'url': 'http://data.lip6.fr/cadene/pretrainedmodels/nasnetalarge-a1897284.pth',\r\n            'input_space': 'RGB',\r\n            'input_size': [3, 331, 331], # resize 354\r\n            'input_range': [0, 1],\r\n            'mean': [0.5, 0.5, 0.5],\r\n            'std': [0.5, 0.5, 0.5],\r\n            'num_classes': 1000\r\n        },\r\n        'imagenet+background': {\r\n            'url': 'http://data.lip6.fr/cadene/pretrainedmodels/nasnetalarge-a1897284.pth',\r\n            'input_space': 'RGB',\r\n            'input_size': [3, 331, 331], # resize 354\r\n            'input_range': [0, 1],\r\n            'mean': [0.5, 0.5, 0.5],\r\n            'std': [0.5, 0.5, 0.5],\r\n            'num_classes': 1001\r\n        }\r\n    }\r\n}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/87", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/87/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/87/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/87", "id": 363546108, "node_id": "MDU6SXNzdWUzNjM1NDYxMDg=", "number": 87, "title": "bninception ", "user": {"login": "Zhuysheng", "id": 32120565, "node_id": "MDQ6VXNlcjMyMTIwNTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/32120565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zhuysheng", "html_url": "https://github.com/Zhuysheng", "followers_url": "https://api.github.com/users/Zhuysheng/followers", "following_url": "https://api.github.com/users/Zhuysheng/following{/other_user}", "gists_url": "https://api.github.com/users/Zhuysheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zhuysheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zhuysheng/subscriptions", "organizations_url": "https://api.github.com/users/Zhuysheng/orgs", "repos_url": "https://api.github.com/users/Zhuysheng/repos", "events_url": "https://api.github.com/users/Zhuysheng/events{/privacy}", "received_events_url": "https://api.github.com/users/Zhuysheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579998406, "node_id": "MDU6TGFiZWw1Nzk5OTg0MDY=", "url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-25T12:09:35Z", "updated_at": "2018-10-29T08:20:40Z", "closed_at": "2018-10-29T08:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Epoch: [0][440/4769], lr: 0.00100       Time 0.231 (0.556)      Data 0.000 (0.154)      Loss nan (nan)  Prec@1 0.000 (0.454)    Prec@5 0.000 (2.268)\r\nwhen train TSN with this bninception, loss become nan,but when i use bninception from [https://github.com/yjxiong/tensorflow-model-zoo.torch/tree/9788c674f3058741a4c4128142c21877052863ee](url),loss decrease,whats the problem\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/86", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/86/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/86/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/86", "id": 363168408, "node_id": "MDU6SXNzdWUzNjMxNjg0MDg=", "number": 86, "title": "InceptionResnetV2 - RuntimeError: invalid hash value", "user": {"login": "Trungmaster5", "id": 17091796, "node_id": "MDQ6VXNlcjE3MDkxNzk2", "avatar_url": "https://avatars3.githubusercontent.com/u/17091796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Trungmaster5", "html_url": "https://github.com/Trungmaster5", "followers_url": "https://api.github.com/users/Trungmaster5/followers", "following_url": "https://api.github.com/users/Trungmaster5/following{/other_user}", "gists_url": "https://api.github.com/users/Trungmaster5/gists{/gist_id}", "starred_url": "https://api.github.com/users/Trungmaster5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Trungmaster5/subscriptions", "organizations_url": "https://api.github.com/users/Trungmaster5/orgs", "repos_url": "https://api.github.com/users/Trungmaster5/repos", "events_url": "https://api.github.com/users/Trungmaster5/events{/privacy}", "received_events_url": "https://api.github.com/users/Trungmaster5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-24T14:21:32Z", "updated_at": "2018-11-12T12:53:20Z", "closed_at": "2018-10-27T14:17:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried your InceptionResnetV2 model and got this error\r\n\r\n> RuntimeError: invalid hash value (expected \"520b38e4\", got \"00c0840425c822d2f0a0dd6b616b976f4de7f1d6fc5df56d398718d171ab54a1\")\r\n\r\nCould you please check it out ? \r\n\r\nThe code I used was\r\n`model = pretrainedmodels.inceptionresnetv2(num_classes= 1001, pretrained = 'imagenet+background\u2019)`\r\n\r\nThank you for this awesome project. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/83", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/83/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/83/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/83", "id": 356165732, "node_id": "MDU6SXNzdWUzNTYxNjU3MzI=", "number": 83, "title": "Anaconda installation not working", "user": {"login": "YugeTen", "id": 18204038, "node_id": "MDQ6VXNlcjE4MjA0MDM4", "avatar_url": "https://avatars2.githubusercontent.com/u/18204038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YugeTen", "html_url": "https://github.com/YugeTen", "followers_url": "https://api.github.com/users/YugeTen/followers", "following_url": "https://api.github.com/users/YugeTen/following{/other_user}", "gists_url": "https://api.github.com/users/YugeTen/gists{/gist_id}", "starred_url": "https://api.github.com/users/YugeTen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YugeTen/subscriptions", "organizations_url": "https://api.github.com/users/YugeTen/orgs", "repos_url": "https://api.github.com/users/YugeTen/repos", "events_url": "https://api.github.com/users/YugeTen/events{/privacy}", "received_events_url": "https://api.github.com/users/YugeTen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-01T03:01:20Z", "updated_at": "2018-09-04T06:43:52Z", "closed_at": "2018-09-04T06:43:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nJust wondering if the anaconda installation link is going to be made available at some point? At the moment there seem to be some connection errors at the host.\r\n\r\nThanks for releasing the code by the way :+1: you don't need this from me but good work anyways ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/79", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/79/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/79/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/79", "id": 344294918, "node_id": "MDU6SXNzdWUzNDQyOTQ5MTg=", "number": 79, "title": "Missing Relu in BNInception blocks", "user": {"login": "xdhhh", "id": 16759637, "node_id": "MDQ6VXNlcjE2NzU5NjM3", "avatar_url": "https://avatars1.githubusercontent.com/u/16759637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xdhhh", "html_url": "https://github.com/xdhhh", "followers_url": "https://api.github.com/users/xdhhh/followers", "following_url": "https://api.github.com/users/xdhhh/following{/other_user}", "gists_url": "https://api.github.com/users/xdhhh/gists{/gist_id}", "starred_url": "https://api.github.com/users/xdhhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xdhhh/subscriptions", "organizations_url": "https://api.github.com/users/xdhhh/orgs", "repos_url": "https://api.github.com/users/xdhhh/repos", "events_url": "https://api.github.com/users/xdhhh/events{/privacy}", "received_events_url": "https://api.github.com/users/xdhhh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579998406, "node_id": "MDU6TGFiZWw1Nzk5OTg0MDY=", "url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-25T05:12:14Z", "updated_at": "2018-10-29T08:20:52Z", "closed_at": "2018-10-29T08:20:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI,\r\nIn BNInception, it seems like the output of the Relu function is never used in the blocks.\r\n![2018-07-25 13 07 23](https://user-images.githubusercontent.com/16759637/43180722-35459f50-900c-11e8-901c-9d45daf9e7fc.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/77", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/77/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/77/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/77", "id": 338317733, "node_id": "MDU6SXNzdWUzMzgzMTc3MzM=", "number": 77, "title": "Example imagenet_eval.py giving error", "user": {"login": "eyildiz-ugoe", "id": 35396058, "node_id": "MDQ6VXNlcjM1Mzk2MDU4", "avatar_url": "https://avatars3.githubusercontent.com/u/35396058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eyildiz-ugoe", "html_url": "https://github.com/eyildiz-ugoe", "followers_url": "https://api.github.com/users/eyildiz-ugoe/followers", "following_url": "https://api.github.com/users/eyildiz-ugoe/following{/other_user}", "gists_url": "https://api.github.com/users/eyildiz-ugoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/eyildiz-ugoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eyildiz-ugoe/subscriptions", "organizations_url": "https://api.github.com/users/eyildiz-ugoe/orgs", "repos_url": "https://api.github.com/users/eyildiz-ugoe/repos", "events_url": "https://api.github.com/users/eyildiz-ugoe/events{/privacy}", "received_events_url": "https://api.github.com/users/eyildiz-ugoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-04T15:31:17Z", "updated_at": "2018-07-05T11:23:37Z", "closed_at": "2018-07-05T11:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Launching:\r\n\r\n`python3 imagenet_eval.py --data ../data`\r\n\r\nGetting:\r\n\r\n```\r\n=> creating model 'nasnetamobile'\r\n=> using pre-trained parameters 'imagenet'\r\nImages transformed from size 256 to [3, 224, 224]\r\nTraceback (most recent call last):\r\n  File \"imagenet_eval.py\", line 304, in <module>\r\n    main()\r\n  File \"imagenet_eval.py\", line 124, in main\r\n    datasets.ImageFolder(valdir, val_tf),\r\n  File \"/usr/local/lib/python3.5/dist-packages/torchvision/datasets/folder.py\", line 178, in __init__\r\n    target_transform=target_transform)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torchvision/datasets/folder.py\", line 79, in __init__\r\n    \"Supported extensions are: \" + \",\".join(extensions)))\r\nRuntimeError: Found 0 files in subfolders of: ../data/val\r\nSupported extensions are: .jpg,.jpeg,.png,.ppm,.bmp,.pgm,.tif\r\n\r\n```\r\n\r\nAny idea why this happens? (I do have a data/val folder with a cat image (.jpg) in it for inference.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/75", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/75/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/75/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/75", "id": 334959548, "node_id": "MDU6SXNzdWUzMzQ5NTk1NDg=", "number": 75, "title": "How to remove the last 2 layers from caffe resnet-101, and build the new model", "user": {"login": "ShiKangdi", "id": 37673163, "node_id": "MDQ6VXNlcjM3NjczMTYz", "avatar_url": "https://avatars3.githubusercontent.com/u/37673163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShiKangdi", "html_url": "https://github.com/ShiKangdi", "followers_url": "https://api.github.com/users/ShiKangdi/followers", "following_url": "https://api.github.com/users/ShiKangdi/following{/other_user}", "gists_url": "https://api.github.com/users/ShiKangdi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShiKangdi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShiKangdi/subscriptions", "organizations_url": "https://api.github.com/users/ShiKangdi/orgs", "repos_url": "https://api.github.com/users/ShiKangdi/repos", "events_url": "https://api.github.com/users/ShiKangdi/events{/privacy}", "received_events_url": "https://api.github.com/users/ShiKangdi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-22T17:29:19Z", "updated_at": "2018-06-29T23:11:50Z", "closed_at": "2018-06-29T23:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I removed the last 2 layers in caffe resnet-101, and use following code to build new model for feature extraction.\r\n\r\nmodel = pretrainedmodels.__dict__['cafferesnet101'](num_classes=1000, pretrained='imagenet')\r\nnewmodel = list(model.children())[:-2]\r\nnewmodel = nn.Sequential(*newmodel)\r\n\r\nbut I can't use tf_img = utils.TransformImage(newmodel) for that, which gives me the error:\r\n\r\nAttributeError: 'Sequential' object has no attribute 'input_size'\r\n\r\n*************************************************************************************************************\r\n\r\nAnd I also don't want resize the image, just do to tensor, and normalize the image on cuda, like pytorch.\r\n\r\ndoes this caffe model also need the input to be within [0~1], and normalize by using mean=[0.485, 0.456, 0.406],std=[0.229, 0.224, 0.225]?\r\n\r\nPlease help me, thank you very very much!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/71", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/71/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/71/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/71", "id": 330686611, "node_id": "MDU6SXNzdWUzMzA2ODY2MTE=", "number": 71, "title": "Creating two models breaks things", "user": {"login": "MicaelCarvalho", "id": 17184992, "node_id": "MDQ6VXNlcjE3MTg0OTky", "avatar_url": "https://avatars3.githubusercontent.com/u/17184992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicaelCarvalho", "html_url": "https://github.com/MicaelCarvalho", "followers_url": "https://api.github.com/users/MicaelCarvalho/followers", "following_url": "https://api.github.com/users/MicaelCarvalho/following{/other_user}", "gists_url": "https://api.github.com/users/MicaelCarvalho/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicaelCarvalho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicaelCarvalho/subscriptions", "organizations_url": "https://api.github.com/users/MicaelCarvalho/orgs", "repos_url": "https://api.github.com/users/MicaelCarvalho/repos", "events_url": "https://api.github.com/users/MicaelCarvalho/events{/privacy}", "received_events_url": "https://api.github.com/users/MicaelCarvalho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-08T14:43:17Z", "updated_at": "2018-06-10T02:51:56Z", "closed_at": "2018-06-10T02:51:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Minimal reproducible example:\r\n\r\n```\r\nimport pretrainedmodels\r\n\r\nnetwork_1 = pretrainedmodels.__dict__['vgg16'](num_classes=1000,pretrained='imagenet')\r\nprint('Network 1', network_1)\r\nnetwork_2 = pretrainedmodels.__dict__['vgg16'](num_classes=1000,pretrained='imagenet')\r\nprint('Network 2', network_2)\r\n```\r\n\r\nOutputs:\r\n```\r\nNetwork 1 VGG(                                                                                                                                                                                                     \r\n  (_features): Sequential(                                                                                                                                                                                         \r\n    (0): Conv2d (3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                         \r\n    (1): ReLU(inplace)                                                                                                                                                                                             \r\n    (2): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                        \r\n    (3): ReLU(inplace)                                                                                                                                                                                             \r\n    (4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1))                                                                                                                                             \r\n    (5): Conv2d (64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                       \r\n    (6): ReLU(inplace)                                                                                                                                                                                             \r\n    (7): Conv2d (128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                      \r\n    (8): ReLU(inplace)                                                                                                                                                                                             \r\n    (9): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1))                                                                                                                                             \r\n    (10): Conv2d (128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (11): ReLU(inplace)                                                                                                                                                                                            \r\n    (12): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (13): ReLU(inplace)                                                                                                                                                                                            \r\n    (14): Conv2d (256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (15): ReLU(inplace)                                                                                                                                                                                            \r\n    (16): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1))                                                                                                                                            \r\n    (17): Conv2d (256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (18): ReLU(inplace)                                                                                                                                                                                            \r\n    (19): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (20): ReLU(inplace)                                                                                                                                                                                            \r\n    (21): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (22): ReLU(inplace)                                                                                                                                                                                            \r\n    (23): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1))                                                                                                                                            \r\n    (24): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (25): ReLU(inplace)                                                                                                                                                                                            \r\n    (26): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (27): ReLU(inplace)                                                                                                                                                                                            \r\n    (28): Conv2d (512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))                                                                                                                                     \r\n    (29): ReLU(inplace)                                                                                                                                                                                            \r\n    (30): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1))                                                                                                                                            \r\n  )                                                                                                                                                                                                                \r\n  (linear0): Linear(in_features=25088, out_features=4096)                                                                                                                                                          \r\n  (relu0): ReLU(inplace)                                                                                                                                                                                           \r\n  (dropout0): Dropout(p=0.5)                                                                                                                                                                                       \r\n  (linear1): Linear(in_features=4096, out_features=4096)                                                                                                                                                           \r\n  (relu1): ReLU(inplace)                                                                                                                                                                                           \r\n  (dropout1): Dropout(p=0.5)                                                                                                                                                                                       \r\n  (last_linear): Linear(in_features=4096, out_features=1000)                                                                                                                                                       \r\n)                                                                                                                                                                                                                  \r\nNetwork 2 VGG(\r\n  (linear0): Linear(in_features=25088, out_features=4096)\r\n  (relu0): ReLU(inplace)\r\n  (dropout0): Dropout(p=0.5)\r\n  (linear1): Linear(in_features=4096, out_features=4096)\r\n  (relu1): ReLU(inplace)\r\n  (dropout1): Dropout(p=0.5)\r\n  (last_linear): Linear(in_features=4096, out_features=1000)\r\n)\r\n```\r\n\r\nNetwork 2 does not have the _features part.\r\n\r\nThis problem is probably caused by the function modify_vggs (setting class-specific stuff, instead of instance-specific ones). I'll work on a fix, this bug report is only for the records. ;)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/70", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/70/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/70/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/70", "id": 330574191, "node_id": "MDU6SXNzdWUzMzA1NzQxOTE=", "number": 70, "title": "BNInception does not ship in pytorch versions 0.2.0 and newer", "user": {"login": "adiser", "id": 31588778, "node_id": "MDQ6VXNlcjMxNTg4Nzc4", "avatar_url": "https://avatars2.githubusercontent.com/u/31588778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adiser", "html_url": "https://github.com/adiser", "followers_url": "https://api.github.com/users/adiser/followers", "following_url": "https://api.github.com/users/adiser/following{/other_user}", "gists_url": "https://api.github.com/users/adiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/adiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adiser/subscriptions", "organizations_url": "https://api.github.com/users/adiser/orgs", "repos_url": "https://api.github.com/users/adiser/repos", "events_url": "https://api.github.com/users/adiser/events{/privacy}", "received_events_url": "https://api.github.com/users/adiser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-08T08:55:23Z", "updated_at": "2019-03-11T09:28:52Z", "closed_at": "2018-10-27T14:11:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, I would like to thank you for the awesome work for the community @yjxiong @Cadene\r\n\r\nIt's my first time raising an issue. Do guide me if you need anymore relevant information.\r\n\r\nI happened to be experimenting with pytorch version 0.2.0 and 0.3.0. In which I used the BNInception pretrainedmodels ported by @yjxiong. \r\n\r\nWhile running model.load_state_dict(<params>). I encountered this error message:\r\n        _While copying the parameter named \"inception_4a_3x3_bn.weight\", whose dimensions in the model are torch.Size([96]) and whose dimensions in the checkpoint are torch.Size([1, 96]).\r\n        While copying the parameter named \"inception_4a_3x3_bn.running_mean\", whose dimensions in the model are torch.Size([96]) and whose dimensions in the checkpoint are torch.Size([1, 96]).\r\n        While copying the parameter named \"inception_4a_3x3_bn.bias\", whose dimensions in the model are torch.Size([96]) and whose dimensions in the checkpoint are torch.Size([1, 96])._\r\n\r\nIt happened to all the layers.\r\n\r\nIt seems to me that the model only ships in pytorch versions older than 0.1.12. I tried using the same codebase and it worked seamlessly\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/69", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/69/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/69/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/69", "id": 326720895, "node_id": "MDU6SXNzdWUzMjY3MjA4OTU=", "number": 69, "title": "The hyperparameters of the models", "user": {"login": "Youngkl0726", "id": 10404063, "node_id": "MDQ6VXNlcjEwNDA0MDYz", "avatar_url": "https://avatars2.githubusercontent.com/u/10404063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Youngkl0726", "html_url": "https://github.com/Youngkl0726", "followers_url": "https://api.github.com/users/Youngkl0726/followers", "following_url": "https://api.github.com/users/Youngkl0726/following{/other_user}", "gists_url": "https://api.github.com/users/Youngkl0726/gists{/gist_id}", "starred_url": "https://api.github.com/users/Youngkl0726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Youngkl0726/subscriptions", "organizations_url": "https://api.github.com/users/Youngkl0726/orgs", "repos_url": "https://api.github.com/users/Youngkl0726/repos", "events_url": "https://api.github.com/users/Youngkl0726/events{/privacy}", "received_events_url": "https://api.github.com/users/Youngkl0726/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-26T08:22:54Z", "updated_at": "2018-10-27T14:11:22Z", "closed_at": "2018-10-27T14:11:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you supply the hyperparameters you used to train the models, such as the learning rate, the batch size and the number of gpus you used?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/66", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/66/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/66/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/66", "id": 323657131, "node_id": "MDU6SXNzdWUzMjM2NTcxMzE=", "number": 66, "title": "Preprocessing - input_range and mean/std", "user": {"login": "karandwivedi42", "id": 9624554, "node_id": "MDQ6VXNlcjk2MjQ1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9624554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karandwivedi42", "html_url": "https://github.com/karandwivedi42", "followers_url": "https://api.github.com/users/karandwivedi42/followers", "following_url": "https://api.github.com/users/karandwivedi42/following{/other_user}", "gists_url": "https://api.github.com/users/karandwivedi42/gists{/gist_id}", "starred_url": "https://api.github.com/users/karandwivedi42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karandwivedi42/subscriptions", "organizations_url": "https://api.github.com/users/karandwivedi42/orgs", "repos_url": "https://api.github.com/users/karandwivedi42/repos", "events_url": "https://api.github.com/users/karandwivedi42/events{/privacy}", "received_events_url": "https://api.github.com/users/karandwivedi42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-05-16T14:52:28Z", "updated_at": "2019-03-11T14:25:41Z", "closed_at": "2018-05-16T19:45:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example in se-resnet50, the input_range in [0,1]. So the input to model is `input - mean / std` and not actually [0,1], right?\r\n\r\nDoes this preprocessing look correct?\r\n```python\r\ndef train_transform(x):\r\n    x = TF.resize(x, 256)\r\n    i, j, h, w = transforms.RandomCrop.get_params(x, [224, 224])\r\n    x = TF.crop(x, i, j, h, w)\r\n    if TF.random.random() > 0.5:\r\n        x = TF.hflip(x)\r\n    x = TF.to_tensor(x)\r\n    x = TF.normalize(x, [0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\r\n    return x\r\n\r\ndef val_transform(x):\r\n    x = TF.resize(x, 224)\r\n    x = TF.center_crop(x, 224)\r\n    x = TF.to_tensor(x)\r\n    x = TF.normalize(x, [0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\r\n    return x\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/62", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/62/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/62/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/62", "id": 318463142, "node_id": "MDU6SXNzdWUzMTg0NjMxNDI=", "number": 62, "title": "Xception fails to load weights in PyTorch 0.4.0 (with fix)", "user": {"login": "fabioperez", "id": 294960, "node_id": "MDQ6VXNlcjI5NDk2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/294960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabioperez", "html_url": "https://github.com/fabioperez", "followers_url": "https://api.github.com/users/fabioperez/followers", "following_url": "https://api.github.com/users/fabioperez/following{/other_user}", "gists_url": "https://api.github.com/users/fabioperez/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabioperez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabioperez/subscriptions", "organizations_url": "https://api.github.com/users/fabioperez/orgs", "repos_url": "https://api.github.com/users/fabioperez/repos", "events_url": "https://api.github.com/users/fabioperez/events{/privacy}", "received_events_url": "https://api.github.com/users/fabioperez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-27T15:57:23Z", "updated_at": "2018-10-27T15:33:44Z", "closed_at": "2018-10-27T15:33:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When loading the Xception net with PyTorch 0.4.0, I got the following error:\r\n\r\n```\r\nWhile copying the parameter named \"block1.rep.0.pointwise.weight\", whose dimensions in the model are torch.Size([128, 64, 1, 1]) and whose dimensions in the checkpoint are torch.Size([128, 64]).\r\nWhile copying the parameter named \"block1.rep.3.pointwise.weight\", whose dimensions in the model are torch.Size([128, 128, 1, 1]) and whose dimensions in the checkpoint are torch.Size([128, 128]).\r\nWhile copying the parameter named \"block2.rep.1.pointwise.weight\", whose dimensions in the model are torch.Size([256, 128, 1, 1]) and whose dimensions in the checkpoint are torch.Size([256, 128]).\r\nWhile copying the parameter named \"block2.rep.4.pointwise.weight\", whose dimensions in the model are torch.Size([256, 256, 1, 1]) and whose dimensions in the checkpoint are torch.Size([256, 256]).\r\nWhile copying the parameter named \"block3.rep.1.pointwise.weight\", whose dimensions in the model are torch.Size([728, 256, 1, 1]) and whose dimensions in the checkpoint are torch.Size([728, 256]).\r\nWhile copying the parameter named \"block3.rep.4.pointwise.weight\", whose dimensions in the model are torch.Size([728, 728, 1, 1]) and whose dimensions in the checkpoint are torch.Size([728, 728]).\r\n...\r\n```\r\n\r\nI could fix the problem by modifying the shapes of these layers in the weights file:\r\n\r\n```\r\nimport torch\r\nimport pretrainedmodels as ptm\r\n\r\nstate_dict = torch.load('./xception-b5690688.pth')\r\n\r\nfor name, weights in state_dict.items():\r\n    if 'pointwise' in name:\r\n        state_dict[name] = weights.unsqueeze(-1).unsqueeze(-1)\r\n        \r\ntorch.save(state_dict, 'xception-fixed.pth')\r\n```\r\n\r\nOther networks may also result in this error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/61", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/61/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/61/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/61", "id": 315296629, "node_id": "MDU6SXNzdWUzMTUyOTY2Mjk=", "number": 61, "title": "validation set label", "user": {"login": "TangKun1234", "id": 26134994, "node_id": "MDQ6VXNlcjI2MTM0OTk0", "avatar_url": "https://avatars2.githubusercontent.com/u/26134994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TangKun1234", "html_url": "https://github.com/TangKun1234", "followers_url": "https://api.github.com/users/TangKun1234/followers", "following_url": "https://api.github.com/users/TangKun1234/following{/other_user}", "gists_url": "https://api.github.com/users/TangKun1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/TangKun1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TangKun1234/subscriptions", "organizations_url": "https://api.github.com/users/TangKun1234/orgs", "repos_url": "https://api.github.com/users/TangKun1234/repos", "events_url": "https://api.github.com/users/TangKun1234/events{/privacy}", "received_events_url": "https://api.github.com/users/TangKun1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-18T01:28:42Z", "updated_at": "2018-04-18T08:05:46Z", "closed_at": "2018-04-18T08:05:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I already got pretrained AlexNet model, and want to reproduce results, but i couldn't get the label of validation set.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/60", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/60/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/60/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/60", "id": 314871369, "node_id": "MDU6SXNzdWUzMTQ4NzEzNjk=", "number": 60, "title": "sth wrong with senet", "user": {"login": "he010103", "id": 12673867, "node_id": "MDQ6VXNlcjEyNjczODY3", "avatar_url": "https://avatars1.githubusercontent.com/u/12673867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/he010103", "html_url": "https://github.com/he010103", "followers_url": "https://api.github.com/users/he010103/followers", "following_url": "https://api.github.com/users/he010103/following{/other_user}", "gists_url": "https://api.github.com/users/he010103/gists{/gist_id}", "starred_url": "https://api.github.com/users/he010103/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/he010103/subscriptions", "organizations_url": "https://api.github.com/users/he010103/orgs", "repos_url": "https://api.github.com/users/he010103/repos", "events_url": "https://api.github.com/users/he010103/events{/privacy}", "received_events_url": "https://api.github.com/users/he010103/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-17T01:21:43Z", "updated_at": "2018-10-27T13:56:26Z", "closed_at": "2018-10-27T13:56:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "the line 193 shoule be change to `width = int(math.floor(planes * base_width / 64) * groups)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/59", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/59/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/59/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/59", "id": 314551729, "node_id": "MDU6SXNzdWUzMTQ1NTE3Mjk=", "number": 59, "title": "Number of parameters?", "user": {"login": "underfitting", "id": 27710518, "node_id": "MDQ6VXNlcjI3NzEwNTE4", "avatar_url": "https://avatars1.githubusercontent.com/u/27710518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/underfitting", "html_url": "https://github.com/underfitting", "followers_url": "https://api.github.com/users/underfitting/followers", "following_url": "https://api.github.com/users/underfitting/following{/other_user}", "gists_url": "https://api.github.com/users/underfitting/gists{/gist_id}", "starred_url": "https://api.github.com/users/underfitting/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/underfitting/subscriptions", "organizations_url": "https://api.github.com/users/underfitting/orgs", "repos_url": "https://api.github.com/users/underfitting/repos", "events_url": "https://api.github.com/users/underfitting/events{/privacy}", "received_events_url": "https://api.github.com/users/underfitting/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-16T08:40:35Z", "updated_at": "2018-04-28T06:52:09Z", "closed_at": "2018-04-28T06:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has anyone compared number of parameters?\r\nI tried some good accuracy models, but they are very slow.\r\n\r\nIn terms of both accuracy and speed, which model is the best one to choose?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/54", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/54/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/54/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/54", "id": 312211332, "node_id": "MDU6SXNzdWUzMTIyMTEzMzI=", "number": 54, "title": "Changing batch sizes", "user": {"login": "lweitkamp", "id": 29229478, "node_id": "MDQ6VXNlcjI5MjI5NDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/29229478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lweitkamp", "html_url": "https://github.com/lweitkamp", "followers_url": "https://api.github.com/users/lweitkamp/followers", "following_url": "https://api.github.com/users/lweitkamp/following{/other_user}", "gists_url": "https://api.github.com/users/lweitkamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/lweitkamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lweitkamp/subscriptions", "organizations_url": "https://api.github.com/users/lweitkamp/orgs", "repos_url": "https://api.github.com/users/lweitkamp/repos", "events_url": "https://api.github.com/users/lweitkamp/events{/privacy}", "received_events_url": "https://api.github.com/users/lweitkamp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-07T14:26:14Z", "updated_at": "2018-04-09T20:34:00Z", "closed_at": "2018-04-09T20:34:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to change the batch size to allow for a larger amount of input at once instead of doing it sort of on-line? I used the code to perform a forward pass which works perfectly but would like to extend the amount of images it can classify in one go. \r\n\r\nAlso: how exactly can i extract feature information per layer given an input? not extremely important but it would be interesting.\r\n\r\nThanks for making it easy to get pretrained models btw!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/53", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/53/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/53/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/53", "id": 312170953, "node_id": "MDU6SXNzdWUzMTIxNzA5NTM=", "number": 53, "title": "Xception has differing dimensions than the pretrained model", "user": {"login": "samjenks", "id": 22105865, "node_id": "MDQ6VXNlcjIyMTA1ODY1", "avatar_url": "https://avatars2.githubusercontent.com/u/22105865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjenks", "html_url": "https://github.com/samjenks", "followers_url": "https://api.github.com/users/samjenks/followers", "following_url": "https://api.github.com/users/samjenks/following{/other_user}", "gists_url": "https://api.github.com/users/samjenks/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjenks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjenks/subscriptions", "organizations_url": "https://api.github.com/users/samjenks/orgs", "repos_url": "https://api.github.com/users/samjenks/repos", "events_url": "https://api.github.com/users/samjenks/events{/privacy}", "received_events_url": "https://api.github.com/users/samjenks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-07T05:00:45Z", "updated_at": "2018-10-27T15:34:04Z", "closed_at": "2018-10-27T15:34:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, when I try to load the pretrained xception model with imagenet, \r\n`pretrained_model = xception(pretrained='imagenet')`\r\nI encounter this bug:\r\n\r\n`RuntimeError: While copying the parameter named block1.rep.0.conv1.weight, whose dimensions in the model are torch.Size([64, 1, 3, 3]) and whose dimensions in the checkpoint are torch.Size([64, 3, 3]).`\r\n\r\nIt's a bit weird, any idea how to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/50", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/50/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/50/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/50", "id": 311098758, "node_id": "MDU6SXNzdWUzMTEwOTg3NTg=", "number": 50, "title": "mean max pooling implement", "user": {"login": "lilhope", "id": 20057346, "node_id": "MDQ6VXNlcjIwMDU3MzQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/20057346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilhope", "html_url": "https://github.com/lilhope", "followers_url": "https://api.github.com/users/lilhope/followers", "following_url": "https://api.github.com/users/lilhope/following{/other_user}", "gists_url": "https://api.github.com/users/lilhope/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilhope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilhope/subscriptions", "organizations_url": "https://api.github.com/users/lilhope/orgs", "repos_url": "https://api.github.com/users/lilhope/repos", "events_url": "https://api.github.com/users/lilhope/events{/privacy}", "received_events_url": "https://api.github.com/users/lilhope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-04T06:17:41Z", "updated_at": "2018-10-27T13:52:26Z", "closed_at": "2018-10-27T13:52:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n    As states in http://arxiv.org/abs/1509.08985, the mean-max pooling could improve the model performance in testing stage. But I'm quite a newer with pytorch, and get no idea how to implement it? Could you give me some suggestion?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/48", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/48/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/48/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/48", "id": 310209099, "node_id": "MDU6SXNzdWUzMTAyMDkwOTk=", "number": 48, "title": "Fail to load bninception", "user": {"login": "Redoblue", "id": 5414656, "node_id": "MDQ6VXNlcjU0MTQ2NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5414656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Redoblue", "html_url": "https://github.com/Redoblue", "followers_url": "https://api.github.com/users/Redoblue/followers", "following_url": "https://api.github.com/users/Redoblue/following{/other_user}", "gists_url": "https://api.github.com/users/Redoblue/gists{/gist_id}", "starred_url": "https://api.github.com/users/Redoblue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Redoblue/subscriptions", "organizations_url": "https://api.github.com/users/Redoblue/orgs", "repos_url": "https://api.github.com/users/Redoblue/repos", "events_url": "https://api.github.com/users/Redoblue/events{/privacy}", "received_events_url": "https://api.github.com/users/Redoblue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-31T03:38:39Z", "updated_at": "2018-10-27T13:49:42Z", "closed_at": "2018-10-27T13:49:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, when I try to load the `bninception` model with the following codes, something weird happens. I need some help, thanks.\r\n```\r\nmodel_name = 'nasnetalarge' # could be fbresnet152 or inceptionresnetv2\r\nmodel = pretrainedmodels.__dict__[model_name](num_classes=1000, pretrained='imagenet')\r\n```\r\n\r\nrunning the above code produces this:\r\n```\r\nanaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py:514: UserWarning: src is not broadcastable to dst, but they have the same number of elements.  Falling back to deprecated pointwise behavior.\r\n  own_state[name].copy_(param)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/47", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/47/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/47/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/47", "id": 309602483, "node_id": "MDU6SXNzdWUzMDk2MDI0ODM=", "number": 47, "title": "AttributeError: 'Xception' object has no attribute 'fc'", "user": {"login": "lilhope", "id": 20057346, "node_id": "MDQ6VXNlcjIwMDU3MzQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/20057346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilhope", "html_url": "https://github.com/lilhope", "followers_url": "https://api.github.com/users/lilhope/followers", "following_url": "https://api.github.com/users/lilhope/following{/other_user}", "gists_url": "https://api.github.com/users/lilhope/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilhope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilhope/subscriptions", "organizations_url": "https://api.github.com/users/lilhope/orgs", "repos_url": "https://api.github.com/users/lilhope/repos", "events_url": "https://api.github.com/users/lilhope/events{/privacy}", "received_events_url": "https://api.github.com/users/lilhope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-29T03:07:04Z", "updated_at": "2018-03-29T08:01:21Z", "closed_at": "2018-03-29T08:01:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems you have notice that in `xception`:\r\n```\r\nmodel.last_linear = model.fc\r\ndel model.fc\r\n```\r\nbut in `xception.logist`:\r\n`\r\noutput = self.fc(x)\r\n`\r\nIt seems a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/44", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/44/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/44/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/44", "id": 303010891, "node_id": "MDU6SXNzdWUzMDMwMTA4OTE=", "number": 44, "title": "BatchNorm momentum in BNInception", "user": {"login": "artkorenev", "id": 5678669, "node_id": "MDQ6VXNlcjU2Nzg2Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5678669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artkorenev", "html_url": "https://github.com/artkorenev", "followers_url": "https://api.github.com/users/artkorenev/followers", "following_url": "https://api.github.com/users/artkorenev/following{/other_user}", "gists_url": "https://api.github.com/users/artkorenev/gists{/gist_id}", "starred_url": "https://api.github.com/users/artkorenev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artkorenev/subscriptions", "organizations_url": "https://api.github.com/users/artkorenev/orgs", "repos_url": "https://api.github.com/users/artkorenev/repos", "events_url": "https://api.github.com/users/artkorenev/events{/privacy}", "received_events_url": "https://api.github.com/users/artkorenev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-07T08:48:32Z", "updated_at": "2018-10-29T08:21:08Z", "closed_at": "2018-10-29T08:21:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI accidentally spotted that `momentum` value for `BatchNorm2d` in BNInception is set to `0.9` which seems to be quite extreme for batch normalization given that the default value is `0.1`\r\nIsn't it a typo?\r\n\r\nThx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/42", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/42/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/42/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/42", "id": 300770080, "node_id": "MDU6SXNzdWUzMDA3NzAwODA=", "number": 42, "title": "imagenet + background?", "user": {"login": "lostoy", "id": 3815695, "node_id": "MDQ6VXNlcjM4MTU2OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3815695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lostoy", "html_url": "https://github.com/lostoy", "followers_url": "https://api.github.com/users/lostoy/followers", "following_url": "https://api.github.com/users/lostoy/following{/other_user}", "gists_url": "https://api.github.com/users/lostoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lostoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lostoy/subscriptions", "organizations_url": "https://api.github.com/users/lostoy/orgs", "repos_url": "https://api.github.com/users/lostoy/repos", "events_url": "https://api.github.com/users/lostoy/events{/privacy}", "received_events_url": "https://api.github.com/users/lostoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-27T19:53:35Z", "updated_at": "2018-10-27T13:48:06Z", "closed_at": "2018-10-27T13:48:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nCould you elaborate on how this type of model is trained? Where do you get the background images?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/41", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/41/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/41/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/41", "id": 300424501, "node_id": "MDU6SXNzdWUzMDA0MjQ1MDE=", "number": 41, "title": "NASNeta_mobile", "user": {"login": "veronikayurchuk", "id": 18028027, "node_id": "MDQ6VXNlcjE4MDI4MDI3", "avatar_url": "https://avatars2.githubusercontent.com/u/18028027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veronikayurchuk", "html_url": "https://github.com/veronikayurchuk", "followers_url": "https://api.github.com/users/veronikayurchuk/followers", "following_url": "https://api.github.com/users/veronikayurchuk/following{/other_user}", "gists_url": "https://api.github.com/users/veronikayurchuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/veronikayurchuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veronikayurchuk/subscriptions", "organizations_url": "https://api.github.com/users/veronikayurchuk/orgs", "repos_url": "https://api.github.com/users/veronikayurchuk/repos", "events_url": "https://api.github.com/users/veronikayurchuk/events{/privacy}", "received_events_url": "https://api.github.com/users/veronikayurchuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-26T22:41:52Z", "updated_at": "2018-03-24T16:28:51Z", "closed_at": "2018-03-24T16:28:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @Cadene !\r\nI rewrote https://github.com/Cadene/pretrained-models.pytorch/blob/master/pretrainedmodels/models/nasnet.py#L487 , so now two options are available NASNetALarge (6 @ 4032) and NASNetAMobile (4 @ 1056).\r\nI can do a PR if it would be useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/40", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/40/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/40/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/40", "id": 298053010, "node_id": "MDU6SXNzdWUyOTgwNTMwMTA=", "number": 40, "title": "inception-resnet v2 pretrained weights can not be downloaded", "user": {"login": "lyakaap", "id": 27487010, "node_id": "MDQ6VXNlcjI3NDg3MDEw", "avatar_url": "https://avatars2.githubusercontent.com/u/27487010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lyakaap", "html_url": "https://github.com/lyakaap", "followers_url": "https://api.github.com/users/lyakaap/followers", "following_url": "https://api.github.com/users/lyakaap/following{/other_user}", "gists_url": "https://api.github.com/users/lyakaap/gists{/gist_id}", "starred_url": "https://api.github.com/users/lyakaap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lyakaap/subscriptions", "organizations_url": "https://api.github.com/users/lyakaap/orgs", "repos_url": "https://api.github.com/users/lyakaap/repos", "events_url": "https://api.github.com/users/lyakaap/events{/privacy}", "received_events_url": "https://api.github.com/users/lyakaap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-18T02:16:44Z", "updated_at": "2018-02-18T02:18:28Z", "closed_at": "2018-02-18T02:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "This link shows 404.\r\n```\r\nmodel_urls = {\r\n    'imagenet': 'http://webia.lip6.fr/~cadene/Downloads/inceptionresnetv2-d579a627.pth'\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/39", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/39/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/39/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/39", "id": 294754180, "node_id": "MDU6SXNzdWUyOTQ3NTQxODA=", "number": 39, "title": "DPN pretrained weights are not available", "user": {"login": "xfanplus", "id": 8945502, "node_id": "MDQ6VXNlcjg5NDU1MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8945502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfanplus", "html_url": "https://github.com/xfanplus", "followers_url": "https://api.github.com/users/xfanplus/followers", "following_url": "https://api.github.com/users/xfanplus/following{/other_user}", "gists_url": "https://api.github.com/users/xfanplus/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfanplus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfanplus/subscriptions", "organizations_url": "https://api.github.com/users/xfanplus/orgs", "repos_url": "https://api.github.com/users/xfanplus/repos", "events_url": "https://api.github.com/users/xfanplus/events{/privacy}", "received_events_url": "https://api.github.com/users/xfanplus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-06T13:12:23Z", "updated_at": "2018-02-07T21:54:46Z", "closed_at": "2018-02-07T21:54:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "all DualPathNetworks(DPN) pretrained weights are not available. I got \"403 Forbidden\" when i tried to download the following files:\r\n\r\nhttp://data.lip6.fr/cadene/pretrainedmodels/dpn92_extra-b040e4a9b.pth\r\nhttp://data.lip6.fr/cadene/pretrainedmodels/dpn68-66bebafa7.pth\r\nhttp://data.lip6.fr/cadene/pretrainedmodels/dpn98-5b90dec4d.pth\r\netc.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/38", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/38/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/38/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/38", "id": 293458189, "node_id": "MDU6SXNzdWUyOTM0NTgxODk=", "number": 38, "title": "NASNet Bug", "user": {"login": "haqishen", "id": 10557602, "node_id": "MDQ6VXNlcjEwNTU3NjAy", "avatar_url": "https://avatars3.githubusercontent.com/u/10557602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haqishen", "html_url": "https://github.com/haqishen", "followers_url": "https://api.github.com/users/haqishen/followers", "following_url": "https://api.github.com/users/haqishen/following{/other_user}", "gists_url": "https://api.github.com/users/haqishen/gists{/gist_id}", "starred_url": "https://api.github.com/users/haqishen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haqishen/subscriptions", "organizations_url": "https://api.github.com/users/haqishen/orgs", "repos_url": "https://api.github.com/users/haqishen/repos", "events_url": "https://api.github.com/users/haqishen/events{/privacy}", "received_events_url": "https://api.github.com/users/haqishen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-01T09:26:03Z", "updated_at": "2018-02-09T09:32:55Z", "closed_at": "2018-02-09T09:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello\r\n\r\nI've read the tensorflow version of nasnet and compared with your implementation.\r\nI guess \r\n\r\nhttps://github.com/Cadene/pretrained-models.pytorch/blob/795f3710648c49792530c721d632a0ec0e7ed628/pretrainedmodels/models/nasnet.py#L565\r\n\r\nshould be\r\n`x_cell_6 = self.cell_6(x_reduction_cell_0, x_cell_5)`\r\n\r\nand\r\n\r\nhttps://github.com/Cadene/pretrained-models.pytorch/blob/795f3710648c49792530c721d632a0ec0e7ed628/pretrainedmodels/models/nasnet.py#L574\r\n\r\nshould be \r\n`x_cell_12 = self.cell_12(x_reduction_cell_1, x_cell_11)`\r\n\r\nisn't it?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/37", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/37/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/37/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/37", "id": 292571473, "node_id": "MDU6SXNzdWUyOTI1NzE0NzM=", "number": 37, "title": "extracting image features as fastest as possible", "user": {"login": "saitarslanboun", "id": 9799395, "node_id": "MDQ6VXNlcjk3OTkzOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9799395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saitarslanboun", "html_url": "https://github.com/saitarslanboun", "followers_url": "https://api.github.com/users/saitarslanboun/followers", "following_url": "https://api.github.com/users/saitarslanboun/following{/other_user}", "gists_url": "https://api.github.com/users/saitarslanboun/gists{/gist_id}", "starred_url": "https://api.github.com/users/saitarslanboun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saitarslanboun/subscriptions", "organizations_url": "https://api.github.com/users/saitarslanboun/orgs", "repos_url": "https://api.github.com/users/saitarslanboun/repos", "events_url": "https://api.github.com/users/saitarslanboun/events{/privacy}", "received_events_url": "https://api.github.com/users/saitarslanboun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-29T21:43:34Z", "updated_at": "2018-02-09T09:33:21Z", "closed_at": "2018-02-09T09:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have around 1.5 M small size images, and I need to extract their feature using nasnet. I use the following code.\r\n\r\n```\r\nimport torch\r\nimport pretrainedmodels\r\nimport pretrainedmodels.utils as utils\r\nimport codecs\r\nimport sys\r\n\r\nmodel_name = 'nasnetalarge'\r\nmodel = pretrainedmodels.__dict__[model_name](num_classes=1000, pretrained='imagenet')\r\nmodel.eval()\r\n\r\n\r\nload_img = utils.LoadImage()\r\ntf_img = utils.TransformImage(model)\r\n\r\ntf_img = utils.TransformImage(model)\r\n\r\nimage_names = codecs.open(\"data/image_ids.train\", encoding=\"utf-8\").readlines()\r\nim_dir = \"/home/hasan/Documents/Amazon/data/Amazon/data\"\r\n\r\nfor a in range(len(image_names)):\r\n        path_img = (im_dir + \"/\" + image_names[a].replace(\"\\n\", \"\") + \".jpg\")\r\n        input_img = load_img(path_img)\r\n        input_tensor = tf_img(input_img)\r\n        input_tensor = input_tensor.unsqueeze(0)\r\n        input = torch.autograd.Variable(input_tensor, requires_grad=False)\r\n        output_logits = model(input)\r\n        output_features = model.features(input)\r\n        output_logits = model.logits(output_features)\r\n        print output_logits\r\n```\r\n\r\nIs there any way to make it fast? How can I make it to work with GPU? I checked that my pytorch uses GPU successfully with the following commands:\r\n\r\n```\r\nIn [1]: import torch\r\n\r\nIn [2]: torch.cuda.current_device()\r\nOut[2]: 0\r\n\r\nIn [3]: torch.cuda.device(0)\r\nOut[3]: <torch.cuda.device at 0x7f2132913c50>\r\n\r\nIn [4]: torch.cuda.device_count()\r\nOut[4]: 1\r\n\r\nIn [5]: torch.cuda.get_device_name(0)\r\nOut[5]: 'GeForce GTX 1080\r\n```\r\n\r\nBut when I run my code, I check nvidia-smi, and I see that my GPU is not allocated by my script.\r\n\r\nHow I can solve this problem?\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/36", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/36/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/36/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/36", "id": 292284895, "node_id": "MDU6SXNzdWUyOTIyODQ4OTU=", "number": 36, "title": "Error when loading pre-trained ResNeXt weights", "user": {"login": "snakers4", "id": 12515440, "node_id": "MDQ6VXNlcjEyNTE1NDQw", "avatar_url": "https://avatars0.githubusercontent.com/u/12515440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snakers4", "html_url": "https://github.com/snakers4", "followers_url": "https://api.github.com/users/snakers4/followers", "following_url": "https://api.github.com/users/snakers4/following{/other_user}", "gists_url": "https://api.github.com/users/snakers4/gists{/gist_id}", "starred_url": "https://api.github.com/users/snakers4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snakers4/subscriptions", "organizations_url": "https://api.github.com/users/snakers4/orgs", "repos_url": "https://api.github.com/users/snakers4/repos", "events_url": "https://api.github.com/users/snakers4/events{/privacy}", "received_events_url": "https://api.github.com/users/snakers4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-29T04:59:00Z", "updated_at": "2018-01-31T09:55:01Z", "closed_at": "2018-01-31T09:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "After invoking ResNeXt from [here ](https://github.com/Cadene/pretrained-models.pytorch/blob/master/pretrainedmodels/models/resnext.py) like this\r\n\r\n`resnext = resnext101_32x4d(num_classes=1000, pretrained='imagenet')`\r\n\r\nI get this error\r\n\r\n> ---------------------------------------------------------------------------\r\n> KeyError                                  Traceback (most recent call last)\r\n> <ipython-input-3-83d6e919e255> in <module>()\r\n> ----> 1 resnext = resnext101_32x4d(num_classes=1000, pretrained='imagenet')\r\n> \r\n> <ipython-input-2-5550e9059627> in resnext101_32x4d(num_classes, pretrained)\r\n>      81         settings = pretrained_settings['resnext101_32x4d'][pretrained]\r\n>      82         assert num_classes == settings['num_classes'],             \"num_classes should be {}, but is {}\".format(settings['num_classes'], num_classes)\r\n> ---> 83         model.load_state_dict(model_zoo.load_url(settings['url']))\r\n>      84         model.input_space = settings['input_space']\r\n>      85         model.input_size = settings['input_size']\r\n> \r\n> /opt/conda/lib/python3.5/site-packages/torch/nn/modules/module.py in load_state_dict(self, state_dict)\r\n>     353             if name not in own_state:\r\n>     354                 raise KeyError('unexpected key \"{}\" in state_dict'\r\n> --> 355                                .format(name))\r\n>     356             if isinstance(param, Parameter):\r\n>     357                 # backwards compatibility for serialized parameters\r\n> \r\n> KeyError: 'unexpected key \"features.0.weight\" in state_dict'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/35", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/35/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/35/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/35", "id": 290115831, "node_id": "MDU6SXNzdWUyOTAxMTU4MzE=", "number": 35, "title": "NasNet execution time", "user": {"login": "gngdb", "id": 1110259, "node_id": "MDQ6VXNlcjExMTAyNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1110259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gngdb", "html_url": "https://github.com/gngdb", "followers_url": "https://api.github.com/users/gngdb/followers", "following_url": "https://api.github.com/users/gngdb/following{/other_user}", "gists_url": "https://api.github.com/users/gngdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gngdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gngdb/subscriptions", "organizations_url": "https://api.github.com/users/gngdb/orgs", "repos_url": "https://api.github.com/users/gngdb/repos", "events_url": "https://api.github.com/users/gngdb/events{/privacy}", "received_events_url": "https://api.github.com/users/gngdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-19T21:42:57Z", "updated_at": "2018-01-20T12:28:28Z", "closed_at": "2018-01-20T12:17:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to adapt your model definition to include the CIFAR-10 and mobile version of the Nasnet network, ended up with the network here: https://github.com/gngdb/pytorch-cifar/blob/master/models/nasnet.py\r\n\r\nI've checked the output is the same as the original version of your code, so I'm pretty sure the large version is correct. The only problem is I just tried to train the CIFAR-10 network and it's extremely slow. Have you noticed the execution time per image with the large version in this repository is slow? When I run it I'm getting about 4.5 seconds per image.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/31", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/31/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/31/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/31", "id": 289107378, "node_id": "MDU6SXNzdWUyODkxMDczNzg=", "number": 31, "title": "default parameters of inception_v4 model conflicts", "user": {"login": "xiadingZ", "id": 16729275, "node_id": "MDQ6VXNlcjE2NzI5Mjc1", "avatar_url": "https://avatars1.githubusercontent.com/u/16729275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiadingZ", "html_url": "https://github.com/xiadingZ", "followers_url": "https://api.github.com/users/xiadingZ/followers", "following_url": "https://api.github.com/users/xiadingZ/following{/other_user}", "gists_url": "https://api.github.com/users/xiadingZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiadingZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiadingZ/subscriptions", "organizations_url": "https://api.github.com/users/xiadingZ/orgs", "repos_url": "https://api.github.com/users/xiadingZ/repos", "events_url": "https://api.github.com/users/xiadingZ/events{/privacy}", "received_events_url": "https://api.github.com/users/xiadingZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-17T00:56:20Z", "updated_at": "2018-01-17T15:08:15Z", "closed_at": "2018-01-17T15:08:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I use `pretrainedmodels.inceptionv4()`, it will throw error:\r\n```\r\nAssertionError: num_classes should be 1000, but is 1000\r\n```\r\nI have to specify num_classes to 1000 or pretrained to imagenet+background. can't use the default parameters to construct", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/30", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/30/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/30/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/30", "id": 288392207, "node_id": "MDU6SXNzdWUyODgzOTIyMDc=", "number": 30, "title": "Inconsistent behavior of torchvision_models and other models on '.features'", "user": {"login": "xiadingZ", "id": 16729275, "node_id": "MDQ6VXNlcjE2NzI5Mjc1", "avatar_url": "https://avatars1.githubusercontent.com/u/16729275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiadingZ", "html_url": "https://github.com/xiadingZ", "followers_url": "https://api.github.com/users/xiadingZ/followers", "following_url": "https://api.github.com/users/xiadingZ/following{/other_user}", "gists_url": "https://api.github.com/users/xiadingZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiadingZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiadingZ/subscriptions", "organizations_url": "https://api.github.com/users/xiadingZ/orgs", "repos_url": "https://api.github.com/users/xiadingZ/repos", "events_url": "https://api.github.com/users/xiadingZ/events{/privacy}", "received_events_url": "https://api.github.com/users/xiadingZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-14T08:33:41Z", "updated_at": "2018-01-14T10:50:38Z", "closed_at": "2018-01-14T10:50:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I use models such as inceptionv4, I can use\r\n`model = nn.Sequential(model.features, nn.AvgPool2d(8, count_include_pad=False))`\r\nto extract features of images, but when I use resnet152:\r\n`model = nn.Sequential(model.features, nn.AvgPool2d(7, stride=1))`\r\nit throws errors\uff1a\r\n```\r\nTraceback (most recent call last):\r\n  File \"prepro_feats.py\", line 109, in <module>\r\n    model.features, nn.AvgPool2d(7, stride=1))\r\n  File \"/home/xiading/anaconda3/lib/python3.6/site-packages/torch/nn/modules/container.py\", line 50, in __init__\r\n    self.add_module(str(idx), module)\r\n  File \"/home/xiading/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 139, in add_module\r\n    torch.typename(module)))\r\nTypeError: pretrainedmodels.models.torchvision_models.modify_resnets.<locals>.features is not a Module subclass\r\n```\r\n\r\nI hope these models can have a consitent behavior on their methods and attributes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/29", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/29/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/29/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/29", "id": 286709793, "node_id": "MDU6SXNzdWUyODY3MDk3OTM=", "number": 29, "title": "NasNet", "user": {"login": "taylover-pei", "id": 27360803, "node_id": "MDQ6VXNlcjI3MzYwODAz", "avatar_url": "https://avatars2.githubusercontent.com/u/27360803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taylover-pei", "html_url": "https://github.com/taylover-pei", "followers_url": "https://api.github.com/users/taylover-pei/followers", "following_url": "https://api.github.com/users/taylover-pei/following{/other_user}", "gists_url": "https://api.github.com/users/taylover-pei/gists{/gist_id}", "starred_url": "https://api.github.com/users/taylover-pei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taylover-pei/subscriptions", "organizations_url": "https://api.github.com/users/taylover-pei/orgs", "repos_url": "https://api.github.com/users/taylover-pei/repos", "events_url": "https://api.github.com/users/taylover-pei/events{/privacy}", "received_events_url": "https://api.github.com/users/taylover-pei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 579998411, "node_id": "MDU6TGFiZWw1Nzk5OTg0MTE=", "url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-08T10:58:43Z", "updated_at": "2018-01-25T19:55:24Z", "closed_at": "2018-01-25T19:55:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry to bother you. I am a new one in NasNet. So, I have some questions about the architecture of the NasNet. I want to ask that what is the meaning of the CellStem0 and CellStem1 module? Is there some references to explain it? Looking forward to your reply.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/28", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/28/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/28/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/28", "id": 285594147, "node_id": "MDU6SXNzdWUyODU1OTQxNDc=", "number": 28, "title": "Torchvision_models problem", "user": {"login": "Sampson-Lee", "id": 25904971, "node_id": "MDQ6VXNlcjI1OTA0OTcx", "avatar_url": "https://avatars2.githubusercontent.com/u/25904971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sampson-Lee", "html_url": "https://github.com/Sampson-Lee", "followers_url": "https://api.github.com/users/Sampson-Lee/followers", "following_url": "https://api.github.com/users/Sampson-Lee/following{/other_user}", "gists_url": "https://api.github.com/users/Sampson-Lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sampson-Lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sampson-Lee/subscriptions", "organizations_url": "https://api.github.com/users/Sampson-Lee/orgs", "repos_url": "https://api.github.com/users/Sampson-Lee/repos", "events_url": "https://api.github.com/users/Sampson-Lee/events{/privacy}", "received_events_url": "https://api.github.com/users/Sampson-Lee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-03T03:53:44Z", "updated_at": "2018-01-03T09:28:10Z", "closed_at": "2018-01-03T09:28:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWhen I finetuned resnet model in pretrained-models.pytorch, it gave errors:\r\n```\r\nFile \"/data/lixinpeng/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.py\", line 325, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/data/lixinpeng/pretrained-models.pytorch/pretrainedmodels/models/torchvision_models.py\", line 322, in forward\r\n    x = self.logits(x)\r\n  File \"/data/lixinpeng/pretrained-models.pytorch/pretrainedmodels/models/torchvision_models.py\", line 317, in logits\r\n    x = self.last_linear(x)\r\n  File \"/data/lixinpeng/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.py\", line 325, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/data/lixinpeng/anaconda2/lib/python2.7/site-packages/torch/nn/modules/linear.py\", line 55, in forward\r\n    return F.linear(input, self.weight, self.bias)\r\n  File \"/data/lixinpeng/anaconda2/lib/python2.7/site-packages/torch/nn/functional.py\", line 835, in linear\r\n    return torch.addmm(bias, input, weight.t())\r\nRuntimeError: size mismatch at /opt/conda/conda-bld/pytorch_1513363039688/work/torch/lib/THC/generic/THCTensorMathBlas.cu:243\r\n```\r\nI preprocessd data with the code:\r\n```\r\n'train': transforms.Compose([\r\n    transforms.RandomGrayscale(p=0.1),\r\n    transforms.RandomHorizontalFlip(),\r\n    transforms.RandomVerticalFlip(),\r\n    transforms.ColorJitter(),\r\n    pretrainedmodels.utils.TransformImage(model)\r\n])\r\n```\r\nBut when I finetuned resnet model in official torchvision.models, it worked well. I am confused with this problem, and have you used resnet in this repo successfully?\r\n  \r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/27", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/27/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/27/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/27", "id": 283510391, "node_id": "MDU6SXNzdWUyODM1MTAzOTE=", "number": 27, "title": "BNInception Training Problem", "user": {"login": "prakashjayy", "id": 11383400, "node_id": "MDQ6VXNlcjExMzgzNDAw", "avatar_url": "https://avatars0.githubusercontent.com/u/11383400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prakashjayy", "html_url": "https://github.com/prakashjayy", "followers_url": "https://api.github.com/users/prakashjayy/followers", "following_url": "https://api.github.com/users/prakashjayy/following{/other_user}", "gists_url": "https://api.github.com/users/prakashjayy/gists{/gist_id}", "starred_url": "https://api.github.com/users/prakashjayy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prakashjayy/subscriptions", "organizations_url": "https://api.github.com/users/prakashjayy/orgs", "repos_url": "https://api.github.com/users/prakashjayy/repos", "events_url": "https://api.github.com/users/prakashjayy/events{/privacy}", "received_events_url": "https://api.github.com/users/prakashjayy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-20T10:07:34Z", "updated_at": "2018-01-25T19:55:14Z", "closed_at": "2018-01-25T19:55:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI tried training bninception on my own dataset but it is not working. May I know the problem.\r\n\r\nEpoch 0/99\r\n----------\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 67/67 [00:22<00:00,  2.94it/s]\r\ntrain Loss: 0.0383 Acc: 0.1293\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 8/8 [00:02<00:00,  3.47it/s]\r\nval Loss: 2.5915 Acc: 0.1079\r\n\r\nEpoch 1/99\r\n----------\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 67/67 [00:17<00:00,  3.84it/s]\r\ntrain Loss: 0.0382 Acc: 0.1364\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 8/8 [00:02<00:00,  3.73it/s]\r\nval Loss: 0.0425 Acc: 0.0809\r\n\r\nEpoch 2/99\r\n----------\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 67/67 [00:17<00:00,  3.80it/s]\r\ntrain Loss: 0.0382 Acc: 0.1286\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 8/8 [00:02<00:00,  3.35it/s]\r\nval Loss: 70.5504 Acc: 0.0560\r\n\r\nEpoch 3/99\r\n----------\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 67/67 [00:17<00:00,  3.74it/s]\r\ntrain Loss: 0.0382 Acc: 0.1214\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 8/8 [00:02<00:00,  3.53it/s]\r\nval Loss: 228.3415 Acc: 0.0560\r\n\r\nEpoch 4/99\r\n----------\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 67/67 [00:17<00:00,  3.80it/s]\r\ntrain Loss: 0.0382 Acc: 0.1408\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 8/8 [00:02<00:00,  3.46it/s]\r\nval Loss: 12274.5517 Acc: 0.1079\r\n\r\nEpoch 5/99\r\n----------\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 67/67 [00:18<00:00,  3.68it/s]\r\ntrain Loss: 0.0383 Acc: 0.1202\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 8/8 [00:02<00:00,  3.00it/s]\r\nval Loss: 74337.8683 Acc: 0.0560\r\n\r\nEpoch 6/99\r\n----------\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 67/67 [00:17<00:00,  3.83it/s]\r\ntrain Loss: 0.0382 Acc: 0.1228\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 8/8 [00:02<00:00,  3.00it/s]\r\nval Loss: 152427.3008 Acc: 0.0560\r\n\r\n\r\nI have basically used my own dataloaders and training function. I trained nasnet and other networks available here and they are working fine, only bninception is not working. \r\n\r\nused batch_size=64, converted to BGR mode and Range255, also used mean and std as provided in the bninception.py file. \r\n\r\nMy implementation is quite lengthy, so not producing here. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/25", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/25/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/25/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/25", "id": 282148415, "node_id": "MDU6SXNzdWUyODIxNDg0MTU=", "number": 25, "title": "transforms.Scale seems to be deprecated", "user": {"login": "adamcasson", "id": 6784558, "node_id": "MDQ6VXNlcjY3ODQ1NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6784558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamcasson", "html_url": "https://github.com/adamcasson", "followers_url": "https://api.github.com/users/adamcasson/followers", "following_url": "https://api.github.com/users/adamcasson/following{/other_user}", "gists_url": "https://api.github.com/users/adamcasson/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamcasson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamcasson/subscriptions", "organizations_url": "https://api.github.com/users/adamcasson/orgs", "repos_url": "https://api.github.com/users/adamcasson/repos", "events_url": "https://api.github.com/users/adamcasson/events{/privacy}", "received_events_url": "https://api.github.com/users/adamcasson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-14T15:56:10Z", "updated_at": "2018-01-25T19:55:01Z", "closed_at": "2018-01-25T19:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using torchvision 0.2.0\r\n\r\n`UserWarning: The use of the transforms.Scale transform is deprecated, please use transforms.Resize instead.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/24", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/24/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/24/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/24", "id": 278326628, "node_id": "MDU6SXNzdWUyNzgzMjY2Mjg=", "number": 24, "title": "how did you train nasnet_large?", "user": {"login": "qingzhouzhen", "id": 14066190, "node_id": "MDQ6VXNlcjE0MDY2MTkw", "avatar_url": "https://avatars0.githubusercontent.com/u/14066190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzhouzhen", "html_url": "https://github.com/qingzhouzhen", "followers_url": "https://api.github.com/users/qingzhouzhen/followers", "following_url": "https://api.github.com/users/qingzhouzhen/following{/other_user}", "gists_url": "https://api.github.com/users/qingzhouzhen/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzhouzhen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzhouzhen/subscriptions", "organizations_url": "https://api.github.com/users/qingzhouzhen/orgs", "repos_url": "https://api.github.com/users/qingzhouzhen/repos", "events_url": "https://api.github.com/users/qingzhouzhen/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzhouzhen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T01:18:43Z", "updated_at": "2017-12-08T12:08:16Z", "closed_at": "2017-12-08T12:08:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n Notes for training large NASNet model on ImageNet<br>\r\n batch size (per replica): 16\r\n learning rate: 0.015 * 100\r\n learning rate decay factor: 0.97\r\n num epochs per decay: 2.4\r\n sync sgd with 100 replicas\r\n auxiliary head loss weighting: 0.4\r\n label smoothing: 0.1\r\n clip global norm of all gradients by 10\r\n```\r\n\r\nI found this in nasnet.py in Tensorflow, but it need 100GPUs, I am going to use batch parallel, and by the way, it said it has a `# auxiliary head loss weighting: 0.4`, and in TF'code, it write like this\r\n```   \r\n  #############################\r\n      # Specify the loss function #\r\n  #############################\r\n  if 'AuxLogits' in end_points:\r\n      slim.losses.softmax_cross_entropy(\r\n            end_points['AuxLogits'], labels,\r\n            label_smoothing=FLAGS.label_smoothing, weights=0.4,\r\n            scope='aux_loss')\r\n      slim.losses.softmax_cross_entropy(\r\n          logits, labels, label_smoothing=FLAGS.label_smoothing, weights=1.0)\r\n      return end_points\r\n```\r\nhow did you deal with this AuxLogits? use 100 GPUs like google? I know batch parelle which can simulate large batch size, would it affect accuracy? I change your code to MXNET, but can only arrive 8 in K80,\r\n@Cadene ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/23", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/23/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/23/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/23", "id": 277267129, "node_id": "MDU6SXNzdWUyNzcyNjcxMjk=", "number": 23, "title": "Unable to NASNetALarge with toy example", "user": {"login": "mrteera", "id": 1741387, "node_id": "MDQ6VXNlcjE3NDEzODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1741387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrteera", "html_url": "https://github.com/mrteera", "followers_url": "https://api.github.com/users/mrteera/followers", "following_url": "https://api.github.com/users/mrteera/following{/other_user}", "gists_url": "https://api.github.com/users/mrteera/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrteera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrteera/subscriptions", "organizations_url": "https://api.github.com/users/mrteera/orgs", "repos_url": "https://api.github.com/users/mrteera/repos", "events_url": "https://api.github.com/users/mrteera/events{/privacy}", "received_events_url": "https://api.github.com/users/mrteera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-28T05:53:22Z", "updated_at": "2017-12-08T12:08:38Z", "closed_at": "2017-12-08T12:08:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am able to run `python test/toy-example.py -a fbresnet152` but when I try `python test/toy-example.py -a NASNetALarge` I got this error:\r\n```\r\npretrained-models.pytorch$ python test/toy-example.py -a NASNetALarge\r\nTraceback (most recent call last):\r\n  File \"test/toy-example.py\", line 24, in <module>\r\n    model = pretrainedmodels.__dict__[args.arch](num_classes=1000, pretrained='imagenet')\r\nTypeError: __init__() got an unexpected keyword argument 'pretrained'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/22", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/22/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/22/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/22", "id": 276766987, "node_id": "MDU6SXNzdWUyNzY3NjY5ODc=", "number": 22, "title": "toy-example python2.7 compatibility", "user": {"login": "mtobeiyf", "id": 5097752, "node_id": "MDQ6VXNlcjUwOTc3NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5097752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtobeiyf", "html_url": "https://github.com/mtobeiyf", "followers_url": "https://api.github.com/users/mtobeiyf/followers", "following_url": "https://api.github.com/users/mtobeiyf/following{/other_user}", "gists_url": "https://api.github.com/users/mtobeiyf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtobeiyf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtobeiyf/subscriptions", "organizations_url": "https://api.github.com/users/mtobeiyf/orgs", "repos_url": "https://api.github.com/users/mtobeiyf/repos", "events_url": "https://api.github.com/users/mtobeiyf/events{/privacy}", "received_events_url": "https://api.github.com/users/mtobeiyf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-25T18:02:20Z", "updated_at": "2017-11-28T18:04:14Z", "closed_at": "2017-11-28T18:04:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for your great work! \ud83c\udf89 \r\n\r\nMy environment was set based on Python 2.7, I met two problems while directly running toy-example.py\r\n\r\nThe first is: \r\n```python\r\nTraceback (most recent call last):\r\n  File \"test/toy-example.py\", line 9, in <module>\r\n    import pretrainedmodels\r\n  File \"../pretrained-models.pytorch/pretrainedmodels/__init__.py\", line 6, in <module>\r\n    from .torchvision import *\r\n  File \"../pretrained-models.pytorch/pretrainedmodels/torchvision.py\", line 1, in <module>\r\n    import torchvision.models as models\r\nImportError: No module named models\r\n```\r\nI think this problem is caused by the name conflicts between the official torchvison and your `pretrainedmodels/torchvision.py`\r\nso I simply rename `pretrainedmodels/torchvision.py` to `pretrainedmodels/torchvision2.py`, and modify the line `from .torchvision2 import *` in `pretrainedmodels/__init__.py` at the same time. \r\nIt worked.\r\n\r\nThen, another problem:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"test/toy-example.py\", line 35, in <module>\r\n    transforms.Scale(round(max(model.input_size)*1.143)),\r\n  File \"/home/user/virtualenv/ENV/local/lib/python2.7/site-packages/torchvision/transforms.py\", line 174, in __init__\r\n    assert isinstance(size, int) or (isinstance(size, collections.Iterable) and len(size) == 2)\r\nAssertionError\r\n```\r\nThe argument passed to transformer `round(max(model.input_size)*1.143)` is not always an integer according to the python 2 [documentation](https://docs.python.org/2/library/functions.html#round)\r\nBy changing that line to\r\n```python\r\ntransforms.Scale(int(round(max(model.input_size)*1.143))),\r\n```\r\nfinally got the example running.\r\n\r\nSo, if you'd like, the code could improve its compatibility with Python 2.7.\r\n\r\nThank you so much! \ud83d\ude03 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/21", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/21/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/21/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/21", "id": 276460827, "node_id": "MDU6SXNzdWUyNzY0NjA4Mjc=", "number": 21, "title": "Pretrained data for nasnet not available on the servers", "user": {"login": "suvash", "id": 144952, "node_id": "MDQ6VXNlcjE0NDk1Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/144952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suvash", "html_url": "https://github.com/suvash", "followers_url": "https://api.github.com/users/suvash/followers", "following_url": "https://api.github.com/users/suvash/following{/other_user}", "gists_url": "https://api.github.com/users/suvash/gists{/gist_id}", "starred_url": "https://api.github.com/users/suvash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suvash/subscriptions", "organizations_url": "https://api.github.com/users/suvash/orgs", "repos_url": "https://api.github.com/users/suvash/repos", "events_url": "https://api.github.com/users/suvash/events{/privacy}", "received_events_url": "https://api.github.com/users/suvash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-23T19:36:12Z", "updated_at": "2017-11-23T20:05:12Z", "closed_at": "2017-11-23T20:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Cadene/pretrained-models.pytorch/blob/da116f99e6326afad444de0f43008f9784fe60b1/pretrainedmodels/nasnet.py#L10\r\n\r\nhttps://github.com/Cadene/pretrained-models.pytorch/blob/master/pretrainedmodels/nasnet.py#L19\r\n\r\n@Cadene Thanks a lot for these pretrained models. I was trying to use nasnet in one of my experiments, when I realised that these files (linked above) don't exist on the server. Do I need to fetch these from somewhere else ?\r\n\r\nI'm trying to figure this stuff out, so any tiny bit of help would be super. \ud83c\udf7b ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/20", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/20/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/20/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/20", "id": 275502550, "node_id": "MDU6SXNzdWUyNzU1MDI1NTA=", "number": 20, "title": "Modify NASNet", "user": {"login": "ahkarami", "id": 28620609, "node_id": "MDQ6VXNlcjI4NjIwNjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/28620609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahkarami", "html_url": "https://github.com/ahkarami", "followers_url": "https://api.github.com/users/ahkarami/followers", "following_url": "https://api.github.com/users/ahkarami/following{/other_user}", "gists_url": "https://api.github.com/users/ahkarami/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahkarami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahkarami/subscriptions", "organizations_url": "https://api.github.com/users/ahkarami/orgs", "repos_url": "https://api.github.com/users/ahkarami/repos", "events_url": "https://api.github.com/users/ahkarami/events{/privacy}", "received_events_url": "https://api.github.com/users/ahkarami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-20T21:20:17Z", "updated_at": "2018-12-17T07:07:57Z", "closed_at": "2017-11-21T10:24:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear @Cadene,\r\nThank you for your fantastic repository. I want to modify NASNet (_i.e.,_ apply some minor modifications on NASNet by remove Dropout, add sigmoid layer at the end of net and etc.). I have implemented below code:\r\n\r\n```\r\nimport torch\r\nfrom torch.autograd import Variable\r\nimport torch.nn.functional as F\r\nimport torch.nn as nn\r\nfrom nasnet import nasnetalarge\r\n\r\nnum_classes = 10\r\n\r\n# *** Define Modified NASNet Class:\r\nclass ModifiedNASNet(nn.Module):\r\n    def __init__(self, num_classes):\r\n        super(ModifiedNASNet, self).__init__()\r\n\r\n        original_model = nasnetalarge(num_classes=1000, pretrained='imagenet')\r\n\r\n        # Everything except the last classifier:\r\n        self.features = nn.Sequential(*list(original_model.children())[:-4])\r\n\r\n        # Set number of features:\r\n        num_feats = 4032\r\n\r\n        # Plug our linear layer:\r\n        self.classifier = nn.Sequential(nn.Linear(num_feats, num_classes))\r\n\r\n    def forward(self, x):\r\n        f = self.features(x)\r\n        out = F.relu(f, inplace=True)\r\n        out = F.avg_pool2d(out, kernel_size=11, stride=1, padding=0, ceil_mode=False, count_include_pad=True)\r\n        out = out.view(out.size(0), -1) # Flatten\r\n        out = self.classifier(out)\r\n        out = F.sigmoid(out)\r\n        return out\r\n\r\n# *** test above class:\r\nmodel = ModifiedNASNet(num_classes).cuda()\r\n# print(model)\r\nx = Variable(torch.randn(1, 3, 331, 331), volatile=True).cuda()\r\nout = model(x)\r\nprint(out)\r\n\r\n```\r\n\r\nHowever, the following error has occurred:\r\n`TypeError: forward() missing 1 required positional argument: 'x_stem_0'`\r\nWould you please kindly help me to address this problem?\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/19", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/19/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/19/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/19", "id": 275165584, "node_id": "MDU6SXNzdWUyNzUxNjU1ODQ=", "number": 19, "title": "Speed of fine-tuning NASNet", "user": {"login": "nasusu", "id": 11441395, "node_id": "MDQ6VXNlcjExNDQxMzk1", "avatar_url": "https://avatars2.githubusercontent.com/u/11441395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasusu", "html_url": "https://github.com/nasusu", "followers_url": "https://api.github.com/users/nasusu/followers", "following_url": "https://api.github.com/users/nasusu/following{/other_user}", "gists_url": "https://api.github.com/users/nasusu/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasusu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasusu/subscriptions", "organizations_url": "https://api.github.com/users/nasusu/orgs", "repos_url": "https://api.github.com/users/nasusu/repos", "events_url": "https://api.github.com/users/nasusu/events{/privacy}", "received_events_url": "https://api.github.com/users/nasusu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-19T15:04:22Z", "updated_at": "2017-12-16T01:53:58Z", "closed_at": "2017-12-16T01:51:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "First thanks for your pretrained model, it helps me a lot!\r\n\r\nI try to fine-tune NASNet in my own dataset, but it seems to be very slow. It takes 10 second to go over a batch of size 8 in TitanX, almost 15 times slower than InceptionResnetV2. Is it normal\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/18", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/18/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/18/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/18", "id": 275023601, "node_id": "MDU6SXNzdWUyNzUwMjM2MDE=", "number": 18, "title": "Transform own model tutorial ", "user": {"login": "JoeHEZHAO", "id": 14569827, "node_id": "MDQ6VXNlcjE0NTY5ODI3", "avatar_url": "https://avatars0.githubusercontent.com/u/14569827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoeHEZHAO", "html_url": "https://github.com/JoeHEZHAO", "followers_url": "https://api.github.com/users/JoeHEZHAO/followers", "following_url": "https://api.github.com/users/JoeHEZHAO/following{/other_user}", "gists_url": "https://api.github.com/users/JoeHEZHAO/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoeHEZHAO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoeHEZHAO/subscriptions", "organizations_url": "https://api.github.com/users/JoeHEZHAO/orgs", "repos_url": "https://api.github.com/users/JoeHEZHAO/repos", "events_url": "https://api.github.com/users/JoeHEZHAO/events{/privacy}", "received_events_url": "https://api.github.com/users/JoeHEZHAO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-17T23:09:53Z", "updated_at": "2017-11-18T22:31:39Z", "closed_at": "2017-11-18T22:31:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Cadene\r\n\r\nThanks for your great work. \r\n\r\nIs there a way to transform my own tf-trained model to pytorch model ? Is there a tutorial for this ? Or which part of your code I should follow ?\r\n\r\nBest\r\nJoe", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/16", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/16/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/16/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/16", "id": 273069416, "node_id": "MDU6SXNzdWUyNzMwNjk0MTY=", "number": 16, "title": "[NASNet-A] Pytorch Separable", "user": {"login": "aussetg", "id": 460942, "node_id": "MDQ6VXNlcjQ2MDk0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/460942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aussetg", "html_url": "https://github.com/aussetg", "followers_url": "https://api.github.com/users/aussetg/followers", "following_url": "https://api.github.com/users/aussetg/following{/other_user}", "gists_url": "https://api.github.com/users/aussetg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aussetg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aussetg/subscriptions", "organizations_url": "https://api.github.com/users/aussetg/orgs", "repos_url": "https://api.github.com/users/aussetg/repos", "events_url": "https://api.github.com/users/aussetg/events{/privacy}", "received_events_url": "https://api.github.com/users/aussetg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-10T21:44:35Z", "updated_at": "2017-11-11T12:09:27Z", "closed_at": "2017-11-11T12:09:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've actually looked at Pytorch commit for the new separable convolutions and I was wrong, they do not fuse SepConv and Pointwise they instead apply multiple filters per channel and do not pool across channels. \r\n\r\nThis means that:\r\n* Everything I've done is actually incorrect, embarrassing ;)\r\n* The old code actually works with the master branch and is automatically sped up ! Great !\r\n\r\n# Fix: \r\n\r\nRevert to commit 99deb0e503ed70021142baa04cce02264d25c31a", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/15", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/15/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/15/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/15", "id": 272910622, "node_id": "MDU6SXNzdWUyNzI5MTA2MjI=", "number": 15, "title": "Is the maxpool and avgpool interchanged here?", "user": {"login": "Noplz", "id": 5870431, "node_id": "MDQ6VXNlcjU4NzA0MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5870431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Noplz", "html_url": "https://github.com/Noplz", "followers_url": "https://api.github.com/users/Noplz/followers", "following_url": "https://api.github.com/users/Noplz/following{/other_user}", "gists_url": "https://api.github.com/users/Noplz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Noplz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Noplz/subscriptions", "organizations_url": "https://api.github.com/users/Noplz/orgs", "repos_url": "https://api.github.com/users/Noplz/repos", "events_url": "https://api.github.com/users/Noplz/events{/privacy}", "received_events_url": "https://api.github.com/users/Noplz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-10T12:00:47Z", "updated_at": "2017-11-18T22:32:04Z", "closed_at": "2017-11-18T22:32:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Cadene/pretrained-models.pytorch/blob/dbacab66ca044c05eafd5978a14e85947a53e258/pretrainedmodels/nasnet.py#L82-L86\r\n\r\nI compared the tensorflow implementation, I think your implementation in ReductionCell0 is correct and the CellStem0 should stay the same as ReductionCell0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/13", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/13/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/13/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/13", "id": 271075276, "node_id": "MDU6SXNzdWUyNzEwNzUyNzY=", "number": 13, "title": "NASNet", "user": {"login": "ahkarami", "id": 28620609, "node_id": "MDQ6VXNlcjI4NjIwNjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/28620609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahkarami", "html_url": "https://github.com/ahkarami", "followers_url": "https://api.github.com/users/ahkarami/followers", "following_url": "https://api.github.com/users/ahkarami/following{/other_user}", "gists_url": "https://api.github.com/users/ahkarami/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahkarami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahkarami/subscriptions", "organizations_url": "https://api.github.com/users/ahkarami/orgs", "repos_url": "https://api.github.com/users/ahkarami/repos", "events_url": "https://api.github.com/users/ahkarami/events{/privacy}", "received_events_url": "https://api.github.com/users/ahkarami/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-11-03T18:30:49Z", "updated_at": "2018-12-15T15:02:24Z", "closed_at": "2017-11-18T22:31:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear @Cadene,\r\nThank your for your nice repository. Recently the Google Brain Team released a fantastic CNN model, _[NASNet](https://arxiv.org/abs/1707.07012)_, in [TF-slim](https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet), which achieved the state-of-the-art Top-1 Accuracy on _ImageNet_ by **82.7 %**. Would you please kindly port this model into your nice repository (_i.e.,_ PyTorch Pre-Trained Models)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/11", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/11/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/11/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/11", "id": 269810069, "node_id": "MDU6SXNzdWUyNjk4MTAwNjk=", "number": 11, "title": "--arch BNIncetion will get error", "user": {"login": "CandyFather", "id": 1396270, "node_id": "MDQ6VXNlcjEzOTYyNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1396270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CandyFather", "html_url": "https://github.com/CandyFather", "followers_url": "https://api.github.com/users/CandyFather/followers", "following_url": "https://api.github.com/users/CandyFather/following{/other_user}", "gists_url": "https://api.github.com/users/CandyFather/gists{/gist_id}", "starred_url": "https://api.github.com/users/CandyFather/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CandyFather/subscriptions", "organizations_url": "https://api.github.com/users/CandyFather/orgs", "repos_url": "https://api.github.com/users/CandyFather/repos", "events_url": "https://api.github.com/users/CandyFather/events{/privacy}", "received_events_url": "https://api.github.com/users/CandyFather/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-31T02:02:24Z", "updated_at": "2017-12-15T08:46:32Z", "closed_at": "2017-12-15T08:46:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "--arch BNIncetion will get error.User must use --arch bninceptin instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/10", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/10/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/10/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/10", "id": 269809927, "node_id": "MDU6SXNzdWUyNjk4MDk5Mjc=", "number": 10, "title": "-a can not run, may get error", "user": {"login": "CandyFather", "id": 1396270, "node_id": "MDQ6VXNlcjEzOTYyNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1396270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CandyFather", "html_url": "https://github.com/CandyFather", "followers_url": "https://api.github.com/users/CandyFather/followers", "following_url": "https://api.github.com/users/CandyFather/following{/other_user}", "gists_url": "https://api.github.com/users/CandyFather/gists{/gist_id}", "starred_url": "https://api.github.com/users/CandyFather/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CandyFather/subscriptions", "organizations_url": "https://api.github.com/users/CandyFather/orgs", "repos_url": "https://api.github.com/users/CandyFather/repos", "events_url": "https://api.github.com/users/CandyFather/events{/privacy}", "received_events_url": "https://api.github.com/users/CandyFather/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-31T02:01:24Z", "updated_at": "2017-12-15T08:47:41Z", "closed_at": "2017-12-15T08:47:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "-a can not run, may get error, in fact, you must use --arch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/9", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/9/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/9/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/9", "id": 267883160, "node_id": "MDU6SXNzdWUyNjc4ODMxNjA=", "number": 9, "title": "'HTTP Error 403: Forbidden' when downloading pretrained models", "user": {"login": "wu-hanqing", "id": 10327590, "node_id": "MDQ6VXNlcjEwMzI3NTkw", "avatar_url": "https://avatars0.githubusercontent.com/u/10327590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wu-hanqing", "html_url": "https://github.com/wu-hanqing", "followers_url": "https://api.github.com/users/wu-hanqing/followers", "following_url": "https://api.github.com/users/wu-hanqing/following{/other_user}", "gists_url": "https://api.github.com/users/wu-hanqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/wu-hanqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wu-hanqing/subscriptions", "organizations_url": "https://api.github.com/users/wu-hanqing/orgs", "repos_url": "https://api.github.com/users/wu-hanqing/repos", "events_url": "https://api.github.com/users/wu-hanqing/events{/privacy}", "received_events_url": "https://api.github.com/users/wu-hanqing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-24T03:12:43Z", "updated_at": "2017-10-26T02:05:05Z", "closed_at": "2017-10-26T02:05:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Cadene,\r\n\r\nWhen I use your code as the example, \r\n```\r\nmodel_name = 'bninception'\r\nmodel = pretrainedmodels.__dict__[model_name](1000)\r\n```\r\ngot an error: `urllib2.HTTPError: HTTP Error 403: Forbidden`.\r\nIf I open the url in browser, the message was \r\n`You don't have permission to access /~cadene/Downloads/pretrained-models.pytorch/bn_inception-9f5701afb96c8044.pth on this server.`.\r\n\r\nSo, is there something wrong with the server or the urls?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/8", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/8/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/8/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/8", "id": 263211266, "node_id": "MDU6SXNzdWUyNjMyMTEyNjY=", "number": 8, "title": "resnext speed", "user": {"login": "mctigger", "id": 4086336, "node_id": "MDQ6VXNlcjQwODYzMzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4086336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mctigger", "html_url": "https://github.com/mctigger", "followers_url": "https://api.github.com/users/mctigger/followers", "following_url": "https://api.github.com/users/mctigger/following{/other_user}", "gists_url": "https://api.github.com/users/mctigger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mctigger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mctigger/subscriptions", "organizations_url": "https://api.github.com/users/mctigger/orgs", "repos_url": "https://api.github.com/users/mctigger/repos", "events_url": "https://api.github.com/users/mctigger/events{/privacy}", "received_events_url": "https://api.github.com/users/mctigger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-10-05T17:49:52Z", "updated_at": "2018-01-25T19:56:17Z", "closed_at": "2017-10-07T17:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\nI tried resnext-101(32x4d) for 160x160 crops and also the torchvision resnet-101. For me resnext needs nearly double the time to train compared to the resnet. (Only thing I changed is the final GlobalAveragePooling and classifier layer)\r\nIs this expected behavior?\r\n[Here](https://github.com/facebookresearch/ResNeXt#single-crop-224x224-validation-error-rate) it says the required FLOPs are the same, but obviously frameworks like Pytorch may be slower because of a more complicated network structure)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/7", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/7/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/7/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/7", "id": 259824350, "node_id": "MDU6SXNzdWUyNTk4MjQzNTA=", "number": 7, "title": "InceptionV3 normalisation", "user": {"login": "gurkirt", "id": 7077539, "node_id": "MDQ6VXNlcjcwNzc1Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7077539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gurkirt", "html_url": "https://github.com/gurkirt", "followers_url": "https://api.github.com/users/gurkirt/followers", "following_url": "https://api.github.com/users/gurkirt/following{/other_user}", "gists_url": "https://api.github.com/users/gurkirt/gists{/gist_id}", "starred_url": "https://api.github.com/users/gurkirt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gurkirt/subscriptions", "organizations_url": "https://api.github.com/users/gurkirt/orgs", "repos_url": "https://api.github.com/users/gurkirt/repos", "events_url": "https://api.github.com/users/gurkirt/events{/privacy}", "received_events_url": "https://api.github.com/users/gurkirt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-22T14:00:05Z", "updated_at": "2017-09-22T15:20:08Z", "closed_at": "2017-09-22T15:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi-great work with putting all the models together. \r\n\r\nModel mean and std given at https://github.com/Cadene/pretrained-models.pytorch#modelmean for inceptionv3 are different from what is provided with pytorchVison https://github.com/pytorch/vision#models. Where they say \"The images have to be loaded in to a range of [0, 1] and then normalized using mean=[0.485, 0.456, 0.406] and std=[0.229, 0.224, 0.225]\" for all the models including inception v3. \r\n\r\nAm I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/6", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/6/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/6/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/6", "id": 246945911, "node_id": "MDU6SXNzdWUyNDY5NDU5MTE=", "number": 6, "title": "License is missing", "user": {"login": "oavdeev", "id": 3689, "node_id": "MDQ6VXNlcjM2ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oavdeev", "html_url": "https://github.com/oavdeev", "followers_url": "https://api.github.com/users/oavdeev/followers", "following_url": "https://api.github.com/users/oavdeev/following{/other_user}", "gists_url": "https://api.github.com/users/oavdeev/gists{/gist_id}", "starred_url": "https://api.github.com/users/oavdeev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oavdeev/subscriptions", "organizations_url": "https://api.github.com/users/oavdeev/orgs", "repos_url": "https://api.github.com/users/oavdeev/repos", "events_url": "https://api.github.com/users/oavdeev/events{/privacy}", "received_events_url": "https://api.github.com/users/oavdeev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-01T03:34:06Z", "updated_at": "2017-08-01T05:51:09Z", "closed_at": "2017-08-01T05:50:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Remi!\r\n\r\nAwesome work, would be great if you could clarify the license.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/5", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/5/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/5/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/5", "id": 244796775, "node_id": "MDU6SXNzdWUyNDQ3OTY3NzU=", "number": 5, "title": "BatchNorm momentum set to 0 in Inception models", "user": {"login": "rwightman", "id": 5702664, "node_id": "MDQ6VXNlcjU3MDI2NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwightman", "html_url": "https://github.com/rwightman", "followers_url": "https://api.github.com/users/rwightman/followers", "following_url": "https://api.github.com/users/rwightman/following{/other_user}", "gists_url": "https://api.github.com/users/rwightman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwightman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwightman/subscriptions", "organizations_url": "https://api.github.com/users/rwightman/orgs", "repos_url": "https://api.github.com/users/rwightman/repos", "events_url": "https://api.github.com/users/rwightman/events{/privacy}", "received_events_url": "https://api.github.com/users/rwightman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-21T22:20:11Z", "updated_at": "2017-07-22T16:40:49Z", "closed_at": "2017-07-22T12:31:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Both Inception models initialize BatchNorm with self.bn = nn.BatchNorm2d(out_planes, eps=0.001, momentum=0, affine=True)\r\n\r\nSetting momentum to 0 prevents the running mean and var from being updated during training. When training one of these models on a different dataset, this causes a significant discrepancy between train and eval modes. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/4", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/4/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/4/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/4", "id": 242671275, "node_id": "MDU6SXNzdWUyNDI2NzEyNzU=", "number": 4, "title": "Toy example incorrect answers", "user": {"login": "nizhib", "id": 340109, "node_id": "MDQ6VXNlcjM0MDEwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/340109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nizhib", "html_url": "https://github.com/nizhib", "followers_url": "https://api.github.com/users/nizhib/followers", "following_url": "https://api.github.com/users/nizhib/following{/other_user}", "gists_url": "https://api.github.com/users/nizhib/gists{/gist_id}", "starred_url": "https://api.github.com/users/nizhib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nizhib/subscriptions", "organizations_url": "https://api.github.com/users/nizhib/orgs", "repos_url": "https://api.github.com/users/nizhib/repos", "events_url": "https://api.github.com/users/nizhib/events{/privacy}", "received_events_url": "https://api.github.com/users/nizhib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-13T11:34:15Z", "updated_at": "2017-07-13T13:57:26Z", "closed_at": "2017-07-13T13:57:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "With toy example fixing with `(num_classes=1000, pretrained='imagenet')` the classes being returned are very strange:\r\n\r\n* `inceptionresnetv2`\r\n```\r\ndata/cat.jpg is a n03903868 pedestal, plinth, footstall\r\ndata/lena.jpg is a n03903868 pedestal, plinth, footstall\r\n```\r\n* `inceptionv4`\r\n```\r\ndata/cat.jpg is a b'n01677366 common iguana, iguana, Iguana iguana'\r\ndata/lena.jpg is a b'n01677366 common iguana, iguana, Iguana iguana'\r\n```\r\n* `fbresnet152`\r\n```\r\ndata/cat.jpg is a n01677366 common iguana, iguana, Iguana iguana\r\ndata/lena.jpg is a n01768244 trilobite\r\n```\r\n\r\nSynset neighbours of the returned classes don't fit either so it's not some form of +- 1 indexing problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/3", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/3/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/3/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/3", "id": 242667783, "node_id": "MDU6SXNzdWUyNDI2Njc3ODM=", "number": 3, "title": "Upgrade `resnext101_*` to unified api", "user": {"login": "nizhib", "id": 340109, "node_id": "MDQ6VXNlcjM0MDEwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/340109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nizhib", "html_url": "https://github.com/nizhib", "followers_url": "https://api.github.com/users/nizhib/followers", "following_url": "https://api.github.com/users/nizhib/following{/other_user}", "gists_url": "https://api.github.com/users/nizhib/gists{/gist_id}", "starred_url": "https://api.github.com/users/nizhib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nizhib/subscriptions", "organizations_url": "https://api.github.com/users/nizhib/orgs", "repos_url": "https://api.github.com/users/nizhib/repos", "events_url": "https://api.github.com/users/nizhib/events{/privacy}", "received_events_url": "https://api.github.com/users/nizhib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-13T11:18:18Z", "updated_at": "2017-07-13T12:06:22Z", "closed_at": "2017-07-13T12:06:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "As for now model-returning functions have no `num_classes` param and model classes being returned don't have fields that are expected to be in the circumstances of unified behavior (`input_size`, `mean`, `std`, etc.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/2", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/2/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/2/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/2", "id": 242666888, "node_id": "MDU6SXNzdWUyNDI2NjY4ODg=", "number": 2, "title": "Toy example fails", "user": {"login": "nizhib", "id": 340109, "node_id": "MDQ6VXNlcjM0MDEwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/340109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nizhib", "html_url": "https://github.com/nizhib", "followers_url": "https://api.github.com/users/nizhib/followers", "following_url": "https://api.github.com/users/nizhib/following{/other_user}", "gists_url": "https://api.github.com/users/nizhib/gists{/gist_id}", "starred_url": "https://api.github.com/users/nizhib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nizhib/subscriptions", "organizations_url": "https://api.github.com/users/nizhib/orgs", "repos_url": "https://api.github.com/users/nizhib/repos", "events_url": "https://api.github.com/users/nizhib/events{/privacy}", "received_events_url": "https://api.github.com/users/nizhib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-13T11:14:23Z", "updated_at": "2017-07-13T11:35:39Z", "closed_at": "2017-07-13T11:35:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Subj with `AssertionError: num_classes should be 1000, but is 1001`, because `imagenet` and 1001 classes are actually incosistent in the example.\r\n\r\nBTW default params for `inceptionresnetv2` reprodeced in the toy example are fail-generating either.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/1", "repository_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch", "labels_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/1/comments", "events_url": "https://api.github.com/repos/Cadene/pretrained-models.pytorch/issues/1/events", "html_url": "https://github.com/Cadene/pretrained-models.pytorch/issues/1", "id": 242622672, "node_id": "MDU6SXNzdWUyNDI2MjI2NzI=", "number": 1, "title": "Location of pretrained weights", "user": {"login": "EliasVansteenkiste", "id": 2494383, "node_id": "MDQ6VXNlcjI0OTQzODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2494383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EliasVansteenkiste", "html_url": "https://github.com/EliasVansteenkiste", "followers_url": "https://api.github.com/users/EliasVansteenkiste/followers", "following_url": "https://api.github.com/users/EliasVansteenkiste/following{/other_user}", "gists_url": "https://api.github.com/users/EliasVansteenkiste/gists{/gist_id}", "starred_url": "https://api.github.com/users/EliasVansteenkiste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EliasVansteenkiste/subscriptions", "organizations_url": "https://api.github.com/users/EliasVansteenkiste/orgs", "repos_url": "https://api.github.com/users/EliasVansteenkiste/repos", "events_url": "https://api.github.com/users/EliasVansteenkiste/events{/privacy}", "received_events_url": "https://api.github.com/users/EliasVansteenkiste/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-13T08:24:57Z", "updated_at": "2017-07-13T09:20:00Z", "closed_at": "2017-07-13T09:20:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Cadene,\r\n\r\nWhere can I download the pretrained weights?\r\nThe *.pth files you mention in the code?\r\nI am looking for the inception-resnet-v2 model.\r\n\r\nThanks in advance,", "performed_via_github_app": null, "score": 1.0}]}