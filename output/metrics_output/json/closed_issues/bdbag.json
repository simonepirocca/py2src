{"total_count": 49, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/135", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/135/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/135/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/135", "id": 462737874, "node_id": "MDU6SXNzdWU0NjI3Mzc4NzQ=", "number": 135, "title": "Create Bag w/ bag-size", "user": {"login": "dasuttles", "id": 6955239, "node_id": "MDQ6VXNlcjY5NTUyMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6955239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dasuttles", "html_url": "https://github.com/dasuttles", "followers_url": "https://api.github.com/users/dasuttles/followers", "following_url": "https://api.github.com/users/dasuttles/following{/other_user}", "gists_url": "https://api.github.com/users/dasuttles/gists{/gist_id}", "starred_url": "https://api.github.com/users/dasuttles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dasuttles/subscriptions", "organizations_url": "https://api.github.com/users/dasuttles/orgs", "repos_url": "https://api.github.com/users/dasuttles/repos", "events_url": "https://api.github.com/users/dasuttles/events{/privacy}", "received_events_url": "https://api.github.com/users/dasuttles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-01T14:12:14Z", "updated_at": "2019-07-01T19:33:32Z", "closed_at": "2019-07-01T19:33:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would you get the bag-size option to work via a python script? It's no longer being calculated and added to bag-info.txt with the following script and nothing I've tried has worked. I'm new to python, so any help would be appreciated...  \r\n\r\nMy _CreateBag.py_ script: \r\n`import bagit`\r\n`#create bag`\r\n`bag = bagit.make_bag(DIR, {'Source-Organization': 'XXX', 'Organization-Address' : 'XXX', 'Contact-Phone' : 'XXX', 'Contact-Email' : 'XXX', 'Description' : 'XXX', 'External-Identifier' : 'XXX'})`\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/134", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/134/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/134/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/134", "id": 434261902, "node_id": "MDU6SXNzdWU0MzQyNjE5MDI=", "number": 134, "title": "Extra TEMP Directory Created & Preserved", "user": {"login": "gnosisgithub", "id": 9051239, "node_id": "MDQ6VXNlcjkwNTEyMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9051239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnosisgithub", "html_url": "https://github.com/gnosisgithub", "followers_url": "https://api.github.com/users/gnosisgithub/followers", "following_url": "https://api.github.com/users/gnosisgithub/following{/other_user}", "gists_url": "https://api.github.com/users/gnosisgithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnosisgithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnosisgithub/subscriptions", "organizations_url": "https://api.github.com/users/gnosisgithub/orgs", "repos_url": "https://api.github.com/users/gnosisgithub/repos", "events_url": "https://api.github.com/users/gnosisgithub/events{/privacy}", "received_events_url": "https://api.github.com/users/gnosisgithub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-17T12:43:20Z", "updated_at": "2019-10-10T20:58:01Z", "closed_at": "2019-10-10T20:58:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "BagIt-Version: 0.97\r\n\r\nWhen I run bagit it always creates a tertiary directory:\r\n\r\nFor example:\r\nC:\\Users\\smith\\Desktop\\desktop\\bagit-python-master>bagit.py --contact-name 'Stephen' C:\\Users\\smith\\Desktop\\project\\Appendices\r\n\r\n===>\r\nC:\\Users\\smith\\Desktop\\project\\Appendices\r\nbecomes:\r\nC:\\Users\\sklein\\Desktop\\project\\data\\tmpvi4hndq5\\Appendices\\\r\n\r\nIs this a bug?\r\nWill it effect checksum reporting?\r\nIf so, how to prevent the creation of this random directory (in this example:\\tmpvi4hndq5)\r\n\r\nAlso, the first time I run bagit:\r\n'C:\\Users\\smith\\Desktop\\desktop\\bagit-python-master>bagit.py --contact-name 'Stephen' C:\\Users\\smith\\Desktop\\project\\Appendices'\r\nalways fails, so I always have to run the command a second time in the same command prompt.\r\n\r\n\r\nI assume the bagging command has finished processing:\r\nC:\\Users\\sklein\\Desktop\\desktop\\bagger-master>bagit.py --contact-name 'Stephen'  C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\\r\n2019-04-17 08:39:00,309 - INFO - Creating bag for directory C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\\r\n2019-04-17 08:39:00,310 - INFO - Creating data directory\r\n2019-04-17 08:39:00,312 - INFO - Moving bagger-2.8.1.zip to C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\tmpj0oqfy7h\\bagger-2.8.1.zip\r\n2019-04-17 08:39:00,314 - INFO - Moving bagger-master.zip to C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\tmpj0oqfy7h\\bagger-master.zip\r\n2019-04-17 08:39:00,316 - INFO - Moving exactly_0.1.5_64bit.zip to C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\tmpj0oqfy7h\\exactly_0.1.5_64bit.zip\r\n2019-04-17 08:39:00,318 - INFO - Moving Fixity-1.2-Win.zip to C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\tmpj0oqfy7h\\Fixity-1.2-Win.zip\r\n2019-04-17 08:39:00,320 - INFO - Moving C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\tmpj0oqfy7h to data\r\n2019-04-17 08:39:00,323 - INFO - Using 1 processes to generate manifests: sha256, sha512\r\n2019-04-17 08:39:00,323 - INFO - Generating manifest lines for file data/Fixity-1.2-Win.zip\r\n2019-04-17 08:39:00,847 - INFO - Generating manifest lines for file data/bagger-2.8.1.zip\r\n2019-04-17 08:39:02,046 - INFO - Generating manifest lines for file data/bagger-master.zip\r\n2019-04-17 08:39:02,237 - INFO - Generating manifest lines for file data/exactly_0.1.5_64bit.zip\r\n2019-04-17 08:39:03,390 - INFO - Creating bagit.txt\r\n2019-04-17 08:39:03,398 - INFO - Creating bag-info.txt\r\n2019-04-17 08:39:03,403 - INFO - Creating C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\tagmanifest-sha256.txt\r\n2019-04-17 08:39:03,411 - INFO - Creating C:\\Users\\sklein\\Desktop\\downloads\\firefox\\dig_pres_tools\\tagmanifest-sha512.txt\r\n\r\n\r\nAnd unpredictable, because sometime the temp directory is not removed and sometimes it is. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/127", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/127/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/127/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/127", "id": 405005573, "node_id": "MDU6SXNzdWU0MDUwMDU1NzM=", "number": 127, "title": "UnicodeWarning when using en dash in command line metadata argument", "user": {"login": "t4k", "id": 415179, "node_id": "MDQ6VXNlcjQxNTE3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/415179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t4k", "html_url": "https://github.com/t4k", "followers_url": "https://api.github.com/users/t4k/followers", "following_url": "https://api.github.com/users/t4k/following{/other_user}", "gists_url": "https://api.github.com/users/t4k/gists{/gist_id}", "starred_url": "https://api.github.com/users/t4k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t4k/subscriptions", "organizations_url": "https://api.github.com/users/t4k/orgs", "repos_url": "https://api.github.com/users/t4k/repos", "events_url": "https://api.github.com/users/t4k/events{/privacy}", "received_events_url": "https://api.github.com/users/t4k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-30T23:05:55Z", "updated_at": "2019-01-31T08:02:23Z", "closed_at": "2019-01-30T23:50:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using a command like\r\n`bagit.py --external-description 'A folder, 1902\u20131904, from a Series' /path/to/folder`\r\nand I am getting the warning\r\n`bagit.py:1554: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal\r\n  if \"--version\" in sys.argv:`\r\n\r\nI have deduced that it is because of the en dash in the date range. What can be done?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/116", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/116/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/116/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/116", "id": 371049289, "node_id": "MDU6SXNzdWUzNzEwNDkyODk=", "number": 116, "title": "Homebrew shebang in the package on PyPI", "user": {"login": "lsde", "id": 1232812, "node_id": "MDQ6VXNlcjEyMzI4MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1232812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsde", "html_url": "https://github.com/lsde", "followers_url": "https://api.github.com/users/lsde/followers", "following_url": "https://api.github.com/users/lsde/following{/other_user}", "gists_url": "https://api.github.com/users/lsde/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsde/subscriptions", "organizations_url": "https://api.github.com/users/lsde/orgs", "repos_url": "https://api.github.com/users/lsde/repos", "events_url": "https://api.github.com/users/lsde/events{/privacy}", "received_events_url": "https://api.github.com/users/lsde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-17T12:32:37Z", "updated_at": "2018-10-17T13:30:19Z", "closed_at": "2018-10-17T13:30:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthere is a shebang from Homebrew in the script in the bagit.py package downloaded from PyPI.\r\nThis effectivelly breaks the functionality if not run from within Homebrew, like other POSIX systems, Windows, non-homebrew OSX etc..\r\n\r\n```\r\n$ diff bagit.py bagit-1.7.0.data/scripts/bagit.py \r\n1c1\r\n< #!/usr/bin/env python\r\n---\r\n> #!/usr/local/opt/python@2/bin/python2.7\r\n```\r\n```\r\ncat bagit-1.7.0.dist-info/RECORD \r\nbagit.py,sha256=MvoFUMBP7sS4AjIT5hR9ktF7bKfHqvQdbsqDfXKn_zQ,54756\r\nbagit-1.7.0.data/data/locale/en/LC_MESSAGES/bagit-python.mo,sha256=sLgIsf2Q1e6b4zTOHgfaC5zlZLGp4mTfYRb8PkUco2k,2849\r\nbagit-1.7.0.data/scripts/bagit.py,sha256=x51j6TtA2AFzJOhghKQW5sxTot-lRAreOjOd72YkqKs,54774\r\nbagit-1.7.0.dist-info/METADATA,sha256=qhxnDsxtmVTjSp5VO9xLAcVNTIXjewaK0OtlKj5zkBA,8077\r\nbagit-1.7.0.dist-info/RECORD,,\r\nbagit-1.7.0.dist-info/WHEEL,sha256=gduuPyBvFJQSQ0zdyxF7k0zynDXbIbvg5ZBHoXum5uk,110\r\nbagit-1.7.0.dist-info/top_level.txt,sha256=f288ippe7ERSzETsEftza1dXq61Z4zFSXDgaTF6djpE,6\r\n```\r\nEven the hashes and filesizes are different..perhaps a manual PyPI push from the Homebrew environment?\r\nI would suggest to create an os-independent Wheel..that's why we write tools in Python, right? :)\r\n\r\nBut other than this, thanks for all the great work!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/114", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/114/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/114/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/114", "id": 360586697, "node_id": "MDU6SXNzdWUzNjA1ODY2OTc=", "number": 114, "title": "failed installation of bagit", "user": {"login": "laurensorensen", "id": 3269689, "node_id": "MDQ6VXNlcjMyNjk2ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3269689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurensorensen", "html_url": "https://github.com/laurensorensen", "followers_url": "https://api.github.com/users/laurensorensen/followers", "following_url": "https://api.github.com/users/laurensorensen/following{/other_user}", "gists_url": "https://api.github.com/users/laurensorensen/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurensorensen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurensorensen/subscriptions", "organizations_url": "https://api.github.com/users/laurensorensen/orgs", "repos_url": "https://api.github.com/users/laurensorensen/repos", "events_url": "https://api.github.com/users/laurensorensen/events{/privacy}", "received_events_url": "https://api.github.com/users/laurensorensen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-15T23:57:00Z", "updated_at": "2018-09-17T14:59:56Z", "closed_at": "2018-09-17T14:59:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there! I tried installing bagit using the instructions in the readme and am getting an error. I'm copy/pasting the error below... any help is appreciated. \r\n\r\nI'm running macOS high sierra, 10.13.6, just installed Python, 2.7.13. \r\n\r\nHere is the text from terminal: \r\n`pip install bagit\r\nCollecting bagit\r\n  Could not fetch URL https://pypi.python.org/simple/bagit/: There was a problem confirming the ssl certificate: [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:661) - skipping\r\n  Could not find a version that satisfies the requirement bagit (from versions: )\r\nNo matching distribution found for bagit`\r\n\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/107", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/107/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/107/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/107", "id": 312085019, "node_id": "MDU6SXNzdWUzMTIwODUwMTk=", "number": 107, "title": "travis badge says build failing ", "user": {"login": "hackmastera", "id": 845363, "node_id": "MDQ6VXNlcjg0NTM2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/845363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackmastera", "html_url": "https://github.com/hackmastera", "followers_url": "https://api.github.com/users/hackmastera/followers", "following_url": "https://api.github.com/users/hackmastera/following{/other_user}", "gists_url": "https://api.github.com/users/hackmastera/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackmastera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackmastera/subscriptions", "organizations_url": "https://api.github.com/users/hackmastera/orgs", "repos_url": "https://api.github.com/users/hackmastera/repos", "events_url": "https://api.github.com/users/hackmastera/events{/privacy}", "received_events_url": "https://api.github.com/users/hackmastera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-06T19:08:28Z", "updated_at": "2018-04-06T19:56:25Z", "closed_at": "2018-04-06T19:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "On a commit from 2017? Not sure what is happening but it might be nice to get cleared up!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/106", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/106/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/106/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/106", "id": 305638431, "node_id": "MDU6SXNzdWUzMDU2Mzg0MzE=", "number": 106, "title": "Any chance of getting a 1.6.4 up to PyPi?", "user": {"login": "mikedarcy", "id": 6675943, "node_id": "MDQ6VXNlcjY2NzU5NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6675943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedarcy", "html_url": "https://github.com/mikedarcy", "followers_url": "https://api.github.com/users/mikedarcy/followers", "following_url": "https://api.github.com/users/mikedarcy/following{/other_user}", "gists_url": "https://api.github.com/users/mikedarcy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedarcy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedarcy/subscriptions", "organizations_url": "https://api.github.com/users/mikedarcy/orgs", "repos_url": "https://api.github.com/users/mikedarcy/repos", "events_url": "https://api.github.com/users/mikedarcy/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedarcy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-15T16:59:47Z", "updated_at": "2018-03-16T15:28:55Z", "closed_at": "2018-03-16T15:28:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We could really use the fix for #104 rolled into a point release.  Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/104", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/104/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/104/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/104", "id": 300722970, "node_id": "MDU6SXNzdWUzMDA3MjI5NzA=", "number": 104, "title": "self.algorithms list item duplication issue in _load_manifests", "user": {"login": "mikedarcy", "id": 6675943, "node_id": "MDQ6VXNlcjY2NzU5NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6675943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedarcy", "html_url": "https://github.com/mikedarcy", "followers_url": "https://api.github.com/users/mikedarcy/followers", "following_url": "https://api.github.com/users/mikedarcy/following{/other_user}", "gists_url": "https://api.github.com/users/mikedarcy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedarcy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedarcy/subscriptions", "organizations_url": "https://api.github.com/users/mikedarcy/orgs", "repos_url": "https://api.github.com/users/mikedarcy/repos", "events_url": "https://api.github.com/users/mikedarcy/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedarcy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-27T17:27:41Z", "updated_at": "2018-02-28T21:04:36Z", "closed_at": "2018-02-28T14:35:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See PR #103 for full description.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/101", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/101/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/101/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/101", "id": 293967162, "node_id": "MDU6SXNzdWUyOTM5NjcxNjI=", "number": 101, "title": "Error when bag is created while working directory is inside dir to be bagged.", "user": {"login": "nkrabben", "id": 3505343, "node_id": "MDQ6VXNlcjM1MDUzNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3505343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkrabben", "html_url": "https://github.com/nkrabben", "followers_url": "https://api.github.com/users/nkrabben/followers", "following_url": "https://api.github.com/users/nkrabben/following{/other_user}", "gists_url": "https://api.github.com/users/nkrabben/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkrabben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkrabben/subscriptions", "organizations_url": "https://api.github.com/users/nkrabben/orgs", "repos_url": "https://api.github.com/users/nkrabben/repos", "events_url": "https://api.github.com/users/nkrabben/events{/privacy}", "received_events_url": "https://api.github.com/users/nkrabben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-02T17:37:34Z", "updated_at": "2018-02-02T18:53:58Z", "closed_at": "2018-02-02T18:53:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If a user is bagging a nested directory (bagit.py ~/Desktop/bag_level1), and their current working directory is inside that directory (e.g. cwd = ~/Desktop/bag_level1/bag_level2), bagit.py fails with the following error.\r\n```\r\n...\r\nline 233, in make_bag\r\n    os.chdir(old_dir)\r\nFileNotFoundError: [Errno 2] \r\n...\r\n```\r\nThis happens because the current working directory is saved to old_dir, but then bag_level2 is moved to data/bag_level2\r\n\r\nI have a couple of ideas on possible behavior.\r\n\r\n1. error out and warn the user to change directories before bagging\r\n2. fail to another location, e.g \r\n```\r\nif not os.path.exists(old_dir):\r\n    os.chdir(self.path)\r\n    log('Working directory now here, because previous one doesn't exists)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/99", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/99/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/99/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/99", "id": 276589041, "node_id": "MDU6SXNzdWUyNzY1ODkwNDE=", "number": 99, "title": "Special character in Metadata", "user": {"login": "TomZastrow", "id": 22997930, "node_id": "MDQ6VXNlcjIyOTk3OTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/22997930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomZastrow", "html_url": "https://github.com/TomZastrow", "followers_url": "https://api.github.com/users/TomZastrow/followers", "following_url": "https://api.github.com/users/TomZastrow/following{/other_user}", "gists_url": "https://api.github.com/users/TomZastrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomZastrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomZastrow/subscriptions", "organizations_url": "https://api.github.com/users/TomZastrow/orgs", "repos_url": "https://api.github.com/users/TomZastrow/repos", "events_url": "https://api.github.com/users/TomZastrow/events{/privacy}", "received_events_url": "https://api.github.com/users/TomZastrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-24T11:23:52Z", "updated_at": "2017-11-28T15:11:17Z", "closed_at": "2017-11-28T15:11:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When adding metadata with special characters, I got an error:\r\n\r\n\r\n```\r\nNo handlers could be found for logger \"bagit\"\r\nTraceback (most recent call last):\r\n  File \"./housekeeping.py\", line 57, in <module>\r\n    bag = bagit.make_bag(ship + folder, metadataContainer)\r\n  File \"/usr/local/lib/python2.7/dist-packages/bagit.py\", line 146, in make_bag\r\n    _make_tag_file('bag-info.txt', bag_info)\r\n  File \"/usr/local/lib/python2.7/dist-packages/bagit.py\", line 721, in _make_tag_file\r\n    f.write(\"%s: %s\\n\" % (h, txt))\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u0142' in position 84: ordinal not in range(128)\r\n```\r\n\r\nWhich seems to be here in this function:\r\n\r\n```\r\ndef _make_tag_file(bag_info_path, bag_info):\r\n    headers = list(bag_info.keys())\r\n    headers.sort()\r\n    with open(bag_info_path, 'w') as f:\r\n        for h in headers:\r\n            if isinstance(bag_info[h], list):\r\n                for val in bag_info[h]:\r\n                    f.write(\"%s: %s\\n\" % (h, val))\r\n            else:\r\n                txt = bag_info[h]\r\n                # strip CR, LF and CRLF so they don't mess up the tag file\r\n                txt = re.sub(r'\\n|\\r|(\\r\\n)', '', txt)\r\n                f.write(\"%s: %s\\n\" % (h, txt))\r\n```\r\n\r\nMaybe file can be opened for writing Unicode:\r\n```with open(bag_info_path, 'w', encoding=utf-8) as f:```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/96", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/96/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/96/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/96", "id": 271064555, "node_id": "MDU6SXNzdWUyNzEwNjQ1NTU=", "number": 96, "title": "Bag._open() references deprecated version property", "user": {"login": "mikedarcy", "id": 6675943, "node_id": "MDQ6VXNlcjY2NzU5NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6675943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikedarcy", "html_url": "https://github.com/mikedarcy", "followers_url": "https://api.github.com/users/mikedarcy/followers", "following_url": "https://api.github.com/users/mikedarcy/following{/other_user}", "gists_url": "https://api.github.com/users/mikedarcy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikedarcy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikedarcy/subscriptions", "organizations_url": "https://api.github.com/users/mikedarcy/orgs", "repos_url": "https://api.github.com/users/mikedarcy/repos", "events_url": "https://api.github.com/users/mikedarcy/events{/privacy}", "received_events_url": "https://api.github.com/users/mikedarcy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-03T17:52:39Z", "updated_at": "2017-11-03T18:11:17Z", "closed_at": "2017-11-03T18:11:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This generates a deprecation warning every time `Bag._open` is called.  The deprecation warning is not emitted on 2.x, but is emitted on 3.x\r\n\r\nSee https://gist.github.com/mikedarcy/1c28a4a2acb7c7d4914a9924b49f47be for context.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/95", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/95/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/95/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/95", "id": 270751758, "node_id": "MDU6SXNzdWUyNzA3NTE3NTg=", "number": 95, "title": "Parse bag versions into a tuple for ease of comparison", "user": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-02T18:03:46Z", "updated_at": "2017-11-02T18:49:27Z", "closed_at": "2017-11-02T18:49:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be nice if things like `self.version > (1, )` worked.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/94", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/94/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/94/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/94", "id": 245793687, "node_id": "MDU6SXNzdWUyNDU3OTM2ODc=", "number": 94, "title": "Multiple entries of a file in a manifest should not be allowed", "user": {"login": "nkrabben", "id": 3505343, "node_id": "MDQ6VXNlcjM1MDUzNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3505343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkrabben", "html_url": "https://github.com/nkrabben", "followers_url": "https://api.github.com/users/nkrabben/followers", "following_url": "https://api.github.com/users/nkrabben/following{/other_user}", "gists_url": "https://api.github.com/users/nkrabben/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkrabben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkrabben/subscriptions", "organizations_url": "https://api.github.com/users/nkrabben/orgs", "repos_url": "https://api.github.com/users/nkrabben/repos", "events_url": "https://api.github.com/users/nkrabben/events{/privacy}", "received_events_url": "https://api.github.com/users/nkrabben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T17:17:06Z", "updated_at": "2017-11-02T20:12:34Z", "closed_at": "2017-11-02T20:12:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If a hash manifest has multiple entries for a file, bagit.py silently overwrites these hashes on top of one another.\r\nhttps://github.com/LibraryOfCongress/bagit-python/blob/master/bagit.py#L593\r\n\r\nThis isn't explicitly against the BagIt spec (2.1.3 is the relevant section), but I think bagit.py should flag these situations as invalid when loading a manifest.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/87", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/87/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/87/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/87", "id": 211785697, "node_id": "MDU6SXNzdWUyMTE3ODU2OTc=", "number": 87, "title": "Allow for separate completeness check", "user": {"login": "nkrabben", "id": 3505343, "node_id": "MDQ6VXNlcjM1MDUzNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3505343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkrabben", "html_url": "https://github.com/nkrabben", "followers_url": "https://api.github.com/users/nkrabben/followers", "following_url": "https://api.github.com/users/nkrabben/following{/other_user}", "gists_url": "https://api.github.com/users/nkrabben/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkrabben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkrabben/subscriptions", "organizations_url": "https://api.github.com/users/nkrabben/orgs", "repos_url": "https://api.github.com/users/nkrabben/repos", "events_url": "https://api.github.com/users/nkrabben/events{/privacy}", "received_events_url": "https://api.github.com/users/nkrabben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-03T19:52:08Z", "updated_at": "2017-07-27T18:46:14Z", "closed_at": "2017-07-27T18:46:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now bagit.py allows for Oxum validation or Oxum/completeness/hash validation. I have frequent use cases where I just need to check the completeness of a bag.\r\n\r\nCurrently I'm running a local fork of bagit-python that separates the completeness checking portion of the script and exposes it as its own option. There is a problem with how to expose that option since `bagit.py --validate --complete` gives a false impression of what the validation process is doing.\r\n\r\nHowever, besides that problem, addressing this issue only requires separating Bag._validate_entries into two separate methods, updating the logic in Bag._validate_contents, and passing the appropriate argument flag.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/86", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/86/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/86/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/86", "id": 210133479, "node_id": "MDU6SXNzdWUyMTAxMzM0Nzk=", "number": 86, "title": "Change the default hash algorithms", "user": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-24T19:14:15Z", "updated_at": "2017-02-27T11:44:39Z", "closed_at": "2017-02-24T21:41:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since it's cheap enough on computers made in the last decade, we should either change the default to SHA-256 or use more than one algorithm if there's any concern about compatibility with very old workflows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/83", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/83/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/83/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/83", "id": 195618715, "node_id": "MDU6SXNzdWUxOTU2MTg3MTU=", "number": 83, "title": "--validate fails if algorithm name is not lowercase", "user": {"login": "ruebot", "id": 218561, "node_id": "MDQ6VXNlcjIxODU2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/218561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruebot", "html_url": "https://github.com/ruebot", "followers_url": "https://api.github.com/users/ruebot/followers", "following_url": "https://api.github.com/users/ruebot/following{/other_user}", "gists_url": "https://api.github.com/users/ruebot/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruebot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruebot/subscriptions", "organizations_url": "https://api.github.com/users/ruebot/orgs", "repos_url": "https://api.github.com/users/ruebot/repos", "events_url": "https://api.github.com/users/ruebot/events{/privacy}", "received_events_url": "https://api.github.com/users/ruebot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-12-14T19:11:18Z", "updated_at": "2016-12-16T21:10:13Z", "closed_at": "2016-12-15T13:06:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Scenario:\r\n\r\n1. `$ bagit.py --validate plant`\r\n  `2016-12-14 10:38:36,662 - INFO - plant is invalid: Missing manifest file`\r\n2. `$ cd plant && mv manifest-SHA1.txt manifest-sha1.txt && cd ..`\r\n3. `$ bagit.py --validate plant`\r\n  `2016-12-14 11:05:31,219 - INFO - plant is valid`\r\n\r\nThis is happening if a bag is created with the [bagit-java](https://github.com/LibraryOfCongress/bagit-java) library and validated with this library.\r\n\r\nMight be somewhat related to #81:\r\n> Implementations SHOULD issue a warning when multiple manifests are present which differ only in case or normalization form.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/81", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/81/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/81/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/81", "id": 195274068, "node_id": "MDU6SXNzdWUxOTUyNzQwNjg=", "number": 81, "title": "Validation warnings for confusingly-similar files", "user": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-13T14:55:14Z", "updated_at": "2017-02-24T22:02:47Z", "closed_at": "2017-02-24T22:02:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "bagit-python should issue warnings for the conditions described at \r\nhttps://github.com/loc-rdc/bagitspec/blob/67c81c8f4189ed3fbeec5ad0d91a29879fdf3002/bagit.xml#L938-L960:\r\n\r\n* Implementations SHOULD discourage the creation of bags containing files which differ only in case.\r\n* Implementations MUST prevent the creation of bags containing files which differ only in normalization form.\r\n* BagIt implementations SHOULD tolerate differences in normalization form by comparing both the list of filesystem and manifest names after applying the same normalization form to both.\r\n* Implementations SHOULD issue a warning when multiple manifests are present which differ only in case or normalization form.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/80", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/80/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/80/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/80", "id": 195273441, "node_id": "MDU6SXNzdWUxOTUyNzM0NDE=", "number": 80, "title": "Validate bag file paths", "user": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-13T14:53:01Z", "updated_at": "2017-03-28T20:25:34Z", "closed_at": "2017-03-28T20:25:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should apply the tests specified in the spec section on [Special directory characters](https://github.com/loc-rdc/bagitspec/blob/67c81c8f4189ed3fbeec5ad0d91a29879fdf3002/bagit.xml#L764) to ensure that manifest or fetch.txt entries which attempt to escape the bag location cause an error:\r\n\r\n```\r\n../\r\n/\r\n~root/\r\nC:\\\r\n\\\\?\\C:\\\r\n```\r\n\r\nParallel issue for bagit-java: https://github.com/LibraryOfCongress/bagit-java/issues/67", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/79", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/79/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/79/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/79", "id": 189509594, "node_id": "MDU6SXNzdWUxODk1MDk1OTQ=", "number": 79, "title": "Pickling error when using --processes on Windows ", "user": {"login": "edsu", "id": 33829, "node_id": "MDQ6VXNlcjMzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/33829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edsu", "html_url": "https://github.com/edsu", "followers_url": "https://api.github.com/users/edsu/followers", "following_url": "https://api.github.com/users/edsu/following{/other_user}", "gists_url": "https://api.github.com/users/edsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edsu/subscriptions", "organizations_url": "https://api.github.com/users/edsu/orgs", "repos_url": "https://api.github.com/users/edsu/repos", "events_url": "https://api.github.com/users/edsu/events{/privacy}", "received_events_url": "https://api.github.com/users/edsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-15T21:19:47Z", "updated_at": "2016-11-15T22:11:27Z", "closed_at": "2016-11-15T21:28:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "from the [digital curation google group](https://groups.google.com/forum/#!topic/digital-curation/8jdw7LOAJNw):\r\n\r\n---\r\n\r\nHi again everyone,\r\n\r\nThanks to Michael Shallcross, I got my initial problem sorted, but now I have run into another. Everything seems to work ok as long as I don't get fancy and attempt to use the option to calculate checksums in parallel. I'm on a quad core machine, so this should work, right? I'll paste the error below-- any insights greatly appreciated!\r\n\r\nThanks,\r\nMary Willoughby\r\n\r\nDigital Library of Georgia\r\n\r\n_____________\r\n\r\n```\r\n\r\nMicrosoft Windows [Version 6.1.7601]\r\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\r\n\r\nC:\\Users\\mwilloug>cd c:\\bagit_python_test\r\n\r\nc:\\bagit_python_test>python bagit.py --processes 2 --validate bucket\r\n2016-11-15 14:33:00,171 - ERROR - unable to calculate file hashes for c:\\bagit_python_test\\bucket\r\nTraceback (most recent call last):\r\n  File \"bagit.py\", line 518, in _validate_entries\r\n    pool = multiprocessing.Pool(processes if processes else None, _init_worker)\r\n  File \"C:\\Python27\\lib\\multiprocessing\\__init__.py\", line 232, in Pool\r\n    return Pool(processes, initializer, initargs, maxtasksperchild)\r\n  File \"C:\\Python27\\lib\\multiprocessing\\pool.py\", line 159, in __init__\r\n    self._repopulate_pool()\r\n  File \"C:\\Python27\\lib\\multiprocessing\\pool.py\", line 223, in _repopulate_pool\r\n    w.start()\r\n  File \"C:\\Python27\\lib\\multiprocessing\\process.py\", line 130, in start\r\n    self._popen = Popen(self)\r\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 277, in __init__\r\n    dump(process_obj, to_child, HIGHEST_PROTOCOL)\r\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 199, in dump\r\n    ForkingPickler(file, protocol).dump(obj)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 224, in dump\r\n    self.save(obj)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 331, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 425, in save_reduce\r\n    save(state)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 655, in save_dict\r\n    self._batch_setitems(obj.iteritems())\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 687, in _batch_setitems\r\n    save(v)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 568, in save_tuple\r\n    save(element)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 754, in save_global\r\n    (obj, module, name))\r\nPicklingError: Can't pickle <function _init_worker at 0x0000000002E20EB8>: it's not found as __main__._init_worker\r\nTraceback (most recent call last):\r\n  File \"bagit.py\", line 945, in <module>\r\n    valid = bag.validate(processes=opts.processes, fast=opts.fast)\r\n  File \"bagit.py\", line 363, in validate\r\n    self._validate_contents(processes=processes, fast=fast)\r\n  File \"bagit.py\", line 443, in _validate_contents\r\n    self._validate_entries(processes)  # *SLOW*\r\n  File \"bagit.py\", line 518, in _validate_entries\r\n    pool = multiprocessing.Pool(processes if processes else None, _init_worker)\r\n  File \"C:\\Python27\\lib\\multiprocessing\\__init__.py\", line 232, in Pool\r\n    return Pool(processes, initializer, initargs, maxtasksperchild)\r\n  File \"C:\\Python27\\lib\\multiprocessing\\pool.py\", line 159, in __init__\r\n    self._repopulate_pool()\r\n  File \"C:\\Python27\\lib\\multiprocessing\\pool.py\", line 223, in _repopulate_pool\r\n    w.start()\r\n  File \"C:\\Python27\\lib\\multiprocessing\\process.py\", line 130, in start\r\n    self._popen = Popen(self)\r\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 277, in __init__\r\n    dump(process_obj, to_child, HIGHEST_PROTOCOL)\r\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 199, in dump\r\n    ForkingPickler(file, protocol).dump(obj)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 224, in dump\r\n    self.save(obj)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 331, in save\r\n    self.save_reduce(obj=obj, *rv)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 425, in save_reduce\r\n    save(state)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 655, in save_dict\r\n    self._batch_setitems(obj.iteritems())\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 687, in _batch_setitems\r\n    save(v)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 568, in save_tuple\r\n    save(element)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 754, in save_global\r\n    (obj, module, name))\r\npickle.PicklingError: Can't pickle <function _init_worker at 0x0000000002E20EB8>: it's not found as __main__._init_worker\r\n\r\nc:\\bagit_python_test>Traceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 381, in main\r\n    self = load(from_parent)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 1384, in load\r\n    return Unpickler(file).load()\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 864, in load\r\n    dispatch[key](self)\r\n  File \"C:\\Python27\\lib\\pickle.py\", line 886, in load_eof\r\n    raise EOFError\r\nEOFError\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/75", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/75/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/75/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/75", "id": 184699423, "node_id": "MDU6SXNzdWUxODQ2OTk0MjM=", "number": 75, "title": "The selection of tag files is broken", "user": {"login": "RKrahl", "id": 11837376, "node_id": "MDQ6VXNlcjExODM3Mzc2", "avatar_url": "https://avatars2.githubusercontent.com/u/11837376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RKrahl", "html_url": "https://github.com/RKrahl", "followers_url": "https://api.github.com/users/RKrahl/followers", "following_url": "https://api.github.com/users/RKrahl/following{/other_user}", "gists_url": "https://api.github.com/users/RKrahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/RKrahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RKrahl/subscriptions", "organizations_url": "https://api.github.com/users/RKrahl/orgs", "repos_url": "https://api.github.com/users/RKrahl/repos", "events_url": "https://api.github.com/users/RKrahl/events{/privacy}", "received_events_url": "https://api.github.com/users/RKrahl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-23T16:24:32Z", "updated_at": "2016-10-24T13:21:45Z", "closed_at": "2016-10-24T13:21:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The function `_find_tag_files()` that selects files to be added to tagmanifest files as added by PR #69 is broken.  The intention of this function was to select all files in the bag directory excluding only the payload directory and the tagmanifest files.  What the logic in this function actually does, is to select all files excluding files in any directory whose name ends with `\"data\"`.  This is broken in two different ways:\n1. if the bag directory itself ends with `\"data\"`, all files in this bag directory are excluded, although `bag-info.txt`, `bagit.txt`, and `manifest-*.txt` should in particular be added.\n2. if the payload directory contains any subdirectories not ending with `\"data\"`, files in this subdirectories are selected for inclusion to the tagmanifest files, although these files, being part of the payload, should not be added.\n\nThis bug has been discovered by Kieran O'Leary in the discussion of PR #67.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/70", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/70/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/70/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/70", "id": 179853478, "node_id": "MDU6SXNzdWUxNzk4NTM0Nzg=", "number": 70, "title": "New release (1.5.5?) request", "user": {"login": "Hwesta", "id": 3166226, "node_id": "MDQ6VXNlcjMxNjYyMjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3166226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hwesta", "html_url": "https://github.com/Hwesta", "followers_url": "https://api.github.com/users/Hwesta/followers", "following_url": "https://api.github.com/users/Hwesta/following{/other_user}", "gists_url": "https://api.github.com/users/Hwesta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hwesta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hwesta/subscriptions", "organizations_url": "https://api.github.com/users/Hwesta/orgs", "repos_url": "https://api.github.com/users/Hwesta/repos", "events_url": "https://api.github.com/users/Hwesta/events{/privacy}", "received_events_url": "https://api.github.com/users/Hwesta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/milestones/1", "html_url": "https://github.com/LibraryOfCongress/bagit-python/milestone/1", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/milestones/1/labels", "id": 1646659, "node_id": "MDk6TWlsZXN0b25lMTY0NjY1OQ==", "number": 1, "title": "1.6", "description": null, "creator": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2016-03-15T21:18:10Z", "updated_at": "2017-11-02T20:12:14Z", "due_on": null, "closed_at": null}, "comments": 15, "created_at": "2016-09-28T18:39:15Z", "updated_at": "2017-11-02T20:12:14Z", "closed_at": "2017-11-02T20:12:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It's been about a year since 1.5.4, and I'd love to see a release on PyPI with some of the bug fixes and Python 3.5 support.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/68", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/68/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/68/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/68", "id": 178736234, "node_id": "MDU6SXNzdWUxNzg3MzYyMzQ=", "number": 68, "title": "Create or update bag to include optional/custom tag files?", "user": {"login": "rlskoeser", "id": 691231, "node_id": "MDQ6VXNlcjY5MTIzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/691231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlskoeser", "html_url": "https://github.com/rlskoeser", "followers_url": "https://api.github.com/users/rlskoeser/followers", "following_url": "https://api.github.com/users/rlskoeser/following{/other_user}", "gists_url": "https://api.github.com/users/rlskoeser/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlskoeser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlskoeser/subscriptions", "organizations_url": "https://api.github.com/users/rlskoeser/orgs", "repos_url": "https://api.github.com/users/rlskoeser/repos", "events_url": "https://api.github.com/users/rlskoeser/events{/privacy}", "received_events_url": "https://api.github.com/users/rlskoeser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43195688, "node_id": "MDU6TGFiZWw0MzE5NTY4OA==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 43195692, "node_id": "MDU6TGFiZWw0MzE5NTY5Mg==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-09-22T22:24:14Z", "updated_at": "2016-12-28T19:09:23Z", "closed_at": "2016-12-28T19:09:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was looking at the code to try to see if it's possible to create a bag with custom tag files, or update an existing bag to add them.  I didn't see any code that looked like it would let me do this, although it does look like there is code for validating and finding custom tag files referenced in a tag manifest.  I thought it wouldn't hurt to ask if there's a way to do this that I missed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/65", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/65/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/65/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/65", "id": 153138531, "node_id": "MDU6SXNzdWUxNTMxMzg1MzE=", "number": 65, "title": "Bench.py ftplib error_perm 550", "user": {"login": "kieranjol", "id": 1127102, "node_id": "MDQ6VXNlcjExMjcxMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1127102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kieranjol", "html_url": "https://github.com/kieranjol", "followers_url": "https://api.github.com/users/kieranjol/followers", "following_url": "https://api.github.com/users/kieranjol/following{/other_user}", "gists_url": "https://api.github.com/users/kieranjol/gists{/gist_id}", "starred_url": "https://api.github.com/users/kieranjol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kieranjol/subscriptions", "organizations_url": "https://api.github.com/users/kieranjol/orgs", "repos_url": "https://api.github.com/users/kieranjol/repos", "events_url": "https://api.github.com/users/kieranjol/events{/privacy}", "received_events_url": "https://api.github.com/users/kieranjol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-04T23:26:37Z", "updated_at": "2016-05-05T16:22:41Z", "closed_at": "2016-05-05T16:22:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using Ubuntu 14.04, and the bench.py script seems to fail at the NASA download phase:\n\n```\n:~/bagit-python$ ./bench.py \nfetching some images to bag up from nasa\nTraceback (most recent call last):\n  File \"./bench.py\", line 24, in <module>\n    ftp.cwd('/photo_gallery/hi-res/planetary/mars/')\n  File \"/usr/lib/python2.7/ftplib.py\", line 562, in cwd\n    return self.voidcmd(cmd)\n  File \"/usr/lib/python2.7/ftplib.py\", line 254, in voidcmd\n    return self.voidresp()\n  File \"/usr/lib/python2.7/ftplib.py\", line 229, in voidresp\n    resp = self.getresp()\n  File \"/usr/lib/python2.7/ftplib.py\", line 224, in getresp\n    raise error_perm, resp\nftplib.error_perm: 550 /photo_gallery/hi-res/planetary/mars/: No such file or directory\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/59", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/59/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/59/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/59", "id": 144956912, "node_id": "MDU6SXNzdWUxNDQ5NTY5MTI=", "number": 59, "title": "Enchancement: Status update when calculating manifest", "user": {"login": "kieranjol", "id": 1127102, "node_id": "MDQ6VXNlcjExMjcxMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1127102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kieranjol", "html_url": "https://github.com/kieranjol", "followers_url": "https://api.github.com/users/kieranjol/followers", "following_url": "https://api.github.com/users/kieranjol/following{/other_user}", "gists_url": "https://api.github.com/users/kieranjol/gists{/gist_id}", "starred_url": "https://api.github.com/users/kieranjol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kieranjol/subscriptions", "organizations_url": "https://api.github.com/users/kieranjol/orgs", "repos_url": "https://api.github.com/users/kieranjol/repos", "events_url": "https://api.github.com/users/kieranjol/events{/privacy}", "received_events_url": "https://api.github.com/users/kieranjol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43195690, "node_id": "MDU6TGFiZWw0MzE5NTY5MA==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-31T16:56:19Z", "updated_at": "2016-04-05T16:39:11Z", "closed_at": "2016-04-05T16:39:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nWe've started using bagit-python and it's very useful. As the manifest creation can take several hours, it would be great if there was a more detailed status update as it processed each file. Right now it just says something like \"Writing manifest\".\n\nThanks,\n\nKieran.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/51", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/51/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/51/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/51", "id": 127784788, "node_id": "MDU6SXNzdWUxMjc3ODQ3ODg=", "number": 51, "title": "--validation warnings related to diacritics", "user": {"login": "tw4l", "id": 6758804, "node_id": "MDQ6VXNlcjY3NTg4MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6758804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tw4l", "html_url": "https://github.com/tw4l", "followers_url": "https://api.github.com/users/tw4l/followers", "following_url": "https://api.github.com/users/tw4l/following{/other_user}", "gists_url": "https://api.github.com/users/tw4l/gists{/gist_id}", "starred_url": "https://api.github.com/users/tw4l/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tw4l/subscriptions", "organizations_url": "https://api.github.com/users/tw4l/orgs", "repos_url": "https://api.github.com/users/tw4l/repos", "events_url": "https://api.github.com/users/tw4l/events{/privacy}", "received_events_url": "https://api.github.com/users/tw4l/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/milestones/1", "html_url": "https://github.com/LibraryOfCongress/bagit-python/milestone/1", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/milestones/1/labels", "id": 1646659, "node_id": "MDk6TWlsZXN0b25lMTY0NjY1OQ==", "number": 1, "title": "1.6", "description": null, "creator": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2016-03-15T21:18:10Z", "updated_at": "2017-11-02T20:12:14Z", "due_on": null, "closed_at": null}, "comments": 12, "created_at": "2016-01-20T21:12:02Z", "updated_at": "2017-02-24T22:02:47Z", "closed_at": "2017-02-24T22:02:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yesterday I created a very large bag (approximately 82,000 files; 300 GB) using bagit.py on my Mac. Afterwards, the bag validated without issue.\n\nToday, I copied the bag to our Archivematica transfer server and ran bagit.py --validate on the bag. This resulted in many errors, seemingly related to diacritics/character encoding issues. Some of the sample warnings:\n\n> 2016-01-20 09:34:44,183 - WARNING - data/VILLANURBS/CD-DVD/07_200606/05_0929 VNU/VNU_planta arriba/cer\u00e1mica/produccion/prueba/06 0119 ceramica VNU prueba 2 b.pdf exists on filesystem but is not in manifest  \n> 2016-01-20 09:34:43,267 - WARNING - data/VILLANURBS/CD-DVD/07_200606/05_0929 VNU/VNU_planta arriba/cera \u0301mica/produccion/prueba/06 0119 ceramica VNU prueba 2 b.pdf exists in manifest but not found on filesystem  \n> \n> 2016-01-20 09:34:43,303 - WARNING - data/VILLANURBS/SCAPE/2005/05_0929 VNU/05_0929 VNU/VNU_planta arriba/cerramientos/fachada vidrio/dibujos/06 1116 perfilieri \u0301a 3D.dgn exists in manifest but not found on filesystem  \n> 2016-01-20 09:34:44,261 - WARNING - data/VILLANURBS/SCAPE/2005/05_0929 VNU/05_0929 VNU/VNU_planta arriba/cerramientos/fachada vidrio/dibujos/06 1116 perfilier\u00eda 3D.dgn exists on filesystem but is not in manifest  \n\nWhen I look at the manifest via cat in a bash terminal, the paths appear exist as they exist on the filesystem.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/47", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/47/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/47/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/47", "id": 93892407, "node_id": "MDU6SXNzdWU5Mzg5MjQwNw==", "number": 47, "title": "Version 1.5.3 not on pypi", "user": {"login": "selimnairb", "id": 2529681, "node_id": "MDQ6VXNlcjI1Mjk2ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2529681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selimnairb", "html_url": "https://github.com/selimnairb", "followers_url": "https://api.github.com/users/selimnairb/followers", "following_url": "https://api.github.com/users/selimnairb/following{/other_user}", "gists_url": "https://api.github.com/users/selimnairb/gists{/gist_id}", "starred_url": "https://api.github.com/users/selimnairb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selimnairb/subscriptions", "organizations_url": "https://api.github.com/users/selimnairb/orgs", "repos_url": "https://api.github.com/users/selimnairb/repos", "events_url": "https://api.github.com/users/selimnairb/events{/privacy}", "received_events_url": "https://api.github.com/users/selimnairb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-08T21:17:10Z", "updated_at": "2015-07-09T11:46:46Z", "closed_at": "2015-07-09T11:46:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance to add the latest release to pypi?   Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/45", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/45/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/45/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/45", "id": 93607592, "node_id": "MDU6SXNzdWU5MzYwNzU5Mg==", "number": 45, "title": "v1.5.4?", "user": {"login": "edsu", "id": 33829, "node_id": "MDQ6VXNlcjMzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/33829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edsu", "html_url": "https://github.com/edsu", "followers_url": "https://api.github.com/users/edsu/followers", "following_url": "https://api.github.com/users/edsu/following{/other_user}", "gists_url": "https://api.github.com/users/edsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edsu/subscriptions", "organizations_url": "https://api.github.com/users/edsu/orgs", "repos_url": "https://api.github.com/users/edsu/repos", "events_url": "https://api.github.com/users/edsu/events{/privacy}", "received_events_url": "https://api.github.com/users/edsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dbrunton", "id": 57850, "node_id": "MDQ6VXNlcjU3ODUw", "avatar_url": "https://avatars0.githubusercontent.com/u/57850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrunton", "html_url": "https://github.com/dbrunton", "followers_url": "https://api.github.com/users/dbrunton/followers", "following_url": "https://api.github.com/users/dbrunton/following{/other_user}", "gists_url": "https://api.github.com/users/dbrunton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrunton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrunton/subscriptions", "organizations_url": "https://api.github.com/users/dbrunton/orgs", "repos_url": "https://api.github.com/users/dbrunton/repos", "events_url": "https://api.github.com/users/dbrunton/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrunton/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dbrunton", "id": 57850, "node_id": "MDQ6VXNlcjU3ODUw", "avatar_url": "https://avatars0.githubusercontent.com/u/57850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrunton", "html_url": "https://github.com/dbrunton", "followers_url": "https://api.github.com/users/dbrunton/followers", "following_url": "https://api.github.com/users/dbrunton/following{/other_user}", "gists_url": "https://api.github.com/users/dbrunton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrunton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrunton/subscriptions", "organizations_url": "https://api.github.com/users/dbrunton/orgs", "repos_url": "https://api.github.com/users/dbrunton/repos", "events_url": "https://api.github.com/users/dbrunton/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrunton/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2015-07-07T19:20:04Z", "updated_at": "2015-07-09T16:04:48Z", "closed_at": "2015-07-09T16:04:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I see that v1.5.3 never made it to PyPI and was thinking perhaps now would be a good time to coordinate a Github and PyPI release for v1.5.4? Also, would anyone at LoC like to have permission to upload to PyPI for bagit-python?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/42", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/42/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/42/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/42", "id": 65482661, "node_id": "MDU6SXNzdWU2NTQ4MjY2MQ==", "number": 42, "title": "Error on --validate --processes", "user": {"login": "JeremyGibson", "id": 2966242, "node_id": "MDQ6VXNlcjI5NjYyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2966242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeremyGibson", "html_url": "https://github.com/JeremyGibson", "followers_url": "https://api.github.com/users/JeremyGibson/followers", "following_url": "https://api.github.com/users/JeremyGibson/following{/other_user}", "gists_url": "https://api.github.com/users/JeremyGibson/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeremyGibson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeremyGibson/subscriptions", "organizations_url": "https://api.github.com/users/JeremyGibson/orgs", "repos_url": "https://api.github.com/users/JeremyGibson/repos", "events_url": "https://api.github.com/users/JeremyGibson/events{/privacy}", "received_events_url": "https://api.github.com/users/JeremyGibson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342193175, "node_id": "MDU6TGFiZWwzNDIxOTMxNzU=", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/Needs%20Testing", "name": "Needs Testing", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/milestones/1", "html_url": "https://github.com/LibraryOfCongress/bagit-python/milestone/1", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/milestones/1/labels", "id": 1646659, "node_id": "MDk6TWlsZXN0b25lMTY0NjY1OQ==", "number": 1, "title": "1.6", "description": null, "creator": {"login": "acdha", "id": 46565, "node_id": "MDQ6VXNlcjQ2NTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/46565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acdha", "html_url": "https://github.com/acdha", "followers_url": "https://api.github.com/users/acdha/followers", "following_url": "https://api.github.com/users/acdha/following{/other_user}", "gists_url": "https://api.github.com/users/acdha/gists{/gist_id}", "starred_url": "https://api.github.com/users/acdha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acdha/subscriptions", "organizations_url": "https://api.github.com/users/acdha/orgs", "repos_url": "https://api.github.com/users/acdha/repos", "events_url": "https://api.github.com/users/acdha/events{/privacy}", "received_events_url": "https://api.github.com/users/acdha/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "open", "created_at": "2016-03-15T21:18:10Z", "updated_at": "2017-11-02T20:12:14Z", "due_on": null, "closed_at": null}, "comments": 14, "created_at": "2015-03-31T15:48:57Z", "updated_at": "2016-05-31T19:57:55Z", "closed_at": "2016-05-31T19:57:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running bagit.py on an external bag in-place bag. This is a multicore machine.\n`bagit.py --validate --processes=4 F:\\PATH_TO_BAG\\`\n\nThe error output is this \n\n```\nTraceback (most recent call last):\n  File \"c:/Python27/Scripts/bagit.py\", line 525, in _validate_entries\n    pool = multiprocessing.Pool(processes if processes else None, _init_worker)\n  File \"c:\\Python27\\lib\\multiprocessing\\__init__.py\", line 232, in Pool\n    return Pool(processes, initializer, initargs, maxtasksperchild)\n  File \"c:\\Python27\\lib\\multiprocessing\\pool.py\", line 159, in __init__\n    self._repopulate_pool()\n  File \"c:\\Python27\\lib\\multiprocessing\\pool.py\", line 223, in _repopulate_pool\n    w.start()\n  File \"c:\\Python27\\lib\\multiprocessing\\process.py\", line 130, in start\n    self._popen = Popen(self)\n  File \"c:\\Python27\\lib\\multiprocessing\\forking.py\", line 277, in __init__\n    dump(process_obj, to_child, HIGHEST_PROTOCOL)\n  File \"c:\\Python27\\lib\\multiprocessing\\forking.py\", line 199, in dump\n    ForkingPickler(file, protocol).dump(obj)\n  File \"c:\\Python27\\lib\\pickle.py\", line 224, in dump\n    self.save(obj)\n  File \"c:\\Python27\\lib\\pickle.py\", line 331, in save\n    self.save_reduce(obj=obj, *rv)\n  File \"c:\\Python27\\lib\\pickle.py\", line 419, in save_reduce\n    save(state)\n  File \"c:\\Python27\\lib\\pickle.py\", line 286, in save\n    f(self, obj) # Call unbound method with explicit self\n  File \"c:\\Python27\\lib\\pickle.py\", line 649, in save_dict\n    self._batch_setitems(obj.iteritems())\n  File \"c:\\Python27\\lib\\pickle.py\", line 681, in _batch_setitems\n    save(v)\n  File \"c:\\Python27\\lib\\pickle.py\", line 286, in save\n    f(self, obj) # Call unbound method with explicit self\n  File \"c:\\Python27\\lib\\pickle.py\", line 562, in save_tuple\n    save(element)\n  File \"c:\\Python27\\lib\\pickle.py\", line 286, in save\n    f(self, obj) # Call unbound method with explicit self\n  File \"c:\\Python27\\lib\\pickle.py\", line 748, in save_global\n    (obj, module, name))\nPicklingError: Can't pickle <function _init_worker at 0x0239F8F0>: it's not foun\nd as __main__._init_worker\n```\n\nI apologize if this has been addressed before, but I couldn't find anything anywhere about it specifically.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/41", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/41/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/41/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/41", "id": 55426952, "node_id": "MDU6SXNzdWU1NTQyNjk1Mg==", "number": 41, "title": "Bag-Software-Agent include version?", "user": {"login": "edsu", "id": 33829, "node_id": "MDQ6VXNlcjMzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/33829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edsu", "html_url": "https://github.com/edsu", "followers_url": "https://api.github.com/users/edsu/followers", "following_url": "https://api.github.com/users/edsu/following{/other_user}", "gists_url": "https://api.github.com/users/edsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edsu/subscriptions", "organizations_url": "https://api.github.com/users/edsu/orgs", "repos_url": "https://api.github.com/users/edsu/repos", "events_url": "https://api.github.com/users/edsu/events{/privacy}", "received_events_url": "https://api.github.com/users/edsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-25T19:44:20Z", "updated_at": "2016-10-06T10:44:27Z", "closed_at": "2016-10-06T10:44:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice if the default Bag-Software-Agent had a version in it. Currently it looks like:\n\n```\nbagit.py <http://github.com/libraryofcongress/bagit-python>\n```\n\nBut maybe something like this would be better, for discovering bags created with (gasp) a version of bagit.py that has a bug?\n\n```\nbagit.py v1.5.3 <http://github.com/libraryofcongress/bagit-python>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/39", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/39/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/39/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/39", "id": 53189450, "node_id": "MDU6SXNzdWU1MzE4OTQ1MA==", "number": 39, "title": "no test for md5 tagmanifest", "user": {"login": "dbrunton", "id": 57850, "node_id": "MDQ6VXNlcjU3ODUw", "avatar_url": "https://avatars0.githubusercontent.com/u/57850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrunton", "html_url": "https://github.com/dbrunton", "followers_url": "https://api.github.com/users/dbrunton/followers", "following_url": "https://api.github.com/users/dbrunton/following{/other_user}", "gists_url": "https://api.github.com/users/dbrunton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrunton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrunton/subscriptions", "organizations_url": "https://api.github.com/users/dbrunton/orgs", "repos_url": "https://api.github.com/users/dbrunton/repos", "events_url": "https://api.github.com/users/dbrunton/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrunton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43195690, "node_id": "MDU6TGFiZWw0MzE5NTY5MA==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 43195691, "node_id": "MDU6TGFiZWw0MzE5NTY5MQ==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-31T15:49:20Z", "updated_at": "2014-12-31T16:07:09Z", "closed_at": "2014-12-31T16:06:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/38", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/38/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/38/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/38", "id": 53189421, "node_id": "MDU6SXNzdWU1MzE4OTQyMQ==", "number": 38, "title": "sha1 tagmanifest test succeeds only on a single day", "user": {"login": "dbrunton", "id": 57850, "node_id": "MDQ6VXNlcjU3ODUw", "avatar_url": "https://avatars0.githubusercontent.com/u/57850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrunton", "html_url": "https://github.com/dbrunton", "followers_url": "https://api.github.com/users/dbrunton/followers", "following_url": "https://api.github.com/users/dbrunton/following{/other_user}", "gists_url": "https://api.github.com/users/dbrunton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrunton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrunton/subscriptions", "organizations_url": "https://api.github.com/users/dbrunton/orgs", "repos_url": "https://api.github.com/users/dbrunton/repos", "events_url": "https://api.github.com/users/dbrunton/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrunton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43195688, "node_id": "MDU6TGFiZWw0MzE5NTY4OA==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-31T15:48:48Z", "updated_at": "2014-12-31T16:15:40Z", "closed_at": "2014-12-31T16:15:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Because the sha1 tagmanifest is generated for a bag-info.txt that has a date in it, this test only succeeds on the day of that date.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/32", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/32/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/32/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/32", "id": 43254947, "node_id": "MDU6SXNzdWU0MzI1NDk0Nw==", "number": 32, "title": "Updating bag-info.txt makes bag invalid", "user": {"login": "tongwang", "id": 793625, "node_id": "MDQ6VXNlcjc5MzYyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/793625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongwang", "html_url": "https://github.com/tongwang", "followers_url": "https://api.github.com/users/tongwang/followers", "following_url": "https://api.github.com/users/tongwang/following{/other_user}", "gists_url": "https://api.github.com/users/tongwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongwang/subscriptions", "organizations_url": "https://api.github.com/users/tongwang/orgs", "repos_url": "https://api.github.com/users/tongwang/repos", "events_url": "https://api.github.com/users/tongwang/events{/privacy}", "received_events_url": "https://api.github.com/users/tongwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-09-19T16:08:56Z", "updated_at": "2014-09-19T19:04:10Z", "closed_at": "2014-09-19T19:04:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a bag has a tag manifest file created using an algorithm other than md5, such as the following bag:\n\n```\nbag-info.txt         \nbagit.txt            \ndata                 \nmanifest-sha1.txt    \ntagmanifest-sha1.txt\n```\n\nUpdating bag info results in an invalid bag:\n\n```\n>>> import bagit\n>>> bag = bagit.Bag('/Users/twan/edeposit/edeposit/apps/signiant/tests/SR1-4444_20140611200739')\n>>> bag.is_valid()\nTrue\n>>> bag.info['External-Identifier']='xyz'\n>>> bag.save()\n>>> bag.is_valid()\nFalse\n```\n\nThe problem looks like it assumes the tag manifest file always uses md5.\n\n```\n# Update tag-manifest for changes to manifest & bag-info files\n        _make_tagmanifest_file('tagmanifest-md5.txt', self.path)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/31", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/31/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/31/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/31", "id": 41794034, "node_id": "MDU6SXNzdWU0MTc5NDAzNA==", "number": 31, "title": "How to treat/parse complex metadata with nested and non-string values", "user": {"login": "mhellmic", "id": 1712781, "node_id": "MDQ6VXNlcjE3MTI3ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1712781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhellmic", "html_url": "https://github.com/mhellmic", "followers_url": "https://api.github.com/users/mhellmic/followers", "following_url": "https://api.github.com/users/mhellmic/following{/other_user}", "gists_url": "https://api.github.com/users/mhellmic/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhellmic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhellmic/subscriptions", "organizations_url": "https://api.github.com/users/mhellmic/orgs", "repos_url": "https://api.github.com/users/mhellmic/repos", "events_url": "https://api.github.com/users/mhellmic/events{/privacy}", "received_events_url": "https://api.github.com/users/mhellmic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-03T08:47:57Z", "updated_at": "2014-09-05T19:22:07Z", "closed_at": "2014-09-05T19:22:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'd like to use bagit for archiving for documents with quite complex metadata (an example is pasted below). Running the make_bag like in the tutorial results in parsing errors, because the _make_tag_file function seems to assume that all key,value pair in the input dict is either a string or a list of strings.\nI am not sure how this can be resolved, if you expect on purpose to get this strict format, or if the bagit-python code can be improved upon. I also didn't find anything specific in the bagit spec for this.\n\nAt first I thought this would be an easy transformation just flattening out all the nested dictionaries, then I discovered that there are also dictionaries inside lists, and that different data types (string, int, None) are used, which also wouldn't work in the present _make_tag_file function (the regex in line 720).\n\nSo what do you think: should the conversion be up to the client, should it be done inside bagit-python, or a mix of those?\n\n```\nrd = {u'restriction': {u'email': u'blub@zoink'}, u'recid': 1, u'version_history': None, u'modification_date': u'2014-08-28T15:55:39', u'_id': 1, u'__meta_metadata__': {u'__additional_info__': {u'master_format': u'marc', u'namespace': u'recordext'}, u'__continuable_errors__': [], u'__aliases__': {}, u'__model_info__': {u'names': [u'__default__']}, u'modification_date': {u'function': [u'modification_date', u'rules', u'derived', 0, u'function'], u'timestamp': u'2014-08-28T15:56:02.898010', u'after': {}, u'pid': None, u'ext': {u'json_ext': {u'dumps': [u'modification_date', u'json_ext', u'dumps'], u'loads': [u'modification_date', u'json_ext', u'loads']}}, u'json_id': u'modification_date', u'type': u'derived'}, u'version_history': {u'function': [u'version_history', u'rules', u'calculated', 0, u'function'], u'timestamp': u'2014-08-28T15:56:02.861323', u'after': {u'memoize': 0}, u'pid': None, u'ext': {u'json_ext': {u'dumps': None, u'loads': None}}, u'json_id': u'version_history', u'type': u'calculated'}, u'restriction': {u'function': u'UNKNOWN', u'timestamp': u'2014-08-28T15:56:02.620112', u'after': {}, u'pid': None, u'ext': {u'json_ext': {u'dumps': None, u'loads': None}}, u'json_id': u'restriction', u'type': u'UNKNOWN'}, u'__errors__': [u\"Rule Error - Unable to apply rule for virtual field 'newer_version'. \\n\"], u'creation_date': {u'function': [u'creation_date', u'rules', u'derived', 0, u'function'], u'timestamp': u'2014-08-28T15:56:02.898809', u'after': {}, u'pid': None, u'ext': {u'json_ext': {u'dumps': [u'creation_date', u'json_ext', u'dumps'], u'loads': [u'creation_date', u'json_ext', u'loads']}}, u'json_id': u'creation_date', u'type': u'derived'}, u'recid': {u'function': [u'001'], u'timestamp': u'2014-08-28T15:56:02.683490', u'after': {u'connect': [{u'connected_field': u'_id', u'update_function': None}]}, u'pid': 0, u'ext': {u'json_ext': {u'dumps': None, u'loads': None}}, u'json_id': u'recid', u'type': u'creator'}, u'_id': {u'function': [u'_id', u'rules', u'derived', 0, u'function'], u'timestamp': u'2014-08-28T15:56:02.853278', u'after': {u'connect': [{u'connected_field': u'recid', u'update_function': None}]}, u'pid': None, u'ext': {u'json_ext': {u'dumps': None, u'loads': None}}, u'json_id': u'_id', u'type': u'derived'}}, u'creation_date': u'2014-08-28T15:55:22'}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/29", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/29/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/29/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/29", "id": 36783350, "node_id": "MDU6SXNzdWUzNjc4MzM1MA==", "number": 29, "title": "review save method in v1.5.0", "user": {"login": "edsu", "id": 33829, "node_id": "MDQ6VXNlcjMzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/33829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edsu", "html_url": "https://github.com/edsu", "followers_url": "https://api.github.com/users/edsu/followers", "following_url": "https://api.github.com/users/edsu/following{/other_user}", "gists_url": "https://api.github.com/users/edsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edsu/subscriptions", "organizations_url": "https://api.github.com/users/edsu/orgs", "repos_url": "https://api.github.com/users/edsu/repos", "events_url": "https://api.github.com/users/edsu/events{/privacy}", "received_events_url": "https://api.github.com/users/edsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-30T09:48:55Z", "updated_at": "2014-08-20T15:17:56Z", "closed_at": "2014-07-01T13:43:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@darshanrp and @hwesta would you be willing to take a look at the new `Bag.save` method in v1.5.0 on master and see that it works the way you expect? \n\nIf you have a `bagit.Bag` instance named `bag` you should be able to update the `bag.info` dictionary to change the metadata and then call `bag.save()` to persist the change.\n\nBy default `save` will _not_ regenerate manifests. This guards against regenerating manifests when the bag is accidentally in a corrupted state (invalid), which would have the result of masking the corruption.\n\n If you have modified the bag, by creating, updating or deleting payload files you can use the `manifests` parameter: `bag.save(manifests=True)` which will save both the tag metadata and regenerate the manifests.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/24", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/24/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/24/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/24", "id": 33964251, "node_id": "MDU6SXNzdWUzMzk2NDI1MQ==", "number": 24, "title": "support for 0.93, 0.94", "user": {"login": "gozdal", "id": 619444, "node_id": "MDQ6VXNlcjYxOTQ0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/619444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gozdal", "html_url": "https://github.com/gozdal", "followers_url": "https://api.github.com/users/gozdal/followers", "following_url": "https://api.github.com/users/gozdal/following{/other_user}", "gists_url": "https://api.github.com/users/gozdal/gists{/gist_id}", "starred_url": "https://api.github.com/users/gozdal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gozdal/subscriptions", "organizations_url": "https://api.github.com/users/gozdal/orgs", "repos_url": "https://api.github.com/users/gozdal/repos", "events_url": "https://api.github.com/users/gozdal/events{/privacy}", "received_events_url": "https://api.github.com/users/gozdal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-21T09:02:50Z", "updated_at": "2014-05-22T08:13:22Z", "closed_at": "2014-05-22T08:13:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there any reason that the only supported version are 0.95, 0.96, and 0.97? Would \nanything bad happen if 0.93 and 0.94 was added in bagit.py to the list of supported versions?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/22", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/22/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/22/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/22", "id": 33189175, "node_id": "MDU6SXNzdWUzMzE4OTE3NQ==", "number": 22, "title": "consider permissions on payload dir", "user": {"login": "dchud", "id": 62130, "node_id": "MDQ6VXNlcjYyMTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/62130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dchud", "html_url": "https://github.com/dchud", "followers_url": "https://api.github.com/users/dchud/followers", "following_url": "https://api.github.com/users/dchud/following{/other_user}", "gists_url": "https://api.github.com/users/dchud/gists{/gist_id}", "starred_url": "https://api.github.com/users/dchud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dchud/subscriptions", "organizations_url": "https://api.github.com/users/dchud/orgs", "repos_url": "https://api.github.com/users/dchud/repos", "events_url": "https://api.github.com/users/dchud/events{/privacy}", "received_events_url": "https://api.github.com/users/dchud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-09T16:55:24Z", "updated_at": "2014-05-22T10:06:57Z", "closed_at": "2014-05-22T10:06:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "bagit.py uses tempfile.mkdtemp() to generate the payload dir, which by definition limits to user-only read/write/search perms:\n\n  https://docs.python.org/2/library/tempfile.html#tempfile.mkdtemp\n\nWe work around this outside of bagit.py, but it might be worth considering reassigning more liberal perms to the payload upon completion, or at least optionally per user request on the bagit.py commandline (--group-readable or --perms 0755 or somesuch?).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/20", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/20/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/20/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/20", "id": 30363817, "node_id": "MDU6SXNzdWUzMDM2MzgxNw==", "number": 20, "title": "Unicode strings break make_bag", "user": {"login": "BHSPitMonkey", "id": 33672, "node_id": "MDQ6VXNlcjMzNjcy", "avatar_url": "https://avatars2.githubusercontent.com/u/33672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BHSPitMonkey", "html_url": "https://github.com/BHSPitMonkey", "followers_url": "https://api.github.com/users/BHSPitMonkey/followers", "following_url": "https://api.github.com/users/BHSPitMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/BHSPitMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/BHSPitMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BHSPitMonkey/subscriptions", "organizations_url": "https://api.github.com/users/BHSPitMonkey/orgs", "repos_url": "https://api.github.com/users/BHSPitMonkey/repos", "events_url": "https://api.github.com/users/BHSPitMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/BHSPitMonkey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-03-28T05:17:37Z", "updated_at": "2014-06-30T09:12:03Z", "closed_at": "2014-06-30T09:12:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Although bagit.py uses \"UTF-8\" as its go-to value for Tag-File-Character-Encoding, it actually isn't currently able to deal with non-ASCII characters coming in via `make_bag`'s `bag_info` parameter (and possibly in other places).  For example:\n\n``` python\n>>> import bagit\n>>> bagit.make_bag(\"bagtest\", {\"Some-Key\": unichr(40960)})\nERROR:root:'ascii' codec can't encode character u'\\ua000' in position 10: ordinal not in range(128)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/bagit.py\", line 136, in make_bag\n    raise e\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\ua000' in position 10: ordinal not in range(128)\n```\n\nThis could be remedied in a few places by switching from the builtin `open()` function to the `codecs.open()` wrapper. For instance, the crash above is fixed by replacing\n\n``` python\nbag_info_txt = open(\"bag-info.txt\", \"wb\")\n```\n\nwith\n\n``` python\nbag_info_txt = codecs.open(\"bag-info.txt\", \"wb\", \"UTF-8\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/19", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/19/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/19/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/19", "id": 30362409, "node_id": "MDU6SXNzdWUzMDM2MjQwOQ==", "number": 19, "title": "Unhandled exception when a bag-info string contains newlines", "user": {"login": "BHSPitMonkey", "id": 33672, "node_id": "MDQ6VXNlcjMzNjcy", "avatar_url": "https://avatars2.githubusercontent.com/u/33672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BHSPitMonkey", "html_url": "https://github.com/BHSPitMonkey", "followers_url": "https://api.github.com/users/BHSPitMonkey/followers", "following_url": "https://api.github.com/users/BHSPitMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/BHSPitMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/BHSPitMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BHSPitMonkey/subscriptions", "organizations_url": "https://api.github.com/users/BHSPitMonkey/orgs", "repos_url": "https://api.github.com/users/BHSPitMonkey/repos", "events_url": "https://api.github.com/users/BHSPitMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/BHSPitMonkey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-03-28T04:20:44Z", "updated_at": "2014-06-28T21:10:02Z", "closed_at": "2014-06-28T21:10:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, if you pass a metadata string to `make_bag` containing newlines, those newlines end up in the `bag-info.txt` file and it can no longer parse.  The immediate validation in `_parse_tags` then crashes, specifically due to the line\n\n``` python\ntag_value = parts[1].strip()\n```\n\nwhich assumes that the `line.strip().split(':')` call must have returned two parts (the actual crash is a `list index out of range` exception).\n\nSo, two things are probably in order:\n- `make_bag` should most likely strip out CR/LF characters, or otherwise reject inputs containing them\n- `_parse_tags` should probably catch IndexError when trying to access parts[1], and be able to raise a higher-level exception indicating that the file cannot be parsed\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/18", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/18/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/18/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/18", "id": 29937005, "node_id": "MDU6SXNzdWUyOTkzNzAwNQ==", "number": 18, "title": "Bag validation fails for bags created using bagit <=1.2.1", "user": {"login": "darshanrp", "id": 3671078, "node_id": "MDQ6VXNlcjM2NzEwNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3671078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darshanrp", "html_url": "https://github.com/darshanrp", "followers_url": "https://api.github.com/users/darshanrp/followers", "following_url": "https://api.github.com/users/darshanrp/following{/other_user}", "gists_url": "https://api.github.com/users/darshanrp/gists{/gist_id}", "starred_url": "https://api.github.com/users/darshanrp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darshanrp/subscriptions", "organizations_url": "https://api.github.com/users/darshanrp/orgs", "repos_url": "https://api.github.com/users/darshanrp/repos", "events_url": "https://api.github.com/users/darshanrp/events{/privacy}", "received_events_url": "https://api.github.com/users/darshanrp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-21T20:41:46Z", "updated_at": "2014-03-24T16:27:32Z", "closed_at": "2014-03-22T11:30:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I had a few bags created using bagit version 1.2.1. We are now using bagit 1.3.4 which creates the additional tagmanifest-md5.txt file.\nThe previously created bags are now failing validation because bagit is looking for a tagmanifest-md5.txt file and can't find one. I checked the source code and found that if the bagit version is >0.97 then it looks for a tagmanifest-md5.txt file while validating.\n\nScreenshot of my test run:\n![screenshot from 2014-03-21 16 31 36](https://f.cloud.github.com/assets/3671078/2487715/331451c4-b139-11e3-93aa-f8ca25dbc40d.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/16", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/16/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/16/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/16", "id": 28435719, "node_id": "MDU6SXNzdWUyODQzNTcxOQ==", "number": 16, "title": "tag manifest option", "user": {"login": "finoradin", "id": 684940, "node_id": "MDQ6VXNlcjY4NDk0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/684940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finoradin", "html_url": "https://github.com/finoradin", "followers_url": "https://api.github.com/users/finoradin/followers", "following_url": "https://api.github.com/users/finoradin/following{/other_user}", "gists_url": "https://api.github.com/users/finoradin/gists{/gist_id}", "starred_url": "https://api.github.com/users/finoradin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finoradin/subscriptions", "organizations_url": "https://api.github.com/users/finoradin/orgs", "repos_url": "https://api.github.com/users/finoradin/repos", "events_url": "https://api.github.com/users/finoradin/events{/privacy}", "received_events_url": "https://api.github.com/users/finoradin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-27T17:04:39Z", "updated_at": "2014-02-27T18:32:16Z", "closed_at": "2014-02-27T18:32:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be nice to include (perhaps as default) a tag manifest in addition to the manifest\u2026\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/15", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/15/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/15/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/15", "id": 27800952, "node_id": "MDU6SXNzdWUyNzgwMDk1Mg==", "number": 15, "title": "creating a tagmanifest file fails when a relative path is given while bagging", "user": {"login": "darshanrp", "id": 3671078, "node_id": "MDQ6VXNlcjM2NzEwNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3671078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darshanrp", "html_url": "https://github.com/darshanrp", "followers_url": "https://api.github.com/users/darshanrp/followers", "following_url": "https://api.github.com/users/darshanrp/following{/other_user}", "gists_url": "https://api.github.com/users/darshanrp/gists{/gist_id}", "starred_url": "https://api.github.com/users/darshanrp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darshanrp/subscriptions", "organizations_url": "https://api.github.com/users/darshanrp/orgs", "repos_url": "https://api.github.com/users/darshanrp/repos", "events_url": "https://api.github.com/users/darshanrp/events{/privacy}", "received_events_url": "https://api.github.com/users/darshanrp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-18T15:22:27Z", "updated_at": "2014-02-18T19:32:56Z", "closed_at": "2014-02-18T19:31:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/14", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/14/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/14/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/14", "id": 27722776, "node_id": "MDU6SXNzdWUyNzcyMjc3Ng==", "number": 14, "title": "Retrieving Bag Metadata", "user": {"login": "JakeCowton", "id": 4622202, "node_id": "MDQ6VXNlcjQ2MjIyMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4622202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakeCowton", "html_url": "https://github.com/JakeCowton", "followers_url": "https://api.github.com/users/JakeCowton/followers", "following_url": "https://api.github.com/users/JakeCowton/following{/other_user}", "gists_url": "https://api.github.com/users/JakeCowton/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakeCowton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakeCowton/subscriptions", "organizations_url": "https://api.github.com/users/JakeCowton/orgs", "repos_url": "https://api.github.com/users/JakeCowton/repos", "events_url": "https://api.github.com/users/JakeCowton/events{/privacy}", "received_events_url": "https://api.github.com/users/JakeCowton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-17T14:36:20Z", "updated_at": "2014-02-17T14:52:02Z", "closed_at": "2014-02-17T14:52:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I hope I'm not being blind here, but I don't see a way to read my metadata in 'bag-info.txt'\n\n```\nIn [18]: a = bagit.make_bag('/home/jakecowton/temp/1', {'Contact-Name':\"Jake Cowton\", 'Contact-Email':\"wub@wub.com\", 'Author':\"That Guy\"})\nIn [19]: a.tags\nOut[19]: {'BagIt-Version': '0.97', 'Tag-File-Character-Encoding': 'UTF-8'}\n```\n\nFor some reason I (though presumably 'we') can only see the two default tags but not the ones we pass as our own nor the reserved tags listed on line 52-68 of bagit.py\n\nIs this something you plan to develop or is there a reason for this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/13", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/13/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/13/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/13", "id": 27627660, "node_id": "MDU6SXNzdWUyNzYyNzY2MA==", "number": 13, "title": "add save() method", "user": {"login": "edsu", "id": 33829, "node_id": "MDQ6VXNlcjMzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/33829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edsu", "html_url": "https://github.com/edsu", "followers_url": "https://api.github.com/users/edsu/followers", "following_url": "https://api.github.com/users/edsu/following{/other_user}", "gists_url": "https://api.github.com/users/edsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edsu/subscriptions", "organizations_url": "https://api.github.com/users/edsu/orgs", "repos_url": "https://api.github.com/users/edsu/repos", "events_url": "https://api.github.com/users/edsu/events{/privacy}", "received_events_url": "https://api.github.com/users/edsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-14T21:53:03Z", "updated_at": "2014-06-28T20:08:46Z", "closed_at": "2014-06-28T20:08:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be useful to be able to modify bag metadata, and write it back to disk.\n\n``` python\n\nb = Bag(\"/path/to/bag\")\nb.info[\"Bag-Id\"] = \"12345\"\nb.save()\n```\n\nUpdating the bag-info.txt will cause a tagmanifest to change as well, so that will also need to be written. Which raises the question of whether the other manifests should be written as well based on the current state of the Bag object. Perhaps even the bag version and encoding should be written to the bagit.txt as well?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/12", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/12/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/12/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/12", "id": 27167545, "node_id": "MDU6SXNzdWUyNzE2NzU0NQ==", "number": 12, "title": "Bag Validation Issues", "user": {"login": "veryaustin", "id": 958206, "node_id": "MDQ6VXNlcjk1ODIwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/958206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veryaustin", "html_url": "https://github.com/veryaustin", "followers_url": "https://api.github.com/users/veryaustin/followers", "following_url": "https://api.github.com/users/veryaustin/following{/other_user}", "gists_url": "https://api.github.com/users/veryaustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/veryaustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veryaustin/subscriptions", "organizations_url": "https://api.github.com/users/veryaustin/orgs", "repos_url": "https://api.github.com/users/veryaustin/repos", "events_url": "https://api.github.com/users/veryaustin/events{/privacy}", "received_events_url": "https://api.github.com/users/veryaustin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2014-02-07T20:14:28Z", "updated_at": "2015-03-23T14:51:48Z", "closed_at": "2014-04-04T08:09:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using BagIt on drives that contain a variety of file types but mainly contain broadcast wave files and accompanying digital audio workstation files (Pro Tools, Nuendo, Logic, Digital Performer). I have run into an issue where Pro Tools Plugin settings files titled \"Icon\" are either not written to the manifest and throw and validation error, OR it throws an error indicating a file is in the manifest but not on the drive when running the bagit validate command.  All files show up in terminal via the ls -la command and I have verified that all permissions are correct.\n\nBelow is the output from the bag creation and validation on a set of audio files and digital audio workstation files.\n\n```\nworkstation-a:BNA_1017971 administrator$ bagit.py --contact-name 'Test Author' --processes 2 Cleaned\\ Up\\ Masters/\n2014-02-06 16:12:52,878 - INFO - creating bag for directory Cleaned Up Masters/\n2014-02-06 16:12:53,994 - INFO - creating data dir\n2014-02-06 16:12:53,994 - INFO - moving .DS_Store to /Volumes/BNA_1017971/Cleaned Up Masters/tmpYIWE2W/.DS_Store\n2014-02-06 16:12:53,994 - INFO - moving Song 1 to /Volumes/BNA_1017971/Cleaned Up Masters/tmpYIWE2W/Song 1\n2014-02-06 16:12:53,995 - INFO - moving Song 2 to /Volumes/BNA_1017971/Cleaned Up Masters/tmpYIWE2W/Song 2\n2014-02-06 16:12:53,995 - INFO - moving Song 3 to /Volumes/BNA_1017971/Cleaned Up Masters/tmpYIWE2W/Song 3\n2014-02-06 16:12:53,995 - INFO - writing manifest-md5.txt\n2014-02-06 16:12:53,995 - INFO - writing manifest with 2 processes\n2014-02-06 16:18:56,256 - INFO - writing bagit.txt\n2014-02-06 16:18:56,257 - INFO - writing bag-info.txt\n\nworkstation-a:BNA_1017971 administrator$ bagit.py --validate Cleaned\\ Up\\ Masters/\n2014-02-06 16:27:52,810 - WARNING - data/Song 3/Plug-In Settings/ChannelStrip/Full Mix Settings/Icon exists in manifest but not found on filesystem\n2014-02-06 16:27:52,810 - WARNING - data/Song 3/Plug-In Settings/ChannelStrip/Vocals/Icon exists in manifest but not found on filesystem\n2014-02-06 16:27:52,810 - WARNING - data/Song 3/Plug-In Settings/ChannelStrip/De-Essers/Icon exists in manifest but not found on filesystem\n2014-02-06 16:27:52,810 - WARNING - data/Song 3/Plug-In Settings/ChannelStrip/Drums/Icon exists in manifest but not found on filesystem\n2014-02-06 16:27:52,810 - WARNING - data/Song 1/StemsAndMultitrack/M1 FOR EXPORT/Plug-In Settings/Purple MC77/Icon exists in manifest but not found on filesystem\n2014-02-06 16:27:52,810 - WARNING - data/Song 1/StemsAndMultitrack/M1 FOR EXPORT/Plug-In Settings/bombfactory BF2A/Icon exists in manifest but not found on filesystem\n2014-02-06 16:27:52,810 - WARNING - data/Song 3/Plug-In Settings/ChannelStrip/Guitars/Icon exists in manifest but not found on filesystem\n2014-02-06 16:27:52,810 - WARNING - data/Song 3/Plug-In Settings/ChannelStrip/Compressors/Icon exists in manifest but not found on filesystem\n exists on filesystem but is not in manifestg 1/StemsAndMultitrack/M1 FOR EXPORT/Plug-In Settings/Purple MC77/Icon\n exists on filesystem but is not in manifestg 3/Plug-In Settings/ChannelStrip/De-Essers/Icon\n exists on filesystem but is not in manifestg 3/Plug-In Settings/ChannelStrip/Compressors/Icon\n exists on filesystem but is not in manifestg 3/Plug-In Settings/ChannelStrip/Guitars/Icon\n exists on filesystem but is not in manifestg 3/Plug-In Settings/ChannelStrip/Full Mix Settings/Icon\n exists on filesystem but is not in manifestg 3/Plug-In Settings/ChannelStrip/Drums/Icon\n exists on filesystem but is not in manifestg 1/StemsAndMultitrack/M1 FOR EXPORT/Plug-In Settings/bombfactory BF2A/Icon\n exists on filesystem but is not in manifestg 3/Plug-In Settings/ChannelStrip/Vocals/Icon\n2014-02-06 16:44:17,422 - INFO - Cleaned Up Masters/ is invalid: invalid bag: data/Song 3/Plug-In Settings/ChannelStrip/Full Mix Settings/Icon exists in manifest but not found on filesystem ; data/Song 3/Plug-In Settings/ChannelStrip/Vocals/Icon exists in manifest but not found on filesystem ; data/Song 3/Plug-In Settings/ChannelStrip/De-Essers/Icon exists in manifest but not found on filesystem ; data/Song 3/Plug-In Settings/ChannelStrip/Drums/Icon exists in manifest but not found on filesystem ; data/Song 1/StemsAndMultitrack/M1 FOR EXPORT/Plug-In Settings/Purple MC77/Icon exists in manifest but not found on filesystem ; data/Song 1/StemsAndMultitrack/M1 FOR EXPORT/Plug-In Settings/bombfactory BF2A/Icon exists in manifest but not found on filesystem ; data/Song 3/Plug-In Settings/ChannelStrip/Guitars/Icon exists in manifest but not found on filesystem ; data/Song 3/Plug-In Settings/ChannelStrip/Compressors/Icon exists in manifest but not found on filesystem ; data/Song 1/StemsAndMultitrack/M1 FOR EXPORT/Plug-In Settin exists on filesystem but is not in manifest ; data/Song 3/Plug-In Settings/ChannelStrip/Vocals/IconSettings/bombfactory BF2A/Icon\n```\n\nI copied the \"Icon\" files out of each of the three songs and put them into  \"Test Files\" directory and ran the bagit create and validate commands.  Below is the output:\n\n```\nworkstation-a:BNA_1017971 administrator$ bagit.py --contact-name 'Test Author' --processes 2 Test\\ Files/\n2014-02-06 16:11:42,977 - INFO - creating bag for directory Test Files/\n2014-02-06 16:11:42,978 - INFO - creating data dir\n2014-02-06 16:11:43,008 - INFO - moving .DS_Store to /Volumes/BNA_1017971/Test Files/tmpOG1qwh/.DS_Store\n2014-02-06 16:11:43,009 - INFO - moving 1 to /Volumes/BNA_1017971/Test Files/tmpOG1qwh/1\n2014-02-06 16:11:43,009 - INFO - moving 2 to /Volumes/BNA_1017971/Test Files/tmpOG1qwh/2\n2014-02-06 16:11:43,009 - INFO - moving 3 to /Volumes/BNA_1017971/Test Files/tmpOG1qwh/3\n2014-02-06 16:11:43,009 - INFO - writing manifest-md5.txt\n2014-02-06 16:11:43,010 - INFO - writing manifest with 2 processes\n2014-02-06 16:11:43,207 - INFO - writing bagit.txt\n2014-02-06 16:11:43,207 - INFO - writing bag-info.txt\n\nworkstation-a:BNA_1017971 administrator$ bagit.py --validate Test\\ Files/\n2014-02-06 16:11:51,514 - WARNING - data/3/Icon exists in manifest but not found on filesystem\n2014-02-06 16:11:51,514 - WARNING - data/1/Icon exists in manifest but not found on filesystem\n exists on filesystem but is not in manifestcon\n exists on filesystem but is not in manifestcon\n exists on filesystem but is not in manifest ; data/3/Iconnvalid bag: data/3/Icon exists in manifest but not found on filesystem ; data/1/Icon exists in manifest but not found on filesystem ; data/1/Icon\n```\n\nUnfortuneately, I cannot include any of the specific sessions and audio files listed in the first example but I can provide example \"Icon\" files for testing. They can be downloaded at the following link:\n\nhttps://bmschace.box.com/bagittestfiles\n\nAny help with this issue would be greatly appreciated.\n\nThanks!\nAustin Lauritsen\nDirector of IT\nBMS/Chace\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/8", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/8/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/8/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/8", "id": 18062576, "node_id": "MDU6SXNzdWUxODA2MjU3Ng==", "number": 8, "title": "support for sha1 creation", "user": {"login": "finoradin", "id": 684940, "node_id": "MDQ6VXNlcjY4NDk0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/684940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finoradin", "html_url": "https://github.com/finoradin", "followers_url": "https://api.github.com/users/finoradin/followers", "following_url": "https://api.github.com/users/finoradin/following{/other_user}", "gists_url": "https://api.github.com/users/finoradin/gists{/gist_id}", "starred_url": "https://api.github.com/users/finoradin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finoradin/subscriptions", "organizations_url": "https://api.github.com/users/finoradin/orgs", "repos_url": "https://api.github.com/users/finoradin/repos", "events_url": "https://api.github.com/users/finoradin/events{/privacy}", "received_events_url": "https://api.github.com/users/finoradin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-14T16:36:29Z", "updated_at": "2014-02-17T16:40:19Z", "closed_at": "2014-02-17T16:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very useful to support the ability to pass an argument specifying which hash algorithm to use (i.e. sha1 instead of md5 \u2013 or both even).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/7", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/7/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/7/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/7", "id": 17802559, "node_id": "MDU6SXNzdWUxNzgwMjU1OQ==", "number": 7, "title": "updating and saving bags", "user": {"login": "edsu", "id": 33829, "node_id": "MDQ6VXNlcjMzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/33829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edsu", "html_url": "https://github.com/edsu", "followers_url": "https://api.github.com/users/edsu/followers", "following_url": "https://api.github.com/users/edsu/following{/other_user}", "gists_url": "https://api.github.com/users/edsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edsu/subscriptions", "organizations_url": "https://api.github.com/users/edsu/orgs", "repos_url": "https://api.github.com/users/edsu/repos", "events_url": "https://api.github.com/users/edsu/events{/privacy}", "received_events_url": "https://api.github.com/users/edsu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43195690, "node_id": "MDU6TGFiZWw0MzE5NTY5MA==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-08-08T11:50:07Z", "updated_at": "2014-06-28T20:08:13Z", "closed_at": "2014-06-28T20:08:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be useful to be able to instantiate a Bag, modify its metadata or payload, and then save it, which would regenerate bag-info.txt, manifest-md5.txt, etc. This will involve a fair bit of refactoring, to recast functions in bagit.py as methods on the Bag class.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/5", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/5/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/5/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/5", "id": 17802522, "node_id": "MDU6SXNzdWUxNzgwMjUyMg==", "number": 5, "title": "parallelize fixity checking in Bag.validate()", "user": {"login": "edsu", "id": 33829, "node_id": "MDQ6VXNlcjMzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/33829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edsu", "html_url": "https://github.com/edsu", "followers_url": "https://api.github.com/users/edsu/followers", "following_url": "https://api.github.com/users/edsu/following{/other_user}", "gists_url": "https://api.github.com/users/edsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edsu/subscriptions", "organizations_url": "https://api.github.com/users/edsu/orgs", "repos_url": "https://api.github.com/users/edsu/repos", "events_url": "https://api.github.com/users/edsu/events{/privacy}", "received_events_url": "https://api.github.com/users/edsu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43195690, "node_id": "MDU6TGFiZWw0MzE5NTY5MA==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-08-08T11:49:07Z", "updated_at": "2014-06-06T09:03:00Z", "closed_at": "2014-06-06T09:03:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Bag creation allows fixity generation to happen in parallel to take advantage of multi-cores. It would be nice if bag validation had the same option to generate fixity values in parallel.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/4", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/4/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/4/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/4", "id": 17802473, "node_id": "MDU6SXNzdWUxNzgwMjQ3Mw==", "number": 4, "title": "python3", "user": {"login": "edsu", "id": 33829, "node_id": "MDQ6VXNlcjMzODI5", "avatar_url": "https://avatars1.githubusercontent.com/u/33829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edsu", "html_url": "https://github.com/edsu", "followers_url": "https://api.github.com/users/edsu/followers", "following_url": "https://api.github.com/users/edsu/following{/other_user}", "gists_url": "https://api.github.com/users/edsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/edsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edsu/subscriptions", "organizations_url": "https://api.github.com/users/edsu/orgs", "repos_url": "https://api.github.com/users/edsu/repos", "events_url": "https://api.github.com/users/edsu/events{/privacy}", "received_events_url": "https://api.github.com/users/edsu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43195690, "node_id": "MDU6TGFiZWw0MzE5NTY5MA==", "url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-08-08T11:47:19Z", "updated_at": "2014-08-04T08:33:16Z", "closed_at": "2014-08-04T08:33:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It might be nice to have python 3 support, preferably implemented such that bagit.py works under both, rather than having separate code bases.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/3", "repository_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python", "labels_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/3/comments", "events_url": "https://api.github.com/repos/LibraryOfCongress/bagit-python/issues/3/events", "html_url": "https://github.com/LibraryOfCongress/bagit-python/issues/3", "id": 16243985, "node_id": "MDU6SXNzdWUxNjI0Mzk4NQ==", "number": 3, "title": "Push tags from the old repository", "user": {"login": "BHSPitMonkey", "id": 33672, "node_id": "MDQ6VXNlcjMzNjcy", "avatar_url": "https://avatars2.githubusercontent.com/u/33672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BHSPitMonkey", "html_url": "https://github.com/BHSPitMonkey", "followers_url": "https://api.github.com/users/BHSPitMonkey/followers", "following_url": "https://api.github.com/users/BHSPitMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/BHSPitMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/BHSPitMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BHSPitMonkey/subscriptions", "organizations_url": "https://api.github.com/users/BHSPitMonkey/orgs", "repos_url": "https://api.github.com/users/BHSPitMonkey/repos", "events_url": "https://api.github.com/users/BHSPitMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/BHSPitMonkey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-02T01:20:25Z", "updated_at": "2013-08-07T09:32:56Z", "closed_at": "2013-08-07T09:32:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Was trying to jump to a specific release and realized that the tags present at the old repository haven't been pushed here.  They would be nice to have!\n", "performed_via_github_app": null, "score": 1.0}]}