{"total_count": 116, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/google/python-fire/issues/271", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/271/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/271/events", "html_url": "https://github.com/google/python-fire/issues/271", "id": 655484713, "node_id": "MDU6SXNzdWU2NTU0ODQ3MTM=", "number": 271, "title": "Installing on Linux Mint 20 Ulyana", "user": {"login": "stanescuUW", "id": 28028870, "node_id": "MDQ6VXNlcjI4MDI4ODcw", "avatar_url": "https://avatars2.githubusercontent.com/u/28028870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanescuUW", "html_url": "https://github.com/stanescuUW", "followers_url": "https://api.github.com/users/stanescuUW/followers", "following_url": "https://api.github.com/users/stanescuUW/following{/other_user}", "gists_url": "https://api.github.com/users/stanescuUW/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanescuUW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanescuUW/subscriptions", "organizations_url": "https://api.github.com/users/stanescuUW/orgs", "repos_url": "https://api.github.com/users/stanescuUW/repos", "events_url": "https://api.github.com/users/stanescuUW/events{/privacy}", "received_events_url": "https://api.github.com/users/stanescuUW/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-12T22:00:46Z", "updated_at": "2020-07-13T19:45:34Z", "closed_at": "2020-07-13T19:45:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having trouble installing this under Linux Mint 20, although it used to work under 19.3. Below are the error messages I get. Help will be greatly appreciated. I tried several python versions and all give me the same errors.\r\n\r\nWhen installing with pip:\r\n------------------------------------\r\n\r\npip3 install fire\r\nCollecting fire\r\n  Using cached fire-0.3.1.tar.gz (81 kB)\r\nRequirement already satisfied: six in /home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages (from fire) (1.14.0)\r\nCollecting termcolor\r\n  Using cached termcolor-1.1.0.tar.gz (3.9 kB)\r\nBuilding wheels for collected packages: fire, termcolor\r\n  Building wheel for fire (setup.py) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /home/dan/.virtualenvs/lean-game/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-1uxkgcwx/fire/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-1uxkgcwx/fire/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-1tdzu9ip\r\n       cwd: /tmp/pip-install-1uxkgcwx/fire/\r\n  Complete output (92 lines):\r\n  running bdist_wheel\r\n  The [wheel] section is deprecated. Use [bdist_wheel] instead.\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib\r\n  creating build/lib/fire\r\n  copying fire/parser_fuzz_test.py -> build/lib/fire\r\n  copying fire/__init__.py -> build/lib/fire\r\n  copying fire/test_components_test.py -> build/lib/fire\r\n  copying fire/inspectutils_test.py -> build/lib/fire\r\n  copying fire/helptext.py -> build/lib/fire\r\n  copying fire/trace_test.py -> build/lib/fire\r\n  copying fire/custom_descriptions.py -> build/lib/fire\r\n  copying fire/inspectutils.py -> build/lib/fire\r\n  copying fire/test_components_py3.py -> build/lib/fire\r\n  copying fire/test_components_bin.py -> build/lib/fire\r\n  copying fire/fire_import_test.py -> build/lib/fire\r\n  copying fire/core_test.py -> build/lib/fire\r\n  copying fire/core.py -> build/lib/fire\r\n  copying fire/parser_test.py -> build/lib/fire\r\n  copying fire/value_types.py -> build/lib/fire\r\n  copying fire/main_test.py -> build/lib/fire\r\n  copying fire/parser.py -> build/lib/fire\r\n  copying fire/docstrings_test.py -> build/lib/fire\r\n  copying fire/completion_test.py -> build/lib/fire\r\n  copying fire/fire_test.py -> build/lib/fire\r\n  copying fire/docstrings.py -> build/lib/fire\r\n  copying fire/completion.py -> build/lib/fire\r\n  copying fire/decorators_test.py -> build/lib/fire\r\n  copying fire/decorators.py -> build/lib/fire\r\n  copying fire/formatting_windows.py -> build/lib/fire\r\n  copying fire/__main__.py -> build/lib/fire\r\n  copying fire/test_components.py -> build/lib/fire\r\n  copying fire/testutils.py -> build/lib/fire\r\n  copying fire/testutils_test.py -> build/lib/fire\r\n  copying fire/formatting.py -> build/lib/fire\r\n  copying fire/trace.py -> build/lib/fire\r\n  copying fire/helptext_test.py -> build/lib/fire\r\n  copying fire/interact.py -> build/lib/fire\r\n  copying fire/custom_descriptions_test.py -> build/lib/fire\r\n  copying fire/formatting_test.py -> build/lib/fire\r\n  copying fire/docstrings_fuzz_test.py -> build/lib/fire\r\n  copying fire/interact_test.py -> build/lib/fire\r\n  creating build/lib/fire/console\r\n  copying fire/console/__init__.py -> build/lib/fire/console\r\n  copying fire/console/console_pager.py -> build/lib/fire/console\r\n  copying fire/console/console_attr_os.py -> build/lib/fire/console\r\n  copying fire/console/encoding.py -> build/lib/fire/console\r\n  copying fire/console/platforms.py -> build/lib/fire/console\r\n  copying fire/console/files.py -> build/lib/fire/console\r\n  copying fire/console/text.py -> build/lib/fire/console\r\n  copying fire/console/console_attr.py -> build/lib/fire/console\r\n  copying fire/console/console_io.py -> build/lib/fire/console\r\n  installing to build/bdist.linux-x86_64/wheel\r\n  running install\r\n  running install_lib\r\n  Traceback (most recent call last):\r\n    File \"<string>\", line 1, in <module>\r\n    File \"/tmp/pip-install-1uxkgcwx/fire/setup.py\", line 46, in <module>\r\n      setup(\r\n    File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/setuptools/__init__.py\", line 145, in setup\r\n      return distutils.core.setup(**attrs)\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/core.py\", line 148, in setup\r\n      dist.run_commands()\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/dist.py\", line 966, in run_commands\r\n      self.run_command(cmd)\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/dist.py\", line 985, in run_command\r\n      cmd_obj.run()\r\n    File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/wheel/bdist_wheel.py\", line 259, in run\r\n      self.run_command('install')\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 313, in run_command\r\n      self.distribution.run_command(command)\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/dist.py\", line 985, in run_command\r\n      cmd_obj.run()\r\n    File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/setuptools/command/install.py\", line 61, in run\r\n      return orig.install.run(self)\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/command/install.py\", line 557, in run\r\n      self.run_command(cmd_name)\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 313, in run_command\r\n      self.distribution.run_command(command)\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/dist.py\", line 984, in run_command\r\n      cmd_obj.ensure_finalized()\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 107, in ensure_finalized\r\n      self.finalize_options()\r\n    File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/setuptools/command/install_lib.py\", line 17, in finalize_options\r\n      self.set_undefined_options('install',('install_layout','install_layout'))\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 290, in set_undefined_options\r\n      setattr(self, dst_option, getattr(src_cmd_obj, src_option))\r\n    File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 103, in __getattr__\r\n      raise AttributeError(attr)\r\n  AttributeError: install_layout\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for fire\r\n\r\n\r\nWhen trying to build:\r\n--------------------------------------\r\npython setup.py install\r\nrunning install\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 46, in <module>\r\n    setup(\r\n  File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/setuptools/__init__.py\", line 145, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/dist.py\", line 966, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/dist.py\", line 985, in run_command\r\n    cmd_obj.run()\r\n  File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/setuptools/command/install.py\", line 67, in run\r\n    self.do_egg_install()\r\n  File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/setuptools/command/install.py\", line 103, in do_egg_install\r\n    cmd.ensure_finalized()  # finalize before bdist_egg munges install cmd\r\n  File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 107, in ensure_finalized\r\n    self.finalize_options()\r\n  File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/setuptools/command/easy_install.py\", line 311, in finalize_options\r\n    self.set_undefined_options(\r\n  File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 287, in set_undefined_options\r\n    src_cmd_obj.ensure_finalized()\r\n  File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 107, in ensure_finalized\r\n    self.finalize_options()\r\n  File \"/home/dan/.virtualenvs/lean-game/lib/python3.8/site-packages/setuptools/command/install_lib.py\", line 17, in finalize_options\r\n    self.set_undefined_options('install',('install_layout','install_layout'))\r\n  File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 290, in set_undefined_options\r\n    setattr(self, dst_option, getattr(src_cmd_obj, src_option))\r\n  File \"/home/dan/.pyenv/versions/3.8.3/lib/python3.8/distutils/cmd.py\", line 103, in __getattr__\r\n    raise AttributeError(attr)\r\nAttributeError: install_layout", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/270", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/270/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/270/events", "html_url": "https://github.com/google/python-fire/issues/270", "id": 649994433, "node_id": "MDU6SXNzdWU2NDk5OTQ0MzM=", "number": 270, "title": "Fire behaviour on spliting strings into tuples", "user": {"login": "1MLightyears", "id": 31664721, "node_id": "MDQ6VXNlcjMxNjY0NzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/31664721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1MLightyears", "html_url": "https://github.com/1MLightyears", "followers_url": "https://api.github.com/users/1MLightyears/followers", "following_url": "https://api.github.com/users/1MLightyears/following{/other_user}", "gists_url": "https://api.github.com/users/1MLightyears/gists{/gist_id}", "starred_url": "https://api.github.com/users/1MLightyears/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1MLightyears/subscriptions", "organizations_url": "https://api.github.com/users/1MLightyears/orgs", "repos_url": "https://api.github.com/users/1MLightyears/repos", "events_url": "https://api.github.com/users/1MLightyears/events{/privacy}", "received_events_url": "https://api.github.com/users/1MLightyears/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-02T14:53:43Z", "updated_at": "2020-08-15T11:05:27Z", "closed_at": "2020-08-15T11:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Fire to handle CLI variables in my project, while I found Fire has different actions for strings including commas.\r\nWhen a string does not include commas, it will be transferred to a variable as a whole. But if the string includes commas, it will be split into parts and be transferred to a variable as tuple.\r\nexample:\r\n```python\r\n# in firetest.py\r\nfrom fire import Fire\r\n\r\ndef func(a:str=''):\r\n   print(type(a))\r\n\r\nFire(func)\r\n```\r\nWhen testing\r\n```bash\r\n$python firetest.py --a qwerty # <class 'str'>, a='qwerty' \u2190 good\u221a\r\n$python firetest.py --a qwe,rty # <class 'tuple'>, a=('qwe','rty') \u2190 not so good!\r\n```\r\nThis is kinda annoying...because my index to a variable may be totally different things, base on different user inputs.\r\nSo I'm wondering if there is any switch to stop parsing commas as delimiters and let me handle user input for consistency?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/268", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/268/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/268/events", "html_url": "https://github.com/google/python-fire/issues/268", "id": 638466558, "node_id": "MDU6SXNzdWU2Mzg0NjY1NTg=", "number": 268, "title": "module 'fire has no attribute 'Fire'", "user": {"login": "uhMale", "id": 63689367, "node_id": "MDQ6VXNlcjYzNjg5MzY3", "avatar_url": "https://avatars1.githubusercontent.com/u/63689367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uhMale", "html_url": "https://github.com/uhMale", "followers_url": "https://api.github.com/users/uhMale/followers", "following_url": "https://api.github.com/users/uhMale/following{/other_user}", "gists_url": "https://api.github.com/users/uhMale/gists{/gist_id}", "starred_url": "https://api.github.com/users/uhMale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uhMale/subscriptions", "organizations_url": "https://api.github.com/users/uhMale/orgs", "repos_url": "https://api.github.com/users/uhMale/repos", "events_url": "https://api.github.com/users/uhMale/events{/privacy}", "received_events_url": "https://api.github.com/users/uhMale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-15T00:41:33Z", "updated_at": "2020-06-15T15:19:01Z", "closed_at": "2020-06-15T15:19:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know people have run into this issue and it was fixed by renaming the module from fire.py to something else. I don't have a module named fire and still can't get past this error. I've tried it on a windows 7 and windows 8 machine. I've also spun up two ubuntu 18.04 VM's on those windows hosts but I can't get past this error. Does anyone have any suggestions for me? If there is a better place to ask this please let me know. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/260", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/260/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/260/events", "html_url": "https://github.com/google/python-fire/issues/260", "id": 620735435, "node_id": "MDU6SXNzdWU2MjA3MzU0MzU=", "number": 260, "title": "Is there any way that can transfer path string to pathlib.Path object?", "user": {"login": "Shichao-Wang", "id": 30031905, "node_id": "MDQ6VXNlcjMwMDMxOTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/30031905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shichao-Wang", "html_url": "https://github.com/Shichao-Wang", "followers_url": "https://api.github.com/users/Shichao-Wang/followers", "following_url": "https://api.github.com/users/Shichao-Wang/following{/other_user}", "gists_url": "https://api.github.com/users/Shichao-Wang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shichao-Wang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shichao-Wang/subscriptions", "organizations_url": "https://api.github.com/users/Shichao-Wang/orgs", "repos_url": "https://api.github.com/users/Shichao-Wang/repos", "events_url": "https://api.github.com/users/Shichao-Wang/events{/privacy}", "received_events_url": "https://api.github.com/users/Shichao-Wang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-19T07:11:26Z", "updated_at": "2020-06-02T06:23:45Z", "closed_at": "2020-06-02T06:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some function that use pathlib.Path as argument, like following script\r\n```python\r\nfrom pathlib import Path\r\nimport fire\r\n\r\n\r\ndef test_fire(path: Path):\r\n    print(type(path))\r\n    print(path)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    fire.Fire(test_fire)\r\n```\r\n\r\nI simply test it with this. \r\n```bash \r\npython test_fire.py \"/some_path_string\"\r\n\r\n<class 'str'>\r\n/some_path_string\r\n```\r\n\r\nI expect to get a `pathlib.Path` object rather than `str`. Is there any way that I can do this?\r\nThanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/254", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/254/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/254/events", "html_url": "https://github.com/google/python-fire/issues/254", "id": 612557178, "node_id": "MDU6SXNzdWU2MTI1NTcxNzg=", "number": 254, "title": "Feature Request: Add annotation interface", "user": {"login": "dreamflasher", "id": 31695, "node_id": "MDQ6VXNlcjMxNjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/31695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamflasher", "html_url": "https://github.com/dreamflasher", "followers_url": "https://api.github.com/users/dreamflasher/followers", "following_url": "https://api.github.com/users/dreamflasher/following{/other_user}", "gists_url": "https://api.github.com/users/dreamflasher/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamflasher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamflasher/subscriptions", "organizations_url": "https://api.github.com/users/dreamflasher/orgs", "repos_url": "https://api.github.com/users/dreamflasher/repos", "events_url": "https://api.github.com/users/dreamflasher/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamflasher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T12:15:52Z", "updated_at": "2020-06-12T17:21:06Z", "closed_at": "2020-06-12T17:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please consider adding an annotation interface comparable to https://github.com/Lucretiel/autocommand:\r\n\r\n```\r\nfrom autocommand import autocommand\r\n\r\n# This program takes exactly one argument and echos it.\r\n@autocommand(__name__)\r\ndef echo(thing):\r\n    print(thing)\r\n```\r\n\r\neg.\r\n```\r\nfrom fire import fire\r\n\r\n@fire\r\ndef echo(thing):\r\n    print(thing)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/246", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/246/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/246/events", "html_url": "https://github.com/google/python-fire/issues/246", "id": 604795729, "node_id": "MDU6SXNzdWU2MDQ3OTU3Mjk=", "number": 246, "title": "Use Fire with Python3", "user": {"login": "RilDev", "id": 13135150, "node_id": "MDQ6VXNlcjEzMTM1MTUw", "avatar_url": "https://avatars2.githubusercontent.com/u/13135150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RilDev", "html_url": "https://github.com/RilDev", "followers_url": "https://api.github.com/users/RilDev/followers", "following_url": "https://api.github.com/users/RilDev/following{/other_user}", "gists_url": "https://api.github.com/users/RilDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/RilDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RilDev/subscriptions", "organizations_url": "https://api.github.com/users/RilDev/orgs", "repos_url": "https://api.github.com/users/RilDev/repos", "events_url": "https://api.github.com/users/RilDev/events{/privacy}", "received_events_url": "https://api.github.com/users/RilDev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-22T14:18:40Z", "updated_at": "2020-04-30T21:03:10Z", "closed_at": "2020-04-22T18:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm new to Python and I was wondering if we could download Fire for Python3?\r\n\r\nMy goal is to make a Pip package using Fire and Python3.\r\n\r\nThank you very much!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/244", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/244/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/244/events", "html_url": "https://github.com/google/python-fire/issues/244", "id": 602599507, "node_id": "MDU6SXNzdWU2MDI1OTk1MDc=", "number": 244, "title": "Problem with Installation with Pip", "user": {"login": "Richard-Barrett", "id": 32808365, "node_id": "MDQ6VXNlcjMyODA4MzY1", "avatar_url": "https://avatars0.githubusercontent.com/u/32808365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Richard-Barrett", "html_url": "https://github.com/Richard-Barrett", "followers_url": "https://api.github.com/users/Richard-Barrett/followers", "following_url": "https://api.github.com/users/Richard-Barrett/following{/other_user}", "gists_url": "https://api.github.com/users/Richard-Barrett/gists{/gist_id}", "starred_url": "https://api.github.com/users/Richard-Barrett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Richard-Barrett/subscriptions", "organizations_url": "https://api.github.com/users/Richard-Barrett/orgs", "repos_url": "https://api.github.com/users/Richard-Barrett/repos", "events_url": "https://api.github.com/users/Richard-Barrett/events{/privacy}", "received_events_url": "https://api.github.com/users/Richard-Barrett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-19T02:12:05Z", "updated_at": "2020-04-21T03:01:00Z", "closed_at": "2020-04-21T01:54:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have Python2 and Python3 both installed as I have to work with some applications that are still using python2. I tried running an install with `pip install fire`. However, it didn't work. Here is the traceback:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 147, in <module>\r\n    globals()[__func_name] = __get_hash(__func_name)\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 97, in __get_builtin_constructor\r\n    raise ValueError('unsupported hash type ' + name)\r\nValueError: unsupported hash type md5\r\nERROR:root:code for hash sha1 was not found.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 147, in <module>\r\n    globals()[__func_name] = __get_hash(__func_name)\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 97, in __get_builtin_constructor\r\n    raise ValueError('unsupported hash type ' + name)\r\nValueError: unsupported hash type sha1\r\nERROR:root:code for hash sha224 was not found.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 147, in <module>\r\n    globals()[__func_name] = __get_hash(__func_name)\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 97, in __get_builtin_constructor\r\n    raise ValueError('unsupported hash type ' + name)\r\nValueError: unsupported hash type sha224\r\nERROR:root:code for hash sha256 was not found.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 147, in <module>\r\n    globals()[__func_name] = __get_hash(__func_name)\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 97, in __get_builtin_constructor\r\n    raise ValueError('unsupported hash type ' + name)\r\nValueError: unsupported hash type sha256\r\nERROR:root:code for hash sha384 was not found.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 147, in <module>\r\n    globals()[__func_name] = __get_hash(__func_name)\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 97, in __get_builtin_constructor\r\n    raise ValueError('unsupported hash type ' + name)\r\nValueError: unsupported hash type sha384\r\nERROR:root:code for hash sha512 was not found.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 147, in <module>\r\n    globals()[__func_name] = __get_hash(__func_name)\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py\", line 97, in __get_builtin_constructor\r\n    raise ValueError('unsupported hash type ' + name)\r\nValueError: unsupported hash type sha512\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/pip\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_internal/cli/main.py\", line 73, in main\r\n    command = create_command(cmd_name, isolated=(\"--isolated\" in cmd_args))\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_internal/commands/__init__.py\", line 96, in create_command\r\n    module = importlib.import_module(module_path)\r\n  File \"/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_internal/commands/install.py\", line 24, in <module>\r\n    from pip._internal.cli.req_command import RequirementCommand\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_internal/cli/req_command.py\", line 15, in <module>\r\n    from pip._internal.index.package_finder import PackageFinder\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_internal/index/package_finder.py\", line 21, in <module>\r\n    from pip._internal.index.collector import parse_links\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_internal/index/collector.py\", line 12, in <module>\r\n    from pip._vendor import html5lib, requests\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/requests/__init__.py\", line 43, in <module>\r\n    from pip._vendor import urllib3\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/urllib3/__init__.py\", line 7, in <module>\r\n    from .connectionpool import HTTPConnectionPool, HTTPSConnectionPool, connection_from_url\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/urllib3/connectionpool.py\", line 29, in <module>\r\n    from .connection import (\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/urllib3/connection.py\", line 40, in <module>\r\n    from .util.ssl_ import (\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/urllib3/util/__init__.py\", line 7, in <module>\r\n    from .ssl_ import (\r\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/urllib3/util/ssl_.py\", line 8, in <module>\r\n    from hashlib import md5, sha1, sha256\r\nImportError: cannot import name md5\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/241", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/241/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/241/events", "html_url": "https://github.com/google/python-fire/issues/241", "id": 598142666, "node_id": "MDU6SXNzdWU1OTgxNDI2NjY=", "number": 241, "title": "[feature-request] help shows commands", "user": {"login": "tbenst", "id": 863327, "node_id": "MDQ6VXNlcjg2MzMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/863327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbenst", "html_url": "https://github.com/tbenst", "followers_url": "https://api.github.com/users/tbenst/followers", "following_url": "https://api.github.com/users/tbenst/following{/other_user}", "gists_url": "https://api.github.com/users/tbenst/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbenst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbenst/subscriptions", "organizations_url": "https://api.github.com/users/tbenst/orgs", "repos_url": "https://api.github.com/users/tbenst/repos", "events_url": "https://api.github.com/users/tbenst/events{/privacy}", "received_events_url": "https://api.github.com/users/tbenst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T23:44:47Z", "updated_at": "2020-04-10T23:59:06Z", "closed_at": "2020-04-10T23:59:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this package. I'm exploring switching to fire since [Click is deprecating chaining commands](https://github.com/pallets/click/issues/1522#issuecomment-612132519). The example for https://github.com/google/python-fire/blob/master/docs/guide.md#chaining-function-calls is exactly what I was hoping for.\r\n\r\nI'd like to propose a new feature for the --help flag output, that adds COMMANDS. Right now it is hard to discover commands without referring to source code.\r\n```\r\nNAME\r\n    BinaryCanvas - A canvas with which to make binary art, one bit at a time.\r\n\r\nSYNOPSIS\r\n    BinaryCanvas <flags> COMMAND\r\n\r\nDESCRIPTION\r\n    A canvas with which to make binary art, one bit at a time.\r\n\r\nFLAGS\r\n    --size=SIZE\r\n\r\nCOMMANDS\r\nshow\r\nmove \r\non\r\noff\r\nset\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/236", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/236/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/236/events", "html_url": "https://github.com/google/python-fire/issues/236", "id": 587529801, "node_id": "MDU6SXNzdWU1ODc1Mjk4MDE=", "number": 236, "title": "fire raises \"preexec_fn is not supported on Windows platforms\" when using setuptools in windows", "user": {"login": "acerv", "id": 17720261, "node_id": "MDQ6VXNlcjE3NzIwMjYx", "avatar_url": "https://avatars3.githubusercontent.com/u/17720261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acerv", "html_url": "https://github.com/acerv", "followers_url": "https://api.github.com/users/acerv/followers", "following_url": "https://api.github.com/users/acerv/following{/other_user}", "gists_url": "https://api.github.com/users/acerv/gists{/gist_id}", "starred_url": "https://api.github.com/users/acerv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acerv/subscriptions", "organizations_url": "https://api.github.com/users/acerv/orgs", "repos_url": "https://api.github.com/users/acerv/repos", "events_url": "https://api.github.com/users/acerv/events{/privacy}", "received_events_url": "https://api.github.com/users/acerv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-25T08:35:39Z", "updated_at": "2020-04-07T20:15:09Z", "closed_at": "2020-04-03T17:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm using fire 0.3.0 and I had an issue running fire script in Window 10. Code is the following:\r\nInside auttools/ethrelay.py module I defined:\r\n\r\n        .... ....\r\n\r\n\tdef main():\r\n\t    fire.Fire(EthRelayTool)\r\n\r\nInside setup.py:\r\n\r\n\tentry_points={\r\n        'console_scripts': 'ethrelay=auttools.ethrelay:main',\r\n    },\r\n\r\nError:\r\n\r\n    Traceback (most recent call last):\r\n\t  File \"C:\\userdata\\workspaces\\app_automation_tools\\tools\\.venv\\Scripts\\ethrelay-script.py\", line 11, in <module>\r\n\t\tload_entry_point('auttools', 'console_scripts', 'ethrelay')()\r\n\t  File \"c:\\userdata\\workspaces\\app_automation_tools\\tools\\auttools\\ethrelay.py\", line 80, in main\r\n\t\tfire.Fire(EthRelayTool)\r\n\t  File \"c:\\userdata\\workspaces\\app_automation_tools\\tools\\.venv\\lib\\site-packages\\fire\\core.py\", line 160, in Fire\r\n\t\tDisplay(output, out=sys.stderr)\r\n\t  File \"c:\\userdata\\workspaces\\app_automation_tools\\tools\\.venv\\lib\\site-packages\\fire\\core.py\", line 171, in Display\r\n\t\tconsole_io.More(text, out=out)\r\n\t  File \"c:\\userdata\\workspaces\\app_automation_tools\\tools\\.venv\\lib\\site-packages\\fire\\console\\console_io.py\", line 111, in More\r\n\t\tpager, stdin=subprocess.PIPE, shell=True, preexec_fn=PreexecFunc)\r\n\t  File \"c:\\python\\3.7.5\\Lib\\subprocess.py\", line 706, in __init__\r\n\t\traise ValueError(\"preexec_fn is not supported on Windows \"\r\n\tValueError: preexec_fn is not supported on Windows platforms\r\n\r\nBest regards,\r\nAndrea", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/234", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/234/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/234/events", "html_url": "https://github.com/google/python-fire/issues/234", "id": 581522877, "node_id": "MDU6SXNzdWU1ODE1MjI4Nzc=", "number": 234, "title": "Python 2.7  while loop issue, (list index out of range)", "user": {"login": "NicholasMatthews", "id": 23719129, "node_id": "MDQ6VXNlcjIzNzE5MTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/23719129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicholasMatthews", "html_url": "https://github.com/NicholasMatthews", "followers_url": "https://api.github.com/users/NicholasMatthews/followers", "following_url": "https://api.github.com/users/NicholasMatthews/following{/other_user}", "gists_url": "https://api.github.com/users/NicholasMatthews/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicholasMatthews/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicholasMatthews/subscriptions", "organizations_url": "https://api.github.com/users/NicholasMatthews/orgs", "repos_url": "https://api.github.com/users/NicholasMatthews/repos", "events_url": "https://api.github.com/users/NicholasMatthews/events{/privacy}", "received_events_url": "https://api.github.com/users/NicholasMatthews/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-15T05:17:26Z", "updated_at": "2020-03-16T12:36:10Z", "closed_at": "2020-03-16T12:36:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "`searchlist = []\r\nimport sys #imported the sys function to enable the printing of a variable multiple times on the same line during a loop\r\nnconverted =[]\r\nconverted = []\r\nwords = []\r\nn = 0\r\nA = 1\r\nB = 0\r\npush = 0\r\n\r\n\r\ndef numberconvert():\r\n    n = 0\r\n    ciphertext = [\"U\",\"O\",\"M\",\"Q\",\"Q\",\"K\",\"F\",\"X\",\"A\",\"C\",\"K\",\"H\",\"C\",\"X\",\"M\",\"P\",\"F\",\"A\",\"Y\",\"H\"]\r\n    while n < 20:\r\n        pos = ciphertext[n]\r\n        number = ord(pos) -66\r\n        converted.append(number)\r\n        n = n + 1\r\n    print converted\r\nnumberconvert()\r\n\r\n\r\n\r\ndef loop():\r\n    A = [\"1\",\"9\",\"21\",\"15\",\"3\",\"19\",\"7\",\"23\",\"11\",\"5\",\"17\",\"25\"]\r\n    n = 0\r\n    B = 0\r\n    push = 0\r\n    x = 0\r\n    i = 0\r\n    for x in range(6240):\r\n        if n == 19:\r\n            n = 0\r\n        push = ((int(A[i])) * (int(converted[n])) - B)%26\r\n        n = n + 1\r\n        B = B + 1\r\n        if B == 26:\r\n            i = i + 1\r\n            B = 0\r\n        x = x + 1\r\n        finalkey = chr(ord('@')+ push)\r\n        nconverted.append(finalkey)\r\n        sys.stdout.write(finalkey)\r\n                \r\n`\r\n\r\nI don't understand why i've getting an output of list index out of range, I understand that B is the issue whoever I just don't know how to fix it so then it provides the sufficient 6240 outputs\r\n\r\nHope someone can help me here! \r\n\r\nThanks for your time", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/222", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/222/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/222/events", "html_url": "https://github.com/google/python-fire/issues/222", "id": 566917815, "node_id": "MDU6SXNzdWU1NjY5MTc4MTU=", "number": 222, "title": "Do not execute anything if command line is invalid", "user": {"login": "MaxG87", "id": 5477952, "node_id": "MDQ6VXNlcjU0Nzc5NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5477952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxG87", "html_url": "https://github.com/MaxG87", "followers_url": "https://api.github.com/users/MaxG87/followers", "following_url": "https://api.github.com/users/MaxG87/following{/other_user}", "gists_url": "https://api.github.com/users/MaxG87/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxG87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxG87/subscriptions", "organizations_url": "https://api.github.com/users/MaxG87/orgs", "repos_url": "https://api.github.com/users/MaxG87/repos", "events_url": "https://api.github.com/users/MaxG87/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxG87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-18T14:09:23Z", "updated_at": "2020-02-24T08:06:32Z", "closed_at": "2020-02-24T08:06:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "In certain circumstances Fire will execute python code albeit the command line is not valid. Consider the following MWE:\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport fire\r\n\r\n\r\ndef yet_another_function(*, argument: bool = False) -> None:\r\n    print(f\"Executing yet_another_function() with argument={argument}.\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    fire.Fire({\"yaf\": yet_another_function})\r\n```\r\n\r\nIf I execute it with\r\n\r\n    ./mwe.py yaf yet-another-argument\r\n\r\nI get\r\n\r\n```\r\nExecuting yet_another_function() with argument=False.\r\nERROR: Could not consume arg: yet-another-argument\r\nUsage: mwe.py yaf\r\n\r\nFor detailed information on this command, run:\r\n  mwe.py yaf --help\r\n```\r\n\r\nNote that the function is executed anyways.\r\n\r\nIn my case this behaviour let a bug manifest in a CI pipeline. I would have preferred to see the step break directly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/221", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/221/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/221/events", "html_url": "https://github.com/google/python-fire/issues/221", "id": 566907462, "node_id": "MDU6SXNzdWU1NjY5MDc0NjI=", "number": 221, "title": "Support flag-only arguments", "user": {"login": "MaxG87", "id": 5477952, "node_id": "MDQ6VXNlcjU0Nzc5NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5477952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxG87", "html_url": "https://github.com/MaxG87", "followers_url": "https://api.github.com/users/MaxG87/followers", "following_url": "https://api.github.com/users/MaxG87/following{/other_user}", "gists_url": "https://api.github.com/users/MaxG87/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxG87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxG87/subscriptions", "organizations_url": "https://api.github.com/users/MaxG87/orgs", "repos_url": "https://api.github.com/users/MaxG87/repos", "events_url": "https://api.github.com/users/MaxG87/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxG87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T13:52:41Z", "updated_at": "2020-02-24T08:08:36Z", "closed_at": "2020-02-24T08:08:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to have arguments that do not accept any value. Thus,\r\n\r\n    ./my-script.py --flag\r\n\r\nshould work, but\r\n\r\n    ./my-script.py --flag SomeValue\r\n\r\nshould not. In `argparse` this can be achieved by \r\n\r\n    parser.add_argument(\"--flag\", action=\"store_true\")\r\n\r\nbut I do not know how to achieve that in python-fire.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/219", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/219/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/219/events", "html_url": "https://github.com/google/python-fire/issues/219", "id": 558774190, "node_id": "MDU6SXNzdWU1NTg3NzQxOTA=", "number": 219, "title": "Examples don't work", "user": {"login": "XenGi", "id": 1043980, "node_id": "MDQ6VXNlcjEwNDM5ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1043980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XenGi", "html_url": "https://github.com/XenGi", "followers_url": "https://api.github.com/users/XenGi/followers", "following_url": "https://api.github.com/users/XenGi/following{/other_user}", "gists_url": "https://api.github.com/users/XenGi/gists{/gist_id}", "starred_url": "https://api.github.com/users/XenGi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XenGi/subscriptions", "organizations_url": "https://api.github.com/users/XenGi/orgs", "repos_url": "https://api.github.com/users/XenGi/repos", "events_url": "https://api.github.com/users/XenGi/events{/privacy}", "received_events_url": "https://api.github.com/users/XenGi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-02T23:13:46Z", "updated_at": "2020-02-03T21:17:22Z", "closed_at": "2020-02-03T21:17:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, I just found this project. It looks pretty cool, so I copied the example into a file called `fire.py` with the content:\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport fire\r\n\r\nclass Calculator(object):\r\n  \"\"\"A simple calculator class.\"\"\"\r\n\r\n  def double(self, number):\r\n    return 2 * number\r\n\r\nif __name__ == '__main__':\r\n  fire.Fire(Calculator)\r\n```\r\n\r\nIn my fresh virtualenv I do `pip install fire`. After that I fire everything up:\r\n\r\n```\r\n$ chmod +x fire.py\r\n$ ./fire.py\r\nTraceback (most recent call last):\r\n  File \"./fire.py\", line 12, in <module>\r\n    fire.Fire(Calculator)\r\nAttributeError: module 'fire' has no attribute 'Fire'\r\n```\r\n\r\nThis is your minimal example in your README file. How can this not work? m(", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/217", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/217/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/217/events", "html_url": "https://github.com/google/python-fire/issues/217", "id": 550853195, "node_id": "MDU6SXNzdWU1NTA4NTMxOTU=", "number": 217, "title": "A set of MVC WEB framework designed based on Google Python-fire,Flask,RPyC", "user": {"login": "lifeblood", "id": 3621748, "node_id": "MDQ6VXNlcjM2MjE3NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3621748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifeblood", "html_url": "https://github.com/lifeblood", "followers_url": "https://api.github.com/users/lifeblood/followers", "following_url": "https://api.github.com/users/lifeblood/following{/other_user}", "gists_url": "https://api.github.com/users/lifeblood/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifeblood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifeblood/subscriptions", "organizations_url": "https://api.github.com/users/lifeblood/orgs", "repos_url": "https://api.github.com/users/lifeblood/repos", "events_url": "https://api.github.com/users/lifeblood/events{/privacy}", "received_events_url": "https://api.github.com/users/lifeblood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-16T14:45:27Z", "updated_at": "2020-02-03T21:24:41Z", "closed_at": "2020-02-03T21:24:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/lifeblood/fire-cli.git", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/214", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/214/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/214/events", "html_url": "https://github.com/google/python-fire/issues/214", "id": 548419478, "node_id": "MDU6SXNzdWU1NDg0MTk0Nzg=", "number": 214, "title": "Define a default command", "user": {"login": "Freakwill", "id": 30965609, "node_id": "MDQ6VXNlcjMwOTY1NjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/30965609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freakwill", "html_url": "https://github.com/Freakwill", "followers_url": "https://api.github.com/users/Freakwill/followers", "following_url": "https://api.github.com/users/Freakwill/following{/other_user}", "gists_url": "https://api.github.com/users/Freakwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freakwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freakwill/subscriptions", "organizations_url": "https://api.github.com/users/Freakwill/orgs", "repos_url": "https://api.github.com/users/Freakwill/repos", "events_url": "https://api.github.com/users/Freakwill/events{/privacy}", "received_events_url": "https://api.github.com/users/Freakwill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-11T11:38:42Z", "updated_at": "2020-03-06T22:14:39Z", "closed_at": "2020-03-06T22:14:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it sensible to define a default command, if dose not lead to any conflict?\r\n\r\n```python\r\n# in script foo.py\r\ndef foo():\r\n    print('foo')\r\ndef bar():\r\n    print('bar')\r\ndef main():\r\n    print('main')\r\n```\r\nIt the rule is running a command with the same name to the script, then\r\ncommand `$ foo.py` will run `foo` function by default. If the rule is running command `main` that was defined, then run it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/211", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/211/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/211/events", "html_url": "https://github.com/google/python-fire/issues/211", "id": 530620568, "node_id": "MDU6SXNzdWU1MzA2MjA1Njg=", "number": 211, "title": "Small typo in Pager docstring.", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-30T19:30:21Z", "updated_at": "2019-12-05T21:53:58Z", "closed_at": "2019-12-05T21:53:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should read terminal rather than termonal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/210", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/210/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/210/events", "html_url": "https://github.com/google/python-fire/issues/210", "id": 530535918, "node_id": "MDU6SXNzdWU1MzA1MzU5MTg=", "number": 210, "title": "Taking hidden arguments", "user": {"login": "i-amgeek", "id": 28572201, "node_id": "MDQ6VXNlcjI4NTcyMjAx", "avatar_url": "https://avatars3.githubusercontent.com/u/28572201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/i-amgeek", "html_url": "https://github.com/i-amgeek", "followers_url": "https://api.github.com/users/i-amgeek/followers", "following_url": "https://api.github.com/users/i-amgeek/following{/other_user}", "gists_url": "https://api.github.com/users/i-amgeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/i-amgeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/i-amgeek/subscriptions", "organizations_url": "https://api.github.com/users/i-amgeek/orgs", "repos_url": "https://api.github.com/users/i-amgeek/repos", "events_url": "https://api.github.com/users/i-amgeek/events{/privacy}", "received_events_url": "https://api.github.com/users/i-amgeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-30T05:37:38Z", "updated_at": "2019-12-05T21:53:18Z", "closed_at": "2019-12-05T21:53:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any method to get hidden input in arguments? Or any technique to use getpass with fire?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/207", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/207/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/207/events", "html_url": "https://github.com/google/python-fire/issues/207", "id": 513665098, "node_id": "MDU6SXNzdWU1MTM2NjUwOTg=", "number": 207, "title": "How can I use default arguments in a method with python-fire? Possible bug. Feature request: Argument in `fire.Fire` to force using keyword args", "user": {"login": "securisec", "id": 22226823, "node_id": "MDQ6VXNlcjIyMjI2ODIz", "avatar_url": "https://avatars2.githubusercontent.com/u/22226823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/securisec", "html_url": "https://github.com/securisec", "followers_url": "https://api.github.com/users/securisec/followers", "following_url": "https://api.github.com/users/securisec/following{/other_user}", "gists_url": "https://api.github.com/users/securisec/gists{/gist_id}", "starred_url": "https://api.github.com/users/securisec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/securisec/subscriptions", "organizations_url": "https://api.github.com/users/securisec/orgs", "repos_url": "https://api.github.com/users/securisec/repos", "events_url": "https://api.github.com/users/securisec/events{/privacy}", "received_events_url": "https://api.github.com/users/securisec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-10-29T03:04:58Z", "updated_at": "2020-02-10T03:30:59Z", "closed_at": "2020-02-10T03:30:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having an issue with `python-fire` when a method has arguments with default values. Consider the following code:\r\n\r\n```\r\nimport fire\r\n\r\nclass SomeClass(object):\r\n    def __init__(self):\r\n        self.a = ''\r\n        self.b = ''\r\n\r\n    def methoda(self):\r\n        self.a = 'A'\r\n        return self\r\n\r\n    def methodb(self, x='B123'):\r\n        self.b = self.a + x\r\n        return self\r\n\r\n    def __str__(self):\r\n        return self.b\r\n\r\nif __name__ == '__main__':\r\n    s = SomeClass()\r\n    s.methodb().methoda()\r\n    print(s.b) # this prints B123 correctly\r\n\r\n    fire.Fire(SomeClass)\r\n```\r\n\r\nAs seen in the comments, in the `print(s.b), it is printing `B123` correctly. But when i change the order of the methods being called in fire from the command line, I am getting the odd behavior. \r\n\r\nExample:\r\n\r\n```\r\n> python x.py\r\nB123 # correct\r\n\r\n> python x.py methoda methodb\r\nHere: B123\r\nAB123 # both correct\r\n\r\n> python x.py methodb --x B123 methoda\r\nHere: B123\r\nB123 # again both correct\r\n\r\n> python x.py methodb methoda\r\nHere: B123\r\nmethoda # this is not correct. It should print B123 here also\r\n```\r\n\r\nAs you can see with the last example, if i call `methodb` (which has an argument with a default value), it prints `methoda` instead of `B123` as expected.\r\n\r\nMy question is, How can I use a method that has a default argument value first in this type of scenario without passing in `--x=something`? \r\n\r\nIn short, how can i make `> python x.py methodb methoda` properly print `B123`?\r\nSecond question is, how can I show the method args in the help? Currently it shows nothing when there is a default value assigned. When I do `methoda methodb`, I do not have to pass `--x=B123`, but if I move the method with the default argument value up, it doesnt work as seen in the example. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/205", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/205/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/205/events", "html_url": "https://github.com/google/python-fire/issues/205", "id": 506408945, "node_id": "MDU6SXNzdWU1MDY0MDg5NDU=", "number": 205, "title": "Control-C on command instructions loses cursor.", "user": {"login": "bschroeter", "id": 4648212, "node_id": "MDQ6VXNlcjQ2NDgyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4648212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bschroeter", "html_url": "https://github.com/bschroeter", "followers_url": "https://api.github.com/users/bschroeter/followers", "following_url": "https://api.github.com/users/bschroeter/following{/other_user}", "gists_url": "https://api.github.com/users/bschroeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/bschroeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bschroeter/subscriptions", "organizations_url": "https://api.github.com/users/bschroeter/orgs", "repos_url": "https://api.github.com/users/bschroeter/repos", "events_url": "https://api.github.com/users/bschroeter/events{/privacy}", "received_events_url": "https://api.github.com/users/bschroeter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-14T01:04:28Z", "updated_at": "2020-03-06T22:16:32Z", "closed_at": "2020-03-06T22:16:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running a script with no arguments the user is presented with a man-style page listing the available commands. The natural way to dismiss this message is to either hit \"q\" or \"control-c\". The former works fine, but the latter triggers a KeyboardInterrupt which, when returning to the shell has lost the cursor and typed text no longer appears.\r\n\r\nI've tested this on both MacOS and Linux, the same error occurs in both terminal and iterm2.\r\n\r\nTake the following example:\r\n\r\n```python\r\nimport fire\r\n\r\ndef myfunc():\r\n    return True\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire()\r\n```\r\n\r\nRun it with:\r\n\r\n```shell\r\npython test.py\r\n```\r\n\r\nThen hit control-c and try to type something in the returned shell. You'll see what I mean.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/199", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/199/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/199/events", "html_url": "https://github.com/google/python-fire/issues/199", "id": 503785582, "node_id": "MDU6SXNzdWU1MDM3ODU1ODI=", "number": 199, "title": "Keyword-only arguments can be optional if they have a default", "user": {"login": "collinstocks", "id": 928827, "node_id": "MDQ6VXNlcjkyODgyNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/928827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/collinstocks", "html_url": "https://github.com/collinstocks", "followers_url": "https://api.github.com/users/collinstocks/followers", "following_url": "https://api.github.com/users/collinstocks/following{/other_user}", "gists_url": "https://api.github.com/users/collinstocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/collinstocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/collinstocks/subscriptions", "organizations_url": "https://api.github.com/users/collinstocks/orgs", "repos_url": "https://api.github.com/users/collinstocks/repos", "events_url": "https://api.github.com/users/collinstocks/events{/privacy}", "received_events_url": "https://api.github.com/users/collinstocks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-08T02:20:44Z", "updated_at": "2020-04-03T18:01:55Z", "closed_at": "2020-04-03T18:01:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that all keyword-only arguments in Python3 are marked as \"required\" in the usage string even when they have a default value. This is confusing because they are not required to be set in order to run the program.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/197", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/197/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/197/events", "html_url": "https://github.com/google/python-fire/issues/197", "id": 502619399, "node_id": "MDU6SXNzdWU1MDI2MTkzOTk=", "number": 197, "title": "Help text uses class docstring instead of repr(object) in fire>=0.2.0 for objects in dict", "user": {"login": "fedorbirjukov", "id": 1055607, "node_id": "MDQ6VXNlcjEwNTU2MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1055607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fedorbirjukov", "html_url": "https://github.com/fedorbirjukov", "followers_url": "https://api.github.com/users/fedorbirjukov/followers", "following_url": "https://api.github.com/users/fedorbirjukov/following{/other_user}", "gists_url": "https://api.github.com/users/fedorbirjukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/fedorbirjukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fedorbirjukov/subscriptions", "organizations_url": "https://api.github.com/users/fedorbirjukov/orgs", "repos_url": "https://api.github.com/users/fedorbirjukov/repos", "events_url": "https://api.github.com/users/fedorbirjukov/events{/privacy}", "received_events_url": "https://api.github.com/users/fedorbirjukov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-04T12:52:19Z", "updated_at": "2020-02-28T17:29:47Z", "closed_at": "2020-02-28T17:28:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "dict with string values produces this CLI.\r\n\r\n```\r\n> python -c \"import fire; fire.Fire({'key1': 'value1', 'key2': 'value2'})\"\r\nkey1: value1\r\nkey2: value2\r\n```\r\n\r\ndict with object values produced a very simlarly CLI in fire==0.1.3.\r\n\r\n```\r\nkey1: Value(name='value1')\r\nkey2: Value(name='value2')\r\n```\r\n\r\nSince fire>=0.2.0 this is not the case anymore...\r\n\r\n```\r\n> python value.py\r\nNAME\r\n    value.py\r\n\r\nSYNOPSIS\r\n    value.py GROUP\r\n\r\nGROUPS\r\n    GROUP is one of the following:\r\n\r\n     key1\r\n       Docstring\r\n\r\n     key2\r\n       Docstring\r\n```\r\n\r\nCould you restore the old behavior?\r\n\r\n**value.py**\r\n\r\n```\r\nclass Value:\r\n    \"\"\"Docstring\"\"\"\r\n    def __init__(self, name):\r\n        self.name = name\r\n    def __repr__(self):\r\n        return \"%s(name=%r)\" % (self.__class__.__name__, self.name)\r\n\r\nimport fire\r\nfire.Fire({'key1': Value('value1'), 'key2': Value('value2')})\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/195", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/195/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/195/events", "html_url": "https://github.com/google/python-fire/issues/195", "id": 494144896, "node_id": "MDU6SXNzdWU0OTQxNDQ4OTY=", "number": 195, "title": "Way to use one/no separator/hyphen in help/usage", "user": {"login": "fedorbirjukov", "id": 1055607, "node_id": "MDQ6VXNlcjEwNTU2MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1055607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fedorbirjukov", "html_url": "https://github.com/fedorbirjukov", "followers_url": "https://api.github.com/users/fedorbirjukov/followers", "following_url": "https://api.github.com/users/fedorbirjukov/following{/other_user}", "gists_url": "https://api.github.com/users/fedorbirjukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/fedorbirjukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fedorbirjukov/subscriptions", "organizations_url": "https://api.github.com/users/fedorbirjukov/orgs", "repos_url": "https://api.github.com/users/fedorbirjukov/repos", "events_url": "https://api.github.com/users/fedorbirjukov/events{/privacy}", "received_events_url": "https://api.github.com/users/fedorbirjukov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-16T16:09:48Z", "updated_at": "2019-09-20T21:18:05Z", "closed_at": "2019-09-20T21:18:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Landed here due to flags. I know it's documented that \"--flag1 --flag2\" does not work.\r\nBut since \"-flag1 -flag2\" and \"flag1 flag2\" do work, I wanted to ask if there's a way to have one/no hyphen in front of an argument in the generated Usage text. Also, it makes sense to skip the value (all caps) for named flags in Usage text.\r\n\r\nHere is what we have now:\r\n```\r\nUsage:       util build [FORCE] [NO_RM]\r\n             util build [--force FORCE] [--no-rm NO_RM]\r\n```\r\n\r\nHere is what it could be like:\r\n```\r\nUsage:       util build [FORCE] [NO_RM]\r\n             util build [-force] [-no-rm]\r\n```\r\n\r\nAnother remark: separator is not used in Usage text, it's always hyphen (hard-coded).\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/190", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/190/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/190/events", "html_url": "https://github.com/google/python-fire/issues/190", "id": 483968588, "node_id": "MDU6SXNzdWU0ODM5Njg1ODg=", "number": 190, "title": "Problem showing help when function is decorated", "user": {"login": "bzamecnik", "id": 446124, "node_id": "MDQ6VXNlcjQ0NjEyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/446124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzamecnik", "html_url": "https://github.com/bzamecnik", "followers_url": "https://api.github.com/users/bzamecnik/followers", "following_url": "https://api.github.com/users/bzamecnik/following{/other_user}", "gists_url": "https://api.github.com/users/bzamecnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzamecnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzamecnik/subscriptions", "organizations_url": "https://api.github.com/users/bzamecnik/orgs", "repos_url": "https://api.github.com/users/bzamecnik/repos", "events_url": "https://api.github.com/users/bzamecnik/events{/privacy}", "received_events_url": "https://api.github.com/users/bzamecnik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-22T12:36:55Z", "updated_at": "2020-02-28T22:29:35Z", "closed_at": "2020-02-28T22:29:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport time\r\nimport fire\r\n\r\ndef decorator(f):\r\n    def wrapper(*args, **kwds):\r\n        return f(*args, **kwds)\r\n    return wrapper\r\n\r\n@decorator\r\ndef foo(name='World'):\r\n    \"\"\"\r\n    Greets name.\r\n    \"\"\"\r\n    print('Hello %s' % name)\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(foo)\r\n```\r\n\r\nproduces:\r\n\r\n```\r\n# -h or --help\r\n$ python bar.py -h\r\nTraceback (most recent call last):\r\n  File \"bar.py\", line 17, in <module>\r\n    fire.Fire(foo)\r\n  File \"/Users/bzamecnik/.virtualenvs/rossum3/lib/python3.7/site-packages/fire/core.py\", line 138, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n  File \"/Users/bzamecnik/.virtualenvs/rossum3/lib/python3.7/site-packages/fire/core.py\", line 471, in _Fire\r\n    target=component.__name__)\r\n  File \"/Users/bzamecnik/.virtualenvs/rossum3/lib/python3.7/site-packages/fire/core.py\", line 675, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\n  File \"bar.py\", line 6, in wrapper\r\n    return f(*args, **kwds)\r\nTypeError: foo() got an unexpected keyword argument 'h'\r\n```\r\n\r\nThe same problem when the decorator uses `wraps()`.\r\n\r\n```python\r\nfrom functools import wraps\r\n\r\ndef timing(f):\r\n    @wraps(f)\r\n    def wrapper(*args, **kwds):\r\n        return f(*args, **kwds)\r\n    return wrapper\r\n```\r\n\r\nHowever, `python bar.py -- -h` shows the help but without the arguments:\r\n\r\n```\r\nNAME\r\n    bar.py - Greets name.\r\n\r\nSYNOPSIS\r\n    bar.py <flags> [ARGS]...\r\n\r\nDESCRIPTION\r\n    Greets name.\r\n\r\nPOSITIONAL ARGUMENTS\r\n    ARGS\r\n\r\nFLAGS\r\n    Flags are accepted.\r\n```\r\n\r\nWhen we remove the `@decorator` it works as expected:\r\n\r\n```\r\nNAME\r\n    bar.py - Greets name.\r\n\r\nSYNOPSIS\r\n    bar.py <flags>\r\n\r\nDESCRIPTION\r\n    Greets name.\r\n\r\nFLAGS\r\n    --name=NAME\r\n```\r\n\r\nVersions: `fire=0.2.1, python 3.7.3`\r\n\r\n## Workaround\r\n\r\nA work around can be to move the actual code to a nested function that picks the arguments from the parent function. Then `fire` has not problem finding the arguments.\r\n\r\n```python\r\nfrom functools import wraps\r\nimport time\r\nimport fire\r\n\r\ndef timing(f):\r\n    @wraps(f)\r\n    def wrapper(*args, **kwds):\r\n        return f(*args, **kwds)\r\n    return wrapper\r\n\r\ndef foo(name='World'):\r\n    \"\"\"\r\n    Greets name.\r\n    \"\"\"\r\n    @timing\r\n    def inner():\r\n        print('Hello %s' % name)\r\n\r\n    inner()\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(foo)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/189", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/189/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/189/events", "html_url": "https://github.com/google/python-fire/issues/189", "id": 483838279, "node_id": "MDU6SXNzdWU0ODM4MzgyNzk=", "number": 189, "title": "Docstring param description hidden when it contains a colon", "user": {"login": "bzamecnik", "id": 446124, "node_id": "MDQ6VXNlcjQ0NjEyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/446124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bzamecnik", "html_url": "https://github.com/bzamecnik", "followers_url": "https://api.github.com/users/bzamecnik/followers", "following_url": "https://api.github.com/users/bzamecnik/following{/other_user}", "gists_url": "https://api.github.com/users/bzamecnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/bzamecnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bzamecnik/subscriptions", "organizations_url": "https://api.github.com/users/bzamecnik/orgs", "repos_url": "https://api.github.com/users/bzamecnik/repos", "events_url": "https://api.github.com/users/bzamecnik/events{/privacy}", "received_events_url": "https://api.github.com/users/bzamecnik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-22T08:14:31Z", "updated_at": "2020-02-28T22:52:49Z", "closed_at": "2020-02-28T22:52:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given a simple script:\r\n```\r\nimport fire\r\n\r\ndef foo(name='World'):\r\n    \"\"\"\r\n    Greets name.\r\n\r\n    Arguments\r\n    ---------\r\n    name : str\r\n        name, default: World\r\n    \"\"\"\r\n    print('Hello %s' % name)\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(foo)\r\n```\r\n\r\n```\r\npython foo.py -h\r\n```\r\n\r\nshows the help with the description of `--name` missing:\r\n\r\n```\r\n# ...\r\nFLAGS\r\n    --name=NAME\r\n```\r\n\r\nIf the description does not contain a colon, like `name, default World` it works OK:\r\n\r\n```\r\nFLAGS\r\n    --name=NAME\r\n        name, default World\r\n```\r\n\r\nIt should work even with a colon. I'd guess it's connected with parsing the `param_name : type` section which contains also a colon.\r\n\r\n`fire==0.2.1`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/187", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/187/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/187/events", "html_url": "https://github.com/google/python-fire/issues/187", "id": 482622927, "node_id": "MDU6SXNzdWU0ODI2MjI5Mjc=", "number": 187, "title": "Cannot expose built-in functions from the standard library", "user": {"login": "geoffbacon", "id": 11916848, "node_id": "MDQ6VXNlcjExOTE2ODQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/11916848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffbacon", "html_url": "https://github.com/geoffbacon", "followers_url": "https://api.github.com/users/geoffbacon/followers", "following_url": "https://api.github.com/users/geoffbacon/following{/other_user}", "gists_url": "https://api.github.com/users/geoffbacon/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffbacon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffbacon/subscriptions", "organizations_url": "https://api.github.com/users/geoffbacon/orgs", "repos_url": "https://api.github.com/users/geoffbacon/repos", "events_url": "https://api.github.com/users/geoffbacon/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffbacon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-20T03:19:39Z", "updated_at": "2019-09-08T01:27:43Z", "closed_at": "2019-09-08T01:27:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First of all, thanks for the awesome library! It makes writing CLIs fun...because you don't have to!\r\n\r\nI couldn't find a similar existing issue nor did I come across anything on Google or StackOverflow. I'm trying to expose the functions from the [math module](https://docs.python.org/3/library/math.html) in the standard library, but this error replicates with other standard library modules with built-in functions (like [operator](https://docs.python.org/3/library/operator.html)). I have the following in script.py:\r\n\r\n```python\r\nimport math\r\nimport fire\r\n\r\nif __name__ == \"__main__\":\r\n    fire.Fire(math)\r\n```\r\n\r\nI can access constants in math fine:\r\n```\r\n$ python script.py pi\r\n3.141592653589793\r\n```\r\n\r\nbut not the functions (which happen to be built-in):\r\n```\r\n$ python script.py sin 3\r\nTraceback (most recent call last):\r\n  File \"script.py\", line 6, in <module>\r\n    fire.Fire(math)\r\n  File \"/Users/bacon/miniconda/envs/fire/lib/python3.7/site-packages/fire/core.py\", line 138, in Fire\r\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\r\n  File \"/Users/bacon/miniconda/envs/fire/lib/python3.7/site-packages/fire/core.py\", line 471, in _Fire\r\n    target=component.__name__)\r\n  File \"/Users/bacon/miniconda/envs/fire/lib/python3.7/site-packages/fire/core.py\", line 675, in _CallAndUpdateTrace\r\n    component = fn(*varargs, **kwargs)\r\nTypeError: sin() takes exactly one argument (0 given)\r\n```\r\n\r\nOther standard library modules like calendar and unicodedata work fine too, because their functions aren't built-ins. A work-around is to wrap all the functions that you want in user-defined functions, but that would a lot of boilerplate (and lack of boilerplate is why fire > argparse/anything else).\r\n\r\nI'm on Python 3.7.3 and fire 0.2.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/186", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/186/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/186/events", "html_url": "https://github.com/google/python-fire/issues/186", "id": 481380138, "node_id": "MDU6SXNzdWU0ODEzODAxMzg=", "number": 186, "title": "incorrect control code displayed in Windows console.", "user": {"login": "wenbingl", "id": 10278425, "node_id": "MDQ6VXNlcjEwMjc4NDI1", "avatar_url": "https://avatars2.githubusercontent.com/u/10278425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenbingl", "html_url": "https://github.com/wenbingl", "followers_url": "https://api.github.com/users/wenbingl/followers", "following_url": "https://api.github.com/users/wenbingl/following{/other_user}", "gists_url": "https://api.github.com/users/wenbingl/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenbingl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenbingl/subscriptions", "organizations_url": "https://api.github.com/users/wenbingl/orgs", "repos_url": "https://api.github.com/users/wenbingl/repos", "events_url": "https://api.github.com/users/wenbingl/events{/privacy}", "received_events_url": "https://api.github.com/users/wenbingl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2019-08-15T23:31:27Z", "updated_at": "2020-03-06T21:56:10Z", "closed_at": "2020-03-06T21:56:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I run the basic example code. there are some control code displayed as output text. I guess it probably some color effects? \r\n\r\nHow do I avoid it?\r\n\r\n\u001b[1mFLAGS\u001b[0m\r\n    --minputs=\u001b[4mMINPUTS\u001b[0m\r\n    --moutputs=\u001b[4mMOUTPUTS\u001b[0m\r\n\r\n\u001b[1mNOTES\u001b[0m\r\n    You can also use flags syntax for POSITIONAL ARGUMENTS\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/185", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/185/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/185/events", "html_url": "https://github.com/google/python-fire/issues/185", "id": 480594002, "node_id": "MDU6SXNzdWU0ODA1OTQwMDI=", "number": 185, "title": "conda package  availability", "user": {"login": "kirk86", "id": 2902390, "node_id": "MDQ6VXNlcjI5MDIzOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2902390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirk86", "html_url": "https://github.com/kirk86", "followers_url": "https://api.github.com/users/kirk86/followers", "following_url": "https://api.github.com/users/kirk86/following{/other_user}", "gists_url": "https://api.github.com/users/kirk86/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirk86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirk86/subscriptions", "organizations_url": "https://api.github.com/users/kirk86/orgs", "repos_url": "https://api.github.com/users/kirk86/repos", "events_url": "https://api.github.com/users/kirk86/events{/privacy}", "received_events_url": "https://api.github.com/users/kirk86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-14T10:09:35Z", "updated_at": "2019-08-14T16:41:50Z", "closed_at": "2019-08-14T16:41:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for the great package, I was wondering if you could provide a conda package as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/183", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/183/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/183/events", "html_url": "https://github.com/google/python-fire/issues/183", "id": 473738622, "node_id": "MDU6SXNzdWU0NzM3Mzg2MjI=", "number": 183, "title": "Error after an upgrade to the last version", "user": {"login": "Krazybug", "id": 133845, "node_id": "MDQ6VXNlcjEzMzg0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/133845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Krazybug", "html_url": "https://github.com/Krazybug", "followers_url": "https://api.github.com/users/Krazybug/followers", "following_url": "https://api.github.com/users/Krazybug/following{/other_user}", "gists_url": "https://api.github.com/users/Krazybug/gists{/gist_id}", "starred_url": "https://api.github.com/users/Krazybug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Krazybug/subscriptions", "organizations_url": "https://api.github.com/users/Krazybug/orgs", "repos_url": "https://api.github.com/users/Krazybug/repos", "events_url": "https://api.github.com/users/Krazybug/events{/privacy}", "received_events_url": "https://api.github.com/users/Krazybug/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-28T12:27:45Z", "updated_at": "2019-08-02T10:30:29Z", "closed_at": "2019-07-29T22:33:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nAfter an upgrade to the current version of Fire,  I got the following error on a script i ran without any change.\r\n\r\n```\r\n>python myscript.py --help\r\nINFO: Showing help with the command 'myscript.py -- --help'.\r\n\r\nTraceback (most recent call last):\r\n  File \"myscript.py\", line 733, in <module>\r\n    fire.Fire()\r\n  File \".../lib/python3.7/site-packages/fire/core.py\", line 158, in Fire\r\n    result, trace=component_trace, verbose=component_trace.verbose)\r\n  File \".../lib/python3.7/site-packages/fire/helptext.py\", line 78, in HelpText\r\n    actions_grouped_by_kind)\r\n  File \".../lib/python3.7/site-packages/fire/helptext.py\", line 230, in _UsageDetailsSections\r\n    sections.append(_MakeUsageDetailsSection(commands))\r\n  File \".../lib/python3.7/site-packages/fire/helptext.py\", line 415, in _MakeUsageDetailsSection\r\n    info = inspectutils.Info(member)\r\n  File \".../lib/python3.7/site-packages/fire/inspectutils.py\", line 211, in Info\r\n    info['docstring_info'] = docstrings.parse(info['docstring'])\r\n  File \".../cali2/lib/python3.7/site-packages/fire/docstrings.py\", line 180, in parse\r\n    _consume_line(line_info, state)\r\n  File \".../lib/python3.7/site-packages/fire/docstrings.py\", line 413, in _consume_line\r\n    _update_section_state(line_info, state)\r\n  File \".../python3.7/site-packages/fire/docstrings.py\", line 525, in _update_section_state\r\n    google_section_permitted = _google_section_permitted(line_info, state)\r\n  File \".../lib/python3.7/site-packages/fire/docstrings.py\", line 582, in _google_section_permitted\r\n    or line_info.indentation < state.section.line1_indentation)\r\nTypeError: '<' not supported between instances of 'int' and 'NoneType'\r\n\r\n```\r\nIt Seems that a <None> object is compared in docstring.py\r\n\r\nFYI: I don't have any docstring (\"\"\") in my script and this other snippet diplays correct help message but the error is still displayed after the help message:\r\n```\r\nimport fire\r\n\r\ndef test():\r\n    print(\"OK\")\r\n\r\nif __name__ == \"__main__\":\r\n    fire.Fire()\r\n\r\n```\r\nNote also that when I reinstall fire, this snippet works perfectly (doc is displayed without an error following) as the help of every subcommands of my script.\r\nIt's only when i run python myscript.py --help that it's displayed the first time and after on each script i ran. It's sounds like something persistent changed in my env.\r\n\r\nMy version of python is 3.7.3.\r\nI'm using virtualenv and pip \r\nand here are my dependencies:\r\n\r\n```\r\n>pip freeze\r\nbeautifulsoup4==4.7.1\r\nbs4==0.0.1\r\ncertifi==2019.3.9\r\nchardet==3.0.4\r\nfire==0.2.0\r\ngevent==1.4.0\r\ngreenlet==0.4.15\r\nhumanize==0.5.1\r\nidna==2.8\r\niso639==0.1.4\r\nlangid==1.1.6\r\nlxml==4.3.4\r\nnumpy==1.16.3\r\nrequests==2.22.0\r\nsix==1.12.0\r\nsoupsieve==1.9.1\r\ntermcolor==1.1.0\r\nurllib3==1.25.3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/179", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/179/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/179/events", "html_url": "https://github.com/google/python-fire/issues/179", "id": 454732562, "node_id": "MDU6SXNzdWU0NTQ3MzI1NjI=", "number": 179, "title": "Suppress printing of function return", "user": {"login": "mauriceling", "id": 1976168, "node_id": "MDQ6VXNlcjE5NzYxNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1976168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mauriceling", "html_url": "https://github.com/mauriceling", "followers_url": "https://api.github.com/users/mauriceling/followers", "following_url": "https://api.github.com/users/mauriceling/following{/other_user}", "gists_url": "https://api.github.com/users/mauriceling/gists{/gist_id}", "starred_url": "https://api.github.com/users/mauriceling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mauriceling/subscriptions", "organizations_url": "https://api.github.com/users/mauriceling/orgs", "repos_url": "https://api.github.com/users/mauriceling/repos", "events_url": "https://api.github.com/users/mauriceling/events{/privacy}", "received_events_url": "https://api.github.com/users/mauriceling/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836578, "node_id": "MDU6TGFiZWw1NDQ4MzY1Nzg=", "url": "https://api.github.com/repos/google/python-fire/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-11T14:42:12Z", "updated_at": "2019-07-23T16:58:17Z", "closed_at": "2019-07-23T16:58:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say I have a Fire exposed function\r\n\r\ndef X(paramA):\r\n    return {'paramA': paramA}\r\n\r\nFire will automatically print out the function return to the screen. It is possible to suppress the printing of function return?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/178", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/178/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/178/events", "html_url": "https://github.com/google/python-fire/issues/178", "id": 452338926, "node_id": "MDU6SXNzdWU0NTIzMzg5MjY=", "number": 178, "title": "[Question] How to turn off \"Fire trace\"?", "user": {"login": "ndaidong", "id": 1809619, "node_id": "MDQ6VXNlcjE4MDk2MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1809619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndaidong", "html_url": "https://github.com/ndaidong", "followers_url": "https://api.github.com/users/ndaidong/followers", "following_url": "https://api.github.com/users/ndaidong/following{/other_user}", "gists_url": "https://api.github.com/users/ndaidong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndaidong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndaidong/subscriptions", "organizations_url": "https://api.github.com/users/ndaidong/orgs", "repos_url": "https://api.github.com/users/ndaidong/repos", "events_url": "https://api.github.com/users/ndaidong/events{/privacy}", "received_events_url": "https://api.github.com/users/ndaidong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-05T06:45:37Z", "updated_at": "2019-06-07T22:52:06Z", "closed_at": "2019-06-07T18:11:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "After a correct setting up, if we run a wrong command, Fire prints out the logs:\r\n\r\n```\r\nFire trace:\r\n1. Initial component\r\n2. ('Cannot find target in dict:', 'versions', {'add': <function add at 0x7f1443c699d8>, 'multiply': <function multiply at 0x7f1443c7d6a8>, 'version': <function version at 0x7f14442f79d8>})\r\n\r\nType:        dict\r\nString form: {'add': <function add at 0x7f1443c699d8>, 'multiply': <function multiply at 0x7f1443c7d6a8>, 'version': <function version at 0x7f14442f79d8>}\r\nLength:      3\r\n\r\nUsage:       abc \r\n             abc add\r\n             abc multiply\r\n             abc version\r\n```\r\n\r\nHow can we turn off `Fire trace`, `Type`,  `String form`, and `Length`  sections for production usage? How can we replace them with more meaningful messages?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/177", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/177/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/177/events", "html_url": "https://github.com/google/python-fire/issues/177", "id": 450964131, "node_id": "MDU6SXNzdWU0NTA5NjQxMzE=", "number": 177, "title": "allow --flag to be aliased as -f", "user": {"login": "terrdavis", "id": 16829776, "node_id": "MDQ6VXNlcjE2ODI5Nzc2", "avatar_url": "https://avatars3.githubusercontent.com/u/16829776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrdavis", "html_url": "https://github.com/terrdavis", "followers_url": "https://api.github.com/users/terrdavis/followers", "following_url": "https://api.github.com/users/terrdavis/following{/other_user}", "gists_url": "https://api.github.com/users/terrdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrdavis/subscriptions", "organizations_url": "https://api.github.com/users/terrdavis/orgs", "repos_url": "https://api.github.com/users/terrdavis/repos", "events_url": "https://api.github.com/users/terrdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/terrdavis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-31T20:14:22Z", "updated_at": "2019-06-26T18:14:27Z", "closed_at": "2019-06-26T18:14:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to manually specify single-dash aliases to parameters.\r\n\r\n```python\r\n# app.py\r\nimport fire\r\n@fire.Fire(verbose=\"v\")\r\ndef app(verbose=False):\r\n    # do things\r\n```\r\n`python -m app -v` -> `verbose = True ` \r\n\r\nbonus: `python -m app -vv` -> `verbose = 2`  \r\nequivalent: `python -m app --verbose=2`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/175", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/175/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/175/events", "html_url": "https://github.com/google/python-fire/issues/175", "id": 441504023, "node_id": "MDU6SXNzdWU0NDE1MDQwMjM=", "number": 175, "title": "installing from source code / ModuleNotFoundError: No module named 'fire.console'", "user": {"login": "nanondev", "id": 50381774, "node_id": "MDQ6VXNlcjUwMzgxNzc0", "avatar_url": "https://avatars3.githubusercontent.com/u/50381774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nanondev", "html_url": "https://github.com/nanondev", "followers_url": "https://api.github.com/users/nanondev/followers", "following_url": "https://api.github.com/users/nanondev/following{/other_user}", "gists_url": "https://api.github.com/users/nanondev/gists{/gist_id}", "starred_url": "https://api.github.com/users/nanondev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nanondev/subscriptions", "organizations_url": "https://api.github.com/users/nanondev/orgs", "repos_url": "https://api.github.com/users/nanondev/repos", "events_url": "https://api.github.com/users/nanondev/events{/privacy}", "received_events_url": "https://api.github.com/users/nanondev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-08T00:53:17Z", "updated_at": "2019-05-24T15:45:52Z", "closed_at": "2019-05-24T15:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys, I am checking out fire source code to see if I can contribute anything to it. I tried to install from source code using GIT ,  and installing with setup.py (using python 3.7) and **I got the following error: ModuleNotFoundError: No module named 'fire.console'** , can anyone give me a hand ? thanks.\r\n\r\nC:\\web-mios\\oss\\python-fire\\_tasks\\test>python calculator.py double 10\r\nTraceback (most recent call last):\r\n  File \"calculator.py\", line 1, in <module>\r\n    import fire\r\n  File \"C:\\Users\\aspire\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\fire-0.1.3-py3.7.egg\\fire\\__init__.py\", line 21, in <module>\r\n    from fire.core import Fire\r\n  File \"C:\\Users\\aspire\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\fire-0.1.3-py3.7.egg\\fire\\core.py\", line 73, in <module>\r\n    from fire.console import console_pager\r\nModuleNotFoundError: No module named 'fire.console'\r\n\r\nC:\\web-mios\\oss\\python-fire\\_tasks\\test>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/174", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/174/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/174/events", "html_url": "https://github.com/google/python-fire/issues/174", "id": 441008927, "node_id": "MDU6SXNzdWU0NDEwMDg5Mjc=", "number": 174, "title": "An Odd Use Case: Using Fire from an App's Internal Python", "user": {"login": "ColinConwell", "id": 23064382, "node_id": "MDQ6VXNlcjIzMDY0Mzgy", "avatar_url": "https://avatars2.githubusercontent.com/u/23064382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinConwell", "html_url": "https://github.com/ColinConwell", "followers_url": "https://api.github.com/users/ColinConwell/followers", "following_url": "https://api.github.com/users/ColinConwell/following{/other_user}", "gists_url": "https://api.github.com/users/ColinConwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinConwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinConwell/subscriptions", "organizations_url": "https://api.github.com/users/ColinConwell/orgs", "repos_url": "https://api.github.com/users/ColinConwell/repos", "events_url": "https://api.github.com/users/ColinConwell/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinConwell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-07T03:27:44Z", "updated_at": "2019-05-09T04:52:06Z", "closed_at": "2019-05-09T04:52:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a bit of an odd use case: I'm trying to include fire in a script that will be executed by the internal python of Blender, a 3D animation software.\r\n\r\nTypically, this works by calling the following in a terminal:\r\n\r\n`blender --background 'some-script.py' --python 'name_of_python_script.py' -- <arguments to python script>`\r\n\r\nWhen I attempt to use Fire in this context, it seems to parse the initial commands passed to Blender in addition to the arguments passed after the python tag, giving me the following trace:\r\n\r\n<img width=\"780\" alt=\"Screen Shot 2019-05-06 at 11 26 09 PM\" src=\"https://user-images.githubusercontent.com/23064382/57269680-59f15f80-7056-11e9-816e-cbf16820bae9.png\">\r\n\r\nI reckon it might not actually be possible to troubleshoot this, but I thought I'd throw it out there in case anyone is trying to use Fire in a similar way (or has done so successfully).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/173", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/173/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/173/events", "html_url": "https://github.com/google/python-fire/issues/173", "id": 438501389, "node_id": "MDU6SXNzdWU0Mzg1MDEzODk=", "number": 173, "title": "New release of python fire.", "user": {"login": "pranavgupta1234", "id": 21027310, "node_id": "MDQ6VXNlcjIxMDI3MzEw", "avatar_url": "https://avatars0.githubusercontent.com/u/21027310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pranavgupta1234", "html_url": "https://github.com/pranavgupta1234", "followers_url": "https://api.github.com/users/pranavgupta1234/followers", "following_url": "https://api.github.com/users/pranavgupta1234/following{/other_user}", "gists_url": "https://api.github.com/users/pranavgupta1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/pranavgupta1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pranavgupta1234/subscriptions", "organizations_url": "https://api.github.com/users/pranavgupta1234/orgs", "repos_url": "https://api.github.com/users/pranavgupta1234/repos", "events_url": "https://api.github.com/users/pranavgupta1234/events{/privacy}", "received_events_url": "https://api.github.com/users/pranavgupta1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-29T20:48:33Z", "updated_at": "2019-07-26T17:31:18Z", "closed_at": "2019-07-26T17:31:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/165", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/165/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/165/events", "html_url": "https://github.com/google/python-fire/issues/165", "id": 410317997, "node_id": "MDU6SXNzdWU0MTAzMTc5OTc=", "number": 165, "title": "AttributeError: module 'fire' has no attribute 'Fire'", "user": {"login": "Cstyler", "id": 16050179, "node_id": "MDQ6VXNlcjE2MDUwMTc5", "avatar_url": "https://avatars2.githubusercontent.com/u/16050179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cstyler", "html_url": "https://github.com/Cstyler", "followers_url": "https://api.github.com/users/Cstyler/followers", "following_url": "https://api.github.com/users/Cstyler/following{/other_user}", "gists_url": "https://api.github.com/users/Cstyler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cstyler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cstyler/subscriptions", "organizations_url": "https://api.github.com/users/Cstyler/orgs", "repos_url": "https://api.github.com/users/Cstyler/repos", "events_url": "https://api.github.com/users/Cstyler/events{/privacy}", "received_events_url": "https://api.github.com/users/Cstyler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-14T14:10:54Z", "updated_at": "2020-08-16T16:11:19Z", "closed_at": "2019-02-14T16:46:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I create Fire object inside of python interactive shell after that I get AttributeError\r\n```Python\r\nPython 3.6.7 |Anaconda, Inc.| (default, Oct 23 2018, 19:16:44) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.1.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import fire                                                                                                                                           \r\n\r\nIn [2]: fire.Fire                                                                                                                                             \r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-2-37e0b55d584b> in <module>\r\n----> 1 fire.Fire\r\n\r\nAttributeError: module 'fire' has no attribute 'Fire'\r\n\r\nIn [3]: dir(fire)                                                                                                                                             \r\nOut[3]: \r\n['Calculator',\r\n '__builtins__',\r\n '__cached__',\r\n '__doc__',\r\n '__file__',\r\n '__loader__',\r\n '__name__',\r\n '__package__',\r\n '__spec__',\r\n 'fire']\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/164", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/164/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/164/events", "html_url": "https://github.com/google/python-fire/issues/164", "id": 407871318, "node_id": "MDU6SXNzdWU0MDc4NzEzMTg=", "number": 164, "title": "testFireKeywordArgs, testFireObjectWithDict, testHelpStringBuiltin, and testGetFullArgSpecFromBuiltin fail with Python 3.7", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-07T19:55:29Z", "updated_at": "2019-02-26T17:05:00Z", "closed_at": "2019-02-26T17:05:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n[   23s] =================================== FAILURES ===================================\r\n[   23s] _________________________ FireTest.testFireKeywordArgs _________________________\r\n[   23s] \r\n[   23s] self = <fire.fire_test.FireTest testMethod=testFireKeywordArgs>\r\n[   23s] \r\n[   23s]     def testFireKeywordArgs(self):\r\n[   23s]       self.assertEqual(\r\n[   23s]           fire.Fire(\r\n[   23s]               tc.Kwargs,\r\n[   23s]               command=['props', '--name', 'David', '--age', '24']),\r\n[   23s]           {'name': 'David', 'age': 24})\r\n[   23s]       # Run this test both with a list command and a string command.\r\n[   23s]       self.assertEqual(\r\n[   23s]           fire.Fire(\r\n[   23s]               tc.Kwargs,\r\n[   23s]               command=['props', '--message',\r\n[   23s]                        '\"This is a message it has -- in it\"']),  # Quotes stripped\r\n[   23s]           {'message': 'This is a message it has -- in it'})\r\n[   23s]       self.assertEqual(\r\n[   23s]           fire.Fire(\r\n[   23s]               tc.Kwargs,\r\n[   23s]               command=['props', '--message',\r\n[   23s]                        'This is a message it has -- in it']),\r\n[   23s]           {'message': 'This is a message it has -- in it'})\r\n[   23s]       self.assertEqual(\r\n[   23s]           fire.Fire(\r\n[   23s]               tc.Kwargs,\r\n[   23s]               command='props --message \"This is a message it has -- in it\"'),\r\n[   23s]           {'message': 'This is a message it has -- in it'})\r\n[   23s]       self.assertEqual(\r\n[   23s]           fire.Fire(tc.Kwargs,\r\n[   23s]                     command=['upper', '--alpha', 'A', '--beta', 'B']),\r\n[   23s]           'ALPHA BETA')\r\n[   23s]       self.assertEqual(\r\n[   23s]           fire.Fire(\r\n[   23s]               tc.Kwargs,\r\n[   23s] >             command=['upper', '--alpha', 'A', '--beta', 'B', '-', 'lower']),\r\n[   23s]           'alpha beta')\r\n[   23s] \r\n[   23s] fire/fire_test.py:240: \r\n[   23s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   23s] \r\n[   23s] component = <class 'fire.test_components.Kwargs'>\r\n[   23s] command = ['upper', '--alpha', 'A', '--beta', 'B', '-', ...]\r\n[   23s] name = 'pytest-3.7'\r\n[   23s] \r\n[   23s]     def Fire(component=None, command=None, name=None):\r\n[   23s]       \"\"\"This function, Fire, is the main entrypoint for Python Fire.\r\n[   23s]     \r\n[   23s]       Executes a command either from the `command` argument or from sys.argv by\r\n[   23s]       recursively traversing the target object `component`'s members consuming\r\n[   23s]       arguments, evaluating functions, and instantiating classes as it goes.\r\n[   23s]     \r\n[   23s]       When building a CLI with Fire, your main method should call this function.\r\n[   23s]     \r\n[   23s]       Args:\r\n[   23s]         component: The initial target component.\r\n[   23s]         command: Optional. If supplied, this is the command executed. If not\r\n[   23s]             supplied, then the command is taken from sys.argv instead. This can be\r\n[   23s]             a string or a list of strings; a list of strings is preferred.\r\n[   23s]         name: Optional. The name of the command as entered at the command line.\r\n[   23s]             Used in interactive mode and for generating the completion script.\r\n[   23s]       Returns:\r\n[   23s]         The result of executing the Fire command. Execution begins with the initial\r\n[   23s]         target component. The component is updated by using the command arguments\r\n[   23s]         to either access a member of the current component, call the current\r\n[   23s]         component (if it's a function), or instantiate the current component (if\r\n[   23s]         it's a class). When all arguments are consumed and there's no function left\r\n[   23s]         to call or class left to instantiate, the resulting current component is\r\n[   23s]         the final result.\r\n[   23s]       Raises:\r\n[   23s]         ValueError: If the command argument is supplied, but not a string or a\r\n[   23s]             sequence of arguments.\r\n[   23s]         FireExit: When Fire encounters a FireError, Fire will raise a FireExit with\r\n[   23s]             code 2. When used with the help or trace flags, Fire will raise a\r\n[   23s]             FireExit with code 0 if successful.\r\n[   23s]       \"\"\"\r\n[   23s]       name = name or os.path.basename(sys.argv[0])\r\n[   23s]     \r\n[   23s]       # Get args as a list.\r\n[   23s]       if isinstance(command, six.string_types):\r\n[   23s]         args = shlex.split(command)\r\n[   23s]       elif isinstance(command, (list, tuple)):\r\n[   23s]         args = command\r\n[   23s]       elif command is None:\r\n[   23s]         # Use the command line args by default if no command is specified.\r\n[   23s]         args = sys.argv[1:]\r\n[   23s]       else:\r\n[   23s]         raise ValueError('The command argument must be a string or a sequence of '\r\n[   23s]                          'arguments.')\r\n[   23s]     \r\n[   23s]       # Determine the calling context.\r\n[   23s]       caller = inspect.stack()[1]\r\n[   23s]       caller_frame = caller[0]\r\n[   23s]       caller_globals = caller_frame.f_globals\r\n[   23s]       caller_locals = caller_frame.f_locals\r\n[   23s]       context = {}\r\n[   23s]       context.update(caller_globals)\r\n[   23s]       context.update(caller_locals)\r\n[   23s]     \r\n[   23s]       component_trace = _Fire(component, args, context, name)\r\n[   23s]     \r\n[   23s]       if component_trace.HasError():\r\n[   23s]         for help_flag in ['-h', '--help']:\r\n[   23s]           if help_flag in component_trace.elements[-1].args:\r\n[   23s]             command = '{cmd} -- --help'.format(cmd=component_trace.GetCommand())\r\n[   23s]             print(('WARNING: The proper way to show help is {cmd}.\\n'\r\n[   23s]                    'Showing help anyway.\\n').format(cmd=pipes.quote(command)),\r\n[   23s]                   file=sys.stderr)\r\n[   23s]     \r\n[   23s]         print('Fire trace:\\n{trace}\\n'.format(trace=component_trace),\r\n[   23s]               file=sys.stderr)\r\n[   23s]         result = component_trace.GetResult()\r\n[   23s]         print(\r\n[   23s]             helputils.HelpString(result, component_trace, component_trace.verbose),\r\n[   23s]             file=sys.stderr)\r\n[   23s] >       raise FireExit(2, component_trace)\r\n[   23s] E       fire.core.FireExit: 2\r\n[   23s] \r\n[   23s] fire/core.py:143: FireExit\r\n[   23s] ----------------------------- Captured stdout call -----------------------------\r\n[   23s] name: David\r\n[   23s] age:  24\r\n[   23s] message: This is a message it has -- in it\r\n[   23s] message: This is a message it has -- in it\r\n[   23s] message: This is a message it has -- in it\r\n[   23s] ALPHA BETA\r\n[   23s] ----------------------------- Captured stderr call -----------------------------\r\n[   23s] Fire trace:\r\n[   23s] 1. Initial component\r\n[   23s] 2. Instantiated class \"Kwargs\" (/home/abuild/rpmbuild/BUILD/fire-0.1.3/fire/test_components.py:176)\r\n[   23s] 3. Accessed property \"upper\" (/home/abuild/rpmbuild/BUILD/fire-0.1.3/fire/test_components.py:181)\r\n[   23s] 4. Called routine \"upper\" (/home/abuild/rpmbuild/BUILD/fire-0.1.3/fire/test_components.py:181)\r\n[   23s] 5. Accessed property \"lower\"\r\n[   23s] 6. ('The function received no value for the required argument:', 'self')\r\n[   23s] \r\n[   23s] Type:        builtin_function_or_method\r\n[   23s] String form: <built-in method lower of str object at 0xb6809688>\r\n[   23s] Docstring:   Return a copy of the string converted to lowercase.\r\n[   23s] \r\n[   23s] Usage:       pytest-3.7 upper --alpha A --beta B - lower SELF\r\n[   23s]              pytest-3.7 upper --alpha A --beta B - lower --self SELF\r\n[   23s] _______________________ FireTest.testFireObjectWithDict ________________________\r\n[   23s] \r\n[   23s] self = <fire.fire_test.FireTest testMethod=testFireObjectWithDict>\r\n[   23s] \r\n[   23s]     def testFireObjectWithDict(self):\r\n[   23s]       self.assertEqual(\r\n[   23s]           fire.Fire(tc.TypedProperties, command=['delta', 'echo']), 'E')\r\n[   23s]       self.assertEqual(\r\n[   23s] >         fire.Fire(tc.TypedProperties, command=['delta', 'echo', 'lower']), 'e')\r\n[   23s] \r\n[   23s] fire/fire_test.py:269: \r\n[   23s] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[   23s] \r\n[   23s] component = <class 'fire.test_components.TypedProperties'>\r\n[   23s] command = ['delta', 'echo', 'lower'], name = 'pytest-3.7'\r\n[   23s] \r\n[   23s]     def Fire(component=None, command=None, name=None):\r\n[   23s]       \"\"\"This function, Fire, is the main entrypoint for Python Fire.\r\n[   23s]     \r\n[   23s]       Executes a command either from the `command` argument or from sys.argv by\r\n[   23s]       recursively traversing the target object `component`'s members consuming\r\n[   23s]       arguments, evaluating functions, and instantiating classes as it goes.\r\n[   23s]     \r\n[   23s]       When building a CLI with Fire, your main method should call this function.\r\n[   23s]     \r\n[   23s]       Args:\r\n[   23s]         component: The initial target component.\r\n[   23s]         command: Optional. If supplied, this is the command executed. If not\r\n[   23s]             supplied, then the command is taken from sys.argv instead. This can be\r\n[   23s]             a string or a list of strings; a list of strings is preferred.\r\n[   23s]         name: Optional. The name of the command as entered at the command line.\r\n[   23s]             Used in interactive mode and for generating the completion script.\r\n[   23s]       Returns:\r\n[   23s]         The result of executing the Fire command. Execution begins with the initial\r\n[   23s]         target component. The component is updated by using the command arguments\r\n[   23s]         to either access a member of the current component, call the current\r\n[   23s]         component (if it's a function), or instantiate the current component (if\r\n[   23s]         it's a class). When all arguments are consumed and there's no function left\r\n[   23s]         to call or class left to instantiate, the resulting current component is\r\n[   23s]         the final result.\r\n[   23s]       Raises:\r\n[   23s]         ValueError: If the command argument is supplied, but not a string or a\r\n[   23s]             sequence of arguments.\r\n[   23s]         FireExit: When Fire encounters a FireError, Fire will raise a FireExit with\r\n[   23s]             code 2. When used with the help or trace flags, Fire will raise a\r\n[   23s]             FireExit with code 0 if successful.\r\n[   23s]       \"\"\"\r\n[   23s]       name = name or os.path.basename(sys.argv[0])\r\n[   23s]     \r\n[   23s]       # Get args as a list.\r\n[   23s]       if isinstance(command, six.string_types):\r\n[   23s]         args = shlex.split(command)\r\n[   23s]       elif isinstance(command, (list, tuple)):\r\n[   23s]         args = command\r\n[   23s]       elif command is None:\r\n[   23s]         # Use the command line args by default if no command is specified.\r\n[   23s]         args = sys.argv[1:]\r\n[   23s]       else:\r\n[   23s]         raise ValueError('The command argument must be a string or a sequence of '\r\n[   23s]                          'arguments.')\r\n[   23s]     \r\n[   23s]       # Determine the calling context.\r\n[   23s]       caller = inspect.stack()[1]\r\n[   23s]       caller_frame = caller[0]\r\n[   23s]       caller_globals = caller_frame.f_globals\r\n[   23s]       caller_locals = caller_frame.f_locals\r\n[   23s]       context = {}\r\n[   23s]       context.update(caller_globals)\r\n[   23s]       context.update(caller_locals)\r\n[   23s]     \r\n[   23s]       component_trace = _Fire(component, args, context, name)\r\n[   23s]     \r\n[   23s]       if component_trace.HasError():\r\n[   23s]         for help_flag in ['-h', '--help']:\r\n[   23s]           if help_flag in component_trace.elements[-1].args:\r\n[   23s]             command = '{cmd} -- --help'.format(cmd=component_trace.GetCommand())\r\n[   23s]             print(('WARNING: The proper way to show help is {cmd}.\\n'\r\n[   23s]                    'Showing help anyway.\\n').format(cmd=pipes.quote(command)),\r\n[   23s]                   file=sys.stderr)\r\n[   23s]     \r\n[   23s]         print('Fire trace:\\n{trace}\\n'.format(trace=component_trace),\r\n[   23s]               file=sys.stderr)\r\n[   23s]         result = component_trace.GetResult()\r\n[   23s]         print(\r\n[   23s]             helputils.HelpString(result, component_trace, component_trace.verbose),\r\n[   23s]             file=sys.stderr)\r\n[   23s] >       raise FireExit(2, component_trace)\r\n[   23s] E       fire.core.FireExit: 2\r\n[   23s] \r\n[   23s] fire/core.py:143: FireExit\r\n[   23s] ----------------------------- Captured stdout call -----------------------------\r\n[   23s] E\r\n[   23s] ----------------------------- Captured stderr call -----------------------------\r\n[   23s] Fire trace:\r\n[   23s] 1. Initial component\r\n[   23s] 2. Instantiated class \"TypedProperties\" (/home/abuild/rpmbuild/BUILD/fire-0.1.3/fire/test_components.py:98)\r\n[   23s] 3. Accessed property \"delta\"\r\n[   23s] 4. Accessed property \"echo\"\r\n[   23s] 5. Accessed property \"lower\"\r\n[   23s] 6. ('The function received no value for the required argument:', 'self')\r\n[   23s] \r\n[   23s] Type:        builtin_function_or_method\r\n[   23s] String form: <built-in method lower of str object at 0xb781e6c0>\r\n[   23s] Docstring:   Return a copy of the string converted to lowercase.\r\n[   23s] \r\n[   23s] Usage:       pytest-3.7 delta echo lower SELF\r\n[   23s]              pytest-3.7 delta echo lower --self SELF\r\n[   23s] _____________________ HelpUtilsTest.testHelpStringBuiltin ______________________\r\n[   23s] \r\n[   23s] self = <fire.helputils_test.HelpUtilsTest testMethod=testHelpStringBuiltin>\r\n[   23s] \r\n[   23s]     def testHelpStringBuiltin(self):\r\n[   23s]       helpstring = helputils.HelpString('test'.upper)\r\n[   23s]       self.assertIn('Type:        builtin_function_or_method', helpstring)\r\n[   23s]       self.assertIn('String form: <built-in method upper of', helpstring)\r\n[   23s] >     self.assertIn('Usage:       [VARS ...] [--KWARGS ...]', helpstring)\r\n[   23s] E     AssertionError: 'Usage:       [VARS ...] [--KWARGS ...]' not found in 'Type:        builtin_function_or_method\\nString form: <built-in method upper of str object at 0xb77678e0>\\nDocstring:   Return a copy of the string converted to uppercase.\\n\\nUsage:       SELF\\n             --self SELF'\r\n[   23s] \r\n[   23s] fire/helputils_test.py:87: AssertionError\r\n[   23s] ________________ InspectUtilsTest.testGetFullArgSpecFromBuiltin ________________\r\n[   23s] \r\n[   23s] self = <fire.inspectutils_test.InspectUtilsTest testMethod=testGetFullArgSpecFromBuiltin>\r\n[   23s] \r\n[   23s]     def testGetFullArgSpecFromBuiltin(self):\r\n[   23s]       spec = inspectutils.GetFullArgSpec('test'.upper)\r\n[   23s] >     self.assertEqual(spec.args, [])\r\n[   23s] E     AssertionError: Lists differ: ['self'] != []\r\n[   23s] E     \r\n[   23s] E     First list contains 1 additional elements.\r\n[   23s] E     First extra element 0:\r\n[   23s] E     'self'\r\n[   23s] E     \r\n[   23s] E     - ['self']\r\n[   23s] E     + []\r\n[   23s] \r\n[   23s] fire/inspectutils_test.py:57: AssertionError\r\n[   23s] ===================== 4 failed, 144 passed in 1.07 seconds =====================\r\n[   23s] error: Bad exit status from /var/tmp/rpm-tmp.sPTHS6 (%check)\r\n```\r\nFour tests fail on me when running test suite while building openSUSE packages. \r\n[Full build log](https://github.com/google/python-fire/files/2842463/_log.txt).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/163", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/163/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/163/events", "html_url": "https://github.com/google/python-fire/issues/163", "id": 407747841, "node_id": "MDU6SXNzdWU0MDc3NDc4NDE=", "number": 163, "title": "Erroneous printing of OrderedDicts in Python 3.5", "user": {"login": "michaelbilow", "id": 1712022, "node_id": "MDQ6VXNlcjE3MTIwMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1712022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbilow", "html_url": "https://github.com/michaelbilow", "followers_url": "https://api.github.com/users/michaelbilow/followers", "following_url": "https://api.github.com/users/michaelbilow/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbilow/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbilow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbilow/subscriptions", "organizations_url": "https://api.github.com/users/michaelbilow/orgs", "repos_url": "https://api.github.com/users/michaelbilow/repos", "events_url": "https://api.github.com/users/michaelbilow/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbilow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-07T15:12:55Z", "updated_at": "2020-03-06T22:18:42Z", "closed_at": "2020-03-06T22:18:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Discovered this strange bug yesterday, where `OrderedDict` prints out of order on Python 3.5 (but not 3.6).\r\n\r\n```bash\r\n$ cat <<'EOF' > test_fire.py\r\nimport fire\r\nfrom collections import OrderedDict\r\n\r\ndef test():\r\n    data = [('a', 1), ('b', 2), ('c', 3)]\r\n    return OrderedDict(data)\r\n\r\nif __name__ == \"__main__\":\r\n    fire.Fire(test)\r\n\r\nEOF\r\n$ conda create -n test35 python=3.5\r\n$ source activate test35\r\n(test35) $ pip install fire\r\n(test35) $ conda list | grep fire\r\nfire                      0.1.3                    pypi_0    pypi\r\n(test35) $ python test_fire.py\r\na: 1\r\nb: 2\r\nc: 3\r\n(test35) $ python test_fire.py\r\na: 1\r\nc: 3\r\nb: 2\r\n(test35) $ python test_fire.py\r\nc: 3\r\na: 1\r\nb: 2\r\n(test35) $ conda deactivate\r\n$ conda create -n test36 python=3.6\r\n$ source activate \r\n(test36) $ pip install fire\r\n(test36) $ conda list | grep fire\r\nfire                      0.1.3                    pypi_0    pypi\r\n(test36) $ python test_fire.py\r\na: 1\r\nb: 2\r\nc: 3\r\n(test36) $ python test_fire.py\r\na: 1\r\nb: 2\r\nc: 3\r\n(test36) $ python test_fire.py\r\na: 1\r\nb: 2\r\nc: 3\r\n(test36) $ python test_fire.py\r\na: 1\r\nb: 2\r\nc: 3\r\n(test36) $ python test_fire.py\r\na: 1\r\nb: 2\r\nc: 3\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/162", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/162/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/162/events", "html_url": "https://github.com/google/python-fire/issues/162", "id": 407642491, "node_id": "MDU6SXNzdWU0MDc2NDI0OTE=", "number": 162, "title": "How strings are processed in fire.", "user": {"login": "Scsourav18", "id": 17047866, "node_id": "MDQ6VXNlcjE3MDQ3ODY2", "avatar_url": "https://avatars3.githubusercontent.com/u/17047866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Scsourav18", "html_url": "https://github.com/Scsourav18", "followers_url": "https://api.github.com/users/Scsourav18/followers", "following_url": "https://api.github.com/users/Scsourav18/following{/other_user}", "gists_url": "https://api.github.com/users/Scsourav18/gists{/gist_id}", "starred_url": "https://api.github.com/users/Scsourav18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Scsourav18/subscriptions", "organizations_url": "https://api.github.com/users/Scsourav18/orgs", "repos_url": "https://api.github.com/users/Scsourav18/repos", "events_url": "https://api.github.com/users/Scsourav18/events{/privacy}", "received_events_url": "https://api.github.com/users/Scsourav18/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-07T10:57:06Z", "updated_at": "2019-02-11T14:02:47Z", "closed_at": "2019-02-08T15:48:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I exposed a method(which takes a string as input parameter) to command line and called the method by passing \"D:\\test\" as parameter value and below is the function body.\r\n```\r\npath=str(path).strip()\r\npath=os.path.normpath(path)\r\nprint(path)\r\nprint(os.path.isdir(path))\r\n```\r\nHere the output is \r\n```\r\nD:\\test\r\ntrue\r\n```\r\nif i hardcode parameter value in the method as:\r\n```\r\npath=\"D:\\test\"\r\npath=str(path).strip()\r\npath=os.path.normpath(path)\r\nprint(path)\r\nprint(os.path.isdir(path))\r\n```\r\nthe output is \r\n```\r\nD:       est\r\nFalse\r\n```\r\nHere the \"\\t\" is treated as special character.\r\n\r\nCan someone please guide on this\r\nThankyou.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/159", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/159/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/159/events", "html_url": "https://github.com/google/python-fire/issues/159", "id": 394727816, "node_id": "MDU6SXNzdWUzOTQ3Mjc4MTY=", "number": 159, "title": "Use inspect.signature()", "user": {"login": "robertvazan", "id": 3514517, "node_id": "MDQ6VXNlcjM1MTQ1MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3514517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertvazan", "html_url": "https://github.com/robertvazan", "followers_url": "https://api.github.com/users/robertvazan/followers", "following_url": "https://api.github.com/users/robertvazan/following{/other_user}", "gists_url": "https://api.github.com/users/robertvazan/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertvazan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertvazan/subscriptions", "organizations_url": "https://api.github.com/users/robertvazan/orgs", "repos_url": "https://api.github.com/users/robertvazan/repos", "events_url": "https://api.github.com/users/robertvazan/events{/privacy}", "received_events_url": "https://api.github.com/users/robertvazan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836575, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzU=", "url": "https://api.github.com/repos/google/python-fire/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-28T22:03:55Z", "updated_at": "2020-02-28T23:22:44Z", "closed_at": "2020-02-28T23:22:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use [inspect.signature()](https://docs.python.org/3.5/library/inspect.html#inspect.signature) if available, because `inspect.getfullargspec()` ignores annotations added by [functools.update_wrapper](https://docs.python.org/3/library/functools.html#functools.update_wrapper) to wrapper functions. Consequently any wrapper applied to functions in the module kills `--help` output and hurts interpretation of function arguments by making all parameters positional.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/158", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/158/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/158/events", "html_url": "https://github.com/google/python-fire/issues/158", "id": 394705818, "node_id": "MDU6SXNzdWUzOTQ3MDU4MTg=", "number": 158, "title": "Convert output to status code", "user": {"login": "robertvazan", "id": 3514517, "node_id": "MDQ6VXNlcjM1MTQ1MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3514517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertvazan", "html_url": "https://github.com/robertvazan", "followers_url": "https://api.github.com/users/robertvazan/followers", "following_url": "https://api.github.com/users/robertvazan/following{/other_user}", "gists_url": "https://api.github.com/users/robertvazan/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertvazan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertvazan/subscriptions", "organizations_url": "https://api.github.com/users/robertvazan/orgs", "repos_url": "https://api.github.com/users/robertvazan/repos", "events_url": "https://api.github.com/users/robertvazan/events{/privacy}", "received_events_url": "https://api.github.com/users/robertvazan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-28T19:40:04Z", "updated_at": "2019-07-26T21:34:02Z", "closed_at": "2019-07-26T04:23:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Fire script can be used in a shell script condition by comparing its output to `True`. It would be better to allow direct use by returning an exit code. Fire could convert every boolean output to status code by default. Or there could be an extra `--status` parameter that will test whether the output is true according to Python rules and set exit code appropriately. That would be more general, because it would allow for testing whether lists, for example, are non-empty.\r\n\r\nOutput could be suppressed in this case or there could be a separate `--quiet` option that silences all output.\r\n\r\nBoth of these options can be implemented by the application, but it would be nice to have them in fire since they can be applied to just about every command.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/157", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/157/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/157/events", "html_url": "https://github.com/google/python-fire/issues/157", "id": 394406648, "node_id": "MDU6SXNzdWUzOTQ0MDY2NDg=", "number": 157, "title": "Accessing namedtuple by field name", "user": {"login": "robertvazan", "id": 3514517, "node_id": "MDQ6VXNlcjM1MTQ1MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3514517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertvazan", "html_url": "https://github.com/robertvazan", "followers_url": "https://api.github.com/users/robertvazan/followers", "following_url": "https://api.github.com/users/robertvazan/following{/other_user}", "gists_url": "https://api.github.com/users/robertvazan/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertvazan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertvazan/subscriptions", "organizations_url": "https://api.github.com/users/robertvazan/orgs", "repos_url": "https://api.github.com/users/robertvazan/repos", "events_url": "https://api.github.com/users/robertvazan/events{/privacy}", "received_events_url": "https://api.github.com/users/robertvazan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836575, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzU=", "url": "https://api.github.com/repos/google/python-fire/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-27T14:21:39Z", "updated_at": "2019-01-03T19:23:43Z", "closed_at": "2019-01-03T19:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a command returns `namedtuple`, Python Fire renders it as a `tuple` or a `list` and allows indexing into it by offset. It would be better to present `namedtuple` as if it is a `dict` or an object and allow access to its members via field names.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/153", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/153/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/153/events", "html_url": "https://github.com/google/python-fire/issues/153", "id": 389748148, "node_id": "MDU6SXNzdWUzODk3NDgxNDg=", "number": 153, "title": "Usage string not looking at class arguments that have defaults", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-11T12:47:04Z", "updated_at": "2018-12-14T22:32:53Z", "closed_at": "2018-12-14T22:32:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Test file:\r\n```py\r\n# test.py\r\nimport fire\r\n\r\n\r\nclass Command:\r\n    def __init__(self, class_arg=None):\r\n        self.__arg = class_arg or ''\r\n\r\n    def foo(self, foo_arg):\r\n        pass\r\n\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(Command,name='command')\r\n```\r\nExpected behaviour:\r\n```sh\r\npython test.py -- --help\r\nType:        method\r\nString form: <bound method Command.foo of <__main__.Command object at 0x10aa59a58>>\r\nFile:        test.py\r\nLine:        8\r\n\r\nUsage:   test.py foo FOO_ARG [--CLASS_ARG CLASS_ARG]\r\n                  test.py foo --foo-arg FOO_ARG  [--CLASS_ARG CLASS_ARG]\r\n```\r\nActual behaviour\r\n```sh\r\npython test.py -- --help\r\nType:        method\r\nString form: <bound method Command.foo of <__main__.Command object at 0x10aa59a58>>\r\nFile:        test.py\r\nLine:        8\r\n\r\nUsage:  test.py foo FOO_ARG\r\n          test.py foo --foo-arg FOO_ARG\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/151", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/151/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/151/events", "html_url": "https://github.com/google/python-fire/issues/151", "id": 389246107, "node_id": "MDU6SXNzdWUzODkyNDYxMDc=", "number": 151, "title": "Error when trying to set a property", "user": {"login": "thosou", "id": 44241053, "node_id": "MDQ6VXNlcjQ0MjQxMDUz", "avatar_url": "https://avatars1.githubusercontent.com/u/44241053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thosou", "html_url": "https://github.com/thosou", "followers_url": "https://api.github.com/users/thosou/followers", "following_url": "https://api.github.com/users/thosou/following{/other_user}", "gists_url": "https://api.github.com/users/thosou/gists{/gist_id}", "starred_url": "https://api.github.com/users/thosou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thosou/subscriptions", "organizations_url": "https://api.github.com/users/thosou/orgs", "repos_url": "https://api.github.com/users/thosou/repos", "events_url": "https://api.github.com/users/thosou/events{/privacy}", "received_events_url": "https://api.github.com/users/thosou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-10T10:55:48Z", "updated_at": "2018-12-10T18:47:47Z", "closed_at": "2018-12-10T18:47:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am facing an error when I try to set a property. Here is a example:\r\n\r\n```\r\nimport fire\r\n\r\nclass MyClass:\r\n\r\n    def __init__(self):\r\n        self._hidden_variable = 0\r\n\r\n    @property\r\n    def value(self):\r\n        print('reading value ...')\r\n        return self._hidden_variable\r\n\r\n    @value.setter\r\n    def value(self, val):\r\n        print('setting value to {}'.format(val))\r\n        self._hidden_variable = val\r\n\r\nif __name__ == '__main__':\r\n    my_obj = MyClass()\r\n    fire.Fire(my_obj)\r\n```\r\n\r\nWhen I try to get the value, everything is fine\r\n```\r\n$ python example.py value\r\nreading value ...\r\n0\r\n```\r\n\r\nBut I cannot set the value\r\n```\r\n$ python example.py value=1\r\nreading value ...\r\nFire trace:\r\n1. Initial component\r\n2. ('Could not consume arg:', 'value=1')\r\n\r\nreading value ...\r\nType:        MyClass\r\nString form: <__main__.MyClass object at 0x7f72ea4e63c8>\r\n\r\nUsage:       example.py \r\n             example.py value\r\n\r\n```\r\nAm I doing it the wrong way or is it not doable?\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/150", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/150/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/150/events", "html_url": "https://github.com/google/python-fire/issues/150", "id": 376265863, "node_id": "MDU6SXNzdWUzNzYyNjU4NjM=", "number": 150, "title": "Bug: Chaining Function Calls broken?", "user": {"login": "borislopezaraoz", "id": 2962801, "node_id": "MDQ6VXNlcjI5NjI4MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2962801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borislopezaraoz", "html_url": "https://github.com/borislopezaraoz", "followers_url": "https://api.github.com/users/borislopezaraoz/followers", "following_url": "https://api.github.com/users/borislopezaraoz/following{/other_user}", "gists_url": "https://api.github.com/users/borislopezaraoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/borislopezaraoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borislopezaraoz/subscriptions", "organizations_url": "https://api.github.com/users/borislopezaraoz/orgs", "repos_url": "https://api.github.com/users/borislopezaraoz/repos", "events_url": "https://api.github.com/users/borislopezaraoz/events{/privacy}", "received_events_url": "https://api.github.com/users/borislopezaraoz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-01T06:07:14Z", "updated_at": "2019-02-26T18:52:11Z", "closed_at": "2019-02-26T18:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code from docs (simplified):\r\n\r\n```\r\nimport fire\r\n\r\nclass Airport(object):\r\n    def __init__(self, code):\r\n        self.code = code\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(Airport)\r\n\r\n```\r\n\r\nProduces this error when trying to chain upper function (command also from docs):\r\n\r\n```\r\npython example.py --code=ALB code upper\r\nFire trace:\r\n1. Initial component\r\n2. Instantiated class \"Airport\" (example.py:3)\r\n3. Accessed property \"code\"\r\n4. Accessed property \"upper\"\r\n5. ('The function received no value for the required argument:', 'self')\r\n\r\nType:        builtin_function_or_method\r\nString form: <built-in method upper of str object at 0x1063f2a40>\r\nDocstring:   Return a copy of the string converted to uppercase.\r\n\r\nUsage:       example.py --code=ALB code upper SELF\r\n             example.py --code=ALB code upper --self SELF\r\n```\r\n\r\nfire==0.1.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/149", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/149/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/149/events", "html_url": "https://github.com/google/python-fire/issues/149", "id": 375028999, "node_id": "MDU6SXNzdWUzNzUwMjg5OTk=", "number": 149, "title": "Using __getattr__ breaks python-fire", "user": {"login": "borislopezaraoz", "id": 2962801, "node_id": "MDQ6VXNlcjI5NjI4MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2962801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borislopezaraoz", "html_url": "https://github.com/borislopezaraoz", "followers_url": "https://api.github.com/users/borislopezaraoz/followers", "following_url": "https://api.github.com/users/borislopezaraoz/following{/other_user}", "gists_url": "https://api.github.com/users/borislopezaraoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/borislopezaraoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borislopezaraoz/subscriptions", "organizations_url": "https://api.github.com/users/borislopezaraoz/orgs", "repos_url": "https://api.github.com/users/borislopezaraoz/repos", "events_url": "https://api.github.com/users/borislopezaraoz/events{/privacy}", "received_events_url": "https://api.github.com/users/borislopezaraoz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-10-29T13:58:52Z", "updated_at": "2020-02-21T18:56:35Z", "closed_at": "2020-02-21T18:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This (admittedly hacky) metaprogramming way of implementing missing methods on the fly breaks python-fire.\r\n\r\nRef: https://stackoverflow.com/a/6955825/1096370\r\n\r\n\r\n    import fire\r\n\r\n    class Calculator(object):\r\n        \"\"\"A simple calculator class.\"\"\"\r\n\r\n        def double(self, number):\r\n            return 2 * number\r\n\r\n        def __getattr__(self, name):\r\n            def _missing(*args, **kwargs):\r\n                print(\"A missing method was called.\")\r\n                print(\"The object was %r, the method was %r. \" % (self, name))\r\n                print(\"It was called with %r and %r as arguments\" % (args, kwargs))\r\n            return _missing\r\n\r\n    if __name__ == '__main__':\r\n        fire.Fire(Calculator)\r\n\r\n\r\nThis \"ghost methods\" works normally when called from other python module.\r\nWhen trying to call it with fire I get this:\r\n\r\n\r\n    python -m calculator double 10\r\n\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n        \"__main__\", mod_spec)\r\n      File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/runpy.py\", line 85, in _run_code\r\n        exec(code, run_globals)\r\n      File \"/users/dev/project/calculator.py\", line 19, in <module>\r\n        fire.Fire(Calculator)\r\n      File \"/users/dev/project/venv/lib/python3.7/site-packages/fire/core.py\", line 127, in Fire\r\n        component_trace = _Fire(component, args, context, name)\r\n      File \"/users/dev/project/venv/lib/python3.7/site-packages/fire/core.py\", line 437, in _Fire\r\n        component, remaining_args)\r\n      File \"/users/dev/project/venv/lib/python3.7/site-packages/fire/core.py\", line 513, in _GetMember\r\n        members = dict(inspect.getmembers(component))\r\n      File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/inspect.py\", line 330, in getmembers\r\n        for base in object.__bases__:\r\n    TypeError: 'function' object is not iterable\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/146", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/146/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/146/events", "html_url": "https://github.com/google/python-fire/issues/146", "id": 374598988, "node_id": "MDU6SXNzdWUzNzQ1OTg5ODg=", "number": 146, "title": "What is the practical use of the python-fire\uff1f", "user": {"login": "wjizhong", "id": 19563754, "node_id": "MDQ6VXNlcjE5NTYzNzU0", "avatar_url": "https://avatars2.githubusercontent.com/u/19563754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wjizhong", "html_url": "https://github.com/wjizhong", "followers_url": "https://api.github.com/users/wjizhong/followers", "following_url": "https://api.github.com/users/wjizhong/following{/other_user}", "gists_url": "https://api.github.com/users/wjizhong/gists{/gist_id}", "starred_url": "https://api.github.com/users/wjizhong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wjizhong/subscriptions", "organizations_url": "https://api.github.com/users/wjizhong/orgs", "repos_url": "https://api.github.com/users/wjizhong/repos", "events_url": "https://api.github.com/users/wjizhong/events{/privacy}", "received_events_url": "https://api.github.com/users/wjizhong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-27T02:55:53Z", "updated_at": "2018-10-29T16:17:06Z", "closed_at": "2018-10-29T16:17:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/145", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/145/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/145/events", "html_url": "https://github.com/google/python-fire/issues/145", "id": 374576876, "node_id": "MDU6SXNzdWUzNzQ1NzY4NzY=", "number": 145, "title": "annotation @functools.lru_cache() on functions with parameters breaks python-fire", "user": {"login": "borislopezaraoz", "id": 2962801, "node_id": "MDQ6VXNlcjI5NjI4MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2962801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borislopezaraoz", "html_url": "https://github.com/borislopezaraoz", "followers_url": "https://api.github.com/users/borislopezaraoz/followers", "following_url": "https://api.github.com/users/borislopezaraoz/following{/other_user}", "gists_url": "https://api.github.com/users/borislopezaraoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/borislopezaraoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borislopezaraoz/subscriptions", "organizations_url": "https://api.github.com/users/borislopezaraoz/orgs", "repos_url": "https://api.github.com/users/borislopezaraoz/repos", "events_url": "https://api.github.com/users/borislopezaraoz/events{/privacy}", "received_events_url": "https://api.github.com/users/borislopezaraoz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-26T23:15:18Z", "updated_at": "2020-02-28T23:23:39Z", "closed_at": "2020-02-28T23:23:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\r\n\r\n```\r\nimport functools\r\n\r\n@functools.lru_cache()\r\ndef hello(name):\r\n    return 'hello ' + name\r\n```\r\n\r\n```\r\npython hello.py hello name\r\n...\r\nTypeError: hello() missing 1 required positional argument: 'name'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/142", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/142/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/142/events", "html_url": "https://github.com/google/python-fire/issues/142", "id": 365085530, "node_id": "MDU6SXNzdWUzNjUwODU1MzA=", "number": 142, "title": "Does python-fire have some method to do unified exception handling?", "user": {"login": "hujianxin", "id": 9526904, "node_id": "MDQ6VXNlcjk1MjY5MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9526904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hujianxin", "html_url": "https://github.com/hujianxin", "followers_url": "https://api.github.com/users/hujianxin/followers", "following_url": "https://api.github.com/users/hujianxin/following{/other_user}", "gists_url": "https://api.github.com/users/hujianxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hujianxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hujianxin/subscriptions", "organizations_url": "https://api.github.com/users/hujianxin/orgs", "repos_url": "https://api.github.com/users/hujianxin/repos", "events_url": "https://api.github.com/users/hujianxin/events{/privacy}", "received_events_url": "https://api.github.com/users/hujianxin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836578, "node_id": "MDU6TGFiZWw1NDQ4MzY1Nzg=", "url": "https://api.github.com/repos/google/python-fire/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-29T01:53:45Z", "updated_at": "2020-03-10T16:51:56Z", "closed_at": "2020-03-10T16:51:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/138", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/138/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/138/events", "html_url": "https://github.com/google/python-fire/issues/138", "id": 354559905, "node_id": "MDU6SXNzdWUzNTQ1NTk5MDU=", "number": 138, "title": "pass the parameters\uff0cit shows the \"inf\"", "user": {"login": "diaojunxian", "id": 19700467, "node_id": "MDQ6VXNlcjE5NzAwNDY3", "avatar_url": "https://avatars1.githubusercontent.com/u/19700467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diaojunxian", "html_url": "https://github.com/diaojunxian", "followers_url": "https://api.github.com/users/diaojunxian/followers", "following_url": "https://api.github.com/users/diaojunxian/following{/other_user}", "gists_url": "https://api.github.com/users/diaojunxian/gists{/gist_id}", "starred_url": "https://api.github.com/users/diaojunxian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diaojunxian/subscriptions", "organizations_url": "https://api.github.com/users/diaojunxian/orgs", "repos_url": "https://api.github.com/users/diaojunxian/repos", "events_url": "https://api.github.com/users/diaojunxian/events{/privacy}", "received_events_url": "https://api.github.com/users/diaojunxian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-28T03:46:57Z", "updated_at": "2018-10-29T17:13:23Z", "closed_at": "2018-08-28T04:35:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the code is very simple, like this\r\n```\r\nimport fire\r\n\r\n\r\ndef test(current):\r\n    print current\r\n\r\n    \r\nif __name__ == '__main__':\r\n    fire.Fire(test)\r\n```\r\nif I pass the parameter like this,`python test_fire.py --current=297e7814231`,it print `inf`\uff0cbut\uff0cwhen I pass the other parameters\uff0cit shows good.\r\n\r\nwhy it happend?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/137", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/137/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/137/events", "html_url": "https://github.com/google/python-fire/issues/137", "id": 354107172, "node_id": "MDU6SXNzdWUzNTQxMDcxNzI=", "number": 137, "title": "Feature Request: call arbitrary function in a project by simply add fire in __main__.py", "user": {"login": "traveller59", "id": 28866047, "node_id": "MDQ6VXNlcjI4ODY2MDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/28866047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traveller59", "html_url": "https://github.com/traveller59", "followers_url": "https://api.github.com/users/traveller59/followers", "following_url": "https://api.github.com/users/traveller59/following{/other_user}", "gists_url": "https://api.github.com/users/traveller59/gists{/gist_id}", "starred_url": "https://api.github.com/users/traveller59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traveller59/subscriptions", "organizations_url": "https://api.github.com/users/traveller59/orgs", "repos_url": "https://api.github.com/users/traveller59/repos", "events_url": "https://api.github.com/users/traveller59/events{/privacy}", "received_events_url": "https://api.github.com/users/traveller59/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-26T16:17:34Z", "updated_at": "2020-03-10T16:54:15Z", "closed_at": "2020-03-10T16:54:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Problem\r\nIf we want to call a function in a submodule of a project, we may need to replace existed __main__ function with fire.Fire(). every file which needs to add fire call need to do same things.\r\n\r\n# Possible Implementation\r\nWe can just add a simple line fire.Fire('.') in \\_\\_main\\_\\_.py or other file. When we use following commands:\r\n```bash\r\npython -m project project.submodule1.add 1 2\r\npython -m project .submodule1.add 1 2\r\npython -m project submodule1.add 1 2\r\npython main.py .submodule1.add 1 2\r\n```\r\nThe fire object will find and import target file, analysis function/object signature and call it. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/134", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/134/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/134/events", "html_url": "https://github.com/google/python-fire/issues/134", "id": 350896708, "node_id": "MDU6SXNzdWUzNTA4OTY3MDg=", "number": 134, "title": "Determine what happens when fire is requested at the CheeseShop", "user": {"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-15T17:31:08Z", "updated_at": "2018-08-20T16:38:09Z", "closed_at": "2018-08-20T16:38:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "WARNING: Silly.\r\n\r\nThis ticket is to determine what happens when fire is requested at an [actual Cheese Shop](https://github.com/oboechick/pyfanfic/issues/8) (rather than at the [PyPi CheeseShop](https://wiki.python.org/moin/CheeseShop)).\r\n\r\nContext: the customer has been asking for various python packages at a cheese shop and the shop owner is getting increasingly fed up. https://github.com/oboechick/pyfanfic/issues/8\r\n\r\nBrainstorming here:\r\n\r\n> Customer: fire?\r\n> Shopskeeper: this is burning me up!\r\n\r\nor\r\n\r\n> C: fire?\r\n> S: I'm getting burnt out!\r\n\r\nor\r\n\r\n> C: fire?\r\n> S: we keep the Saganaki in the back\r\n\r\nor\r\n\r\n> S: With all the twisted requests you've made, it sounds like you're making a beautifulsoup on a scrapy budget. We don't have celery. We don't have pyglets. We don't have fire. We don't have eggs. And we certainly don't have \"matplotlib\"! All we have is cheese!\r\n> C: I'll have one wheel then.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/133", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/133/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/133/events", "html_url": "https://github.com/google/python-fire/issues/133", "id": 347031198, "node_id": "MDU6SXNzdWUzNDcwMzExOTg=", "number": 133, "title": "Issue when no entry point is defined", "user": {"login": "ansdma", "id": 461753, "node_id": "MDQ6VXNlcjQ2MTc1Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/461753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ansdma", "html_url": "https://github.com/ansdma", "followers_url": "https://api.github.com/users/ansdma/followers", "following_url": "https://api.github.com/users/ansdma/following{/other_user}", "gists_url": "https://api.github.com/users/ansdma/gists{/gist_id}", "starred_url": "https://api.github.com/users/ansdma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ansdma/subscriptions", "organizations_url": "https://api.github.com/users/ansdma/orgs", "repos_url": "https://api.github.com/users/ansdma/repos", "events_url": "https://api.github.com/users/ansdma/events{/privacy}", "received_events_url": "https://api.github.com/users/ansdma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-02T14:14:46Z", "updated_at": "2018-08-02T17:37:44Z", "closed_at": "2018-08-02T17:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this code:\r\n```\r\nimport fire\r\n\r\nclass Calculator(object):\r\n\r\n  def add(self, x, y):\r\n    return x + y\r\n\r\n  def multiply(self, x, y):\r\n    return x * y\r\n\r\nif __name__ == '__main__':\r\n  fire.Fire()\r\n\r\n```\r\n\r\nWhen I run `python file.py -- --help` I get:\r\n```\r\nType:        dict\r\nString form: {'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x10a19ce10>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': 'file.py', '__cached__': None, 'fire': <module 'fire' from '/Users/a/.pyenv/versions/.../python3.6/site-packages/fire/__init__.py'>, 'Calculator': <class '__main__.Calculator'>}\r\nLength:      11\r\n\r\nUsage:       file.py \r\n             file.py fire\r\n             file.py Calculator\r\n\r\n```\r\n\r\nIs this expected behavior?\r\n\r\nBest\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/132", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/132/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/132/events", "html_url": "https://github.com/google/python-fire/issues/132", "id": 346761216, "node_id": "MDU6SXNzdWUzNDY3NjEyMTY=", "number": 132, "title": "Circular object pointers recurse forever. ", "user": {"login": "vlurgio", "id": 34552973, "node_id": "MDQ6VXNlcjM0NTUyOTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/34552973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlurgio", "html_url": "https://github.com/vlurgio", "followers_url": "https://api.github.com/users/vlurgio/followers", "following_url": "https://api.github.com/users/vlurgio/following{/other_user}", "gists_url": "https://api.github.com/users/vlurgio/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlurgio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlurgio/subscriptions", "organizations_url": "https://api.github.com/users/vlurgio/orgs", "repos_url": "https://api.github.com/users/vlurgio/repos", "events_url": "https://api.github.com/users/vlurgio/events{/privacy}", "received_events_url": "https://api.github.com/users/vlurgio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-01T20:43:39Z", "updated_at": "2018-08-03T00:46:55Z", "closed_at": "2018-08-03T00:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\r\n\r\ninput code:\r\n\r\nIn [1]: import jsonpickle\r\n\r\nIn [2]: a = dict()\r\n\r\nIn [3]: b = dict()\r\n\r\nIn [4]: c = dict()\r\n\r\nIn [5]: a['b'] = b\r\n\r\nIn [6]: a['c'] = c\r\n\r\nIn [7]: b['a'] = a\r\n\r\nIn [8]: b['c'] = c\r\n\r\nIn [9]: c['b']=b\r\n\r\nIn [10]: c['a'] = a\r\n\r\nIn [11]: jsonpickle.encode(a)\r\n\r\noutput code:\r\n---------------------------------------------------------------------------\r\nRecursionError                            Traceback (most recent call last)\r\n<ipython-input-11-6ee25152e31d> in <module>()\r\n----> 1 jsonpickle.encode(a)\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/jsonpickle/__init__.py in encode(value, unpicklable, make_refs, keys, max_depth, backend, warn, max_iter, numeric_keys)\r\n    130                           warn=warn,\r\n    131                           max_iter=max_iter,\r\n--> 132                           numeric_keys=numeric_keys)\r\n    133\r\n    134\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/jsonpickle/pickler.py in encode(value, unpicklable, make_refs, keys, max_depth, reset, backend, warn, context, max_iter, numeric_keys)\r\n     41                           max_iter=max_iter,\r\n     42                           numeric_keys=numeric_keys)\r\n---> 43     return backend.encode(context.flatten(value, reset=reset))\r\n     44\r\n     45\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/jsonpickle/pickler.py in flatten(self, obj, reset)\r\n    154         if reset:\r\n    155             self.reset()\r\n--> 156         return self._flatten(obj)\r\n    157\r\n    158     def _flatten(self, obj):\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/jsonpickle/pickler.py in _flatten(self, obj)\r\n    158     def _flatten(self, obj):\r\n    159         self._push()\r\n--> 160         return self._pop(self._flatten_obj(obj))\r\n    161\r\n    162     def _flatten_obj(self, obj):\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/jsonpickle/pickler.py in _flatten_obj(self, obj)\r\n    174             return None\r\n    175\r\n--> 176         return flatten_func(obj)\r\n    177\r\n    178     def _list_recurse(self, obj):\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/jsonpickle/pickler.py in _flatten_dict_obj(self, obj, data)\r\n    431         flatten = self._flatten_key_value_pair\r\n    432         for k, v in sorted(obj.items(), key=util.itemgetter):\r\n--> 433             flatten(k, v, data)\r\n    434\r\n    435         # the collections.defaultdict protocol\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/jsonpickle/pickler.py in _flatten_key_value_pair(self, k, v, data)\r\n    506                     k = unicode(k)\r\n    507\r\n--> 508         data[k] = self._flatten(v)\r\n    509         return data\r\n    510\r\n\r\n... last 4 frames repeated, from the frame below ...\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/jsonpickle/pickler.py in _flatten(self, obj)\r\n    158     def _flatten(self, obj):\r\n    159         self._push()\r\n--> 160         return self._pop(self._flatten_obj(obj))\r\n    161\r\n    162     def _flatten_obj(self, obj):\r\n\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n\r\n\r\n\r\nThis makes the package almost unusable", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/129", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/129/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/129/events", "html_url": "https://github.com/google/python-fire/issues/129", "id": 337526286, "node_id": "MDU6SXNzdWUzMzc1MjYyODY=", "number": 129, "title": "'NoneType' object has no attribute 'copy'", "user": {"login": "1oglop1", "id": 7480694, "node_id": "MDQ6VXNlcjc0ODA2OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7480694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1oglop1", "html_url": "https://github.com/1oglop1", "followers_url": "https://api.github.com/users/1oglop1/followers", "following_url": "https://api.github.com/users/1oglop1/following{/other_user}", "gists_url": "https://api.github.com/users/1oglop1/gists{/gist_id}", "starred_url": "https://api.github.com/users/1oglop1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1oglop1/subscriptions", "organizations_url": "https://api.github.com/users/1oglop1/orgs", "repos_url": "https://api.github.com/users/1oglop1/repos", "events_url": "https://api.github.com/users/1oglop1/events{/privacy}", "received_events_url": "https://api.github.com/users/1oglop1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-02T13:47:02Z", "updated_at": "2018-08-03T00:50:37Z", "closed_at": "2018-08-03T00:50:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thank you for amazing project it helped me a lot already.\r\n\r\nHowever I'm running in an issue when argument has a default value of `None`\r\n\r\nwhen I have function like this:\r\n```\r\n def restore_snapshot(self, repository, snapshot, body=None, params=None):\r\n        response = self.es_client.snapshot.restore(repository, snapshot, body=body, params=params)\r\n        print(response.status_code)\r\n        print(response.text)\r\n```\r\nand I run it\r\n\r\n`python .\\es-scripts.py --host=$es_test restore-snapshot --repository=$snapsho\r\nt_repo --snapshot=\"es-manual-snapshot\"`\r\nthen I get this error\r\n```\r\nself.es_client.snapshot.restore(repository, snapshot, body=body, params=params)\r\n  File \"D:\\Users\\jgazda\\.virtualenvs\\es-1RO09quw\\lib\\site-packages\\elasticsearch\\client\\utils.py\", line 65, in _wrapped\r\n    params = kwargs.pop('params').copy()\r\nAttributeError: 'NoneType' object has no attribute 'copy'\r\n```\r\n\r\nI'd like to know if am I doing something wrong or this is a bug / indented behaviour and if there is an workaround?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/126", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/126/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/126/events", "html_url": "https://github.com/google/python-fire/issues/126", "id": 331937165, "node_id": "MDU6SXNzdWUzMzE5MzcxNjU=", "number": 126, "title": "error: Could not consume arg ", "user": {"login": "orangeSi", "id": 12126846, "node_id": "MDQ6VXNlcjEyMTI2ODQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/12126846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orangeSi", "html_url": "https://github.com/orangeSi", "followers_url": "https://api.github.com/users/orangeSi/followers", "following_url": "https://api.github.com/users/orangeSi/following{/other_user}", "gists_url": "https://api.github.com/users/orangeSi/gists{/gist_id}", "starred_url": "https://api.github.com/users/orangeSi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orangeSi/subscriptions", "organizations_url": "https://api.github.com/users/orangeSi/orgs", "repos_url": "https://api.github.com/users/orangeSi/repos", "events_url": "https://api.github.com/users/orangeSi/events{/privacy}", "received_events_url": "https://api.github.com/users/orangeSi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-13T10:35:35Z", "updated_at": "2018-06-13T15:02:02Z", "closed_at": "2018-06-13T15:02:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi~\r\n   This is my code:\r\n```\r\nimport fire\r\nclass caluater():\r\n    def __init__(self):\r\n        print (\"start caluate\")\r\n        self.A = 2\r\n    def add(self, num):\r\n        self.A = self.A + num\r\n        print (f\"add {num}\")\r\n    def multip(self, nump):\r\n        self.A = self.A * nump\r\n        print (f\"multiply {nump}\")\r\n    def final(self):\r\n        return (\"final, A is \"+str(self.A))\r\n\r\nif __name__ == \"__main__\":\r\n    fire.Fire(caluater)\r\n```\r\n\r\n\r\n\r\nbut when I run `python test.py add 3  multip 5 final`, get this error:\r\n```\r\nstart caluate\r\nadd 3\r\nFire trace:\r\n1. Initial component\r\n2. Instantiated class \"caluater\" (/ifswh1/BC_PS/sikaiwei/bin/python3/lib/fire.test.py:4)\r\n3. Accessed property \"add\" (/ifswh1/BC_PS/sikaiwei/bin/python3/lib/fire.test.py:8)\r\n4. Called routine \"add\" (/ifswh1/BC_PS/sikaiwei/bin/python3/lib/fire.test.py:8)\r\n5. ('Could not consume arg:', 'multip')\r\n\r\nType:        NoneType\r\nString form: None\r\n\r\nUsage:       fire.test.py add 3 \r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/125", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/125/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/125/events", "html_url": "https://github.com/google/python-fire/issues/125", "id": 331760633, "node_id": "MDU6SXNzdWUzMzE3NjA2MzM=", "number": 125, "title": "Preserve key order when prettyprinting returned ordered dicts", "user": {"login": "n1ywb", "id": 316961, "node_id": "MDQ6VXNlcjMxNjk2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/316961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n1ywb", "html_url": "https://github.com/n1ywb", "followers_url": "https://api.github.com/users/n1ywb/followers", "following_url": "https://api.github.com/users/n1ywb/following{/other_user}", "gists_url": "https://api.github.com/users/n1ywb/gists{/gist_id}", "starred_url": "https://api.github.com/users/n1ywb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n1ywb/subscriptions", "organizations_url": "https://api.github.com/users/n1ywb/orgs", "repos_url": "https://api.github.com/users/n1ywb/repos", "events_url": "https://api.github.com/users/n1ywb/events{/privacy}", "received_events_url": "https://api.github.com/users/n1ywb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "joejoevictor", "id": 1243000, "node_id": "MDQ6VXNlcjEyNDMwMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1243000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joejoevictor", "html_url": "https://github.com/joejoevictor", "followers_url": "https://api.github.com/users/joejoevictor/followers", "following_url": "https://api.github.com/users/joejoevictor/following{/other_user}", "gists_url": "https://api.github.com/users/joejoevictor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joejoevictor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joejoevictor/subscriptions", "organizations_url": "https://api.github.com/users/joejoevictor/orgs", "repos_url": "https://api.github.com/users/joejoevictor/repos", "events_url": "https://api.github.com/users/joejoevictor/events{/privacy}", "received_events_url": "https://api.github.com/users/joejoevictor/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "joejoevictor", "id": 1243000, "node_id": "MDQ6VXNlcjEyNDMwMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1243000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joejoevictor", "html_url": "https://github.com/joejoevictor", "followers_url": "https://api.github.com/users/joejoevictor/followers", "following_url": "https://api.github.com/users/joejoevictor/following{/other_user}", "gists_url": "https://api.github.com/users/joejoevictor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joejoevictor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joejoevictor/subscriptions", "organizations_url": "https://api.github.com/users/joejoevictor/orgs", "repos_url": "https://api.github.com/users/joejoevictor/repos", "events_url": "https://api.github.com/users/joejoevictor/events{/privacy}", "received_events_url": "https://api.github.com/users/joejoevictor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-12T21:28:47Z", "updated_at": "2018-06-21T23:22:06Z", "closed_at": "2018-06-21T23:22:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/124", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/124/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/124/events", "html_url": "https://github.com/google/python-fire/issues/124", "id": 331411988, "node_id": "MDU6SXNzdWUzMzE0MTE5ODg=", "number": 124, "title": "Version number as package attribute", "user": {"login": "keithpenney", "id": 31521048, "node_id": "MDQ6VXNlcjMxNTIxMDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/31521048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keithpenney", "html_url": "https://github.com/keithpenney", "followers_url": "https://api.github.com/users/keithpenney/followers", "following_url": "https://api.github.com/users/keithpenney/following{/other_user}", "gists_url": "https://api.github.com/users/keithpenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/keithpenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keithpenney/subscriptions", "organizations_url": "https://api.github.com/users/keithpenney/orgs", "repos_url": "https://api.github.com/users/keithpenney/repos", "events_url": "https://api.github.com/users/keithpenney/events{/privacy}", "received_events_url": "https://api.github.com/users/keithpenney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-12T02:11:36Z", "updated_at": "2019-06-07T18:15:38Z", "closed_at": "2019-06-07T18:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a more direct way to expose the version number to the user?  Perhaps a `__version__` package attribute?  I dropped these two lines into the `/fire/__init__.py` file and it works fine for 2.7.6 and 3.6.4.\r\n\r\n```python\r\nimport  pkg_resources\r\n__version__ = pkg_resources.get_distribution('fire').version\r\n```\r\nIt's not the most elegant solution.  [Other ideas.](https://packaging.python.org/guides/single-sourcing-package-version/#single-sourcing-the-version)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/123", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/123/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/123/events", "html_url": "https://github.com/google/python-fire/issues/123", "id": 330153033, "node_id": "MDU6SXNzdWUzMzAxNTMwMzM=", "number": 123, "title": "Permission to generate stubs for python-fire in typeshed", "user": {"login": "waseem18", "id": 5843007, "node_id": "MDQ6VXNlcjU4NDMwMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5843007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waseem18", "html_url": "https://github.com/waseem18", "followers_url": "https://api.github.com/users/waseem18/followers", "following_url": "https://api.github.com/users/waseem18/following{/other_user}", "gists_url": "https://api.github.com/users/waseem18/gists{/gist_id}", "starred_url": "https://api.github.com/users/waseem18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waseem18/subscriptions", "organizations_url": "https://api.github.com/users/waseem18/orgs", "repos_url": "https://api.github.com/users/waseem18/repos", "events_url": "https://api.github.com/users/waseem18/events{/privacy}", "received_events_url": "https://api.github.com/users/waseem18/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-07T07:40:08Z", "updated_at": "2018-07-05T23:36:29Z", "closed_at": "2018-06-07T17:04:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Folks,\r\n\r\nI would like to add stubs for _python-fire_ to https://github.com/python/typeshed, a repository used to store PEP 484 type signatures for the Python stdlib and popular third party libraries. As per PEP 484, permission is required from the library owner(s) before merging type signatures into typeshed - https://www.python.org/dev/peps/pep-0484/#the-typeshed-repo\r\n\r\nThese stubs will be used by mypy and Pycharm. I'll start working on creating stubs after I get permission from the owners or maintainers of _python-fire_.\r\n\r\nThank You.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/121", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/121/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/121/events", "html_url": "https://github.com/google/python-fire/issues/121", "id": 322082699, "node_id": "MDU6SXNzdWUzMjIwODI2OTk=", "number": 121, "title": "How do we print better usage messages?", "user": {"login": "nodox", "id": 7632841, "node_id": "MDQ6VXNlcjc2MzI4NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7632841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodox", "html_url": "https://github.com/nodox", "followers_url": "https://api.github.com/users/nodox/followers", "following_url": "https://api.github.com/users/nodox/following{/other_user}", "gists_url": "https://api.github.com/users/nodox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodox/subscriptions", "organizations_url": "https://api.github.com/users/nodox/orgs", "repos_url": "https://api.github.com/users/nodox/repos", "events_url": "https://api.github.com/users/nodox/events{/privacy}", "received_events_url": "https://api.github.com/users/nodox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836575, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzU=", "url": "https://api.github.com/repos/google/python-fire/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "joejoevictor", "id": 1243000, "node_id": "MDQ6VXNlcjEyNDMwMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1243000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joejoevictor", "html_url": "https://github.com/joejoevictor", "followers_url": "https://api.github.com/users/joejoevictor/followers", "following_url": "https://api.github.com/users/joejoevictor/following{/other_user}", "gists_url": "https://api.github.com/users/joejoevictor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joejoevictor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joejoevictor/subscriptions", "organizations_url": "https://api.github.com/users/joejoevictor/orgs", "repos_url": "https://api.github.com/users/joejoevictor/repos", "events_url": "https://api.github.com/users/joejoevictor/events{/privacy}", "received_events_url": "https://api.github.com/users/joejoevictor/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "joejoevictor", "id": 1243000, "node_id": "MDQ6VXNlcjEyNDMwMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1243000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joejoevictor", "html_url": "https://github.com/joejoevictor", "followers_url": "https://api.github.com/users/joejoevictor/followers", "following_url": "https://api.github.com/users/joejoevictor/following{/other_user}", "gists_url": "https://api.github.com/users/joejoevictor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joejoevictor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joejoevictor/subscriptions", "organizations_url": "https://api.github.com/users/joejoevictor/orgs", "repos_url": "https://api.github.com/users/joejoevictor/repos", "events_url": "https://api.github.com/users/joejoevictor/events{/privacy}", "received_events_url": "https://api.github.com/users/joejoevictor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-05-10T20:58:32Z", "updated_at": "2019-07-24T18:27:46Z", "closed_at": "2019-07-24T18:27:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not fond of all the extra information that prints when I want help on how to use a command.\r\nI find it distracts the user and almost looks like errors. Not sure how to override this behavior from my project myself. Only way I see right now is too fork and modify. Any ideas on how to get better usage messages?\r\n\r\n```\r\nType:        function\r\nString form: <function new at 0x0000000>\r\nFile:        playground\r\nLine:        62\r\nDocstring:   Creates a new playground stack\r\n\r\nUsage:       playground new NAME\r\n             playground new --name NAME\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/117", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/117/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/117/events", "html_url": "https://github.com/google/python-fire/issues/117", "id": 298013180, "node_id": "MDU6SXNzdWUyOTgwMTMxODA=", "number": 117, "title": "How do i hide certain methods ", "user": {"login": "khavishbhundoo", "id": 18513761, "node_id": "MDQ6VXNlcjE4NTEzNzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/18513761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khavishbhundoo", "html_url": "https://github.com/khavishbhundoo", "followers_url": "https://api.github.com/users/khavishbhundoo/followers", "following_url": "https://api.github.com/users/khavishbhundoo/following{/other_user}", "gists_url": "https://api.github.com/users/khavishbhundoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/khavishbhundoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khavishbhundoo/subscriptions", "organizations_url": "https://api.github.com/users/khavishbhundoo/orgs", "repos_url": "https://api.github.com/users/khavishbhundoo/repos", "events_url": "https://api.github.com/users/khavishbhundoo/events{/privacy}", "received_events_url": "https://api.github.com/users/khavishbhundoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-17T15:39:21Z", "updated_at": "2018-04-03T16:32:56Z", "closed_at": "2018-04-03T16:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "One of the great feature of fire is the easy exposure of methods , but sometimes i want to hide exposure of certain methods", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/115", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/115/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/115/events", "html_url": "https://github.com/google/python-fire/issues/115", "id": 296192247, "node_id": "MDU6SXNzdWUyOTYxOTIyNDc=", "number": 115, "title": "Chaining function calls", "user": {"login": "khavishbhundoo", "id": 18513761, "node_id": "MDQ6VXNlcjE4NTEzNzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/18513761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khavishbhundoo", "html_url": "https://github.com/khavishbhundoo", "followers_url": "https://api.github.com/users/khavishbhundoo/followers", "following_url": "https://api.github.com/users/khavishbhundoo/following{/other_user}", "gists_url": "https://api.github.com/users/khavishbhundoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/khavishbhundoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khavishbhundoo/subscriptions", "organizations_url": "https://api.github.com/users/khavishbhundoo/orgs", "repos_url": "https://api.github.com/users/khavishbhundoo/repos", "events_url": "https://api.github.com/users/khavishbhundoo/events{/privacy}", "received_events_url": "https://api.github.com/users/khavishbhundoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-11T14:01:09Z", "updated_at": "2018-02-12T16:40:46Z", "closed_at": "2018-02-11T15:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would want to call  my command line app as follows:\r\n\r\nAsyncDownloader.py set-source-csv urls.csv urls set_destination_path ./images download\r\n\r\nI have already made the methods return self.My code is [here](https://pastebin.com/iq3S0Ljb)\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/114", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/114/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/114/events", "html_url": "https://github.com/google/python-fire/issues/114", "id": 293529520, "node_id": "MDU6SXNzdWUyOTM1Mjk1MjA=", "number": 114, "title": "documentation of commands/arguments", "user": {"login": "sdementen", "id": 1304950, "node_id": "MDQ6VXNlcjEzMDQ5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdementen", "html_url": "https://github.com/sdementen", "followers_url": "https://api.github.com/users/sdementen/followers", "following_url": "https://api.github.com/users/sdementen/following{/other_user}", "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions", "organizations_url": "https://api.github.com/users/sdementen/orgs", "repos_url": "https://api.github.com/users/sdementen/repos", "events_url": "https://api.github.com/users/sdementen/events{/privacy}", "received_events_url": "https://api.github.com/users/sdementen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-01T13:26:57Z", "updated_at": "2019-08-05T15:02:25Z", "closed_at": "2019-07-25T22:11:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some questions/comments on the \"user friendliness\" of fire.\r\n\r\nWith the following script `fire_test.py`\r\n```\r\nimport fire\r\n\r\n\r\nclass Example(object):\r\n    \"\"\"this is an example module with some functions\"\"\"\r\n\r\n    def hello(self, name, message=\"hello\", count=3):\r\n        \"\"\"Says count times the message to the specified name\r\n\r\n        :param name (str): the name of the person\r\n        :param message (str): the message to say to the person\r\n        :param count (int): the number of times the message should be repeated\r\n        :return: the expected result\r\n        \"\"\"\r\n        return 'Hello {name}!'.format(name=name) * count\r\n\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(Example)\r\n```\r\nthe call to `python fire_test.py hello` returns\r\n```\r\nFire trace:\r\n1. Initial component\r\n2. Instantiated class \"Example\" (fire_test.py:4)\r\n3. Accessed property \"hello\" (fire_test.py:7)\r\n4. ('The function received no value for the required argument:', 'name')\r\n\r\nType:        method\r\nString form: <bound method Example.hello of <__main__.Example object at 0x0000000002A2F9E8>>\r\nFile:        c:\\users\\gfj138\\pycharmprojects\\piecash\\piecash\\scripts\\fire_test.py\r\nLine:        7\r\nDocstring:   Says count times the message to the specified name.\r\n\r\n:param name (str): the name of the person\r\n:param message (str): the message to say to the person\r\n:param count (int): the number of times the message should be repeated\r\n:return: the expected result\r\n\r\nUsage:       fire_test.py hello NAME [MESSAGE] [COUNT]\r\n             fire_test.py hello --name NAME [--message MESSAGE] [--count COUNT]\r\n```\r\nwhere:\r\n- the fire trace looks more like a \"debugging feature\" than a \"user feedback\"\r\n- the same for the Type/String form/File/Line information\r\n- the docstring is displayed as such which make it not user friendly\r\n- the default values of the optional arguments are not visible\r\n\r\nIs there some better way to document the commands and their arguments I may be missing ?\r\nAny good practice re documentation ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/113", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/113/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/113/events", "html_url": "https://github.com/google/python-fire/issues/113", "id": 292638731, "node_id": "MDU6SXNzdWUyOTI2Mzg3MzE=", "number": 113, "title": "How to deal with classmethod or staticmethod?", "user": {"login": "ssikiki", "id": 5905346, "node_id": "MDQ6VXNlcjU5MDUzNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5905346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssikiki", "html_url": "https://github.com/ssikiki", "followers_url": "https://api.github.com/users/ssikiki/followers", "following_url": "https://api.github.com/users/ssikiki/following{/other_user}", "gists_url": "https://api.github.com/users/ssikiki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssikiki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssikiki/subscriptions", "organizations_url": "https://api.github.com/users/ssikiki/orgs", "repos_url": "https://api.github.com/users/ssikiki/repos", "events_url": "https://api.github.com/users/ssikiki/events{/privacy}", "received_events_url": "https://api.github.com/users/ssikiki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-30T03:12:18Z", "updated_at": "2019-07-24T15:16:08Z", "closed_at": "2019-07-24T15:16:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport fire\r\nclass Calculator(object):\r\n  \"\"\"A simple calculator class.\"\"\"\r\n  base = 10\r\n\r\n  def __init__(self, x):\r\n    self.x = x\r\n\r\n  def double(self, number):\r\n    return self.x * number\r\n\r\n  @classmethod\r\n  def test(cls, number):\r\n    return cls.base * number\r\n\r\nif __name__ == '__main__':\r\n  fire.Fire(Calculator)\r\n```\r\n=== a.py  =====================================\r\nIf I want to call func test, I need to do like this:  python a.py --x 3 test 5 \r\nSo how to call classmethod or staticmethod without initialize the class \uff08python a.py test 5 \uff09?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/112", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/112/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/112/events", "html_url": "https://github.com/google/python-fire/issues/112", "id": 289303526, "node_id": "MDU6SXNzdWUyODkzMDM1MjY=", "number": 112, "title": "Cut a new release for python-fire", "user": {"login": "jtratner", "id": 1598379, "node_id": "MDQ6VXNlcjE1OTgzNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtratner", "html_url": "https://github.com/jtratner", "followers_url": "https://api.github.com/users/jtratner/followers", "following_url": "https://api.github.com/users/jtratner/following{/other_user}", "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions", "organizations_url": "https://api.github.com/users/jtratner/orgs", "repos_url": "https://api.github.com/users/jtratner/repos", "events_url": "https://api.github.com/users/jtratner/events{/privacy}", "received_events_url": "https://api.github.com/users/jtratner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-17T15:20:55Z", "updated_at": "2018-02-23T21:03:12Z", "closed_at": "2018-02-23T18:33:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @dbieber - would you be able to cut a new release for python-fire?  I'd really love to be able to use that parsing fix! :)\r\n\r\nAlso: if there's any way I can help speed that process up, please tell me!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/109", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/109/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/109/events", "html_url": "https://github.com/google/python-fire/issues/109", "id": 285585851, "node_id": "MDU6SXNzdWUyODU1ODU4NTE=", "number": 109, "title": "Confusing behavior on typos when keyword args are reinterpreted as positional arguments", "user": {"login": "jtratner", "id": 1598379, "node_id": "MDQ6VXNlcjE1OTgzNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtratner", "html_url": "https://github.com/jtratner", "followers_url": "https://api.github.com/users/jtratner/followers", "following_url": "https://api.github.com/users/jtratner/following{/other_user}", "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions", "organizations_url": "https://api.github.com/users/jtratner/orgs", "repos_url": "https://api.github.com/users/jtratner/repos", "events_url": "https://api.github.com/users/jtratner/events{/privacy}", "received_events_url": "https://api.github.com/users/jtratner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-03T02:24:41Z", "updated_at": "2018-01-03T03:06:38Z", "closed_at": "2018-01-03T03:06:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Let's say I have some function like this:\r\n\r\n```\r\ndef myfunction(arg1, arg2, run_encoding):\r\n     print(arg1, arg2, run_encoding)\r\n\r\nfire.Fire()\r\n```\r\n\r\nIf I accidentally misspell the run_encoding argument, I get behavior that can be really confusing to debug (e.g., if that's a relative file path, you suddenly get a `--mypath=1` directory):\r\n\r\n```\r\n\u203a\u203a python fire_example.py myfunction --arg1=a --arg2=b --run-encoding=5\r\n('a', 'b', 5)\r\n\u203a\u203a python fire_example.py myfunction --arg1=a --arg2=b --runencoding=5                                                                                                           \r\n('a', 'b', '--runencoding=5')\r\n```\r\n\r\nI assume this happens because fire fills in all the keyword args and then assumes you specify positional arguments after them?\r\n\r\nWhat I wish happened instead is that, unless explicitly quoted, any argument starting with `--` would be treated as a keyword arg, so you'd see:\r\n\r\n```\r\n1. Initial component\r\n2. Accessed property \"myfunction\"\r\n3. ('The function received no value for the required argument:', 'run_encoding')\r\n\r\nType:        function\r\nString form: <function myfunction at 0x110138cf8>\r\nFile:        /Users/jtratner/fire_example.py\r\nLine:        3\r\n\r\nUsage:       fire_example.py myfunction ARG1 ARG2 RUN_ENCODING\r\n             fire_example.py myfunction --arg1 ARG1 --arg2 ARG2 --run-encoding RUN_ENCODING\r\n```\r\n\r\nThis is related to the issue in https://github.com/google/python-fire/issues/25, in that if positional arguments were not allowed after keyword arguments, you wouldn't end up with the ambiguity, but I can see how that's less \"shell like\".\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/108", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/108/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/108/events", "html_url": "https://github.com/google/python-fire/issues/108", "id": 285437919, "node_id": "MDU6SXNzdWUyODU0Mzc5MTk=", "number": 108, "title": "No way to add shortened options (e.g. '-R/--recursive')", "user": {"login": "alexpilk", "id": 25393255, "node_id": "MDQ6VXNlcjI1MzkzMjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/25393255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexpilk", "html_url": "https://github.com/alexpilk", "followers_url": "https://api.github.com/users/alexpilk/followers", "following_url": "https://api.github.com/users/alexpilk/following{/other_user}", "gists_url": "https://api.github.com/users/alexpilk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexpilk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexpilk/subscriptions", "organizations_url": "https://api.github.com/users/alexpilk/orgs", "repos_url": "https://api.github.com/users/alexpilk/repos", "events_url": "https://api.github.com/users/alexpilk/events{/privacy}", "received_events_url": "https://api.github.com/users/alexpilk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-01-02T14:07:54Z", "updated_at": "2019-09-19T18:48:28Z", "closed_at": "2018-10-09T01:19:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to create short names for default boolean arguments?\r\n\r\nFor example, if you have the following function:\r\n```python\r\ndef hello(greeting, uppercase=False):\r\n    greeting = greeting.upper() if uppercase else greeting\r\n    print(greeting)\r\n```\r\n\r\nIt would be nice to have the following usages:\r\n`python hello.py Hey! -u`  \r\n`python hello.py Hey! --uppercase`  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/107", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/107/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/107/events", "html_url": "https://github.com/google/python-fire/issues/107", "id": 284071674, "node_id": "MDU6SXNzdWUyODQwNzE2NzQ=", "number": 107, "title": "Wrong permission on files in EGG-INFO", "user": {"login": "hanmanhui", "id": 5791339, "node_id": "MDQ6VXNlcjU3OTEzMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5791339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanmanhui", "html_url": "https://github.com/hanmanhui", "followers_url": "https://api.github.com/users/hanmanhui/followers", "following_url": "https://api.github.com/users/hanmanhui/following{/other_user}", "gists_url": "https://api.github.com/users/hanmanhui/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanmanhui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanmanhui/subscriptions", "organizations_url": "https://api.github.com/users/hanmanhui/orgs", "repos_url": "https://api.github.com/users/hanmanhui/repos", "events_url": "https://api.github.com/users/hanmanhui/events{/privacy}", "received_events_url": "https://api.github.com/users/hanmanhui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-22T04:50:32Z", "updated_at": "2018-02-23T18:31:56Z", "closed_at": "2018-02-23T18:31:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing fire with pip, python-mode plugin on vim started to crash with error logs like [this issue](https://github.com/python-mode/python-mode/issues/750).\r\nUnlike the issue above, last error was like this.\r\n`IOError: [Errno 13] Permission denied: '/usr/lib64/python2.7/site-packages/fire-0.1.1-py2.7.egg/EGG-INFO/top_level.txt'`\r\n\r\nFiles in EGG-INFO showed permission like this.\r\n```\r\n> ll /usr/lib64/python2.7/site-packages/fire-0.1.1-py2.7.egg/EGG-INFO/\r\ntotal 28\r\n-rw-r----- 1 root root    1 Aug 24 13:21 dependency_links.txt\r\n-rw-r--r-- 1 root root    1 Aug 24 13:21 not-zip-safe\r\n-rw-r--r-- 1 root root   47 Aug 24 13:21 pbr.json\r\n-rw-r----- 1 root root 1417 Aug 24 13:21 PKG-INFO\r\n-rw-r----- 1 root root   16 Aug 24 13:21 requires.txt\r\n-rw-r----- 1 root root  699 Aug 24 13:21 SOURCES.txt\r\n-rw-r----- 1 root root    5 Aug 24 13:21 top_level.txt\r\n```\r\n\r\nI think permissions on these files should be set to `-rw-r--r-- (644)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/105", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/105/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/105/events", "html_url": "https://github.com/google/python-fire/issues/105", "id": 281212453, "node_id": "MDU6SXNzdWUyODEyMTI0NTM=", "number": 105, "title": "not support this like: shell> python hello.py abc | >data.txt", "user": {"login": "wayaya", "id": 3099470, "node_id": "MDQ6VXNlcjMwOTk0NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3099470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wayaya", "html_url": "https://github.com/wayaya", "followers_url": "https://api.github.com/users/wayaya/followers", "following_url": "https://api.github.com/users/wayaya/following{/other_user}", "gists_url": "https://api.github.com/users/wayaya/gists{/gist_id}", "starred_url": "https://api.github.com/users/wayaya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wayaya/subscriptions", "organizations_url": "https://api.github.com/users/wayaya/orgs", "repos_url": "https://api.github.com/users/wayaya/repos", "events_url": "https://api.github.com/users/wayaya/events{/privacy}", "received_events_url": "https://api.github.com/users/wayaya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-12T00:14:30Z", "updated_at": "2017-12-12T05:45:22Z", "closed_at": "2017-12-12T00:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found that, fire not support like:\r\nshell> python hello.py abc | >data.txt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/103", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/103/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/103/events", "html_url": "https://github.com/google/python-fire/issues/103", "id": 279522164, "node_id": "MDU6SXNzdWUyNzk1MjIxNjQ=", "number": 103, "title": "fire script in setup.py `entry_points` doesn't work", "user": {"login": "CJ-Wright", "id": 6740689, "node_id": "MDQ6VXNlcjY3NDA2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6740689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CJ-Wright", "html_url": "https://github.com/CJ-Wright", "followers_url": "https://api.github.com/users/CJ-Wright/followers", "following_url": "https://api.github.com/users/CJ-Wright/following{/other_user}", "gists_url": "https://api.github.com/users/CJ-Wright/gists{/gist_id}", "starred_url": "https://api.github.com/users/CJ-Wright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CJ-Wright/subscriptions", "organizations_url": "https://api.github.com/users/CJ-Wright/orgs", "repos_url": "https://api.github.com/users/CJ-Wright/repos", "events_url": "https://api.github.com/users/CJ-Wright/events{/privacy}", "received_events_url": "https://api.github.com/users/CJ-Wright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-05T20:38:26Z", "updated_at": "2017-12-05T20:54:58Z", "closed_at": "2017-12-05T20:54:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that the entry point tries to run the code when I try to use the help when the fire script is listed in `entry_points` in a setup.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/102", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/102/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/102/events", "html_url": "https://github.com/google/python-fire/issues/102", "id": 277405171, "node_id": "MDU6SXNzdWUyNzc0MDUxNzE=", "number": 102, "title": "Unexpected parsing behaviour for --date=2018-12-09 vs. --date=2018-12-10", "user": {"login": "martinvirtel", "id": 9485782, "node_id": "MDQ6VXNlcjk0ODU3ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9485782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinvirtel", "html_url": "https://github.com/martinvirtel", "followers_url": "https://api.github.com/users/martinvirtel/followers", "following_url": "https://api.github.com/users/martinvirtel/following{/other_user}", "gists_url": "https://api.github.com/users/martinvirtel/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinvirtel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinvirtel/subscriptions", "organizations_url": "https://api.github.com/users/martinvirtel/orgs", "repos_url": "https://api.github.com/users/martinvirtel/repos", "events_url": "https://api.github.com/users/martinvirtel/events{/privacy}", "received_events_url": "https://api.github.com/users/martinvirtel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-28T14:31:11Z", "updated_at": "2020-02-28T18:24:10Z", "closed_at": "2020-02-28T18:24:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Anything that can be interpreted as an arithmetics expression will be magically \"calculated\" by fire. This is very practical. But it bit me because I wanted to parse dates from command line parameters using fire, see below. \r\n\r\nSuggestion: accept type hints as a way to prevent this. A parameter with type hint \"str\" shoud not be \"calculated\". \r\n\r\nTest code:\r\n\r\n```import fire\r\n\r\ndef test(string: str=None) :\r\n    print(string)\r\n\r\nif __name__==\"__main__\" :\r\n    fire.Fire(test)\r\n```\r\n\r\nWill give you: \r\n\r\n```\r\n> python ./test-parsing.py --string=2010-10-10\r\n1990    # not interpreted as a string, but as 2010 minus 10 minus 10\r\n\r\n> python ./test-parsing.py --string=2010-10-09\r\n2010-10-09\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/101", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/101/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/101/events", "html_url": "https://github.com/google/python-fire/issues/101", "id": 273385009, "node_id": "MDU6SXNzdWUyNzMzODUwMDk=", "number": 101, "title": "Completion script generation", "user": {"login": "edmBernard", "id": 19322406, "node_id": "MDQ6VXNlcjE5MzIyNDA2", "avatar_url": "https://avatars1.githubusercontent.com/u/19322406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmBernard", "html_url": "https://github.com/edmBernard", "followers_url": "https://api.github.com/users/edmBernard/followers", "following_url": "https://api.github.com/users/edmBernard/following{/other_user}", "gists_url": "https://api.github.com/users/edmBernard/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmBernard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmBernard/subscriptions", "organizations_url": "https://api.github.com/users/edmBernard/orgs", "repos_url": "https://api.github.com/users/edmBernard/repos", "events_url": "https://api.github.com/users/edmBernard/events{/privacy}", "received_events_url": "https://api.github.com/users/edmBernard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-13T10:46:52Z", "updated_at": "2019-06-14T12:27:17Z", "closed_at": "2019-06-14T12:27:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since the script name getter method have been change [here](https://github.com/google/python-fire/blame/d9982003c6c9a1b6fb3add26d26f6eaf1e007332/fire/core.py#L104) du to this issue https://github.com/google/python-fire/issues/51\r\nfrom `name = name or sys.argv[0]` to `name = name or os.path.basename(sys.argv[0])` \r\nThe completion script don't work anymore on linux: `./myscript.py` is replaced by `myscript.py`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/95", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/95/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/95/events", "html_url": "https://github.com/google/python-fire/issues/95", "id": 264326310, "node_id": "MDU6SXNzdWUyNjQzMjYzMTA=", "number": 95, "title": "date string being parsed as integer math expression", "user": {"login": "slotrans", "id": 3879334, "node_id": "MDQ6VXNlcjM4NzkzMzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3879334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slotrans", "html_url": "https://github.com/slotrans", "followers_url": "https://api.github.com/users/slotrans/followers", "following_url": "https://api.github.com/users/slotrans/following{/other_user}", "gists_url": "https://api.github.com/users/slotrans/gists{/gist_id}", "starred_url": "https://api.github.com/users/slotrans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slotrans/subscriptions", "organizations_url": "https://api.github.com/users/slotrans/orgs", "repos_url": "https://api.github.com/users/slotrans/repos", "events_url": "https://api.github.com/users/slotrans/events{/privacy}", "received_events_url": "https://api.github.com/users/slotrans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-10T18:15:24Z", "updated_at": "2017-10-11T17:15:09Z", "closed_at": "2017-10-11T17:15:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using fire 0.1.2...\r\n\r\n$ python mycode.py my_function --daydate 2017-10-09 -> The daydate parameter of my_function is passed the string value '2017-10-09' as expected and desired.\r\n\r\n$ python mycode.py my_function --daydate 2017-10-10 -> The daydate parameter of my function is passed the integer value 1997. Apparently '2017-10-10' is being parsed as an integer math expression? I'm not sure why anyone would ever want that, and I'm very sure that no one would expect that.\r\n\r\nI understand that I can solve this by placing my argument value in both double and single quotes, but I'd really rather not have to do that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/93", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/93/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/93/events", "html_url": "https://github.com/google/python-fire/issues/93", "id": 255661166, "node_id": "MDU6SXNzdWUyNTU2NjExNjY=", "number": 93, "title": "Is python-fire not compatible with numpy??", "user": {"login": "simonnier", "id": 11294083, "node_id": "MDQ6VXNlcjExMjk0MDgz", "avatar_url": "https://avatars2.githubusercontent.com/u/11294083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonnier", "html_url": "https://github.com/simonnier", "followers_url": "https://api.github.com/users/simonnier/followers", "following_url": "https://api.github.com/users/simonnier/following{/other_user}", "gists_url": "https://api.github.com/users/simonnier/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonnier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonnier/subscriptions", "organizations_url": "https://api.github.com/users/simonnier/orgs", "repos_url": "https://api.github.com/users/simonnier/repos", "events_url": "https://api.github.com/users/simonnier/events{/privacy}", "received_events_url": "https://api.github.com/users/simonnier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-06T16:12:14Z", "updated_at": "2019-07-26T16:52:30Z", "closed_at": "2019-07-26T04:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a simple test\r\n\r\n```\r\nimport numpy as np\r\nimport math\r\nimport fire\r\n\r\ndef test(x):\r\n\ta=np.array(x)\r\n\treturn a\r\n\r\ndef test2(x):\r\n\ta=math.sin(x)\r\n\treturn a\r\n\r\nprint('direct call')\r\nprint(test([1,2]))\r\n\r\nprint('fire call')\r\nif __name__ == '__main__':\r\n  fire.Fire()\r\n```\r\n\r\nsave this as test_fire.py\r\n\r\nif we run \r\n\r\n`python test_fire.py test2 1`\r\n\r\nit has no problem, it outputs\r\n\r\n> [1 2]\r\n> direct call\r\n> [1 2]\r\n> fire call\r\n> 0.8414709848078965\r\n\r\nHowever, if we run \r\n\r\n`python test_fire.py test [1,2]`\r\n\r\nit outputs whole lot of things. What is wrong?\r\n\r\n> [1 2]\r\n> direct call\r\n> [1 2]\r\n> fire call\r\n> Type:            ndarray\r\n> String form:     [1 2]\r\n> File:            d:\\intelpython35\\lib\\site-packages\\numpy\\__init__.py\r\n> Class docstring: ndarray(shape, dtype=float, buffer=None, offset=0,\r\n>         strides=None, order=None)\r\n> \r\n> An array object represents a multidimensional, homogeneous array\r\n> of fixed-size items.  An associated data-type object describes the\r\n> format of each element in the array (its byte-order, how many bytes it\r\n> occupies in memory, whether it is an integer, a floating point number,\r\n> or something else, etc.)\r\n> \r\n> Arrays should be constructed using `array`, `zeros` or `empty` (refer\r\n> to the See Also section below).  The parameters given here refer to\r\n> a low-level method (`ndarray(...)`) for instantiating an array.\r\n> \r\n> For more information, refer to the `numpy` module and examine the\r\n> the methods and attributes of an array.\r\n> \r\n> Parameters\r\n> ----------\r\n> (for the __new__ method; see Notes below)\r\n> \r\n> shape : tuple of ints\r\n>     Shape of created array.\r\n> dtype : data-type, optional\r\n>     Any object that can be interpreted as a numpy data type.\r\n> buffer : object exposing buffer interface, optional\r\n>     Used to fill the array with data.\r\n> offset : int, optional\r\n>     Offset of array data in buffer.\r\n> strides : tuple of ints, optional\r\n>     Strides of data in memory.\r\n> order : {'C', 'F'}, optional\r\n>     Row-major (C-style) or column-major (Fortran-style) order.\r\n> \r\n> Attributes\r\n> ----------\r\n> T : ndarray\r\n>     Transpose of the array.\r\n> data : buffer\r\n>     The array's elements, in memory.\r\n> dtype : dtype object\r\n>     Describes the format of the elements in the array.\r\n> flags : dict\r\n>     Dictionary containing information related to memory use, e.g.,\r\n>     'C_CONTIGUOUS', 'OWNDATA', 'WRITEABLE', etc.\r\n> flat : numpy.flatiter object\r\n>     Flattened version of the array as an iterator.  The iterator\r\n>     allows assignments, e.g., ``x.flat = 3`` (See `ndarray.flat` for\r\n>     assignment examples; TODO).\r\n> imag : ndarray\r\n>     Imaginary part of the array.\r\n> real : ndarray\r\n>     Real part of the array.\r\n> size : int\r\n>     Number of elements in the array.\r\n> itemsize : int\r\n>     The memory use of each array element in bytes.\r\n> nbytes : int\r\n>     The total number of bytes required to store the array data,\r\n>     i.e., ``itemsize * size``.\r\n> ndim : int\r\n>     The array's number of dimensions.\r\n> shape : tuple of ints\r\n>     Shape of the array.\r\n> strides : tuple of ints\r\n>     The step-size required to move from one element to the next in\r\n>     memory. For example, a contiguous ``(3, 4)`` array of type\r\n>     ``int16`` in C-order has strides ``(8, 2)``.  This implies that\r\n>     to move from element to element in memory requires jumps of 2 bytes.\r\n>     To move from row-to-row, one needs to jump 8 bytes at a time\r\n>     (``2 * 4``).\r\n> ctypes : ctypes object\r\n>     Class containing properties of the array needed for interaction\r\n>     with ctypes.\r\n> base : ndarray\r\n>     If the array is a view into another array, that array is its `base`\r\n>     (unless that array is also a view).  The `base` array is where the\r\n>     array data is actually stored.\r\n> \r\n> See Also\r\n> --------\r\n> array : Construct an array.\r\n> zeros : Create an array, each element of which is zero.\r\n> empty : Create an array, but leave its allocated memory unchanged (i.e.,\r\n>         it contains \"garbage\").\r\n> dtype : Create a data-type.\r\n> \r\n> Notes\r\n> -----\r\n> There are two modes of creating an array using ``__new__``:\r\n> \r\n> 1. If `buffer` is None, then only `shape`, `dtype`, and `order`\r\n>    are used.\r\n> 2. If `buffer` is an object exposing the buffer interface, then\r\n>    all keywords are interpreted.\r\n> \r\n> No ``__init__`` method is needed because the array is fully initialized\r\n> after the ``__new__`` method.\r\n> \r\n> Examples\r\n> --------\r\n> These examples illustrate the low-level `ndarray` constructor.  Refer\r\n> to the `See Also` section above for easier ways of constructing an\r\n> ndarray.\r\n> \r\n> First mode, `buffer` is None:\r\n> \r\n> >>> np.ndarray(shape=(2,2), dtype=float, order='F')\r\n> array([[ -1.13698227e+002,   4.25087011e-303],\r\n>        [  2.88528414e-306,   3.27025015e-309]])         #random\r\n> \r\n> Second mode:\r\n> \r\n> >>> np.ndarray((2,), buffer=np.array([1,2,3]),\r\n> ...            offset=np.int_().itemsize,\r\n> ...            dtype=int) # offset = 1*itemsize, i.e. skip first element\r\n> array([2, 3])\r\n> Length:          2\r\n> \r\n> Usage:           python_fire.py test '[1,2]'\r\n>                  python_fire.py test '[1,2]' T\r\n>                  python_fire.py test '[1,2]' all\r\n>                  python_fire.py test '[1,2]' any\r\n>                  python_fire.py test '[1,2]' argmax\r\n>                  python_fire.py test '[1,2]' argmin\r\n>                  python_fire.py test '[1,2]' argpartition\r\n>                  python_fire.py test '[1,2]' argsort\r\n>                  python_fire.py test '[1,2]' astype\r\n>                  python_fire.py test '[1,2]' base\r\n>                  python_fire.py test '[1,2]' byteswap\r\n>                  python_fire.py test '[1,2]' choose\r\n>                  python_fire.py test '[1,2]' clip\r\n>                  python_fire.py test '[1,2]' compress\r\n>                  python_fire.py test '[1,2]' conj\r\n>                  python_fire.py test '[1,2]' conjugate\r\n>                  python_fire.py test '[1,2]' copy\r\n>                  python_fire.py test '[1,2]' ctypes\r\n>                  python_fire.py test '[1,2]' cumprod\r\n>                  python_fire.py test '[1,2]' cumsum\r\n>                  python_fire.py test '[1,2]' data\r\n>                  python_fire.py test '[1,2]' diagonal\r\n>                  python_fire.py test '[1,2]' dot\r\n>                  python_fire.py test '[1,2]' dtype\r\n>                  python_fire.py test '[1,2]' dump\r\n>                  python_fire.py test '[1,2]' dumps\r\n>                  python_fire.py test '[1,2]' fill\r\n>                  python_fire.py test '[1,2]' flags\r\n>                  python_fire.py test '[1,2]' flat\r\n>                  python_fire.py test '[1,2]' flatten\r\n>                  python_fire.py test '[1,2]' getfield\r\n>                  python_fire.py test '[1,2]' imag\r\n>                  python_fire.py test '[1,2]' item\r\n>                  python_fire.py test '[1,2]' itemset\r\n>                  python_fire.py test '[1,2]' itemsize\r\n>                  python_fire.py test '[1,2]' max\r\n>                  python_fire.py test '[1,2]' mean\r\n>                  python_fire.py test '[1,2]' min\r\n>                  python_fire.py test '[1,2]' nbytes\r\n>                  python_fire.py test '[1,2]' ndim\r\n>                  python_fire.py test '[1,2]' newbyteorder\r\n>                  python_fire.py test '[1,2]' nonzero\r\n>                  python_fire.py test '[1,2]' partition\r\n>                  python_fire.py test '[1,2]' prod\r\n>                  python_fire.py test '[1,2]' ptp\r\n>                  python_fire.py test '[1,2]' put\r\n>                  python_fire.py test '[1,2]' ravel\r\n>                  python_fire.py test '[1,2]' real\r\n>                  python_fire.py test '[1,2]' repeat\r\n>                  python_fire.py test '[1,2]' reshape\r\n>                  python_fire.py test '[1,2]' resize\r\n>                  python_fire.py test '[1,2]' round\r\n>                  python_fire.py test '[1,2]' searchsorted\r\n>                  python_fire.py test '[1,2]' setfield\r\n>                  python_fire.py test '[1,2]' setflags\r\n>                  python_fire.py test '[1,2]' shape\r\n>                  python_fire.py test '[1,2]' size\r\n>                  python_fire.py test '[1,2]' sort\r\n>                  python_fire.py test '[1,2]' squeeze\r\n>                  python_fire.py test '[1,2]' std\r\n>                  python_fire.py test '[1,2]' strides\r\n>                  python_fire.py test '[1,2]' sum\r\n>                  python_fire.py test '[1,2]' swapaxes\r\n>                  python_fire.py test '[1,2]' take\r\n>                  python_fire.py test '[1,2]' tobytes\r\n>                  python_fire.py test '[1,2]' tofile\r\n>                  python_fire.py test '[1,2]' tolist\r\n>                  python_fire.py test '[1,2]' tostring\r\n>                  python_fire.py test '[1,2]' trace\r\n>                  python_fire.py test '[1,2]' transpose\r\n>                  python_fire.py test '[1,2]' var\r\n>                  python_fire.py test '[1,2]' view", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/90", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/90/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/90/events", "html_url": "https://github.com/google/python-fire/issues/90", "id": 248236557, "node_id": "MDU6SXNzdWUyNDgyMzY1NTc=", "number": 90, "title": "Wrong value is passed when variable name is in quotes", "user": {"login": "feinsteinben", "id": 11245062, "node_id": "MDQ6VXNlcjExMjQ1MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/11245062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feinsteinben", "html_url": "https://github.com/feinsteinben", "followers_url": "https://api.github.com/users/feinsteinben/followers", "following_url": "https://api.github.com/users/feinsteinben/following{/other_user}", "gists_url": "https://api.github.com/users/feinsteinben/gists{/gist_id}", "starred_url": "https://api.github.com/users/feinsteinben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feinsteinben/subscriptions", "organizations_url": "https://api.github.com/users/feinsteinben/orgs", "repos_url": "https://api.github.com/users/feinsteinben/repos", "events_url": "https://api.github.com/users/feinsteinben/events{/privacy}", "received_events_url": "https://api.github.com/users/feinsteinben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-06T09:37:39Z", "updated_at": "2017-08-08T05:06:23Z", "closed_at": "2017-08-08T05:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "consider the following code:\r\n```python\r\n# file: bug.py\r\n\r\nfrom __future__ import print_function\r\nimport fire\r\n\r\ndef main(x):\r\n    print(x)\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(main)\r\n```\r\n\r\nwhen running `python bug.py \"--x=abc\"` it prints `abc` (I'd expect `--x=abc`). **I think it's a bug**.\r\nwhen running `python bug.py \"--x abc\"` it prints `--x abc` as expected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/89", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/89/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/89/events", "html_url": "https://github.com/google/python-fire/issues/89", "id": 246911010, "node_id": "MDU6SXNzdWUyNDY5MTEwMTA=", "number": 89, "title": "Calling fire on a class + a static function", "user": {"login": "cBournhonesque", "id": 8112632, "node_id": "MDQ6VXNlcjgxMTI2MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8112632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cBournhonesque", "html_url": "https://github.com/cBournhonesque", "followers_url": "https://api.github.com/users/cBournhonesque/followers", "following_url": "https://api.github.com/users/cBournhonesque/following{/other_user}", "gists_url": "https://api.github.com/users/cBournhonesque/gists{/gist_id}", "starred_url": "https://api.github.com/users/cBournhonesque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cBournhonesque/subscriptions", "organizations_url": "https://api.github.com/users/cBournhonesque/orgs", "repos_url": "https://api.github.com/users/cBournhonesque/repos", "events_url": "https://api.github.com/users/cBournhonesque/events{/privacy}", "received_events_url": "https://api.github.com/users/cBournhonesque/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836578, "node_id": "MDU6TGFiZWw1NDQ4MzY1Nzg=", "url": "https://api.github.com/repos/google/python-fire/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-31T23:13:18Z", "updated_at": "2017-08-03T18:03:43Z", "closed_at": "2017-08-03T18:03:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a file examply.py:\r\n\r\n```python\r\n\r\ndef function1(param = 3):\r\n\r\nclass A:\r\n    def __init__(self, param = 1):\r\n    def function2(self, param = 2):\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(...)\r\n```\r\n\r\nHow can I expose both objects to Fire?\r\nIf Ido `fire.Fire(A)` and `fire.Fire(function1)`, then calling `python example.py --param=2` does not have a clear behavior. (does it call the function or the class?)\r\nEven if the arguments did not have the same name, and I only called the argument of `function1`, would Fire automatically instantiate an object of class A even if only wanted to call the function function1?\r\n\r\nOr is the only solution to call fire.Fire() to expose everything, and then to call\r\n`python example.py function1 4`\r\n`python example.py A function2 5` ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/86", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/86/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/86/events", "html_url": "https://github.com/google/python-fire/issues/86", "id": 238049883, "node_id": "MDU6SXNzdWUyMzgwNDk4ODM=", "number": 86, "title": " Receive date parameter conversion confusion[Receive Operation not String]", "user": {"login": "shaozhipeng", "id": 5379087, "node_id": "MDQ6VXNlcjUzNzkwODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5379087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaozhipeng", "html_url": "https://github.com/shaozhipeng", "followers_url": "https://api.github.com/users/shaozhipeng/followers", "following_url": "https://api.github.com/users/shaozhipeng/following{/other_user}", "gists_url": "https://api.github.com/users/shaozhipeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaozhipeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaozhipeng/subscriptions", "organizations_url": "https://api.github.com/users/shaozhipeng/orgs", "repos_url": "https://api.github.com/users/shaozhipeng/repos", "events_url": "https://api.github.com/users/shaozhipeng/events{/privacy}", "received_events_url": "https://api.github.com/users/shaozhipeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-23T06:10:24Z", "updated_at": "2017-06-23T23:04:23Z", "closed_at": "2017-06-23T06:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "import fire\r\nclass Test:\r\n    def __init__(self):\r\n        print('\u521d\u59cb\u5316\u6210\u529f')\r\n\r\n    def stat(self, daystr='1970-01-01'):\r\n        print('\u5f00\u59cb--%s' % daystr)\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(Test)\r\n\r\n\u547d\u4ee4\u884c\u6d4b\u8bd5\u5e76\u8f93\u51fa\u7ed3\u679c\uff1a\r\n$ python3 tests.py stat 2016-12-10\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--1994\r\n$ python3 tests.py stat 2016-12-09\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--2016-12-09\r\n$ python3 tests.py stat 2017-01-09\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--2017-01-09\r\n$ python3 tests.py stat 2016/12/10\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--2016/12/10\r\n$ python3 tests.py stat xxx\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--xxx\r\n$ python3 tests.py stat \u4e2d\u6587\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--\u4e2d\u6587\r\n$ python3 tests.py stat 2017-12-10\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--1995\r\n$ python3 tests.py stat 2017-12-11\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--1994\r\n$ python3 tests.py stat 2017-12-12\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--1993\r\n$ python3 tests.py stat 2016-12-12\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--1992\r\n$ python3 tests.py stat 1995-10-10\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--1975\r\n$ python3 tests.py stat 1995-11-10\r\n\u521d\u59cb\u5316\u6210\u529f\r\n\u5f00\u59cb--1974", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/84", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/84/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/84/events", "html_url": "https://github.com/google/python-fire/issues/84", "id": 234098212, "node_id": "MDU6SXNzdWUyMzQwOTgyMTI=", "number": 84, "title": "Better handling of argument name typos", "user": {"login": "gerardlouw", "id": 1428904, "node_id": "MDQ6VXNlcjE0Mjg5MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1428904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerardlouw", "html_url": "https://github.com/gerardlouw", "followers_url": "https://api.github.com/users/gerardlouw/followers", "following_url": "https://api.github.com/users/gerardlouw/following{/other_user}", "gists_url": "https://api.github.com/users/gerardlouw/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerardlouw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerardlouw/subscriptions", "organizations_url": "https://api.github.com/users/gerardlouw/orgs", "repos_url": "https://api.github.com/users/gerardlouw/repos", "events_url": "https://api.github.com/users/gerardlouw/events{/privacy}", "received_events_url": "https://api.github.com/users/gerardlouw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-06-07T05:41:42Z", "updated_at": "2017-12-04T23:04:31Z", "closed_at": "2017-12-04T22:01:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using this minimal example of a Python-fire CLI:\r\n\r\n```python\r\nimport fire\r\n\r\ndef f(my_arg):\r\n    print(my_arg)\r\n\r\nfire.Fire(my_arg)\r\n```\r\n\r\nThis is the result I get:\r\n\r\n```bash\r\n\u279c  ~ python example.py --my-arg=hello\r\nhello\r\n\u279c  ~ python example.py --myarg=hello\r\n--myarg=hello\r\n```\r\n\r\nAs you can see, a typo in the argument leads to unexpected behaviour, which can be really hard to debug.\r\n\r\nI would suggest never treating an argument matching `--[a-zA-Z0-9_-]+` as positional, without some sort of escaping by the user (perhaps similar to the escaping you require to avoid parsing ints, etc.).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/83", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/83/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/83/events", "html_url": "https://github.com/google/python-fire/issues/83", "id": 233409894, "node_id": "MDU6SXNzdWUyMzM0MDk4OTQ=", "number": 83, "title": "All possible usages are printed out when an object was returned", "user": {"login": "k4ml", "id": 116353, "node_id": "MDQ6VXNlcjExNjM1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/116353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k4ml", "html_url": "https://github.com/k4ml", "followers_url": "https://api.github.com/users/k4ml/followers", "following_url": "https://api.github.com/users/k4ml/following{/other_user}", "gists_url": "https://api.github.com/users/k4ml/gists{/gist_id}", "starred_url": "https://api.github.com/users/k4ml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k4ml/subscriptions", "organizations_url": "https://api.github.com/users/k4ml/orgs", "repos_url": "https://api.github.com/users/k4ml/repos", "events_url": "https://api.github.com/users/k4ml/events{/privacy}", "received_events_url": "https://api.github.com/users/k4ml/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-04T03:49:10Z", "updated_at": "2019-07-26T04:15:33Z", "closed_at": "2019-07-26T04:15:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:-\r\n\r\n```\r\nclass Stuff(object):\r\n    def do_this(self):\r\n        pass\r\n    \r\n    ... many more methods\r\n\r\ndef testx():\r\n    return Stuff()\r\n\r\ndef main():\r\n    fire.Fire({\r\n        'testx': testx,\r\n    })\r\n```\r\nAnd when executed, all the methods from the returned object was printed out:-\r\n\r\n```\r\nType:        Stuff\r\nString form: <Stuff object at 0x7f43202a1be0>\r\nFile:        ~/xxx/cli.py\r\n\r\nUsage:       cli testx\r\n             cli testx do-this\r\n```\r\nThis mean the real output from the command no longer helpful as it way far to the top of the console (you have to scroll up to see the command real output). There must be a way to disable printing out the returned value as that the least concern from cli tools.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/81", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/81/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/81/events", "html_url": "https://github.com/google/python-fire/issues/81", "id": 233206213, "node_id": "MDU6SXNzdWUyMzMyMDYyMTM=", "number": 81, "title": "Add licence to release", "user": {"login": "CJ-Wright", "id": 6740689, "node_id": "MDQ6VXNlcjY3NDA2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6740689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CJ-Wright", "html_url": "https://github.com/CJ-Wright", "followers_url": "https://api.github.com/users/CJ-Wright/followers", "following_url": "https://api.github.com/users/CJ-Wright/following{/other_user}", "gists_url": "https://api.github.com/users/CJ-Wright/gists{/gist_id}", "starred_url": "https://api.github.com/users/CJ-Wright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CJ-Wright/subscriptions", "organizations_url": "https://api.github.com/users/CJ-Wright/orgs", "repos_url": "https://api.github.com/users/CJ-Wright/repos", "events_url": "https://api.github.com/users/CJ-Wright/events{/privacy}", "received_events_url": "https://api.github.com/users/CJ-Wright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-06-02T14:47:27Z", "updated_at": "2017-07-24T16:27:37Z", "closed_at": "2017-07-24T16:27:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would it be possible to add the licence to the release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/80", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/80/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/80/events", "html_url": "https://github.com/google/python-fire/issues/80", "id": 233186386, "node_id": "MDU6SXNzdWUyMzMxODYzODY=", "number": 80, "title": "New Release (v0.1.2)", "user": {"login": "CJ-Wright", "id": 6740689, "node_id": "MDQ6VXNlcjY3NDA2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6740689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CJ-Wright", "html_url": "https://github.com/CJ-Wright", "followers_url": "https://api.github.com/users/CJ-Wright/followers", "following_url": "https://api.github.com/users/CJ-Wright/following{/other_user}", "gists_url": "https://api.github.com/users/CJ-Wright/gists{/gist_id}", "starred_url": "https://api.github.com/users/CJ-Wright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CJ-Wright/subscriptions", "organizations_url": "https://api.github.com/users/CJ-Wright/orgs", "repos_url": "https://api.github.com/users/CJ-Wright/repos", "events_url": "https://api.github.com/users/CJ-Wright/events{/privacy}", "received_events_url": "https://api.github.com/users/CJ-Wright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-02T13:39:20Z", "updated_at": "2017-08-29T17:44:45Z", "closed_at": "2017-08-29T17:44:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would it be possible to get a new release (now that iypthon is not a dep?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/79", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/79/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/79/events", "html_url": "https://github.com/google/python-fire/issues/79", "id": 231316114, "node_id": "MDU6SXNzdWUyMzEzMTYxMTQ=", "number": 79, "title": "How to successfuly parse list of string ip address?", "user": {"login": "tongorz", "id": 28854458, "node_id": "MDQ6VXNlcjI4ODU0NDU4", "avatar_url": "https://avatars2.githubusercontent.com/u/28854458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongorz", "html_url": "https://github.com/tongorz", "followers_url": "https://api.github.com/users/tongorz/followers", "following_url": "https://api.github.com/users/tongorz/following{/other_user}", "gists_url": "https://api.github.com/users/tongorz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongorz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongorz/subscriptions", "organizations_url": "https://api.github.com/users/tongorz/orgs", "repos_url": "https://api.github.com/users/tongorz/repos", "events_url": "https://api.github.com/users/tongorz/events{/privacy}", "received_events_url": "https://api.github.com/users/tongorz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-25T11:38:25Z", "updated_at": "2017-05-30T17:53:21Z", "closed_at": "2017-05-30T17:53:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "--args [a,b] can be parsed into list of string correctly.\r\n--args [192.168.1.1,192.168.1.2] is parsed to string.\r\nI also tried '[192.168.1.1, 192.168.1.2]', '[\"192.168.1.1\",\"192.168.1.2\"]', all failed\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/74", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/74/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/74/events", "html_url": "https://github.com/google/python-fire/issues/74", "id": 230595418, "node_id": "MDU6SXNzdWUyMzA1OTU0MTg=", "number": 74, "title": "Support the option to provide a user-defined output formatter", "user": {"login": "monkut", "id": 1135529, "node_id": "MDQ6VXNlcjExMzU1Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1135529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monkut", "html_url": "https://github.com/monkut", "followers_url": "https://api.github.com/users/monkut/followers", "following_url": "https://api.github.com/users/monkut/following{/other_user}", "gists_url": "https://api.github.com/users/monkut/gists{/gist_id}", "starred_url": "https://api.github.com/users/monkut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monkut/subscriptions", "organizations_url": "https://api.github.com/users/monkut/orgs", "repos_url": "https://api.github.com/users/monkut/repos", "events_url": "https://api.github.com/users/monkut/events{/privacy}", "received_events_url": "https://api.github.com/users/monkut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-23T06:00:01Z", "updated_at": "2019-07-26T19:01:30Z", "closed_at": "2019-07-26T19:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "On trying out fire, one of the first things I wanted was a method to define an output formatter.\r\n\r\nAt the moment it appears there is a single static formatter defined in `_PrintResult()`.\r\n\r\nConsider making an option in Fire:\r\n\r\n`fire.Fire(OBJECT, formatter=myformatter)`\r\n\r\n> at the moment this is a \"formatter\" and \"outputter\".  format and output should probably be separated...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/73", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/73/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/73/events", "html_url": "https://github.com/google/python-fire/issues/73", "id": 230420157, "node_id": "MDU6SXNzdWUyMzA0MjAxNTc=", "number": 73, "title": "Non-zero exit codes", "user": {"login": "gerardlouw", "id": 1428904, "node_id": "MDQ6VXNlcjE0Mjg5MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1428904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerardlouw", "html_url": "https://github.com/gerardlouw", "followers_url": "https://api.github.com/users/gerardlouw/followers", "following_url": "https://api.github.com/users/gerardlouw/following{/other_user}", "gists_url": "https://api.github.com/users/gerardlouw/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerardlouw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerardlouw/subscriptions", "organizations_url": "https://api.github.com/users/gerardlouw/orgs", "repos_url": "https://api.github.com/users/gerardlouw/repos", "events_url": "https://api.github.com/users/gerardlouw/events{/privacy}", "received_events_url": "https://api.github.com/users/gerardlouw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-22T14:47:32Z", "updated_at": "2017-05-29T19:25:03Z", "closed_at": "2017-05-29T18:55:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like a way to make my CLI exit with a custom, non-zero code when using Python-fire.\r\n\r\nOne option might be to have a specific value you could return from your Fire function in order to exit with a particular code. This could be accomplished with, say, a simple ExitCode class wrapping an integer.\r\n\r\nPossibly a better idea is to have a special exception class, e.g. ExitCodeError, such that raising an instance of a that class (or a subclass thereof), modifies the exit code of the CLI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/72", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/72/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/72/events", "html_url": "https://github.com/google/python-fire/issues/72", "id": 230200001, "node_id": "MDU6SXNzdWUyMzAyMDAwMDE=", "number": 72, "title": "Outdated PyPi version", "user": {"login": "WillieCubed", "id": 16641570, "node_id": "MDQ6VXNlcjE2NjQxNTcw", "avatar_url": "https://avatars2.githubusercontent.com/u/16641570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WillieCubed", "html_url": "https://github.com/WillieCubed", "followers_url": "https://api.github.com/users/WillieCubed/followers", "following_url": "https://api.github.com/users/WillieCubed/following{/other_user}", "gists_url": "https://api.github.com/users/WillieCubed/gists{/gist_id}", "starred_url": "https://api.github.com/users/WillieCubed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WillieCubed/subscriptions", "organizations_url": "https://api.github.com/users/WillieCubed/orgs", "repos_url": "https://api.github.com/users/WillieCubed/repos", "events_url": "https://api.github.com/users/WillieCubed/events{/privacy}", "received_events_url": "https://api.github.com/users/WillieCubed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-21T06:14:34Z", "updated_at": "2017-05-21T06:56:38Z", "closed_at": "2017-05-21T06:56:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears installing the fire module using pip produces an [outdated version](https://pypi.python.org/pypi/fire/0.1.0) of the library. I've run into an error identical to #6, and after checking the result of that, it appears the update that fixed #6 can only be installed by cloning the repository and running setup.py, as suggested.\r\n\r\nFYI, I was using fire version 0.1.0 with Python 3.5.2 when installed using pip.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/70", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/70/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/70/events", "html_url": "https://github.com/google/python-fire/issues/70", "id": 230190571, "node_id": "MDU6SXNzdWUyMzAxOTA1NzE=", "number": 70, "title": "Add python -m fire?", "user": {"login": "d33tah", "id": 295322, "node_id": "MDQ6VXNlcjI5NTMyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/295322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d33tah", "html_url": "https://github.com/d33tah", "followers_url": "https://api.github.com/users/d33tah/followers", "following_url": "https://api.github.com/users/d33tah/following{/other_user}", "gists_url": "https://api.github.com/users/d33tah/gists{/gist_id}", "starred_url": "https://api.github.com/users/d33tah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d33tah/subscriptions", "organizations_url": "https://api.github.com/users/d33tah/orgs", "repos_url": "https://api.github.com/users/d33tah/repos", "events_url": "https://api.github.com/users/d33tah/events{/privacy}", "received_events_url": "https://api.github.com/users/d33tah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-21T01:42:46Z", "updated_at": "2020-03-06T23:54:37Z", "closed_at": "2020-03-06T23:54:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n% python -m fire lxml.html\r\n/home/d33tah/virtualenv/bin/python: No module named fire.__main__; 'fire' is a package and cannot be directly executed\r\n```\r\n\r\nPerhaps it's worth adding?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/69", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/69/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/69/events", "html_url": "https://github.com/google/python-fire/issues/69", "id": 229824032, "node_id": "MDU6SXNzdWUyMjk4MjQwMzI=", "number": 69, "title": "Clearly document what python versions are supported (ie, python 3 support?)", "user": {"login": "jeffwidman", "id": 483314, "node_id": "MDQ6VXNlcjQ4MzMxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffwidman", "html_url": "https://github.com/jeffwidman", "followers_url": "https://api.github.com/users/jeffwidman/followers", "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}", "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions", "organizations_url": "https://api.github.com/users/jeffwidman/orgs", "repos_url": "https://api.github.com/users/jeffwidman/repos", "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffwidman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-18T22:38:15Z", "updated_at": "2017-08-28T21:46:07Z", "closed_at": "2017-08-28T19:13:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not seeing anything on the readme. Perhaps add [shields.io](https://shields.io) badges that are automatically generated from the pypi listing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/68", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/68/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/68/events", "html_url": "https://github.com/google/python-fire/issues/68", "id": 229185130, "node_id": "MDU6SXNzdWUyMjkxODUxMzA=", "number": 68, "title": "Why so slow?", "user": {"login": "john9631", "id": 2434319, "node_id": "MDQ6VXNlcjI0MzQzMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2434319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john9631", "html_url": "https://github.com/john9631", "followers_url": "https://api.github.com/users/john9631/followers", "following_url": "https://api.github.com/users/john9631/following{/other_user}", "gists_url": "https://api.github.com/users/john9631/gists{/gist_id}", "starred_url": "https://api.github.com/users/john9631/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john9631/subscriptions", "organizations_url": "https://api.github.com/users/john9631/orgs", "repos_url": "https://api.github.com/users/john9631/repos", "events_url": "https://api.github.com/users/john9631/events{/privacy}", "received_events_url": "https://api.github.com/users/john9631/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-16T22:17:57Z", "updated_at": "2017-05-17T23:27:53Z", "closed_at": "2017-05-17T23:27:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great concept and I like how it works except for one thing I noticed - it's very slow to initialize especially with Python3.\r\n\r\ntime python fireexpt.py \r\n\r\nyeilds 0.3 seconds for python 2 and 0.74 seconds for python 3 where fireexpt does nothing but import fire and fire.Fire() if name is main.  There is no code to evaluate.   Actually its as slow if you just import fire and pass.\r\n\r\nAm I missing something, is this likely to continue, or can it be significantly improved?   I love the tool and have been trying to see what's happening - it seems to be generating lots of classes for no obvious reason. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/66", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/66/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/66/events", "html_url": "https://github.com/google/python-fire/issues/66", "id": 222463864, "node_id": "MDU6SXNzdWUyMjI0NjM4NjQ=", "number": 66, "title": "only print usage when running without arguments", "user": {"login": "rmminusrslash", "id": 2519360, "node_id": "MDQ6VXNlcjI1MTkzNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2519360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmminusrslash", "html_url": "https://github.com/rmminusrslash", "followers_url": "https://api.github.com/users/rmminusrslash/followers", "following_url": "https://api.github.com/users/rmminusrslash/following{/other_user}", "gists_url": "https://api.github.com/users/rmminusrslash/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmminusrslash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmminusrslash/subscriptions", "organizations_url": "https://api.github.com/users/rmminusrslash/orgs", "repos_url": "https://api.github.com/users/rmminusrslash/repos", "events_url": "https://api.github.com/users/rmminusrslash/events{/privacy}", "received_events_url": "https://api.github.com/users/rmminusrslash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-18T15:55:46Z", "updated_at": "2018-11-30T19:21:36Z", "closed_at": "2017-05-24T19:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "My colleagues keep thinking there is a stacktrace or unexpected behavior when they read output like:\r\n\r\n`Type:        function\r\nString form: <function foo at 0x7fe9d8e47b90>\r\nFile:        path/to/file\r\nLine:        149\r\n`\r\n\r\nI propose to only print the usage string. I can make a pull request if you like the idea.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/62", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/62/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/62/events", "html_url": "https://github.com/google/python-fire/issues/62", "id": 221690473, "node_id": "MDU6SXNzdWUyMjE2OTA0NzM=", "number": 62, "title": "Address pylint's no-else-return errors", "user": {"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-13T21:44:06Z", "updated_at": "2017-05-21T08:20:38Z", "closed_at": "2017-05-21T08:20:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A new version of pylint came out today that looks for no-else-return violations, and we have a few such violations. This ticket is to either fix those violations or turn off no-else-return checking.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/61", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/61/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/61/events", "html_url": "https://github.com/google/python-fire/issues/61", "id": 221341338, "node_id": "MDU6SXNzdWUyMjEzNDEzMzg=", "number": 61, "title": "Establish a comms channel for contributors", "user": {"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-12T17:53:38Z", "updated_at": "2019-07-26T19:00:12Z", "closed_at": "2019-07-26T19:00:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This ticket is for discussing + establishing a comms channel for contributors.\r\n\r\nPerhaps [Gitter](https://gitter.im/google/python-fire) is the best way to do this.\r\n@saurabhkpatel suggested Slack, but with Slack you need to specify a list of domains from which to allow email addresses, whereas I want anyone to be able to join the conversation. There are ways around this like [slackin](https://github.com/rauchg/slackin), but at a glance it looks like I'd have to commit to maintaining a server running slackin indefinitely for this to be a viable workaround, which I'm not prepared to do.\r\n\r\n+@jtratner @nealmcb @saurabhkpatel @jgarst @keatinge @r0fls as an FYI.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/57", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/57/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/57/events", "html_url": "https://github.com/google/python-fire/issues/57", "id": 220837979, "node_id": "MDU6SXNzdWUyMjA4Mzc5Nzk=", "number": 57, "title": "travis ci failing with advent of ipython 6.0.0rc1", "user": {"login": "nealmcb", "id": 119472, "node_id": "MDQ6VXNlcjExOTQ3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/119472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nealmcb", "html_url": "https://github.com/nealmcb", "followers_url": "https://api.github.com/users/nealmcb/followers", "following_url": "https://api.github.com/users/nealmcb/following{/other_user}", "gists_url": "https://api.github.com/users/nealmcb/gists{/gist_id}", "starred_url": "https://api.github.com/users/nealmcb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nealmcb/subscriptions", "organizations_url": "https://api.github.com/users/nealmcb/orgs", "repos_url": "https://api.github.com/users/nealmcb/repos", "events_url": "https://api.github.com/users/nealmcb/events{/privacy}", "received_events_url": "https://api.github.com/users/nealmcb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-11T04:41:31Z", "updated_at": "2017-05-25T06:11:11Z", "closed_at": "2017-05-21T21:27:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "ipython 6.0.0rc1 was released 7 hours ago:\r\n\r\n* https://github.com/ipython/ipython/releases\r\n\r\nNow when building fire, travis CI finds that version, which doesn't support Python 2.7, and complains, e.g. at https://travis-ci.org/nealmcb/python-fire/jobs/220816890\r\n\r\n```\r\n...\r\nProcessing dependencies for fire==0.1.0\r\nSearching for ipython\r\nReading https://pypi.python.org/simple/ipython/\r\nDownloading https://pypi.python.org/packages/76/46/c505c48d264715136edde1a1960f9158133e34c03bbfe4c955dbc5948ce4/ipython-6.0.0rc1.tar.gz#md5=e57acb5fabd9f18b739de35a1f00eac5\r\nBest match: ipython 6.0.0rc1\r\nProcessing ipython-6.0.0rc1.tar.gz\r\nWriting /tmp/easy_install-Aw9UOD/ipython-6.0.0rc1/setup.cfg\r\nRunning ipython-6.0.0rc1/setup.py -q bdist_egg --dist-dir /tmp/easy_install-Aw9UOD/ipython-6.0.0rc1/egg-dist-tmp-JVscrS\r\nIPython 6.0+ does not support Python 2.6, 2.7, 3.0, 3.1, or 3.2.\r\n...\r\nerror: Setup script exited with 1\r\nThe command \"python setup.py develop\" failed and exited with 1 during .\r\n```\r\n\r\nTime for a dependency change. For a lot of projects....", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/56", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/56/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/56/events", "html_url": "https://github.com/google/python-fire/issues/56", "id": 220656298, "node_id": "MDU6SXNzdWUyMjA2NTYyOTg=", "number": 56, "title": "Completions for fish shell", "user": {"login": "JelteF", "id": 1162278, "node_id": "MDQ6VXNlcjExNjIyNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1162278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JelteF", "html_url": "https://github.com/JelteF", "followers_url": "https://api.github.com/users/JelteF/followers", "following_url": "https://api.github.com/users/JelteF/following{/other_user}", "gists_url": "https://api.github.com/users/JelteF/gists{/gist_id}", "starred_url": "https://api.github.com/users/JelteF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JelteF/subscriptions", "organizations_url": "https://api.github.com/users/JelteF/orgs", "repos_url": "https://api.github.com/users/JelteF/repos", "events_url": "https://api.github.com/users/JelteF/events{/privacy}", "received_events_url": "https://api.github.com/users/JelteF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836575, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzU=", "url": "https://api.github.com/repos/google/python-fire/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 544836576, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzY=", "url": "https://api.github.com/repos/google/python-fire/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-10T14:08:01Z", "updated_at": "2019-04-17T15:35:11Z", "closed_at": "2018-05-21T20:46:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be really great to have completions generated for the fish shell: https://fishshell.com/docs/current/commands.html#complete", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/53", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/53/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/53/events", "html_url": "https://github.com/google/python-fire/issues/53", "id": 220338306, "node_id": "MDU6SXNzdWUyMjAzMzgzMDY=", "number": 53, "title": "Accept argv list in calls to Fire", "user": {"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-07T21:53:59Z", "updated_at": "2017-07-21T21:27:49Z", "closed_at": "2017-07-21T21:27:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently Fire() uses sys.argv. It should also be able to accept an argv passed in directly to the call to Fire.\r\n\r\nSome considerations:\r\n- Currently Fire() accepts an undocumented argument `command` which is a string. Do we still want to accept a string (if yes, do we continue using the name `command` or do we just use the name `argv`?\r\n- If we remove the `command` argument, we can use BigQuery to find all instances of people using this argument and send them a pull request fixing it. It's undocumented, so 1) I don't think we have any obligation to do this, and 2) there shouldn't be many people using this argument, so sending the pull requests shouldn't be too big a job.\r\n- Does the passed in argv need argv[0] to be the program name?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/51", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/51/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/51/events", "html_url": "https://github.com/google/python-fire/issues/51", "id": 220024009, "node_id": "MDU6SXNzdWUyMjAwMjQwMDk=", "number": 51, "title": "Better Windows CLI name", "user": {"login": "g-berthiaume", "id": 19377511, "node_id": "MDQ6VXNlcjE5Mzc3NTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/19377511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g-berthiaume", "html_url": "https://github.com/g-berthiaume", "followers_url": "https://api.github.com/users/g-berthiaume/followers", "following_url": "https://api.github.com/users/g-berthiaume/following{/other_user}", "gists_url": "https://api.github.com/users/g-berthiaume/gists{/gist_id}", "starred_url": "https://api.github.com/users/g-berthiaume/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g-berthiaume/subscriptions", "organizations_url": "https://api.github.com/users/g-berthiaume/orgs", "repos_url": "https://api.github.com/users/g-berthiaume/repos", "events_url": "https://api.github.com/users/g-berthiaume/events{/privacy}", "received_events_url": "https://api.github.com/users/g-berthiaume/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-04-06T20:32:38Z", "updated_at": "2017-05-24T19:30:46Z", "closed_at": "2017-05-24T19:30:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows user here.\r\nCould that be possible to add a configuration to modify the default CLI name ? Right now, depending on the user way to interact with the script, it can become noisy. \r\n\r\n>Note: \r\nThe following figures all use a script base on the calculator example. \r\nPython 2.7.13\r\nWindows 7 OS\r\n\r\ne.g. When launching a script directly with a .py, it can become noisy:\r\n![fig1](https://cloud.githubusercontent.com/assets/19377511/24773271/78507400-1ae2-11e7-99e6-74e510bdcbc3.PNG)\r\n\r\ne.g. A worse case senario with `CLI_FIRE_A_BIG_NAME_FOR_SCRIPT.py` in a directory far far away.\r\n![fig3](https://cloud.githubusercontent.com/assets/19377511/24773539/a2b347f8-1ae3-11e7-9585-916d087786a4.PNG)\r\n\r\ne.g. In the best case scenario, it can be attenuated if you have setup Python.exe in your environment variable. \r\n![fig2](https://cloud.githubusercontent.com/assets/19377511/24773272/78538442-1ae2-11e7-964a-de316f284ff8.PNG)\r\n\r\nQuestions:\r\n\r\n1. Is it possible to do ?\r\n2. I didn't find any doc about configuring the \"help when error\" display (except the docstring) is this in development  ? \r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/47", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/47/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/47/events", "html_url": "https://github.com/google/python-fire/issues/47", "id": 218244849, "node_id": "MDU6SXNzdWUyMTgyNDQ4NDk=", "number": 47, "title": "Limit member exposition from an instance", "user": {"login": "cletomartin", "id": 835780, "node_id": "MDQ6VXNlcjgzNTc4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/835780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cletomartin", "html_url": "https://github.com/cletomartin", "followers_url": "https://api.github.com/users/cletomartin/followers", "following_url": "https://api.github.com/users/cletomartin/following{/other_user}", "gists_url": "https://api.github.com/users/cletomartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cletomartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cletomartin/subscriptions", "organizations_url": "https://api.github.com/users/cletomartin/orgs", "repos_url": "https://api.github.com/users/cletomartin/repos", "events_url": "https://api.github.com/users/cletomartin/events{/privacy}", "received_events_url": "https://api.github.com/users/cletomartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836578, "node_id": "MDU6TGFiZWw1NDQ4MzY1Nzg=", "url": "https://api.github.com/repos/google/python-fire/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-30T15:55:57Z", "updated_at": "2017-04-03T12:01:13Z", "closed_at": "2017-03-31T17:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nfirstly I would like to thank you guys for this great library.\r\n\r\nI would like to know if there is a way for limiting the members I can return to Fire in my functions. Let me give you an example about how I (half) resolved this:\r\n\r\n```\r\nimport fire\r\n\r\nclass Obj:\r\n    def __init__(self):\r\n        self.safe = 'safe!'\r\n\r\n    def dangerous(self):\r\n        print('dangerous!')\r\n\r\nclass App:\r\n    def show(self):\r\n        obj = Obj()\r\n        return {'safe': obj.safe}\r\n\r\nif __name__ == '__main__':\r\n    fire.Fire(App, name='app')\r\n```\r\n\r\nThis makes the job as I expect, although the `--help` functionality is not as friendly as I would need since, without any parameter, `show` returns the dictionary (as one could expect):\r\n\r\n```\r\n$ python app.py show \r\nsafe: safe!\r\n```\r\nBut, instead, I would need to have a behaviour similar to the following:\r\n\r\n```\r\n$ python app.py show --help\r\nUsage:       app show \r\n             app show safe\r\n```\r\n\r\nIs it possible to enforce to show the help output if no parameter is provided to `show` instead of evaluating all it? Maybe using a dictionary for restricting the access to some members is not the right way to do it. I have also tried to return a `fire.Fire` instance but then I lose the execution chain in the usage (i.e. `app show ...`).\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/46", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/46/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/46/events", "html_url": "https://github.com/google/python-fire/issues/46", "id": 217965552, "node_id": "MDU6SXNzdWUyMTc5NjU1NTI=", "number": 46, "title": "Lazy import IPython [Remove IPython as a required dependency: Part 1]", "user": {"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836575, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzU=", "url": "https://api.github.com/repos/google/python-fire/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-03-29T18:22:44Z", "updated_at": "2017-03-31T17:32:32Z", "closed_at": "2017-03-31T17:32:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "IPython is only used in two places:\r\n\r\n- inspectutils.py: only uses a single function from IPython (IPython.core.oinspect.Inspector().info), so maybe we could just strip that one function out of IPython or write an equivalent function from scratch. I would want permission from the IPython folks before doing the former.\r\n- interact.py: uses IPython for the --interactive flag, but this should really be optional. You'll notice the unused _EmbedCode function in interact.py. (https://github.com/google/python-fire/blob/master/fire/interact.py#L89) The reason that's there is to eventually enable Fire to be used without IPython as a required dependency.\r\n\r\nThis task is to lazily import IPython in the two places it's used.\r\n\r\n--------\r\n\r\nThis is Part 1 of the plan to remove IPython as a required dependency.\r\nThe plan is outlined [here](https://github.com/google/python-fire/issues/7#issuecomment-284266940).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/42", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/42/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/42/events", "html_url": "https://github.com/google/python-fire/issues/42", "id": 217652797, "node_id": "MDU6SXNzdWUyMTc2NTI3OTc=", "number": 42, "title": "json cannot serialize circular references", "user": {"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836571, "node_id": "MDU6TGFiZWw1NDQ4MzY1NzE=", "url": "https://api.github.com/repos/google/python-fire/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-28T18:34:22Z", "updated_at": "2017-04-07T17:18:54Z", "closed_at": "2017-04-07T17:18:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here's a minimal example of the failure:\r\n```\r\nimport fire\r\nx = {}\r\nx['y'] = x\r\nfire.Fire()\r\n```\r\n\r\nRunning `python example.py` gives this traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"example.py\", line 4, in <module>\r\n    fire.Fire()\r\n  File \"/Users/dbieber/virtualenvs/_/lib/python2.7/site-packages/fire/core.py\", line 145, in Fire\r\n    _PrintResult(component_trace, verbose=component_trace.verbose)\r\n  File \"/Users/dbieber/virtualenvs/_/lib/python2.7/site-packages/fire/core.py\", line 181, in _PrintResult\r\n    print(_DictAsString(result, verbose))\r\n  File \"/Users/dbieber/virtualenvs/_/lib/python2.7/site-packages/fire/core.py\", line 210, in _DictAsString\r\n    key=str(key) + ':', value=_OneLineResult(value))\r\n  File \"/Users/dbieber/virtualenvs/_/lib/python2.7/site-packages/fire/core.py\", line 230, in _OneLineResult\r\n    return json.dumps(result)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py\", line 243, in dumps\r\n    return _default_encoder.encode(obj)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py\", line 207, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py\", line 270, in iterencode\r\n    return _iterencode(o, 0)\r\nValueError: Circular reference detected\r\n```\r\n\r\nThe problem is that `_DictAsString` tries to serialize [each key of] the dict using json, but json cannot serialize dicts w/ circular references.\r\n\r\nWe'll need a different serialization technique to support this case.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/37", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/37/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/37/events", "html_url": "https://github.com/google/python-fire/issues/37", "id": 217360350, "node_id": "MDU6SXNzdWUyMTczNjAzNTA=", "number": 37, "title": "Check pylintrc in travis.", "user": {"login": "dbieber", "id": 892765, "node_id": "MDQ6VXNlcjg5Mjc2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/892765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbieber", "html_url": "https://github.com/dbieber", "followers_url": "https://api.github.com/users/dbieber/followers", "following_url": "https://api.github.com/users/dbieber/following{/other_user}", "gists_url": "https://api.github.com/users/dbieber/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbieber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbieber/subscriptions", "organizations_url": "https://api.github.com/users/dbieber/orgs", "repos_url": "https://api.github.com/users/dbieber/repos", "events_url": "https://api.github.com/users/dbieber/events{/privacy}", "received_events_url": "https://api.github.com/users/dbieber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-27T20:08:54Z", "updated_at": "2017-03-28T16:02:44Z", "closed_at": "2017-03-28T16:02:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Travis should catch and report lint errors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/34", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/34/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/34/events", "html_url": "https://github.com/google/python-fire/issues/34", "id": 217025505, "node_id": "MDU6SXNzdWUyMTcwMjU1MDU=", "number": 34, "title": "Question regarding passing arguments using fire", "user": {"login": "venkatraman07", "id": 26642361, "node_id": "MDQ6VXNlcjI2NjQyMzYx", "avatar_url": "https://avatars2.githubusercontent.com/u/26642361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/venkatraman07", "html_url": "https://github.com/venkatraman07", "followers_url": "https://api.github.com/users/venkatraman07/followers", "following_url": "https://api.github.com/users/venkatraman07/following{/other_user}", "gists_url": "https://api.github.com/users/venkatraman07/gists{/gist_id}", "starred_url": "https://api.github.com/users/venkatraman07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/venkatraman07/subscriptions", "organizations_url": "https://api.github.com/users/venkatraman07/orgs", "repos_url": "https://api.github.com/users/venkatraman07/repos", "events_url": "https://api.github.com/users/venkatraman07/events{/privacy}", "received_events_url": "https://api.github.com/users/venkatraman07/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 544836578, "node_id": "MDU6TGFiZWw1NDQ4MzY1Nzg=", "url": "https://api.github.com/repos/google/python-fire/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-26T04:03:16Z", "updated_at": "2017-03-28T20:16:35Z", "closed_at": "2017-03-28T20:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI,\r\nI have the following question regarding passing of arguments. Please clarify me.\r\nI have 3 classes A B and C. Class C has a method which consumes an argument say arg3. Class A takes arg1 and arg2 as arguments. When I try to pass the 3rd argument to the class C I get an error saying \"can not consume argument for that method\"\r\nexample code below\r\na.py\r\n-----\r\n```\r\nclass A (object):\r\n    def __init__(self, arg1, arg2):\r\n         self.b = B(arg1, arg2)\r\n         self.arg1 = arg1\r\n         self.arg2 = arg2\r\ndef main():\r\n  fire.Fire()\r\nif __name__ == \"__main__\":\r\n   main()\r\n```\r\n--------------------------------\r\nb.py\r\n----\r\n```\r\nclass B():\r\n    def __init__(self, arg1, arg2):\r\n          self._arg1 = arg1\r\n          self._arg2 = arg2\r\n          self._imp = self._get_imp()\r\n    \r\n     def _get_imp(self):\r\n           \r\n           if (arg1 == arg1):\r\n                imp = C()\r\n           else \r\n                imp = D()\r\n           return imp\r\n\r\n     def __getattr__(self, name):\r\n          obj = getattr(self._imp, name)\r\n          return obj\r\n```\r\n----------------------------\r\nc.py\r\n----\r\n```\r\nclass C():\r\n    def create(self, arg3):\r\n        print(\"argument 3 %d\" %arg3\r\n\r\n```\r\n----------------\r\nif I give the following command I get an error saying 'Could not consume arg', 'create'. This create is the\r\nmethod in class C() which expects an argument. FYI\r\n\r\n`python a.py B --arg1 arg1 --arg2 arg2 create 3` \r\n\r\narg1 and arg2 are consumed by B and arg3 needs to be consumed by class C but for some reason I am not able to pass arg3 to create method in C.\r\n\r\n1) How can I pass arguments to methods in classes when I call multiple classes using fire.\r\n\r\n2) if there are no arguments for the class C method then its able to print the message.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/python-fire/issues/29", "repository_url": "https://api.github.com/repos/google/python-fire", "labels_url": "https://api.github.com/repos/google/python-fire/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/google/python-fire/issues/29/comments", "events_url": "https://api.github.com/repos/google/python-fire/issues/29/events", "html_url": "https://github.com/google/python-fire/issues/29", "id": 216182118, "node_id": "MDU6SXNzdWUyMTYxODIxMTg=", "number": 29, "title": "Use fire without editing code directly", "user": {"login": "jtratner", "id": 1598379, "node_id": "MDQ6VXNlcjE1OTgzNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtratner", "html_url": "https://github.com/jtratner", "followers_url": "https://api.github.com/users/jtratner/followers", "following_url": "https://api.github.com/users/jtratner/following{/other_user}", "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions", "organizations_url": "https://api.github.com/users/jtratner/orgs", "repos_url": "https://api.github.com/users/jtratner/repos", "events_url": "https://api.github.com/users/jtratner/events{/privacy}", "received_events_url": "https://api.github.com/users/jtratner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2017-03-22T19:29:09Z", "updated_at": "2020-03-06T23:54:01Z", "closed_at": "2020-03-06T23:54:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently you have to add something like this to the end of your file just to mess around with fire:\r\n\r\n```\r\nif __name__ == '__main__':\r\n    fire.Fire()\r\n```\r\nand then run with\r\n\r\n```\r\npython path/to/code.py\r\n```\r\n\r\nBut it'd be neat if instead you could just do\r\n\r\n```\r\nfire path/to/code.py\r\n```\r\n\r\nand that does equivalent of `exec` appending the ifmain statement to the end.\r\n\r\nNot sure *how* to do it - I know kernprof does some magic to inject into builtins before exec'ing code.  (or maybe you get a code object back from exit) - but this would make fire even better as a debugging tool as well.", "performed_via_github_app": null, "score": 1.0}]}