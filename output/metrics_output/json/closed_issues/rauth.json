{"total_count": 88, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/litl/rauth/issues/203", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/203/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/203/events", "html_url": "https://github.com/litl/rauth/issues/203", "id": 313394580, "node_id": "MDU6SXNzdWUzMTMzOTQ1ODA=", "number": 203, "title": "Cannot complete Oauth", "user": {"login": "chidindu-ogbonna", "id": 25098427, "node_id": "MDQ6VXNlcjI1MDk4NDI3", "avatar_url": "https://avatars3.githubusercontent.com/u/25098427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chidindu-ogbonna", "html_url": "https://github.com/chidindu-ogbonna", "followers_url": "https://api.github.com/users/chidindu-ogbonna/followers", "following_url": "https://api.github.com/users/chidindu-ogbonna/following{/other_user}", "gists_url": "https://api.github.com/users/chidindu-ogbonna/gists{/gist_id}", "starred_url": "https://api.github.com/users/chidindu-ogbonna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chidindu-ogbonna/subscriptions", "organizations_url": "https://api.github.com/users/chidindu-ogbonna/orgs", "repos_url": "https://api.github.com/users/chidindu-ogbonna/repos", "events_url": "https://api.github.com/users/chidindu-ogbonna/events{/privacy}", "received_events_url": "https://api.github.com/users/chidindu-ogbonna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-11T16:16:28Z", "updated_at": "2018-04-11T16:32:19Z", "closed_at": "2018-04-11T16:32:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/195", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/195/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/195/events", "html_url": "https://github.com/litl/rauth/issues/195", "id": 202355261, "node_id": "MDU6SXNzdWUyMDIzNTUyNjE=", "number": 195, "title": "Twitter Authentication Failing on Python 3.6", "user": {"login": "TwoBitAlchemist", "id": 7992169, "node_id": "MDQ6VXNlcjc5OTIxNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7992169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TwoBitAlchemist", "html_url": "https://github.com/TwoBitAlchemist", "followers_url": "https://api.github.com/users/TwoBitAlchemist/followers", "following_url": "https://api.github.com/users/TwoBitAlchemist/following{/other_user}", "gists_url": "https://api.github.com/users/TwoBitAlchemist/gists{/gist_id}", "starred_url": "https://api.github.com/users/TwoBitAlchemist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TwoBitAlchemist/subscriptions", "organizations_url": "https://api.github.com/users/TwoBitAlchemist/orgs", "repos_url": "https://api.github.com/users/TwoBitAlchemist/repos", "events_url": "https://api.github.com/users/TwoBitAlchemist/events{/privacy}", "received_events_url": "https://api.github.com/users/TwoBitAlchemist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-22T02:44:02Z", "updated_at": "2017-08-25T02:37:40Z", "closed_at": "2017-01-22T19:58:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following works on Python 3.5\r\n\r\n    service = OAuth1Service(\r\n        name='twitter',\r\n        consumer_key=os.environ['TWITTER_APP_KEY'],\r\n        consumer_secret=os.environ['TWITTER_APP_SECRET'],\r\n        request_token_url='https://api.twitter.com/oauth/request_token',\r\n        authorize_url='https://api.twitter.com/oauth/authorize',\r\n        access_token_url='https://api.twitter.com/oauth/access_token',\r\n        base_url='https://api.twitter.com/1.1/'\r\n    )\r\n\r\n    request_token = service.get_request_token(params={'oauth_callback': callback_url})\r\n    service.get_authorize_url(request_token[0])\r\n\r\n    # in callback\r\n    oauth_session = service.get_auth_session(\r\n        request_token[0], request_token[1],\r\n        data={'oauth_verifier': oauth_verifier}\r\n    )\r\n\r\nOn Python 3.6 I get:\r\n\r\n      File \"/project/app/auth/providers.py\", line 77, in callback\r\n    data={'oauth_verifier': oauth_verifier}\r\n      File \"/project/lib/python3.6/site-packages/rauth/service.py\", line 359, in get_auth_session\r\n    **kwargs)\r\n      File \"/project/lib/python3.6/site-packages/rauth/service.py\", line 332, in get_access_token\r\n    process_token_request(r, decoder, key_token, key_token_secret)\r\n      File \"/project/lib/python3.6/site-packages/rauth/service.py\", line 24, in process_token_request\r\n    raise KeyError(PROCESS_TOKEN_ERROR.format(key=bad_key, raw=r.content))\r\n    KeyError: \"Decoder failed to handle oauth_token_secret with data as returned by provider. A different decoder may be needed. Provider returned: b'oauth_token=[some_auth_token]&oauth_token_secret=[some_secret]&user_id=[number]&screen_name=[name]&x_auth_expires=0'\"\r\n\r\nBoth using rauth 0.7.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/189", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/189/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/189/events", "html_url": "https://github.com/litl/rauth/issues/189", "id": 125290942, "node_id": "MDU6SXNzdWUxMjUyOTA5NDI=", "number": 189, "title": "Ability to overwrite the callback_url on Oauth1Service ", "user": {"login": "jmgamboa", "id": 3579209, "node_id": "MDQ6VXNlcjM1NzkyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3579209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmgamboa", "html_url": "https://github.com/jmgamboa", "followers_url": "https://api.github.com/users/jmgamboa/followers", "following_url": "https://api.github.com/users/jmgamboa/following{/other_user}", "gists_url": "https://api.github.com/users/jmgamboa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmgamboa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmgamboa/subscriptions", "organizations_url": "https://api.github.com/users/jmgamboa/orgs", "repos_url": "https://api.github.com/users/jmgamboa/repos", "events_url": "https://api.github.com/users/jmgamboa/events{/privacy}", "received_events_url": "https://api.github.com/users/jmgamboa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-06T23:54:06Z", "updated_at": "2016-01-07T19:02:48Z", "closed_at": "2016-01-07T18:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Callback_url is specified in your apps.twitter.com console. does rauth provide the ability to over ride this callback and specify your own?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/188", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/188/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/188/events", "html_url": "https://github.com/litl/rauth/issues/188", "id": 124822873, "node_id": "MDU6SXNzdWUxMjQ4MjI4NzM=", "number": 188, "title": "rauth Oauthsession1 with twitters' verify credentials api ", "user": {"login": "jmgamboa", "id": 3579209, "node_id": "MDQ6VXNlcjM1NzkyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3579209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmgamboa", "html_url": "https://github.com/jmgamboa", "followers_url": "https://api.github.com/users/jmgamboa/followers", "following_url": "https://api.github.com/users/jmgamboa/following{/other_user}", "gists_url": "https://api.github.com/users/jmgamboa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmgamboa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmgamboa/subscriptions", "organizations_url": "https://api.github.com/users/jmgamboa/orgs", "repos_url": "https://api.github.com/users/jmgamboa/repos", "events_url": "https://api.github.com/users/jmgamboa/events{/privacy}", "received_events_url": "https://api.github.com/users/jmgamboa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-04T19:34:33Z", "updated_at": "2016-01-06T23:25:50Z", "closed_at": "2016-01-06T23:25:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using rauth to identify the authenticating user, using twitter's verify credentials endpoint as specified on their docs. The access token and secret come from my frontend.  When I set my consumer credentials, (my apps creds), I can get a valid response, returning the apps owner, however setting the authenticating user's creds, I will get a 401. Am I misusing this rauth-client inteface?  \nAm i supposed to set my app's credentials to in OAuth1Session? If that is the case, where do I pass the authenticating user's token and secret?\n\nclass TwitterAuth():\n    \"\"\"\n    twitter auth class\n    \"\"\"\n    # api client for oauth1 \n    tw_rauth = rauth.OAuth1Session(\n                    \"xxxxxxxxxxxxxxxxxx\",\n                    \"xxxxxxxxxxxxxxxxxx\",\n                    access_token=\"\",\n                    access_token_secret=\"\",\n                    )\n    profile = {}\n\n```\ndef get_profile(self, auth_user_access, auth_user_secret):\n    \"\"\"\n    get profile using verify Credentials\n    verify credentials will return the user given\n    of an access token and secret\n    \"\"\"\n    self.tw_rauth.access_token = auth_user_access\n    self.tw_rauth.access_token_secret = auth_user_secret\n    profile = self.tw_rauth.get('https://api.twitter.com/1.1/account/verify_credentials.json',\n            params={'format': 'json'})\n    if profile.status_code == 200:\n        self.profile = profile.json()\n       return self.profile\n    else:\n        raise ValidationError('Credentials Provided Were Not Valid')\n```\n\nnew_user = TwitterAuth().get_profile(auth_user_access, auth_user_secret)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/187", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/187/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/187/events", "html_url": "https://github.com/litl/rauth/issues/187", "id": 123013689, "node_id": "MDU6SXNzdWUxMjMwMTM2ODk=", "number": 187, "title": "Using rauth for twitter Oauth1 get_raw_access_token and get_auth_session", "user": {"login": "jmgamboa", "id": 3579209, "node_id": "MDQ6VXNlcjM1NzkyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3579209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmgamboa", "html_url": "https://github.com/jmgamboa", "followers_url": "https://api.github.com/users/jmgamboa/followers", "following_url": "https://api.github.com/users/jmgamboa/following{/other_user}", "gists_url": "https://api.github.com/users/jmgamboa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmgamboa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmgamboa/subscriptions", "organizations_url": "https://api.github.com/users/jmgamboa/orgs", "repos_url": "https://api.github.com/users/jmgamboa/repos", "events_url": "https://api.github.com/users/jmgamboa/events{/privacy}", "received_events_url": "https://api.github.com/users/jmgamboa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-12-18T19:43:03Z", "updated_at": "2016-01-06T23:24:00Z", "closed_at": "2016-01-06T23:24:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys. Really great module. its a shame twitter cannot move to oauth2. Anyway, I'm\nusing rauth for twitters Oauth1Service client.  I keep getting a 401 on get_raw_access_token and when i try using get_auth_session and OAuth request: Invalid oauth_verifier parameter. i followed the docs as mentioned and do not seem to be doing out of the ordinary. I even tried explicitly passing the request method as 'GET'\n\n```\n    twitter = OAuth1Service(\n            consumer_key='somethingconsumerkey',\n            consumer_secret='somethingsecret',\n            name='twitter',\n            access_token_url='https://api.twitter.com/oauth/access_token',\n            authorize_url='https://api.twitter.com/oauth/authorize',\n            request_token_url='https://api.twitter.com/oauth/request_token',\n            base_url='https://api.twitter.com/1/')\n    request_token, request_token_secret = twitter.get_request_token()\n    authorize_url = twitter.get_authorize_url(request_token)\n    twitter.get_access_token(request_token, request_token_secret, method='GET')\n     # or \n    twitter.get_raw_access_token(request_token, request_token_secret)\n    # or \n    twitter.get_auth_session(request_token, request_token_secret)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/180", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/180/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/180/events", "html_url": "https://github.com/litl/rauth/issues/180", "id": 74337641, "node_id": "MDU6SXNzdWU3NDMzNzY0MQ==", "number": 180, "title": "Multiple requests failing ", "user": {"login": "josuebrunel", "id": 1620640, "node_id": "MDQ6VXNlcjE2MjA2NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1620640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josuebrunel", "html_url": "https://github.com/josuebrunel", "followers_url": "https://api.github.com/users/josuebrunel/followers", "following_url": "https://api.github.com/users/josuebrunel/following{/other_user}", "gists_url": "https://api.github.com/users/josuebrunel/gists{/gist_id}", "starred_url": "https://api.github.com/users/josuebrunel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josuebrunel/subscriptions", "organizations_url": "https://api.github.com/users/josuebrunel/orgs", "repos_url": "https://api.github.com/users/josuebrunel/repos", "events_url": "https://api.github.com/users/josuebrunel/events{/privacy}", "received_events_url": "https://api.github.com/users/josuebrunel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-08T11:50:53Z", "updated_at": "2015-05-11T08:05:57Z", "closed_at": "2015-05-11T08:05:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\nI'm writting a library ([myql](https://github.com/josuebrunel/myql)) which use _rauth_ , but everytime i run more than one request, i get this error even though i used **_[header_auth=True](https://github.com/josuebrunel/myql/blob/testing/myql/myql.py#L89)**_\n\n``` python\n[2015-05-08 13:45:49,823 DEBUG] [root.yoauth.token_is_valid] ELAPSED TIME : 2245.65489984\n\n[2015-05-08 13:45:49,824 DEBUG] [root.yoauth.token_is_valid] TOKEN IS STILL VALID\n\n[2015-05-08 13:45:49,827 DEBUG] [root.yoauth.token_is_valid] ELAPSED TIME : 2245.65891886\n\n[2015-05-08 13:45:49,828 DEBUG] [root.yoauth.token_is_valid] TOKEN IS STILL VALID\n\n[2015-05-08 13:45:49,833 INFO] [requests.packages.urllib3.connectionpool.connectionpool._new_conn] Starting new HTTP connection (1): query.yahooapis.com\n\n[2015-05-08 13:45:50,196 DEBUG] [requests.packages.urllib3.connectionpool.connectionpool._make_request] \"GET /v1/yql?format=json&q=select+%2A+from+fantasysports.teams.roster++where+team_key%3D%27mlb.l.1328.t.1%27+and+date%3D%272015-05-05%27&callback=&jsonCompact=False&diagnostics=False&debug=False HTTP/1.1\" 200 None\n\n1 Y! - Funston 0 11\n[2015-05-08 13:45:50,287 DEBUG] [root.yoauth.token_is_valid] ELAPSED TIME : 2246.11847591\n\n[2015-05-08 13:45:50,287 DEBUG] [root.yoauth.token_is_valid] TOKEN IS STILL VALID\n\nTraceback (most recent call last):\n  File \"test.py\", line 25, in <module>\n    response = yql.select('fantasysports.teams.roster').where(['team_key','=',team],['date','=',year])\n  File \"/home/yosuke/.virtualenvs/test/local/lib/python2.7/site-packages/myql/myql.py\", line 216, in where\n    response = self.executeQuery(payload)\n  File \"/home/yosuke/.virtualenvs/test/local/lib/python2.7/site-packages/myql/myql.py\", line 89, in executeQuery\n    response = self.oauth.session.get(self.url, params=payload, header_auth=True)\n  File \"/home/yosuke/.virtualenvs/test/local/lib/python2.7/site-packages/requests/sessions.py\", line 477, in get\n    return self.request('GET', url, **kwargs)\n  File \"/home/yosuke/.virtualenvs/test/local/lib/python2.7/site-packages/rauth/session.py\", line 210, in request\n    return super(OAuth1Session, self).request(method, url, **req_kwargs)\n  File \"/home/yosuke/.virtualenvs/test/local/lib/python2.7/site-packages/requests/sessions.py\", line 465, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/home/yosuke/.virtualenvs/test/local/lib/python2.7/site-packages/requests/sessions.py\", line 573, in send\n    r = adapter.send(request, **kwargs)\n  File \"/home/yosuke/.virtualenvs/test/local/lib/python2.7/site-packages/requests/adapters.py\", line 415, in send\n    raise ConnectionError(err, request=request)\nrequests.exceptions.ConnectionError: ('Connection aborted.', ResponseNotReady())\n```\n\nThis is my code\n\n``` python\nimport sys\nimport myql\nfrom myql.contrib.auth import YOAuth\n\nif '__main__' == __name__:\n\n    oauth = YOAuth(None, None, from_file='credentials.json')\n\n    yql = myql.MYQL(format='json',oauth=oauth)\n\n    teams = ('mlb.l.1328.t.1','mlb.l.1328.t.2')\n    year = '2015-05-05'\n\n    for team in teams :\n\n        response = yql.select('fantasysports.teams.roster').where(['team_key','=',team],['date','=',year])\n        if not response.status_code == 200:\n            sys.exit(1)\n\n        data = response.json()\n        current_team = data['query']['results']['team']\n        print current_team['team_id'],current_team['name'],current_team['number_of_trades'],current_team['number_of_moves']\n```\n\nI know this one has already been fixed, i can't figure out what's going wrong.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/178", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/178/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/178/events", "html_url": "https://github.com/litl/rauth/issues/178", "id": 60776538, "node_id": "MDU6SXNzdWU2MDc3NjUzOA==", "number": 178, "title": "car2go API unsupported", "user": {"login": "mhenry", "id": 870766, "node_id": "MDQ6VXNlcjg3MDc2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/870766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhenry", "html_url": "https://github.com/mhenry", "followers_url": "https://api.github.com/users/mhenry/followers", "following_url": "https://api.github.com/users/mhenry/following{/other_user}", "gists_url": "https://api.github.com/users/mhenry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhenry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhenry/subscriptions", "organizations_url": "https://api.github.com/users/mhenry/orgs", "repos_url": "https://api.github.com/users/mhenry/repos", "events_url": "https://api.github.com/users/mhenry/events{/privacy}", "received_events_url": "https://api.github.com/users/mhenry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-12T06:19:16Z", "updated_at": "2016-02-26T07:20:05Z", "closed_at": "2016-02-26T07:19:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to connect to the [car2go API via OAuth 1.0/a](https://code.google.com/p/car2go/wiki/oauth) and I'm getting an `oauth_problem=\"signature_invalid\"`. Below is the code I'm using to connect:\n\n```\nfrom rauth import OAuth1Service\n\ncar2go = OAuth1Service(\n    name='car2go',\n    consumer_key='REDACTED',\n    consumer_secret='REDACTED',\n    request_token_url='https://www.car2go.com/api/reqtoken',\n    authorize_url='https://www.car2go.com/api/authorize',\n    access_token_url='https://www.car2go.com/api/accesstoken',\n    base_url='http://www.car2go.com/api/v2.1/')\n\nrequest_token, request_token_secret = car2go.get_request_token(params={'oauth_callback': 'oob'})\n```\n\nThe `oauth_callback` param is required for this API and I'm wondering it causes any problems with the calculation of the signature.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/173", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/173/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/173/events", "html_url": "https://github.com/litl/rauth/issues/173", "id": 47199381, "node_id": "MDU6SXNzdWU0NzE5OTM4MQ==", "number": 173, "title": "Depencies for rauth", "user": {"login": "williamjmorenor", "id": 3522386, "node_id": "MDQ6VXNlcjM1MjIzODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3522386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williamjmorenor", "html_url": "https://github.com/williamjmorenor", "followers_url": "https://api.github.com/users/williamjmorenor/followers", "following_url": "https://api.github.com/users/williamjmorenor/following{/other_user}", "gists_url": "https://api.github.com/users/williamjmorenor/gists{/gist_id}", "starred_url": "https://api.github.com/users/williamjmorenor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williamjmorenor/subscriptions", "organizations_url": "https://api.github.com/users/williamjmorenor/orgs", "repos_url": "https://api.github.com/users/williamjmorenor/repos", "events_url": "https://api.github.com/users/williamjmorenor/events{/privacy}", "received_events_url": "https://api.github.com/users/williamjmorenor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-29T20:28:31Z", "updated_at": "2014-12-17T00:38:27Z", "closed_at": "2014-12-17T00:38:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\n\nI have packaged rauth as python-rauth in Fedora and I want to know is only request is needed in runtime or I need to add some more as dependency\n\nhttps://admin.fedoraproject.org/pkgdb/package/python-rauth/\n\nI have build python-rauth for Epel7 but python-request was retired from Epel7 so python-rauth will to so there is a broken depency :(\n\nhttps://admin.fedoraproject.org/pkgdb/package/python-requests/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/172", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/172/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/172/events", "html_url": "https://github.com/litl/rauth/issues/172", "id": 46621376, "node_id": "MDU6SXNzdWU0NjYyMTM3Ng==", "number": 172, "title": "Wrong request signature", "user": {"login": "HenriChataing", "id": 5756004, "node_id": "MDQ6VXNlcjU3NTYwMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5756004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenriChataing", "html_url": "https://github.com/HenriChataing", "followers_url": "https://api.github.com/users/HenriChataing/followers", "following_url": "https://api.github.com/users/HenriChataing/following{/other_user}", "gists_url": "https://api.github.com/users/HenriChataing/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenriChataing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenriChataing/subscriptions", "organizations_url": "https://api.github.com/users/HenriChataing/orgs", "repos_url": "https://api.github.com/users/HenriChataing/repos", "events_url": "https://api.github.com/users/HenriChataing/events{/privacy}", "received_events_url": "https://api.github.com/users/HenriChataing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-23T12:57:37Z", "updated_at": "2014-12-17T15:35:47Z", "closed_at": "2014-12-17T15:35:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The keys in the `params` argument of request construction in module `requests` can have `None` values, which will be ignored in the request query parameters.\nHowever, this behaviour is not taken into account in the computation of the request signature, which leads to requests being rejected by the server.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/170", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/170/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/170/events", "html_url": "https://github.com/litl/rauth/issues/170", "id": 44249707, "node_id": "MDU6SXNzdWU0NDI0OTcwNw==", "number": 170, "title": "Rauth doesn't work with requests_cache", "user": {"login": "jharmn", "id": 1305160, "node_id": "MDQ6VXNlcjEzMDUxNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1305160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jharmn", "html_url": "https://github.com/jharmn", "followers_url": "https://api.github.com/users/jharmn/followers", "following_url": "https://api.github.com/users/jharmn/following{/other_user}", "gists_url": "https://api.github.com/users/jharmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jharmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jharmn/subscriptions", "organizations_url": "https://api.github.com/users/jharmn/orgs", "repos_url": "https://api.github.com/users/jharmn/repos", "events_url": "https://api.github.com/users/jharmn/events{/privacy}", "received_events_url": "https://api.github.com/users/jharmn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-29T01:52:46Z", "updated_at": "2014-09-29T19:24:44Z", "closed_at": "2014-09-29T19:24:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use requests_cache to utilize the monkey patched Session, to maintain a persisted store for responses, Rauth OAuth1Session doesn't seem to play nice.\n\nAssuming keys have been set elsewhere...\n\n```\nimport requests\nimport requests_cache\nrequests_cache.install_cache('test-cache', backend='sqlite', expire_after=300)\nfrom rauth.session import OAuth1Session\n\nsession = OAuth1Session(consumer_key=CONSUMER_KEY,\n        consumer_secret=CONSUMER_SECRET,\n        access_token=ACCESS_TOKEN,\n        access_token_secret=ACCESS_SECRET)\nr = session.get(\"http://www.paperbackswap.com/api/v2/index.php\", params={\"RequestType\": \"MemberData\"});\n```\n\nResults in:\n\n```\n  File \"run.py\", line 5, in <module>\n    from rauth.session import OAuth1Session\n  File \"/Users/jasharmon/src/oauth_1.0a_tool/venv/lib/python2.7/site-packages/rauth/__init__.py\", line 22, in <module>\n    from .service import OAuth1Service, OAuth2Service, OflyService\n  File \"/Users/jasharmon/src/oauth_1.0a_tool/venv/lib/python2.7/site-packages/rauth/service.py\", line 10, in <module>\n    from rauth.session import OAuth1Session, OAuth2Session, OflySession\n  File \"/Users/jasharmon/src/oauth_1.0a_tool/venv/lib/python2.7/site-packages/rauth/session.py\", line 28, in <module>\n    class RauthSession(Session):\n  File \"/Users/jasharmon/src/oauth_1.0a_tool/venv/lib/python2.7/site-packages/rauth/session.py\", line 29, in RauthSession\n    __attrs__ = Session.__attrs__ + ['service']\nAttributeError: 'function' object has no attribute '__attrs__'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/168", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/168/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/168/events", "html_url": "https://github.com/litl/rauth/issues/168", "id": 44208936, "node_id": "MDU6SXNzdWU0NDIwODkzNg==", "number": 168, "title": "OAuth 1.0 _normalize_request_parameters() Missing Encode on oauth_params", "user": {"login": "walexnelson", "id": 1845463, "node_id": "MDQ6VXNlcjE4NDU0NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1845463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walexnelson", "html_url": "https://github.com/walexnelson", "followers_url": "https://api.github.com/users/walexnelson/followers", "following_url": "https://api.github.com/users/walexnelson/following{/other_user}", "gists_url": "https://api.github.com/users/walexnelson/gists{/gist_id}", "starred_url": "https://api.github.com/users/walexnelson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walexnelson/subscriptions", "organizations_url": "https://api.github.com/users/walexnelson/orgs", "repos_url": "https://api.github.com/users/walexnelson/repos", "events_url": "https://api.github.com/users/walexnelson/events{/privacy}", "received_events_url": "https://api.github.com/users/walexnelson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-28T03:08:26Z", "updated_at": "2014-10-10T04:11:23Z", "closed_at": "2014-10-10T04:11:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "# TypeError: unorderable types: str() < bytes()\n- Source File: oauth.py\n- Function: _normalize_request_parameters()\n\nLet's say I have an authenticated session but when I call session.get(url, params=my_custom_params) I get the error listed above. Walking through the debug a bit and it's because the function called out encodes the custom params to bytes, but doesn't encode any params that were created when the Service was set up so I end up having normalized parameters that are both byte and str. \n\nSo you get a `TypeError: unorderable types: str() < bytes()` when the list is sorted. \n\nShouldn't both sets of params be checked and encoded as needed like so? Let me know if this is by design and I need to so something different on the front end as I hand values off to rauth. I tweaked the encoding check on oauth_params and it worked without issue.\n\n```\n    all_normalized = []\n    for t in normalized:\n        k, v = t\n        if is_basestring(v) and not isinstance(v, bytes):\n            v = v.encode('utf-8')\n        all_normalized += [(k, v)]\n\n    # add in the params from oauth_params for signing\n    for k, v in oauth_params.items():\n        if is_basestring(v) and not isinstance(v, bytes): # Added this check\n            v = v.encode('utf-8')\n        if (k, v) in all_normalized:  # pragma: no cover\n            continue\n        all_normalized += [(k, v)]\n\n    all_normalized.sort()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/164", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/164/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/164/events", "html_url": "https://github.com/litl/rauth/issues/164", "id": 37739597, "node_id": "MDU6SXNzdWUzNzczOTU5Nw==", "number": 164, "title": "[OAuth 1] additional params not correctly encoded", "user": {"login": "02strich", "id": 44383, "node_id": "MDQ6VXNlcjQ0Mzgz", "avatar_url": "https://avatars0.githubusercontent.com/u/44383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/02strich", "html_url": "https://github.com/02strich", "followers_url": "https://api.github.com/users/02strich/followers", "following_url": "https://api.github.com/users/02strich/following{/other_user}", "gists_url": "https://api.github.com/users/02strich/gists{/gist_id}", "starred_url": "https://api.github.com/users/02strich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/02strich/subscriptions", "organizations_url": "https://api.github.com/users/02strich/orgs", "repos_url": "https://api.github.com/users/02strich/repos", "events_url": "https://api.github.com/users/02strich/events{/privacy}", "received_events_url": "https://api.github.com/users/02strich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-13T11:35:06Z", "updated_at": "2014-08-07T17:04:39Z", "closed_at": "2014-08-07T17:04:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "when passing in additional oauth params, e.g. oauth_callback, they do not get correctly encoded. The problem is the missing encoding of '/'. I have not yet found the point in the code where this happens and would appreciate any pointers.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/163", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/163/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/163/events", "html_url": "https://github.com/litl/rauth/issues/163", "id": 36562834, "node_id": "MDU6SXNzdWUzNjU2MjgzNA==", "number": 163, "title": "Missing modules pycrypto and structures make rauth to fail", "user": {"login": "GustavBrock", "id": 6253835, "node_id": "MDQ6VXNlcjYyNTM4MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6253835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GustavBrock", "html_url": "https://github.com/GustavBrock", "followers_url": "https://api.github.com/users/GustavBrock/followers", "following_url": "https://api.github.com/users/GustavBrock/following{/other_user}", "gists_url": "https://api.github.com/users/GustavBrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/GustavBrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GustavBrock/subscriptions", "organizations_url": "https://api.github.com/users/GustavBrock/orgs", "repos_url": "https://api.github.com/users/GustavBrock/repos", "events_url": "https://api.github.com/users/GustavBrock/events{/privacy}", "received_events_url": "https://api.github.com/users/GustavBrock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-06-26T10:18:40Z", "updated_at": "2014-06-30T06:44:02Z", "closed_at": "2014-06-30T06:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use rauth in Visual Studio 2013 with Python 2.7 but it fails at the first line:\nfrom rauth import OAuth1Session\n\nbecause of a missing structures:\n\n```\nTraceback (most recent call last):\n```\n\nFile \"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7  \\IDE\\Extensions\\Microsoft\\Python Tools for Visual Studio\\2.0\\\nvisualstudio_py_util.py\", line 76, in exec_file\n\n  exec(code_obj, global_variables)\nFile \"c:\\users\\gustav.cactus\\documents\\visual studio 2013\\Projects\\PythonApplicationRauth1\\PythonApplicationRauth1\\\nPythonApplicationRauth1.py\", line 2, in <module>\n  from rauth import OAuth1Session\nFile \"C:\\Python27\\lib\\site-packages\\rauth__init__.py\", line 22, in <module>\n  from .service import OAuth1Service, OAuth2Service, OflyService\nFile \"C:\\Python27\\lib\\site-packages\\rauth\\service.py\", line 10, in <module>\n  from rauth.session import OAuth1Session, OAuth2Session, OflySession\nFile \"C:\\Python27\\lib\\site-packages\\rauth\\session.py\", line 16, in <module>\n  from rauth.oauth import HmacSha1Signature\nFile \"C:\\Python27\\lib\\site-packages\\rauth\\oauth.py\", line 15, in <module>\n  from rauth.utils import FORM_URLENCODED\nFile \"C:\\Python27\\lib\\site-packages\\rauth\\utils.py\", line 11, in <module>\n  from requests.structures import CaseInsensitiveDict as cidict\nImportError: No module named structures\n\nI have installed all required modules except pycrypto which refuses to install:\n\nwarning: GMP or MPIR library not found; Not building Crypto.PublicKey._fastmath. error: Unable to find vcvarsall.bat\n\nAny idea how to resolve this?\n\n/gustav\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/162", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/162/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/162/events", "html_url": "https://github.com/litl/rauth/issues/162", "id": 35041352, "node_id": "MDU6SXNzdWUzNTA0MTM1Mg==", "number": 162, "title": "Is there some plan to support  \"grant_type=password\"", "user": {"login": "node", "id": 227278, "node_id": "MDQ6VXNlcjIyNzI3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/227278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/node", "html_url": "https://github.com/node", "followers_url": "https://api.github.com/users/node/followers", "following_url": "https://api.github.com/users/node/following{/other_user}", "gists_url": "https://api.github.com/users/node/gists{/gist_id}", "starred_url": "https://api.github.com/users/node/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/node/subscriptions", "organizations_url": "https://api.github.com/users/node/orgs", "repos_url": "https://api.github.com/users/node/repos", "events_url": "https://api.github.com/users/node/events{/privacy}", "received_events_url": "https://api.github.com/users/node/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-05T09:35:08Z", "updated_at": "2014-08-27T01:54:35Z", "closed_at": "2014-08-27T01:54:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use this grant type but got an error :\n\nKeyError: 'Decoder failed to handle access_token with data as returned by provider. A different decoder may be needed. Provider returned: {\"error\":\"invalid_grant\",\"error_description\":\"Unauthorized grant type: password\"}'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/160", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/160/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/160/events", "html_url": "https://github.com/litl/rauth/issues/160", "id": 33903833, "node_id": "MDU6SXNzdWUzMzkwMzgzMw==", "number": 160, "title": "Type str doesn't support the buffer API", "user": {"login": "bravecow", "id": 988471, "node_id": "MDQ6VXNlcjk4ODQ3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/988471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bravecow", "html_url": "https://github.com/bravecow", "followers_url": "https://api.github.com/users/bravecow/followers", "following_url": "https://api.github.com/users/bravecow/following{/other_user}", "gists_url": "https://api.github.com/users/bravecow/gists{/gist_id}", "starred_url": "https://api.github.com/users/bravecow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bravecow/subscriptions", "organizations_url": "https://api.github.com/users/bravecow/orgs", "repos_url": "https://api.github.com/users/bravecow/repos", "events_url": "https://api.github.com/users/bravecow/events{/privacy}", "received_events_url": "https://api.github.com/users/bravecow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-20T16:10:46Z", "updated_at": "2014-12-17T00:33:05Z", "closed_at": "2014-12-17T00:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "ERROR:tornado.application:Uncaught exception GET /oauth2callback?code=4/ldG9mkaccdqmtxk_ntxw0hHl6xj3.4gA52t_TLZYdOl05ti8ZT3ZVj8w0jAI (::1)\nHTTPRequest(protocol='http', host='localhost:8888', method='GET', uri='/oauth2callback?code=4/ldG9mkaccdqmtxk_ntxw0hHl6xj3.4gA52t_TLZYdOl05ti8ZT3ZVj8w0jAI', version='HTTP/1.1', remote_ip='::1', headers={'Connection': 'keep-alive', 'X-Client-Data': 'CPW1yQEIi7bJAQiktskBCKm2yQEIwbbJAQiliMoBCLmIygEIzpLKAQ==', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,_/_;q=0.8', 'Cache-Control': 'max-age=0', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.131 Safari/537.36', 'Host': 'localhost:8888', 'Accept-Encoding': 'gzip,deflate,sdch', 'Accept-Language': 'en-US,en;q=0.8,uk;q=0.6,ru;q=0.4,de;q=0.2'})\nTraceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/tornado/web.py\", line 1218, in _when_complete\n    callback()\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/tornado/web.py\", line 1239, in _execute_method\n    self._when_complete(method(_self.path_args, *_self.path_kwargs),\n  File \"/Users/brave_dick/gp/main.py\", line 42, in get\n    'redirect_uri': 'http://localhost:8888/api'\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/rauth/service.py\", line 556, in get_auth_session\n    session = self.get_session(self.get_access_token(method, *_kwargs))\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/rauth/service.py\", line 541, in get_access_token\n    r = self.get_raw_access_token(method, *_kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/rauth/service.py\", line 518, in get_raw_access_token\n    *_kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/rauth/session.py\", line 370, in request\n    return super(OAuth2Session, self).request(method, url, *_req_kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/requests/sessions.py\", line 422, in request\n    prep = self.prepare_request(req)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/requests/sessions.py\", line 348, in prepare_request\n    auth = get_netrc_auth(request.url)\n  File \"/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/requests/utils.py\", line 96, in get_netrc_auth\n    host = ri.netloc.split(':')[0]\nTypeError: Type str doesn't support the buffer API\nERROR:tornado.access:500 GET /oauth2callback?code=4/ldG9mkaccdqmtxk_ntxw0hHl6xj3.4gA52t_TLZYdOl05ti8ZT3ZVj8w0jAI (::1) 11.44ms\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/159", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/159/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/159/events", "html_url": "https://github.com/litl/rauth/issues/159", "id": 33764983, "node_id": "MDU6SXNzdWUzMzc2NDk4Mw==", "number": 159, "title": "Facebook Graph API", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-19T00:41:40Z", "updated_at": "2014-12-17T00:33:29Z", "closed_at": "2014-12-17T00:33:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIs there a quick example that shows how to pull data from the Facebook Graph API after authentication and getting the session token? \n\nI can do this: \"session.get('me/home').json()\" which works fine, but what endpoints should I be using to pull the graph api data?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/154", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/154/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/154/events", "html_url": "https://github.com/litl/rauth/issues/154", "id": 30733003, "node_id": "MDU6SXNzdWUzMDczMzAwMw==", "number": 154, "title": "OAuth1Service refresh_token example?", "user": {"login": "tonycpsu", "id": 914142, "node_id": "MDQ6VXNlcjkxNDE0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/914142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonycpsu", "html_url": "https://github.com/tonycpsu", "followers_url": "https://api.github.com/users/tonycpsu/followers", "following_url": "https://api.github.com/users/tonycpsu/following{/other_user}", "gists_url": "https://api.github.com/users/tonycpsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonycpsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonycpsu/subscriptions", "organizations_url": "https://api.github.com/users/tonycpsu/orgs", "repos_url": "https://api.github.com/users/tonycpsu/repos", "events_url": "https://api.github.com/users/tonycpsu/events{/privacy}", "received_events_url": "https://api.github.com/users/tonycpsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-02T22:50:59Z", "updated_at": "2014-04-19T02:58:52Z", "closed_at": "2014-04-19T02:47:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use rauth to get a persistent, refreshable token that can be used to make Yahoo API requests using OAuth.  I found http://stackoverflow.com/questions/16454675/how-to-refresh-a-token-with-rauth-python-library which shows an OAuth2 example, and http://developer.yahoo.com/oauth/guide/oauth-refreshaccesstoken.html which shows Yahoo's API calls to refresh a token, but can't quite figure out how to combine the two into a usable approach.\n\nRight now I have to get a new token every 2 hours and click through to accept the Yahoo terms of service each time, which is suboptimal.  Could an example of how to do this with Yahoo be added to the docs?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/151", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/151/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/151/events", "html_url": "https://github.com/litl/rauth/issues/151", "id": 28653671, "node_id": "MDU6SXNzdWUyODY1MzY3MQ==", "number": 151, "title": "KeyError on use with 7digital API", "user": {"login": "freakanth", "id": 3948628, "node_id": "MDQ6VXNlcjM5NDg2Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3948628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freakanth", "html_url": "https://github.com/freakanth", "followers_url": "https://api.github.com/users/freakanth/followers", "following_url": "https://api.github.com/users/freakanth/following{/other_user}", "gists_url": "https://api.github.com/users/freakanth/gists{/gist_id}", "starred_url": "https://api.github.com/users/freakanth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freakanth/subscriptions", "organizations_url": "https://api.github.com/users/freakanth/orgs", "repos_url": "https://api.github.com/users/freakanth/repos", "events_url": "https://api.github.com/users/freakanth/events{/privacy}", "received_events_url": "https://api.github.com/users/freakanth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-03T20:26:23Z", "updated_at": "2014-12-17T00:34:22Z", "closed_at": "2014-12-17T00:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried the following with the 7digital API...\n\n```\ndigital7 = rauth.OAuth1Service(\n  name='7digital', \n  consumer_key=MY_KEY, \n  consumer_secret=MY_SECRET, \n  request_token_url='https://api.7digital.com/1.2/oauth/requesttoken', \n  access_token_url='https://api.7digital.com/1.2/oauth/accesstoken', \n  authorize_url='https://api.7digital.com/1.2/oauth/authorize', \n  base_url='https://api.7digital.com/1.2/')\n\nrequest_token, request_token_secret = digital7.get_request_token()\n```\n\nAnd I get the following error\n\n```\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n/media/sda9/Work/git/python/my-project/7digital/<ipython-input-7-7fd997d5a285> in <module>()\n----> 1 request_token, request_token_secret = digital7.get_request_token()\n\n/usr/local/lib/python2.7/dist-packages/rauth/service.pyc in get_request_token(self, method, decoder, key_token, key_token_secret, **kwargs)\n    235         r = self.get_raw_request_token(method=method, **kwargs)\n    236         request_token, request_token_secret = \\\n--> 237             process_token_request(r, decoder, key_token, key_token_secret)\n    238         return request_token, request_token_secret\n    239 \n\n/usr/local/lib/python2.7/dist-packages/rauth/service.pyc in process_token_request(r, decoder, *args)\n     22     except KeyError as e:  # pragma: no cover\n     23         bad_key = e.args[0]\n---> 24         raise KeyError(PROCESS_TOKEN_ERROR.format(key=bad_key, raw=r.content))\n     25 \n     26 \n\nKeyError: 'Decoder failed to handle oauth_token with data as returned by provider. A different decoder may be needed. Provider returned: <?xml version=\"1.0\" encoding=\"utf-8\"?><response xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" status=\"ok\" version=\"1.2\" xsi:noNamespaceSchemaLocation=\"http://api.7digital.com/1.2/static/7digitalAPI.xsd\"><oauth_request_token><oauth_token>BQ6TAPE</oauth_token><oauth_token_secret>engBeQuYtECU/FqDYyztbg==</oauth_token_secret></oauth_request_token></response>'\n```\n\nI see that the \"provider\" returned both the request token and the token secret, but there's an error in parsing this response to get these two values out of it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/150", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/150/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/150/events", "html_url": "https://github.com/litl/rauth/issues/150", "id": 27895362, "node_id": "MDU6SXNzdWUyNzg5NTM2Mg==", "number": 150, "title": "Does RAuth support oauth_session_handle?", "user": {"login": "sdog869", "id": 1918510, "node_id": "MDQ6VXNlcjE5MTg1MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1918510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdog869", "html_url": "https://github.com/sdog869", "followers_url": "https://api.github.com/users/sdog869/followers", "following_url": "https://api.github.com/users/sdog869/following{/other_user}", "gists_url": "https://api.github.com/users/sdog869/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdog869/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdog869/subscriptions", "organizations_url": "https://api.github.com/users/sdog869/orgs", "repos_url": "https://api.github.com/users/sdog869/repos", "events_url": "https://api.github.com/users/sdog869/events{/privacy}", "received_events_url": "https://api.github.com/users/sdog869/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-02-19T17:59:44Z", "updated_at": "2014-02-20T20:42:40Z", "closed_at": "2014-02-20T20:42:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "OAuth1 flow often require this for refreshing the token, does the library currently support it or can it be added? Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/148", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/148/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/148/events", "html_url": "https://github.com/litl/rauth/issues/148", "id": 26120209, "node_id": "MDU6SXNzdWUyNjEyMDIwOQ==", "number": 148, "title": "`client_id` and `client_secret` parameters in `sessions.Session`", "user": {"login": "AndreiPashkin", "id": 4378647, "node_id": "MDQ6VXNlcjQzNzg2NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4378647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreiPashkin", "html_url": "https://github.com/AndreiPashkin", "followers_url": "https://api.github.com/users/AndreiPashkin/followers", "following_url": "https://api.github.com/users/AndreiPashkin/following{/other_user}", "gists_url": "https://api.github.com/users/AndreiPashkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreiPashkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreiPashkin/subscriptions", "organizations_url": "https://api.github.com/users/AndreiPashkin/orgs", "repos_url": "https://api.github.com/users/AndreiPashkin/repos", "events_url": "https://api.github.com/users/AndreiPashkin/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreiPashkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-22T20:27:18Z", "updated_at": "2014-03-18T20:52:14Z", "closed_at": "2014-03-18T20:52:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think that these params must not be required to instanciate session.\nMy use case is calling Facebook Graph APi fom server with access token obtained from client app. Such workflow is described [here](https://developers.facebook.com/docs/facebook-login/access-tokens/) (look at 'Tokens are Portable' paragraph)\n\nAlso Ive looked at [OAuth2 basic flow specs](http://tools.ietf.org/html/rfc6749#section-1.2) and seems like access token is only required data that must identify authorized user while accessing resources.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/145", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/145/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/145/events", "html_url": "https://github.com/litl/rauth/issues/145", "id": 24740300, "node_id": "MDU6SXNzdWUyNDc0MDMwMA==", "number": 145, "title": "Setting the decoder parameter in the get_auth_session function to json.loads when authenticating with google oauth2 returns an error", "user": {"login": "lucassimon994", "id": 1832482, "node_id": "MDQ6VXNlcjE4MzI0ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1832482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucassimon994", "html_url": "https://github.com/lucassimon994", "followers_url": "https://api.github.com/users/lucassimon994/followers", "following_url": "https://api.github.com/users/lucassimon994/following{/other_user}", "gists_url": "https://api.github.com/users/lucassimon994/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucassimon994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucassimon994/subscriptions", "organizations_url": "https://api.github.com/users/lucassimon994/orgs", "repos_url": "https://api.github.com/users/lucassimon994/repos", "events_url": "https://api.github.com/users/lucassimon994/events{/privacy}", "received_events_url": "https://api.github.com/users/lucassimon994/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-12-24T09:12:32Z", "updated_at": "2014-03-12T15:08:43Z", "closed_at": "2014-03-12T15:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following code\n      token = request.GET.get('code')\n      data = {\n          'code': token, \n          'redirect_uri': ANGULAR_LOGIN_URL, \n          'grant_type': 'authorization_code'}\n      session = auth_manager.get_auth_session(data=data, decoder=json.loads)\n\nwhich gives me the following error,\n\n```\nTypeError at /login/google/\ncan't use a string pattern on a bytes-like object\nRequest Method: GET\nRequest URL:    http://127.0.0.1:8000/login/google/?code=4/dX8nbHWAW7WTMWr4zd6aigqygpvD.gn_o-kuFOPUcmmS0T3UFEsOglLpHhgI\nDjango Version: 1.6\nException Type: TypeError\nException Value:    \ncan't use a string pattern on a bytes-like object\nException Location: /usr/lib64/python3.3/json/decoder.py in decode, line 352\n```\n\nand the traceback\n\nEnvironment:\n\nRequest Method: GET\nRequest URL: http://127.0.0.1:8000/login/google/?code=4/dX8nbHWAW7WTMWr4zd6aigqygpvD.gn_o-kuFOPUcmmS0T3UFEsOglLpHhgI\n\nDjango Version: 1.6\nPython Version: 3.3.2\nInstalled Applications:\n('django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'corsheaders',\n 'restless',\n 'blog',\n 'jobs',\n 'meetups',\n 'tweets',\n 'users')\nInstalled Middleware:\n('django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n 'corsheaders.middleware.CorsMiddleware')\n\nTraceback:\nFile \"/home/lucas/Programming/Python/Django/BoulderDjangoDev/venv/lib/python3.3/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n   File \"/home/lucas/Programming/Python/Django/BoulderDjangoDev/venv/lib/python3.3/site-packages/django/views/generic/base.py\" in view\n2.             return self.dispatch(request, _args, *_kwargs)\n   File \"/home/lucas/Programming/Python/Django/BoulderDjangoDev/venv/lib/python3.3/site-packages/django/views/generic/base.py\" in dispatch\n3.         return handler(request, _args, *_kwargs)\n   File \"/home/lucas/Programming/Python/Django/BoulderDjangoDev/BoulderDjangoDev/oauth/views.py\" in get\n4.             request=request, account_type=GOOGLE, auth_manager=google_auth)\n   File \"/home/lucas/Programming/Python/Django/BoulderDjangoDev/BoulderDjangoDev/oauth/views.py\" in OAuth2Callback\n5.         session = auth_manager.get_auth_session(data=data, decoder=json.loads)\n   File \"/home/lucas/Programming/Python/Django/BoulderDjangoDev/venv/lib/python3.3/site-packages/rauth/service.py\" in get_auth_session\n6.         return self.get_session(self.get_access_token(method, **kwargs))\n   File \"/home/lucas/Programming/Python/Django/BoulderDjangoDev/venv/lib/python3.3/site-packages/rauth/service.py\" in get_access_token\n7.         access_token, = process_token_request(r, decoder, key)\n   File \"/home/lucas/Programming/Python/Django/BoulderDjangoDev/venv/lib/python3.3/site-packages/rauth/service.py\" in process_token_request\n8.         data = decoder(r.content)\n   File \"/usr/lib64/python3.3/json/**init**.py\" in loads\n9.         return _default_decoder.decode(s)\n   File \"/usr/lib64/python3.3/json/decoder.py\" in decode\n10.         obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n\nException Type: TypeError at /login/google/\nException Value: can't use a string pattern on a bytes-like object\n\nI'm not too sure why I am getting this error. I looked at\n\nhttps://github.com/litl/rauth/issues/110\n\nbut that has not helped\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/143", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/143/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/143/events", "html_url": "https://github.com/litl/rauth/issues/143", "id": 23498259, "node_id": "MDU6SXNzdWUyMzQ5ODI1OQ==", "number": 143, "title": "HTTP Error 401: Authorization Required", "user": {"login": "jaskaran27", "id": 5612161, "node_id": "MDQ6VXNlcjU2MTIxNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5612161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaskaran27", "html_url": "https://github.com/jaskaran27", "followers_url": "https://api.github.com/users/jaskaran27/followers", "following_url": "https://api.github.com/users/jaskaran27/following{/other_user}", "gists_url": "https://api.github.com/users/jaskaran27/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaskaran27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaskaran27/subscriptions", "organizations_url": "https://api.github.com/users/jaskaran27/orgs", "repos_url": "https://api.github.com/users/jaskaran27/repos", "events_url": "https://api.github.com/users/jaskaran27/events{/privacy}", "received_events_url": "https://api.github.com/users/jaskaran27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-11-29T15:37:09Z", "updated_at": "2013-12-03T18:13:26Z", "closed_at": "2013-12-03T18:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following is my code trying to access the Beatport API\n\n```\nfrom rauth import OAuth1Service\nimport urllib\nimport urllib2\n\nbeatport_login = 'login'\nbeatport_pass = 'pass'\n\nbeatport = OAuth1Service(\n    name='beatport',\n    consumer_key='xxxxxxxxxxxxxxx',\n    consumer_secret='xxxxxxxxxxxxxxxxxxxxxx',\n    request_token_url= 'https://oauth-api.beatport.com/identity/1/oauth/request-token',\n    access_token_url='https://oauth-api.beatport.com/identity/1/oauth/access-token',\n    authorize_url='https://oauth-api.beatport.com/identity/1/oauth/authorize',\n    base_url='https://oauth-api.beatport.com/json/catalog')\n\nrequest_token, request_token_secret = beatport.get_request_token(method='POST')\n\nauthorize_url = beatport.get_authorize_url(request_token)\n\nvalues = {\n    'oauth_token': request_token,\n    'username': beatport_login,\n    'password': beatport_pass,\n    'submit' : 'Login',\n    'oauth_callback': 'http://127.0.0.1:8000/'\n}\n\ndata = urllib.urlencode(values)\nreq = urllib2.Request('https://oauth-api.beatport.com/identity/1/oauth/authorize-submit', data)\nresponse = urllib2.urlopen(req)\nprint response.read()\n\nsession = beatport.get_raw_access_token(request_token, request_token_secret, method='POST', data={\n    'oauth_verifier': response })\n\nprint session\n\nr = session.get('https://oauth-api.beatport.com/catalog/3/tracks?returnFacets=artistName%3AHardwell&perPage=5&sortBy=releaseDate+DESC', params={'format': 'json'})\nprint r.json()\n```\n\nThis gives an HTTP Error 401: Authorization error. The traceback suggests the error points at line `response = urllib2.urlopen(req)`. \n\nhttps://groups.google.com/d/msg/beatport-api/sEpZUJkaSdo/tEXwt189m5sJ \nI'm using this working example in PHP as reference.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/142", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/142/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/142/events", "html_url": "https://github.com/litl/rauth/issues/142", "id": 23324795, "node_id": "MDU6SXNzdWUyMzMyNDc5NQ==", "number": 142, "title": "Unable to get request_token and request_token_secret from Beatport API", "user": {"login": "jaskaran27", "id": 5612161, "node_id": "MDQ6VXNlcjU2MTIxNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5612161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaskaran27", "html_url": "https://github.com/jaskaran27", "followers_url": "https://api.github.com/users/jaskaran27/followers", "following_url": "https://api.github.com/users/jaskaran27/following{/other_user}", "gists_url": "https://api.github.com/users/jaskaran27/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaskaran27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaskaran27/subscriptions", "organizations_url": "https://api.github.com/users/jaskaran27/orgs", "repos_url": "https://api.github.com/users/jaskaran27/repos", "events_url": "https://api.github.com/users/jaskaran27/events{/privacy}", "received_events_url": "https://api.github.com/users/jaskaran27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-11-26T16:07:29Z", "updated_at": "2013-11-29T15:09:54Z", "closed_at": "2013-11-29T15:09:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following is a part of my code.\n\n```\nfrom rauth import OAuth1Service\n\nbeatport = OAuth1Service(\n    name='beatport',\n    consumer_key='xxxxxxxxxxxxxxxxxxxxxx',\n    consumer_secret='xxxxxxxxxxxxxxxxxxxxxxx',\n    request_token_url='https://oauth-api.beatport.com/identity/1/oauth/request-token',\n    access_token_url='https://oauth-api.beatport.com/identity/1/oauth/access-token',\n    authorize_url='https://oauth-api.beatport.com/identity/1/oauth/authorize',\n    base_url='https://oauth-api.beatport.com/json/catalog')\n\nprint beatport.get_raw_request_token()\n\nrequest_token, request_token_secret = beatport.get_raw_request_token()\n```\n\nThis prints Response 405 instead.\n\nHere is the documentation for Beatport API.\nhttps://oauth-api.beatport.com/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/140", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/140/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/140/events", "html_url": "https://github.com/litl/rauth/issues/140", "id": 21517904, "node_id": "MDU6SXNzdWUyMTUxNzkwNA==", "number": 140, "title": "Big changes", "user": {"login": "homm", "id": 128982, "node_id": "MDQ6VXNlcjEyODk4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/128982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/homm", "html_url": "https://github.com/homm", "followers_url": "https://api.github.com/users/homm/followers", "following_url": "https://api.github.com/users/homm/following{/other_user}", "gists_url": "https://api.github.com/users/homm/gists{/gist_id}", "starred_url": "https://api.github.com/users/homm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/homm/subscriptions", "organizations_url": "https://api.github.com/users/homm/orgs", "repos_url": "https://api.github.com/users/homm/repos", "events_url": "https://api.github.com/users/homm/events{/privacy}", "received_events_url": "https://api.github.com/users/homm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-24T12:01:38Z", "updated_at": "2013-11-14T12:30:55Z", "closed_at": "2013-11-14T12:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I work on Uploadcare.com and we use rauth library with many OAuth/OAuth2 services and their count is constantly growing.\n\nHowever rauth has some limitations which is hard to accept. And I want to offer some changes and find out if it is better to contribute to rauth or fork it.\n\nThis is prototype of OAuth2 service to help explanation:\n\n``` python\nclass OAuth2Service(object):\n\n    def __init__(self, client_id, client_secret,\n                 authorize_url, authorize_params,\n                 access_token_url, access_token_params,\n                 access_token_decoder=parse_unicode_qsl,\n                 access_token_method='POST'):\n        self.client_id = client_id\n        self.client_secret = client_secret\n\n        # step 1\n        self.authorize_url = authorize_url\n        self.authorize_params = authorize_params or {'response_type': 'code'}\n\n        # step 2\n        self.access_token_url = access_token_url\n        self.access_token_params = access_token_params or {}\n        self.access_token_decoder = access_token_decoder\n        self.access_token_method = access_token_method\n\n    def get_authorize_url(self, **params):\n        params = dict(self.authorize_params,\n                      client_id=self.client_id,\n                      **params)\n        return self.authorize_url + '?' + urlencode(params)\n\n    def get_access_token(self, **params):\n        params = dict(self.access_token_params,\n                      client_id=self.client_id,\n                      client_secret=self.client_secret,\n                      **params)\n        r = self._request_access(params)\n        return self.access_token_decoder(r.content)\n\n    def _request_access(self, params):\n        return self.session.request(self.access_token_method,\n                                    self.access_token_url, data=params)\n```\n\n1) All arguments to `get_authorize_url` and `get_access_token` are duplicated in service constructor. This is because service instance should fully describe interaction with service. `access_token_method` or `access_token_decoder` is only service-specific and can not change between several access_token requests.\n\n2) `get_access_token` returns all information from service, not only access_key. I know, recently you have added raw `access_token_response`, but it is meaningless. At first raw response is not decoded. At second, it breaks thread-safe of service instance. Also as I understand very strange `__attrs__` was added because of `access_token_response` and `request_token_response`. It looks like hack in addition to `__attrs__` name is reserved and can not be used in python at all.\n\n3) `get_access_token` arguments do not depend on `access_token_method` (`_request_access` should handle it)\n\nIdeology \"one instance fully describes service\" allows to add helpers for existing services. For example here is `GoogleService` on top of OAuth2Service:\n\n``` python\nclass GoogleService(OAuth2Service):\n    def __init__(self, client_id, client_secret, redirect_uri=None,\n                 scope=None, access_type='offline', approval_prompt='auto'):\n        authorize_params = {\n            'response_type': 'code',\n            'access_type': access_type,\n            'approval_prompt': approval_prompt,\n        }\n        access_token_params = {'grant_type': 'authorization_code'}\n\n        if redirect_uri is not None:\n            authorize_params['redirect_uri'] = redirect_uri\n            access_token_params['redirect_uri'] = redirect_uri\n\n        if scope is not None:\n            authorize_params['scope'] = scope\n            access_token_params['scope'] = scope\n\n        super(GoogleService, self).__init__(\n            client_id, client_secret,\n            # step 1\n            'https://accounts.google.com/o/oauth2/auth', authorize_params,\n            # step 2\n            'https://accounts.google.com/o/oauth2/token', access_token_params,\n            json.loads\n        )\n```\n\nSuch helpers for popular services can be included in rauth.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/138", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/138/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/138/events", "html_url": "https://github.com/litl/rauth/issues/138", "id": 21280231, "node_id": "MDU6SXNzdWUyMTI4MDIzMQ==", "number": 138, "title": "requests 2.0.0 has released.", "user": {"login": "yoloseem", "id": 249795, "node_id": "MDQ6VXNlcjI0OTc5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/249795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoloseem", "html_url": "https://github.com/yoloseem", "followers_url": "https://api.github.com/users/yoloseem/followers", "following_url": "https://api.github.com/users/yoloseem/following{/other_user}", "gists_url": "https://api.github.com/users/yoloseem/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoloseem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoloseem/subscriptions", "organizations_url": "https://api.github.com/users/yoloseem/orgs", "repos_url": "https://api.github.com/users/yoloseem/repos", "events_url": "https://api.github.com/users/yoloseem/events{/privacy}", "received_events_url": "https://api.github.com/users/yoloseem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-20T13:45:13Z", "updated_at": "2013-10-22T00:51:03Z", "closed_at": "2013-10-22T00:51:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since [requests 2.0.0](https://pypi.python.org/pypi/requests/2.0.0) has released at Sep 24, 2013, rauth's requirements still specifying 1.2.3. resolving dependencies via setuptools's install_requires exited with error when requests 2.0.0 has installed(for another dependencies):\n\n```\n(venv) $ python setup.py develop\n...\n...\nerror: Installed distribution requests 2.0.0 conflicts with requirement requests==1.2.3\n```\n\nThere are some API changes on requests 2.0.0:\n- httplib.IncompleteRead exceptions caused by incorrect chunked encoding will now raise a Requests ChunkedEncodingError instead.\n- RequestException is now a subclass of IOError, not RuntimeError.\n\nbut I failed to find them from rauth's codes.\n\nI've got test success for requests 2.0.0 on 2.7 and I think 2.6, 3.3 and pypy will generate same result. Newly released boto also specifying requests 2.0.0.\n\nI suggest that requires latest requests for rauth, or at least do not require special version. `>=1.2.3` would be also good.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/132", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/132/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/132/events", "html_url": "https://github.com/litl/rauth/issues/132", "id": 18373875, "node_id": "MDU6SXNzdWUxODM3Mzg3NQ==", "number": 132, "title": "accessing yahoo contacts with rauth", "user": {"login": "kennethkoontz", "id": 499344, "node_id": "MDQ6VXNlcjQ5OTM0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/499344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennethkoontz", "html_url": "https://github.com/kennethkoontz", "followers_url": "https://api.github.com/users/kennethkoontz/followers", "following_url": "https://api.github.com/users/kennethkoontz/following{/other_user}", "gists_url": "https://api.github.com/users/kennethkoontz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennethkoontz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennethkoontz/subscriptions", "organizations_url": "https://api.github.com/users/kennethkoontz/orgs", "repos_url": "https://api.github.com/users/kennethkoontz/repos", "events_url": "https://api.github.com/users/kennethkoontz/events{/privacy}", "received_events_url": "https://api.github.com/users/kennethkoontz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-08-21T19:04:41Z", "updated_at": "2013-08-21T20:10:29Z", "closed_at": "2013-08-21T20:10:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've managed to use rauth to get a yahoo access token/secret. However, I'm having a problem with using rauth to consume the yahoo api. Specifically, the contacts endpoint. This is what I have:\n\n``` python\n            url = '/v1/user/%s/contacts' % account.social_id\n            yahoo = OAuth1Service(\n                consumer_key=keys.key,\n                consumer_secret=keys.secret,\n                name=provider,\n                base_url='http://social.yahooapis.com')\n\n            yahoo_session = yahoo.get_session()\n            params = {\n                'format': 'json',\n                'oauth_token': account.access_token,\n                'oauth_token_secret': account.access_token_secret\n            }\n            response = yahoo_session.get(url, params=params)\n            import pdb; pdb.set_trace()\n```\n\nThe response from Yahoo is:\n\n``` json\n{u'error': {u'lang': u'en-US', u'description': u'Please provide valid credentials. OAuth oauth_problem=\"signature_invalid\", realm=\"yahooapis.com\"'}}\n```\n\nAny ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/130", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/130/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/130/events", "html_url": "https://github.com/litl/rauth/issues/130", "id": 18372199, "node_id": "MDU6SXNzdWUxODM3MjE5OQ==", "number": 130, "title": "Header auth signature improperly decoded", "user": {"login": "mitgr81", "id": 812231, "node_id": "MDQ6VXNlcjgxMjIzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/812231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitgr81", "html_url": "https://github.com/mitgr81", "followers_url": "https://api.github.com/users/mitgr81/followers", "following_url": "https://api.github.com/users/mitgr81/following{/other_user}", "gists_url": "https://api.github.com/users/mitgr81/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitgr81/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitgr81/subscriptions", "organizations_url": "https://api.github.com/users/mitgr81/orgs", "repos_url": "https://api.github.com/users/mitgr81/repos", "events_url": "https://api.github.com/users/mitgr81/events{/privacy}", "received_events_url": "https://api.github.com/users/mitgr81/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-08-21T18:35:39Z", "updated_at": "2013-10-02T14:25:57Z", "closed_at": "2013-10-02T14:25:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using header auth in py3k (maybe even 2.7, didn't verify), the oauth_signature was encoded with repr of the bytestring rather than the string value.\n\ne.g. \"b%27somesignature%27\"\n\nRunning the signature through decode should compensate for that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/129", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/129/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/129/events", "html_url": "https://github.com/litl/rauth/issues/129", "id": 18255673, "node_id": "MDU6SXNzdWUxODI1NTY3Mw==", "number": 129, "title": "expose other auth fields in session object", "user": {"login": "kennethkoontz", "id": 499344, "node_id": "MDQ6VXNlcjQ5OTM0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/499344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennethkoontz", "html_url": "https://github.com/kennethkoontz", "followers_url": "https://api.github.com/users/kennethkoontz/followers", "following_url": "https://api.github.com/users/kennethkoontz/following{/other_user}", "gists_url": "https://api.github.com/users/kennethkoontz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennethkoontz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennethkoontz/subscriptions", "organizations_url": "https://api.github.com/users/kennethkoontz/orgs", "repos_url": "https://api.github.com/users/kennethkoontz/repos", "events_url": "https://api.github.com/users/kennethkoontz/events{/privacy}", "received_events_url": "https://api.github.com/users/kennethkoontz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}, {"id": 1426322, "node_id": "MDU6TGFiZWwxNDI2MzIy", "url": "https://api.github.com/repos/litl/rauth/labels/Feature%20Request", "name": "Feature Request", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-08-19T18:34:04Z", "updated_at": "2013-10-21T15:36:39Z", "closed_at": "2013-10-21T15:36:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using the session object, is it possible to grab more information regarding the fetched access token? For google, this might be the `expires_in` field when retrieving the access_token. My use case is the ability to save expiration times in a database.\n\nIt appears that you can do this if you call get_raw_access_token and parse it, but it would be nice to expose these fields in some attribute attached to the session object as to not have to parse the response from get_raw_access_token.\n\nFor example:\n\n``` python\nsession = google.get_auth_session(data=data, decoder=simplejson.loads)\nsession.raw['expires_in'] # Where `raw` is the original access token response data.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/128", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/128/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/128/events", "html_url": "https://github.com/litl/rauth/issues/128", "id": 18089716, "node_id": "MDU6SXNzdWUxODA4OTcxNg==", "number": 128, "title": "Post requests fail with data except alphanumeric. ", "user": {"login": "ta2xeo", "id": 3006248, "node_id": "MDQ6VXNlcjMwMDYyNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3006248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ta2xeo", "html_url": "https://github.com/ta2xeo", "followers_url": "https://api.github.com/users/ta2xeo/followers", "following_url": "https://api.github.com/users/ta2xeo/following{/other_user}", "gists_url": "https://api.github.com/users/ta2xeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ta2xeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ta2xeo/subscriptions", "organizations_url": "https://api.github.com/users/ta2xeo/orgs", "repos_url": "https://api.github.com/users/ta2xeo/repos", "events_url": "https://api.github.com/users/ta2xeo/events{/privacy}", "received_events_url": "https://api.github.com/users/ta2xeo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-15T03:53:06Z", "updated_at": "2013-09-28T15:14:47Z", "closed_at": "2013-09-28T15:14:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "e.g.)\ndata={u\"comment\": u\"\u65e5\u672c\"}\n\nThe solution is probably below.\n\n```\n--- a/oauth.py  Thu Aug 15 12:38:47 2013 +0900\n+++ b/oauth.py  Thu Aug 15 12:38:55 2013 +0900\n@@ -77,7 +77,7 @@\n         if 'Content-Type' in headers and \\\n                 headers['Content-Type'] == FORM_URLENCODED:\n             for k, v in data.items():\n-                normalized += [(k, v)]\n+                normalized += [(k, v.encode('utf-8'))]\n\n         # extract values from our list of tuples\n         all_normalized = []\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/127", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/127/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/127/events", "html_url": "https://github.com/litl/rauth/issues/127", "id": 17698048, "node_id": "MDU6SXNzdWUxNzY5ODA0OA==", "number": 127, "title": "Passing kwargs into get_auth_session gives me an error", "user": {"login": "matter-io2", "id": 4840190, "node_id": "MDQ6VXNlcjQ4NDAxOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4840190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matter-io2", "html_url": "https://github.com/matter-io2", "followers_url": "https://api.github.com/users/matter-io2/followers", "following_url": "https://api.github.com/users/matter-io2/following{/other_user}", "gists_url": "https://api.github.com/users/matter-io2/gists{/gist_id}", "starred_url": "https://api.github.com/users/matter-io2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matter-io2/subscriptions", "organizations_url": "https://api.github.com/users/matter-io2/orgs", "repos_url": "https://api.github.com/users/matter-io2/repos", "events_url": "https://api.github.com/users/matter-io2/events{/privacy}", "received_events_url": "https://api.github.com/users/matter-io2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-06T15:49:32Z", "updated_at": "2013-08-06T20:39:12Z", "closed_at": "2013-08-06T20:39:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I'm trying to tie into the Shapeways API which uses OAuth1 and normally get_auth_session returns a Key Error which basically tells me that I don't have a valid verifier token. \n\nAs there's no official way to include one I tried including it as one of my kwargs but it keeps telling me\n\nTypeError: request() got an unexpected keyword argument 'verifier_token'\n\nI'm not sure how I'm putting it in incorrectly. I've tried\n**{'verifier_token':'blah'}\nverifier_token='blah'\nAnd both get the same error\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/126", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/126/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/126/events", "html_url": "https://github.com/litl/rauth/issues/126", "id": 17662775, "node_id": "MDU6SXNzdWUxNzY2Mjc3NQ==", "number": 126, "title": "easy_install installs on W7 but can't be imported", "user": {"login": "matter-io2", "id": 4840190, "node_id": "MDQ6VXNlcjQ4NDAxOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4840190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matter-io2", "html_url": "https://github.com/matter-io2", "followers_url": "https://api.github.com/users/matter-io2/followers", "following_url": "https://api.github.com/users/matter-io2/following{/other_user}", "gists_url": "https://api.github.com/users/matter-io2/gists{/gist_id}", "starred_url": "https://api.github.com/users/matter-io2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matter-io2/subscriptions", "organizations_url": "https://api.github.com/users/matter-io2/orgs", "repos_url": "https://api.github.com/users/matter-io2/repos", "events_url": "https://api.github.com/users/matter-io2/events{/privacy}", "received_events_url": "https://api.github.com/users/matter-io2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-05T22:13:51Z", "updated_at": "2013-08-06T05:30:03Z", "closed_at": "2013-08-05T22:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have python 2.7.3 and 64-bit Windows 7 if that's useful. So I successfully used the easy_install method but whenever I try to import it it always fails. \n\nI went to my python site packages folder (C:\\Python27\\Lib\\site-packages) and I see the .egg directory there so I'm not sure what the problem is. \n\nI tried copying the rauth folder out of the .egg into the main site-packages folder which allowed me to \"import rauth\" but whenever I try importing anything specific or even do \"from rauth import *\" I get \n\n\"AttributeError: 'module' object has no attribute 'OAuth1Service'\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/124", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/124/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/124/events", "html_url": "https://github.com/litl/rauth/issues/124", "id": 17531926, "node_id": "MDU6SXNzdWUxNzUzMTkyNg==", "number": 124, "title": "Put/Post requests don't work great with non-dictionary data", "user": {"login": "zags", "id": 5118144, "node_id": "MDQ6VXNlcjUxMTgxNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5118144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zags", "html_url": "https://github.com/zags", "followers_url": "https://api.github.com/users/zags/followers", "following_url": "https://api.github.com/users/zags/following{/other_user}", "gists_url": "https://api.github.com/users/zags/gists{/gist_id}", "starred_url": "https://api.github.com/users/zags/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zags/subscriptions", "organizations_url": "https://api.github.com/users/zags/orgs", "repos_url": "https://api.github.com/users/zags/repos", "events_url": "https://api.github.com/users/zags/events{/privacy}", "received_events_url": "https://api.github.com/users/zags/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-08-01T21:20:14Z", "updated_at": "2013-10-22T00:44:13Z", "closed_at": "2013-10-22T00:44:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "A Put or Post request with data=None hits an exception in oauth._normalize_request_parameters.\n\nA slightly finer nitpick is that, when passing a string argument as data (see here for an example of where you would want to do this: https://confluence.atlassian.com/display/BITBUCKET/privileges+Endpoint#privilegesEndpoint-PUTanewprivilege), the request is not automatically sent with this as plain text.\n\nNamely, the following code is required to send a string as the put payload:\noauth_session.put(url, data=\"string of text\", header_auth=True, headers={\"content-type\":\"text\"})\n\nWhen it really ought to just be:\noauth_session.put(url, data=\"string of text\")\n\nEven some documentation on this would be nice.  I wasted a good afternoon on this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/121", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/121/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/121/events", "html_url": "https://github.com/litl/rauth/issues/121", "id": 17034733, "node_id": "MDU6SXNzdWUxNzAzNDczMw==", "number": 121, "title": "SSLError when getting the access token", "user": {"login": "rubik", "id": 238549, "node_id": "MDQ6VXNlcjIzODU0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/238549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubik", "html_url": "https://github.com/rubik", "followers_url": "https://api.github.com/users/rubik/followers", "following_url": "https://api.github.com/users/rubik/following{/other_user}", "gists_url": "https://api.github.com/users/rubik/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubik/subscriptions", "organizations_url": "https://api.github.com/users/rubik/orgs", "repos_url": "https://api.github.com/users/rubik/repos", "events_url": "https://api.github.com/users/rubik/events{/privacy}", "received_events_url": "https://api.github.com/users/rubik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-07-22T08:00:46Z", "updated_at": "2013-09-16T10:38:53Z", "closed_at": "2013-08-24T20:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using rauth in a Django application to authenticate users through Github. I get this error:\n\n```\nSSLError at /accounts/end-pipeline/\n[Errno 2] _ssl.c:504: The operation did not complete (read)\n```\n\nTraceback:\n\n```\nTraceback:\nFile \"/www/barium/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  115.                         response = callback(request, *callback_args, **callback_kwargs)\nFile \"./barium/apps/core/views.py\" in end_pipeline\n  62.                                             make_absolute(reverse('home'))})\nFile \"/www/barium/lib/python2.7/site-packages/rauth/service.py\" in get_auth_session\n  533.         return self.get_session(self.get_access_token(method, **kwargs))\nFile \"/www/barium/lib/python2.7/site-packages/rauth/service.py\" in get_access_token\n  518.         r = self.get_raw_access_token(method, **kwargs)\nFile \"/www/barium/lib/python2.7/site-packages/rauth/service.py\" in get_raw_access_token\n  496.         return session.request(method, self.access_token_url, **kwargs)\nFile \"/www/barium/lib/python2.7/site-packages/rauth/session.py\" in request\n  360.         return super(OAuth2Session, self).request(method, url, **req_kwargs)\nFile \"/www/barium/lib/python2.7/site-packages/requests/sessions.py\" in request\n  335.         resp = self.send(prep, **send_kwargs)\nFile \"/www/barium/lib/python2.7/site-packages/requests/sessions.py\" in send\n  438.         r = adapter.send(request, **kwargs)\nFile \"/www/barium/lib/python2.7/site-packages/requests/adapters.py\" in send\n  331.                 raise SSLError(e)\n\nException Type: SSLError at /accounts/end-pipeline/\nException Value: [Errno 2] _ssl.c:504: The operation did not complete (read)\n```\n\nThe end-pipeline endpoint is the one that compares the states, get the access token and authenticate the user accordingly. This happens after Github has already redirected back to my application.\nAs you can see from the traceback, all is initiated when asking for the access token.\n\nP.S. `rauth` works fine in the local environment, but not when the application is deployed in production. May it be something missing? ssl-related packages? It's an Ubuntu server.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/118", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/118/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/118/events", "html_url": "https://github.com/litl/rauth/issues/118", "id": 17007530, "node_id": "MDU6SXNzdWUxNzAwNzUzMA==", "number": 118, "title": "Keep getting 'client unauthorized' error [oauth2, linkedin]...", "user": {"login": "A-Zak", "id": 302774, "node_id": "MDQ6VXNlcjMwMjc3NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/302774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/A-Zak", "html_url": "https://github.com/A-Zak", "followers_url": "https://api.github.com/users/A-Zak/followers", "following_url": "https://api.github.com/users/A-Zak/following{/other_user}", "gists_url": "https://api.github.com/users/A-Zak/gists{/gist_id}", "starred_url": "https://api.github.com/users/A-Zak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/A-Zak/subscriptions", "organizations_url": "https://api.github.com/users/A-Zak/orgs", "repos_url": "https://api.github.com/users/A-Zak/repos", "events_url": "https://api.github.com/users/A-Zak/events{/privacy}", "received_events_url": "https://api.github.com/users/A-Zak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2013-07-20T15:20:23Z", "updated_at": "2013-08-21T20:49:56Z", "closed_at": "2013-08-21T20:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\n\nI want to use linkedin with oauth2, and I keep getting a 'client unauthorized' error...\nThere's no example code for LinkedIn using oauth2, so I'm using the github example as reference, but there's still something wrong... /:\n#### This is what I'm doing:\n- I initialize the service:\n\n``` python\n    from rauth import *\n\n    linkedin = OAuth2Service(\n        client_id           = settings.LINKEDIN_TOKEN,\n        client_secret       = settings.LINKEDIN_SECRET,\n        name                = \"linkedin\",\n        authorize_url       = \"https://www.linkedin.com/uas/oauth2/authorization\",\n        access_token_url    = \"https://www.linkedin.com/uas/oauth2/accessToken\",\n        base_url            = \"https://api.linkedin.com/v1/\"\n)\n```\n- Create the auth_url, and send the user to authenticate himself.\n\n``` python\nparams = {\n        'response_type'     : \"code\",\n        'scope'             : \"r_fullprofile r_emailaddress r_network\",\n        'state'             : \"fasdfsadfadsfsdaf\",\n        'redirect_uri'      : \"http://127.0.0.1:5000/portal/linkedin/authorization_code\"\n    }\n    request_auth_code_url = linkedin.get_authorize_url(**params)\n```\n- On the redirect url I parse out the auth_code, and request a new session\n\n``` python\nauthorization_code  = request.GET.get('code', '')\ndata = {\n        'grant_type'    : \"authorization_code\",\n        'code'          : authorization_code,\n        'redirect_uri'  : \"http://127.0.0.1:5000/portal/linkedin/authorization_code/\"\n    }\nsession = linkedin.get_auth_session(data = data)\n```\n- And this is what I get....\n\n``` json\n{\n        \"error\" : \"unauthorized_client\",\n        \"error_description\" : \"the client is not authorized\"\n}\n```\n\nPlease if anyone can post a working example of oauth2 with linkedin, or simple show me where my mistake it, it would really help me...\n\nThanks,\nAlex.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/112", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/112/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/112/events", "html_url": "https://github.com/litl/rauth/issues/112", "id": 16506671, "node_id": "MDU6SXNzdWUxNjUwNjY3MQ==", "number": 112, "title": "process_token_request getting keys other than defaults", "user": {"login": "leonsas", "id": 2005930, "node_id": "MDQ6VXNlcjIwMDU5MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2005930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonsas", "html_url": "https://github.com/leonsas", "followers_url": "https://api.github.com/users/leonsas/followers", "following_url": "https://api.github.com/users/leonsas/following{/other_user}", "gists_url": "https://api.github.com/users/leonsas/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonsas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonsas/subscriptions", "organizations_url": "https://api.github.com/users/leonsas/orgs", "repos_url": "https://api.github.com/users/leonsas/repos", "events_url": "https://api.github.com/users/leonsas/events{/privacy}", "received_events_url": "https://api.github.com/users/leonsas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-07-09T03:51:50Z", "updated_at": "2014-03-03T20:38:01Z", "closed_at": "2014-03-03T20:38:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently `get_access_token` accepts `key_token` and `key_token_secret`, and theres no way of asking for other keys that might be in the response. In my case that is the `expiration_time`. I'm using `get_raw_access_token` and then just doing everything manually. Is there a reason why `get_access_token` can't accept kwargs to get other arbitrary keys?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/111", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/111/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/111/events", "html_url": "https://github.com/litl/rauth/issues/111", "id": 16465530, "node_id": "MDU6SXNzdWUxNjQ2NTUzMA==", "number": 111, "title": "Youtube decoder for getting access_token", "user": {"login": "bhdryaman", "id": 3472715, "node_id": "MDQ6VXNlcjM0NzI3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3472715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhdryaman", "html_url": "https://github.com/bhdryaman", "followers_url": "https://api.github.com/users/bhdryaman/followers", "following_url": "https://api.github.com/users/bhdryaman/following{/other_user}", "gists_url": "https://api.github.com/users/bhdryaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhdryaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhdryaman/subscriptions", "organizations_url": "https://api.github.com/users/bhdryaman/orgs", "repos_url": "https://api.github.com/users/bhdryaman/repos", "events_url": "https://api.github.com/users/bhdryaman/events{/privacy}", "received_events_url": "https://api.github.com/users/bhdryaman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-08T10:59:56Z", "updated_at": "2017-10-31T13:03:25Z", "closed_at": "2013-07-09T05:22:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "i want to use rauth for youtube api, i could get the  authorize_url and after redirect i got the error as below :\r\n\r\n'Decoder failed to handle access_token with data as returned by provider. A different decoder may be needed. Provider returned: {\\n  \"access_token\" : \"ya28bhu\",\\n  \"token_type\" : \"Bearer\",\\n  \"expires_in\" : 3599\\n}'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/110", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/110/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/110/events", "html_url": "https://github.com/litl/rauth/issues/110", "id": 16465516, "node_id": "MDU6SXNzdWUxNjQ2NTUxNg==", "number": 110, "title": "Google oauth2 authentication throws an exception in rauth", "user": {"login": "houmie", "id": 1832933, "node_id": "MDQ6VXNlcjE4MzI5MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1832933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houmie", "html_url": "https://github.com/houmie", "followers_url": "https://api.github.com/users/houmie/followers", "following_url": "https://api.github.com/users/houmie/following{/other_user}", "gists_url": "https://api.github.com/users/houmie/gists{/gist_id}", "starred_url": "https://api.github.com/users/houmie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houmie/subscriptions", "organizations_url": "https://api.github.com/users/houmie/orgs", "repos_url": "https://api.github.com/users/houmie/repos", "events_url": "https://api.github.com/users/houmie/events{/privacy}", "received_events_url": "https://api.github.com/users/houmie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-07-08T10:59:25Z", "updated_at": "2013-12-24T09:12:32Z", "closed_at": "2013-07-08T16:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI have implemented google oauth2 today. I was expecting it to work as simple as facebook, but I get an exception in rauth when I try to get the session.\n\n```\ndef google_login():\n    redirect_uri = url_for('google_authorized', _external=True)\n    params = {'redirect_uri': redirect_uri, 'response_type': 'code', 'scope': 'email'}\n    return redirect(google_oauth2.get_authorize_url(**params))\n```\n\n```\ndef google_authorized():\n    if not 'code' in request.args:\n        flash('Whoops. You did not authorize the request. Try again.', 'warning')\n        return redirect(url_for('index'))\n\n    redirect_uri = url_for('google_authorized', _external=True)\n    data = dict(code=request.args['code'], redirect_uri=redirect_uri)\n\n    gg_session = google_oauth2.get_auth_session(data=data)\n```\n\nI can see the code with a long value in `request.args`. I wonder what else is missing, to get this exception and error:\n\n```\nKeyError: 'Decoder failed to handle access_token with data as returned by provider. A different decoder may be needed. Provider returned: {\\n \"error\" : \"invalid_request\"\\n}'\n```\n\nTrace:\n\n```\n    File \"/home/hooman/workspace/F11A/src/lib/flask/app.py\", line 1701, in __call__\n\n    return self.wsgi_app(environ, start_response)\n\n    File \"/home/hooman/workspace/F11A/src/lib/flask/app.py\", line 1689, in wsgi_app\n\n    response = self.make_response(self.handle_exception(e))\n\n    File \"/home/hooman/workspace/F11A/src/lib/flask/app.py\", line 1687, in wsgi_app\n\n    response = self.full_dispatch_request()\n\n    File \"/home/hooman/workspace/F11A/src/lib/flask/app.py\", line 1360, in full_dispatch_request\n\n    rv = self.handle_user_exception(e)\n\n    File \"/home/hooman/workspace/F11A/src/lib/flask/app.py\", line 1358, in full_dispatch_request\n\n    rv = self.dispatch_request()\n\n    File \"/home/hooman/workspace/F11A/src/lib/flask/app.py\", line 1344, in dispatch_request\n\n    return self.view_functions[rule.endpoint](**req.view_args)\n\n    File \"/home/hooman/workspace/F11A/src/application/views.py\", line 433, in google_authorized\n\n    gg_session = google_oauth2.get_auth_session(data=data)\n\n    File \"/home/hooman/workspace/F11A/src/lib/rauth/service.py\", line 505, in get_auth_session\n\n    return self.get_session(self.get_access_token(method, **kwargs))\n\n    File \"/home/hooman/workspace/F11A/src/lib/rauth/service.py\", line 491, in get_access_token\n\n    access_token, = process_token_request(r, decoder, key)\n\n    File \"/home/hooman/workspace/F11A/src/lib/rauth/service.py\", line 25, in process_token_request\n\n    raise KeyError(PROCESS_TOKEN_ERROR.format(key=bad_key, raw=r.content))\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/109", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/109/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/109/events", "html_url": "https://github.com/litl/rauth/issues/109", "id": 16454706, "node_id": "MDU6SXNzdWUxNjQ1NDcwNg==", "number": 109, "title": "How to upload a file to server with rauth session?", "user": {"login": "yuyang0", "id": 3815993, "node_id": "MDQ6VXNlcjM4MTU5OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3815993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuyang0", "html_url": "https://github.com/yuyang0", "followers_url": "https://api.github.com/users/yuyang0/followers", "following_url": "https://api.github.com/users/yuyang0/following{/other_user}", "gists_url": "https://api.github.com/users/yuyang0/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuyang0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuyang0/subscriptions", "organizations_url": "https://api.github.com/users/yuyang0/orgs", "repos_url": "https://api.github.com/users/yuyang0/repos", "events_url": "https://api.github.com/users/yuyang0/events{/privacy}", "received_events_url": "https://api.github.com/users/yuyang0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2013-07-08T04:29:19Z", "updated_at": "2013-10-22T15:08:20Z", "closed_at": "2013-07-08T04:59:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can use code like this to upload file to server:\n\n```\nimport requests\nfiles = {'file': open(filename, 'rb')}\nrequests.post(upload_url, files = files)\n```\n\nI see in the document that the session has same interface with requests, but when I try the code below:\n\n```\nsession.post(upload_url, files = files)\n```\n\nit throws an exception:\nTraceback (most recent call last):\n  File \"./TudouSdk.py\", line 177, in <module>\n    t.upload('/home/yangyu/Downloads/Screencast.mp4', 'emacs', '', 'emacs', '21')\n  File \"./TudouSdk.py\", line 170, in upload\n    session.post(upload_url, files = files)\n  File \"/usr/local/lib/python2.7/dist-packages/requests/sessions.py\", line 377, in post\n    return self.request('POST', url, data=data, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/rauth/session.py\", line 171, in request\n    req_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/rauth/oauth.py\", line 134, in sign\n    self._normalize_request_parameters(oauth_params, req_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/rauth/oauth.py\", line 77, in _normalize_request_parameters\n    for k, v in data.items():\nAttributeError: 'NoneType' object has no attribute 'items'\n\nwhat's wrong with this code?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/108", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/108/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/108/events", "html_url": "https://github.com/litl/rauth/issues/108", "id": 16442328, "node_id": "MDU6SXNzdWUxNjQ0MjMyOA==", "number": 108, "title": "Missing examples/twitter-timeline-web.py ", "user": {"login": "houmie", "id": 1832933, "node_id": "MDQ6VXNlcjE4MzI5MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1832933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houmie", "html_url": "https://github.com/houmie", "followers_url": "https://api.github.com/users/houmie/followers", "following_url": "https://api.github.com/users/houmie/following{/other_user}", "gists_url": "https://api.github.com/users/houmie/gists{/gist_id}", "starred_url": "https://api.github.com/users/houmie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houmie/subscriptions", "organizations_url": "https://api.github.com/users/houmie/orgs", "repos_url": "https://api.github.com/users/houmie/repos", "events_url": "https://api.github.com/users/houmie/events{/privacy}", "received_events_url": "https://api.github.com/users/houmie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-07T12:22:49Z", "updated_at": "2013-07-07T16:50:59Z", "closed_at": "2013-07-07T16:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "What happened to this example?\n\nI have trouble implementing Twitter like the facebook example:\n\n1) get_authorize_url and redirect to callback\n2) get the details to get get_auth_session()\n\nGet user details from twitter session.\n\nIt would be great to have such example. There is one attempt here, but it doesnt use get_auth_session().\n\nIt seems there was an accepted pull request, but I dont seem to find the file anymore:\n\nhttps://github.com/litl/rauth/pull/32\n\nthanks,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/107", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/107/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/107/events", "html_url": "https://github.com/litl/rauth/issues/107", "id": 15767402, "node_id": "MDU6SXNzdWUxNTc2NzQwMg==", "number": 107, "title": "Server or Code Problem", "user": {"login": "jcrubino", "id": 684720, "node_id": "MDQ6VXNlcjY4NDcyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/684720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcrubino", "html_url": "https://github.com/jcrubino", "followers_url": "https://api.github.com/users/jcrubino/followers", "following_url": "https://api.github.com/users/jcrubino/following{/other_user}", "gists_url": "https://api.github.com/users/jcrubino/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcrubino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcrubino/subscriptions", "organizations_url": "https://api.github.com/users/jcrubino/orgs", "repos_url": "https://api.github.com/users/jcrubino/repos", "events_url": "https://api.github.com/users/jcrubino/events{/privacy}", "received_events_url": "https://api.github.com/users/jcrubino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-06-19T20:43:59Z", "updated_at": "2013-07-05T17:07:42Z", "closed_at": "2013-07-05T17:07:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://pastebin.com/UCDVLeMD\n\nThe code for the above paste connects to a test server and it returns status 200 which it should but it is not sending back any data or I cannot decipher what data it is sending back\n\nI wrote to the devs.  They said it has been brought up before that only get requests work with their api and not posts but they only test with and against their php oauth library and have not had time to chase down if infact their end is not implemented correctly.\n\nIs it my code or their implementation of oauth in php?\nhttps://btct.co/faq  api notes\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/106", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/106/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/106/events", "html_url": "https://github.com/litl/rauth/issues/106", "id": 15691584, "node_id": "MDU6SXNzdWUxNTY5MTU4NA==", "number": 106, "title": "Scope params for OAuth 1", "user": {"login": "jcrubino", "id": 684720, "node_id": "MDQ6VXNlcjY4NDcyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/684720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcrubino", "html_url": "https://github.com/jcrubino", "followers_url": "https://api.github.com/users/jcrubino/followers", "following_url": "https://api.github.com/users/jcrubino/following{/other_user}", "gists_url": "https://api.github.com/users/jcrubino/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcrubino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcrubino/subscriptions", "organizations_url": "https://api.github.com/users/jcrubino/orgs", "repos_url": "https://api.github.com/users/jcrubino/repos", "events_url": "https://api.github.com/users/jcrubino/events{/privacy}", "received_events_url": "https://api.github.com/users/jcrubino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-18T14:39:23Z", "updated_at": "2013-06-18T14:48:25Z", "closed_at": "2013-06-18T14:47:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I pass parameters such as scope for Oauth1 request tokens?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/105", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/105/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/105/events", "html_url": "https://github.com/litl/rauth/issues/105", "id": 15420826, "node_id": "MDU6SXNzdWUxNTQyMDgyNg==", "number": 105, "title": "Saving get_session to request.session error", "user": {"login": "daxiang28", "id": 260903, "node_id": "MDQ6VXNlcjI2MDkwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/260903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxiang28", "html_url": "https://github.com/daxiang28", "followers_url": "https://api.github.com/users/daxiang28/followers", "following_url": "https://api.github.com/users/daxiang28/following{/other_user}", "gists_url": "https://api.github.com/users/daxiang28/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxiang28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxiang28/subscriptions", "organizations_url": "https://api.github.com/users/daxiang28/orgs", "repos_url": "https://api.github.com/users/daxiang28/repos", "events_url": "https://api.github.com/users/daxiang28/events{/privacy}", "received_events_url": "https://api.github.com/users/daxiang28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-06-11T20:31:41Z", "updated_at": "2013-06-18T16:47:03Z", "closed_at": "2013-06-18T16:47:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following when using this code with the OAuth2 get_session. This seems to work fine if i use get_auth_session(), but due to the raw JSON response back from an API, i am using the get_session() separately. It works fine if I don't set it to the request.session. Any thoughts?\n\nSteve\n\nCode:\nself.request.session['oauth_session'] = self.auth_service.get_session(token=token) \n\nError: \n'OAuth2Session' object has no attribute '**attrs**' \n/Library/Python/2.7/site-packages/requests/sessions.py in **getstate** Line 397\n        return dict((attr, getattr(self, attr, None)) for attr in self.**attrs**) \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/102", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/102/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/102/events", "html_url": "https://github.com/litl/rauth/issues/102", "id": 14960735, "node_id": "MDU6SXNzdWUxNDk2MDczNQ==", "number": 102, "title": "rauth 0.5.4 fails against requests 1.2.3", "user": {"login": "rbpasker", "id": 87866, "node_id": "MDQ6VXNlcjg3ODY2", "avatar_url": "https://avatars1.githubusercontent.com/u/87866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbpasker", "html_url": "https://github.com/rbpasker", "followers_url": "https://api.github.com/users/rbpasker/followers", "following_url": "https://api.github.com/users/rbpasker/following{/other_user}", "gists_url": "https://api.github.com/users/rbpasker/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbpasker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbpasker/subscriptions", "organizations_url": "https://api.github.com/users/rbpasker/orgs", "repos_url": "https://api.github.com/users/rbpasker/repos", "events_url": "https://api.github.com/users/rbpasker/events{/privacy}", "received_events_url": "https://api.github.com/users/rbpasker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}, {"id": 1426322, "node_id": "MDU6TGFiZWwxNDI2MzIy", "url": "https://api.github.com/repos/litl/rauth/labels/Feature%20Request", "name": "Feature Request", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-05-30T20:38:29Z", "updated_at": "2014-04-25T20:10:51Z", "closed_at": "2013-06-18T16:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "havent done any investigation, but when I pip installed requests==1.1, it started working again\n\n```\n\n  File \"/Users/rbp/Projects/tengahdb/default/lib/python2.7/site-packages/rauth/service.py\", line 212, in get_request_token\n    r = self.get_raw_request_token(method=method, **kwargs)\n  File \"/Users/rbp/Projects/tengahdb/default/lib/python2.7/site-packages/rauth/service.py\", line 186, in get_raw_request_token\n    return session.request(method, self.request_token_url, **kwargs)\n  File \"/Users/rbp/Projects/tengahdb/default/lib/python2.7/site-packages/rauth/session.py\", line 136, in request\n    req_kwargs['headers'] = CaseInsensitiveDict(req_kwargs['headers'])\n  File \"/Users/rbp/Projects/tengahdb/default/lib/python2.7/site-packages/rauth/utils.py\", line 55, in __init__\n    return super(CaseInsensitiveDict, self).__init__(lowered_d)\n  File \"/Users/rbp/Projects/tengahdb/default/lib/python2.7/site-packages/requests/structures.py\", line 69, in __init__\n    self.update(data, **kwargs)\n  File \"/Users/rbp/Projects/tengahdb/default/lib/python2.7/site-packages/rauth/utils.py\", line 75, in update\n    self._clear_lower_keys()\nAttributeError: 'CaseInsensitiveDict' object has no attribute '_clear_lower_keys'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/101", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/101/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/101/events", "html_url": "https://github.com/litl/rauth/issues/101", "id": 14876713, "node_id": "MDU6SXNzdWUxNDg3NjcxMw==", "number": 101, "title": "Pickling OAuth1Service", "user": {"login": "alexhayes", "id": 142916, "node_id": "MDQ6VXNlcjE0MjkxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/142916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhayes", "html_url": "https://github.com/alexhayes", "followers_url": "https://api.github.com/users/alexhayes/followers", "following_url": "https://api.github.com/users/alexhayes/following{/other_user}", "gists_url": "https://api.github.com/users/alexhayes/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhayes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhayes/subscriptions", "organizations_url": "https://api.github.com/users/alexhayes/orgs", "repos_url": "https://api.github.com/users/alexhayes/repos", "events_url": "https://api.github.com/users/alexhayes/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhayes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2013-05-29T07:20:23Z", "updated_at": "2013-10-17T21:20:31Z", "closed_at": "2013-07-18T16:59:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Perhaps I'm missing some fundamental part of rauth (or perhaps oauth...) however I don't seem to be able to pickle OAuth1Service for later use.\n\nIs there a way of 'reusing' the session created using OAuth1Service.get_auth_session?\n\nEssentially I'd like to pickle the oauth session so I can reuse it across short lived http requests.\n\nAs it seems rather unlikely that I'd be the first person wanting to do this, perhaps I've missed it in the docs or it isn't documented?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/97", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/97/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/97/events", "html_url": "https://github.com/litl/rauth/issues/97", "id": 13893705, "node_id": "MDU6SXNzdWUxMzg5MzcwNQ==", "number": 97, "title": "Linkedin uses \"oauth2_access_token\" instead of \"access_token\"", "user": {"login": "gonvaled", "id": 224267, "node_id": "MDQ6VXNlcjIyNDI2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/224267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonvaled", "html_url": "https://github.com/gonvaled", "followers_url": "https://api.github.com/users/gonvaled/followers", "following_url": "https://api.github.com/users/gonvaled/following{/other_user}", "gists_url": "https://api.github.com/users/gonvaled/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonvaled/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonvaled/subscriptions", "organizations_url": "https://api.github.com/users/gonvaled/orgs", "repos_url": "https://api.github.com/users/gonvaled/repos", "events_url": "https://api.github.com/users/gonvaled/events{/privacy}", "received_events_url": "https://api.github.com/users/gonvaled/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-05-02T14:33:47Z", "updated_at": "2013-06-06T15:46:05Z", "closed_at": "2013-05-02T16:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The key for the access token in the header should be configurable: at least Linkedin expects no bearer_auth and \"oauth2_access_token\" (see step 3 here: https://developer.linkedin.com/documents/authentication)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/96", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/96/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/96/events", "html_url": "https://github.com/litl/rauth/issues/96", "id": 13760024, "node_id": "MDU6SXNzdWUxMzc2MDAyNA==", "number": 96, "title": "Allow requests 1.2.0 or unforce the version", "user": {"login": "cdevienne", "id": 547135, "node_id": "MDQ6VXNlcjU0NzEzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/547135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdevienne", "html_url": "https://github.com/cdevienne", "followers_url": "https://api.github.com/users/cdevienne/followers", "following_url": "https://api.github.com/users/cdevienne/following{/other_user}", "gists_url": "https://api.github.com/users/cdevienne/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdevienne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdevienne/subscriptions", "organizations_url": "https://api.github.com/users/cdevienne/orgs", "repos_url": "https://api.github.com/users/cdevienne/repos", "events_url": "https://api.github.com/users/cdevienne/events{/privacy}", "received_events_url": "https://api.github.com/users/cdevienne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-04-29T13:33:35Z", "updated_at": "2013-04-29T15:21:54Z", "closed_at": "2013-04-29T15:21:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reasons the requests version is forced to 1.1.0 and I need to use requests 1.2.0.\n\nIt would be nice if the version is not forced at all, or in a more permissive way (ie >= 1.1.0).\n\nThanks,\n\nChristophe\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/95", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/95/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/95/events", "html_url": "https://github.com/litl/rauth/issues/95", "id": 13735317, "node_id": "MDU6SXNzdWUxMzczNTMxNw==", "number": 95, "title": "Make test command more resilient to missing tooling", "user": {"login": "koobs", "id": 1011612, "node_id": "MDQ6VXNlcjEwMTE2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1011612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koobs", "html_url": "https://github.com/koobs", "followers_url": "https://api.github.com/users/koobs/followers", "following_url": "https://api.github.com/users/koobs/following{/other_user}", "gists_url": "https://api.github.com/users/koobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/koobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koobs/subscriptions", "organizations_url": "https://api.github.com/users/koobs/orgs", "repos_url": "https://api.github.com/users/koobs/repos", "events_url": "https://api.github.com/users/koobs/events{/privacy}", "received_events_url": "https://api.github.com/users/koobs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2013-04-28T15:10:18Z", "updated_at": "2013-07-05T17:07:02Z", "closed_at": "2013-07-05T17:07:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "As an OS packager/porter, I'm not necessarily interested in pep/flake style development testing (though I will fix things and report upstream if I can). \n\nWhile these of course are highly relevant to the author for people contributing code back to the project and for QA'ing PR's, I'm mostly interested in assuring quality for our end users by ensuring the test suite passes, and reporting failures back\n\nAccordingly, I'd like to see the test command fail gracefully and continue in the face of ImportErrors for all the relevant steps in the test process. This also saves you (us) from having to create a special 'tests-only' command, which runs nothing but the tests (and feels a little backward)\n\nIdeally, a special Makefile to coordinate these things is not necessary in the medium term, and rauth can use standard pythonic command classes to do everything it needs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/89", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/89/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/89/events", "html_url": "https://github.com/litl/rauth/issues/89", "id": 12979533, "node_id": "MDU6SXNzdWUxMjk3OTUzMw==", "number": 89, "title": "How do I check in every request?", "user": {"login": "pykhan", "id": 1120146, "node_id": "MDQ6VXNlcjExMjAxNDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1120146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykhan", "html_url": "https://github.com/pykhan", "followers_url": "https://api.github.com/users/pykhan/followers", "following_url": "https://api.github.com/users/pykhan/following{/other_user}", "gists_url": "https://api.github.com/users/pykhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykhan/subscriptions", "organizations_url": "https://api.github.com/users/pykhan/orgs", "repos_url": "https://api.github.com/users/pykhan/repos", "events_url": "https://api.github.com/users/pykhan/events{/privacy}", "received_events_url": "https://api.github.com/users/pykhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-04-09T16:19:41Z", "updated_at": "2013-04-19T00:50:34Z", "closed_at": "2013-04-19T00:50:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a session created using the rauth 0.5.3 which I save in my session.  I'd like to check / do somethings on every request made using that session.  Is it possible?  If yes, how do I accomplish that? \n\nThanks.\nKhan\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/84", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/84/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/84/events", "html_url": "https://github.com/litl/rauth/issues/84", "id": 12610021, "node_id": "MDU6SXNzdWUxMjYxMDAyMQ==", "number": 84, "title": "Upgraded to 0.5.3 indicates \"Multiple client authentications found\" error", "user": {"login": "pykhan", "id": 1120146, "node_id": "MDQ6VXNlcjExMjAxNDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1120146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykhan", "html_url": "https://github.com/pykhan", "followers_url": "https://api.github.com/users/pykhan/followers", "following_url": "https://api.github.com/users/pykhan/following{/other_user}", "gists_url": "https://api.github.com/users/pykhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykhan/subscriptions", "organizations_url": "https://api.github.com/users/pykhan/orgs", "repos_url": "https://api.github.com/users/pykhan/repos", "events_url": "https://api.github.com/users/pykhan/events{/privacy}", "received_events_url": "https://api.github.com/users/pykhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 45, "created_at": "2013-03-29T16:20:45Z", "updated_at": "2013-04-09T16:23:32Z", "closed_at": "2013-04-09T16:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had the 0.5.2 version and I just upgraded to 0.5.3. After the update when I run my same code that was working 2 mins ago, is now producing \"Multiple client authentications found\" error and wouldn't let me get the access code anymore.\n\nHelp!!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/83", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/83/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/83/events", "html_url": "https://github.com/litl/rauth/issues/83", "id": 12595848, "node_id": "MDU6SXNzdWUxMjU5NTg0OA==", "number": 83, "title": "How do you save the session object ?", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-03-29T05:40:55Z", "updated_at": "2013-03-29T06:11:49Z", "closed_at": "2013-03-29T06:11:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "after you've authenticated, how do you save the session object, so you don't have to authenticate each time (i.e. when running a REST call from the console app)? Is it possible to simply create the session object from the consumer key/secret and the access key/secret? What if I already have those 4 pieces of information, how do I create the session object, so I don't need to do this OAuth dance? Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/82", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/82/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/82/events", "html_url": "https://github.com/litl/rauth/issues/82", "id": 12594334, "node_id": "MDU6SXNzdWUxMjU5NDMzNA==", "number": 82, "title": "Python 3 support", "user": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}, {"id": 1426329, "node_id": "MDU6TGFiZWwxNDI2MzI5", "url": "https://api.github.com/repos/litl/rauth/labels/Planned", "name": "Planned", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/litl/rauth/milestones/1", "html_url": "https://github.com/litl/rauth/milestone/1", "labels_url": "https://api.github.com/repos/litl/rauth/milestones/1/labels", "id": 298922, "node_id": "MDk6TWlsZXN0b25lMjk4OTIy", "number": 1, "title": "0.6.0", "description": null, "creator": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2013-03-29T03:40:56Z", "updated_at": "2013-07-18T21:36:26Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2013-03-29T03:40:56Z", "updated_at": "2013-07-18T21:36:26Z", "closed_at": "2013-07-18T21:36:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This has come up before, see #26 for instance. Unfortunately we were unable to merge that patch given the breaking changes in 0.5.0.\n\nHowever I would like to revisit this. There seems to be interest out there, e.g. https://github.com/omab/python-social-auth/issues/3.\n\nSo I would like to propose that we slate this for the 0.6.0 release and extend an invitation to whomever might be willing to feel free to hack on this. We would gladly accept pull requests and it might even be possible to revisit #26 and base a patch on that.\n\nI will try to work on this as I find free time, but that probably excludes the immediate future.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/81", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/81/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/81/events", "html_url": "https://github.com/litl/rauth/issues/81", "id": 12589988, "node_id": "MDU6SXNzdWUxMjU4OTk4OA==", "number": 81, "title": "We should remove rauth doc from pythonhosted?", "user": {"login": "yeukhon", "id": 943001, "node_id": "MDQ6VXNlcjk0MzAwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/943001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeukhon", "html_url": "https://github.com/yeukhon", "followers_url": "https://api.github.com/users/yeukhon/followers", "following_url": "https://api.github.com/users/yeukhon/following{/other_user}", "gists_url": "https://api.github.com/users/yeukhon/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeukhon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeukhon/subscriptions", "organizations_url": "https://api.github.com/users/yeukhon/orgs", "repos_url": "https://api.github.com/users/yeukhon/repos", "events_url": "https://api.github.com/users/yeukhon/events{/privacy}", "received_events_url": "https://api.github.com/users/yeukhon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-03-28T23:44:20Z", "updated_at": "2013-03-28T23:55:26Z", "closed_at": "2013-03-28T23:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://pythonhosted.org/rauth/\n\nI think this is outdated.\nI was using this because it came up as one of the top doc search result.\n\n```\nresponse =             service.get_access_token(method='GET'\n                             request_token=request_token,\n                             request_token_secret=request_token_secret)\n```\n\nThis part threw me off but luckily my vim has doc reader i was able to figured out.\n\nThanks for helping me on SO today.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/79", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/79/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/79/events", "html_url": "https://github.com/litl/rauth/issues/79", "id": 12509429, "node_id": "MDU6SXNzdWUxMjUwOTQyOQ==", "number": 79, "title": "oauth_callback", "user": {"login": "0xcaff", "id": 3277097, "node_id": "MDQ6VXNlcjMyNzcwOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3277097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xcaff", "html_url": "https://github.com/0xcaff", "followers_url": "https://api.github.com/users/0xcaff/followers", "following_url": "https://api.github.com/users/0xcaff/following{/other_user}", "gists_url": "https://api.github.com/users/0xcaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xcaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xcaff/subscriptions", "organizations_url": "https://api.github.com/users/0xcaff/orgs", "repos_url": "https://api.github.com/users/0xcaff/repos", "events_url": "https://api.github.com/users/0xcaff/events{/privacy}", "received_events_url": "https://api.github.com/users/0xcaff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-03-27T12:24:18Z", "updated_at": "2014-02-11T22:07:42Z", "closed_at": "2013-03-27T13:13:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no support for a callback url. Making some services incompatible with this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/78", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/78/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/78/events", "html_url": "https://github.com/litl/rauth/issues/78", "id": 12248427, "node_id": "MDU6SXNzdWUxMjI0ODQyNw==", "number": 78, "title": "OAuth2Service: 'get_access_token' breaks", "user": {"login": "pykhan", "id": 1120146, "node_id": "MDQ6VXNlcjExMjAxNDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1120146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykhan", "html_url": "https://github.com/pykhan", "followers_url": "https://api.github.com/users/pykhan/followers", "following_url": "https://api.github.com/users/pykhan/following{/other_user}", "gists_url": "https://api.github.com/users/pykhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykhan/subscriptions", "organizations_url": "https://api.github.com/users/pykhan/orgs", "repos_url": "https://api.github.com/users/pykhan/repos", "events_url": "https://api.github.com/users/pykhan/events{/privacy}", "received_events_url": "https://api.github.com/users/pykhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-03-20T21:06:48Z", "updated_at": "2013-03-21T17:44:30Z", "closed_at": "2013-03-21T17:44:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my first time creating issues, so pardon for not knowing the exact way to submit the request.\n\nI am connecting to a Muel server for authentication and at the step where I call \"get_access_token\" function, the code breaks.  However if I call the \"get_raw_access_token\" function and use \"json.loads\" and then try to get the \"access_token\" key, everything works great.\n\nAt the moment I am having to extend that class and override the \"get_access_token\" function in my extended class, that I'd like to just use it from the base class.  Thanks again for looking into this.\n\nKhan\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/77", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/77/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/77/events", "html_url": "https://github.com/litl/rauth/issues/77", "id": 12071556, "node_id": "MDU6SXNzdWUxMjA3MTU1Ng==", "number": 77, "title": "issue with Stripe connect when using rauth 0.5", "user": {"login": "gterzian", "id": 2792687, "node_id": "MDQ6VXNlcjI3OTI2ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2792687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gterzian", "html_url": "https://github.com/gterzian", "followers_url": "https://api.github.com/users/gterzian/followers", "following_url": "https://api.github.com/users/gterzian/following{/other_user}", "gists_url": "https://api.github.com/users/gterzian/gists{/gist_id}", "starred_url": "https://api.github.com/users/gterzian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gterzian/subscriptions", "organizations_url": "https://api.github.com/users/gterzian/orgs", "repos_url": "https://api.github.com/users/gterzian/repos", "events_url": "https://api.github.com/users/gterzian/events{/privacy}", "received_events_url": "https://api.github.com/users/gterzian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-03-15T16:52:41Z", "updated_at": "2013-03-26T19:22:39Z", "closed_at": "2013-03-26T19:22:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following error using 0.5:\n\nFile \"/app/.heroku/python/lib/python2.7/site-packages/rauth/service.py\", line 441, in get_access_token\n    return parse_utf8_qsl(r.content)['access_token']\n\nKeyError: 'access_token'\n\nI switched back to 0.4.17 and it is working fine again. \n\nThis is using https://stripe.com/docs/connect/oauth\n\nperhaps another issue with the provider returning JSON (saw this happened in another issue relating to google oauth)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/74", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/74/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/74/events", "html_url": "https://github.com/litl/rauth/issues/74", "id": 11854216, "node_id": "MDU6SXNzdWUxMTg1NDIxNg==", "number": 74, "title": "Some providers return data in JSON format", "user": {"login": "alexei", "id": 96283, "node_id": "MDQ6VXNlcjk2Mjgz", "avatar_url": "https://avatars2.githubusercontent.com/u/96283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexei", "html_url": "https://github.com/alexei", "followers_url": "https://api.github.com/users/alexei/followers", "following_url": "https://api.github.com/users/alexei/following{/other_user}", "gists_url": "https://api.github.com/users/alexei/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexei/subscriptions", "organizations_url": "https://api.github.com/users/alexei/orgs", "repos_url": "https://api.github.com/users/alexei/repos", "events_url": "https://api.github.com/users/alexei/events{/privacy}", "received_events_url": "https://api.github.com/users/alexei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-03-10T16:29:17Z", "updated_at": "2013-03-21T17:44:34Z", "closed_at": "2013-03-21T17:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\n\nWhen you request the access_token from Google, the application throws an KeyError('access_token',) exception. That's because Google returns the data in JSON format. See https://developers.google.com/accounts/docs/OAuth2WebServer#handlingtheresponse\nMy code now looks like:\n\n``` python\nr = google.get_raw_access_token(data=data)\ntoken_data = json.loads(r.content)\nsession = google.get_session(token_data[\"access_token\"])\n```\n\ninstead of:\n\n``` python\nsession = google.get_auth_session(data=data)\n```\n\nMaybe add a way to tell the library that it should decode the response using json.loads instead of urlparse.parse_qsl?\n\nAlexei\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/73", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/73/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/73/events", "html_url": "https://github.com/litl/rauth/issues/73", "id": 11853683, "node_id": "MDU6SXNzdWUxMTg1MzY4Mw==", "number": 73, "title": "Remove unittest2 from install_requires", "user": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2013-03-10T15:48:00Z", "updated_at": "2013-07-18T21:36:53Z", "closed_at": "2013-07-18T21:36:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Setup should not be installing this, however we need a way to automatically install this for Python < 2.7.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/72", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/72/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/72/events", "html_url": "https://github.com/litl/rauth/issues/72", "id": 11853107, "node_id": "MDU6SXNzdWUxMTg1MzEwNw==", "number": 72, "title": "Bash is unnecessary for test script", "user": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-03-10T15:01:11Z", "updated_at": "2013-03-11T19:48:40Z", "closed_at": "2013-03-11T19:48:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "/bin/sh should do it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/71", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/71/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/71/events", "html_url": "https://github.com/litl/rauth/issues/71", "id": 11807211, "node_id": "MDU6SXNzdWUxMTgwNzIxMQ==", "number": 71, "title": "OAuth2Service - bug with docs or code", "user": {"login": "mwaterfall", "id": 132291, "node_id": "MDQ6VXNlcjEzMjI5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/132291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwaterfall", "html_url": "https://github.com/mwaterfall", "followers_url": "https://api.github.com/users/mwaterfall/followers", "following_url": "https://api.github.com/users/mwaterfall/following{/other_user}", "gists_url": "https://api.github.com/users/mwaterfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwaterfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwaterfall/subscriptions", "organizations_url": "https://api.github.com/users/mwaterfall/orgs", "repos_url": "https://api.github.com/users/mwaterfall/repos", "events_url": "https://api.github.com/users/mwaterfall/events{/privacy}", "received_events_url": "https://api.github.com/users/mwaterfall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-03-08T14:42:46Z", "updated_at": "2013-03-21T17:44:21Z", "closed_at": "2013-03-21T17:44:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs for the [OAuth2Service](https://rauth.readthedocs.org/en/latest/api/#rauth.OAuth2Service) state that to get the authorize url, you do the following:\n\n``` python\n# the return URL is used to validate the request\nurl = service.get_authorize_url(redirect_uri='http://example.com/',\n                                params={'response_type': 'code'})\n```\n\nHowever, this actually encodes the entire `params` dict into the url. Here's the offending method:\n\nhttps://github.com/litl/rauth/blob/master/rauth/service.py#L393\n\n``` python\n    def get_authorize_url(self, **params):\n        '''\n        Returns a formatted authorize URL.\n\n        :param \\*\\*params: Additional keyworded arguments to be added to the\n            URL querystring.\n        :type \\*\\*params: dict\n        '''\n\n        params.update({'client_id': self.client_id})\n        return self.authorize_url + '?' + urlencode(params)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/68", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/68/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/68/events", "html_url": "https://github.com/litl/rauth/issues/68", "id": 11736774, "node_id": "MDU6SXNzdWUxMTczNjc3NA==", "number": 68, "title": "OAuth1Session request wrapper eats some POST data", "user": {"login": "nyov", "id": 438293, "node_id": "MDQ6VXNlcjQzODI5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/438293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyov", "html_url": "https://github.com/nyov", "followers_url": "https://api.github.com/users/nyov/followers", "following_url": "https://api.github.com/users/nyov/following{/other_user}", "gists_url": "https://api.github.com/users/nyov/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyov/subscriptions", "organizations_url": "https://api.github.com/users/nyov/orgs", "repos_url": "https://api.github.com/users/nyov/repos", "events_url": "https://api.github.com/users/nyov/events{/privacy}", "received_events_url": "https://api.github.com/users/nyov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2013-03-06T22:42:46Z", "updated_at": "2013-03-26T18:32:47Z", "closed_at": "2013-03-26T18:32:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From #66.\nThe issue seems to be when sending a POST request with JSON encoded data,\nwhich gets wrongly parsed by `parse_qsl()` in [session.py](https://github.com/litl/rauth/blob/c6447ddb5427246d58e6c2077bdc71404b4d1def/rauth/session.py#L143).\n\nThe result is that `data = {'category_id': '8'}` gets transformed to `category_id=8` in the POST body and `json.dumps( {'category_id': '8'} )` gets completely lost (`{}` or `None` depending on Requests version)\n\nRemoving session.py lines 142,143 fixed the issue, maybe it should to check the Content-Type?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/67", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/67/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/67/events", "html_url": "https://github.com/litl/rauth/issues/67", "id": 11735679, "node_id": "MDU6SXNzdWUxMTczNTY3OQ==", "number": 67, "title": "Default request headers should be matched case-insensitive", "user": {"login": "nyov", "id": 438293, "node_id": "MDQ6VXNlcjQzODI5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/438293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyov", "html_url": "https://github.com/nyov", "followers_url": "https://api.github.com/users/nyov/followers", "following_url": "https://api.github.com/users/nyov/following{/other_user}", "gists_url": "https://api.github.com/users/nyov/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyov/subscriptions", "organizations_url": "https://api.github.com/users/nyov/orgs", "repos_url": "https://api.github.com/users/nyov/repos", "events_url": "https://api.github.com/users/nyov/events{/privacy}", "received_events_url": "https://api.github.com/users/nyov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-06T22:16:57Z", "updated_at": "2013-03-07T20:10:37Z", "closed_at": "2013-03-07T20:10:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From #66.\nThe headers keywords ('Content-Type' especially here) must be matched exactly (case sensitive) to replace the default values.\nThey should be filtered in a case-insensitive way.\nOtherwise they get added as duplicates, or in the instance of sending a POST with body where the script assumes content-type urlencoded (GET), chokes on some body content (e.g. JSON data)\n\n``` python\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n/usr/lib/python2.7/dist-packages/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    176             else:\n    177                 filename = fname\n--> 178             __builtin__.execfile(filename, *where)\n\n[...]/rauth.git/magento-test2.py in <module>()\n    133 #    data=json.dumps(payload),\n    134     headers=headers,\n--> 135     data=payload,\n    136     #access_token=access_token,\n    137     #access_token_secret=access_token_secret\n\n[...]/rauth.git/rauth/session.pyc in request(self, method, url, header_auth, realm, **req_kwargs)\n    161                                 url,\n    162                                 oauth_params,\n--> 163                                 req_kwargs)\n    164 \n    165         if header_auth:\n\n[...]/rauth.git/rauth/oauth.pyc in sign(self, consumer_secret, access_token_secret, method, url, oauth_params, req_kwargs)\n    132 \n    133         oauth_params = \\\n--> 134             self._normalize_request_parameters(oauth_params, req_kwargs)\n    135         parameters = map(self._escape, [method, url, oauth_params])\n    136 \n\n[...]/rauth.git/rauth/oauth.pyc in _normalize_request_parameters(self, oauth_params, req_kwargs)\n     75         if 'Content-Type' in headers and \\\n     76                 headers['Content-Type'] == FORM_URLENCODED:\n---> 77             for k, v in data.items():\n     78                 normalized += [(k, v)]\n     79 \n\nAttributeError: 'str' object has no attribute 'items'\n```\n\nwhere `data = payload = json.dumps({'test':'me'})` and `headers = {'content-type': 'application/json'}` in a POST request\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/66", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/66/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/66/events", "html_url": "https://github.com/litl/rauth/issues/66", "id": 11721552, "node_id": "MDU6SXNzdWUxMTcyMTU1Mg==", "number": 66, "title": "OAuth 1.0 requests issues", "user": {"login": "nyov", "id": 438293, "node_id": "MDQ6VXNlcjQzODI5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/438293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyov", "html_url": "https://github.com/nyov", "followers_url": "https://api.github.com/users/nyov/followers", "following_url": "https://api.github.com/users/nyov/following{/other_user}", "gists_url": "https://api.github.com/users/nyov/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyov/subscriptions", "organizations_url": "https://api.github.com/users/nyov/orgs", "repos_url": "https://api.github.com/users/nyov/repos", "events_url": "https://api.github.com/users/nyov/events{/privacy}", "received_events_url": "https://api.github.com/users/nyov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-03-06T16:54:19Z", "updated_at": "2013-03-07T05:57:24Z", "closed_at": "2013-03-07T05:24:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm having some issues in 0.5 with OAuth 1.0\n\nThe default oauth_callback got dropped?\nOk, I got that working again by adding `params={'oauth_callback': 'oob'}` into `service.get_request_token()` for my specific API.\n\nSome more trouble was `session.request()` when trying to set a content-type header:\nUnless it's named exactly `'Content-Type'` (e.g. application/json) the request will add it instead of replacing the default `'Content-Type': 'application/x-www-form-urlencoded'`, which is strange because it should be case insensitive.\n\nThe real problem I can't figure out though is, that a `session.post()` even with setting `header_auth=True` will silently eat any `data=payload` if it's json encoded:\n`r = session.post(url,data=json.dumps({'status':'ok'})`\nwill have an empty `r.request.data`.\n\nAnd on another note, I was missing some error reporting if the server response is something other than 200 in the authentication stage.\nI had to hack some 'print's into the source to catch server responses like `oauth_problem=parameter_absent&oauth_parameters_absent=oauth_verifier` or `oauth_problem=parameter_rejected&message=oauth_callback` which only failed with \"obscure\" lines like\n\n``` python\n  File \"[...]/rauth.git/rauth/service.py\", line 191, in get_request_token\n    return data['oauth_token'], data['oauth_token_secret']\nKeyError: 'oauth_token'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/65", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/65/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/65/events", "html_url": "https://github.com/litl/rauth/issues/65", "id": 11563689, "node_id": "MDU6SXNzdWUxMTU2MzY4OQ==", "number": 65, "title": "Github example fails with an exception", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2013-03-01T21:50:40Z", "updated_at": "2013-03-03T18:52:00Z", "closed_at": "2013-03-01T23:21:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run the Github example I get the following traceback:\n\n```\nTraceback (most recent call last):\n  File \".\\test.py\", line 29, in <module>\n    access_token=access_token).content\n  File \"C:\\Users\\user\\github-api-proxy\\lib\\site-packages\\rauth\\service.py\", line 57, in get\n    return self.request('GET', url, **kwargs)\n  File \"C:\\Users\\user\\github-api-proxy\\lib\\site-packages\\rauth\\service.py\", line 399, in request\n    response = self.session.request(method, uri, **kwargs)\nTypeError: request() got an unexpected keyword argument 'access_token'\n```\n\nThis looks like it shouldn't happen. I'm running Python 2.7 on windows.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/60", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/60/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/60/events", "html_url": "https://github.com/litl/rauth/issues/60", "id": 10921889, "node_id": "MDU6SXNzdWUxMDkyMTg4OQ==", "number": 60, "title": "OAuth2Service.access_token should be automatically set by get_access_token", "user": {"login": "appsforartists", "id": 926648, "node_id": "MDQ6VXNlcjkyNjY0OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/926648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/appsforartists", "html_url": "https://github.com/appsforartists", "followers_url": "https://api.github.com/users/appsforartists/followers", "following_url": "https://api.github.com/users/appsforartists/following{/other_user}", "gists_url": "https://api.github.com/users/appsforartists/gists{/gist_id}", "starred_url": "https://api.github.com/users/appsforartists/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/appsforartists/subscriptions", "organizations_url": "https://api.github.com/users/appsforartists/orgs", "repos_url": "https://api.github.com/users/appsforartists/repos", "events_url": "https://api.github.com/users/appsforartists/events{/privacy}", "received_events_url": "https://api.github.com/users/appsforartists/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2013-02-12T19:42:57Z", "updated_at": "2013-02-18T18:42:56Z", "closed_at": "2013-02-18T18:42:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\npprint(runkeeper.get_access_token(data = {'code': '7ff5d79fb7094253acc61244c897182a', 'redirect_uri': 'http://localhost:8080/oauth/runkeeper/set_token/'}).content)\n>>> {u'access_token': u'56558399c20d878f84fd3c87c98dd55e', u'token_type': u'Bearer'}\nprint runkeeper.access_token\n>>> None\n```\n\nShouldn't get_access_token set self.access_token?  I'd be happy to make this change.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/56", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/56/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/56/events", "html_url": "https://github.com/litl/rauth/issues/56", "id": 9336747, "node_id": "MDU6SXNzdWU5MzM2NzQ3", "number": 56, "title": "Update Requests to v1.0.0", "user": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1426329, "node_id": "MDU6TGFiZWwxNDI2MzI5", "url": "https://api.github.com/repos/litl/rauth/labels/Planned", "name": "Planned", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 42, "created_at": "2012-12-17T15:46:15Z", "updated_at": "2013-03-05T15:29:59Z", "closed_at": "2013-03-05T15:29:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/50", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/50/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/50/events", "html_url": "https://github.com/litl/rauth/issues/50", "id": 7644851, "node_id": "MDU6SXNzdWU3NjQ0ODUx", "number": 50, "title": "Implicit, default API endpoint and token", "user": {"login": "Leftium", "id": 381217, "node_id": "MDQ6VXNlcjM4MTIxNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/381217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Leftium", "html_url": "https://github.com/Leftium", "followers_url": "https://api.github.com/users/Leftium/followers", "following_url": "https://api.github.com/users/Leftium/following{/other_user}", "gists_url": "https://api.github.com/users/Leftium/gists{/gist_id}", "starred_url": "https://api.github.com/users/Leftium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Leftium/subscriptions", "organizations_url": "https://api.github.com/users/Leftium/orgs", "repos_url": "https://api.github.com/users/Leftium/repos", "events_url": "https://api.github.com/users/Leftium/events{/privacy}", "received_events_url": "https://api.github.com/users/Leftium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}, {"id": 1426322, "node_id": "MDU6TGFiZWwxNDI2MzIy", "url": "https://api.github.com/repos/litl/rauth/labels/Feature%20Request", "name": "Feature Request", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-10-17T02:16:52Z", "updated_at": "2012-10-22T19:53:23Z", "closed_at": "2012-10-22T19:22:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Most API calls will reuse the same base URL and token. It would be nice to set default values for them once and remove the redundant clutter from each API call. (DRY: Don't repeat yourself^^) For example:\n\n``` python\nfacebook = OAuth2Service(...)\nfacebook.base_url = BASE_URL\nfacebook.access_token = ACCESS_TOKEN\n\nprofile = facebook.get('me').content\nfriends = facebook.get('me/friends').content\nfeed = facebook.get('me/feed').content\n```\n\nInstead of:\n\n``` python\nfacebook = OAuth2Service(...)\n\nprofile = facebook.get(BASE_URL + 'me', params=dict(access_token=ACCESS_TOKEN)).content\nfriends = facebook.get(BASE_URL + 'me/friends', params=dict(access_token=ACCESS_TOKEN)).content\nfeed = facebook.get(BASE_URL + 'me/feed', params=dict(access_token=ACCESS_TOKEN)).content\n```\n\nOf course, the default values could be easily overridden by supplying an absolute URL and/or `access_token` in `params`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/44", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/44/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/44/events", "html_url": "https://github.com/litl/rauth/issues/44", "id": 7238025, "node_id": "MDU6SXNzdWU3MjM4MDI1", "number": 44, "title": "Problem with binary data", "user": {"login": "marekrei", "id": 1030188, "node_id": "MDQ6VXNlcjEwMzAxODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1030188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marekrei", "html_url": "https://github.com/marekrei", "followers_url": "https://api.github.com/users/marekrei/followers", "following_url": "https://api.github.com/users/marekrei/following{/other_user}", "gists_url": "https://api.github.com/users/marekrei/gists{/gist_id}", "starred_url": "https://api.github.com/users/marekrei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marekrei/subscriptions", "organizations_url": "https://api.github.com/users/marekrei/orgs", "repos_url": "https://api.github.com/users/marekrei/repos", "events_url": "https://api.github.com/users/marekrei/events{/privacy}", "received_events_url": "https://api.github.com/users/marekrei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2012-09-29T14:52:12Z", "updated_at": "2012-10-17T17:47:14Z", "closed_at": "2012-10-17T17:47:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing a Smugmug photo uploader using rauth (nice library, thank you). However, I have encountered a problem.\n\nThe API specifies I attach the image as the main body:\n\n```\ndata = open('image.jpg', 'rb').read()\nresponse = smugmug.put('http://upload.smugmug.com/image.jpg',\n   data=data,\n   access_token=access_token,\n   access_token_secret=access_token_secret,\n   header_auth = True,\n   headers={'X-Smug-AlbumID':str(album_id), 'X-Smug-Version':'1.2.2', 'X-Smug-ResponseType':'JSON'})\n```\n\nThis mostly does not work and Smugmug responds that the signature is invalid. However, it somehow worked with one tiny (5x5) sample image, so I dug into the code to find the problem. Apparently in SignatureMethod._normalize_request_parameters(), the binary data gets detected as a string, and this causes it to be passed to the parse_qsl() method. Now for most images, the parse_qsl() method returns some kind of re-encoded version of the binary data, but for the tiny sample image it returns nothing, [ ]. \n\nApparently Smugmug doesn't want the data to be included in the signature, and if parse_qsl() returns nothing, it is correctly excluded and everything works. For other images, the bindary data gets included and the signature is wrong.\n\nIf I add \n\n```\nnormalized = []\n```\n\nright after\n\n```\nnormalized = parse_qsl(request.data)\n```\n\nthen uploading works.\n\nIs Smugmug wrong to exclude the data? Or is rauth wrong to include it (in such a form at least)? Checking the OAuth specification, it says:\n\n```\nThe request parameters are collected, sorted and concatenated into a normalized string:\n   Parameters in the OAuth HTTP Authorization header excluding the realm parameter.\n   Parameters in the HTTP POST request body (with a content-type of application/x-www-form-urlencoded).\n   HTTP GET parameters added to the URLs in the query part (as defined by [RFC3986] section 3).\n```\n\nTechnically, it doesn't say anything about the body/data of a PUT request. However, Smugmug specification allows POST as well and that has the same symptoms.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/41", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/41/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/41/events", "html_url": "https://github.com/litl/rauth/issues/41", "id": 7075017, "node_id": "MDU6SXNzdWU3MDc1MDE3", "number": 41, "title": "Facebook demo app seems broken?", "user": {"login": "neogenix", "id": 141967, "node_id": "MDQ6VXNlcjE0MTk2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/141967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neogenix", "html_url": "https://github.com/neogenix", "followers_url": "https://api.github.com/users/neogenix/followers", "following_url": "https://api.github.com/users/neogenix/following{/other_user}", "gists_url": "https://api.github.com/users/neogenix/gists{/gist_id}", "starred_url": "https://api.github.com/users/neogenix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neogenix/subscriptions", "organizations_url": "https://api.github.com/users/neogenix/orgs", "repos_url": "https://api.github.com/users/neogenix/repos", "events_url": "https://api.github.com/users/neogenix/events{/privacy}", "received_events_url": "https://api.github.com/users/neogenix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2012-09-23T21:18:13Z", "updated_at": "2012-09-23T21:39:49Z", "closed_at": "2012-09-23T21:37:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Either something was changed on the facebook side, or your app is misbehaving, facebook demo app doesn't work! :( \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/40", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/40/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/40/events", "html_url": "https://github.com/litl/rauth/issues/40", "id": 7074645, "node_id": "MDU6SXNzdWU3MDc0NjQ1", "number": 40, "title": "setup does not return proper exit code", "user": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-09-23T20:35:34Z", "updated_at": "2012-11-14T00:32:44Z", "closed_at": "2012-11-14T00:32:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On failed coverage the setup script should exit with a non-zero exit code. However currently this does not happen.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/38", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/38/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/38/events", "html_url": "https://github.com/litl/rauth/issues/38", "id": 7043521, "node_id": "MDU6SXNzdWU3MDQzNTIx", "number": 38, "title": "OAuth2 terminology for client ID/secret is wrong", "user": {"login": "joeshaw", "id": 39916, "node_id": "MDQ6VXNlcjM5OTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/39916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeshaw", "html_url": "https://github.com/joeshaw", "followers_url": "https://api.github.com/users/joeshaw/followers", "following_url": "https://api.github.com/users/joeshaw/following{/other_user}", "gists_url": "https://api.github.com/users/joeshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeshaw/subscriptions", "organizations_url": "https://api.github.com/users/joeshaw/orgs", "repos_url": "https://api.github.com/users/joeshaw/repos", "events_url": "https://api.github.com/users/joeshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/joeshaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-09-21T15:15:27Z", "updated_at": "2012-10-19T17:40:04Z", "closed_at": "2012-10-19T17:40:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reading over the OAuth 2 spec (several versions, including 12, 16, and the [latest, 31](http://tools.ietf.org/html/draft-ietf-oauth-v2-31)) I found that rauth is using old OAuth 1.0 terminology for some things in the `OAuth2Service` object.  Namely, `consumer_key` should be `client_id` and `consumer_secret` should be `client_secret`. (See [section 2.3.1](http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-2.3.1))\n\nMaybe we should switch to the correct names with backward compatibility for the other names with a DeprecationWarning?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/36", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/36/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/36/events", "html_url": "https://github.com/litl/rauth/issues/36", "id": 6401265, "node_id": "MDU6SXNzdWU2NDAxMjY1", "number": 36, "title": "oauth params replaces the params", "user": {"login": "ifthikhan", "id": 730210, "node_id": "MDQ6VXNlcjczMDIxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/730210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ifthikhan", "html_url": "https://github.com/ifthikhan", "followers_url": "https://api.github.com/users/ifthikhan/followers", "following_url": "https://api.github.com/users/ifthikhan/following{/other_user}", "gists_url": "https://api.github.com/users/ifthikhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ifthikhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ifthikhan/subscriptions", "organizations_url": "https://api.github.com/users/ifthikhan/orgs", "repos_url": "https://api.github.com/users/ifthikhan/repos", "events_url": "https://api.github.com/users/ifthikhan/events{/privacy}", "received_events_url": "https://api.github.com/users/ifthikhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-08-23T08:44:03Z", "updated_at": "2012-08-24T08:28:35Z", "closed_at": "2012-08-23T23:57:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the \"header_auth\" argument is set to false, the oauth params replaces the params. This is done in hook.py at line 127. Is there a specific reason for doing this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/34", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/34/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/34/events", "html_url": "https://github.com/litl/rauth/issues/34", "id": 6348963, "node_id": "MDU6SXNzdWU2MzQ4OTYz", "number": 34, "title": "PlainText Signature", "user": {"login": "ifthikhan", "id": 730210, "node_id": "MDQ6VXNlcjczMDIxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/730210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ifthikhan", "html_url": "https://github.com/ifthikhan", "followers_url": "https://api.github.com/users/ifthikhan/followers", "following_url": "https://api.github.com/users/ifthikhan/following{/other_user}", "gists_url": "https://api.github.com/users/ifthikhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ifthikhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ifthikhan/subscriptions", "organizations_url": "https://api.github.com/users/ifthikhan/orgs", "repos_url": "https://api.github.com/users/ifthikhan/repos", "events_url": "https://api.github.com/users/ifthikhan/events{/privacy}", "received_events_url": "https://api.github.com/users/ifthikhan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}, {"id": 1426322, "node_id": "MDU6TGFiZWwxNDI2MzIy", "url": "https://api.github.com/repos/litl/rauth/labels/Feature%20Request", "name": "Feature Request", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-08-21T12:26:48Z", "updated_at": "2013-03-05T15:30:36Z", "closed_at": "2013-03-05T15:30:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that rauth currently does not support plain-text signatures. Is it in the works? I could help if it is not currently being worked on.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/25", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/25/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/25/events", "html_url": "https://github.com/litl/rauth/issues/25", "id": 5918554, "node_id": "MDU6SXNzdWU1OTE4NTU0", "number": 25, "title": "Linkedin Share POST call", "user": {"login": "ifthikhan", "id": 730210, "node_id": "MDQ6VXNlcjczMDIxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/730210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ifthikhan", "html_url": "https://github.com/ifthikhan", "followers_url": "https://api.github.com/users/ifthikhan/followers", "following_url": "https://api.github.com/users/ifthikhan/following{/other_user}", "gists_url": "https://api.github.com/users/ifthikhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ifthikhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ifthikhan/subscriptions", "organizations_url": "https://api.github.com/users/ifthikhan/orgs", "repos_url": "https://api.github.com/users/ifthikhan/repos", "events_url": "https://api.github.com/users/ifthikhan/events{/privacy}", "received_events_url": "https://api.github.com/users/ifthikhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2012-07-30T14:15:25Z", "updated_at": "2012-07-31T14:41:54Z", "closed_at": "2012-07-31T14:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "A call to the Linkedin API https://api.linkedin.com/people/~/shares for sharing requires to send a literal JSON in the body. \n\nWith rauth if I pass a dictionary to the \"data\" argument the dictionary is converted into a key value pair seperated by ampersands, however if I assign the return value of \"json.dump(body_data)\" to the \"data\" argument then the body is empty.\n\nI would appreciate if someone can shed some light on how to send a literal JSON string  in the body.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/23", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/23/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/23/events", "html_url": "https://github.com/litl/rauth/issues/23", "id": 5858685, "node_id": "MDU6SXNzdWU1ODU4Njg1", "number": 23, "title": "App Engine compatibility", "user": {"login": "erichiggins", "id": 507145, "node_id": "MDQ6VXNlcjUwNzE0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/507145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erichiggins", "html_url": "https://github.com/erichiggins", "followers_url": "https://api.github.com/users/erichiggins/followers", "following_url": "https://api.github.com/users/erichiggins/following{/other_user}", "gists_url": "https://api.github.com/users/erichiggins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erichiggins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erichiggins/subscriptions", "organizations_url": "https://api.github.com/users/erichiggins/orgs", "repos_url": "https://api.github.com/users/erichiggins/repos", "events_url": "https://api.github.com/users/erichiggins/events{/privacy}", "received_events_url": "https://api.github.com/users/erichiggins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}, {"id": 1426322, "node_id": "MDU6TGFiZWwxNDI2MzIy", "url": "https://api.github.com/repos/litl/rauth/labels/Feature%20Request", "name": "Feature Request", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-07-26T16:59:28Z", "updated_at": "2013-03-05T15:33:55Z", "closed_at": "2013-03-05T15:33:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the rauth package depends on the Python requests package, which itself is incompatible.\nhttps://github.com/kennethreitz/requests/issues/search?q=Appengine\n\nI've looked through the code and it seems possible (maybe even trivial) to branch rauth for use with webapp2 on App Engine.\nhttp://webapp-improved.appspot.com/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/22", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/22/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/22/events", "html_url": "https://github.com/litl/rauth/issues/22", "id": 5854238, "node_id": "MDU6SXNzdWU1ODU0MjM4", "number": 22, "title": "Example of integration of rauth with web2py for Google OAuth2", "user": {"login": "gonvaled", "id": 224267, "node_id": "MDQ6VXNlcjIyNDI2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/224267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonvaled", "html_url": "https://github.com/gonvaled", "followers_url": "https://api.github.com/users/gonvaled/followers", "following_url": "https://api.github.com/users/gonvaled/following{/other_user}", "gists_url": "https://api.github.com/users/gonvaled/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonvaled/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonvaled/subscriptions", "organizations_url": "https://api.github.com/users/gonvaled/orgs", "repos_url": "https://api.github.com/users/gonvaled/repos", "events_url": "https://api.github.com/users/gonvaled/events{/privacy}", "received_events_url": "https://api.github.com/users/gonvaled/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-07-26T13:59:00Z", "updated_at": "2013-07-10T13:01:05Z", "closed_at": "2013-06-19T22:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Provide a simple application example of how to integrate web2py with rauth for Google OAuth2.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/21", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/21/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/21/events", "html_url": "https://github.com/litl/rauth/issues/21", "id": 5847109, "node_id": "MDU6SXNzdWU1ODQ3MTA5", "number": 21, "title": "Allow use of HTTPS with verify=False", "user": {"login": "r1chardj0n3s", "id": 663366, "node_id": "MDQ6VXNlcjY2MzM2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/663366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r1chardj0n3s", "html_url": "https://github.com/r1chardj0n3s", "followers_url": "https://api.github.com/users/r1chardj0n3s/followers", "following_url": "https://api.github.com/users/r1chardj0n3s/following{/other_user}", "gists_url": "https://api.github.com/users/r1chardj0n3s/gists{/gist_id}", "starred_url": "https://api.github.com/users/r1chardj0n3s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r1chardj0n3s/subscriptions", "organizations_url": "https://api.github.com/users/r1chardj0n3s/orgs", "repos_url": "https://api.github.com/users/r1chardj0n3s/repos", "events_url": "https://api.github.com/users/r1chardj0n3s/events{/privacy}", "received_events_url": "https://api.github.com/users/r1chardj0n3s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2012-07-26T05:59:13Z", "updated_at": "2012-07-27T01:50:10Z", "closed_at": "2012-07-27T01:29:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would love to use rauth but cannot because the HTTPS server I'm accessing doesn't have a verifiable SSL cert. I need to be able to tell requests to not verify the SSL cert.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/20", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/20/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/20/events", "html_url": "https://github.com/litl/rauth/issues/20", "id": 5844244, "node_id": "MDU6SXNzdWU1ODQ0MjQ0", "number": 20, "title": "rauth won't install with pip if requests is not already installed", "user": {"login": "bbigras", "id": 24027, "node_id": "MDQ6VXNlcjI0MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/24027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbigras", "html_url": "https://github.com/bbigras", "followers_url": "https://api.github.com/users/bbigras/followers", "following_url": "https://api.github.com/users/bbigras/following{/other_user}", "gists_url": "https://api.github.com/users/bbigras/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbigras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbigras/subscriptions", "organizations_url": "https://api.github.com/users/bbigras/orgs", "repos_url": "https://api.github.com/users/bbigras/repos", "events_url": "https://api.github.com/users/bbigras/events{/privacy}", "received_events_url": "https://api.github.com/users/bbigras/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-07-26T00:43:59Z", "updated_at": "2012-07-26T14:13:13Z", "closed_at": "2012-07-26T14:13:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "rauth won't install with pip if requests is not already installed.\n\nIt may be because setup.py do `import rauth` (which try to import requests (by doing `from .service import OAuth1Service, OAuth2Service, OflyService`)) to get  `rauth.__version__`.\n\n```\n(tv) C:\\Users\\bruno\\git\\tv>pip install rauth\nDownloading/unpacking rauth\n  Downloading rauth-0.4.13.tar.gz\n  Running setup.py egg_info for package rauth\n    Traceback (most recent call last):\n      File \"<string>\", line 14, in <module>\n      File \"C:\\Users\\bruno\\git\\tv\\build\\rauth\\setup.py\", line 3, in <module>\n        import rauth\n      File \"rauth\\__init__.py\", line 12, in <module>\n        from .service import OAuth1Service, OAuth2Service, OflyService\n      File \"rauth\\service.py\", line 8, in <module>\n        import requests\n    ImportError: No module named requests\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 14, in <module>\n\n  File \"C:\\Users\\bruno\\git\\tv\\build\\rauth\\setup.py\", line 3, in <module>\n\n    import rauth\n\n  File \"rauth\\__init__.py\", line 12, in <module>\n\n    from .service import OAuth1Service, OAuth2Service, OflyService\n\n  File \"rauth\\service.py\", line 8, in <module>\n\n    import requests\n\nImportError: No module named requests\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1 in C:\\Users\\bruno\\git\\\ntv\\build\\rauth\nStoring complete log in C:\\Users\\bruno\\AppData\\Roaming\\pip\\pip.log\n\n(tv) C:\\Users\\bruno\\git\\tv\\wsgi\\testpyramid>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/18", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/18/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/18/events", "html_url": "https://github.com/litl/rauth/issues/18", "id": 5062636, "node_id": "MDU6SXNzdWU1MDYyNjM2", "number": 18, "title": "Auto Refresh Access Token", "user": {"login": "xevix", "id": 510743, "node_id": "MDQ6VXNlcjUxMDc0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/510743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xevix", "html_url": "https://github.com/xevix", "followers_url": "https://api.github.com/users/xevix/followers", "following_url": "https://api.github.com/users/xevix/following{/other_user}", "gists_url": "https://api.github.com/users/xevix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xevix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xevix/subscriptions", "organizations_url": "https://api.github.com/users/xevix/orgs", "repos_url": "https://api.github.com/users/xevix/repos", "events_url": "https://api.github.com/users/xevix/events{/privacy}", "received_events_url": "https://api.github.com/users/xevix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}, {"id": 1426322, "node_id": "MDU6TGFiZWwxNDI2MzIy", "url": "https://api.github.com/repos/litl/rauth/labels/Feature%20Request", "name": "Feature Request", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-06-14T04:55:45Z", "updated_at": "2013-03-05T15:32:39Z", "closed_at": "2013-03-05T15:32:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure if this is outside the scope of this project, but I know that the requests library has sessions, and that rauth has an OAuthHook to avoid using the service wrapper. It would be great if the service wrapper could remember the grant_type that is used, and when it tries to make a call using its access token and gets a 400 status code with \"invalid_token\" response (per OAuth2 Bearer Token spec), it goes through the same flow done initially to refresh it, or if it got a refresh token originally, to use that to get a new access token.\n\nThis is useful so that someone can just use the library and make calls without worrying about refreshing tokens manually.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/15", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/15/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/15/events", "html_url": "https://github.com/litl/rauth/issues/15", "id": 5040298, "node_id": "MDU6SXNzdWU1MDQwMjk4", "number": 15, "title": "OAuth2 Flows", "user": {"login": "xevix", "id": 510743, "node_id": "MDQ6VXNlcjUxMDc0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/510743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xevix", "html_url": "https://github.com/xevix", "followers_url": "https://api.github.com/users/xevix/followers", "following_url": "https://api.github.com/users/xevix/following{/other_user}", "gists_url": "https://api.github.com/users/xevix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xevix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xevix/subscriptions", "organizations_url": "https://api.github.com/users/xevix/orgs", "repos_url": "https://api.github.com/users/xevix/repos", "events_url": "https://api.github.com/users/xevix/events{/privacy}", "received_events_url": "https://api.github.com/users/xevix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1421610, "node_id": "MDU6TGFiZWwxNDIxNjEw", "url": "https://api.github.com/repos/litl/rauth/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "0b02e1", "default": false, "description": null}, {"id": 1426322, "node_id": "MDU6TGFiZWwxNDI2MzIy", "url": "https://api.github.com/repos/litl/rauth/labels/Feature%20Request", "name": "Feature Request", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-06-13T03:58:48Z", "updated_at": "2012-06-14T11:13:38Z", "closed_at": "2012-06-14T11:13:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey. I'm glad to have found a nice OAuth2 lib on top of requests. Is there a plan to support other grant_type than 'authorization_code' such as 'client_credentials'? Or is there a nice way to do this already that I didn't find?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/14", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/14/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/14/events", "html_url": "https://github.com/litl/rauth/issues/14", "id": 4988417, "node_id": "MDU6SXNzdWU0OTg4NDE3", "number": 14, "title": "rauth uses wrong request URI, causes missing consumer key error (?)", "user": {"login": "trtg", "id": 1320184, "node_id": "MDQ6VXNlcjEzMjAxODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1320184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trtg", "html_url": "https://github.com/trtg", "followers_url": "https://api.github.com/users/trtg/followers", "following_url": "https://api.github.com/users/trtg/following{/other_user}", "gists_url": "https://api.github.com/users/trtg/gists{/gist_id}", "starred_url": "https://api.github.com/users/trtg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trtg/subscriptions", "organizations_url": "https://api.github.com/users/trtg/orgs", "repos_url": "https://api.github.com/users/trtg/repos", "events_url": "https://api.github.com/users/trtg/events{/privacy}", "received_events_url": "https://api.github.com/users/trtg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2012-06-10T00:03:48Z", "updated_at": "2019-09-09T20:17:16Z", "closed_at": "2012-06-10T21:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to access the fatsecret API. I've successfully accessed this same API with the python-fatsecret library from here https://bitbucket.org/fmoo/python-fatsecret   I'm using the exact same consumer key with rauth as I did with python-fatsecret but rauth is giving me the following error in get_request_token: (I added some print statements in service.py)\n\"response <Response [400]>\nresponse.content  Missing required parameter: oauth_consumer_key\"\n\nbut I'm definitely instantiating OAuth1Service with a consumer key(and I've triple checked that it is correct).\nI ran wireshark while getting a request token using rauth and python-fatsecret and noticed these differences:\n\nrauth: OAuth Realm=\"http://www.fatsecret.com/\"  and request_URI=/oauth_request_token\n\npython-fatsecret: OAuth Realm=\"\" and request_URI = http://www.fatsecret.com/oauth/request_token?oauth_nonce=77769080&oauth_timestamp=1339285156&oauth_consumer_key=my_key_was_here&oauth_signature_method=HMAC-SHA1&oauth_version=1.0&oauth_signature=8a3mb2veTNIPkW6kNWr8J2pyxQ4%3D&oauth_callback=oob\n\nAny hints on why rauth is doing a GET on the wrong URI(or am I misunderstanding what's going on)? I just pulled from the repo today, so I'm using rauth 0.4.6. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/11", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/11/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/11/events", "html_url": "https://github.com/litl/rauth/issues/11", "id": 4459938, "node_id": "MDU6SXNzdWU0NDU5OTM4", "number": 11, "title": "Setting oauth_verifier when POSTing in the get_access_token phase of oauth 1.0a", "user": {"login": "davecoutts", "id": 484306, "node_id": "MDQ6VXNlcjQ4NDMwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/484306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davecoutts", "html_url": "https://github.com/davecoutts", "followers_url": "https://api.github.com/users/davecoutts/followers", "following_url": "https://api.github.com/users/davecoutts/following{/other_user}", "gists_url": "https://api.github.com/users/davecoutts/gists{/gist_id}", "starred_url": "https://api.github.com/users/davecoutts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davecoutts/subscriptions", "organizations_url": "https://api.github.com/users/davecoutts/orgs", "repos_url": "https://api.github.com/users/davecoutts/repos", "events_url": "https://api.github.com/users/davecoutts/events{/privacy}", "received_events_url": "https://api.github.com/users/davecoutts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2012-05-07T18:56:20Z", "updated_at": "2012-08-22T23:39:04Z", "closed_at": "2012-05-09T12:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "How does one set the **oauth_verifier** parameter when **POST**ing at the **get_access_token** phase of oauth 1.0a ?\n\nThe twiiter rauth example shows the **oauth_verifier** being defined in 'params' using a GET call.\nDefining **oauth_verifier** as a 'data' parameter using POST does not work.\n\nI see that **verifier** is set to None in the OAuthObject class, https://github.com/litl/rauth/blob/master/rauth/oauth.py#L16 , but I see no way of assigning it a value. \n\n**oauth_verifier** seems to default to '' as a result of code logic in the **oauth_params** function in hook.py    https://github.com/litl/rauth/blob/master/rauth/hook.py#L145\n\nShould there be a block of code added to the  `__call__`  function in hook.py to have **oauth_verifier** handled in the same way as   **oauth_callback** https://github.com/litl/rauth/blob/master/rauth/hook.py#L95  ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/9", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/9/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/9/events", "html_url": "https://github.com/litl/rauth/issues/9", "id": 4222344, "node_id": "MDU6SXNzdWU0MjIyMzQ0", "number": 9, "title": "Foursquare expects 'oauth_token' instead of 'access_token'", "user": {"login": "lrvick", "id": 69200, "node_id": "MDQ6VXNlcjY5MjAw", "avatar_url": "https://avatars2.githubusercontent.com/u/69200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrvick", "html_url": "https://github.com/lrvick", "followers_url": "https://api.github.com/users/lrvick/followers", "following_url": "https://api.github.com/users/lrvick/following{/other_user}", "gists_url": "https://api.github.com/users/lrvick/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrvick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrvick/subscriptions", "organizations_url": "https://api.github.com/users/lrvick/orgs", "repos_url": "https://api.github.com/users/lrvick/repos", "events_url": "https://api.github.com/users/lrvick/events{/privacy}", "received_events_url": "https://api.github.com/users/lrvick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-04-21T08:33:14Z", "updated_at": "2012-04-23T16:53:29Z", "closed_at": "2012-04-23T16:51:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the following fails as Fourquare expects the access_token to be provided as 'oauth_token'\n\n``` python\nprofile = service.request(\n    'GET',\n    'https://api.foursquare.com/v2/users/self' ,\n    access_token=token\n).content\n```\n\nCurrently I am using the following dirty hack which works:\n\n``` python\nprofile = service.request(\n    'GET',\n    'https://api.foursquare.com/v2/users/self?oauth_token=%s' % token,\n    access_token=token,\n).content\n```\n\nReally I think this is more Fourquare's fault for not using the same argument name as everyone else...  however a nicer workaround or argument option in rauth would be nice.\n\nPerhaps just add  and 'oauth_token' option to request() that does the same thing as 'access_token' and require one of them, but not both?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/8", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/8/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/8/events", "html_url": "https://github.com/litl/rauth/issues/8", "id": 4205576, "node_id": "MDU6SXNzdWU0MjA1NTc2", "number": 8, "title": "OAuth2 get_access_token fails if run instantly after getting callback code", "user": {"login": "lrvick", "id": 69200, "node_id": "MDQ6VXNlcjY5MjAw", "avatar_url": "https://avatars2.githubusercontent.com/u/69200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrvick", "html_url": "https://github.com/lrvick", "followers_url": "https://api.github.com/users/lrvick/followers", "following_url": "https://api.github.com/users/lrvick/following{/other_user}", "gists_url": "https://api.github.com/users/lrvick/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrvick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrvick/subscriptions", "organizations_url": "https://api.github.com/users/lrvick/orgs", "repos_url": "https://api.github.com/users/lrvick/repos", "events_url": "https://api.github.com/users/lrvick/events{/privacy}", "received_events_url": "https://api.github.com/users/lrvick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-04-20T06:17:02Z", "updated_at": "2012-04-20T19:16:22Z", "closed_at": "2012-04-20T11:11:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "For whatever reason I can not seem to get an access token from get_access_token if i call it right away when I get the code in the callback GET request.\n\nNot sure if this is a bug in rauth or a flaw in my understanding of OAuth2\n\nHere is a simple Flask example:\n\n``` python\nfrom flask import Flask, request, redirect, url_for\nfrom rauth.service import OAuth1Service, OAuth2Service\n\ngithub = OAuth2Service(\n    name='github',\n    consumer_key='GITHUB_CONSUMER_KEY',\n    consumer_secret='GITHUB_CONSUMER_SECRET',\n    access_token_url='https://github.com/loginoauth/access_token',\n    authorize_url='https://github.com/login/oauth/authorize',\n)\n\napp = Flask(__name__)\napp.debug = True\n\n@app.route('/')\ndef index():\n    code = request.args.get('code',None)\n    if code:\n        print 'CODE: ',code\n        access_token = github.get_access_token(\n            code=code,\n        ).content['access_token']\n        # The above does not contain access_token and results in a KeyError\n        print 'ACCESS_TOKEN: ',access_token\n    else:\n        return redirect(url_for('login'))\n\n@app.route('/login')\ndef login():\n    authorize_url = github.get_authorize_url()\n    print authorize_url\n    return redirect(authorize_url)\n\nif __name__ == '__main__':\n    app.run()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/7", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/7/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/7/events", "html_url": "https://github.com/litl/rauth/issues/7", "id": 4040299, "node_id": "MDU6SXNzdWU0MDQwMjk5", "number": 7, "title": "OAuth2 Example Needed", "user": {"login": "lrvick", "id": 69200, "node_id": "MDQ6VXNlcjY5MjAw", "avatar_url": "https://avatars2.githubusercontent.com/u/69200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrvick", "html_url": "https://github.com/lrvick", "followers_url": "https://api.github.com/users/lrvick/followers", "following_url": "https://api.github.com/users/lrvick/following{/other_user}", "gists_url": "https://api.github.com/users/lrvick/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrvick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrvick/subscriptions", "organizations_url": "https://api.github.com/users/lrvick/orgs", "repos_url": "https://api.github.com/users/lrvick/repos", "events_url": "https://api.github.com/users/lrvick/events{/privacy}", "received_events_url": "https://api.github.com/users/lrvick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-04-10T04:16:04Z", "updated_at": "2012-04-10T15:41:52Z", "closed_at": "2012-04-10T12:11:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got Twitter working perfectly using the OAuth1 example as a guide, but my attempts at using OAuth2 to connect to the Github API have not been successful.\n\nMy attempts so far:\n\n```\ngthub = OAuth2Service(\n    name='github',\n    consumer_key='mykey',\n    consumer_secret='mysecret',\n    access_token_url='https://github.com/loginoauth/access_token',\n    authorize_url='https://github.com/login/oauth/authorize',\n)\n\nauthorize_url = github.get_authorize_url()\n```\n\nThis URL is opened client side, authorization is given, and then it redirects to http://myapplication.com/?code=somecode\n\nFrom there I catch 'code' and attempt to get an access_token\n\n```\noauth_token = github.get_access_token(\n    code=somecode,\n    grant_type='authorization_code',\n    redirect_uri='http://myapplication.com',\n)\nprint(oauth_token.content)\n```\n\nThis however just dumps a bunch of Github HTML with no sign of any tokens.\n\nI am sure I am probably doing something wrong. \n\nPerhaps an example that uses the Github OAuth2 API or some other OAuth2 service might help?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/6", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/6/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/6/events", "html_url": "https://github.com/litl/rauth/issues/6", "id": 3694916, "node_id": "MDU6SXNzdWUzNjk0OTE2", "number": 6, "title": "Cannot recalculate body in pre-request hook", "user": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-03-17T15:31:27Z", "updated_at": "2012-05-04T19:31:33Z", "closed_at": "2012-05-04T19:31:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I won't go into great detail, the issue is well documented on Requests itself here: https://github.com/kennethreitz/requests/issues/445\n\nThis is a show stopper for POSTs that don't use `header_auth` unfortunately.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/4", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/4/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/4/events", "html_url": "https://github.com/litl/rauth/issues/4", "id": 3673603, "node_id": "MDU6SXNzdWUzNjczNjAz", "number": 4, "title": "if service returns a list (instead of dict), exception setting _unparsed_response", "user": {"login": "joeshaw", "id": 39916, "node_id": "MDQ6VXNlcjM5OTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/39916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeshaw", "html_url": "https://github.com/joeshaw", "followers_url": "https://api.github.com/users/joeshaw/followers", "following_url": "https://api.github.com/users/joeshaw/following{/other_user}", "gists_url": "https://api.github.com/users/joeshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeshaw/subscriptions", "organizations_url": "https://api.github.com/users/joeshaw/orgs", "repos_url": "https://api.github.com/users/joeshaw/repos", "events_url": "https://api.github.com/users/joeshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/joeshaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1426329, "node_id": "MDU6TGFiZWwxNDI2MzI5", "url": "https://api.github.com/repos/litl/rauth/labels/Planned", "name": "Planned", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2012-03-15T21:19:17Z", "updated_at": "2012-03-16T00:58:23Z", "closed_at": "2012-03-16T00:58:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Requesting `statuses/home_timeline.json` from Twitter returns a list.  This causes things to blow up when returning a json-parsed object and setting `_unparsed_response` on it.\n\n```\nTraceback (most recent call last):\n  File \"examples/twitter-stream.py\", line 43, in <module>\n    params=params)\n  File \"/Users/joe/src/litl/webauth/webauth/service.py\", line 458, in request\n    _response['_unparsed_response'] = response\nTypeError: list indices must be integers, not str\n```\n\nI'm beginning to think that maybe we shouldn't return a dict but instead an object similar to Flask's `request` object or Requests' `response` object, from which we can get either the raw data or a parsed representation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/3", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/3/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/3/events", "html_url": "https://github.com/litl/rauth/issues/3", "id": 3673543, "node_id": "MDU6SXNzdWUzNjczNTQz", "number": 3, "title": "duplicate params in GET request w/o header auth", "user": {"login": "joeshaw", "id": 39916, "node_id": "MDQ6VXNlcjM5OTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/39916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeshaw", "html_url": "https://github.com/joeshaw", "followers_url": "https://api.github.com/users/joeshaw/followers", "following_url": "https://api.github.com/users/joeshaw/following{/other_user}", "gists_url": "https://api.github.com/users/joeshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeshaw/subscriptions", "organizations_url": "https://api.github.com/users/joeshaw/orgs", "repos_url": "https://api.github.com/users/joeshaw/repos", "events_url": "https://api.github.com/users/joeshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/joeshaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}, {"id": 1426329, "node_id": "MDU6TGFiZWwxNDI2MzI5", "url": "https://api.github.com/repos/litl/rauth/labels/Planned", "name": "Planned", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2012-03-15T21:15:14Z", "updated_at": "2012-03-17T14:52:02Z", "closed_at": "2012-03-17T14:52:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am writing an example program for webauth to hit Twitter and pull down a timeline.  That code is currently here:\n\nhttps://gist.github.com/3815bf48c5bb563a7f5b\n\nWhen the last request has `header_auth=False` things fail.  Looking at the response from Twitter, it says:\n\n```\n{\"error\":\"Could not authenticate with OAuth.\",\"request\":\"\\/1\\/statuses\\/home_timeline.json?count=10&oauth_version=1.0&oauth_signature=HRJYrmLO%2BngsbvHG4iumQ1fVe44%3D&oauth_token=5344992-AWVC6whTXSwOcyiE3LSW6J1K9usjQBM5jeNSfKeW5s&oauth_nonce=2bec3417d487342f3460570c22648e9883351eaa&oauth_timestamp=1331846018&oauth_verifier=&oauth_consumer_key=J8MoJG4bQ9gcmGh8H7XhMg&oauth_signature_method=HMAC-SHA1&include_rts=1&count=10&include_rts=1\"}\n```\n\nNotice that `count` and `include_rts` are included twice.\n\nI'm not 100% sure that's the problem, and I haven't been able to figure out where in the code that is set, but Twitter is probably not wrong.\n\nIf I set `header_auth=True` things work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/litl/rauth/issues/1", "repository_url": "https://api.github.com/repos/litl/rauth", "labels_url": "https://api.github.com/repos/litl/rauth/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/litl/rauth/issues/1/comments", "events_url": "https://api.github.com/repos/litl/rauth/issues/1/events", "html_url": "https://github.com/litl/rauth/issues/1", "id": 3484257, "node_id": "MDU6SXNzdWUzNDg0MjU3", "number": 1, "title": "When generating the Signature Base String query strings must be parsed out", "user": {"login": "maxcountryman", "id": 74351, "node_id": "MDQ6VXNlcjc0MzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/74351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxcountryman", "html_url": "https://github.com/maxcountryman", "followers_url": "https://api.github.com/users/maxcountryman/followers", "following_url": "https://api.github.com/users/maxcountryman/following{/other_user}", "gists_url": "https://api.github.com/users/maxcountryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxcountryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxcountryman/subscriptions", "organizations_url": "https://api.github.com/users/maxcountryman/orgs", "repos_url": "https://api.github.com/users/maxcountryman/repos", "events_url": "https://api.github.com/users/maxcountryman/events{/privacy}", "received_events_url": "https://api.github.com/users/maxcountryman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 629243, "node_id": "MDU6TGFiZWw2MjkyNDM=", "url": "https://api.github.com/repos/litl/rauth/labels/Bug", "name": "Bug", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-03-02T21:26:01Z", "updated_at": "2012-03-02T22:47:11Z", "closed_at": "2012-03-02T22:47:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the event that a URL which is being signed contains a query string, this query string should be remove prior to generating the base string as per: http://oauth.net/core/1.0a/#anchor13 (9.1.2)\n", "performed_via_github_app": null, "score": 1.0}]}