{"total_count": 130, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/vmware/pyvcloud/issues/692", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/692/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/692/events", "html_url": "https://github.com/vmware/pyvcloud/issues/692", "id": 662849926, "node_id": "MDU6SXNzdWU2NjI4NDk5MjY=", "number": 692, "title": "Wrong resource type com.vmware.vcloud.entity.vm, expected application/vnd.vmware.vcloud.vm+xml", "user": {"login": "vijayvk3242", "id": 5371397, "node_id": "MDQ6VXNlcjUzNzEzOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5371397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vijayvk3242", "html_url": "https://github.com/vijayvk3242", "followers_url": "https://api.github.com/users/vijayvk3242/followers", "following_url": "https://api.github.com/users/vijayvk3242/following{/other_user}", "gists_url": "https://api.github.com/users/vijayvk3242/gists{/gist_id}", "starred_url": "https://api.github.com/users/vijayvk3242/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vijayvk3242/subscriptions", "organizations_url": "https://api.github.com/users/vijayvk3242/orgs", "repos_url": "https://api.github.com/users/vijayvk3242/repos", "events_url": "https://api.github.com/users/vijayvk3242/events{/privacy}", "received_events_url": "https://api.github.com/users/vijayvk3242/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T10:23:40Z", "updated_at": "2020-07-22T07:34:39Z", "closed_at": "2020-07-22T07:34:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to create a isolated vm and below is payload details,\r\n\r\nRequest body <InstantiateVmTemplateParams xmlns=\"http://www.vmware.com/vcloud/v1.5\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:ovf=\"http://schemas.dmtf.org/ovf/envelope/1\" name=\"first_vm\" powerOn=\"true\">\\n  <SourcedVmTemplateItem>\\n    <Source href=\"https://<fqdn>/api/vAppTemplate/<alphaneumaric_vm_id>\" id=\"<alphaneumaric_vm_id>\" name=\"CentOS-70\" type=\"application/vnd.vmware.vcloud.vm+xml\"/>\\n    <VmTemplateInstantiationParams>\\n      <GuestCustomizationSection>\\n        <ovf:Info>Specifies Guest OS Customization Settings</ovf:Info>\\n        <ComputerName>first_vm_ex</ComputerName>\\n      </GuestCustomizationSection>\\n    </VmTemplateInstantiationParams>\\n  </SourcedVmTemplateItem>\\n</InstantiateVmTemplateParams>\r\n\r\nRequest uri (POST): https://<fqdn>/api/vdc/<id>/action/instantiateVmFromTemplate\r\nRequest headers: {'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/*+xml;version=29.0', 'Connection': 'keep-alive', 'x-vcloud-authorization': '[REDACTED]', 'Content-Length': '767'}\r\n\r\nResponse status code: 400", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/688", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/688/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/688/events", "html_url": "https://github.com/vmware/pyvcloud/issues/688", "id": 658881608, "node_id": "MDU6SXNzdWU2NTg4ODE2MDg=", "number": 688, "title": "primary_ip for vm is not getting updated", "user": {"login": "priyaadhar", "id": 68414191, "node_id": "MDQ6VXNlcjY4NDE0MTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/68414191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyaadhar", "html_url": "https://github.com/priyaadhar", "followers_url": "https://api.github.com/users/priyaadhar/followers", "following_url": "https://api.github.com/users/priyaadhar/following{/other_user}", "gists_url": "https://api.github.com/users/priyaadhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyaadhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyaadhar/subscriptions", "organizations_url": "https://api.github.com/users/priyaadhar/orgs", "repos_url": "https://api.github.com/users/priyaadhar/repos", "events_url": "https://api.github.com/users/priyaadhar/events{/privacy}", "received_events_url": "https://api.github.com/users/priyaadhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T05:29:45Z", "updated_at": "2020-08-07T04:31:06Z", "closed_at": "2020-08-07T04:31:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Once the vm's are deployed and when we do polling to get_primary_ip, the ip is not getting updated when vm's are getting allocated with ip.\r\n\r\nPlease provide an alternative or solution on how to resolve it", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/687", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/687/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/687/events", "html_url": "https://github.com/vmware/pyvcloud/issues/687", "id": 658880770, "node_id": "MDU6SXNzdWU2NTg4ODA3NzA=", "number": 687, "title": "Not able to add vm to existing vapp", "user": {"login": "priyaadhar", "id": 68414191, "node_id": "MDQ6VXNlcjY4NDE0MTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/68414191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyaadhar", "html_url": "https://github.com/priyaadhar", "followers_url": "https://api.github.com/users/priyaadhar/followers", "following_url": "https://api.github.com/users/priyaadhar/following{/other_user}", "gists_url": "https://api.github.com/users/priyaadhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyaadhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyaadhar/subscriptions", "organizations_url": "https://api.github.com/users/priyaadhar/orgs", "repos_url": "https://api.github.com/users/priyaadhar/repos", "events_url": "https://api.github.com/users/priyaadhar/events{/privacy}", "received_events_url": "https://api.github.com/users/priyaadhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-17T05:28:11Z", "updated_at": "2020-08-07T04:16:39Z", "closed_at": "2020-08-07T04:16:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Once a vapp is created, am trying to add vm's to it.\r\n\r\nTried with add_vms which is throwing error as it is not able to fnd source_vm\r\nTried with create_from_scratch which gives 500 internal server error\r\n\r\nPlease provide an alternative or  on how to resolve the iissue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/686", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/686/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/686/events", "html_url": "https://github.com/vmware/pyvcloud/issues/686", "id": 657753342, "node_id": "MDU6SXNzdWU2NTc3NTMzNDI=", "number": 686, "title": "Can't update user password", "user": {"login": "azzamsa", "id": 17734314, "node_id": "MDQ6VXNlcjE3NzM0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17734314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azzamsa", "html_url": "https://github.com/azzamsa", "followers_url": "https://api.github.com/users/azzamsa/followers", "following_url": "https://api.github.com/users/azzamsa/following{/other_user}", "gists_url": "https://api.github.com/users/azzamsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/azzamsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azzamsa/subscriptions", "organizations_url": "https://api.github.com/users/azzamsa/orgs", "repos_url": "https://api.github.com/users/azzamsa/repos", "events_url": "https://api.github.com/users/azzamsa/events{/privacy}", "received_events_url": "https://api.github.com/users/azzamsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-16T00:43:20Z", "updated_at": "2020-07-30T04:07:14Z", "closed_at": "2020-07-30T04:07:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to extend [update_user](https://github.com/vmware/pyvcloud/blob/7592d98858f2a074f28846057cccf82ed0a64e0e/pyvcloud/vcd/org.py#L983) function that currently only support updating role and enable/disable.\r\n\r\nI try to add ability to update password. The doc says that it's modifiable.\r\n\r\n![image](https://user-images.githubusercontent.com/17734314/87613112-93335e00-c736-11ea-9f98-5c18c4a7b2f8.png)\r\n\r\nBut, I always get BAD REQUEST No child element is expected at this point\r\n\r\n``` \r\n400/BAD_REQUEST, [ b8426ea2-3e0b-457a-944e-9c56da5cd888 ] HTTP 400 Bad Request\\n - cvc-complex-type.2.4.d: Invalid content was found starting with element 'Password'. No child element is expected at this point. (request id: b8426ea2)\"\r\n```\r\nmy code:\r\n\r\n```diff\r\nreturn self.client.post_linked_resource(\r\n             resource_admin, RelationType.ADD, EntityType.USER.value, user)\r\n \r\n-    def update_user(self, user_name, is_enabled=None, role_name=None):\r\n+    def update_user(self, user_name, is_enabled=None, role_name=None, password=None):\r\n         \"\"\"Update an user.\r\n \r\n         :param str user_name: username of the user.\r\n@@ -1002,7 +1002,10 @@ class Org(object):\r\n                 role = self.get_role_record(role_name)\r\n                 user['Role'] = E.Role(href=role.get('href'))\r\n \r\n-        if is_enabled or role_name:\r\n+         if password:\r\n+            user[\"Password\"] = E.Password(password)\r\n+\r\n+        if is_enabled or role_name or password:\r\n             return self.client.put_resource(\r\n                 user.get('href'), user, EntityType.USER.value)\r\n```\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/682", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/682/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/682/events", "html_url": "https://github.com/vmware/pyvcloud/issues/682", "id": 652669070, "node_id": "MDU6SXNzdWU2NTI2NjkwNzA=", "number": 682, "title": "Error 400 occurs when instantiating vApp from template with internal vApp network", "user": {"login": "Ptomerty", "id": 4297710, "node_id": "MDQ6VXNlcjQyOTc3MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4297710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ptomerty", "html_url": "https://github.com/Ptomerty", "followers_url": "https://api.github.com/users/Ptomerty/followers", "following_url": "https://api.github.com/users/Ptomerty/following{/other_user}", "gists_url": "https://api.github.com/users/Ptomerty/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ptomerty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ptomerty/subscriptions", "organizations_url": "https://api.github.com/users/Ptomerty/orgs", "repos_url": "https://api.github.com/users/Ptomerty/repos", "events_url": "https://api.github.com/users/Ptomerty/events{/privacy}", "received_events_url": "https://api.github.com/users/Ptomerty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-07T21:39:01Z", "updated_at": "2020-07-10T03:17:56Z", "closed_at": "2020-07-10T03:17:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following up from https://github.com/vmware/vcd-cli/issues/534 since I read the source code and all roads led to [`instantiate_vapp()`](https://github.com/vmware/pyvcloud/blob/master/pyvcloud/vcd/vdc.py#L183).\r\n\r\nIs there any way to instantiate a vApp (in this case, with multiple VMs) that already has an internal vApp network? Currently, the network settings default to looking for this network in the list of VDC networks, but the template has a vApp network, so obviously it won't be found. Thanks!\r\n\r\n\r\nEDIT: It seems the error is that a template vApp network is incorrectly treated as a VDC network. Submitting PR to fix this issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/681", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/681/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/681/events", "html_url": "https://github.com/vmware/pyvcloud/issues/681", "id": 650798652, "node_id": "MDU6SXNzdWU2NTA3OTg2NTI=", "number": 681, "title": "ModuleNotFoundError: No module named 'helpers.portgroup_helper'", "user": {"login": "donkerm", "id": 26325808, "node_id": "MDQ6VXNlcjI2MzI1ODA4", "avatar_url": "https://avatars3.githubusercontent.com/u/26325808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donkerm", "html_url": "https://github.com/donkerm", "followers_url": "https://api.github.com/users/donkerm/followers", "following_url": "https://api.github.com/users/donkerm/following{/other_user}", "gists_url": "https://api.github.com/users/donkerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/donkerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donkerm/subscriptions", "organizations_url": "https://api.github.com/users/donkerm/orgs", "repos_url": "https://api.github.com/users/donkerm/repos", "events_url": "https://api.github.com/users/donkerm/events{/privacy}", "received_events_url": "https://api.github.com/users/donkerm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-04T00:18:01Z", "updated_at": "2020-07-20T12:53:15Z", "closed_at": "2020-07-20T12:53:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen I only try to import this:\r\nfrom pyvcloud.system_test_framework.environment import Environment\r\n\r\nI get the following error back:\r\n    from helpers.portgroup_helper import PortgroupHelper\r\nModuleNotFoundError: No module named 'helpers.portgroup_helper'\r\n\r\nI tried to find a solution, but couldn't find any.\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/680", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/680/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/680/events", "html_url": "https://github.com/vmware/pyvcloud/issues/680", "id": 647787790, "node_id": "MDU6SXNzdWU2NDc3ODc3OTA=", "number": 680, "title": "[Help] Can't disable logging", "user": {"login": "azzamsa", "id": 17734314, "node_id": "MDQ6VXNlcjE3NzM0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17734314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azzamsa", "html_url": "https://github.com/azzamsa", "followers_url": "https://api.github.com/users/azzamsa/followers", "following_url": "https://api.github.com/users/azzamsa/following{/other_user}", "gists_url": "https://api.github.com/users/azzamsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/azzamsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azzamsa/subscriptions", "organizations_url": "https://api.github.com/users/azzamsa/orgs", "repos_url": "https://api.github.com/users/azzamsa/repos", "events_url": "https://api.github.com/users/azzamsa/events{/privacy}", "received_events_url": "https://api.github.com/users/azzamsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-30T01:51:12Z", "updated_at": "2020-07-16T00:28:53Z", "closed_at": "2020-07-16T00:28:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've disabled all logging option, But I still have `vcd_pysdk.log`.\r\n\r\nMWE\r\n\r\n```python\r\nclient = ApiClient(\r\n            host,\r\n            api_version=api_version,\r\n            verify_ssl_certs=verify_ssl,\r\n            log_file=None,\r\n            log_requests=False,  ## <<------ DISABLED\r\n            log_headers=False,  ## <<------ DISABLED\r\n            log_bodies=False,  ## <<------ DISABLED\r\n        )\r\n        # pyvcloud logging can't be disabled by default\r\n        # log file will clutter docker image\r\n        # we've our own log\r\n        client._loggger = None   ## <<------ other trick, doesn't work\r\n        client._get_default_loggger = None\r\n\r\n        creds = BasicLoginCredentials(user, org, passwd)\r\n        client.set_credentials(creds)\r\n```\r\n\r\nBut still produced `vcd_pysdk.log`:\r\n\r\n```text\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\nAPI version in use: 33.0\r\n...\r\n```\r\n\r\nI don't need this info. This will clutter my images.\r\n\r\nThank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/678", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/678/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/678/events", "html_url": "https://github.com/vmware/pyvcloud/issues/678", "id": 644152271, "node_id": "MDU6SXNzdWU2NDQxNTIyNzE=", "number": 678, "title": "VM - list_virtual_hardware_section() throws Value of unknown type: <class 'lxml.objectify.StringElement'>, Hard disk 1\\n", "user": {"login": "mukultaneja", "id": 16931639, "node_id": "MDQ6VXNlcjE2OTMxNjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/16931639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mukultaneja", "html_url": "https://github.com/mukultaneja", "followers_url": "https://api.github.com/users/mukultaneja/followers", "following_url": "https://api.github.com/users/mukultaneja/following{/other_user}", "gists_url": "https://api.github.com/users/mukultaneja/gists{/gist_id}", "starred_url": "https://api.github.com/users/mukultaneja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mukultaneja/subscriptions", "organizations_url": "https://api.github.com/users/mukultaneja/orgs", "repos_url": "https://api.github.com/users/mukultaneja/repos", "events_url": "https://api.github.com/users/mukultaneja/events{/privacy}", "received_events_url": "https://api.github.com/users/mukultaneja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-23T21:16:52Z", "updated_at": "2020-06-25T05:19:42Z", "closed_at": "2020-06-25T05:19:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**list_virtual_hardware_section()** throw below error when trying to list all disks for a VM.\r\n\r\nFile \\\"/var/folders/kl/frh17s7901s92n76vw8m4lqr0000gp/T/ansible_vcd_vapp_vm_payload_e0roqg7y/ansible_vcd_vapp_vm_payload.zip/ansible/module_utils/basic.py\\\", line 401, in _remove_values_conditions\\n**TypeError: Value of unknown type: <class 'lxml.objectify.StringElement'>, Hard disk 1\\n**\", \"module_stdout\": \"\", \"msg\": \"MODULE FAILURE\\nSee stdout/stderr for the exact error\", \"rc\": 1}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/669", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/669/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/669/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/669/events", "html_url": "https://github.com/vmware/pyvcloud/issues/669", "id": 631422686, "node_id": "MDU6SXNzdWU2MzE0MjI2ODY=", "number": 669, "title": "get_catalog() func failed with Catalog not found error", "user": {"login": "gugansankar", "id": 4958813, "node_id": "MDQ6VXNlcjQ5NTg4MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4958813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gugansankar", "html_url": "https://github.com/gugansankar", "followers_url": "https://api.github.com/users/gugansankar/followers", "following_url": "https://api.github.com/users/gugansankar/following{/other_user}", "gists_url": "https://api.github.com/users/gugansankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gugansankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gugansankar/subscriptions", "organizations_url": "https://api.github.com/users/gugansankar/orgs", "repos_url": "https://api.github.com/users/gugansankar/repos", "events_url": "https://api.github.com/users/gugansankar/events{/privacy}", "received_events_url": "https://api.github.com/users/gugansankar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-05T08:44:43Z", "updated_at": "2020-06-08T04:33:48Z", "closed_at": "2020-06-08T04:33:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nWe're using vCD infra that has around 100 catalogs in it. When I tested the list_catalogs() func, it's able to list all 100 catalogs.\r\n\r\nBut If I'm trying to get a particular catalog info using get_catalog() func, it's failed with 'catalog not found' error. I checked the pyvcloud.log, It\u2019s trying to find the catalog only from the first 25 items [the RestAPI url it uses is paginated]. Seems it does not loop through all the items.\r\n\r\nError:\r\n\r\n`Traceback (most recent call last):\r\n  File \"/Users/gkulandaivel/code/SonarPOC/sonarPoc/test.py\", line 84, in <module>\r\n    template = org.get_catalog('VAPP_DEPLOY', is_admin_operation=True)\r\n  File \"/Users/gkulandaivel/code/SonarPOC/.venv/lib/python3.7/site-packages/pyvcloud/vcd/org.py\", line 213, in get_catalog\r\n    raise EntityNotFoundException('Catalog not found (or)'\r\npyvcloud.vcd.exceptions.EntityNotFoundException: Catalog not found (or) Access to resource is forbidden`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/665", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/665/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/665/events", "html_url": "https://github.com/vmware/pyvcloud/issues/665", "id": 625420167, "node_id": "MDU6SXNzdWU2MjU0MjAxNjc=", "number": 665, "title": "[Help] method to modify a VDC", "user": {"login": "azzamsa", "id": 17734314, "node_id": "MDQ6VXNlcjE3NzM0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17734314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azzamsa", "html_url": "https://github.com/azzamsa", "followers_url": "https://api.github.com/users/azzamsa/followers", "following_url": "https://api.github.com/users/azzamsa/following{/other_user}", "gists_url": "https://api.github.com/users/azzamsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/azzamsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azzamsa/subscriptions", "organizations_url": "https://api.github.com/users/azzamsa/orgs", "repos_url": "https://api.github.com/users/azzamsa/repos", "events_url": "https://api.github.com/users/azzamsa/events{/privacy}", "received_events_url": "https://api.github.com/users/azzamsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-27T06:35:00Z", "updated_at": "2020-06-10T03:34:40Z", "closed_at": "2020-06-10T03:34:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am working on a function to modify a VDC. Currently we only have `create_org_vdc`.\r\n\r\n`create_org_vdc` consume an api from [POST /admin/org/{id}/vdcsparams](https://vdc-repo.vmware.com/vmwb-repository/dcr-public/f27d65ea-c25b-45ed-9193-c8cc77507622/9a1f04e3-359b-4a19-9c62-7c0fafdfeac8/doc/doc/operations/POST-CreateVdcParams.html) with input type [CreateVdcParamsType](https://vdc-repo.vmware.com/vmwb-repository/dcr-public/f27d65ea-c25b-45ed-9193-c8cc77507622/9a1f04e3-359b-4a19-9c62-7c0fafdfeac8/doc/doc/types/CreateVdcParamsType.html). \r\n\r\n![image](https://user-images.githubusercontent.com/17734314/82984672-d3227280-a01c-11ea-83c2-c8199a0cd1a6.png)\r\n\r\n\r\nSadly `vdcparams` only availiable for `create` operation. Otherwise I could only (IMHO) modify some line in `create_org_vdc` to make a new function `update_org_vdc`, e.g:\r\n\r\n- `self.client.post_linked_resource(` -> `self.client.put_linked_resource(`\r\n- `RelationType.ADD` -> `RelationType.EDIT`\r\n\r\nNow, the only way I have to modify a VDC is by using `PUT /admin/vdc/{id}`, which has a different input type: `AdminVdcType`.\r\n\r\nNow I am stuck in creating `E.Vdc` object. because it has different requirement than `E.CreateVdcParams`. Mainly the:\r\n\r\n- `E.MaxComputePolicy()`\r\n- `E.DefaultComputePolicy()`\r\n\r\nThe docs says that both are not mandatory parameters:\r\n\r\n![image](https://user-images.githubusercontent.com/17734314/82985162-ba668c80-a01d-11ea-9e27-98971d9ddb7b.png)\r\n\r\nBut unluckily I always get this error:\r\n\r\n``` python\r\nTraceback (most recent call last):\r\n  File \"coba_cpu.py\", line 75, in <module>\r\n    storage_profiles=storage_profiles,\r\n  File \"/home/user/code/pyvcloud/pyvcloud/vcd/org.py\", line 1727, in update_org_vdc\r\n    params)\r\n  File \"/home/user/code/pyvcloud/pyvcloud/vcd/client.py\", line 1389, in put_linked_resource\r\n    media_type)\r\n  File \"/home/user/code/pyvcloud/pyvcloud/vcd/client.py\", line 1373, in put_resource\r\n    params=params)\r\n  File \"/home/user/code/pyvcloud/pyvcloud/vcd/client.py\", line 1169, in _do_request\r\n    _objectify_response(response, objectify_results))\r\n  File \"/home/user/code/pyvcloud/pyvcloud/vcd/client.py\", line 1174, in _response_code_to_exception\r\n    raise BadRequestException(sc, request_id, objectify_response)\r\npyvcloud.vcd.exceptions.BadRequestException: Status code: 400/BAD_REQUEST, [ 0c1a27df-7aa7-4659-9336-1eb9ffe9e42d ] HTTP 400 Bad Request\r\n - cvc-complex-type.2.4.a: Invalid content was found starting with element 'VdcStorageProfile'. One of '{\"http://www.vmware.com/vcloud/v1.5\":VdcStorageProfiles, \"http://www.vmware.com/vcloud/v1.5\":DefaultComputePolicy, \"http://www.vmware.com/vcloud/v1.5\":MaxComputePolicy, \"http://www.vmware.com/vcloud/v1.5\":VCpuInMhz2}' is expected. (request id: 0c1a27df-7aa7-4659-9336-1eb9ffe9e42d)\r\n```\r\n\r\nSaying that I must supply those params.\r\n\r\nI am stuck in *what to supply to those objects* (.eg where to get policy href). Because I don't find any other module is using `E.Vdc`\r\n\r\nAny help would be greatly appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/663", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/663/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/663/events", "html_url": "https://github.com/vmware/pyvcloud/issues/663", "id": 621592006, "node_id": "MDU6SXNzdWU2MjE1OTIwMDY=", "number": 663, "title": "Unable to create new disk - Operation is not supported", "user": {"login": "azzamsa", "id": 17734314, "node_id": "MDQ6VXNlcjE3NzM0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17734314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azzamsa", "html_url": "https://github.com/azzamsa", "followers_url": "https://api.github.com/users/azzamsa/followers", "following_url": "https://api.github.com/users/azzamsa/following{/other_user}", "gists_url": "https://api.github.com/users/azzamsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/azzamsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azzamsa/subscriptions", "organizations_url": "https://api.github.com/users/azzamsa/orgs", "repos_url": "https://api.github.com/users/azzamsa/repos", "events_url": "https://api.github.com/users/azzamsa/events{/privacy}", "received_events_url": "https://api.github.com/users/azzamsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-20T09:04:54Z", "updated_at": "2020-05-22T01:41:42Z", "closed_at": "2020-05-21T03:48:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am unable to create new disk using the same resources, however list,get,update and delete is possible.\r\n\r\nMWE:\r\n\r\n``` python\r\nimport requests\r\nfrom pyvcloud.vcd.api_client import ApiClient\r\nfrom pyvcloud.vcd.client import BasicLoginCredentials\r\nfrom pyvcloud.vcd.vdc import VDC\r\n\r\nrequests.packages.urllib3.disable_warnings()\r\n\r\n# create client\r\nhost = \"https://something.net\"\r\nuser = \"my-devadmin\"\r\norg = \"System\"\r\npasswd = \"secret\"\r\n\r\n\r\nclient = ApiClient(\r\n    host, verify_ssl_certs=False, log_requests=True, log_bodies=True, log_headers=True,\r\n)\r\ncreds = BasicLoginCredentials(user, org, passwd)\r\nclient.set_credentials(creds)\r\n\r\n# create vdc\r\nvdc_id = \"d3d7a6df-efe8-something-foo-bar\"\r\nvdc_href = f\"{host}/api/admin/vdc/{vdc_id}\"\r\ndisk_id = \"7fc4a4c1-437d-something-foo-bar\"\r\n\r\nvdc = VDC(client, href=vdc_href)\r\n\r\n# update disk (POSSIBLE)\r\nresult = vdc.update_disk(\r\n    disk_id=disk_id,\r\n    new_name=\"disk2\",\r\n    new_size=\"1073741824\",\r\n    new_description=None,\r\n    new_storage_profile_name=\"Standard Storage\",\r\n    new_iops=\"0\",\r\n)\r\nprint(result)\r\n\r\n# create disk (UNABLE)\r\nresult = vdc.create_disk(\r\n    name=\"disk-new\",\r\n    size=\"1073741824\",\r\n    description=None,\r\n    storage_profile_name=\"Standard Storage\",\r\n    iops=\"0\",\r\n)\r\nprint(result)\r\n```\r\n\r\nError Message:\r\n\r\n``` python\r\n$ python try.py\r\nTraceback (most recent call last):\r\n  File \"/home/john/pyvcloud/pyvcloud/vcd/client.py\", line 1425, in post_linked_resource\r\n    find_link(resource, rel, media_type).href, contents,\r\n  File \"/home/john/pyvcloud/pyvcloud/vcd/client.py\", line 1715, in find_link\r\n    raise MissingLinkException(resource.get('href'), rel, media_type)\r\npyvcloud.vcd.exceptions.MissingLinkException: ('https:/something.net/api/admin/vdc/d3d7a6df-efe8-45c3-aeb1-49e2b141a97d', <RelationType.ADD: 'add'>, 'application/vnd.vmware.vcloud.diskCreateParams+xml'); href: https:/something.net/api/admin/vdc/d3d7a6df-efe8-45c3-aeb1-49e2b141a97d, rel: RelationType.ADD, mediaType: application/vnd.vmware.vcloud.diskCreateParams+xml\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"report.py\", line 51, in <module>\r\n    iops=\"0\",\r\n  File \"/home/john/pyvcloud/pyvcloud/vcd/vdc.py\", line 610, in create_disk\r\n    EntityType.DISK_CREATE_PARMS.value, disk_params)\r\n  File \"/home/john/pyvcloud/pyvcloud/vcd/client.py\", line 1429, in post_linked_resource\r\n    \"Operation is not supported\").with_traceback(e.__traceback__)\r\n  File \"/home/john/pyvcloud/pyvcloud/vcd/client.py\", line 1425, in post_linked_resource\r\n    find_link(resource, rel, media_type).href, contents,\r\n  File \"/home/john/pyvcloud/pyvcloud/vcd/client.py\", line 1715, in find_link\r\n    raise MissingLinkException(resource.get('href'), rel, media_type)\r\npyvcloud.vcd.exceptions.OperationNotSupportedException: Operation is not supported\r\n```\r\n\r\nI've reproduced the same behavior with the vcd-cli\r\n\r\n``` python\r\nAPI Version = 33.0\r\n\r\nPyvcloud version = 7a76e3b2dfad4469fab82668944a48b7fa52b602\r\n\r\n$ vcd version\r\nvcd-cli, VMware vCloud Director Command Line Interface, 23.0.1.dev2\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/658", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/658/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/658/events", "html_url": "https://github.com/vmware/pyvcloud/issues/658", "id": 616048875, "node_id": "MDU6SXNzdWU2MTYwNDg4NzU=", "number": 658, "title": "`create_vapp_network` throws 'NoneType' object is not iterable ", "user": {"login": "mukultaneja", "id": 16931639, "node_id": "MDQ6VXNlcjE2OTMxNjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/16931639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mukultaneja", "html_url": "https://github.com/mukultaneja", "followers_url": "https://api.github.com/users/mukultaneja/followers", "following_url": "https://api.github.com/users/mukultaneja/following{/other_user}", "gists_url": "https://api.github.com/users/mukultaneja/gists{/gist_id}", "starred_url": "https://api.github.com/users/mukultaneja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mukultaneja/subscriptions", "organizations_url": "https://api.github.com/users/mukultaneja/orgs", "repos_url": "https://api.github.com/users/mukultaneja/repos", "events_url": "https://api.github.com/users/mukultaneja/events{/privacy}", "received_events_url": "https://api.github.com/users/mukultaneja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-11T17:22:48Z", "updated_at": "2020-05-12T05:26:00Z", "closed_at": "2020-05-12T05:26:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While adding a vApp network, I got the following error,\r\n`line 1202, in create_vapp_network\\n    for ip_range in ip_ranges:\\nTypeError: 'NoneType' object is not iterable`. \r\n\r\nThe issue is with the `ip_ranges` argument value of the method. As per the method declaration, the default value of `ip_ranges` is `None`, and when I call the method with `None` value of `ip_ranges` the existing implementation does not check instead it started iterating `ip_ranges` as a list. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/656", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/656/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/656/events", "html_url": "https://github.com/vmware/pyvcloud/issues/656", "id": 614140265, "node_id": "MDU6SXNzdWU2MTQxNDAyNjU=", "number": 656, "title": "Failed - setting VM nic a primary nic operation is failing ", "user": {"login": "mukultaneja", "id": 16931639, "node_id": "MDQ6VXNlcjE2OTMxNjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/16931639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mukultaneja", "html_url": "https://github.com/mukultaneja", "followers_url": "https://api.github.com/users/mukultaneja/followers", "following_url": "https://api.github.com/users/mukultaneja/following{/other_user}", "gists_url": "https://api.github.com/users/mukultaneja/gists{/gist_id}", "starred_url": "https://api.github.com/users/mukultaneja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mukultaneja/subscriptions", "organizations_url": "https://api.github.com/users/mukultaneja/orgs", "repos_url": "https://api.github.com/users/mukultaneja/repos", "events_url": "https://api.github.com/users/mukultaneja/events{/privacy}", "received_events_url": "https://api.github.com/users/mukultaneja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-07T15:18:44Z", "updated_at": "2020-05-11T05:59:30Z", "closed_at": "2020-05-11T05:59:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While updating a VM nic as primary nic, I am getting following exception,\r\n\r\nTypeError: Value of unknown type: <class 'pyvcloud.vcd.exceptions.BadRequestException'>, Status code: 400/BAD_REQUEST, [ 74aa149f-b3a1-4f35-8d94-2fe35f717130 ] HTTP 400 Bad Request\\n - **cvc-type.3.1.2: Element 'PrimaryNetworkConnectionIndex' is a simple type, so it must have no element information item [children]. (request id: 74aa149f-b3a1-4f35-8d94-2fe35f717130)\\n\",** \"module_stdout\": \"\", \"msg\": \"MODULE FAILURE\\nSee stdout/stderr for the exact error\", \"rc\": 1}\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/653", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/653/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/653/events", "html_url": "https://github.com/vmware/pyvcloud/issues/653", "id": 600137630, "node_id": "MDU6SXNzdWU2MDAxMzc2MzA=", "number": 653, "title": "get_all_vms return empty list", "user": {"login": "Bronco97421", "id": 63710513, "node_id": "MDQ6VXNlcjYzNzEwNTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/63710513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bronco97421", "html_url": "https://github.com/Bronco97421", "followers_url": "https://api.github.com/users/Bronco97421/followers", "following_url": "https://api.github.com/users/Bronco97421/following{/other_user}", "gists_url": "https://api.github.com/users/Bronco97421/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bronco97421/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bronco97421/subscriptions", "organizations_url": "https://api.github.com/users/Bronco97421/orgs", "repos_url": "https://api.github.com/users/Bronco97421/repos", "events_url": "https://api.github.com/users/Bronco97421/events{/privacy}", "received_events_url": "https://api.github.com/users/Bronco97421/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-15T08:59:42Z", "updated_at": "2020-06-02T19:36:26Z", "closed_at": "2020-04-23T03:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen I use this bloc of code, it's returning me nothing :\r\n\r\n`for vdc,vapps in vApp_list.items():\r\n    for vapp in vapps:\r\n        vdc_obj = VDC(client, resource=org.get_vdc(vdc))\r\n#        print(vdc_obj)\r\n        print(vapp['name'])\r\n        vapp_obj = VApp(client, resource=vdc_obj.get_vapp(vapp['name']))\r\n        print(vapp_obj.get_all_vms())\r\n`\r\n\r\nI tried with get_vm() and specifying the name of the VM and it stills empty. But if I insert a wrong vm name, I get an error. Is there a way to get the list of vm that I don't know ?\r\n\r\nI got the same behavior for get_resource.\r\n\r\nThanks by advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/652", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/652/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/652/events", "html_url": "https://github.com/vmware/pyvcloud/issues/652", "id": 600033118, "node_id": "MDU6SXNzdWU2MDAwMzMxMTg=", "number": 652, "title": "Is there a way for the addition of a storage policy to an Organization VDC?", "user": {"login": "Harish0596", "id": 37104286, "node_id": "MDQ6VXNlcjM3MTA0Mjg2", "avatar_url": "https://avatars3.githubusercontent.com/u/37104286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harish0596", "html_url": "https://github.com/Harish0596", "followers_url": "https://api.github.com/users/Harish0596/followers", "following_url": "https://api.github.com/users/Harish0596/following{/other_user}", "gists_url": "https://api.github.com/users/Harish0596/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harish0596/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harish0596/subscriptions", "organizations_url": "https://api.github.com/users/Harish0596/orgs", "repos_url": "https://api.github.com/users/Harish0596/repos", "events_url": "https://api.github.com/users/Harish0596/events{/privacy}", "received_events_url": "https://api.github.com/users/Harish0596/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T05:33:10Z", "updated_at": "2020-05-01T08:35:25Z", "closed_at": "2020-05-01T08:35:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/650", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/650/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/650/events", "html_url": "https://github.com/vmware/pyvcloud/issues/650", "id": 599072493, "node_id": "MDU6SXNzdWU1OTkwNzI0OTM=", "number": 650, "title": "how to update guest properties for a vm in vapp?", "user": {"login": "jdilipan", "id": 13259249, "node_id": "MDQ6VXNlcjEzMjU5MjQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/13259249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdilipan", "html_url": "https://github.com/jdilipan", "followers_url": "https://api.github.com/users/jdilipan/followers", "following_url": "https://api.github.com/users/jdilipan/following{/other_user}", "gists_url": "https://api.github.com/users/jdilipan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdilipan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdilipan/subscriptions", "organizations_url": "https://api.github.com/users/jdilipan/orgs", "repos_url": "https://api.github.com/users/jdilipan/repos", "events_url": "https://api.github.com/users/jdilipan/events{/privacy}", "received_events_url": "https://api.github.com/users/jdilipan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-13T19:04:05Z", "updated_at": "2020-04-22T11:34:01Z", "closed_at": "2020-04-22T11:34:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried the following way to update the guest properties for a VM in vapp.\r\n\r\n`result = vapp.update_product_section(key='AVICNTLR', value='10.79.204.23', user_configurable=True)\r\n`\r\nhowever, ovf properties reflected in the vm is as below.\r\n\r\n`\r\nAVICNTRL: 0.0.0.0, AVICNTRL.test-se-1: 10.79.204.23\r\n`\r\n\r\nHere - Expected is AVICNTRL is expected to have the ip address, but not seen. instead it is populated in AVICNTRL.test-se-1..here test-se-1 is the instance name.\r\n\r\nThe same is working if VM is created using Terraform. Can you let me know what is wrong here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/649", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/649/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/649/events", "html_url": "https://github.com/vmware/pyvcloud/issues/649", "id": 593456883, "node_id": "MDU6SXNzdWU1OTM0NTY4ODM=", "number": 649, "title": "README in 20.0.x incorrectly indicates that pyvcloud requires Python 3", "user": {"login": "dzolnierz", "id": 876741, "node_id": "MDQ6VXNlcjg3Njc0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/876741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzolnierz", "html_url": "https://github.com/dzolnierz", "followers_url": "https://api.github.com/users/dzolnierz/followers", "following_url": "https://api.github.com/users/dzolnierz/following{/other_user}", "gists_url": "https://api.github.com/users/dzolnierz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzolnierz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzolnierz/subscriptions", "organizations_url": "https://api.github.com/users/dzolnierz/orgs", "repos_url": "https://api.github.com/users/dzolnierz/repos", "events_url": "https://api.github.com/users/dzolnierz/events{/privacy}", "received_events_url": "https://api.github.com/users/dzolnierz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T15:19:16Z", "updated_at": "2020-04-22T11:31:46Z", "closed_at": "2020-04-22T11:31:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "After using version 20.0.3 in my project on Debian 9.12 (oldstable) the following exception is thrown:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/vcloud-flexvolume\", line 7, in <module>\r\n    from flexvolume.attach import attach, waitforattach, isattached\r\n  File \"/usr/local/lib/python3.5/dist-packages/flexvolume/attach.py\", line 19, in <module>\r\n    from vcloud import client as Client, disk as Disk, vapp as VApp\r\n  File \"/usr/local/lib/python3.5/dist-packages/vcloud/client.py\", line 12, in <module>\r\n    from pyvcloud.vcd.vdc import VDC\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyvcloud/vcd/vdc.py\", line 35, in <module>\r\n    from pyvcloud.vcd.metadata import Metadata\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyvcloud/vcd/metadata.py\", line 207\r\n    f\"{href}/{domain.value}/{key}\"\r\n                                 ^\r\nSyntaxError: invalid syntax \r\n```\r\n\r\nDebian oldstable has Python 3.5 and f-strings are introduced in Python 3.6. I've managed to fix it using future_fstrings. I can prepare PR on request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/647", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/647/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/647/events", "html_url": "https://github.com/vmware/pyvcloud/issues/647", "id": 587934739, "node_id": "MDU6SXNzdWU1ODc5MzQ3Mzk=", "number": 647, "title": "Not able to add a new disk to a VM", "user": {"login": "mukultaneja", "id": 16931639, "node_id": "MDQ6VXNlcjE2OTMxNjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/16931639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mukultaneja", "html_url": "https://github.com/mukultaneja", "followers_url": "https://api.github.com/users/mukultaneja/followers", "following_url": "https://api.github.com/users/mukultaneja/following{/other_user}", "gists_url": "https://api.github.com/users/mukultaneja/gists{/gist_id}", "starred_url": "https://api.github.com/users/mukultaneja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mukultaneja/subscriptions", "organizations_url": "https://api.github.com/users/mukultaneja/orgs", "repos_url": "https://api.github.com/users/mukultaneja/repos", "events_url": "https://api.github.com/users/mukultaneja/events{/privacy}", "received_events_url": "https://api.github.com/users/mukultaneja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-25T19:23:22Z", "updated_at": "2020-04-22T10:18:30Z", "closed_at": "2020-04-22T10:18:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Description: While trying to add a new disk to a VM, method `add_disk_to_vm` is throwing `BadRequestException`\r\n\r\nPlease find attached a screenshot for more reference.\r\n\r\n![Screenshot 2020-03-04 at 12 21 48 PM](https://user-images.githubusercontent.com/16931639/77576995-161c7880-6efc-11ea-8e2b-7f439c9f3f66.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/642", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/642/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/642/events", "html_url": "https://github.com/vmware/pyvcloud/issues/642", "id": 557333339, "node_id": "MDU6SXNzdWU1NTczMzMzMzk=", "number": 642, "title": "Creating a VM from scratch with attached disk", "user": {"login": "bogdan-ds", "id": 19280465, "node_id": "MDQ6VXNlcjE5MjgwNDY1", "avatar_url": "https://avatars1.githubusercontent.com/u/19280465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bogdan-ds", "html_url": "https://github.com/bogdan-ds", "followers_url": "https://api.github.com/users/bogdan-ds/followers", "following_url": "https://api.github.com/users/bogdan-ds/following{/other_user}", "gists_url": "https://api.github.com/users/bogdan-ds/gists{/gist_id}", "starred_url": "https://api.github.com/users/bogdan-ds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bogdan-ds/subscriptions", "organizations_url": "https://api.github.com/users/bogdan-ds/orgs", "repos_url": "https://api.github.com/users/bogdan-ds/repos", "events_url": "https://api.github.com/users/bogdan-ds/events{/privacy}", "received_events_url": "https://api.github.com/users/bogdan-ds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T08:18:24Z", "updated_at": "2020-01-30T11:28:43Z", "closed_at": "2020-01-30T11:28:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm bringing this up again, as I also want to add a disk upon VM creation similarly to how the VMs are created in vCloud Director. However I'm getting the 500 internal server error, which I'm not able to debug.\r\n\r\nI also checked the definitions in the recomposeVApp API call, but couldn't find a definition of this section neither in the OVF spec nor in the API docs. Any help is appreciated, below is the debug:\r\n\r\n```\r\nRequest uri (POST): https://10.10.71.12/api/vApp/vapp-cfdf2b11-d7a6-4385-8095-b30fe7f61f2b/action/recomposeVApp\r\nRequest headers: {'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/*+xml;version=29.0', 'Connection': 'keep-alive', 'x-vcloud-authorization': '[REDACTED]', 'Content-Type': 'application/vnd.vmware.vcloud.recomposeVAppParams+xml', 'Content-Length': '1572'}\r\nRequest body: <RecomposeVAppParams xmlns=\"http://www.vmware.com/vcloud/v1.5\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:ovf=\"http://schemas.dmtf.org/ovf/envelope/1\" deploy=\"true\" powerOn=\"true\"><CreateItem name=\"created_disk_API\"><Description/><GuestCustomizationSection><ovf:Info>Specifies Guest OS Customization Settings</ovf:Info><ComputerName>hostnameAPI</ComputerName></GuestCustomizationSection><NetworkConnectionSection><ovf:Info/><NetworkConnection network=\"VLAN10 Network\"><NetworkConnectionIndex>1</NetworkConnectionIndex><IsConnected>true</IsConnected><IpAddressAllocationMode>DHCP</IpAddressAllocationMode></NetworkConnection></NetworkConnectionSection><VmSpecSection Modified=\"true\"><ovf:Info>Virtual Machine specification</ovf:Info><OsType>vmwarePhoton64Guest</OsType><NumCpus>1</NumCpus><NumCoresPerSocket>1</NumCoresPerSocket><CpuResourceMhz><Configured>0</Configured></CpuResourceMhz><MemoryResourceMb><Configured>512</Configured></MemoryResourceMb><DiskSection><DiskSettings><DiskId>2000</DiskId><SizeMb>16384</SizeMb><UnitNumber>0</UnitNumber><BusNumber>0</BusNumber><AdapterType>5</AdapterType><ThinProvisioned>true</ThinProvisioned><StorageProfile href=\"https://10.10.71.12/api/vdcStorageProfile/23d190d1-d0bb-4fe2-b254-239e7505f944\" name=\"*\"/><iops>0</iops><VirtualQuantityUnit>byte</VirtualQuantityUnit></DiskSettings></DiskSection><HardwareVersion>vmx-14</HardwareVersion><VirtualCpuType>VM64</VirtualCpuType></VmSpecSection></CreateItem><AllEULAsAccepted>true</AllEULAsAccepted></RecomposeVAppParams>\r\nResponse status code: 500\r\nResponse headers: {'Date': 'Thu, 30 Jan 2020 07:10:35 GMT', 'X-VMWARE-VCLOUD-REQUEST-ID': 'a1ed2fce-3eb1-4908-adff-ff966d6dd2eb', 'x-vcloud-authorization': '[REDACTED]', 'Content-Type': 'application/vnd.vmware.vcloud.error+xml;version=29.0', 'X-VMWARE-VCLOUD-REQUEST-EXECUTION-TIME': '137', 'Transfer-Encoding': 'chunked'}\r\nResponse body: <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<Error xmlns=\"http://www.vmware.com/vcloud/v1.5\" xmlns:ovf=\"http://schemas.dmtf.org/ovf/envelope/1\" xmlns:vssd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData\" xmlns:common=\"http://schemas.dmtf.org/wbem/wscim/1/common\" xmlns:rasd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData\" xmlns:vmw=\"http://www.vmware.com/schema/ovf\" xmlns:ovfenv=\"http://schemas.dmtf.org/ovf/environment/1\" xmlns:vmext=\"http://www.vmware.com/vcloud/extension/v1.5\" xmlns:ns9=\"http://www.vmware.com/vcloud/versions\" stackTrace=\"java.lang.NullPointerException\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.ovfhandlers.VmSpecSectionHandler.toDisks(VmSpecSectionHandler.java:254)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.ovfhandlers.VmSpecSectionHandler.fillVmSpecFromOvfSection(VmSpecSectionHandler.java:209)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.ovfhandlers.VmSpecSectionHandler.fillVmSpecFromOvfSection(VmSpecSectionHandler.java:49)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.VAppUtils.copyOvfSectionsToSpec(VAppUtils.java:1507)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.VAppUtils.copyOvfSectionsToSpec(VAppUtils.java:1530)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.VAppUtils.fillVmSpec(VAppUtils.java:1993)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.VAppUtils.getVmSpec(VAppUtils.java:1981)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.VAppUtils.lambda$populateComposeCreateItems$4(VAppUtils.java:2434)\t\r\nat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\t\r\nat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\t\r\nat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\t\r\nat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\t\r\nat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\t\r\nat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\t\r\nat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.VAppUtils.populateComposeCreateItems(VAppUtils.java:2473)\t\r\nat com.vmware.vcloud.api.rest.handlers.utils.VAppUtils.createPlComposeVAppParams(VAppUtils.java:2383)\t\r\nat com.vmware.vcloud.api.rest.handlers.VAppHandler.recomposeVApp(VAppHandler.java:1237)\t\r\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\t\r\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\t\r\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\t\r\nat java.lang.reflect.Method.invoke(Method.java:498)\t\r\nat org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)\t\r\nat org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)\t\r\nat org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:189)\t\r\nat com.vmware.vcloud.api.rest.jaxrs.ContextClassLoaderInvoker.invoke(ContextClassLoaderInvoker.java:27)\t\r\nat org.apache.cxf.jaxrs.JAXRSInvoker.invoke(JAXRSInvoker.java:99)\t\r\nat org.apache.cxf.interceptor.ServiceInvokerInterceptor$1.run(ServiceInvokerInterceptor.java:59)\t\r\nat org.apache.cxf.interceptor.ServiceInvokerInterceptor.handleMessage(ServiceInvokerInterceptor.java:96)\t\r\nat org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:308)\t\r\nat org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)\t\r\nat org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:262)\t\r\nat org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:234)\t\r\nat org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:208)\t\r\nat org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)\t\r\nat org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:180)\t\r\nat org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:299)\t\r\nat org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:218)\t\r\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\t\r\nat org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:274)\t\r\nat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)\t\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\t\r\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)\t\r\nat com.vmware.vcloud.api.rest.diagnostics.DiagnosticFilter.doFilter(DiagnosticFilter.java:33)\t\r\nat com.vmware.vcloud.api.rest.diagnostics.RestApiDiagnosticsInterceptor.doFilter(RestApiDiagnosticsInterceptor.java:128)\t\r\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\t\r\nat com.vmware.vcloud.api.framework.web.ExtensibilityFilter.doFilter(ExtensibilityFilter.java:132)\t\r\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\t\r\nat com.vmware.vcloud.security.filters.ValidityExceptionFilter.doFilterHttp(ValidityExceptionFilter.java:47)\t\r\nat com.vmware.vcloud.security.filters.HttpFilterBean.doFilter(HttpFilterBean.java:35)\t\r\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\t\r\nat com.vmware.vcloud.security.web.RestSessionFilter.doFilter(RestSessionFilter.java:228)\t\r\nat com.vmware.vcloud.api.rest.diagnostics.RestApiDiagnosticsInterceptor.doFilter(RestApiDiagnosticsInterceptor.java:128)\t\r\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\t\r\nat com.vmware.vcloud.security.web.CellLivenessCheckFilter.doFilter(CellLivenessCheckFilter.java:54)\t\r\nat com.vmware.vcloud.api.rest.diagnostics.RestApiDiagnosticsInterceptor.doFilter(RestApiDiagnosticsInterceptor.java:128)\t\r\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\t\r\nat com.vmware.vcloud.api.rest.versioning.AcceptHeaderFilter.doFilter(AcceptHeaderFilter.java:109)\t\r\nat com.vmware.vcloud.api.rest.diagnostics.RestApiDiagnosticsInterceptor.doFilter(RestApiDiagnosticsInterceptor.java:128)\t\r\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\t\r\nat com.vmware.vcloud.security.filters.ConversationFilter$1.run(ConversationFilter.java:39)\t\r\nat com.vmware.vcloud.security.filters.ConversationFilter$1.run(ConversationFilter.java:37)\t\r\nat com.vmware.vcloud.common.persist.ConversationContextExecutor.execute(ConversationContextExecutor.java:67)\t\r\nat com.vmware.vcloud.security.filters.ConversationFilter.doFilter(ConversationFilter.java:45)\t\r\nat com.vmware.vcloud.api.rest.diagnostics.RestApiDiagnosticsInterceptor.doFilter(RestApiDiagnosticsInterceptor.java:128)\t\r\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\t\r\nat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)\t\r\nat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)\t\r\nat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)\t\r\nat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)\t\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\t\r\nat org.eclipse.jetty.servlets.UserAgentFilter.doFilter(UserAgentFilter.java:83)\t\r\nat org.eclipse.jetty.servlets.GzipFilter.doFilter(GzipFilter.java:301)\t\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\t\r\nat com.vmware.vcloud.common.web.deployment.impl.RequestDiagnosticFilter.doFilter(RequestDiagnosticFilter.java:121)\t\r\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\t\r\nat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\t\r\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\t\r\nat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)\t\r\nat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)\t\r\nat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\t\r\nat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\t\r\nat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\t\r\nat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\t\r\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\t\r\nat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)\t\r\nat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\t\r\nat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)\t\r\nat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\t\r\nat org.eclipse.jetty.server.Server.handle(Server.java:499)\t\r\nat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)\t\r\nat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:258)\t\r\nat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)\t\r\nat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\t\r\nat com.vmware.vcloud.common.threading.ExtendedJettyQueuedThreadPool.runJob(ExtendedJettyQueuedThreadPool.java:33)\t\r\nat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\t\r\nat java.lang.Thread.run(Thread.java:748)\t\" majorErrorCode=\"500\" message=\"[ a1ed2fce-3eb1-4908-adff-ff966d6dd2eb ] class java.lang.NullPointerException\" minorErrorCode=\"INTERNAL_SERVER_ERROR\"/>\r\n```\r\n\r\nPS I've added the disksection and disksettings to the add_vm_from_scratch method like that:\r\n\r\n```\r\n        vm_spec_section.append(E.DiskSection(\r\n            E.DiskSettings(\r\n                E.DiskId(2000),\r\n                E.SizeMb(16384),\r\n                E.UnitNumber(0),\r\n                E.BusNumber(0),\r\n                E.AdapterType(5),\r\n                E.ThinProvisioned('true'),\r\n                E.StorageProfile(href='https://10.10.71.12/api/vdcStorageProfile/23d190d1-d0bb-4fe2-b254-239e7505f944', name='*'),\r\n                E.iops(0),\r\n                E.VirtualQuantityUnit('byte')\r\n            )\r\n            ))\r\n```\r\n\r\nI also tried without a storage profile and some of the other elements. But getting the same error with the same stack trace.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/639", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/639/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/639/events", "html_url": "https://github.com/vmware/pyvcloud/issues/639", "id": 551248048, "node_id": "MDU6SXNzdWU1NTEyNDgwNDg=", "number": 639, "title": "VM creation from scratch", "user": {"login": "bogdan-ds", "id": 19280465, "node_id": "MDQ6VXNlcjE5MjgwNDY1", "avatar_url": "https://avatars1.githubusercontent.com/u/19280465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bogdan-ds", "html_url": "https://github.com/bogdan-ds", "followers_url": "https://api.github.com/users/bogdan-ds/followers", "following_url": "https://api.github.com/users/bogdan-ds/following{/other_user}", "gists_url": "https://api.github.com/users/bogdan-ds/gists{/gist_id}", "starred_url": "https://api.github.com/users/bogdan-ds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bogdan-ds/subscriptions", "organizations_url": "https://api.github.com/users/bogdan-ds/orgs", "repos_url": "https://api.github.com/users/bogdan-ds/repos", "events_url": "https://api.github.com/users/bogdan-ds/events{/privacy}", "received_events_url": "https://api.github.com/users/bogdan-ds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-01-17T07:21:40Z", "updated_at": "2020-06-08T07:37:15Z", "closed_at": "2020-01-27T11:38:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've read all available resources on the matter and I'd like to ask if this is even possible using pyvcloud?\r\n\r\nCurrently the workflow that I found in the tests points to using the `add_vms` method, which in terms requires this parameter:\r\n\r\n> specs (dict) \u2013 vm specifications, see to_sourced_item() method for specification details.\r\n\r\nWhen inspecting `to_sourced_item()` we can see this required parameter:\r\n\r\n> source_vm_name: (str): (required) source vm name.\r\n\r\nBut I don't want to use a source VM as to create a VM, rather I want to create one from scratch. Is it possible?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/638", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/638/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/638/events", "html_url": "https://github.com/vmware/pyvcloud/issues/638", "id": 543841093, "node_id": "MDU6SXNzdWU1NDM4NDEwOTM=", "number": 638, "title": "Attach Specific Network to VM", "user": {"login": "donkerm", "id": 26325808, "node_id": "MDQ6VXNlcjI2MzI1ODA4", "avatar_url": "https://avatars3.githubusercontent.com/u/26325808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donkerm", "html_url": "https://github.com/donkerm", "followers_url": "https://api.github.com/users/donkerm/followers", "following_url": "https://api.github.com/users/donkerm/following{/other_user}", "gists_url": "https://api.github.com/users/donkerm/gists{/gist_id}", "starred_url": "https://api.github.com/users/donkerm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donkerm/subscriptions", "organizations_url": "https://api.github.com/users/donkerm/orgs", "repos_url": "https://api.github.com/users/donkerm/repos", "events_url": "https://api.github.com/users/donkerm/events{/privacy}", "received_events_url": "https://api.github.com/users/donkerm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-30T11:07:44Z", "updated_at": "2019-12-30T14:15:23Z", "closed_at": "2019-12-30T14:15:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI want to deploy a virtual machine in a vAPP.\r\nIs it possible to use more than one network in the spec file of vapp.add_vms?\r\nOr is there a way that I can add specific network to a virtual machine after the deployment?\r\n\r\nI one solution here: https://github.com/vmware/pyvcloud/issues/283\r\n\r\n\r\nKind Regards,\r\nM", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/632", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/632/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/632/events", "html_url": "https://github.com/vmware/pyvcloud/issues/632", "id": 531741587, "node_id": "MDU6SXNzdWU1MzE3NDE1ODc=", "number": 632, "title": "Bug in get_vdc and get_gateway", "user": {"login": "Harish0596", "id": 37104286, "node_id": "MDQ6VXNlcjM3MTA0Mjg2", "avatar_url": "https://avatars3.githubusercontent.com/u/37104286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harish0596", "html_url": "https://github.com/Harish0596", "followers_url": "https://api.github.com/users/Harish0596/followers", "following_url": "https://api.github.com/users/Harish0596/following{/other_user}", "gists_url": "https://api.github.com/users/Harish0596/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harish0596/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harish0596/subscriptions", "organizations_url": "https://api.github.com/users/Harish0596/orgs", "repos_url": "https://api.github.com/users/Harish0596/repos", "events_url": "https://api.github.com/users/Harish0596/events{/privacy}", "received_events_url": "https://api.github.com/users/Harish0596/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-03T05:56:14Z", "updated_at": "2020-01-13T06:57:59Z", "closed_at": "2020-01-13T06:57:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the vdc is not present in under the Organization instead of raising EntityNotFoundException, it is returning none.\r\n\r\n    def get_vdc(self, name, is_admin_operation=False):\r\n        \"\"\"Retrieves resource of an org vdc identified by its name.\r\n\r\n        :param str name: name of the org vdc to be retrieved.\r\n\r\n        :param bool is_admin_operation: if set True, will return the admin\r\n            view of the org vdc resource.\r\n\r\n        :return: an object containing EtityType.VDC XML data representing the\r\n            vdc.\r\n\r\n        :rtype: lxml.objectify.ObjectifiedElement\r\n\r\n        :raises: EntityNotFoundException: if the named vdc can not be found.\r\n        \"\"\"\r\n        if self.resource is None:\r\n            self.reload()\r\n        if self.client.get_api_version() < ApiVersion.VERSION_33.value:\r\n            links = get_links(\r\n                self.resource,\r\n                rel=RelationType.DOWN,\r\n                media_type=EntityType.VDC.value)\r\n        else:\r\n            links = self.client.get_resource_link_from_query_object(\r\n                self.resource, media_type=EntityType.RECORDS.value, type='vdc')\r\n        for link in links:\r\n            if name == link.name:\r\n                if is_admin_operation:\r\n                    href = get_admin_href(link.href)\r\n                else:\r\n                    href = get_non_admin_href(link.href)\r\n                return self.client.get_resource(href)\r\n        return None\r\n\r\ninstead of returning None we can return as follows\r\nraise EntityNotFoundException('org vdc \\'%s\\' not found' % name)\r\n\r\nand the same goes for get_gateway also\r\n\r\n    def get_gateway(self, name):\r\n        \"\"\"Get a gateway in the current org vdc.\r\n\r\n        :param str name: name of the gateway to be fetched.\r\n\r\n        :return: gateway\r\n\r\n        :rtype: lxml.objectify.ObjectifiedElement\r\n\r\n        :raises: EntityNotFoundException: if the named gateway can not be\r\n        found.\r\n        :raises: MultipleRecordsException: if more than one gateway with the\r\n            provided name are found.\r\n        \"\"\"\r\n        name_filter = ('name', name)\r\n        query = self.client.get_typed_query(\r\n            ResourceType.EDGE_GATEWAY.value,\r\n            query_result_format=QueryResultFormat.RECORDS,\r\n            equality_filter=name_filter)\r\n        records = list(query.execute())\r\n        if records is None or len(records) == 0:\r\n            return None\r\n        elif len(records) > 1:\r\n            raise MultipleRecordsException(\"Found multiple gateway named \"\r\n                                           \"'%s',\" % name)\r\n        return records[0]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/630", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/630/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/630/events", "html_url": "https://github.com/vmware/pyvcloud/issues/630", "id": 531002624, "node_id": "MDU6SXNzdWU1MzEwMDI2MjQ=", "number": 630, "title": "list_rights_available_in_system: bad usage of list_rights_available_in_vcd", "user": {"login": "lrivallain", "id": 778745, "node_id": "MDQ6VXNlcjc3ODc0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/778745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrivallain", "html_url": "https://github.com/lrivallain", "followers_url": "https://api.github.com/users/lrivallain/followers", "following_url": "https://api.github.com/users/lrivallain/following{/other_user}", "gists_url": "https://api.github.com/users/lrivallain/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrivallain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrivallain/subscriptions", "organizations_url": "https://api.github.com/users/lrivallain/orgs", "repos_url": "https://api.github.com/users/lrivallain/repos", "events_url": "https://api.github.com/users/lrivallain/events{/privacy}", "received_events_url": "https://api.github.com/users/lrivallain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-02T09:34:05Z", "updated_at": "2019-12-05T11:00:12Z", "closed_at": "2019-12-05T11:00:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Warning:** Deprecated code\r\n\r\nUsing `list_rights_available_in_system` (deprecated function) redirect call to `list_rights_available_in_vcd`:\r\n\r\n`return self.list_rights_available_in_vcd(self, name_filter)`\r\n\r\nThat raises an error:\r\n\r\n`Unhandled exception <class 'TypeError'>: list_rights_available_in_vcd() takes from 1 to 2 positional arguments but 3 were given`\r\n\r\nBecause of the unexpected \"self\" usage as a function args.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/618", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/618/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/618/events", "html_url": "https://github.com/vmware/pyvcloud/issues/618", "id": 496394017, "node_id": "MDU6SXNzdWU0OTYzOTQwMTc=", "number": 618, "title": "vcd disk update Argument type missmatch ", "user": {"login": "not4mad", "id": 48958209, "node_id": "MDQ6VXNlcjQ4OTU4MjA5", "avatar_url": "https://avatars2.githubusercontent.com/u/48958209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/not4mad", "html_url": "https://github.com/not4mad", "followers_url": "https://api.github.com/users/not4mad/followers", "following_url": "https://api.github.com/users/not4mad/following{/other_user}", "gists_url": "https://api.github.com/users/not4mad/gists{/gist_id}", "starred_url": "https://api.github.com/users/not4mad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/not4mad/subscriptions", "organizations_url": "https://api.github.com/users/not4mad/orgs", "repos_url": "https://api.github.com/users/not4mad/repos", "events_url": "https://api.github.com/users/not4mad/events{/privacy}", "received_events_url": "https://api.github.com/users/not4mad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-20T14:47:14Z", "updated_at": "2019-09-23T07:36:26Z", "closed_at": "2019-09-23T07:36:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nthere is bug releated to:\r\n[vcd-cli issue 497](https://github.com/vmware/vcd-cli/issues/497)\r\n\r\nit seems that conversion from int to str is missing in file: pyvcloud/vcd/vdc.py starts line 631:\r\n\r\n> \r\n\r\n       if new_size is not None:\r\n            if self.client.get_api_version() < ApiVersion.VERSION_33.value:\r\n                disk_params.set('size', new_size)\r\n            else:\r\n                size = int(int(new_size) / SIZE_1MB)\r\n                disk_params.set('sizeMb', str(size))\r\n        else:\r\n            if self.client.get_api_version() < ApiVersion.VERSION_33.value:\r\n                size = disk.get('size')\r\n                disk_params.set('size', size)\r\n            else:\r\n                size = disk.get('sizeMb')\r\n                disk_params.set('sizeMb', str(size))\r\n\r\nand should be:\r\n\r\n  \r\n\r\n> \r\n       if new_size is not None:\r\n            if self.client.get_api_version() < ApiVersion.VERSION_33.value:\r\n                disk_params.set('size', str(new_size))                      #<<< ADD conversion to str\r\n            else:\r\n                size = int(int(new_size) / SIZE_1MB)\r\n                disk_params.set('sizeMb', str(size))\r\n        else:\r\n            if self.client.get_api_version() < ApiVersion.VERSION_33.value:\r\n                size = disk.get('size')\r\n                disk_params.set('size', size)\r\n            else:\r\n                size = disk.get('sizeMb')\r\n                disk_params.set('sizeMb', str(size))\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/616", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/616/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/616/events", "html_url": "https://github.com/vmware/pyvcloud/issues/616", "id": 494523850, "node_id": "MDU6SXNzdWU0OTQ1MjM4NTA=", "number": 616, "title": "Delete VDC", "user": {"login": "Harish0596", "id": 37104286, "node_id": "MDQ6VXNlcjM3MTA0Mjg2", "avatar_url": "https://avatars3.githubusercontent.com/u/37104286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harish0596", "html_url": "https://github.com/Harish0596", "followers_url": "https://api.github.com/users/Harish0596/followers", "following_url": "https://api.github.com/users/Harish0596/following{/other_user}", "gists_url": "https://api.github.com/users/Harish0596/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harish0596/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harish0596/subscriptions", "organizations_url": "https://api.github.com/users/Harish0596/orgs", "repos_url": "https://api.github.com/users/Harish0596/repos", "events_url": "https://api.github.com/users/Harish0596/events{/privacy}", "received_events_url": "https://api.github.com/users/Harish0596/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-17T09:58:52Z", "updated_at": "2019-09-19T08:12:22Z", "closed_at": "2019-09-19T08:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to delete a VDC under an organisation. Upon verifying some of the examples provided, I found one method called delete_vdc() in vdc.py for my use case. Surprisingly for this method I was not able to pass the VDC name which I want to delete. Can anyone help me on this ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/589", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/589/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/589/events", "html_url": "https://github.com/vmware/pyvcloud/issues/589", "id": 477831874, "node_id": "MDU6SXNzdWU0Nzc4MzE4NzQ=", "number": 589, "title": "issue with getting CPU and MEM", "user": {"login": "387119", "id": 44392341, "node_id": "MDQ6VXNlcjQ0MzkyMzQx", "avatar_url": "https://avatars3.githubusercontent.com/u/44392341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/387119", "html_url": "https://github.com/387119", "followers_url": "https://api.github.com/users/387119/followers", "following_url": "https://api.github.com/users/387119/following{/other_user}", "gists_url": "https://api.github.com/users/387119/gists{/gist_id}", "starred_url": "https://api.github.com/users/387119/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/387119/subscriptions", "organizations_url": "https://api.github.com/users/387119/orgs", "repos_url": "https://api.github.com/users/387119/repos", "events_url": "https://api.github.com/users/387119/events{/privacy}", "received_events_url": "https://api.github.com/users/387119/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-07T10:05:59Z", "updated_at": "2019-08-07T10:43:09Z", "closed_at": "2019-08-07T10:42:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "reference issue https://github.com/vmware/pyvcloud/issues/463 closed without fixing\r\n\r\ncreating new issue for the same\r\n\r\nvCloud Director version: 8.20.0.6875354\r\ndoc: https://vmware.github.io/pyvcloud/pyvcloud.vcd.vm.html\r\n\r\nexample:\r\nvm = VM(client, resource=vm_resource)\r\nvm_mem=vm.get_memory()\r\n\r\nTraceback (most recent call last):\r\nFile \"list-vcloud-all-resources.py\", line 147, in \r\nvm_mem=vm.get_memory()\r\nFile \"/opt/vcloud/pyvcloud/vcd/vm.py\", line 111, in get_memory\r\nself.resource.VmSpecSection.MemoryResourceMb.Configured.text)\r\nFile \"src/lxml/objectify.pyx\", line 231, in lxml.objectify.ObjectifiedElement.getattr\r\nFile \"src/lxml/objectify.pyx\", line 451, in lxml.objectify._lookupChildOrRaise\r\nAttributeError: no such child: {http://www.vmware.com/vcloud/v1.5}VmSpecSection\r\n\r\nvm_cpu=vm.get_cpus()\r\n\r\nTraceback (most recent call last):\r\nFile \"list-vcloud-all-resources.py\", line 147, in \r\nvm_cpus=vm.get_cpus()\r\nFile \"/opt/vcloud/pyvcloud/vcd/vm.py\", line 97, in get_cpus\r\nint(self.resource.VmSpecSection.NumCpus.text),\r\nFile \"src/lxml/objectify.pyx\", line 231, in lxml.objectify.ObjectifiedElement.getattr\r\nFile \"src/lxml/objectify.pyx\", line 451, in lxml.objectify._lookupChildOrRaise\r\nAttributeError: no such child: {http://www.vmware.com/vcloud/v1.5}VmSpecSection\r\n\r\nfor example other commands:\r\nget_power_state & get_resources - work with no issues\r\n\r\nstate=vm.get_power_state()\r\nprint (state)\r\nresult: 4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/565", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/565/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/565/events", "html_url": "https://github.com/vmware/pyvcloud/issues/565", "id": 470032354, "node_id": "MDU6SXNzdWU0NzAwMzIzNTQ=", "number": 565, "title": "Gateway. add_firewall_rule method cannot specify source/destination/service of firewall rule.", "user": {"login": "nickliuibm", "id": 39811332, "node_id": "MDQ6VXNlcjM5ODExMzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/39811332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickliuibm", "html_url": "https://github.com/nickliuibm", "followers_url": "https://api.github.com/users/nickliuibm/followers", "following_url": "https://api.github.com/users/nickliuibm/following{/other_user}", "gists_url": "https://api.github.com/users/nickliuibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickliuibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickliuibm/subscriptions", "organizations_url": "https://api.github.com/users/nickliuibm/orgs", "repos_url": "https://api.github.com/users/nickliuibm/repos", "events_url": "https://api.github.com/users/nickliuibm/events{/privacy}", "received_events_url": "https://api.github.com/users/nickliuibm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-18T23:01:24Z", "updated_at": "2019-08-07T10:48:42Z", "closed_at": "2019-08-07T10:48:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the current implementation of the method\r\n```\r\n def add_firewall_rule(self,\r\n                          name,\r\n                          action='accept',\r\n                          type='User',\r\n                          enabled=True,\r\n                          logging_enabled=False):\r\n        \"\"\"Add firewall rule in the gateway.\r\n        param name str: name of firewall rule\r\n        param action str: action. Possible values accept/deny.\r\n        param type str: firewall rule type. Default: User\r\n        param enable bool: enable\r\n        param logging_enabled bool: logging enabled\r\n        \"\"\"\r\n```\r\nBasically, it can only specify the `action`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/540", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/540/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/540/events", "html_url": "https://github.com/vmware/pyvcloud/issues/540", "id": 457989379, "node_id": "MDU6SXNzdWU0NTc5ODkzNzk=", "number": 540, "title": "Is this project dead?", "user": {"login": "manuelmazzuola", "id": 1757492, "node_id": "MDQ6VXNlcjE3NTc0OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1757492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manuelmazzuola", "html_url": "https://github.com/manuelmazzuola", "followers_url": "https://api.github.com/users/manuelmazzuola/followers", "following_url": "https://api.github.com/users/manuelmazzuola/following{/other_user}", "gists_url": "https://api.github.com/users/manuelmazzuola/gists{/gist_id}", "starred_url": "https://api.github.com/users/manuelmazzuola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manuelmazzuola/subscriptions", "organizations_url": "https://api.github.com/users/manuelmazzuola/orgs", "repos_url": "https://api.github.com/users/manuelmazzuola/repos", "events_url": "https://api.github.com/users/manuelmazzuola/events{/privacy}", "received_events_url": "https://api.github.com/users/manuelmazzuola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-19T12:39:30Z", "updated_at": "2019-08-07T09:26:44Z", "closed_at": "2019-08-07T09:26:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering if this project is dead because there are a lot of PRs not yet merged, but essentials, some have been open for a long time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/537", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/537/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/537/events", "html_url": "https://github.com/vmware/pyvcloud/issues/537", "id": 455280456, "node_id": "MDU6SXNzdWU0NTUyODA0NTY=", "number": 537, "title": "vApp retrieve attached disks example", "user": {"login": "pimuzzo", "id": 1621205, "node_id": "MDQ6VXNlcjE2MjEyMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1621205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pimuzzo", "html_url": "https://github.com/pimuzzo", "followers_url": "https://api.github.com/users/pimuzzo/followers", "following_url": "https://api.github.com/users/pimuzzo/following{/other_user}", "gists_url": "https://api.github.com/users/pimuzzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pimuzzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pimuzzo/subscriptions", "organizations_url": "https://api.github.com/users/pimuzzo/orgs", "repos_url": "https://api.github.com/users/pimuzzo/repos", "events_url": "https://api.github.com/users/pimuzzo/events{/privacy}", "received_events_url": "https://api.github.com/users/pimuzzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-12T15:27:38Z", "updated_at": "2019-08-07T09:29:32Z", "closed_at": "2019-08-07T09:29:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am searching for a way to retrieve all disks attached to a vApp or a Vm.\r\nAt the moment I'm tring to achieve the result with `get_linked_resource` method without success.\r\nI've seen that from a disk is possible to retrieve the attached vm with: `self.client.get_linked_resource(disk, RelationType.DOWN, EntityType.VMS.value)` I need a similar thing but in input I've got only the vApp or the Vm.\r\nFor each disk I need the id in the \"uuid\" form.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/529", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/529/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/529/events", "html_url": "https://github.com/vmware/pyvcloud/issues/529", "id": 447044694, "node_id": "MDU6SXNzdWU0NDcwNDQ2OTQ=", "number": 529, "title": "add_disk_to_vm cannot be idempotent", "user": {"login": "carmineesposito73", "id": 38761873, "node_id": "MDQ6VXNlcjM4NzYxODcz", "avatar_url": "https://avatars3.githubusercontent.com/u/38761873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmineesposito73", "html_url": "https://github.com/carmineesposito73", "followers_url": "https://api.github.com/users/carmineesposito73/followers", "following_url": "https://api.github.com/users/carmineesposito73/following{/other_user}", "gists_url": "https://api.github.com/users/carmineesposito73/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmineesposito73/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmineesposito73/subscriptions", "organizations_url": "https://api.github.com/users/carmineesposito73/orgs", "repos_url": "https://api.github.com/users/carmineesposito73/repos", "events_url": "https://api.github.com/users/carmineesposito73/events{/privacy}", "received_events_url": "https://api.github.com/users/carmineesposito73/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-22T10:02:29Z", "updated_at": "2019-10-03T07:51:35Z", "closed_at": "2019-08-07T09:33:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "add_disk_to_vm has only 2 arguments (vm_name, disk_size), there are no argument that identify the disk, so there's no way to create idempotent task (do nothing is the disk is already present).\r\nI suggest adding an optionale parameter to identify the disk, address of parent or disk_id (I prefer the first because, on vcloud UI, is the only visible parameter)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/522", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/522/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/522/events", "html_url": "https://github.com/vmware/pyvcloud/issues/522", "id": 443932588, "node_id": "MDU6SXNzdWU0NDM5MzI1ODg=", "number": 522, "title": "ChangeSid parameter is not supported in guest os customization", "user": {"login": "carmineesposito73", "id": 38761873, "node_id": "MDQ6VXNlcjM4NzYxODcz", "avatar_url": "https://avatars3.githubusercontent.com/u/38761873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmineesposito73", "html_url": "https://github.com/carmineesposito73", "followers_url": "https://api.github.com/users/carmineesposito73/followers", "following_url": "https://api.github.com/users/carmineesposito73/following{/other_user}", "gists_url": "https://api.github.com/users/carmineesposito73/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmineesposito73/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmineesposito73/subscriptions", "organizations_url": "https://api.github.com/users/carmineesposito73/orgs", "repos_url": "https://api.github.com/users/carmineesposito73/repos", "events_url": "https://api.github.com/users/carmineesposito73/events{/privacy}", "received_events_url": "https://api.github.com/users/carmineesposito73/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-14T13:59:52Z", "updated_at": "2019-08-07T11:00:12Z", "closed_at": "2019-08-07T09:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I didn't find a way to set the ChangeSid parameter deploying a Windows VM", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/519", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/519/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/519/events", "html_url": "https://github.com/vmware/pyvcloud/issues/519", "id": 442350373, "node_id": "MDU6SXNzdWU0NDIzNTAzNzM=", "number": 519, "title": "Question: why vdc.get_gateway does not raise an exception if gw is not found?", "user": {"login": "carmineesposito73", "id": 38761873, "node_id": "MDQ6VXNlcjM4NzYxODcz", "avatar_url": "https://avatars3.githubusercontent.com/u/38761873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmineesposito73", "html_url": "https://github.com/carmineesposito73", "followers_url": "https://api.github.com/users/carmineesposito73/followers", "following_url": "https://api.github.com/users/carmineesposito73/following{/other_user}", "gists_url": "https://api.github.com/users/carmineesposito73/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmineesposito73/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmineesposito73/subscriptions", "organizations_url": "https://api.github.com/users/carmineesposito73/orgs", "repos_url": "https://api.github.com/users/carmineesposito73/repos", "events_url": "https://api.github.com/users/carmineesposito73/events{/privacy}", "received_events_url": "https://api.github.com/users/carmineesposito73/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-09T17:34:25Z", "updated_at": "2019-08-07T09:35:11Z", "closed_at": "2019-08-07T09:35:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "the vdc.get_gateway function differs from other get_something function: it returns None instead of raise an exception. why?\r\n\r\n```\r\n$ diff -u vdc.orig.py vdc.py \r\n--- vdc.orig.py\t2019-05-09 18:33:56.845583028 +0200\r\n+++ vdc.py\t2019-05-09 18:37:15.920578823 +0200\r\n@@ -1992,7 +1992,9 @@\r\n             equality_filter=name_filter)\r\n         records = list(query.execute())\r\n         if records is None or len(records) == 0:\r\n-            return None\r\n+            # return None\r\n+            raise EntityNotFoundException(\r\n+                'Gateway with name \\'%s\\' not found.' % name)\r\n         elif len(records) > 1:\r\n             raise MultipleRecordsException(\"Found multiple gateway named \"\r\n                                            \"'%s',\" % name)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/518", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/518/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/518/events", "html_url": "https://github.com/vmware/pyvcloud/issues/518", "id": 442346185, "node_id": "MDU6SXNzdWU0NDIzNDYxODU=", "number": 518, "title": "Qestion: why there's no create_gateway function available for api prior than 30?", "user": {"login": "carmineesposito73", "id": 38761873, "node_id": "MDQ6VXNlcjM4NzYxODcz", "avatar_url": "https://avatars3.githubusercontent.com/u/38761873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmineesposito73", "html_url": "https://github.com/carmineesposito73", "followers_url": "https://api.github.com/users/carmineesposito73/followers", "following_url": "https://api.github.com/users/carmineesposito73/following{/other_user}", "gists_url": "https://api.github.com/users/carmineesposito73/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmineesposito73/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmineesposito73/subscriptions", "organizations_url": "https://api.github.com/users/carmineesposito73/orgs", "repos_url": "https://api.github.com/users/carmineesposito73/repos", "events_url": "https://api.github.com/users/carmineesposito73/events{/privacy}", "received_events_url": "https://api.github.com/users/carmineesposito73/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-09T17:23:15Z", "updated_at": "2019-08-08T09:07:13Z", "closed_at": "2019-08-07T09:35:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using vcloud with api 27.0 and https://github.com/vmware/ansible-module-vcloud-director  to create a gateway edge. The module vcd_vdc_gateway.py call the function vdc.create_gateway that is no more available in 20.1.0\r\n```\r\ngrep \"def create_gateway\" /usr/local/lib/python3.6/dist-packages/pyvcloud/vcd/vdc.py\r\n    def create_gateway_api_version_32(\r\n    def create_gateway_api_version_30(\r\n    def create_gateway_api_version_31(\r\n```\r\nwhile it was in 20.0.1 present in version 20.0.1\r\n```\r\ngrep \"def create_gateway\" vcd/vdc.py \r\n    def create_gateway(\r\n    def create_gateway_api_version_30(\r\n```\r\ndoes it mean that the api 27.0 is no more supported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/515", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/515/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/515/events", "html_url": "https://github.com/vmware/pyvcloud/issues/515", "id": 433168177, "node_id": "MDU6SXNzdWU0MzMxNjgxNzc=", "number": 515, "title": "Add a method to modify a VDC", "user": {"login": "surfer190", "id": 3285222, "node_id": "MDQ6VXNlcjMyODUyMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3285222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surfer190", "html_url": "https://github.com/surfer190", "followers_url": "https://api.github.com/users/surfer190/followers", "following_url": "https://api.github.com/users/surfer190/following{/other_user}", "gists_url": "https://api.github.com/users/surfer190/gists{/gist_id}", "starred_url": "https://api.github.com/users/surfer190/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surfer190/subscriptions", "organizations_url": "https://api.github.com/users/surfer190/orgs", "repos_url": "https://api.github.com/users/surfer190/repos", "events_url": "https://api.github.com/users/surfer190/events{/privacy}", "received_events_url": "https://api.github.com/users/surfer190/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-15T08:56:33Z", "updated_at": "2020-05-27T03:18:44Z", "closed_at": "2019-08-07T09:39:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of 20.1.0, there is no method to modify an existing VDC.\r\n\r\nAdd a method to modify a VDC, you can read the information about the [API call to modify a VDC](https://vdc-repo.vmware.com/vmwb-repository/dcr-public/f27d65ea-c25b-45ed-9193-c8cc77507622/9a1f04e3-359b-4a19-9c62-7c0fafdfeac8/doc/doc/types/AdminVdcType.html)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/512", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/512/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/512/events", "html_url": "https://github.com/vmware/pyvcloud/issues/512", "id": 429358050, "node_id": "MDU6SXNzdWU0MjkzNTgwNTA=", "number": 512, "title": "Can I set or modify Org lease policies?", "user": {"login": "Cylindric", "id": 215695, "node_id": "MDQ6VXNlcjIxNTY5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/215695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cylindric", "html_url": "https://github.com/Cylindric", "followers_url": "https://api.github.com/users/Cylindric/followers", "following_url": "https://api.github.com/users/Cylindric/following{/other_user}", "gists_url": "https://api.github.com/users/Cylindric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cylindric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cylindric/subscriptions", "organizations_url": "https://api.github.com/users/Cylindric/orgs", "repos_url": "https://api.github.com/users/Cylindric/repos", "events_url": "https://api.github.com/users/Cylindric/events{/privacy}", "received_events_url": "https://api.github.com/users/Cylindric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-04T15:55:04Z", "updated_at": "2019-11-12T11:38:24Z", "closed_at": "2019-08-07T09:43:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using  pyvcloud to deploy various resources to vCD, and can't seem to find a way to set the lease policies on an Org. I'm talking about the settings in the Organization Properties window under \"Policies\"/\"Leases\".\r\n\r\nI can't find any reference to `lease` in org.py, system.py or anywhere else really. Currently new Orgs are just adopting a default 7 day lease.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/508", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/508/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/508/events", "html_url": "https://github.com/vmware/pyvcloud/issues/508", "id": 428910724, "node_id": "MDU6SXNzdWU0Mjg5MTA3MjQ=", "number": 508, "title": "Error deleting organization when the options 'force' and 'recursive' are set to true", "user": {"login": "randalb1991", "id": 10707967, "node_id": "MDQ6VXNlcjEwNzA3OTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10707967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randalb1991", "html_url": "https://github.com/randalb1991", "followers_url": "https://api.github.com/users/randalb1991/followers", "following_url": "https://api.github.com/users/randalb1991/following{/other_user}", "gists_url": "https://api.github.com/users/randalb1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/randalb1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randalb1991/subscriptions", "organizations_url": "https://api.github.com/users/randalb1991/orgs", "repos_url": "https://api.github.com/users/randalb1991/repos", "events_url": "https://api.github.com/users/randalb1991/events{/privacy}", "received_events_url": "https://api.github.com/users/randalb1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-03T18:25:21Z", "updated_at": "2019-07-04T05:53:13Z", "closed_at": "2019-07-04T05:52:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue is caused by the function **delete_org** in **system.py** is setting the variables without the name of expected variables to **delete_resource** in **client.py** :\r\n\r\n```\r\n    def delete_org(self, org_name, force=None, recursive=None):\r\n        org_resource = self.client.get_org_by_name(org_name)\r\n        org_admin_href = get_admin_href(org_resource.get('href'))\r\n        return self.client.delete_resource(org_admin_href, force, recursive)\r\n\r\n    def delete_resource(self, uri, params=None, force=False, recursive=False):\r\n        full_uri = '%s?force=%s&recursive=%s' % (uri, force, recursive)\r\n        return self._do_request('DELETE', full_uri, params=params)\r\n\r\n```\r\n\r\nSo the variable **force** in the function **delete_org** is interpeted as **params** in **delete_resource** function  and the final uri is:\r\n\r\n `https://<vcd-endpoint>/api/admin/org/xxxx?force=True&recursive=False&True`\r\n\r\nTo solve this issue the funtion **delete_org** should be the following:\r\n\r\n```\r\n    def delete_org(self, org_name, force=None, recursive=None):\r\n        org_resource = self.client.get_org_by_name(org_name)\r\n        org_admin_href = get_admin_href(org_resource.get('href'))\r\n        return self.client.delete_resource(org_admin_href, force=force, recursive=recursive)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/505", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/505/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/505/events", "html_url": "https://github.com/vmware/pyvcloud/issues/505", "id": 427892486, "node_id": "MDU6SXNzdWU0Mjc4OTI0ODY=", "number": 505, "title": "Unsupported parameters for (vcd_catalog) module", "user": {"login": "SooqaEffect", "id": 37033207, "node_id": "MDQ6VXNlcjM3MDMzMjA3", "avatar_url": "https://avatars0.githubusercontent.com/u/37033207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SooqaEffect", "html_url": "https://github.com/SooqaEffect", "followers_url": "https://api.github.com/users/SooqaEffect/followers", "following_url": "https://api.github.com/users/SooqaEffect/following{/other_user}", "gists_url": "https://api.github.com/users/SooqaEffect/gists{/gist_id}", "starred_url": "https://api.github.com/users/SooqaEffect/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SooqaEffect/subscriptions", "organizations_url": "https://api.github.com/users/SooqaEffect/orgs", "repos_url": "https://api.github.com/users/SooqaEffect/repos", "events_url": "https://api.github.com/users/SooqaEffect/events{/privacy}", "received_events_url": "https://api.github.com/users/SooqaEffect/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-01T20:16:35Z", "updated_at": "2019-04-03T04:28:12Z", "closed_at": "2019-04-03T04:28:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Solved... Please, delete this issue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/498", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/498/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/498/events", "html_url": "https://github.com/vmware/pyvcloud/issues/498", "id": 424420329, "node_id": "MDU6SXNzdWU0MjQ0MjAzMjk=", "number": 498, "title": "Unable to create new vdc logging in as org admin", "user": {"login": "dev-dom", "id": 16184356, "node_id": "MDQ6VXNlcjE2MTg0MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/16184356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dev-dom", "html_url": "https://github.com/dev-dom", "followers_url": "https://api.github.com/users/dev-dom/followers", "following_url": "https://api.github.com/users/dev-dom/following{/other_user}", "gists_url": "https://api.github.com/users/dev-dom/gists{/gist_id}", "starred_url": "https://api.github.com/users/dev-dom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dev-dom/subscriptions", "organizations_url": "https://api.github.com/users/dev-dom/orgs", "repos_url": "https://api.github.com/users/dev-dom/repos", "events_url": "https://api.github.com/users/dev-dom/events{/privacy}", "received_events_url": "https://api.github.com/users/dev-dom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-22T22:20:29Z", "updated_at": "2019-03-27T21:53:29Z", "closed_at": "2019-03-27T21:53:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I create a new vdc logging into vcd as the SYSTEM org, the new vdc will belong to SYSTEM, which is not useful.\r\n\r\nIf I try to create a new vdc logging into the vcd/org/<org_name> with the local admin account, I will get an error:\r\n\r\n`File \"/usr/local/lib/python3.6/dist-packages/pyvcloud/vcd/org.py\", line 1462, in create_org_vdc pvdc = system.get_provider_vdc(provider_vdc_name) File \"/usr/local/lib/python3.6/dist-packages/pyvcloud/vcd/system.py\", line 300, in get_provider_vdc 'access to resource is forbidden' % name)`\r\n\r\nThis error is clear to me: not being the SYSTEM admin I cannot get the list of PVDC.\r\n\r\nFrom the source:\r\n\r\n```\r\ndef create_org_vdc(self,\r\n                       vdc_name,\r\n                       provider_vdc_name,\r\n                       description='',\r\n                       <snip>\r\n                       is_enabled=True):\r\n        \"\"\"Create an Organization VDC in the current organization.\r\n        :param str vdc_name: name of the new org vdc.\r\n        :param str provider_vdc_name: (str): The name of an existing provider\r\n            vdc.\r\n```\r\n\r\nthe function create_org_vdc implies you are logged as org admin, but these lines:\r\n\r\n```\r\n sys_admin_resource = self.client.get_admin()\r\n system = System(self.client, admin_resource=sys_admin_resource)\r\n pvdc = system.get_provider_vdc(provider_vdc_name)\r\n```\r\n\r\nwill fail as the org admin cannot get the list of provider vdcs (see error reported above)\r\n\r\nUnless I am missing something, this appears to be a bug?\r\n\r\nThanks,\r\ndom", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/487", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/487/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/487/events", "html_url": "https://github.com/vmware/pyvcloud/issues/487", "id": 419759116, "node_id": "MDU6SXNzdWU0MTk3NTkxMTY=", "number": 487, "title": "Incorrect implementation of method list_rights_available_in_system in org.py", "user": {"login": "rocknes", "id": 4933668, "node_id": "MDQ6VXNlcjQ5MzM2Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4933668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rocknes", "html_url": "https://github.com/rocknes", "followers_url": "https://api.github.com/users/rocknes/followers", "following_url": "https://api.github.com/users/rocknes/following{/other_user}", "gists_url": "https://api.github.com/users/rocknes/gists{/gist_id}", "starred_url": "https://api.github.com/users/rocknes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rocknes/subscriptions", "organizations_url": "https://api.github.com/users/rocknes/orgs", "repos_url": "https://api.github.com/users/rocknes/repos", "events_url": "https://api.github.com/users/rocknes/events{/privacy}", "received_events_url": "https://api.github.com/users/rocknes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T01:31:42Z", "updated_at": "2019-07-03T11:13:53Z", "closed_at": "2019-07-03T11:13:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rights in vCD can exist without being assigned to system organization. The current implementation of list_rights_available_in_system, is listing all rights present across vCD. We should probably rename the method. Speaking generally, the method itself might be useless, since I don't see a reason why we should special case system organization. However the need to be able to list all rights in vCD shouldn't be thrown away.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/486", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/486/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/486/events", "html_url": "https://github.com/vmware/pyvcloud/issues/486", "id": 419740905, "node_id": "MDU6SXNzdWU0MTk3NDA5MDU=", "number": 486, "title": "In org.py, method remove_right does not raise error if a spurious right name is passed as input", "user": {"login": "rocknes", "id": 4933668, "node_id": "MDQ6VXNlcjQ5MzM2Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4933668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rocknes", "html_url": "https://github.com/rocknes", "followers_url": "https://api.github.com/users/rocknes/followers", "following_url": "https://api.github.com/users/rocknes/following{/other_user}", "gists_url": "https://api.github.com/users/rocknes/gists{/gist_id}", "starred_url": "https://api.github.com/users/rocknes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rocknes/subscriptions", "organizations_url": "https://api.github.com/users/rocknes/orgs", "repos_url": "https://api.github.com/users/rocknes/repos", "events_url": "https://api.github.com/users/rocknes/events{/privacy}", "received_events_url": "https://api.github.com/users/rocknes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T00:07:28Z", "updated_at": "2019-07-03T11:12:39Z", "closed_at": "2019-07-03T11:12:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In org.py, method remove_right does not raise error if a spurious right name is passed as input", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/481", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/481/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/481/events", "html_url": "https://github.com/vmware/pyvcloud/issues/481", "id": 417621064, "node_id": "MDU6SXNzdWU0MTc2MjEwNjQ=", "number": 481, "title": "Create gateway IP configuration does not work", "user": {"login": "cdivitotawela", "id": 1728667, "node_id": "MDQ6VXNlcjE3Mjg2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1728667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdivitotawela", "html_url": "https://github.com/cdivitotawela", "followers_url": "https://api.github.com/users/cdivitotawela/followers", "following_url": "https://api.github.com/users/cdivitotawela/following{/other_user}", "gists_url": "https://api.github.com/users/cdivitotawela/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdivitotawela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdivitotawela/subscriptions", "organizations_url": "https://api.github.com/users/cdivitotawela/orgs", "repos_url": "https://api.github.com/users/cdivitotawela/repos", "events_url": "https://api.github.com/users/cdivitotawela/events{/privacy}", "received_events_url": "https://api.github.com/users/cdivitotawela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-06T04:46:46Z", "updated_at": "2019-03-08T03:42:39Z", "closed_at": "2019-03-08T03:42:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a edge gateway is created for vDC, we provide \r\n```python\r\nis_ip_settings_configured = True\r\next_net_to_participated_subnet_with_ip_settings = { 'test-external-network': { '10.9.10.1/24': '10.9.10.170' }}\r\n```\r\nI have noticed a bug where that it compares a string and int and IP is never configured. Problem is in function _create_gateway_configuration_param\r\n```python\r\nif subnet_arr[0] == ip_scope.Gateway.text and \\\r\n   subnet_arr[1] == prefix_len:\r\n```\r\nHere prefix_len is int value which is returned by function netmask_to_cidr_prefix_len. On subnet_arr[1] which is the value 24 is string. This values is derived from the variable ext_net_to_participated_subnet_with_ip_settings splitting 10.9.10.1/24'. So its comparing str and int which will never match so no ip configure ever.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/478", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/478/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/478/events", "html_url": "https://github.com/vmware/pyvcloud/issues/478", "id": 416716203, "node_id": "MDU6SXNzdWU0MTY3MTYyMDM=", "number": 478, "title": "Add network to a vapp created from a template with no network defined", "user": {"login": "daviddiazwork", "id": 48203322, "node_id": "MDQ6VXNlcjQ4MjAzMzIy", "avatar_url": "https://avatars2.githubusercontent.com/u/48203322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daviddiazwork", "html_url": "https://github.com/daviddiazwork", "followers_url": "https://api.github.com/users/daviddiazwork/followers", "following_url": "https://api.github.com/users/daviddiazwork/following{/other_user}", "gists_url": "https://api.github.com/users/daviddiazwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/daviddiazwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daviddiazwork/subscriptions", "organizations_url": "https://api.github.com/users/daviddiazwork/orgs", "repos_url": "https://api.github.com/users/daviddiazwork/repos", "events_url": "https://api.github.com/users/daviddiazwork/events{/privacy}", "received_events_url": "https://api.github.com/users/daviddiazwork/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-04T09:50:21Z", "updated_at": "2019-08-07T09:48:12Z", "closed_at": "2019-08-07T09:48:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is possible to add a network when there is no one defined in the template?.\r\nAs i see in the code you cant use a template with no network (the line \"assert len(template_networks) > 0\")", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/474", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/474/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/474/events", "html_url": "https://github.com/vmware/pyvcloud/issues/474", "id": 416274172, "node_id": "MDU6SXNzdWU0MTYyNzQxNzI=", "number": 474, "title": "vCloud Organisation metadata support", "user": {"login": "chitashvili", "id": 9607432, "node_id": "MDQ6VXNlcjk2MDc0MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9607432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chitashvili", "html_url": "https://github.com/chitashvili", "followers_url": "https://api.github.com/users/chitashvili/followers", "following_url": "https://api.github.com/users/chitashvili/following{/other_user}", "gists_url": "https://api.github.com/users/chitashvili/gists{/gist_id}", "starred_url": "https://api.github.com/users/chitashvili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chitashvili/subscriptions", "organizations_url": "https://api.github.com/users/chitashvili/orgs", "repos_url": "https://api.github.com/users/chitashvili/repos", "events_url": "https://api.github.com/users/chitashvili/events{/privacy}", "received_events_url": "https://api.github.com/users/chitashvili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-01T20:51:01Z", "updated_at": "2019-08-07T09:51:01Z", "closed_at": "2019-08-07T09:51:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello community,\r\n\r\nI have big needs to be able to inject metadata to Org/VDC. I was looking to example of VDC metadata and with same code I was able to reproduce it in Organization case. I have fork with that feature but sadly I am not good enough as python developer. I will highly appreciate if someone can review it and give some advice or guidance or use it as source for proper PR.\r\n\r\nrefer to: https://github.com/chitashvili/pyvcloud/commit/d95aaa33bd702aec242159eed70ac3dce30979d2\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/463", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/463/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/463/events", "html_url": "https://github.com/vmware/pyvcloud/issues/463", "id": 413396302, "node_id": "MDU6SXNzdWU0MTMzOTYzMDI=", "number": 463, "title": "issue with getting CPU and MEM ", "user": {"login": "387119", "id": 44392341, "node_id": "MDQ6VXNlcjQ0MzkyMzQx", "avatar_url": "https://avatars3.githubusercontent.com/u/44392341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/387119", "html_url": "https://github.com/387119", "followers_url": "https://api.github.com/users/387119/followers", "following_url": "https://api.github.com/users/387119/following{/other_user}", "gists_url": "https://api.github.com/users/387119/gists{/gist_id}", "starred_url": "https://api.github.com/users/387119/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/387119/subscriptions", "organizations_url": "https://api.github.com/users/387119/orgs", "repos_url": "https://api.github.com/users/387119/repos", "events_url": "https://api.github.com/users/387119/events{/privacy}", "received_events_url": "https://api.github.com/users/387119/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-22T13:07:30Z", "updated_at": "2019-08-08T13:27:42Z", "closed_at": "2019-08-07T09:53:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "vCloud Director version: 8.20.0.6875354\r\ndoc: https://vmware.github.io/pyvcloud/pyvcloud.vcd.vm.html\r\n\r\nexample:\r\nvm = VM(client, resource=vm_resource)\r\nvm_mem=vm.get_memory()\r\n\r\nTraceback (most recent call last):\r\n  File \"list-vcloud-all-resources.py\", line 147, in <module>\r\n    vm_mem=vm.get_memory()\r\n  File \"/opt/vcloud/pyvcloud/vcd/vm.py\", line 111, in get_memory\r\n    self.resource.VmSpecSection.MemoryResourceMb.Configured.text)\r\n  File \"src/lxml/objectify.pyx\", line 231, in lxml.objectify.ObjectifiedElement.__getattr__\r\n  File \"src/lxml/objectify.pyx\", line 451, in lxml.objectify._lookupChildOrRaise\r\nAttributeError: no such child: {http://www.vmware.com/vcloud/v1.5}VmSpecSection\r\n\r\nvm_cpu=vm.get_cpus()\r\n\r\nTraceback (most recent call last):\r\n  File \"list-vcloud-all-resources.py\", line 147, in <module>\r\n    vm_cpus=vm.get_cpus()\r\n  File \"/opt/vcloud/pyvcloud/vcd/vm.py\", line 97, in get_cpus\r\n    int(self.resource.VmSpecSection.NumCpus.text),\r\n  File \"src/lxml/objectify.pyx\", line 231, in lxml.objectify.ObjectifiedElement.__getattr__\r\n  File \"src/lxml/objectify.pyx\", line 451, in lxml.objectify._lookupChildOrRaise\r\nAttributeError: no such child: {http://www.vmware.com/vcloud/v1.5}VmSpecSection\r\n\r\nfor example other commands:\r\nget_power_state & get_resources - work with no issues\r\n\r\nstate=vm.get_power_state()\r\nprint (state)\r\nresult: 4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/438", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/438/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/438/events", "html_url": "https://github.com/vmware/pyvcloud/issues/438", "id": 409565264, "node_id": "MDU6SXNzdWU0MDk1NjUyNjQ=", "number": 438, "title": "Python 3.6 and above required", "user": {"login": "cdivitotawela", "id": 1728667, "node_id": "MDQ6VXNlcjE3Mjg2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1728667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdivitotawela", "html_url": "https://github.com/cdivitotawela", "followers_url": "https://api.github.com/users/cdivitotawela/followers", "following_url": "https://api.github.com/users/cdivitotawela/following{/other_user}", "gists_url": "https://api.github.com/users/cdivitotawela/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdivitotawela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdivitotawela/subscriptions", "organizations_url": "https://api.github.com/users/cdivitotawela/orgs", "repos_url": "https://api.github.com/users/cdivitotawela/repos", "events_url": "https://api.github.com/users/cdivitotawela/events{/privacy}", "received_events_url": "https://api.github.com/users/cdivitotawela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-13T00:25:38Z", "updated_at": "2019-07-03T10:39:42Z", "closed_at": "2019-07-03T10:39:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "My understanding reading the README.md that pyvcloud module requires python3. At least I could not see any reference it says we require Python 3.6 or above. I struggled with following error before I realized that the syntax f\"{href}/{domain.value}/{key}\" is not valid for python 3.5. \r\n\r\n`File \\\"/venv/ansible/lib/python3.5/site-packages/pyvcloud/vcd/metadata.py\\\", line 207\\n    f\\\"{href}/{domain.value}/{key}\\\"\\n                                 ^\\nSyntaxError: invalid syntax\\n\"`\r\n\r\nCan update documentation (if it is not there already) indicating python 3.6 or above is required for the module please. I am happy to update the document and make a pull request if needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/406", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/406/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/406/events", "html_url": "https://github.com/vmware/pyvcloud/issues/406", "id": 406179736, "node_id": "MDU6SXNzdWU0MDYxNzk3MzY=", "number": 406, "title": "Support for custom LDAP settings", "user": {"login": "cdivitotawela", "id": 1728667, "node_id": "MDQ6VXNlcjE3Mjg2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1728667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdivitotawela", "html_url": "https://github.com/cdivitotawela", "followers_url": "https://api.github.com/users/cdivitotawela/followers", "following_url": "https://api.github.com/users/cdivitotawela/following{/other_user}", "gists_url": "https://api.github.com/users/cdivitotawela/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdivitotawela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdivitotawela/subscriptions", "organizations_url": "https://api.github.com/users/cdivitotawela/orgs", "repos_url": "https://api.github.com/users/cdivitotawela/repos", "events_url": "https://api.github.com/users/cdivitotawela/events{/privacy}", "received_events_url": "https://api.github.com/users/cdivitotawela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-02-04T04:42:43Z", "updated_at": "2019-10-14T08:28:51Z", "closed_at": "2019-08-07T09:46:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nI have a requirement to configure custom LDAP settings at the time of the organization creation. I cannot find a way to do that via library. When I check the REST API reference it has OrgLdapSettings element. Is configuring LDAP not available in the module?\r\n\r\nReference:\r\nhttps://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/AdminOrgType.html\r\n\r\nThanks,\r\nChaminda", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/393", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/393/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/393/events", "html_url": "https://github.com/vmware/pyvcloud/issues/393", "id": 401835522, "node_id": "MDU6SXNzdWU0MDE4MzU1MjI=", "number": 393, "title": "vcd_login connection question", "user": {"login": "pjamelot", "id": 17111493, "node_id": "MDQ6VXNlcjE3MTExNDkz", "avatar_url": "https://avatars0.githubusercontent.com/u/17111493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjamelot", "html_url": "https://github.com/pjamelot", "followers_url": "https://api.github.com/users/pjamelot/followers", "following_url": "https://api.github.com/users/pjamelot/following{/other_user}", "gists_url": "https://api.github.com/users/pjamelot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjamelot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjamelot/subscriptions", "organizations_url": "https://api.github.com/users/pjamelot/orgs", "repos_url": "https://api.github.com/users/pjamelot/repos", "events_url": "https://api.github.com/users/pjamelot/events{/privacy}", "received_events_url": "https://api.github.com/users/pjamelot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-22T16:03:52Z", "updated_at": "2019-07-03T10:36:22Z", "closed_at": "2019-07-03T10:36:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n  pyvcloud==20.0.2\r\n  vcd=8.2\r\n  python 3.6.3\r\n  \r\nI can't connect to my vcloud with my config (I used api_version 27.0), I tried the same credentials with vcd-cli and it works fine.\r\nCould you help me on this issue  ?\r\n\r\npython -m unittest vcd_login\r\nE\r\n======================================================================\r\nERROR: setUpClass (vcd_login.TestLogin)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/.local/lib/python3.6/site-packages/pyvcloud/vcd/test.py\", line 50, in setUpClass\r\n    cls.config['vcd']['password']))\r\n  File \"/root/.local/lib/python3.6/site-packages/pyvcloud/vcd/client.py\", line 819, in set_credentials\r\n    sc, self._get_response_request_id(response), r)\r\n  File \"/root/.local/lib/python3.6/site-packages/pyvcloud/vcd/client.py\", line 924, in _response_code_to_exception\r\n    raise AccessForbiddenException(sc, request_id, objectify_response)\r\npyvcloud.vcd.exceptions.AccessForbiddenException: Status code: 403/ACCESS_TO_RESOURCE_IS_FORBIDDEN, Access is forbidden (request id: ae950f43-ef8a-4d97-b078-724495e8b211)\r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.076s\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/383", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/383/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/383/events", "html_url": "https://github.com/vmware/pyvcloud/issues/383", "id": 400235388, "node_id": "MDU6SXNzdWU0MDAyMzUzODg=", "number": 383, "title": "add_disk_to_vm issue", "user": {"login": "sztranyovszky", "id": 11715183, "node_id": "MDQ6VXNlcjExNzE1MTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/11715183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sztranyovszky", "html_url": "https://github.com/sztranyovszky", "followers_url": "https://api.github.com/users/sztranyovszky/followers", "following_url": "https://api.github.com/users/sztranyovszky/following{/other_user}", "gists_url": "https://api.github.com/users/sztranyovszky/gists{/gist_id}", "starred_url": "https://api.github.com/users/sztranyovszky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sztranyovszky/subscriptions", "organizations_url": "https://api.github.com/users/sztranyovszky/orgs", "repos_url": "https://api.github.com/users/sztranyovszky/repos", "events_url": "https://api.github.com/users/sztranyovszky/events{/privacy}", "received_events_url": "https://api.github.com/users/sztranyovszky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-17T11:35:03Z", "updated_at": "2019-08-07T09:59:02Z", "closed_at": "2019-08-07T09:59:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Disk addition doesn't work, it is needed to change \"self.client.\" to \"self.client.client.\" in \"add_disk_to_vm\" (in vapp.py).  Also address can't be 7 (see [this link](https://github.com/gds-operations/vcloud-launcher/issues/104)).\r\n\r\nI changed the method as follows to make it work:\r\n\r\n```python\r\n\t\tvm = self.get_vm(vm_name)\r\n\t\tdisk_list = self.client.client.get_resource(\r\n\t\t\tvm.get('href') + '/virtualHardwareSection/disks')\r\n\t\tlast_disk = None\r\n\t\tfor disk in disk_list.Item:\r\n\t\t\tif disk['{' + NSMAP['rasd'] + '}Description'] == 'Hard disk':\r\n\t\t\t\tlast_disk = disk\r\n\t\tassert last_disk is not None\r\n\t\tnew_disk = deepcopy(last_disk)\r\n\t\taddr = int(str(\r\n\t\t\tlast_disk['{' + NSMAP['rasd'] + '}AddressOnParent'])) + 1\r\n\t\tif addr == 7:\r\n\t\t\taddr += 1\r\n\t\tinstance_id = int(str(\r\n\t\t\tlast_disk['{' + NSMAP['rasd'] + '}InstanceID'])) + 1\r\n\t\tnew_disk['{' + NSMAP['rasd'] + '}AddressOnParent'] = addr\r\n\t\tnew_disk['{' + NSMAP['rasd'] + '}ElementName'] = 'Hard disk %s' % addr\r\n\t\tnew_disk['{' + NSMAP['rasd'] + '}InstanceID'] = instance_id\r\n\t\tnew_disk['{' + NSMAP['rasd'] + '}VirtualQuantity'] = \\\r\n\t\t\tdisk_size * 1024 * 1024\r\n\t\tnew_disk['{' + NSMAP['rasd'] + '}HostResource'].set(\r\n\t\t\t'{' + NSMAP['vcloud'] + '}capacity', str(disk_size))\r\n\t\tdisk_list.append(new_disk)\r\n\t\treturn self.client.client.put_resource(\r\n\t\t\tvm.get('href') + '/virtualHardwareSection/disks', disk_list,\r\n\t\t\tEntityType.RASD_ITEMS_LIST.value)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/350", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/350/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/350/events", "html_url": "https://github.com/vmware/pyvcloud/issues/350", "id": 395868302, "node_id": "MDU6SXNzdWUzOTU4NjgzMDI=", "number": 350, "title": "Replace flufl.enum with standard enum package", "user": {"login": "dwettstein", "id": 412133, "node_id": "MDQ6VXNlcjQxMjEzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/412133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwettstein", "html_url": "https://github.com/dwettstein", "followers_url": "https://api.github.com/users/dwettstein/followers", "following_url": "https://api.github.com/users/dwettstein/following{/other_user}", "gists_url": "https://api.github.com/users/dwettstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwettstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwettstein/subscriptions", "organizations_url": "https://api.github.com/users/dwettstein/orgs", "repos_url": "https://api.github.com/users/dwettstein/repos", "events_url": "https://api.github.com/users/dwettstein/events{/privacy}", "received_events_url": "https://api.github.com/users/dwettstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T09:58:12Z", "updated_at": "2019-01-15T08:20:57Z", "closed_at": "2019-01-15T08:20:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The flufl.enum dependency should be replaced with the standard enum package which was added to Python 3.4 almost 5 years ago.\r\n\r\nAccording to the flufl.enum project page, it is deprecated anyway:\r\n\r\n> **Note: This package is deprecated!** Python 3.4 added an enum package to its\r\n`standard library`_ which is also available as a `third party package`_ on\r\nPyPI for older versions of Python. If you are using `flufl.enum` you should\r\nswitch to the standard enum package.\r\n\r\nReference: https://pypi.org/project/flufl.enum/\r\n\r\nAdditionally, earlier versions of Python 3 than 3.4 are already end of life (see https://devguide.python.org/devcycle/).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/337", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/337/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/337/events", "html_url": "https://github.com/vmware/pyvcloud/issues/337", "id": 388638740, "node_id": "MDU6SXNzdWUzODg2Mzg3NDA=", "number": 337, "title": "Organization settings update.", "user": {"login": "chitashvili", "id": 9607432, "node_id": "MDQ6VXNlcjk2MDc0MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9607432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chitashvili", "html_url": "https://github.com/chitashvili", "followers_url": "https://api.github.com/users/chitashvili/followers", "following_url": "https://api.github.com/users/chitashvili/following{/other_user}", "gists_url": "https://api.github.com/users/chitashvili/gists{/gist_id}", "starred_url": "https://api.github.com/users/chitashvili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chitashvili/subscriptions", "organizations_url": "https://api.github.com/users/chitashvili/orgs", "repos_url": "https://api.github.com/users/chitashvili/repos", "events_url": "https://api.github.com/users/chitashvili/events{/privacy}", "received_events_url": "https://api.github.com/users/chitashvili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-07T12:39:41Z", "updated_at": "2019-08-13T17:48:49Z", "closed_at": "2019-08-07T10:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello community,\r\n\r\nIt is more like nice feature rather than issue.\r\nDo you have any plans to add functionality to update Organization settings like go-vcloud library has?\r\nExample:\r\n\r\n```\r\n\torgSettings := &types.OrgSettings{\r\n\t\tOrgGeneralSettings: &types.OrgGeneralSettings{\r\n\t\t\tCanPublishCatalogs:       false,\r\n\t\t\tDeployedVMQuota:          0,\r\n\t\t\tStoredVMQuota:            0,\r\n\t\t\tUseServerBootSequence:    true,\r\n\t\t\tDelayAfterPowerOnSeconds: 3,\r\n\t\t},\r\n\t\tOrgVAppTemplateSettings: &types.VAppTemplateLeaseSettings{\r\n\t\t\tDeleteOnStorageLeaseExpiration: true,\r\n\t\t\tStorageLeaseSeconds:            0,\r\n\t\t},\r\n\t\tOrgVAppLeaseSettings: &types.VAppLeaseSettings{\r\n\t\t\tPowerOffOnRuntimeLeaseExpiration: true,\r\n\t\t\tDeploymentLeaseSeconds:           0,\r\n\t\t\tDeleteOnStorageLeaseExpiration:   true,\r\n\t\t\tStorageLeaseSeconds:              0,\r\n\t\t},\r\n\t\tOrgLdapSettings: &types.OrgLdapSettingsType{\r\n\t\t\tOrgLdapMode: \"NONE\",\r\n\t\t},\r\n\t}\r\n```\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/334", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/334/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/334/events", "html_url": "https://github.com/vmware/pyvcloud/issues/334", "id": 387088133, "node_id": "MDU6SXNzdWUzODcwODgxMzM=", "number": 334, "title": "How to wait for catalog deletion?", "user": {"login": "andrew-ni", "id": 29108945, "node_id": "MDQ6VXNlcjI5MTA4OTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/29108945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-ni", "html_url": "https://github.com/andrew-ni", "followers_url": "https://api.github.com/users/andrew-ni/followers", "following_url": "https://api.github.com/users/andrew-ni/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-ni/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-ni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-ni/subscriptions", "organizations_url": "https://api.github.com/users/andrew-ni/orgs", "repos_url": "https://api.github.com/users/andrew-ni/repos", "events_url": "https://api.github.com/users/andrew-ni/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-ni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-04T02:11:34Z", "updated_at": "2019-08-07T10:02:40Z", "closed_at": "2019-08-07T10:02:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Relevant for CSE system testing.\r\n\r\nFor example:\r\n```python\r\norg.delete_catalog(catalog_name)\r\n# currently no way to wait for catalog deletion?\r\norg.reload\r\n# org resource does not reflect that the catalog has been deleted\r\n```\r\n\r\n- Even if I use `time.sleep(10)`, and reload after, the org is still not updated.\r\n- Cannot use `client.get_task_monitor().wait_for_success(task)` because we don't have the task.\r\n\r\nIs there a current way to wait for catalog deletion?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/332", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/332/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/332/events", "html_url": "https://github.com/vmware/pyvcloud/issues/332", "id": 386383081, "node_id": "MDU6SXNzdWUzODYzODMwODE=", "number": 332, "title": "error running list_vdc_resources exampple", "user": {"login": "chechuironman", "id": 356667, "node_id": "MDQ6VXNlcjM1NjY2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/356667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chechuironman", "html_url": "https://github.com/chechuironman", "followers_url": "https://api.github.com/users/chechuironman/followers", "following_url": "https://api.github.com/users/chechuironman/following{/other_user}", "gists_url": "https://api.github.com/users/chechuironman/gists{/gist_id}", "starred_url": "https://api.github.com/users/chechuironman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chechuironman/subscriptions", "organizations_url": "https://api.github.com/users/chechuironman/orgs", "repos_url": "https://api.github.com/users/chechuironman/repos", "events_url": "https://api.github.com/users/chechuironman/events{/privacy}", "received_events_url": "https://api.github.com/users/chechuironman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-30T23:06:39Z", "updated_at": "2019-08-07T10:03:26Z", "closed_at": "2019-08-07T10:03:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "(.venv) Ninja:pyvcloud chechu$ python examples/list-vdc-resources.py x.x.x.x  System Administrator ******\r\nTraceback (most recent call last):\r\n  File \"examples/list-vdc-resources.py\", line 18, in <module>\r\n    from pyvcloud.vcd.client import BasicLoginCredentials\r\n  File \"/Users/chechu/ICP/pyvcloud/pyvcloud/vcd/client.py\", line 1086\r\n    raise OperationNotSupportedException from e", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/325", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/325/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/325/events", "html_url": "https://github.com/vmware/pyvcloud/issues/325", "id": 383622573, "node_id": "MDU6SXNzdWUzODM2MjI1NzM=", "number": 325, "title": "dhcp in create_isolated_vdc_network() not working", "user": {"login": "MichalTaratuta", "id": 10025172, "node_id": "MDQ6VXNlcjEwMDI1MTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/10025172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichalTaratuta", "html_url": "https://github.com/MichalTaratuta", "followers_url": "https://api.github.com/users/MichalTaratuta/followers", "following_url": "https://api.github.com/users/MichalTaratuta/following{/other_user}", "gists_url": "https://api.github.com/users/MichalTaratuta/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichalTaratuta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichalTaratuta/subscriptions", "organizations_url": "https://api.github.com/users/MichalTaratuta/orgs", "repos_url": "https://api.github.com/users/MichalTaratuta/repos", "events_url": "https://api.github.com/users/MichalTaratuta/events{/privacy}", "received_events_url": "https://api.github.com/users/MichalTaratuta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-22T17:43:47Z", "updated_at": "2019-08-07T10:03:58Z", "closed_at": "2019-08-07T10:03:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working with `create_isolated_vdc_network()` and I have noticed that none of the parameters for DHCP are being implemented. No matter what the setting in python, GUI only shows a default DHCP configuration for my network.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/322", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/322/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/322/events", "html_url": "https://github.com/vmware/pyvcloud/issues/322", "id": 382183329, "node_id": "MDU6SXNzdWUzODIxODMzMjk=", "number": 322, "title": "New release ETA", "user": {"login": "MichalTaratuta", "id": 10025172, "node_id": "MDQ6VXNlcjEwMDI1MTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/10025172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichalTaratuta", "html_url": "https://github.com/MichalTaratuta", "followers_url": "https://api.github.com/users/MichalTaratuta/followers", "following_url": "https://api.github.com/users/MichalTaratuta/following{/other_user}", "gists_url": "https://api.github.com/users/MichalTaratuta/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichalTaratuta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichalTaratuta/subscriptions", "organizations_url": "https://api.github.com/users/MichalTaratuta/orgs", "repos_url": "https://api.github.com/users/MichalTaratuta/repos", "events_url": "https://api.github.com/users/MichalTaratuta/events{/privacy}", "received_events_url": "https://api.github.com/users/MichalTaratuta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-19T12:00:34Z", "updated_at": "2019-07-03T10:16:56Z", "closed_at": "2019-07-03T10:16:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi what is the ETA for a new release? Specifically when are you planing on releasing(via pip) **vcd.py** with **create_gateway** ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/320", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/320/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/320/events", "html_url": "https://github.com/vmware/pyvcloud/issues/320", "id": 381120849, "node_id": "MDU6SXNzdWUzODExMjA4NDk=", "number": 320, "title": "GHz is not a valid unit. Please use MHz", "user": {"login": "MichalTaratuta", "id": 10025172, "node_id": "MDQ6VXNlcjEwMDI1MTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/10025172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichalTaratuta", "html_url": "https://github.com/MichalTaratuta", "followers_url": "https://api.github.com/users/MichalTaratuta/followers", "following_url": "https://api.github.com/users/MichalTaratuta/following{/other_user}", "gists_url": "https://api.github.com/users/MichalTaratuta/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichalTaratuta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichalTaratuta/subscriptions", "organizations_url": "https://api.github.com/users/MichalTaratuta/orgs", "repos_url": "https://api.github.com/users/MichalTaratuta/repos", "events_url": "https://api.github.com/users/MichalTaratuta/events{/privacy}", "received_events_url": "https://api.github.com/users/MichalTaratuta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T11:35:03Z", "updated_at": "2019-08-07T10:04:39Z", "closed_at": "2019-08-07T10:04:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting errors about wrong units when creating `vdc` (`create_org_vdc`) one is for `GHz` the other one for `GB`. I'm not sure why, `GHz `and `GB` are allowed according to the documentation for create_org_vdc(). \r\n\r\n```py\r\ndef create_org_vdc()\r\n\r\n<...>\r\n\r\n:param str cpu_units: unit for compute capacity allocated to this vdc.\r\n            Accepted values are 'MHz' or 'GHz'.\r\n\r\n<...>\r\n\r\n:param str mem_units: unit for memory capacity allocated to this vdc.\r\n            Acceptable values are 'MB' or 'GB'.\r\n\r\n<...>\r\n\r\nunits: (string): Units used to define limit. One of MB or GB\r\n```\r\n\r\nAt the moment only `MHz` and `MB` are being allowed. \r\n\r\nMy code:\r\n```py\r\nfrom pyvcloud.vcd.system import System\r\nfrom pyvcloud.vcd.client import Client\r\nfrom pyvcloud.vcd.client import BasicLoginCredentials\r\nfrom pyvcloud.vcd.org import Org\r\n\r\nvdc_name = 'Ansible_AllocationVApp'\r\n\r\norg_name = 'Ansible'\r\norg = 'System'\r\nverify_ssl_certs = False\r\nuser = 'Administrator'\r\npassword = 'qwerty'\r\napi_version = '31.0'\r\nhost= '10.221.10.12'\r\n\r\nclient = Client(host, api_version=api_version,\r\n                      verify_ssl_certs=verify_ssl_certs)\r\n\r\nclient.set_credentials(BasicLoginCredentials(user, org, password))\r\n\r\norg_name = Org(client, resource=client.get_org_by_name(org_name))\r\n\r\nprovider_vdc_name = \"CLOUDLAB PROVIDER VDC\"\r\ndescription = \"DESCRIPTION\"\r\nallocation_model = \"AllocationVApp\"\r\nstorage_profiles = [{\"name\": \"GOLD TIER\",\r\n                     \"enabled\": True,\r\n                     \"units\": \"GB\",\r\n                     \"limit\": 300,\r\n                     \"default\": True }]\r\ncpu_units = \"GHz\"\r\ncpu_allocated = 5\r\ncpu_limit = 0\r\nmem_units = \"GB\"\r\nmem_allocated = 8\r\nmem_limit = 0\r\nnic_quota = 0\r\nnetwork_quota = 0\r\nvm_quota = 5\r\nresource_guaranteed_memory = 0.7\r\nresource_guaranteed_cpu = 0.5\r\nvcpu_in_mhz = 2000\r\nis_thin_provision = True\r\nnetwork_pool_name = \"CLOUDLAB PROVIDER VDC-VXLAN-NP\"\r\nuses_fast_provisioning = True\r\nover_commit_allowed = True\r\nvm_discovery_enabled = True\r\nis_enabled = True\r\n\r\n\r\norg_name.create_org_vdc(vdc_name=vdc_name,\r\n                   provider_vdc_name=provider_vdc_name,\r\n                   description=description,\r\n                   allocation_model=allocation_model,\r\n                   storage_profiles=storage_profiles,\r\n                   cpu_units=cpu_units,\r\n                   cpu_allocated=cpu_allocated,\r\n                   cpu_limit=cpu_limit,\r\n                   mem_units=mem_units,\r\n                   mem_allocated=mem_allocated,\r\n                   mem_limit=mem_limit,\r\n                   nic_quota=nic_quota,\r\n                   network_quota=network_quota,\r\n                   vm_quota=vm_quota,\r\n                   resource_guaranteed_memory=resource_guaranteed_memory,\r\n                   resource_guaranteed_cpu=resource_guaranteed_cpu,\r\n                   vcpu_in_mhz=vcpu_in_mhz,\r\n                   is_thin_provision=is_thin_provision,\r\n                   network_pool_name=network_pool_name,\r\n                   uses_fast_provisioning=uses_fast_provisioning,\r\n                   over_commit_allowed=over_commit_allowed,\r\n                   vm_discovery_enabled=vm_discovery_enabled,\r\n                   is_enabled=is_enabled)\r\n```\r\n\r\nThe error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nBadRequestException                       Traceback (most recent call last)\r\n<ipython-input-10-b7de4e40b569> in <module>\r\n     73                    over_commit_allowed=over_commit_allowed,\r\n     74                    vm_discovery_enabled=vm_discovery_enabled,\r\n---> 75                    is_enabled=is_enabled)\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyvcloud/vcd/org.py in create_org_vdc(self, vdc_name, provider_vdc_name, description, allocation_model, cpu_units, cpu_allocated, cpu_limit, mem_units, mem_allocated, mem_limit, nic_quota, network_quota, vm_quota, storage_profiles, resource_guaranteed_memory, resource_guaranteed_cpu, vcpu_in_mhz, is_thin_provision, network_pool_name, uses_fast_provisioning, over_commit_allowed, vm_discovery_enabled, is_enabled)\r\n   1513         return self.client.post_linked_resource(\r\n   1514             resource_admin, RelationType.ADD, EntityType.VDCS_PARAMS.value,\r\n-> 1515             params)\r\n   1516 \r\n   1517     def get_vdc(self, name):\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyvcloud/vcd/client.py in post_linked_resource(self, resource, rel, media_type, contents)\r\n   1086             return self.post_resource(\r\n   1087                 find_link(resource, rel, media_type).href, contents,\r\n-> 1088                 media_type)\r\n   1089         except MissingLinkException as e:\r\n   1090             raise OperationNotSupportedException(\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyvcloud/vcd/client.py in post_resource(self, uri, contents, media_type, objectify_results)\r\n   1070             contents=contents,\r\n   1071             media_type=media_type,\r\n-> 1072             objectify_results=objectify_results)\r\n   1073 \r\n   1074     def post_linked_resource(self, resource, rel, media_type, contents):\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyvcloud/vcd/client.py in _do_request(self, method, uri, contents, media_type, objectify_results)\r\n    859 \r\n    860         self._response_code_to_exception(sc, self._get_response_request_id(\r\n--> 861             response), _objectify_response(response, objectify_results))\r\n    862 \r\n    863     @staticmethod\r\n\r\n/usr/local/lib/python3.5/dist-packages/pyvcloud/vcd/client.py in _response_code_to_exception(sc, request_id, objectify_response)\r\n    864     def _response_code_to_exception(sc, request_id, objectify_response):\r\n    865         if sc == 400:\r\n--> 866             raise BadRequestException(sc, request_id, objectify_response)\r\n    867 \r\n    868         if sc == 401:\r\n\r\nBadRequestException: Status code: 400/BAD_REQUEST, GHz is not a valid unit. Please use MHz (request id: 8ef31505-8123-4861-9617-965d3272aa6f)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/311", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/311/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/311/events", "html_url": "https://github.com/vmware/pyvcloud/issues/311", "id": 376250746, "node_id": "MDU6SXNzdWUzNzYyNTA3NDY=", "number": 311, "title": "network boot ", "user": {"login": "poornachandratejasvi", "id": 24215565, "node_id": "MDQ6VXNlcjI0MjE1NTY1", "avatar_url": "https://avatars1.githubusercontent.com/u/24215565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poornachandratejasvi", "html_url": "https://github.com/poornachandratejasvi", "followers_url": "https://api.github.com/users/poornachandratejasvi/followers", "following_url": "https://api.github.com/users/poornachandratejasvi/following{/other_user}", "gists_url": "https://api.github.com/users/poornachandratejasvi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poornachandratejasvi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poornachandratejasvi/subscriptions", "organizations_url": "https://api.github.com/users/poornachandratejasvi/orgs", "repos_url": "https://api.github.com/users/poornachandratejasvi/repos", "events_url": "https://api.github.com/users/poornachandratejasvi/events{/privacy}", "received_events_url": "https://api.github.com/users/poornachandratejasvi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212112, "node_id": "MDU6TGFiZWwxNDcyMTIxMTI=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-01T04:35:11Z", "updated_at": "2019-07-03T10:21:44Z", "closed_at": "2019-07-03T10:21:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "im not able to find a way to reboot vapp vm and get it into network boot using pyvcloud, if this feature is not there, can any one creating it, if it already exits can any one say how to get it done, already the os is installed and its running need to get it in to network boot mode while powering on the vapp vm ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/307", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/307/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/307/events", "html_url": "https://github.com/vmware/pyvcloud/issues/307", "id": 375152734, "node_id": "MDU6SXNzdWUzNzUxNTI3MzQ=", "number": 307, "title": "org.upload_ovf() should not print a stack trace", "user": {"login": "andrew-ni", "id": 29108945, "node_id": "MDQ6VXNlcjI5MTA4OTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/29108945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-ni", "html_url": "https://github.com/andrew-ni", "followers_url": "https://api.github.com/users/andrew-ni/followers", "following_url": "https://api.github.com/users/andrew-ni/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-ni/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-ni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-ni/subscriptions", "organizations_url": "https://api.github.com/users/andrew-ni/orgs", "repos_url": "https://api.github.com/users/andrew-ni/repos", "events_url": "https://api.github.com/users/andrew-ni/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-ni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-29T18:19:13Z", "updated_at": "2019-07-03T10:14:05Z", "closed_at": "2019-07-03T10:13:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In **org.py** line 651:\r\n\r\n```\r\nprint(traceback.format_exc())\r\n```\r\n\r\nThe traceback is already in the exception message.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/302", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/302/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/302/events", "html_url": "https://github.com/vmware/pyvcloud/issues/302", "id": 368249583, "node_id": "MDU6SXNzdWUzNjgyNDk1ODM=", "number": 302, "title": "OAUTH & SAML authentication ", "user": {"login": "kaneda-fr", "id": 7694620, "node_id": "MDQ6VXNlcjc2OTQ2MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7694620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaneda-fr", "html_url": "https://github.com/kaneda-fr", "followers_url": "https://api.github.com/users/kaneda-fr/followers", "following_url": "https://api.github.com/users/kaneda-fr/following{/other_user}", "gists_url": "https://api.github.com/users/kaneda-fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaneda-fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaneda-fr/subscriptions", "organizations_url": "https://api.github.com/users/kaneda-fr/orgs", "repos_url": "https://api.github.com/users/kaneda-fr/repos", "events_url": "https://api.github.com/users/kaneda-fr/events{/privacy}", "received_events_url": "https://api.github.com/users/kaneda-fr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212112, "node_id": "MDU6TGFiZWwxNDcyMTIxMTI=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-09T14:47:59Z", "updated_at": "2019-08-13T17:49:22Z", "closed_at": "2019-07-03T10:11:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs there any plan or work in progress to support OAUTH or SAML token based authentication ?\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/286", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/286/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/286/events", "html_url": "https://github.com/vmware/pyvcloud/issues/286", "id": 359844913, "node_id": "MDU6SXNzdWUzNTk4NDQ5MTM=", "number": 286, "title": "How insert (':') in tags using E ?", "user": {"login": "randalb1991", "id": 10707967, "node_id": "MDQ6VXNlcjEwNzA3OTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10707967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randalb1991", "html_url": "https://github.com/randalb1991", "followers_url": "https://api.github.com/users/randalb1991/followers", "following_url": "https://api.github.com/users/randalb1991/following{/other_user}", "gists_url": "https://api.github.com/users/randalb1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/randalb1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randalb1991/subscriptions", "organizations_url": "https://api.github.com/users/randalb1991/orgs", "repos_url": "https://api.github.com/users/randalb1991/repos", "events_url": "https://api.github.com/users/randalb1991/events{/privacy}", "received_events_url": "https://api.github.com/users/randalb1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-13T10:56:07Z", "updated_at": "2018-09-17T14:11:47Z", "closed_at": "2018-09-17T14:11:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I insert (':')  in XML tags for the request described in https://code.vmware.com/apis/220/vcloud#/doc/doc/operations/POST-UpdateVdcStorageClasses.html?\r\n\r\n`<?xml version=\"1.0\" encoding=\"UTF-8\"?> \r\n<vcloud:UpdateVdcStorageProfiles xmlns:vcloud = \"http://www.vmware.com/vcloud/v1.5\" > \r\n     <vcloud:AddStorageProfile> \r\n         <vcloud:Enabled>true</vcloud:Enabled> \r\n         <vcloud:Units>MB</vcloud:Units> \r\n         <vcloud:Limit >300</vcloud:Limit> \r\n         <vcloud:Default>false</vcloud:Default> \r\n         <vcloud:ProviderVdcStorageProfile \r\n             href = \"https://vcd_host/api/admin/pvdcStorageProfile/a7d4-ee4ef803e064\" \r\n             name = \"SILVER\" \r\n             type = \"application/vnd.vmware.admin.pvdcStorageProfile+xml\"/> \r\n     </vcloud:AddStorageProfile> \r\n</vcloud:UpdateVdcStorageProfiles> \r\n\r\n`\r\nPython show an error when ':' is inserted as part of the  tag:\r\n\r\n`UpdateVdcStorageProfiles = E.vcloud:UpdateVdcStorageProfiles `\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/285", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/285/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/285/events", "html_url": "https://github.com/vmware/pyvcloud/issues/285", "id": 359406882, "node_id": "MDU6SXNzdWUzNTk0MDY4ODI=", "number": 285, "title": "The method get resource of class PDVC is retrieving only one element for category", "user": {"login": "randalb1991", "id": 10707967, "node_id": "MDQ6VXNlcjEwNzA3OTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10707967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randalb1991", "html_url": "https://github.com/randalb1991", "followers_url": "https://api.github.com/users/randalb1991/followers", "following_url": "https://api.github.com/users/randalb1991/following{/other_user}", "gists_url": "https://api.github.com/users/randalb1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/randalb1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randalb1991/subscriptions", "organizations_url": "https://api.github.com/users/randalb1991/orgs", "repos_url": "https://api.github.com/users/randalb1991/repos", "events_url": "https://api.github.com/users/randalb1991/events{/privacy}", "received_events_url": "https://api.github.com/users/randalb1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-12T10:04:55Z", "updated_at": "2018-09-13T10:31:14Z", "closed_at": "2018-09-13T10:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a PVDC has many resources(networks, storages profiles...), this method return only the first for each category:\r\n\r\nStorage profiles returned by vCD API(and printed in pyvcloud logs)\r\n![captura2](https://user-images.githubusercontent.com/10707967/45418053-de384200-b683-11e8-986f-af4ba481a4d1.PNG)\r\n\r\nStorages profile returned by the method get_resource(only the first of them)\r\n![captura1](https://user-images.githubusercontent.com/10707967/45418052-de384200-b683-11e8-9e4d-82143db5951e.PNG)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/283", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/283/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/283/events", "html_url": "https://github.com/vmware/pyvcloud/issues/283", "id": 358898632, "node_id": "MDU6SXNzdWUzNTg4OTg2MzI=", "number": 283, "title": "Additional network device in VM", "user": {"login": "dsd-contina", "id": 43163863, "node_id": "MDQ6VXNlcjQzMTYzODYz", "avatar_url": "https://avatars3.githubusercontent.com/u/43163863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsd-contina", "html_url": "https://github.com/dsd-contina", "followers_url": "https://api.github.com/users/dsd-contina/followers", "following_url": "https://api.github.com/users/dsd-contina/following{/other_user}", "gists_url": "https://api.github.com/users/dsd-contina/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsd-contina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsd-contina/subscriptions", "organizations_url": "https://api.github.com/users/dsd-contina/orgs", "repos_url": "https://api.github.com/users/dsd-contina/repos", "events_url": "https://api.github.com/users/dsd-contina/events{/privacy}", "received_events_url": "https://api.github.com/users/dsd-contina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-11T06:05:20Z", "updated_at": "2019-08-07T10:07:19Z", "closed_at": "2019-08-07T10:07:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nIs it possible to add a second network adapter to the VM and assign a network to it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/279", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/279/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/279/events", "html_url": "https://github.com/vmware/pyvcloud/issues/279", "id": 356957788, "node_id": "MDU6SXNzdWUzNTY5NTc3ODg=", "number": 279, "title": "orgVDC ACL removal results in HTTP 500 (NPE)", "user": {"login": "rocknes", "id": 4933668, "node_id": "MDQ6VXNlcjQ5MzM2Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4933668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rocknes", "html_url": "https://github.com/rocknes", "followers_url": "https://api.github.com/users/rocknes/followers", "following_url": "https://api.github.com/users/rocknes/following{/other_user}", "gists_url": "https://api.github.com/users/rocknes/gists{/gist_id}", "starred_url": "https://api.github.com/users/rocknes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rocknes/subscriptions", "organizations_url": "https://api.github.com/users/rocknes/orgs", "repos_url": "https://api.github.com/users/rocknes/repos", "events_url": "https://api.github.com/users/rocknes/events{/privacy}", "received_events_url": "https://api.github.com/users/rocknes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-04T20:09:21Z", "updated_at": "2019-08-07T10:08:41Z", "closed_at": "2019-08-07T10:08:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If we perform the following set of operations to a freshly created OrgVDC (i.e. blank ACL),\r\n\r\n1. Add an user level access setting to the orgVDC ACL\r\n2. Unshare the orgVDC from everyone via ACL.\r\n3. Remove the access setting added in step 1\r\n\r\nThe third step fails with a NPE, stack trace as follows,\r\n\r\n2018-08-31 19:10:57,801 | ERROR    | pool-jetty-78             | DefaultExceptionMapper         | Internal server exception | requestId=e7604dbb-2b60-40b9-b1be-9720e7a6522f,request=PUT https://bos1-vcd-sp-static-200-112.eng.vmware.com/api/vdc/41d5acfc-8c0f-42e1-9a40-2b7e0eedecc2/action/controlAccess,requestTime=1535742657683,remoteAddress=10.33.118.181:63006,userAgent=python-requests/2.18.4,accept=application/*+xml;version 30.0\r\njava.lang.NullPointerException\r\n at com.vmware.vcloud.api.rest.handlers.VdcHandler.isReadOnlyAccessLevel(VdcHandler.java:1719)\r\n at com.vmware.vcloud.api.rest.handlers.VdcHandler.controlAccess(VdcHandler.java:1696)\r\n at sun.reflect.GeneratedMethodAccessor5755.invoke(Unknown Source)\r\n.\r\n.\r\n.\r\n\r\n\r\nThis is a vCD issue and is being internally tracked.\r\npyvcloud is affected by this, and has to wait until the fix from vCD is rolled out.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/256", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/256/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/256/events", "html_url": "https://github.com/vmware/pyvcloud/issues/256", "id": 333418525, "node_id": "MDU6SXNzdWUzMzM0MTg1MjU=", "number": 256, "title": "Roadmap to manage object metadata ?", "user": {"login": "kaneda-fr", "id": 7694620, "node_id": "MDQ6VXNlcjc2OTQ2MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7694620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaneda-fr", "html_url": "https://github.com/kaneda-fr", "followers_url": "https://api.github.com/users/kaneda-fr/followers", "following_url": "https://api.github.com/users/kaneda-fr/following{/other_user}", "gists_url": "https://api.github.com/users/kaneda-fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaneda-fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaneda-fr/subscriptions", "organizations_url": "https://api.github.com/users/kaneda-fr/orgs", "repos_url": "https://api.github.com/users/kaneda-fr/repos", "events_url": "https://api.github.com/users/kaneda-fr/events{/privacy}", "received_events_url": "https://api.github.com/users/kaneda-fr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212112, "node_id": "MDU6TGFiZWwxNDcyMTIxMTI=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-18T20:15:28Z", "updated_at": "2019-08-07T11:28:30Z", "closed_at": "2019-08-07T11:28:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nDo you have on the roadmap the addition for the API call for managing metadata on objects ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/232", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/232/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/232/events", "html_url": "https://github.com/vmware/pyvcloud/issues/232", "id": 315288561, "node_id": "MDU6SXNzdWUzMTUyODg1NjE=", "number": 232, "title": "Attempting to log into non-vCD server may generate confusing error message", "user": {"login": "hodgesrm", "id": 2666453, "node_id": "MDQ6VXNlcjI2NjY0NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2666453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hodgesrm", "html_url": "https://github.com/hodgesrm", "followers_url": "https://api.github.com/users/hodgesrm/followers", "following_url": "https://api.github.com/users/hodgesrm/following{/other_user}", "gists_url": "https://api.github.com/users/hodgesrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/hodgesrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hodgesrm/subscriptions", "organizations_url": "https://api.github.com/users/hodgesrm/orgs", "repos_url": "https://api.github.com/users/hodgesrm/repos", "events_url": "https://api.github.com/users/hodgesrm/events{/privacy}", "received_events_url": "https://api.github.com/users/hodgesrm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212110, "node_id": "MDU6TGFiZWwxNDcyMTIxMTA=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-18T00:36:39Z", "updated_at": "2019-08-07T10:38:43Z", "closed_at": "2019-08-07T10:38:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Due to a configuration error one of my scripts tried to login to an NSX Manager instead of vCloud Director.  This results in the following stack trace.  (Credentials are suppressed.)\r\n\r\n>python3 examples/system-info.py (nsx manager host ip) System (vcd sysadmin) (password)\r\n> Logging in: host=(host ip), org=System, user=(vcd sysadmin)\r\n> Traceback (most recent call last):\r\n>   File \"examples/system-info.py\", line 46, in <module>\r\n>     client.set_credentials(BasicLoginCredentials(user, org, password))\r\n>   File \"/var/jenkins/workspace/pyvcloud-pipeline/test-env/lib/python3.6/site-packages/pyvcloud/vcd/client.py\", line 561, in set_credentials\r\n>     auth=('%s@%s' % (creds.user, creds.org), creds.password))\r\n>   File \"/var/jenkins/workspace/pyvcloud-pipeline/test-env/lib/python3.6/site-packages/pyvcloud/vcd/client.py\", line 724, in _do_request_prim\r\n>     d = response.content.decode(self.fsencoding)\r\n> UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 60: ordinal not in range(128)\r\n\r\nLogging into vCenter triggers a different stack trace:\r\n\r\n>python3 examples/system-info.py (vcenter host ip) System (vcd sysadmin) (password)\r\n> Logging in: host=(host ip), org=System, user=(vcd sysadmin)\r\n> Traceback (most recent call last):\r\n>   File \"examples/system-info.py\", line 46, in <module>\r\n>     client.set_credentials(BasicLoginCredentials(user, org, password))\r\n>   File \"/var/jenkins/workspace/dev-pyvcloud-pipeline/test-env/lib/python3.6/site-packages/pyvcloud/vcd/client.py\", line 572, in set_credentials\r\n>     r) if r is not None else \\\r\n>   File \"/var/jenkins/workspace/dev-pyvcloud-pipeline/test-env/lib/python3.6/site-packages/pyvcloud/vcd/client.py\", line 529, in _get_response_request_id\r\n>     return response.headers[self._REQUEST_ID_HDR_NAME]\r\n>   File \"/var/jenkins/workspace/dev-pyvcloud-pipeline/test-env/lib/python3.6/site-packages/requests/structures.py\", line 54, in __getitem__\r\n>     return self._store[key.lower()][1]\r\n> KeyError: 'x-vmware-vcloud-request-id'\r\n\r\nWe need to do a better job of trapping these errors and returning a clear message.  One solution is to return an exception along the lines of \"An unexpected login failure occurred\" and log the detailed error in pyvcloud.log. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/229", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/229/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/229/events", "html_url": "https://github.com/vmware/pyvcloud/issues/229", "id": 314749290, "node_id": "MDU6SXNzdWUzMTQ3NDkyOTA=", "number": 229, "title": "Deprecate/remove documentation at https://pyvcloud.readthedocs.io/en/latest/", "user": {"login": "hodgesrm", "id": 2666453, "node_id": "MDQ6VXNlcjI2NjY0NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2666453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hodgesrm", "html_url": "https://github.com/hodgesrm", "followers_url": "https://api.github.com/users/hodgesrm/followers", "following_url": "https://api.github.com/users/hodgesrm/following{/other_user}", "gists_url": "https://api.github.com/users/hodgesrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/hodgesrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hodgesrm/subscriptions", "organizations_url": "https://api.github.com/users/hodgesrm/orgs", "repos_url": "https://api.github.com/users/hodgesrm/repos", "events_url": "https://api.github.com/users/hodgesrm/events{/privacy}", "received_events_url": "https://api.github.com/users/hodgesrm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212112, "node_id": "MDU6TGFiZWwxNDcyMTIxMTI=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-16T17:28:31Z", "updated_at": "2018-04-17T01:13:11Z", "closed_at": "2018-04-17T01:13:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The https://pyvcloud.readthedocs.io/en/latest/ page is obsolete. We need to have a look a how to remove it or at least tag the pages so there is no confusion. \r\n\r\nWe now post documentation on https://vmware.github.io/pyvcloud/, which is a convention for all vmware Github projects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/228", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/228/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/228/events", "html_url": "https://github.com/vmware/pyvcloud/issues/228", "id": 314558411, "node_id": "MDU6SXNzdWUzMTQ1NTg0MTE=", "number": 228, "title": "Edge submodule on a roadmap?", "user": {"login": "germanium-git", "id": 31744880, "node_id": "MDQ6VXNlcjMxNzQ0ODgw", "avatar_url": "https://avatars1.githubusercontent.com/u/31744880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/germanium-git", "html_url": "https://github.com/germanium-git", "followers_url": "https://api.github.com/users/germanium-git/followers", "following_url": "https://api.github.com/users/germanium-git/following{/other_user}", "gists_url": "https://api.github.com/users/germanium-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/germanium-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/germanium-git/subscriptions", "organizations_url": "https://api.github.com/users/germanium-git/orgs", "repos_url": "https://api.github.com/users/germanium-git/repos", "events_url": "https://api.github.com/users/germanium-git/events{/privacy}", "received_events_url": "https://api.github.com/users/germanium-git/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212115, "node_id": "MDU6TGFiZWwxNDcyMTIxMTU=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-16T08:59:43Z", "updated_at": "2020-04-22T11:37:40Z", "closed_at": "2020-04-22T11:37:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This question is more about the feature which will be supported in the future rather than fixing an issue.\r\nThe old version of pyvcloud's documentation https://pyvcloud.readthedocs.io/en/latest/ refers to the GitHub repository http://github.com/vmware/pyvcloud. But this GitHub repository refers to different documentation https://vmware.github.io/pyvcloud \"Python SDK for VMware vCloud Director\".\r\n\r\nI\u2019m a bit confused with what features already are deprecated and what features may be expected in future.\r\n\r\nIn the \u201cold\u201d  version of the pyvcloud, there was the pyvcloud.gateway module which no longer exists in the new one.\r\nMay I ask if there're plans to develop a submodule for managing edges? And if no plans for edge submodule then if at least the routed org networks are on a roadmap? The creation of routed Org networks was supported in the old release as opposed to the new pyvcloud.vcd.vdc module supporting only isolated networks now by utilizing  create_isolated_vdc_network feature.\r\nIs there a workaround to get a routed org nw created?\r\n\r\nThank you,\r\nPetr.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/223", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/223/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/223/events", "html_url": "https://github.com/vmware/pyvcloud/issues/223", "id": 308726968, "node_id": "MDU6SXNzdWUzMDg3MjY5Njg=", "number": 223, "title": "The VM class instance doesn\u2019t provide information about the 2nd, 3rd\u2026 vnics", "user": {"login": "germanium-git", "id": 31744880, "node_id": "MDQ6VXNlcjMxNzQ0ODgw", "avatar_url": "https://avatars1.githubusercontent.com/u/31744880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/germanium-git", "html_url": "https://github.com/germanium-git", "followers_url": "https://api.github.com/users/germanium-git/followers", "following_url": "https://api.github.com/users/germanium-git/following{/other_user}", "gists_url": "https://api.github.com/users/germanium-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/germanium-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/germanium-git/subscriptions", "organizations_url": "https://api.github.com/users/germanium-git/orgs", "repos_url": "https://api.github.com/users/germanium-git/repos", "events_url": "https://api.github.com/users/germanium-git/events{/privacy}", "received_events_url": "https://api.github.com/users/germanium-git/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-26T20:40:12Z", "updated_at": "2018-03-29T17:57:29Z", "closed_at": "2018-03-29T17:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm trying to retrieve data about vnics. It seems the instances of the VM class doesn\u2019t provide information about the 2nd, 3rd\u2026 vnics but only about the primary vnic. \r\nIs there a way to retrieve connection parameters from all network card (IP addresses, MAC addresses etc.)?\r\n\r\n`from pyvcloud.vcd.client import BasicLoginCredentials\r\nfrom pyvcloud.vcd.client import Client\r\nfrom pyvcloud.vcd.org import Org\r\nfrom pyvcloud.vcd.vdc import VDC\r\nfrom pyvcloud.vcd.vm import VM\r\nfrom pyvcloud.vcd.vapp import VApp\r\nimport urllib3\r\n\r\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\r\nclient = Client('10.20.30.40', api_version='29.0', verify_ssl_certs=False,\r\n                log_file='pyvcloud.log', log_requests=True, log_headers=True,\r\n                log_bodies=True)\r\n\r\nclient.set_credentials(BasicLoginCredentials('username', 'MyORG', 'mypass'))\r\nprint(\"Fetching Org...\")\r\norg_resource = client.get_org()\r\norg = Org(client, resource=org_resource)\r\nvdclist = org.list_vdcs()\r\nfor vdc in vdclist:\r\n    print(\"\\nFetching VDC {}\".format(vdc['name']))\r\n    vdc_resource = org.get_vdc(vdc['name'])\r\n    vdc_instance = VDC(client, resource=vdc_resource)\r\n    vapps_list = vdc_instance.list_resources()\r\n    for vapp in vapps_list:\r\n        print(\"\\nFetching vAPP {}\".format(vapp['name']))\r\n        vapp_resource = vdc_instance.get_vapp(vapp['name'])\r\n        vapp_instance = VApp(client, resource=vapp_resource)\r\n        allvms = vapp_instance.get_all_vms()\r\n        for vm in allvms:\r\n            print(\"Fetching VM {}\".format(vm.attrib['name']))\r\n            vm_resource = vapp_instance.get_vm(vm.attrib['name'])\r\n            vm_instance = VM(client, resource=vm_resource)\r\n            print(vm_instance.resource.NetworkConnectionSection.NetworkConnection.IpAddress)\r\n            print(vm_instance.resource.NetworkConnectionSection.NetworkConnection.MACAddress)\r\n            print(vm_instance.resource.NetworkConnectionSection.NetworkConnection.attrib)\r\n\r\nclient.logout()`\r\n\r\nPetr.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/222", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/222/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/222/events", "html_url": "https://github.com/vmware/pyvcloud/issues/222", "id": 308722137, "node_id": "MDU6SXNzdWUzMDg3MjIxMzc=", "number": 222, "title": "The method get_org_list(self): from the class Client doesn\u2019t retrieve all organizations", "user": {"login": "germanium-git", "id": 31744880, "node_id": "MDQ6VXNlcjMxNzQ0ODgw", "avatar_url": "https://avatars1.githubusercontent.com/u/31744880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/germanium-git", "html_url": "https://github.com/germanium-git", "followers_url": "https://api.github.com/users/germanium-git/followers", "following_url": "https://api.github.com/users/germanium-git/following{/other_user}", "gists_url": "https://api.github.com/users/germanium-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/germanium-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/germanium-git/subscriptions", "organizations_url": "https://api.github.com/users/germanium-git/orgs", "repos_url": "https://api.github.com/users/germanium-git/repos", "events_url": "https://api.github.com/users/germanium-git/events{/privacy}", "received_events_url": "https://api.github.com/users/germanium-git/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-26T20:24:28Z", "updated_at": "2018-03-29T17:57:42Z", "closed_at": "2018-03-29T17:57:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm trying to retrieve a list of all organizations by using the method get_org_list(self): from class Client.\r\nDespite being logged in as system admin it doesn\u2019t allow me to retrieve information about all organizations created in vCD but I get only the first organization.\r\n\r\n`\r\nfrom pyvcloud.vcd.client import BasicLoginCredentials\r\nfrom pyvcloud.vcd.client import Client\r\nimport urllib3\r\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\r\nclient = Client('10.20.30.40',\r\n                api_version='29.0',\r\n                verify_ssl_certs=False,\r\n                log_file='pyvcloud.log',\r\n                log_requests=True,\r\n                log_headers=True,\r\n                log_bodies=True)\r\nclient.set_credentials(BasicLoginCredentials('admin', 'SYSTEM', 'mypass'))\r\n\r\nprint(client.is_sysadmin())\r\n\r\norglist = client.get_org_list()\r\nfor org in orglist:\r\n    print(org.Org.attrib['name'])\r\n\r\n# Log out.\r\nprint(\"Logging out\")\r\nclient.logout()\r\n`\r\n\r\nPetr\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/219", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/219/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/219/events", "html_url": "https://github.com/vmware/pyvcloud/issues/219", "id": 304707077, "node_id": "MDU6SXNzdWUzMDQ3MDcwNzc=", "number": 219, "title": "Version 18.2.2 broken against VCD 9.0", "user": {"login": "rvdh", "id": 1104634, "node_id": "MDQ6VXNlcjExMDQ2MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1104634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvdh", "html_url": "https://github.com/rvdh", "followers_url": "https://api.github.com/users/rvdh/followers", "following_url": "https://api.github.com/users/rvdh/following{/other_user}", "gists_url": "https://api.github.com/users/rvdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvdh/subscriptions", "organizations_url": "https://api.github.com/users/rvdh/orgs", "repos_url": "https://api.github.com/users/rvdh/repos", "events_url": "https://api.github.com/users/rvdh/events{/privacy}", "received_events_url": "https://api.github.com/users/rvdh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212115, "node_id": "MDU6TGFiZWwxNDcyMTIxMTU=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-13T10:29:39Z", "updated_at": "2018-04-11T19:32:58Z", "closed_at": "2018-04-11T19:32:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We were getting errors using version 18.2.2 of the tools against our environment when trying to modify the memory of a virtual machine:\r\n\r\n```Exception: (400, '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n<Error xmlns=\"http://www.vmware.com/vcloud/v1.5\" xmlns:vmext=\"http://www.vmware.com/vcloud/extension/v1.5\" xmlns:ovf=\"http://schemas.dmtf.org/ovf/envelope/1\" xmlns:vssd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_VirtualSystemSettingData\" xmlns:common=\"http://schemas.dmtf.org/wbem/wscim/1/common\" xmlns:rasd=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ResourceAllocationSettingData\" xmlns:vmw=\"http://www.vmware.com/schema/ovf\" xmlns:ovfenv=\"http://schemas.dmtf.org/ovf/environment/1\" xmlns:ns9=\"http://www.vmware.com/vcloud/networkservice/1.0\" xmlns:ns10=\"http://www.vmware.com/vcloud/networkservice/common/1.0\" xmlns:ns11=\"http://www.vmware.com/vcloud/networkservice/ipam/1.0\" xmlns:ns12=\"http://www.vmware.com/vcloud/versions\" majorErrorCode=\"400\" message=\"[ a35f3a10-e3bb-44e8-85cf-621114290d90 ] HTTP 400 Bad Request&#xA; - Undeclared namespace prefix &quot;xsi&quot; (for attribute &quot;nil&quot;)&#xA; at [row,col {unknown-source}]: [2,80]\" minorErrorCode=\"BAD_REQUEST\"/>\\n')```\r\n\r\nSo I've added the xsi to the namespace declaration. After this, other errors occurred so I forked the tag 18.2.2 and began fixing the issues. The fork is here: https://github.com/avisi/pyvcloud/tree/fix_v18 but I'm not able to create a pull request for it. Is it possible that you create a v18 branch so I can submit a pull request?\r\n\r\nThe fixes are in https://github.com/avisi/pyvcloud/commit/e44ea2ea8f03d079acea7427e17e9e8464d8c3b6.\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/212", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/212/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/212/events", "html_url": "https://github.com/vmware/pyvcloud/issues/212", "id": 301638798, "node_id": "MDU6SXNzdWUzMDE2Mzg3OTg=", "number": 212, "title": "Unable to delete an existing virtual machine when other VM in the same vapp can be accessed.", "user": {"login": "xudehua", "id": 3772317, "node_id": "MDQ6VXNlcjM3NzIzMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3772317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xudehua", "html_url": "https://github.com/xudehua", "followers_url": "https://api.github.com/users/xudehua/followers", "following_url": "https://api.github.com/users/xudehua/following{/other_user}", "gists_url": "https://api.github.com/users/xudehua/gists{/gist_id}", "starred_url": "https://api.github.com/users/xudehua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xudehua/subscriptions", "organizations_url": "https://api.github.com/users/xudehua/orgs", "repos_url": "https://api.github.com/users/xudehua/repos", "events_url": "https://api.github.com/users/xudehua/events{/privacy}", "received_events_url": "https://api.github.com/users/xudehua/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-03-02T03:11:12Z", "updated_at": "2018-03-13T05:06:51Z", "closed_at": "2018-03-13T05:06:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "example:\r\nThere is three vms(name:A,B,C) in the vApp,I want to delete one(A) of vms using vapp.delete_vms(self, A).\r\nwhen the status of vApp and vms(B,C) is \"power on\",the status vm(A) is \"power off\" and \"undeploy\",the function of   vapp.delete_vms(self, A) is failed.\r\nwhen the status of vApp and vms(A,B,C) is \"power off\",the function of vapp.delete_vms(self, A) is successed.But vms(B,C) will not work.\r\n\r\nOur purpose is scale-in an vapp\uff0c so we want to delete a vm while others vms in this vapp are still working\uff0cany methods could achied this goal\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/208", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/208/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/208/events", "html_url": "https://github.com/vmware/pyvcloud/issues/208", "id": 298102903, "node_id": "MDU6SXNzdWUyOTgxMDI5MDM=", "number": 208, "title": "cannot import name Http", "user": {"login": "Bareliah", "id": 7613282, "node_id": "MDQ6VXNlcjc2MTMyODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7613282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bareliah", "html_url": "https://github.com/Bareliah", "followers_url": "https://api.github.com/users/Bareliah/followers", "following_url": "https://api.github.com/users/Bareliah/following{/other_user}", "gists_url": "https://api.github.com/users/Bareliah/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bareliah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bareliah/subscriptions", "organizations_url": "https://api.github.com/users/Bareliah/orgs", "repos_url": "https://api.github.com/users/Bareliah/repos", "events_url": "https://api.github.com/users/Bareliah/events{/privacy}", "received_events_url": "https://api.github.com/users/Bareliah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212116, "node_id": "MDU6TGFiZWwxNDcyMTIxMTY=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-18T17:42:31Z", "updated_at": "2018-04-11T19:29:49Z", "closed_at": "2018-04-11T19:29:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "installing pyvcloud and get an error:\r\n    from pyvcloud import  Http, Log\r\nImportError: cannot import name Http\r\n\r\nlooks like all the requirements are satisfied:\r\nuser@localhost:~/files$ pip install pyvcloud -v\r\nRequirement already satisfied: pyvcloud in /usr/local/lib/python2.7/dist-packages\r\nRequirement already satisfied: lxml>=3.4.1 in /home/osmuser/.local/lib/python2.7/site-packages (from pyvcloud)\r\nRequirement already satisfied: pygments>=2.2.0 in /usr/local/lib/python2.7/dist-packages (from pyvcloud)\r\nRequirement already satisfied: requests>=2.18.4 in /home/osmuser/.local/lib/python2.7/site-packages (from pyvcloud)\r\nRequirement already satisfied: flufl.enum>=4.1.1 in /usr/local/lib/python2.7/dist-packages (from pyvcloud)\r\nRequirement already satisfied: humanfriendly>=4.8 in /usr/local/lib/python2.7/dist-packages (from pyvcloud)\r\nRequirement already satisfied: PyYAML>=3.10 in /usr/local/lib/python2.7/dist-packages (from pyvcloud)\r\nRequirement already satisfied: certifi>=2017.4.17 in /home/osmuser/.local/lib/python2.7/site-packages (from requests>=2.18.4->pyvcloud)\r\nRequirement already satisfied: chardet<3.1.0,>=3.0.2 in /home/osmuser/.local/lib/python2.7/site-packages (from requests>=2.18.4->pyvcloud)\r\nRequirement already satisfied: idna<2.7,>=2.5 in /home/osmuser/.local/lib/python2.7/site-packages (from requests>=2.18.4->pyvcloud)\r\nRequirement already satisfied: urllib3<1.23,>=1.21.1 in /home/osmuser/.local/lib/python2.7/site-packages (from requests>=2.18.4->pyvcloud)\r\nRequirement already satisfied: monotonic; python_version == \"2.6\" or python_version == \"2.7\" or python_version == \"3.0\" or python_version == \"3.1\" or python_version == \"3.2\" in /usr/local/lib/python2.7/dist-packages (from humanfriendly>=4.8->pyvcloud)\r\nCleaning up...\r\nStarting new HTTPS connection (1): pypi.python.org\r\n\"GET /pypi/pip/json HTTP/1.1\" 200 72983\r\n\r\nany idea?\r\n\r\n\r\n-------------------------------------------------------\r\n\r\nUpdate : I downgrade pyvcloud from pyvcloud==19.1.1 to pyvcloud==18.2.1 and it works.\r\nI think there is a bug with 19.1.1 version or this module design changed and it's not backward compatibility for purpose?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/207", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/207/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/207/events", "html_url": "https://github.com/vmware/pyvcloud/issues/207", "id": 297950023, "node_id": "MDU6SXNzdWUyOTc5NTAwMjM=", "number": 207, "title": "Unable to create a new VM with a different target_vm_name", "user": {"login": "ihafiri", "id": 7488595, "node_id": "MDQ6VXNlcjc0ODg1OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7488595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ihafiri", "html_url": "https://github.com/ihafiri", "followers_url": "https://api.github.com/users/ihafiri/followers", "following_url": "https://api.github.com/users/ihafiri/following{/other_user}", "gists_url": "https://api.github.com/users/ihafiri/gists{/gist_id}", "starred_url": "https://api.github.com/users/ihafiri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ihafiri/subscriptions", "organizations_url": "https://api.github.com/users/ihafiri/orgs", "repos_url": "https://api.github.com/users/ihafiri/repos", "events_url": "https://api.github.com/users/ihafiri/events{/privacy}", "received_events_url": "https://api.github.com/users/ihafiri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-16T23:21:43Z", "updated_at": "2019-08-07T10:26:18Z", "closed_at": "2019-08-07T10:26:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "adding new virtual machines to an existing vApp using vapp.add_vms([specs]) results in the following error:\r\n\r\npyvcloud.vcd.client.VcdErrorResponseException: Status code: 400/BAD_REQUEST, Bad request  - Unexpected JAXB Exception  - cvc-complex-type.2.4.a: Invalid content was found starting with element 'VmGeneralParams'\r\n\r\nremoving the VmGeneralParams from sourced item, the request runs fine and the VM is created successfully. However, I lose the ability to create a VM with a different target_vm_name\r\n\r\nAPI versions: 1.5 and 5.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/205", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/205/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/205/events", "html_url": "https://github.com/vmware/pyvcloud/issues/205", "id": 296770845, "node_id": "MDU6SXNzdWUyOTY3NzA4NDU=", "number": 205, "title": "Depoying VM's with manual allocation mode", "user": {"login": "jackalsh", "id": 1546782, "node_id": "MDQ6VXNlcjE1NDY3ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1546782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackalsh", "html_url": "https://github.com/jackalsh", "followers_url": "https://api.github.com/users/jackalsh/followers", "following_url": "https://api.github.com/users/jackalsh/following{/other_user}", "gists_url": "https://api.github.com/users/jackalsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackalsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackalsh/subscriptions", "organizations_url": "https://api.github.com/users/jackalsh/orgs", "repos_url": "https://api.github.com/users/jackalsh/repos", "events_url": "https://api.github.com/users/jackalsh/events{/privacy}", "received_events_url": "https://api.github.com/users/jackalsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-13T15:09:40Z", "updated_at": "2019-07-03T08:59:28Z", "closed_at": "2019-07-03T08:59:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Version**: \r\n  * VCloud Director 9\r\n  * pyvcloud 19.1.1\r\n\r\nI want to deploy VApp with given IP.\r\nMy goal is to run **instantiate_vapp**(or similar) with **ip_allocation_mode = manual** so I will be able to set custom IP addresses to VM's.\r\nCurrently this is not seems to be supported. I can pass pool and dhcp, but static or manual are not supported.\r\nHow can this be done? Do pycloud library supports this?\r\n\r\nThank you for your support.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/200", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/200/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/200/events", "html_url": "https://github.com/vmware/pyvcloud/issues/200", "id": 293872159, "node_id": "MDU6SXNzdWUyOTM4NzIxNTk=", "number": 200, "title": "https://vmware.github.io/pyvcloud is not working", "user": {"login": "kazamatzuri", "id": 848906, "node_id": "MDQ6VXNlcjg0ODkwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/848906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kazamatzuri", "html_url": "https://github.com/kazamatzuri", "followers_url": "https://api.github.com/users/kazamatzuri/followers", "following_url": "https://api.github.com/users/kazamatzuri/following{/other_user}", "gists_url": "https://api.github.com/users/kazamatzuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kazamatzuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kazamatzuri/subscriptions", "organizations_url": "https://api.github.com/users/kazamatzuri/orgs", "repos_url": "https://api.github.com/users/kazamatzuri/repos", "events_url": "https://api.github.com/users/kazamatzuri/events{/privacy}", "received_events_url": "https://api.github.com/users/kazamatzuri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-02T12:26:24Z", "updated_at": "2018-04-11T19:28:11Z", "closed_at": "2018-04-11T19:28:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "hp link is notworking", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/198", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/198/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/198/events", "html_url": "https://github.com/vmware/pyvcloud/issues/198", "id": 293439567, "node_id": "MDU6SXNzdWUyOTM0Mzk1Njc=", "number": 198, "title": "Create multiple vapp networks", "user": {"login": "ihafiri", "id": 7488595, "node_id": "MDQ6VXNlcjc0ODg1OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7488595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ihafiri", "html_url": "https://github.com/ihafiri", "followers_url": "https://api.github.com/users/ihafiri/followers", "following_url": "https://api.github.com/users/ihafiri/following{/other_user}", "gists_url": "https://api.github.com/users/ihafiri/gists{/gist_id}", "starred_url": "https://api.github.com/users/ihafiri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ihafiri/subscriptions", "organizations_url": "https://api.github.com/users/ihafiri/orgs", "repos_url": "https://api.github.com/users/ihafiri/repos", "events_url": "https://api.github.com/users/ihafiri/events{/privacy}", "received_events_url": "https://api.github.com/users/ihafiri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-01T08:15:07Z", "updated_at": "2018-02-17T22:07:55Z", "closed_at": "2018-02-17T22:07:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Which method can be used to create additional vapp networks? specifically the type of virtual networks mentioned in \r\nhttps://pubs.vmware.com/vcd-820/index.jsp#com.vmware.vcloud.user.doc/GUID-9F68D2D9-016F-49AF-973E-12B723473C07.html\r\n\r\nI was looking at tests/vcd_vapp.py line 46, I couldn't find where this function is implemented vdc.reconfigure_vapp_network() ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/142", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/142/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/142/events", "html_url": "https://github.com/vmware/pyvcloud/issues/142", "id": 279435094, "node_id": "MDU6SXNzdWUyNzk0MzUwOTQ=", "number": 142, "title": "vdc.get_storage_profiles only return the first element", "user": {"login": "pylanglois", "id": 1401905, "node_id": "MDQ6VXNlcjE0MDE5MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1401905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pylanglois", "html_url": "https://github.com/pylanglois", "followers_url": "https://api.github.com/users/pylanglois/followers", "following_url": "https://api.github.com/users/pylanglois/following{/other_user}", "gists_url": "https://api.github.com/users/pylanglois/gists{/gist_id}", "starred_url": "https://api.github.com/users/pylanglois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pylanglois/subscriptions", "organizations_url": "https://api.github.com/users/pylanglois/orgs", "repos_url": "https://api.github.com/users/pylanglois/repos", "events_url": "https://api.github.com/users/pylanglois/events{/privacy}", "received_events_url": "https://api.github.com/users/pylanglois/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-05T16:14:05Z", "updated_at": "2018-01-19T23:05:22Z", "closed_at": "2018-01-19T23:05:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/vmware/pyvcloud/blob/a3e991fdbd806d23fe8f385d07d362c68ae5eeb6/pyvcloud/vcd/vdc.py#L549\r\n\r\nThis line returns only the first storage profile. Maybe remove this line and return profile_list and the end instead of None", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/133", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/133/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/133/events", "html_url": "https://github.com/vmware/pyvcloud/issues/133", "id": 276030264, "node_id": "MDU6SXNzdWUyNzYwMzAyNjQ=", "number": 133, "title": "Python v2.7 artifacts", "user": {"login": "misa0813", "id": 33896449, "node_id": "MDQ6VXNlcjMzODk2NDQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/33896449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/misa0813", "html_url": "https://github.com/misa0813", "followers_url": "https://api.github.com/users/misa0813/followers", "following_url": "https://api.github.com/users/misa0813/following{/other_user}", "gists_url": "https://api.github.com/users/misa0813/gists{/gist_id}", "starred_url": "https://api.github.com/users/misa0813/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/misa0813/subscriptions", "organizations_url": "https://api.github.com/users/misa0813/orgs", "repos_url": "https://api.github.com/users/misa0813/repos", "events_url": "https://api.github.com/users/misa0813/events{/privacy}", "received_events_url": "https://api.github.com/users/misa0813/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-22T11:14:28Z", "updated_at": "2017-11-27T09:55:50Z", "closed_at": "2017-11-27T09:55:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nPython 2.7 artifacts such as\r\n_from StringIO import StringIO_\r\n![image](https://user-images.githubusercontent.com/33896449/33124679-3f4218a2-cf97-11e7-87ed-03f72980227e.png)\r\nand _print operator_\r\n![image](https://user-images.githubusercontent.com/33896449/33124727-6e026c1e-cf97-11e7-86cc-ca3fa2652929.png)\r\ndo not allow use pyvcloud in mistral as library. Would you like to fix, please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/125", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/125/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/125/events", "html_url": "https://github.com/vmware/pyvcloud/issues/125", "id": 273889938, "node_id": "MDU6SXNzdWUyNzM4ODk5Mzg=", "number": 125, "title": "vApp is set to targetVM name (string), 'str' object has no attribute 'get_Link'", "user": {"login": "joybwang", "id": 6936612, "node_id": "MDQ6VXNlcjY5MzY2MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6936612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joybwang", "html_url": "https://github.com/joybwang", "followers_url": "https://api.github.com/users/joybwang/followers", "following_url": "https://api.github.com/users/joybwang/following{/other_user}", "gists_url": "https://api.github.com/users/joybwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/joybwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joybwang/subscriptions", "organizations_url": "https://api.github.com/users/joybwang/orgs", "repos_url": "https://api.github.com/users/joybwang/repos", "events_url": "https://api.github.com/users/joybwang/events{/privacy}", "received_events_url": "https://api.github.com/users/joybwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-14T18:08:52Z", "updated_at": "2019-08-07T10:27:00Z", "closed_at": "2019-08-07T10:27:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/vmware/pyvcloud/blob/cf753361167c15aabf75ba269bf0fa42ca650ddd/pyvcloud/vapp.py#L78", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/115", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/115/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/115/events", "html_url": "https://github.com/vmware/pyvcloud/issues/115", "id": 268846418, "node_id": "MDU6SXNzdWUyNjg4NDY0MTg=", "number": 115, "title": "VDC resources not filtered by EntityType", "user": {"login": "Foley", "id": 128534, "node_id": "MDQ6VXNlcjEyODUzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/128534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Foley", "html_url": "https://github.com/Foley", "followers_url": "https://api.github.com/users/Foley/followers", "following_url": "https://api.github.com/users/Foley/following{/other_user}", "gists_url": "https://api.github.com/users/Foley/gists{/gist_id}", "starred_url": "https://api.github.com/users/Foley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Foley/subscriptions", "organizations_url": "https://api.github.com/users/Foley/orgs", "repos_url": "https://api.github.com/users/Foley/repos", "events_url": "https://api.github.com/users/Foley/events{/privacy}", "received_events_url": "https://api.github.com/users/Foley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-26T17:30:55Z", "updated_at": "2017-11-01T22:38:00Z", "closed_at": "2017-11-01T22:38:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "The EntityType parameter is not being used in the get_resource_href method so this is not filtering resources as expected.\r\nhttps://github.com/vmware/pyvcloud/blob/8a8767cb314237fbf2b16d9d85efd9c2bc2787dd/pyvcloud/vcd/vdc.py#L41\r\n\r\nThe get_vapp method is returning vApps and vApp Templates because of this. It looks like this can be resolved by using the EntityType to filter the resources like the list_resources method:\r\nhttps://github.com/vmware/pyvcloud/blob/8a8767cb314237fbf2b16d9d85efd9c2bc2787dd/pyvcloud/vcd/vdc.py#L245", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/111", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/111/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/111/events", "html_url": "https://github.com/vmware/pyvcloud/issues/111", "id": 254853053, "node_id": "MDU6SXNzdWUyNTQ4NTMwNTM=", "number": 111, "title": "customize cpu and memory of a VM in new sdk", "user": {"login": "pacogomez", "id": 24319, "node_id": "MDQ6VXNlcjI0MzE5", "avatar_url": "https://avatars3.githubusercontent.com/u/24319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pacogomez", "html_url": "https://github.com/pacogomez", "followers_url": "https://api.github.com/users/pacogomez/followers", "following_url": "https://api.github.com/users/pacogomez/following{/other_user}", "gists_url": "https://api.github.com/users/pacogomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/pacogomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pacogomez/subscriptions", "organizations_url": "https://api.github.com/users/pacogomez/orgs", "repos_url": "https://api.github.com/users/pacogomez/repos", "events_url": "https://api.github.com/users/pacogomez/events{/privacy}", "received_events_url": "https://api.github.com/users/pacogomez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-03T04:45:41Z", "updated_at": "2019-07-03T08:49:48Z", "closed_at": "2019-07-03T08:49:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "include tests", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/109", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/109/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/109/events", "html_url": "https://github.com/vmware/pyvcloud/issues/109", "id": 254437613, "node_id": "MDU6SXNzdWUyNTQ0Mzc2MTM=", "number": 109, "title": "Misleading Test/Documentation or Feature Request", "user": {"login": "cpumanaz", "id": 13242617, "node_id": "MDQ6VXNlcjEzMjQyNjE3", "avatar_url": "https://avatars1.githubusercontent.com/u/13242617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpumanaz", "html_url": "https://github.com/cpumanaz", "followers_url": "https://api.github.com/users/cpumanaz/followers", "following_url": "https://api.github.com/users/cpumanaz/following{/other_user}", "gists_url": "https://api.github.com/users/cpumanaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpumanaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpumanaz/subscriptions", "organizations_url": "https://api.github.com/users/cpumanaz/orgs", "repos_url": "https://api.github.com/users/cpumanaz/repos", "events_url": "https://api.github.com/users/cpumanaz/events{/privacy}", "received_events_url": "https://api.github.com/users/cpumanaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T19:07:51Z", "updated_at": "2019-07-03T08:46:37Z", "closed_at": "2019-07-03T08:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Test 0024 in (vcloud_tests.py line 619) seems to indicate that you can  and pass cpus and memory as arguments when testing compose_vapp().\r\n\r\n        vm_specs = [{\r\n            'template': template,\r\n            'catalog': catalog,\r\n            'name': vm_name,\r\n            'cpus': 3,\r\n            'memory': 4096,\r\n            'storage_profile': storage_profile\r\n        }]\r\n\r\n\r\ncompose_vapp() however does not take either of those two items from the dictionary and put them into the params object.\r\n\r\nCan the documentation be updated, an example provided on how to do this if supported, or ideally the compose_vapp updated to allow setting the cpu and memory if it is not. I'm hopeful as this project is under active development, and it would make sense to complete the provisioning of the target VM at the time the vApp is created to avoid additional coding, or taking additional time/cycles of the vCloud.\r\n\r\nBonus if there is an option to set a customization script at this phase, no worries as I'm going to force configuration and power on afterwards.\r\n\r\nThanks, \r\n\r\n-Matt\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/108", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/108/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/108/events", "html_url": "https://github.com/vmware/pyvcloud/issues/108", "id": 250288087, "node_id": "MDU6SXNzdWUyNTAyODgwODc=", "number": 108, "title": "IndexError: list index out of range", "user": {"login": "ruslantum", "id": 2862404, "node_id": "MDQ6VXNlcjI4NjI0MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2862404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruslantum", "html_url": "https://github.com/ruslantum", "followers_url": "https://api.github.com/users/ruslantum/followers", "following_url": "https://api.github.com/users/ruslantum/following{/other_user}", "gists_url": "https://api.github.com/users/ruslantum/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruslantum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruslantum/subscriptions", "organizations_url": "https://api.github.com/users/ruslantum/orgs", "repos_url": "https://api.github.com/users/ruslantum/repos", "events_url": "https://api.github.com/users/ruslantum/events{/privacy}", "received_events_url": "https://api.github.com/users/ruslantum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-15T11:20:35Z", "updated_at": "2017-08-15T20:53:38Z", "closed_at": "2017-08-15T20:53:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/vmware/pyvcloud/blob/eaa614498bb8eef1f98f1c81f7e66fc040c56c1d/pyvcloud/vapp.py#L940\r\n\r\nI am using pyvcloud Library in my Ansible dynamic inventory script. After upgrading to the newest version of pyvloud it started failing with the following traceback:\r\n```\r\nERROR! Attempted to execute \r\n...\r\nline 176, in update_cache\r\n    vms_details = the_vapp.get_vms_details()\r\n  File \"/home/tumarkin/.virtualenvs/ansible2-stable/lib/python2.7/site-packages/pyvcloud/vapp.py\", line 940, in get_vms_details\r\n    property_section = filter(lambda section: section.__class__.__name__ == 'PropertySection_Type', es)[0]\r\nIndexError: list index out of range\r\n```\r\n\r\nPossible solution:\r\nenclose the property section with ``try ... except IndexError: pass``", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/105", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/105/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/105/events", "html_url": "https://github.com/vmware/pyvcloud/issues/105", "id": 244824793, "node_id": "MDU6SXNzdWUyNDQ4MjQ3OTM=", "number": 105, "title": "display filters in extension info command", "user": {"login": "pacogomez", "id": 24319, "node_id": "MDQ6VXNlcjI0MzE5", "avatar_url": "https://avatars3.githubusercontent.com/u/24319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pacogomez", "html_url": "https://github.com/pacogomez", "followers_url": "https://api.github.com/users/pacogomez/followers", "following_url": "https://api.github.com/users/pacogomez/following{/other_user}", "gists_url": "https://api.github.com/users/pacogomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/pacogomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pacogomez/subscriptions", "organizations_url": "https://api.github.com/users/pacogomez/orgs", "repos_url": "https://api.github.com/users/pacogomez/repos", "events_url": "https://api.github.com/users/pacogomez/events{/privacy}", "received_events_url": "https://api.github.com/users/pacogomez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-22T05:05:37Z", "updated_at": "2019-07-03T06:59:10Z", "closed_at": "2019-07-03T06:59:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/102", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/102/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/102/events", "html_url": "https://github.com/vmware/pyvcloud/issues/102", "id": 228709825, "node_id": "MDU6SXNzdWUyMjg3MDk4MjU=", "number": 102, "title": "vCloud Air Acquisition by OVH Possible Development Impact?", "user": {"login": "montj2", "id": 277112, "node_id": "MDQ6VXNlcjI3NzExMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/277112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montj2", "html_url": "https://github.com/montj2", "followers_url": "https://api.github.com/users/montj2/followers", "following_url": "https://api.github.com/users/montj2/following{/other_user}", "gists_url": "https://api.github.com/users/montj2/gists{/gist_id}", "starred_url": "https://api.github.com/users/montj2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montj2/subscriptions", "organizations_url": "https://api.github.com/users/montj2/orgs", "repos_url": "https://api.github.com/users/montj2/repos", "events_url": "https://api.github.com/users/montj2/events{/privacy}", "received_events_url": "https://api.github.com/users/montj2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 147212115, "node_id": "MDU6TGFiZWwxNDcyMTIxMTU=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-15T13:11:19Z", "updated_at": "2018-04-11T19:36:22Z", "closed_at": "2018-04-11T19:36:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Will the recent vCloud Air acquisition by OVH impact the development of pyvcloud?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/99", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/99/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/99/events", "html_url": "https://github.com/vmware/pyvcloud/issues/99", "id": 197052856, "node_id": "MDU6SXNzdWUxOTcwNTI4NTY=", "number": 99, "title": "Cannot create disk of selected storage profile", "user": {"login": "kaneda-fr", "id": 7694620, "node_id": "MDQ6VXNlcjc2OTQ2MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7694620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaneda-fr", "html_url": "https://github.com/kaneda-fr", "followers_url": "https://api.github.com/users/kaneda-fr/followers", "following_url": "https://api.github.com/users/kaneda-fr/following{/other_user}", "gists_url": "https://api.github.com/users/kaneda-fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaneda-fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaneda-fr/subscriptions", "organizations_url": "https://api.github.com/users/kaneda-fr/orgs", "repos_url": "https://api.github.com/users/kaneda-fr/repos", "events_url": "https://api.github.com/users/kaneda-fr/events{/privacy}", "received_events_url": "https://api.github.com/users/kaneda-fr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-21T22:52:34Z", "updated_at": "2019-07-03T06:47:14Z", "closed_at": "2019-07-03T06:02:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe current version of pyvcloud doesn't allow to choose the storage profile when creating an independent disk (available through API since vCloud Director for service provider 5.6.3).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/98", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/98/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/98/events", "html_url": "https://github.com/vmware/pyvcloud/issues/98", "id": 189913760, "node_id": "MDU6SXNzdWUxODk5MTM3NjA=", "number": 98, "title": "issue of insert media", "user": {"login": "caizhibo2016", "id": 17877134, "node_id": "MDQ6VXNlcjE3ODc3MTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/17877134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caizhibo2016", "html_url": "https://github.com/caizhibo2016", "followers_url": "https://api.github.com/users/caizhibo2016/followers", "following_url": "https://api.github.com/users/caizhibo2016/following{/other_user}", "gists_url": "https://api.github.com/users/caizhibo2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/caizhibo2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caizhibo2016/subscriptions", "organizations_url": "https://api.github.com/users/caizhibo2016/orgs", "repos_url": "https://api.github.com/users/caizhibo2016/repos", "events_url": "https://api.github.com/users/caizhibo2016/events{/privacy}", "received_events_url": "https://api.github.com/users/caizhibo2016/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-17T02:10:50Z", "updated_at": "2018-04-16T17:51:28Z", "closed_at": "2018-04-16T17:51:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "after insert ISO to CD/DVD sometime show \"internal error\" in response , in the vm_media function the format string is not correct, \r\nthe format should be \"(media.get('type'), media.get('name'), media.get('href')\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/97", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/97/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/97/events", "html_url": "https://github.com/vmware/pyvcloud/issues/97", "id": 175326817, "node_id": "MDU6SXNzdWUxNzUzMjY4MTc=", "number": 97, "title": "Enumerate all vApps? get_vapps?", "user": {"login": "jblaine", "id": 438740, "node_id": "MDQ6VXNlcjQzODc0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/438740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jblaine", "html_url": "https://github.com/jblaine", "followers_url": "https://api.github.com/users/jblaine/followers", "following_url": "https://api.github.com/users/jblaine/following{/other_user}", "gists_url": "https://api.github.com/users/jblaine/gists{/gist_id}", "starred_url": "https://api.github.com/users/jblaine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jblaine/subscriptions", "organizations_url": "https://api.github.com/users/jblaine/orgs", "repos_url": "https://api.github.com/users/jblaine/repos", "events_url": "https://api.github.com/users/jblaine/events{/privacy}", "received_events_url": "https://api.github.com/users/jblaine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-06T19:12:01Z", "updated_at": "2019-07-03T05:54:54Z", "closed_at": "2019-07-03T05:54:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've scoured the generated docs and poked around through the code but cannot find a way to collect a list of vApps to then iterate over. How might I do that?\n\nThe README does not list a contact address or mailing list, so I'm making this issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/91", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/91/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/91/events", "html_url": "https://github.com/vmware/pyvcloud/issues/91", "id": 134087686, "node_id": "MDU6SXNzdWUxMzQwODc2ODY=", "number": 91, "title": "add_nat_rule ValueError", "user": {"login": "spopp", "id": 1504237, "node_id": "MDQ6VXNlcjE1MDQyMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1504237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spopp", "html_url": "https://github.com/spopp", "followers_url": "https://api.github.com/users/spopp/followers", "following_url": "https://api.github.com/users/spopp/following{/other_user}", "gists_url": "https://api.github.com/users/spopp/gists{/gist_id}", "starred_url": "https://api.github.com/users/spopp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spopp/subscriptions", "organizations_url": "https://api.github.com/users/spopp/orgs", "repos_url": "https://api.github.com/users/spopp/repos", "events_url": "https://api.github.com/users/spopp/events{/privacy}", "received_events_url": "https://api.github.com/users/spopp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-16T20:23:40Z", "updated_at": "2018-04-11T19:38:47Z", "closed_at": "2018-04-11T19:38:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Other nat rules worked but while trying to add nat rule:\n{'TranslatedIp': '10.10.3.3', 'RuleType': 'DNAT', 'Enable': True, 'OriginalPort': 'any', 'TranslatedPort': 'any', 'OriginalIp': '215.216.66.240', 'Protocol': 'TCP', 'Id': 65552}\n\npyvcloud==15rc2\npython2.7\n\npyvcloud/gateway.py tried to cast port 'any' to an int and failed with a ValueError.\nat https://github.com/vmware/pyvcloud/blob/master/pyvcloud/gateway.py#L134\n\n  File \".../.env/local/lib/python2.7/site-packages/pyvcloud/gateway.py\", line 134, in add_nat_rule\n    original_port_modified = str(int(original_port_modified) + 1)\nValueError: invalid literal for int() with base 10: 'any'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/87", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/87/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/87/events", "html_url": "https://github.com/vmware/pyvcloud/issues/87", "id": 131328923, "node_id": "MDU6SXNzdWUxMzEzMjg5MjM=", "number": 87, "title": "Bad login URL for vCloud Director", "user": {"login": "warej", "id": 1675460, "node_id": "MDQ6VXNlcjE2NzU0NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1675460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/warej", "html_url": "https://github.com/warej", "followers_url": "https://api.github.com/users/warej/followers", "following_url": "https://api.github.com/users/warej/following{/other_user}", "gists_url": "https://api.github.com/users/warej/gists{/gist_id}", "starred_url": "https://api.github.com/users/warej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/warej/subscriptions", "organizations_url": "https://api.github.com/users/warej/orgs", "repos_url": "https://api.github.com/users/warej/repos", "events_url": "https://api.github.com/users/warej/events{/privacy}", "received_events_url": "https://api.github.com/users/warej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-04T12:17:42Z", "updated_at": "2016-02-17T12:24:59Z", "closed_at": "2016-02-17T12:24:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to http://www.vmware.com/pdf/vcd_15_api_guide.pdf (p.42), it's necessary to determine login URL before gathering auth token from vCloud Director's API and I saw hardcoded '/api/iam/login' string in 2 places.\nCorrect URL can be determined by sending unauthorized GET /api/versions and finding \"LoginUrl\" tag for given version. \nIn my case it points to /api/sessions and I can't connect to it using vca-cli.\nServers gives following logs:\n- \\- [04/Feb/2016:09:56:20 +0200] \"POST /api/iam/login HTTP/1.1\" 403 353 \"-\" \"python-requests/2.9.1\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/86", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/86/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/86/events", "html_url": "https://github.com/vmware/pyvcloud/issues/86", "id": 124628760, "node_id": "MDU6SXNzdWUxMjQ2Mjg3NjA=", "number": 86, "title": "Recent 15rc2 commit broke vcd support", "user": {"login": "ckamps", "id": 1332810, "node_id": "MDQ6VXNlcjEzMzI4MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1332810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckamps", "html_url": "https://github.com/ckamps", "followers_url": "https://api.github.com/users/ckamps/followers", "following_url": "https://api.github.com/users/ckamps/following{/other_user}", "gists_url": "https://api.github.com/users/ckamps/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckamps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckamps/subscriptions", "organizations_url": "https://api.github.com/users/ckamps/orgs", "repos_url": "https://api.github.com/users/ckamps/repos", "events_url": "https://api.github.com/users/ckamps/events{/privacy}", "received_events_url": "https://api.github.com/users/ckamps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-03T04:45:39Z", "updated_at": "2018-04-11T19:26:32Z", "closed_at": "2018-04-11T19:26:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now login attempts alway result in unauthorized.  See comment on the [commit](https://github.com/vmware/pyvcloud/commit/213af8566de08b8859212a318837c01e6cce9411)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/85", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/85/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/85/events", "html_url": "https://github.com/vmware/pyvcloud/issues/85", "id": 124285318, "node_id": "MDU6SXNzdWUxMjQyODUzMTg=", "number": 85, "title": "Assumes at least one edge gateway exists: Can't login; list index out of range", "user": {"login": "ckamps", "id": 1332810, "node_id": "MDQ6VXNlcjEzMzI4MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1332810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckamps", "html_url": "https://github.com/ckamps", "followers_url": "https://api.github.com/users/ckamps/followers", "following_url": "https://api.github.com/users/ckamps/following{/other_user}", "gists_url": "https://api.github.com/users/ckamps/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckamps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckamps/subscriptions", "organizations_url": "https://api.github.com/users/ckamps/orgs", "repos_url": "https://api.github.com/users/ckamps/repos", "events_url": "https://api.github.com/users/ckamps/events{/privacy}", "received_events_url": "https://api.github.com/users/ckamps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-30T00:08:44Z", "updated_at": "2016-07-23T03:09:02Z", "closed_at": "2016-07-23T03:09:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Symptoms and proposed fix are documented in the following issue within the `vca-cli` project:\n\nhttps://github.com/vmware/vca-cli/issues/30\n\nIn addition to the can't login issue, here's another failure example that helped point us in the right direction:\n\n``` python\n(cloudify)[root@localhost yum.repos.d]# vca --insecure vdc use --vdc devcloud\n/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py:730: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.org/en/latest/security.html (This warning will only appear once by default.)\n  InsecureRequestWarning)\nUsing vdc 'devcloud' in profile 'default'\nTraceback (most recent call last):\n  File \"/etc/yum.repos.d/cloudify/bin/vca\", line 9, in <module>\n    load_entry_point('vca-cli==1.1', 'console_scripts', 'vca')()\n  File \"/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/click/core.py\", line 700, in __call__\n    return self.main(*args, **kwargs)\n  File \"/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/click/core.py\", line 680, in main\n    rv = self.invoke(ctx)\n  File \"/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/click/core.py\", line 1027, in invoke\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\n  File \"/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/click/core.py\", line 873, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/click/core.py\", line 508, in invoke\n    return callback(*args, **kwargs)\n  File \"/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/click/decorators.py\", line 16, in new_func\n    return f(get_current_context(), *args, **kwargs)\n  File \"/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/vca_cli/vca_cli.py\", line 322, in vdc\n    print_vdc_details(ctx, the_vdc, vca.get_gateways(vdc))\n  File \"/etc/yum.repos.d/cloudify/lib/python2.7/site-packages/pyvcloud/vcloudair.py\", line 400, in get_gateways\n    response = requests.get(link[0].get_href(), headers=self.vcloud_session.get_vcloud_headers(), verify=self.verify)\nIndexError: list index out of range\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/84", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/84/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/84/events", "html_url": "https://github.com/vmware/pyvcloud/issues/84", "id": 112871758, "node_id": "MDU6SXNzdWUxMTI4NzE3NTg=", "number": 84, "title": "Python 3 errors", "user": {"login": "vmbb", "id": 8977165, "node_id": "MDQ6VXNlcjg5NzcxNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8977165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmbb", "html_url": "https://github.com/vmbb", "followers_url": "https://api.github.com/users/vmbb/followers", "following_url": "https://api.github.com/users/vmbb/following{/other_user}", "gists_url": "https://api.github.com/users/vmbb/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmbb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmbb/subscriptions", "organizations_url": "https://api.github.com/users/vmbb/orgs", "repos_url": "https://api.github.com/users/vmbb/repos", "events_url": "https://api.github.com/users/vmbb/events{/privacy}", "received_events_url": "https://api.github.com/users/vmbb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 898632040, "node_id": "MDU6TGFiZWw4OTg2MzIwNDA=", "url": "https://api.github.com/repos/vmware/pyvcloud/labels/fixed", "name": "fixed", "color": "67fc62", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-22T19:18:13Z", "updated_at": "2018-04-11T19:44:29Z", "closed_at": "2018-04-11T19:44:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The pip entry says it supports python 3, but I see print statements instead of functions in the code, and the **init**.py imports httplib instead of http.client.\n\nFrom other issues, it seems folks are using it with python 3, but what is the trick? Do I need to use 2to3 and handle it myself?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/78", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/78/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/78/events", "html_url": "https://github.com/vmware/pyvcloud/issues/78", "id": 100595087, "node_id": "MDU6SXNzdWUxMDA1OTUwODc=", "number": 78, "title": "vCloudEntities.py invalid syntax in python3", "user": {"login": "dougmbaya", "id": 8439702, "node_id": "MDQ6VXNlcjg0Mzk3MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8439702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dougmbaya", "html_url": "https://github.com/dougmbaya", "followers_url": "https://api.github.com/users/dougmbaya/followers", "following_url": "https://api.github.com/users/dougmbaya/following{/other_user}", "gists_url": "https://api.github.com/users/dougmbaya/gists{/gist_id}", "starred_url": "https://api.github.com/users/dougmbaya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dougmbaya/subscriptions", "organizations_url": "https://api.github.com/users/dougmbaya/orgs", "repos_url": "https://api.github.com/users/dougmbaya/repos", "events_url": "https://api.github.com/users/dougmbaya/events{/privacy}", "received_events_url": "https://api.github.com/users/dougmbaya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-12T17:34:57Z", "updated_at": "2018-04-16T17:46:10Z", "closed_at": "2018-04-16T17:46:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\n....\n....\n    from pyvcloud.schema.vcd.v1_5.schemas.admin import vCloudEntities\n  File \"/Users/myfile/bin/pyvcloud/pyvcloud/schema/vcd/v1_5/schemas/admin/vCloudEntities.py\", line 94\n    except ImportError, exp:\n                      ^\nSyntaxError: invalid syntax\n\nUsing python3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/72", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/72/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/72/events", "html_url": "https://github.com/vmware/pyvcloud/issues/72", "id": 97417870, "node_id": "MDU6SXNzdWU5NzQxNzg3MA==", "number": 72, "title": "Non consistent return values in vapp.py", "user": {"login": "kostya13", "id": 9286553, "node_id": "MDQ6VXNlcjkyODY1NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9286553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kostya13", "html_url": "https://github.com/kostya13", "followers_url": "https://api.github.com/users/kostya13/followers", "following_url": "https://api.github.com/users/kostya13/following{/other_user}", "gists_url": "https://api.github.com/users/kostya13/gists{/gist_id}", "starred_url": "https://api.github.com/users/kostya13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kostya13/subscriptions", "organizations_url": "https://api.github.com/users/kostya13/orgs", "repos_url": "https://api.github.com/users/kostya13/repos", "events_url": "https://api.github.com/users/kostya13/events{/privacy}", "received_events_url": "https://api.github.com/users/kostya13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-27T09:03:53Z", "updated_at": "2019-08-07T10:30:57Z", "closed_at": "2019-08-07T10:30:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When task failed some functions return None, for example connect_vms\nsome functions raise exception, for example modify_vm_memory\nI suppose all functions must raise exception.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/68", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/68/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/68/events", "html_url": "https://github.com/vmware/pyvcloud/issues/68", "id": 94639563, "node_id": "MDU6SXNzdWU5NDYzOTU2Mw==", "number": 68, "title": "Errors in automatic generated files", "user": {"login": "kostya13", "id": 9286553, "node_id": "MDQ6VXNlcjkyODY1NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9286553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kostya13", "html_url": "https://github.com/kostya13", "followers_url": "https://api.github.com/users/kostya13/followers", "following_url": "https://api.github.com/users/kostya13/following{/other_user}", "gists_url": "https://api.github.com/users/kostya13/gists{/gist_id}", "starred_url": "https://api.github.com/users/kostya13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kostya13/subscriptions", "organizations_url": "https://api.github.com/users/kostya13/orgs", "repos_url": "https://api.github.com/users/kostya13/repos", "events_url": "https://api.github.com/users/kostya13/events{/privacy}", "received_events_url": "https://api.github.com/users/kostya13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-13T04:58:28Z", "updated_at": "2018-04-16T17:48:38Z", "closed_at": "2018-04-16T17:48:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In several files in dir  pyvcloud/schema/vcd/v1_5/schemas/vcloud (for example networkType.py)\nI found error in GDSClassesMapping dictonary.\nThe node's root tag name and corresponding class are swapped.\nI found two mismatches:\n'AllocatedIpAddresses': IpAddressesType\n'IpAddress': AllocatedIpAddressType\nTherefore if I try parse string with root node AllocatedIpAddresses, the parser try use build function from IpAddressesType class.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/66", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/66/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/66/events", "html_url": "https://github.com/vmware/pyvcloud/issues/66", "id": 92460230, "node_id": "MDU6SXNzdWU5MjQ2MDIzMA==", "number": 66, "title": "Timeout issues with block_until_completed function", "user": {"login": "lasko", "id": 131321, "node_id": "MDQ6VXNlcjEzMTMyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/131321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lasko", "html_url": "https://github.com/lasko", "followers_url": "https://api.github.com/users/lasko/followers", "following_url": "https://api.github.com/users/lasko/following{/other_user}", "gists_url": "https://api.github.com/users/lasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/lasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lasko/subscriptions", "organizations_url": "https://api.github.com/users/lasko/orgs", "repos_url": "https://api.github.com/users/lasko/repos", "events_url": "https://api.github.com/users/lasko/events{/privacy}", "received_events_url": "https://api.github.com/users/lasko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-01T18:54:20Z", "updated_at": "2018-04-16T17:49:50Z", "closed_at": "2018-04-16T17:49:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a recent issue but hopefully someone will have some insight\nOccasionally when creating a vapp I'll receive a \"Connection Refused\" error from https://us-california-1-3.vchs.vmware.com --- When I turn on logging it looks like the HTTP session just times out while waiting for a task to finish.\n\nIts pretty random on when it occurs during the creation of the vapp (using the create_vapp function). \nIts taking place during the block_until_completed() function.\nAs an example here is some (sterilized) log output showing whats happening:\n\n```\nsend: 'GET /api/compute/api/task/xxxxxxxxxxxxxxxxxxx HTTP/1.1\\r\\nHost: us-california-1-3.vchs.vmware.com\\r\\nConnection: keep-alive\\r\\nx-vcloud-authorization: xxxxxxxxxxxxxx\\r\\nAccept-Encoding: gzip, deflate\\r\\nAccept: application/*+xml;version=5.7\\r\\nUser-Agent: python-requests/2.7.0 CPython/2.7.6 Linux/3.16.0-30-generic\\r\\n\\r\\n'\nreply: 'HTTP/1.1 200 OK\\r\\n'\nheader: Date: Wed, 01 Jul 2015 18:48:00 GMT\nheader: X-Frame-Options: SAMEORIGIN\nheader: X-VMWARE-VCLOUD-REQUEST-ID: xxxxxxxxxxxxxxxxxxxxxxxxxxxx\nheader: x-vcloud-authorization: xxxxxxxxxxxxxxxxxxxxxx\nheader: X-VMWARE-VCLOUD-REQUEST-EXECUTION-TIME: 38\nheader: Content-Type: application/vnd.vmware.vcloud.task+xml;version=5.7\nheader: Content-Encoding: gzip\nheader: Vary: Accept-Encoding,User-Agent\nheader: Content-Length: 647\nheader: Via: 1.1 us-california-1-3.vchs.vmware.com\nheader: Keep-Alive: timeout=15, max=100\nheader: Connection: Keep-Alive\n('Connection aborted.', error(111, 'Connection refused'))\n```\n\nI used a try/except statement on the vapp_create function and \"('Connection aborted.', error(111, 'Connection refused'))\"  is the Exception caught and printed.\n\nThoughts? This is a really big issue for me at the moment, and ultimately may end with me having to submit a ticket with the i am.vchs.vmware.com VMWare vCloud Air service to figure out why they are responding with \"Connection Refused\" or changing providers.\n\nI have two cloud service providers, the other one does not have this issue and works flawlessly with my vapp creation script --\n\nHelp? Thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/64", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/64/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/64/events", "html_url": "https://github.com/vmware/pyvcloud/issues/64", "id": 90332536, "node_id": "MDU6SXNzdWU5MDMzMjUzNg==", "number": 64, "title": "Bug in _create_instantiateVAppTemplateParams", "user": {"login": "ncantor", "id": 334001, "node_id": "MDQ6VXNlcjMzNDAwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/334001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncantor", "html_url": "https://github.com/ncantor", "followers_url": "https://api.github.com/users/ncantor/followers", "following_url": "https://api.github.com/users/ncantor/following{/other_user}", "gists_url": "https://api.github.com/users/ncantor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncantor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncantor/subscriptions", "organizations_url": "https://api.github.com/users/ncantor/orgs", "repos_url": "https://api.github.com/users/ncantor/repos", "events_url": "https://api.github.com/users/ncantor/events{/privacy}", "received_events_url": "https://api.github.com/users/ncantor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-23T09:16:07Z", "updated_at": "2015-07-02T03:12:49Z", "closed_at": "2015-07-02T03:12:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a new machine, _create_instantiateVAppTemplateParams attempts to pass a set of parameters to the templateParameters, using add_SourcedItem. Unfortunately, add_SourcedItem isn't supported in versions older than 5.6, so the whole operation fails.\nThe snippet below is where things break, on the line\n**templateParams.add_SourcedItem(params)**\n\n`````` python\nif ((self.version == \"1.0\") or (self.version == \"1.5\") or\n           (self.version == \"5.1\") or (self.version == \"5.5\")):\n            if vm_name or vm_cpus or vm_memory:\n                params = vcloudType.SourcedVmInstantiationParamsType()\n                params.set_Source(vcloudType.ReferenceType(href=vm_href))\n                templateParams.add_SourcedItem(params)\n                if vm_name:\n                    pass```\n``````\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/62", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/62/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/62/events", "html_url": "https://github.com/vmware/pyvcloud/issues/62", "id": 90133304, "node_id": "MDU6SXNzdWU5MDEzMzMwNA==", "number": 62, "title": "Version issues with 5.5 and older", "user": {"login": "lasko", "id": 131321, "node_id": "MDQ6VXNlcjEzMTMyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/131321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lasko", "html_url": "https://github.com/lasko", "followers_url": "https://api.github.com/users/lasko/followers", "following_url": "https://api.github.com/users/lasko/following{/other_user}", "gists_url": "https://api.github.com/users/lasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/lasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lasko/subscriptions", "organizations_url": "https://api.github.com/users/lasko/orgs", "repos_url": "https://api.github.com/users/lasko/repos", "events_url": "https://api.github.com/users/lasko/events{/privacy}", "received_events_url": "https://api.github.com/users/lasko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-22T15:31:46Z", "updated_at": "2015-07-02T03:13:20Z", "closed_at": "2015-07-02T03:13:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The latest release of the code creates the same issues as #41 as a result of the fix in #61 \n\nThe fix should have been something like this:\n\n```\n+\n+        if vm_name or vm_cpus or vm_memory:\n+            params = vcloudType.SourcedCompositionItemParamType()\n+            if ((self.version == \"1.0\") or (self.version == \"1.5\") \n+                    or (self.version == \"5.1\") or (self.version == \"5.5\")):\n+                pass\n+            else:\n```\n\nI'll put in a pull request for this but I'm not sure how this affects vca-cli as I'm not using it in my environment.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/61", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/61/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/61/events", "html_url": "https://github.com/vmware/pyvcloud/issues/61", "id": 89601304, "node_id": "MDU6SXNzdWU4OTYwMTMwNA==", "number": 61, "title": "Creating Vapp with vm name have changed vapp name", "user": {"login": "kastesh", "id": 7137121, "node_id": "MDQ6VXNlcjcxMzcxMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7137121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kastesh", "html_url": "https://github.com/kastesh", "followers_url": "https://api.github.com/users/kastesh/followers", "following_url": "https://api.github.com/users/kastesh/following{/other_user}", "gists_url": "https://api.github.com/users/kastesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kastesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kastesh/subscriptions", "organizations_url": "https://api.github.com/users/kastesh/orgs", "repos_url": "https://api.github.com/users/kastesh/repos", "events_url": "https://api.github.com/users/kastesh/events{/privacy}", "received_events_url": "https://api.github.com/users/kastesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-19T16:09:33Z", "updated_at": "2015-06-22T15:10:35Z", "closed_at": "2015-06-20T04:25:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've used vca-cli, that uses pyvcloud.\nI've created a vApp  from a template;  API version is  5.5.\n\nThis request is doing great:\n\n```\nvca vapp create --vapp test_vapp --catalog 'vms' --template 'template_name' --network 'network_name' --mode POOL --vdc vdc_name\n```\n\nBut if I've added --vm vm_name, I get the error:\n\n```\nvca  vapp create --vapp test_vapp --vm vm_name --catalog 'vms' --template 'template_name' --network 'network_name' --mode POOL --vdc vdc_name\n                   Traceback (most recent call last):\n  File \"/bin/vca\", line 9, in <module>\n    load_entry_point('vca-cli==12', 'console_scripts', 'vca')()\n  File \"/usr/lib/python2.7/site-packages/click/core.py\", line 664, in __call__\n    return self.main(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/click/core.py\", line 644, in main\n    rv = self.invoke(ctx)\n  File \"/usr/lib/python2.7/site-packages/click/core.py\", line 991, in invoke\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\n  File \"/usr/lib/python2.7/site-packages/click/core.py\", line 837, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/usr/lib/python2.7/site-packages/click/core.py\", line 464, in invoke\n    return callback(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/vca_cli/vca_cli.py\", line 705, in vapp\n    vca.vcloud_session.get_vcloud_headers())\n  File \"/usr/lib/python2.7/site-packages/vca_cli/vca_cli.py\", line 2460, in display_progress\n    sys.stdout.write(\"\\r\" + task_table(response.content) + '\\n')\nUnboundLocalError: local variable 'response' referenced before assignment\n```\n\nIt is happen because, there is next condition in the pyvcloud code:\nhttps://github.com/vmware/pyvcloud/blob/master/pyvcloud/vcloudair.py#L381\n\n```\n           if vm_name:\n                if self.version == \"5.5\":\n                   templateParams.set_name(vm_name)\n                else:\n                   gen_params = vcloudType.VmGeneralParamsType()\n                   gen_params.set_Name(vm_name)\n                   params.set_VmGeneralParams(gen_params)\n```\n\nThis part is redefined name for created vApp. \nThe situtation seems very odd, the vApp is created with name vm_name, not with name test_vapp.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvcloud/issues/58", "repository_url": "https://api.github.com/repos/vmware/pyvcloud", "labels_url": "https://api.github.com/repos/vmware/pyvcloud/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvcloud/issues/58/comments", "events_url": "https://api.github.com/repos/vmware/pyvcloud/issues/58/events", "html_url": "https://github.com/vmware/pyvcloud/issues/58", "id": 88532300, "node_id": "MDU6SXNzdWU4ODUzMjMwMA==", "number": 58, "title": "Upload an iso media to a catalog", "user": {"login": "piraz", "id": 715641, "node_id": "MDQ6VXNlcjcxNTY0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/715641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piraz", "html_url": "https://github.com/piraz", "followers_url": "https://api.github.com/users/piraz/followers", "following_url": "https://api.github.com/users/piraz/following{/other_user}", "gists_url": "https://api.github.com/users/piraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/piraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piraz/subscriptions", "organizations_url": "https://api.github.com/users/piraz/orgs", "repos_url": "https://api.github.com/users/piraz/repos", "events_url": "https://api.github.com/users/piraz/events{/privacy}", "received_events_url": "https://api.github.com/users/piraz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-15T20:32:27Z", "updated_at": "2015-06-18T19:25:41Z", "closed_at": "2015-06-18T19:25:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want the ability of upload an iso media to the catalog.\n\nThe api will receive the catalog name, media name, description and type and the path to the iso file.\n\nI don't know if media type is necessary on this case but at the HTTP Api it looks like other types of media can be uploaded but by default the ISO media type is used.\n", "performed_via_github_app": null, "score": 1.0}]}