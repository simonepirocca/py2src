{"total_count": 21, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/225", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/225/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/225/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/225", "id": 479075019, "node_id": "MDU6SXNzdWU0NzkwNzUwMTk=", "number": 225, "title": "Feature Request: linear interpolation for mean", "user": {"login": "Inspirateur", "id": 22746898, "node_id": "MDQ6VXNlcjIyNzQ2ODk4", "avatar_url": "https://avatars2.githubusercontent.com/u/22746898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Inspirateur", "html_url": "https://github.com/Inspirateur", "followers_url": "https://api.github.com/users/Inspirateur/followers", "following_url": "https://api.github.com/users/Inspirateur/following{/other_user}", "gists_url": "https://api.github.com/users/Inspirateur/gists{/gist_id}", "starred_url": "https://api.github.com/users/Inspirateur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Inspirateur/subscriptions", "organizations_url": "https://api.github.com/users/Inspirateur/orgs", "repos_url": "https://api.github.com/users/Inspirateur/repos", "events_url": "https://api.github.com/users/Inspirateur/events{/privacy}", "received_events_url": "https://api.github.com/users/Inspirateur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-09T16:42:34Z", "updated_at": "2019-12-29T22:56:30Z", "closed_at": "2019-12-29T22:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I recently discovered this nice library and decided to try it since I got unevenly spaced data,\r\nhowever I found out today that the .mean() wasn't doing linear interpolation as I thought it would be:\r\n```python\r\n>>> from traces import TimeSeries\r\n>>> t = TimeSeries()\r\n>>> t[0] = 0\r\n>>> t[1] = 0\r\n>>> t[3] = 20\r\n>>> t.mean(0, 2)\r\n0.0\r\n```\r\nWith linear interpolation between 2 points we would find that t[2] = 10 and doing the average from 0 to 2 would give us 3.333 in this example.\r\nA simple optional argument in mean() to choose the interpolation method would be fantastic, and I really think that it would be useful to many users who are not using traces exclusively for binary data (where linear interpolation would make no sense).\r\nI know that we can re-sample the TimeSeries but I think a shortcut like this would be really neat since this library is designed with ease of use in mind.\r\n\r\nThanks for reading and have a nice day \ud83d\udc4b \r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/221", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/221/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/221/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/221", "id": 384474369, "node_id": "MDU6SXNzdWUzODQ0NzQzNjk=", "number": 221, "title": "SorterContainers >2.0 breaks backwards compatibility", "user": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-26T19:23:24Z", "updated_at": "2019-11-24T03:43:56Z", "closed_at": "2019-11-24T03:43:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a reminder that traces doesn't currently work with the current version of SortedContainers because of a backwards incompatibility when iterating over a SortedDict. I should look into this and remedy it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/150", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/150/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/150/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/150", "id": 255742216, "node_id": "MDU6SXNzdWUyNTU3NDIyMTY=", "number": 150, "title": "[Question] How to recreate traces chart?", "user": {"login": "manugarri", "id": 3670355, "node_id": "MDQ6VXNlcjM2NzAzNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3670355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manugarri", "html_url": "https://github.com/manugarri", "followers_url": "https://api.github.com/users/manugarri/followers", "following_url": "https://api.github.com/users/manugarri/following{/other_user}", "gists_url": "https://api.github.com/users/manugarri/gists{/gist_id}", "starred_url": "https://api.github.com/users/manugarri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manugarri/subscriptions", "organizations_url": "https://api.github.com/users/manugarri/orgs", "repos_url": "https://api.github.com/users/manugarri/repos", "events_url": "https://api.github.com/users/manugarri/events{/privacy}", "received_events_url": "https://api.github.com/users/manugarri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-06T21:05:01Z", "updated_at": "2017-09-07T21:21:43Z", "closed_at": "2017-09-07T20:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder, how could one plot traces'  Signature plot? ![signature plot](https://traces.readthedocs.io/en/latest/_static/img/logo.png) ? \r\n\r\n\r\nI was wondering if the library has anything to do with the charts (as per the docs that is not the case) but seeing a couple of charts like that in the docs made me think that maybe producing that kind of charts is within the scope of the projects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/146", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/146/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/146/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/146", "id": 249406898, "node_id": "MDU6SXNzdWUyNDk0MDY4OTg=", "number": 146, "title": "How are the plots in the documentation created?", "user": {"login": "Ogaday", "id": 6689770, "node_id": "MDQ6VXNlcjY2ODk3NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6689770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ogaday", "html_url": "https://github.com/Ogaday", "followers_url": "https://api.github.com/users/Ogaday/followers", "following_url": "https://api.github.com/users/Ogaday/following{/other_user}", "gists_url": "https://api.github.com/users/Ogaday/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ogaday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ogaday/subscriptions", "organizations_url": "https://api.github.com/users/Ogaday/orgs", "repos_url": "https://api.github.com/users/Ogaday/repos", "events_url": "https://api.github.com/users/Ogaday/events{/privacy}", "received_events_url": "https://api.github.com/users/Ogaday/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-10T16:36:48Z", "updated_at": "2020-03-29T10:43:07Z", "closed_at": "2017-08-18T18:15:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not a bug, but just curious about how you've plotted the charts in the documentation and what the recommended approach for plotting TimeSeries objects is? I couldn't find a *trace* of this information in the repo. Thanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/117", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/117/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/117/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/117", "id": 226681482, "node_id": "MDU6SXNzdWUyMjY2ODE0ODI=", "number": 117, "title": "Can't pickle TimeSeries objects", "user": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-05T20:20:30Z", "updated_at": "2017-05-08T16:37:16Z", "closed_at": "2017-05-08T16:37:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[UPDATE] This only seems to happen on python 2.7\r\n\r\nTrying to pickle a TimeSeries object:\r\n\r\n```python\r\nimport traces\r\nofile = open('test.pkl', 'wb')\r\nimport pickle\r\nts = traces.TimeSeries()\r\nts[23]=\"blah\"\r\nts[2]=\"foo\"\r\npickle.dump(ts, ofile)\r\n```\r\n\r\nI get the following error:\r\n\r\n```python\r\nIn [9]: pickle.dump(ts, ofile)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-9-f1eed5bd8d83> in <module>()\r\n----> 1 pickle.dump(ts, ofile)\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in dump(obj, file, protocol)\r\n   1374\r\n   1375 def dump(obj, file, protocol=None):\r\n-> 1376     Pickler(file, protocol).dump(obj)\r\n   1377\r\n   1378 def dumps(obj, protocol=None):\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in dump(self, obj)\r\n    222         if self.proto >= 2:\r\n    223             self.write(PROTO + chr(self.proto))\r\n--> 224         self.save(obj)\r\n    225         self.write(STOP)\r\n    226\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in save(self, obj)\r\n    329\r\n    330         # Save the reduce() output and finally memoize the object\r\n--> 331         self.save_reduce(obj=obj, *rv)\r\n    332\r\n    333     def persistent_id(self, obj):\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in save_reduce(self, func, args, state, listitems, dictitems, obj)\r\n    423\r\n    424         if state is not None:\r\n--> 425             save(state)\r\n    426             write(BUILD)\r\n    427\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in save(self, obj)\r\n    284         f = self.dispatch.get(t)\r\n    285         if f:\r\n--> 286             f(self, obj) # Call unbound method with explicit self\r\n    287             return\r\n    288\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in save_dict(self, obj)\r\n    653\r\n    654         self.memoize(obj)\r\n--> 655         self._batch_setitems(obj.iteritems())\r\n    656\r\n    657     dispatch[DictionaryType] = save_dict\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in _batch_setitems(self, items)\r\n    667             for k, v in items:\r\n    668                 save(k)\r\n--> 669                 save(v)\r\n    670                 write(SETITEM)\r\n    671             return\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in save(self, obj)\r\n    284         f = self.dispatch.get(t)\r\n    285         if f:\r\n--> 286             f(self, obj) # Call unbound method with explicit self\r\n    287             return\r\n    288\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in save_dict(self, obj)\r\n    653\r\n    654         self.memoize(obj)\r\n--> 655         self._batch_setitems(obj.iteritems())\r\n    656\r\n    657     dispatch[DictionaryType] = save_dict\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in _batch_setitems(self, items)\r\n    667             for k, v in items:\r\n    668                 save(k)\r\n--> 669                 save(v)\r\n    670                 write(SETITEM)\r\n    671             return\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/lib/python2.7/pickle.pyc in save(self, obj)\r\n    304             reduce = getattr(obj, \"__reduce_ex__\", None)\r\n    305             if reduce:\r\n--> 306                 rv = reduce(self.proto)\r\n    307             else:\r\n    308                 reduce = getattr(obj, \"__reduce__\", None)\r\n\r\n/Users/vlad/.pyenv/versions/2.7.13/envs/prelude_monitor/lib/python2.7/copy_reg.pyc in _reduce_ex(self, proto)\r\n     68     else:\r\n     69         if base is self.__class__:\r\n---> 70             raise TypeError, \"can't pickle %s objects\" % base.__name__\r\n     71         state = base(self)\r\n     72     args = (self.__class__, base, state)\r\n\r\nTypeError: can't pickle instancemethod objects```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/107", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/107/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/107/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/107", "id": 214190857, "node_id": "MDU6SXNzdWUyMTQxOTA4NTc=", "number": 107, "title": "histogram should not return values with 0 mass for min/max", "user": {"login": "stringertheory", "id": 1110950, "node_id": "MDQ6VXNlcjExMTA5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1110950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringertheory", "html_url": "https://github.com/stringertheory", "followers_url": "https://api.github.com/users/stringertheory/followers", "following_url": "https://api.github.com/users/stringertheory/following{/other_user}", "gists_url": "https://api.github.com/users/stringertheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringertheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringertheory/subscriptions", "organizations_url": "https://api.github.com/users/stringertheory/orgs", "repos_url": "https://api.github.com/users/stringertheory/repos", "events_url": "https://api.github.com/users/stringertheory/events{/privacy}", "received_events_url": "https://api.github.com/users/stringertheory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-14T20:06:27Z", "updated_at": "2019-11-24T17:16:54Z", "closed_at": "2019-11-24T17:16:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For example:\r\n\r\n```\r\n>>> Histogram(None, 1000, {0: 0.6666666666666666, 1: 0.3333333333333333, 2: 0}).max()\r\n2\r\n```\r\n\r\nIt should be `1`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/100", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/100/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/100/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/100", "id": 210895649, "node_id": "MDU6SXNzdWUyMTA4OTU2NDk=", "number": 100, "title": "TimeSeries.merge fails when values are of different types", "user": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187262572, "node_id": "MDU6TGFiZWwxODcyNjI1NzI=", "url": "https://api.github.com/repos/datascopeanalytics/traces/labels/Bug%20Report", "name": "Bug Report", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-02-28T20:34:20Z", "updated_at": "2017-02-28T20:42:12Z", "closed_at": "2017-02-28T20:42:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If you try and run the following:\r\n\r\n```python\r\nfrom traces import TimeSeries\r\nts_a = TimeSeries(default=None)\r\nts_b = TimeSeries(default=None)\r\nts_a[0] = True\r\nts_b[0] = None\r\nts_merge = TimeSeries.merge([ts_a, ts_b])\r\n```\r\nyou will get this error:\r\n\r\n```python\r\n  File \"/src/traces/traces/timeseries.py\", line 687, in merge\r\n    for t, merged in cls.iter_merge(ts_list):\r\n  File \"/src/traces/traces/timeseries.py\", line 654, in iter_merge\r\n    for index, (t, state) in enumerate(cls._iter_merge(timeseries_list)):\r\n  File \"/src/traces/traces/timeseries.py\", line 616, in _iter_merge\r\n    (t, next_value), index, iterator = queue.get()\r\n  File \"/usr/local/lib/python3.6/queue.py\", line 174, in get\r\n    item = self._get()\r\n  File \"/usr/local/lib/python3.6/queue.py\", line 230, in _get\r\n    return heappop(self.queue)\r\nTypeError: '<' not supported between instances of 'bool' and 'NoneType'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/98", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/98/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/98/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/98", "id": 210628067, "node_id": "MDU6SXNzdWUyMTA2MjgwNjc=", "number": 98, "title": "Trying to calculate the mean of an empty Histogram fails", "user": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187262572, "node_id": "MDU6TGFiZWwxODcyNjI1NzI=", "url": "https://api.github.com/repos/datascopeanalytics/traces/labels/Bug%20Report", "name": "Bug Report", "color": "fc2929", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-27T22:32:03Z", "updated_at": "2019-11-24T17:13:29Z", "closed_at": "2019-11-24T17:13:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running `.mean()` on an empty Histogram object (`Histogram(None, 1000, {0: 0.0})`) fails with a divide by zero error:\r\n\r\n```\r\n  File \"/src/traces/traces/histogram.py\", line 30, in mean\r\n    return weighted_sum / float(self.total())\r\nZeroDivisionError: float division by zero\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/80", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/80/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/80/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/80", "id": 197013428, "node_id": "MDU6SXNzdWUxOTcwMTM0Mjg=", "number": 80, "title": "merge fails when passed an empty iterable", "user": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-21T19:27:30Z", "updated_at": "2016-12-23T03:38:40Z", "closed_at": "2016-12-23T03:38:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Running the following line of code fails:\r\n```\r\ntraces.TimeSeries().merge([], default=None)\r\n```\r\nwith the error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/vlad/.virtualenvs/steelcase/src/traces/traces/timeseries.py\", line 679, in merge\r\n    default = unique_defaults.pop()\r\nKeyError: 'pop from an empty set'\r\n```\r\n\r\nIdeally this would return an empty `TimeSeries` with the `default` set to `None`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/45", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/45/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/45/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/45", "id": 180360054, "node_id": "MDU6SXNzdWUxODAzNjAwNTQ=", "number": 45, "title": "clean up the base module", "user": {"login": "stringertheory", "id": 1110950, "node_id": "MDQ6VXNlcjExMTA5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1110950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringertheory", "html_url": "https://github.com/stringertheory", "followers_url": "https://api.github.com/users/stringertheory/followers", "following_url": "https://api.github.com/users/stringertheory/following{/other_user}", "gists_url": "https://api.github.com/users/stringertheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringertheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringertheory/subscriptions", "organizations_url": "https://api.github.com/users/stringertheory/orgs", "repos_url": "https://api.github.com/users/stringertheory/repos", "events_url": "https://api.github.com/users/stringertheory/events{/privacy}", "received_events_url": "https://api.github.com/users/stringertheory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-30T17:33:54Z", "updated_at": "2016-12-02T05:29:50Z", "closed_at": "2016-12-02T05:29:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Current implementation was a last-minute hack and there's a bunch of duplicate code and terrible names that need to be cleaned up.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/40", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/40/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/40/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/40", "id": 179590632, "node_id": "MDU6SXNzdWUxNzk1OTA2MzI=", "number": 40, "title": "add possibility to write ts[start:end] = v to change value on an interval", "user": {"login": "sdementen", "id": 1304950, "node_id": "MDQ6VXNlcjEzMDQ5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1304950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdementen", "html_url": "https://github.com/sdementen", "followers_url": "https://api.github.com/users/sdementen/followers", "following_url": "https://api.github.com/users/sdementen/following{/other_user}", "gists_url": "https://api.github.com/users/sdementen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdementen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdementen/subscriptions", "organizations_url": "https://api.github.com/users/sdementen/orgs", "repos_url": "https://api.github.com/users/sdementen/repos", "events_url": "https://api.github.com/users/sdementen/events{/privacy}", "received_events_url": "https://api.github.com/users/sdementen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-27T19:32:03Z", "updated_at": "2017-03-15T04:23:11Z", "closed_at": "2017-03-15T04:23:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a use case where I need to change the value of a timeseries on an interval without changing the value outside of the interval, ie do something like ts[start:end] = value.\nJust setting \n\n``` python\nts[end] = ts[end]   # freezing/anchoring the current value of ts as of [end, ...)\nts[start] = value      # changing the value as of [start, ...)\n```\n\nmay fail as intermediate points in [start,end) may exist ==> we need to remove all intermediate points (which is easy as `ts.iterperiods(start,end)` provides them nicely).\n\nI think the function below does it properly (but it would be better integrated in the **item** to use the slice notation)\n\n``` python\ndef set_slice(ts, start, end, value):\n    \"\"\"\n   ts[start:end] = value ==> call set_slice(ts, start, end, value)\n    Set the value of the ts so that\n    - on the interval [start, end) we have the new value\n    - on [end, ...) we haven't change the value\n    - on (..., start) we haven't change the value neither\n    We replace the value of the ts on an interval.\n\n    :param ts: \n    :param start: \n    :param end: \n    :param value: \n    :return: \n    \"\"\"\n    # for each interval to render\n    for i, (s, e, v) in enumerate(list(ts.iterperiods(start, end))):\n        # look at all intervals included in the current interval\n        # (always at least 1)\n        if i == 0:\n            # if the first, set initial value to new value of range\n            ts[s] = value\n        else:\n            # otherwise, remove intermediate key\n            del ts[s]\n    # finish by setting the end of the interval to the previous value\n    ts[end] = v\n\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/16", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/16/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/16/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/16", "id": 178252508, "node_id": "MDU6SXNzdWUxNzgyNTI1MDg=", "number": 16, "title": "When using a mask with TimeSeries.distribution(), mask.start() is called in `timeseries.py` but `start()` doesn't exist", "user": {"login": "michaelmoliterno", "id": 9665491, "node_id": "MDQ6VXNlcjk2NjU0OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9665491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelmoliterno", "html_url": "https://github.com/michaelmoliterno", "followers_url": "https://api.github.com/users/michaelmoliterno/followers", "following_url": "https://api.github.com/users/michaelmoliterno/following{/other_user}", "gists_url": "https://api.github.com/users/michaelmoliterno/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelmoliterno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelmoliterno/subscriptions", "organizations_url": "https://api.github.com/users/michaelmoliterno/orgs", "repos_url": "https://api.github.com/users/michaelmoliterno/repos", "events_url": "https://api.github.com/users/michaelmoliterno/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelmoliterno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-21T05:47:32Z", "updated_at": "2016-09-21T21:09:03Z", "closed_at": "2016-09-21T21:09:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think this will be fixed with the next bump; looked for an issue related to this but didn't find one.  Feel free to close this out if it was as simple as defining `start()` for `TimeSeries`.\n\n```\nTraceback (most recent call last):\n  File \"run_plots.py\", line 25, in <module>\n    make_plots()\n  File \"/Users/mjfm/projects/modustri/analysis/plots/see_cart_trips.py\", line 55, in make_plots\n    mask = front_ts,\n  File \"/Users/mjfm/Virtualenvs/modustri/lib/python2.7/site-packages/traces/timeseries.py\", line 622, in distribution\n    new_ts = self.slice(mask.start(), mask.end())\nAttributeError: 'TimeSeries' object has no attribute 'start'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/15", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/15/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/15/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/15", "id": 178243060, "node_id": "MDU6SXNzdWUxNzgyNDMwNjA=", "number": 15, "title": "Values in TimeSeries.distribution() are sentence-cased regardless of how vales were added to the TimeSeries ", "user": {"login": "michaelmoliterno", "id": 9665491, "node_id": "MDQ6VXNlcjk2NjU0OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9665491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelmoliterno", "html_url": "https://github.com/michaelmoliterno", "followers_url": "https://api.github.com/users/michaelmoliterno/followers", "following_url": "https://api.github.com/users/michaelmoliterno/following{/other_user}", "gists_url": "https://api.github.com/users/michaelmoliterno/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelmoliterno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelmoliterno/subscriptions", "organizations_url": "https://api.github.com/users/michaelmoliterno/orgs", "repos_url": "https://api.github.com/users/michaelmoliterno/repos", "events_url": "https://api.github.com/users/michaelmoliterno/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelmoliterno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-21T04:25:20Z", "updated_at": "2016-09-25T18:32:44Z", "closed_at": "2016-09-25T18:32:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you are using strings as values in a TimeSeries:\n\n```\nts = traces.TimeSeries()\nts[1] = JUNK\nts[3] = JANK\nts[5] = WHAT\n```\n\nIf you call something like `ts.distrubution(min, max)`, you would see something like this:\n\n```\nHistogram(None, 1000, {'Jank': 0.16008504570112725, 'Junk': 0.04229136076598496, 'What': 0.797577092766277})\n```\n\nIt looks like somewhere along the line, the string-values are getting sentence-cased. Not sure exactly where yet, but this could be confusing or cause silly bugs if looking-up these objects with the wrong value. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/14", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/14/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/14/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/14", "id": 177497104, "node_id": "MDU6SXNzdWUxNzc0OTcxMDQ=", "number": 14, "title": "rename `default_values` to singular (`default_value`)", "user": {"login": "stringertheory", "id": 1110950, "node_id": "MDQ6VXNlcjExMTA5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1110950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringertheory", "html_url": "https://github.com/stringertheory", "followers_url": "https://api.github.com/users/stringertheory/followers", "following_url": "https://api.github.com/users/stringertheory/following{/other_user}", "gists_url": "https://api.github.com/users/stringertheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringertheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringertheory/subscriptions", "organizations_url": "https://api.github.com/users/stringertheory/orgs", "repos_url": "https://api.github.com/users/stringertheory/repos", "events_url": "https://api.github.com/users/stringertheory/events{/privacy}", "received_events_url": "https://api.github.com/users/stringertheory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-16T19:02:11Z", "updated_at": "2016-09-20T02:51:16Z", "closed_at": "2016-09-20T02:51:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "in the `__init__` method of `TimeSeries`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/13", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/13/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/13/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/13", "id": 177496677, "node_id": "MDU6SXNzdWUxNzc0OTY2Nzc=", "number": 13, "title": "better methods for start and end times/values", "user": {"login": "stringertheory", "id": 1110950, "node_id": "MDQ6VXNlcjExMTA5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1110950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringertheory", "html_url": "https://github.com/stringertheory", "followers_url": "https://api.github.com/users/stringertheory/followers", "following_url": "https://api.github.com/users/stringertheory/following{/other_user}", "gists_url": "https://api.github.com/users/stringertheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringertheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringertheory/subscriptions", "organizations_url": "https://api.github.com/users/stringertheory/orgs", "repos_url": "https://api.github.com/users/stringertheory/repos", "events_url": "https://api.github.com/users/stringertheory/events{/privacy}", "received_events_url": "https://api.github.com/users/stringertheory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-16T19:00:08Z", "updated_at": "2016-09-20T02:51:16Z", "closed_at": "2016-09-20T02:51:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Maybe something like:\n\n```\nti, tf = ts.get_first_and_last_times()\n\nvi, vf = ts.get_first_and_last_values()\n\n(ti, vi), (tf, vf) = ts.get_first_and_list()\n```\n\nto be better than:\n\n```\nti, vi = ts.get_by_index(0)\ntf, vf = ts.get_by_index(-1)\n```\n\n(or at least have `get_by_index` documented)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/12", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/12/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/12/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/12", "id": 177496450, "node_id": "MDU6SXNzdWUxNzc0OTY0NTA=", "number": 12, "title": "make sorted dictionary a \"private\" attribute", "user": {"login": "stringertheory", "id": 1110950, "node_id": "MDQ6VXNlcjExMTA5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1110950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringertheory", "html_url": "https://github.com/stringertheory", "followers_url": "https://api.github.com/users/stringertheory/followers", "following_url": "https://api.github.com/users/stringertheory/following{/other_user}", "gists_url": "https://api.github.com/users/stringertheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringertheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringertheory/subscriptions", "organizations_url": "https://api.github.com/users/stringertheory/orgs", "repos_url": "https://api.github.com/users/stringertheory/repos", "events_url": "https://api.github.com/users/stringertheory/events{/privacy}", "received_events_url": "https://api.github.com/users/stringertheory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-16T18:59:05Z", "updated_at": "2016-09-20T02:51:16Z", "closed_at": "2016-09-20T02:51:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "to avoid temptations for `ts.d`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/10", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/10/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/10/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/10", "id": 172773250, "node_id": "MDU6SXNzdWUxNzI3NzMyNTA=", "number": 10, "title": "merge with different domains", "user": {"login": "stringertheory", "id": 1110950, "node_id": "MDQ6VXNlcjExMTA5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1110950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringertheory", "html_url": "https://github.com/stringertheory", "followers_url": "https://api.github.com/users/stringertheory/followers", "following_url": "https://api.github.com/users/stringertheory/following{/other_user}", "gists_url": "https://api.github.com/users/stringertheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringertheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringertheory/subscriptions", "organizations_url": "https://api.github.com/users/stringertheory/orgs", "repos_url": "https://api.github.com/users/stringertheory/repos", "events_url": "https://api.github.com/users/stringertheory/events{/privacy}", "received_events_url": "https://api.github.com/users/stringertheory/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187262574, "node_id": "MDU6TGFiZWwxODcyNjI1NzQ=", "url": "https://api.github.com/repos/datascopeanalytics/traces/labels/Enhancement%20Request", "name": "Enhancement Request", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-23T18:34:01Z", "updated_at": "2017-03-15T04:23:29Z", "closed_at": "2017-03-15T04:23:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It could be useful to be able to merge time series with different domains. The resulting domain could either be the union or intersection. In case of the union, it would probably be necessary to specify a \"fill value\".\n\nThis would be useful if you happen to have time series with different domains (say, light bulb sensors but with different on times), and you still want to do a simple count of \"number of lights on\".\n\n```\nTimeSeries.merge([a, b], domain='union', fillvalue=0) \nTimeSeries.merge([a, b], domain='intersection')\nTimeSeries.merge([a, b], domain=None) # throw error with different domains\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/8", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/8/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/8/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/8", "id": 134621944, "node_id": "MDU6SXNzdWUxMzQ2MjE5NDQ=", "number": 8, "title": "Add `compact` option to `iterperiods()`", "user": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187262574, "node_id": "MDU6TGFiZWwxODcyNjI1NzQ=", "url": "https://api.github.com/repos/datascopeanalytics/traces/labels/Enhancement%20Request", "name": "Enhancement Request", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-18T16:05:31Z", "updated_at": "2016-02-18T21:37:09Z", "closed_at": "2016-02-18T21:37:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This would merge adjacent periods that have the same value and return them as only one period. Ideally this would be done efficiently, although I'm unclear what that means (store a `compact` version of the timeseries along with the non-compact one?)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/5", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/5/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/5/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/5", "id": 122125791, "node_id": "MDU6SXNzdWUxMjIxMjU3OTE=", "number": 5, "title": "Add functionality/documentation for changing the \"default\" value before first entry", "user": {"login": "vlsd", "id": 278058, "node_id": "MDQ6VXNlcjI3ODA1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/278058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlsd", "html_url": "https://github.com/vlsd", "followers_url": "https://api.github.com/users/vlsd/followers", "following_url": "https://api.github.com/users/vlsd/following{/other_user}", "gists_url": "https://api.github.com/users/vlsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlsd/subscriptions", "organizations_url": "https://api.github.com/users/vlsd/orgs", "repos_url": "https://api.github.com/users/vlsd/repos", "events_url": "https://api.github.com/users/vlsd/events{/privacy}", "received_events_url": "https://api.github.com/users/vlsd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187262574, "node_id": "MDU6TGFiZWwxODcyNjI1NzQ=", "url": "https://api.github.com/repos/datascopeanalytics/traces/labels/Enhancement%20Request", "name": "Enhancement Request", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-14T20:37:23Z", "updated_at": "2016-09-20T02:46:02Z", "closed_at": "2016-09-20T02:46:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now, the default value starts at zero. Several simple examples where this might not need be the case:\n- a sensor where the readings are between 0 and 16, centered at 8\n- a sensor where 1 is neutral and 0 is activated\n- a signal representing the inverse or complement of another signal\n- etc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/2", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/2/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/2/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/2", "id": 115966532, "node_id": "MDU6SXNzdWUxMTU5NjY1MzI=", "number": 2, "title": "Add method for getting the last/most recent item in a TimeSeries", "user": {"login": "bjlange", "id": 780375, "node_id": "MDQ6VXNlcjc4MDM3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/780375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjlange", "html_url": "https://github.com/bjlange", "followers_url": "https://api.github.com/users/bjlange/followers", "following_url": "https://api.github.com/users/bjlange/following{/other_user}", "gists_url": "https://api.github.com/users/bjlange/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjlange/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjlange/subscriptions", "organizations_url": "https://api.github.com/users/bjlange/orgs", "repos_url": "https://api.github.com/users/bjlange/repos", "events_url": "https://api.github.com/users/bjlange/events{/privacy}", "received_events_url": "https://api.github.com/users/bjlange/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-09T21:11:16Z", "updated_at": "2015-12-14T21:21:18Z", "closed_at": "2015-12-14T21:21:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Like negative indexing or `.last()`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/datascopeanalytics/traces/issues/1", "repository_url": "https://api.github.com/repos/datascopeanalytics/traces", "labels_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/1/comments", "events_url": "https://api.github.com/repos/datascopeanalytics/traces/issues/1/events", "html_url": "https://github.com/datascopeanalytics/traces/issues/1", "id": 65489119, "node_id": "MDU6SXNzdWU2NTQ4OTExOQ==", "number": 1, "title": "Write good descriptions of what the from_many* methods do", "user": {"login": "stringertheory", "id": 1110950, "node_id": "MDQ6VXNlcjExMTA5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1110950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringertheory", "html_url": "https://github.com/stringertheory", "followers_url": "https://api.github.com/users/stringertheory/followers", "following_url": "https://api.github.com/users/stringertheory/following{/other_user}", "gists_url": "https://api.github.com/users/stringertheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringertheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringertheory/subscriptions", "organizations_url": "https://api.github.com/users/stringertheory/orgs", "repos_url": "https://api.github.com/users/stringertheory/repos", "events_url": "https://api.github.com/users/stringertheory/events{/privacy}", "received_events_url": "https://api.github.com/users/stringertheory/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187262574, "node_id": "MDU6TGFiZWwxODcyNjI1NzQ=", "url": "https://api.github.com/repos/datascopeanalytics/traces/labels/Enhancement%20Request", "name": "Enhancement Request", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-31T16:17:04Z", "updated_at": "2016-09-20T02:51:16Z", "closed_at": "2016-09-20T02:51:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right, now, they're pretty impenetrable.\n", "performed_via_github_app": null, "score": 1.0}]}