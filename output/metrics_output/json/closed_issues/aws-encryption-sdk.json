{"total_count": 73, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/279", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/279/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/279/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/279", "id": 659642872, "node_id": "MDU6SXNzdWU2NTk2NDI4NzI=", "number": 279, "title": "Implementation: Raw keyrings MUST NOT accept a key namespace of \"aws-kms\"", "user": {"login": "MatthewBennington", "id": 14111207, "node_id": "MDQ6VXNlcjE0MTExMjA3", "avatar_url": "https://avatars3.githubusercontent.com/u/14111207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatthewBennington", "html_url": "https://github.com/MatthewBennington", "followers_url": "https://api.github.com/users/MatthewBennington/followers", "following_url": "https://api.github.com/users/MatthewBennington/following{/other_user}", "gists_url": "https://api.github.com/users/MatthewBennington/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatthewBennington/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatthewBennington/subscriptions", "organizations_url": "https://api.github.com/users/MatthewBennington/orgs", "repos_url": "https://api.github.com/users/MatthewBennington/repos", "events_url": "https://api.github.com/users/MatthewBennington/events{/privacy}", "received_events_url": "https://api.github.com/users/MatthewBennington/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-07-17T21:07:11Z", "updated_at": "2020-08-07T21:15:25Z", "closed_at": "2020-08-05T17:22:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See awslabs/aws-encryption-sdk-specification#171", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/268", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/268/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/268/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/268", "id": 616875811, "node_id": "MDU6SXNzdWU2MTY4NzU4MTE=", "number": 268, "title": "[keyring] should key names be bytes or str?", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317672, "node_id": "MDU6TGFiZWw3ODIzMTc2NzI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocking%20next%20release", "name": "blocking next release", "color": "f9d0c4", "default": false, "description": null}, {"id": 1991331026, "node_id": "MDU6TGFiZWwxOTkxMzMxMDI2", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/doc%20impact", "name": "doc impact", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-05-12T18:42:24Z", "updated_at": "2020-08-05T17:20:53Z", "closed_at": "2020-08-05T17:20:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think this was an evolutionary thing caused originally by the provider info needing to be bytes, leading to the MKP key ID being bytes and then bleeding over into keyrings with key names.\r\n\r\nWe need to make sure that we are consistent with the spec and other implementations on this point, whether we accept just a string, just bytes, or either.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/258", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/258/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/258/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/258", "id": 604986558, "node_id": "MDU6SXNzdWU2MDQ5ODY1NTg=", "number": 258, "title": "[keyring] the filtering client suppliers need to check the client region after getting it as well as before", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317672, "node_id": "MDU6TGFiZWw3ODIzMTc2NzI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocking%20next%20release", "name": "blocking next release", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-04-22T18:55:10Z", "updated_at": "2020-08-05T18:31:20Z", "closed_at": "2020-08-05T18:31:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per https://github.com/awslabs/aws-encryption-sdk-specification/issues/90, the filtering client suppliers need to check the client region after getting it from the underlying supplier before returning it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/257", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/257/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/257/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/257", "id": 604366473, "node_id": "MDU6SXNzdWU2MDQzNjY0NzM=", "number": 257, "title": "[keyring] change raw RSA keyring to fit spec clarification", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317672, "node_id": "MDU6TGFiZWw3ODIzMTc2NzI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocking%20next%20release", "name": "blocking next release", "color": "f9d0c4", "default": false, "description": null}, {"id": 1991331026, "node_id": "MDU6TGFiZWwxOTkxMzMxMDI2", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/doc%20impact", "name": "doc impact", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-04-22T00:24:50Z", "updated_at": "2020-04-23T20:51:25Z", "closed_at": "2020-04-23T20:51:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per https://github.com/awslabs/aws-encryption-sdk-specification/issues/91, the following changes need to be made to the raw RSA keyring:\r\n\r\n- [x] If only a private key is provided, the keyring MUST NOT derive a private key from it for use on encrypt.\r\n- [x] If no public key is provided, the keyring MUST throw an exception on encrypt.\r\n- [x] If a public key and private key that are not part of the same keypair are provided, the keyring MUST throw an error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/254", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/254/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/254/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/254", "id": 601488796, "node_id": "MDU6SXNzdWU2MDE0ODg3OTY=", "number": 254, "title": "KMSMasterKeyProvider with 2 keys from same region", "user": {"login": "anurag1192", "id": 11970353, "node_id": "MDQ6VXNlcjExOTcwMzUz", "avatar_url": "https://avatars2.githubusercontent.com/u/11970353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anurag1192", "html_url": "https://github.com/anurag1192", "followers_url": "https://api.github.com/users/anurag1192/followers", "following_url": "https://api.github.com/users/anurag1192/following{/other_user}", "gists_url": "https://api.github.com/users/anurag1192/gists{/gist_id}", "starred_url": "https://api.github.com/users/anurag1192/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anurag1192/subscriptions", "organizations_url": "https://api.github.com/users/anurag1192/orgs", "repos_url": "https://api.github.com/users/anurag1192/repos", "events_url": "https://api.github.com/users/anurag1192/events{/privacy}", "received_events_url": "https://api.github.com/users/anurag1192/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-16T21:20:34Z", "updated_at": "2020-04-17T20:32:49Z", "closed_at": "2020-04-17T20:32:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm trying encryptionsdk with 2 KMS keys from same region. For encrypt I'm using key1 from same region and for decrypt I'm using key2 from same region. The decrypt always works and uses key1. Shouldn't the decrypt operation fail in this case?  I'm confused as to why this works like this. See the code below:\r\n\r\n```\r\nimport aws_encryption_sdk\r\n\r\nkey-arn-A = \"arn:aws:kms:us-west-2:<account-id>:key/key-id-1\"\r\nkey-arn-B = \"arn:aws:kms:us-west-2:<account-id>:key/key-id-2\"\r\n\r\nmaster_key_provider = aws_encryption_sdk.KMSMasterKeyProvider()\r\nmaster_key_provider.add_master_key(key-arn-A)\r\n\r\n\r\n# Encrypt the plaintext source data.\r\nciphertext, encryptor_header = aws_encryption_sdk.encrypt(\r\n    source=source_plaintext,\r\n    key_provider=master_key_provider\r\n)\r\nprint(\"encryption header is\",encryptor_header)\r\n#print('Ciphertext: ', ciphertext)\r\n\r\n\r\nkeyprovider2 = aws_encryption_sdk.KMSMasterKeyProvider()\r\nkeyprovider2.add_master_key(key-arn-B)\r\n# Decrypt the ciphertext.\r\ncycled_plaintext, decrypted_header = aws_encryption_sdk.decrypt(\r\n    source=ciphertext,\r\n    key_provider=keyprovider2\r\n)\r\nprint(\"-------------------------------------------------------\")\r\n\r\nprint(\"encryption header is\",decrypted_header)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/252", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/252/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/252/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/252", "id": 601260596, "node_id": "MDU6SXNzdWU2MDEyNjA1OTY=", "number": 252, "title": "[keyring] clarify naming of AWS KMS keyring", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317672, "node_id": "MDU6TGFiZWw3ODIzMTc2NzI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocking%20next%20release", "name": "blocking next release", "color": "f9d0c4", "default": false, "description": null}, {"id": 1991331026, "node_id": "MDU6TGFiZWwxOTkxMzMxMDI2", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/doc%20impact", "name": "doc impact", "color": "fef2c0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-04-16T17:20:15Z", "updated_at": "2020-06-03T21:53:45Z", "closed_at": "2020-04-16T21:37:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per https://github.com/awslabs/aws-encryption-sdk-specification/issues/67, we are going to rename `KmsKeyring` to `AwsKmsKeyring` to be explicitly clear that this keyring interacts with the AWS Key Management Service, rather than some other KMS.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/248", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/248/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/248/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/248", "id": 599806044, "node_id": "MDU6SXNzdWU1OTk4MDYwNDQ=", "number": 248, "title": "[keyring] add example that replicates the behavior of a KMS master key provider", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-04-14T19:27:31Z", "updated_at": "2020-04-24T16:53:22Z", "closed_at": "2020-04-24T16:53:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The KMS master key provider behaves rather differently than any KMS keyring configuration: it accepts key IDs on configuration and will encrypt with only those key IDs but will attempt to decrypt any KMS-encrypted data keys. This is equivalent to a multi-keyring composed of a KMS keyring with key IDs and a KMS discovery keyring.\r\n\r\nWe should add an example that demonstrates how to replicate the KMS master key provider behavior for customers who want that behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/246", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/246/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/246/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/246", "id": 599037843, "node_id": "MDU6SXNzdWU1OTkwMzc4NDM=", "number": 246, "title": "[keyring] simplify raw AES keyring API", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 6, "created_at": "2020-04-13T17:59:21Z", "updated_at": "2020-04-14T19:28:50Z", "closed_at": "2020-04-14T19:28:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As I was discussing the raw AES keyring API with @juneb, it occurred to both of us that requiring the caller to specify the wrapping algorithm does not really add value here, because the only thing that changes is the key size, which we can infer from the wrapping key material.\r\n\r\nI think that requiring the wrapping algorithm is a hold-over from `RawMasterKey`, but one of the main reasons why the wrapping algorithm was needed to AES operations for that was to provide a consistent configuration experience for AES and RSA wrapping keys. Since we have split these out into separate keyrings, I do not think this really adds value anymore.\r\n\r\nAn argument could be made that specifying the wrapping algorithm adds value because it requires the caller to explicitly state what AES key size they intend to provide, which we can check against the key material that they actually provided. While technically correct, I'm not sure that this justifies the additional API complexity.\r\n\r\n\r\nThe other extant implementations vary on how they present this:\r\n\r\nThe specification only requires the key material:\r\n\r\nhttps://github.com/awslabs/aws-encryption-sdk-specification/blob/master/framework/raw-aes-keyring.md#initialization\r\n\r\nC requires a separate statement of the expected key length:\r\n\r\nhttps://github.com/aws/aws-encryption-sdk-c/blob/749c84feddce147fb62e2ece7de34d733ef165c2/include/aws/cryptosdk/raw_aes_keyring.h#L57-L62\r\n\r\nJava only requires the key material:\r\n\r\nhttps://github.com/aws/aws-encryption-sdk-java/blob/5cf7e0c0638eaa6752e94b6b0da9c67a29001c9e/src/main/java/com/amazonaws/encryptionsdk/keyrings/RawAesKeyring.java#L30-L32\r\n\r\nJavascript requires a wrapping algorithm suite:\r\n\r\nhttps://github.com/aws/aws-encryption-sdk-javascript/blob/201c1022257a08c82035e5cde5097fad8321f64d/modules/raw-aes-keyring-node/src/raw_aes_keyring_node.ts#L51-L56\r\n\r\n\r\n## Option 1: Leave as-is\r\n\r\nIf we do this, we should change the validator for the wrapping algorithm suite to not allow RSA suites.\r\n\r\n## Option 2: Derive the wrapping algorithm suite from the wrapping key material\r\n\r\nGiven that the only thing that changes between the AES wrapping algorithm suites is the key size, we can enforce that the key material is a supported length and derive the wrapping suite from the key material length.\r\n\r\n## Option 3: Make the wrapping algorithm suite optional\r\n\r\nWe could make the wrapping algorithm suite optional, enforcing it if the caller provides it, but otherwise deriving it from the wrapping key material.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/238", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/238/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/238/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/238", "id": 593578472, "node_id": "MDU6SXNzdWU1OTM1Nzg0NzI=", "number": 238, "title": "[keyring] add deprecation warning to master key providers", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317672, "node_id": "MDU6TGFiZWw3ODIzMTc2NzI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocking%20next%20release", "name": "blocking next release", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2020-04-03T18:58:31Z", "updated_at": "2020-04-09T23:38:59Z", "closed_at": "2020-04-09T23:38:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With the introduction of keyrings, we are deprecating master key providers. We need to add deprecation notices and warnings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/227", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/227/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/227/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/227", "id": 587360183, "node_id": "MDU6SXNzdWU1ODczNjAxODM=", "number": 227, "title": "[keyring] add is_discovery parameter to KMS keyring", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-03-25T00:26:08Z", "updated_at": "2020-03-31T01:59:42Z", "closed_at": "2020-03-31T01:59:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I originally had discovery defined as a derived property in the KMS keyring because that is how we currently have it defined in the spec. However, all of the other KMS keyring implementations have it as an explicit parameter, and after discussing it with the team we decided that was the correct UX. As such, we'll be updating the spec accordingly[1] and we need to update this KMS keyring before release.\r\n\r\n[1] https://github.com/awslabs/aws-encryption-sdk-specification/issues/84", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/223", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/223/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/223/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/223", "id": 583253167, "node_id": "MDU6SXNzdWU1ODMyNTMxNjc=", "number": 223, "title": "[keyring] expose keyring trace in response", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2020-03-17T19:40:21Z", "updated_at": "2020-03-23T20:33:13Z", "closed_at": "2020-03-23T20:33:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As I was writing up the keyring examples for #221, I realized that while the keyring trace is exposed in the *keyring* results, it is not exposed in the actual encrypt/decrypt results.\r\n\r\nThere are two places where we need to expose this:\r\n- [x] Streaming APIs\r\n\r\nWe can do this simply by adding the keyring trace as an attribute on the stream object.\r\n\r\n\r\n- [x] One-step APIs\r\n\r\nThis one is a bit more complicated. Because we currently return `(bytes, MessageHeader)` rather than a return object, our options are limited. There are two ways I can think to approach this:\r\n\r\n1. Add a `keyring_trace` attribute to `MessageHeader`. This is the simplest option, and the least likely to break people, but is a bit messy because the header doesn't really contain the keyring trace.\r\n1. Change the one-step APIs to return a results object that is structured like the one-step return values from the other ESDK implementations but also quacks like a two-member sequence. This would let us be more flexible in the future when adding other return data but would also let us avoid breaking existing users who expect a two-member tuple. [PREFERRED]\r\n\r\n# One-step APIs\r\n\r\nThe current interface of the one-step APIs is that they return a 2-member tuple containing the result bytes (plaintext for decrypt and encrypted message for encrypt) and the `MessageHeader` instance for that message.\r\n\r\nhttps://aws-encryption-sdk-python.readthedocs.io/en/latest/generated/aws_encryption_sdk.html#aws_encryption_sdk.encrypt\r\n\r\n```python\r\nmy_ciphertext, encryptor_header = aws_encryption_sdk.encrypt(\r\n    source=my_plaintext,\r\n    keyring=my_keyring,\r\n)\r\n```\r\n\r\n## Option 1 : Modify `MessageHeader`\r\n\r\nPros:\r\n* This would be the simplest change.\r\n* Basically guaranteed to not break anyone.\r\n\r\nCons:\r\n* This would mix unrelated concepts. The message header does not include the keyring trace and adding it to that structure would confuse concepts and relationships.\r\n* If we ever need to add something else to the output, we would find ourselves in a similar situation again, having to put even more unrelated stuff into `MessageHeader`.\r\n\r\n\r\n```python\r\nmy_ciphertext, encryptor_header = aws_encryption_sdk.encrypt(\r\n    source=my_plaintext,\r\n    keyring=my_keyring,\r\n)\r\nencryptor_header.keyring_trace\r\n```\r\n\r\n\r\n## Option 2 : Result object that quacks like a 2-member tuple [PREFERRED]\r\n\r\n```python\r\n# Legacy interaction: compatible but no access to keyring trace\r\nmy_ciphertext, encryptor_header = aws_encryption_sdk.encrypt(\r\n    source=my_plaintext,\r\n    keyring=my_keyring,\r\n)\r\n\r\n# New interaction: provides access to keyring trace\r\nencryption_result = aws_encryption_sdk.encrypt(\r\n    source=my_plaintext,\r\n    keyring=my_keyring,\r\n)\r\n# ciphertext\r\nencryption_result.result\r\n# header\r\nencryption_result.header\r\n# keyring trace\r\nencryption_result.keyring_trace\r\n```\r\n\r\nPros:\r\n* This would let us expose the keyring trace without combining unrelated concepts.\r\n* If we need to add another output value in the future, this gives us a simple and consistent way to do it.\r\n* This is very unlikely to break any customers. We can make the output value behave like a 2-member tuple so that anyone interacting with it as if it were a tuple will not be surprised.\r\n* This would let us align the Python client's one-step interface with the one-step interfaces in the other language implementations.\r\n\r\nCons:\r\n* If anyone is relying on the output value actually being an instance of the `tuple` class, this would break. Relying on implicit types in this way is generally considered an antipattern.\r\n\r\n## Discarded options\r\n\r\n* Output a 3-member tuple `(bytes, MessageHeader, Sequence[KeyringTrace])`. This is a non-starter because the most common way that we expect people to be using these APIs is to unpack the output values on call. Adding another member to the output tuple would result in an error when they attempt to unpack just two members from a three-member tuple.\r\n```python\r\n>>> a,b  = (1,2,3)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nValueError: too many values to unpack (expected 2)\r\n```\r\n* Subclass `tuple` for result object. Subclassing built-in classes is generally considered an anti-pattern. Additionally, if we were to add access to the stored values by attribute names, which would be the best way to expose these values while also not breaking compatibility with the previous output value, we would end up with something that *says* that it is a `tuple` but behaves very differently than an actual `tuple`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/222", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/222/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/222/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/222", "id": 580930797, "node_id": "MDU6SXNzdWU1ODA5MzA3OTc=", "number": 222, "title": "[keyring] Verify that KMS keyring behaves correctly on encrypt", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2020-03-13T23:31:23Z", "updated_at": "2020-04-01T18:49:39Z", "closed_at": "2020-04-01T18:49:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Once https://github.com/awslabs/aws-encryption-sdk-specification/issues/73 is resolved, we need to verify that the KMS keyring implementation is correct.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/220", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/220/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/220/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/220", "id": 578781412, "node_id": "MDU6SXNzdWU1Nzg3ODE0MTI=", "number": 220, "title": "[keyring] AWS KMS keyring parameters have the wrong name", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-03-10T18:32:42Z", "updated_at": "2020-04-08T04:39:08Z", "closed_at": "2020-04-08T04:39:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We do not refer to the additional key IDs in the AWS KMS keyring as \"child\" key IDs anywhere else (spec/implementation/docs/etc). We should not introduce new terminology here.\r\n\r\nWe need to rename the parameter from `child_key_ids` to `additional_key_ids`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/215", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/215/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/215/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/215", "id": 568700082, "node_id": "MDU6SXNzdWU1Njg3MDAwODI=", "number": 215, "title": "[keyring] keyring trace flag values", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-02-21T02:39:14Z", "updated_at": "2020-03-23T20:31:14Z", "closed_at": "2020-03-23T20:31:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When we originally made keyring trace flag values in C[1], we used bit-shifts so that they could be combined efficiently in C data structures. When we made them in Javascript[2], we went ahead and used the same values.\r\n\r\nAs the result of further discussion, we decided that we did not have any explicit intention for these values to be serialized in any way, and as such defining them with common values was potentially misleading. This is why the specification[3] does not mention any *value* for these flags, rather simply stating that what each flag means. In Java[4], we followed through on this decision and did not define any values. The flag values in Python were originally written before we came to this decision.\r\n\r\nIn order to avoid potential confusion, we should change the enum values to something else. Just a counter or an instance of `object` is fine, though it might be nice to have something explicit.\r\n\r\n[1] https://github.com/aws/aws-encryption-sdk-c/blob/969c71d7b48a9c48e00a3ec8bc420c245681bab9/include/aws/cryptosdk/keyring_trace.h#L56-L79\r\n[2] https://github.com/aws/aws-encryption-sdk-javascript/blob/7dfa1ae1a4696d4829c47033058d1157d6e11b0d/modules/material-management/src/keyring_trace.ts#L51-L74\r\n[3] https://github.com/awslabs/aws-encryption-sdk-specification/blob/master/framework/structures.md#flags\r\n[4] https://github.com/aws/aws-encryption-sdk-java/blob/f4973ec91598d662079159a3187d142c0e82d5b3/src/main/java/com/amazonaws/encryptionsdk/keyrings/KeyringTraceFlag.java#L20-L49", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/214", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/214/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/214/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/214", "id": 568696343, "node_id": "MDU6SXNzdWU1Njg2OTYzNDM=", "number": 214, "title": "[keyring] immutable cryptographic materials", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-02-21T02:25:02Z", "updated_at": "2020-03-31T01:43:49Z", "closed_at": "2020-03-31T01:43:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If possible, I'd like to get the encryption/decryption materials as close to immutable as possible to make handling them simpler and to fit better into the descriptions evolving in the spec[1].\r\n\r\nThe two goals I have in mind with this are:\r\n1. Make it as simple as possible to think about what is changing the materials, when, and where. The simplest possible answer is that \"they never change\".\r\n1. Make it as hard as possible to change the materials without the appropriate metadata (keyring trace).\r\n\r\nWe might not be able to get them all the way because they need to continue to work with CMMs, but I'd like to make it possible to use them in an immutable way.\r\n\r\nThe simplest hurdles to this are:\r\n\r\n1. `copy.copy` and `copy.deepcopy`should work as expected.\r\n1. Rather than methods like `add_data_encryption_key` mutating the existing materials, they should return new materials based on the initial materials that also include the values to be added.\r\n\r\nWe're at an inflection point with keyrings. I think that if we do not do this before we release keyrings that we will probably never be able to reasonably do it, but if we do it before keyrings than we can simply say \"if you are using keyrings then materials are always immutable\".\r\n\r\n[1] https://github.com/awslabs/aws-encryption-sdk-specification/pull/56", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/213", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/213/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/213/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/213", "id": 568691629, "node_id": "MDU6SXNzdWU1Njg2OTE2Mjk=", "number": 213, "title": "[keyring] keyring migration guide", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2020-02-21T02:07:33Z", "updated_at": "2020-04-08T21:01:38Z", "closed_at": "2020-04-08T21:01:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'd like for us to have a migration guide for how to move from master key providers to keyrings. I'm not sure exactly what form this should take. The main things I want to make sure it does are:\r\n\r\n- Show how to change from MKP to keyring. This is especially important for raw MKPs.\r\n- Explain why you should change. ie, what do keyrings give you that MKPs do not?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/212", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/212/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/212/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/212", "id": 568555263, "node_id": "MDU6SXNzdWU1Njg1NTUyNjM=", "number": 212, "title": "[keyring] add AWS KMS keyring", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-02-20T20:37:46Z", "updated_at": "2020-03-20T17:54:03Z", "closed_at": "2020-03-20T17:54:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Add an AWS KMS keyring as defined in the specification: https://github.com/awslabs/aws-encryption-sdk-specification/blob/master/framework/kms-keyring.md", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/211", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/211/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/211/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/211", "id": 568554315, "node_id": "MDU6SXNzdWU1Njg1NTQzMTU=", "number": 211, "title": "[keyring] Enable use of keyrings", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-02-20T20:35:55Z", "updated_at": "2020-03-20T17:54:19Z", "closed_at": "2020-03-20T17:54:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We have some keyrings defined, but we can't actually use them yet.\r\n\r\nFollowing on from #209, I think that trying to build an abstraction layer that lets master key providers (MKPs) pretend to be keyrings is not viable. There are just too many subtle differences in the APIs, including:\r\n- MKPs accept the plaintext length and plaintext body as input on encrypt. Keyrings do not. We've been trying to discourage this usage for a while, but we can't just cut it off without potentially breaking custom MKPs that might use these values.\r\n- MKPs implicitly assume that they are generating the data key. This could work out ok if you never combine the MKP keyring wrapper with any other keyrings, but if you ever do then the potential issues expand significantly.\r\n\r\n\r\nInstead, we're just going to expand the default CMM to accept either an MKP or a keyring, and contain the complexity there.\r\n\r\nTesting this will require:\r\n\r\n- [x] `DefaultCryptoMaterialsManager` MUST accept either a MKP or a keyring and require exactly one\r\n- [x] `DefaultCryptoMaterialsManager` MUST fail if the keyring could not complete the cryptographic materials\r\n- [x] `DefaultCryptoMaterialsManager` MUST fail if the keyring changes the algorithm, encryption context, or signing/verification key from the requested materials\r\n- [x] `CachingCryptoMaterialsManager` MUST accept either a MKP or a keyring and require exactly one\r\n- [x] `StreamEncryptor` MUST accept either a MKP or a keyring and require exactly one\r\n- [x] `StreamDecryptor` MUST accept either a MKP or a keyring and require exactly one\r\n- [x] All functional and integration tests must test with both MKPs and keyrings\r\n- [x] raw MKPs and keyrings MUST inter-operate end-to-end\r\n- [x] AWS KMS MKPs and keyrings MUST interoperate end-to-end", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/208", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/208/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/208/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/208", "id": 552717337, "node_id": "MDU6SXNzdWU1NTI3MTczMzc=", "number": 208, "title": "DirectoryKeyProvider is not supported ", "user": {"login": "arezki1990", "id": 6134943, "node_id": "MDQ6VXNlcjYxMzQ5NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6134943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arezki1990", "html_url": "https://github.com/arezki1990", "followers_url": "https://api.github.com/users/arezki1990/followers", "following_url": "https://api.github.com/users/arezki1990/following{/other_user}", "gists_url": "https://api.github.com/users/arezki1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/arezki1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arezki1990/subscriptions", "organizations_url": "https://api.github.com/users/arezki1990/orgs", "repos_url": "https://api.github.com/users/arezki1990/repos", "events_url": "https://api.github.com/users/arezki1990/events{/privacy}", "received_events_url": "https://api.github.com/users/arezki1990/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T09:11:16Z", "updated_at": "2020-01-30T17:36:31Z", "closed_at": "2020-01-30T17:36:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi , \r\ni am trying to use this lib with client side  key-pair  but unfortunately i don't find the directory provider \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/206", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/206/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/206/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/206", "id": 544672152, "node_id": "MDU6SXNzdWU1NDQ2NzIxNTI=", "number": 206, "title": "Support for symmetric encryption operations", "user": {"login": "benkehoe", "id": 1650723, "node_id": "MDQ6VXNlcjE2NTA3MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1650723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benkehoe", "html_url": "https://github.com/benkehoe", "followers_url": "https://api.github.com/users/benkehoe/followers", "following_url": "https://api.github.com/users/benkehoe/following{/other_user}", "gists_url": "https://api.github.com/users/benkehoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/benkehoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benkehoe/subscriptions", "organizations_url": "https://api.github.com/users/benkehoe/orgs", "repos_url": "https://api.github.com/users/benkehoe/repos", "events_url": "https://api.github.com/users/benkehoe/events{/privacy}", "received_events_url": "https://api.github.com/users/benkehoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-02T17:30:47Z", "updated_at": "2020-01-02T17:36:42Z", "closed_at": "2020-01-02T17:36:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now that KMS [supports asymmetric keys](https://aws.amazon.com/blogs/security/digital-signing-asymmetric-keys-aws-kms/), it suffers from the same dilemma as symmetric operations: once you [sign](https://docs.aws.amazon.com/kms/latest/APIReference/API_Sign.html), you have to pass not only the signature but key id and signature type to the [verify](https://docs.aws.amazon.com/kms/latest/APIReference/API_Verify.html) API, leaving KMS users to work out how to store and pass along this metadata. The Encyption SDK has very effectively solved this problem for symmetric operations, and it would be great to have it extended to cover asymmetric operations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/205", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/205/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/205/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/205", "id": 536747589, "node_id": "MDU6SXNzdWU1MzY3NDc1ODk=", "number": 205, "title": "CPython 3.4 support", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2019-12-12T04:17:42Z", "updated_at": "2020-04-08T04:37:57Z", "closed_at": "2020-04-08T04:37:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In the next release, `pyca/cryptography` is dropping support for CPython 3.4[1]. This library is what initially set our lower bound for CPython version support, and if they are dropping support for 3.4 we should consider dropping that support as well because we rely so heavily on them.\r\n\r\nBased on our PyPI download stats this year and the last month, I think that this is a low-risk course of action.\r\n\r\n## Date range: 2019-01-01 - 2019-12-31\r\n\r\n| category | percent | downloads |\r\n|----------|--------:|----------:|\r\n| 2.7      |  62.88% |   795,886 |\r\n| 3.6      |  33.11% |   419,118 |\r\n| 3.7      |   1.87% |    23,614 |\r\n| 3.5      |   1.74% |    22,010 |\r\n| 3.4      |   0.22% |     2,726 |\r\n| null     |   0.14% |     1,831 |\r\n| 3.8      |   0.04% |       503 |\r\n| 2.6      |   0.00% |         5 |\r\n| Total    |         | 1,265,693 |\r\n\r\n## Date range: 2019-11-01 - 2019-11-30\r\n\r\n| category | percent | downloads |\r\n|----------|--------:|----------:|\r\n| 2.7      |  68.48% |   157,540 |\r\n| 3.6      |  27.56% |    63,417 |\r\n| 3.7      |   2.36% |     5,425 |\r\n| 3.5      |   1.27% |     2,919 |\r\n| 3.4      |   0.14% |       325 |\r\n| null     |   0.14% |       319 |\r\n| 3.8      |   0.05% |       122 |\r\n| Total    |         |   230,067 |\r\n\r\n[1] https://github.com/pyca/cryptography/pull/5087", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/204", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/204/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/204/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/204", "id": 524717484, "node_id": "MDU6SXNzdWU1MjQ3MTc0ODQ=", "number": 204, "title": "Can't effectively test code that uses `aws-encryption-sdk` with stubs", "user": {"login": "philsnow", "id": 297781, "node_id": "MDQ6VXNlcjI5Nzc4MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/297781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philsnow", "html_url": "https://github.com/philsnow", "followers_url": "https://api.github.com/users/philsnow/followers", "following_url": "https://api.github.com/users/philsnow/following{/other_user}", "gists_url": "https://api.github.com/users/philsnow/gists{/gist_id}", "starred_url": "https://api.github.com/users/philsnow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philsnow/subscriptions", "organizations_url": "https://api.github.com/users/philsnow/orgs", "repos_url": "https://api.github.com/users/philsnow/repos", "events_url": "https://api.github.com/users/philsnow/events{/privacy}", "received_events_url": "https://api.github.com/users/philsnow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-19T01:30:58Z", "updated_at": "2019-11-19T21:16:33Z", "closed_at": "2019-11-19T21:16:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to write some code that consumes `aws-encryption-sdk`, specifically `KMSMasterKeyProvider`.  Everything works fine but I would like to add tests with stubbed out KMS requests+responses (using `botocore.stub.Stubber`'ed boto3 clients).\r\n\r\nMy test setup creates a botocore session with fake credentials, e.g.\r\n\r\n```\r\n@pytest.fixture\r\ndef botocore_session():\r\n    session = botocore.session.get_session()\r\n    session.set_credentials(\"invalid-access-key\", \"invalid-secret-key\")\r\n    session.set_stream_logger('', 'DEBUG')\r\n    return session\r\n```\r\n\r\nand then passes that session down into the `KMSMasterKeyProvider` constructor.  However, I can't also pass in a boto3 KMS client object for it to use.  It creates its own clients here https://github.com/aws/aws-encryption-sdk-python/blob/0f4dc6e7f695191daf3d8ceeef8786a93388259d/src/aws_encryption_sdk/key_providers/kms.py#L163-L167\r\n\r\nI could create a `KMSMasterKeyProvider` object in my test setup, reach into its `._regional_clients` and add my stubbed KMS client, and inject that into my code.  Is that the best approach for now?  Is there some other approach to stubbing that I should try?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/201", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/201/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/201/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/201", "id": 504243724, "node_id": "MDU6SXNzdWU1MDQyNDM3MjQ=", "number": 201, "title": "Support crypto shredding based on the encryption context", "user": {"login": "ikben", "id": 1301221, "node_id": "MDQ6VXNlcjEzMDEyMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1301221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikben", "html_url": "https://github.com/ikben", "followers_url": "https://api.github.com/users/ikben/followers", "following_url": "https://api.github.com/users/ikben/following{/other_user}", "gists_url": "https://api.github.com/users/ikben/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikben/subscriptions", "organizations_url": "https://api.github.com/users/ikben/orgs", "repos_url": "https://api.github.com/users/ikben/repos", "events_url": "https://api.github.com/users/ikben/events{/privacy}", "received_events_url": "https://api.github.com/users/ikben/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552402, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-08T19:50:50Z", "updated_at": "2019-10-09T21:58:11Z", "closed_at": "2019-10-09T21:58:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(opening this issue to follow up on a conversation with Greg Rubin)\r\n(note that I didn't look at KeyRings before writing this, so a lot of this might be solved by those)\r\n\r\nI'm trying to build a solution that would leverage encryption to make data impossible to retrieve when a user would invoke its right to be forgotten (ie. [crypto shredding](https://en.wikipedia.org/wiki/Crypto-shredding)).\r\n\r\nThe \"easy\" ways to do that are unfortunately not ideal:\r\n\r\n- We could create a KMS CMK for each user. This has the advantage that the there is no way to decrypt the data keys once the CMK has been deleted. The downsides is that this can become expensive rather fast (at $1 per user) and requires a new key every time a user signs up\r\n- We could create one (or a few) CMKs and include the user-id in the encryption context. Decryption can than be prevented by editing the CMK policy and denying certain encryption contexts. The advantage here is that it's cost-effective and dynamic. The disadvantage are that someone with put-policy rights can re-enable access and you're limited by the maximum policy size.\r\n\r\nIf we want to have an irreversible deletion with only one key the only solution is the build our own master key provider. This is how that could work (I might be diving in too much of a solution here, the important part is the shredding, not the implementation):\r\n\r\n```\r\nmy_ciphertext, encryptor_header = aws_encryption_sdk.encrypt(\r\n    source=b'some-plaintext',\r\n    key_provider=UserShreddingKeyProvider()\r\n    encryption_context={\r\n        'user': 'user-id-001',\r\n    }\r\n)\r\n```\r\n\r\nThe KeyProvider will have to do the following:\r\n- Check if there already exists a UserKeyCipherText (see below) for the given user and retrieve and decrypt it if so.\r\n- If there is no existing UserKey: generate a key, encrypt this with the CMK. We will call this the UserKey and its respective UserKeyCipherText\r\n- Store the UserKeyCipherText somewhere where it can be found by searching on user id.\r\n- Generate a Data Key, encrypt it with the UserKey and return both the the encryption sdk\r\n\r\nWhen you need to shred a user, you can delete its UserKeyCipherText and all the DataKeys will be useless.\r\nAs long as the user does not need to be shredded, you can open both enveloppes and get the plaintext.\r\n\r\nThe description above opens both enveloppes on the same machine. You can prevent leaking the UserKey by doing the encryption of the DK server side (like if the UserKey was a CMK)\r\n\r\nYou can also go a step further and generalize this to arbitrary tokens:\r\n\r\n```\r\nmy_ciphertext, encryptor_header = aws_encryption_sdk.encrypt(\r\n    source=b'some-plaintext',\r\n    key_provider=TokenBasedKeyProvider()\r\n    encryption_context={\r\n        'token:user': 'user-id-001',\r\n        'token:application': 'app-id-001',\r\n    }\r\n)\r\n```\r\n\r\nThe idea is here that the plain text can only be used for the specific user-app combination and the shredding either of them must make the data not-decryptable. \r\n\r\nThis could work like this:\r\n- Generate (or retrieve) a Key for each field in the encryption context\r\n- Generate a DK for each field and encrypt it under its respective key. Let's call these DKs our tokens.\r\n- XOR all tokens and use that to encrypt the plaintext (and store all encrypted tokens so you can recontruct the DK by decrypting each token and XORing them again.\r\n\r\nDeleting any Key will prevent the token from being decrypted and thus the plaintext will be not decrypted either.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/190", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/190/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/190/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/190", "id": 494818743, "node_id": "MDU6SXNzdWU0OTQ4MTg3NDM=", "number": 190, "title": "Creation of regional clients modifies default botocore session's region", "user": {"login": "polamayster", "id": 3791902, "node_id": "MDQ6VXNlcjM3OTE5MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3791902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polamayster", "html_url": "https://github.com/polamayster", "followers_url": "https://api.github.com/users/polamayster/followers", "following_url": "https://api.github.com/users/polamayster/following{/other_user}", "gists_url": "https://api.github.com/users/polamayster/gists{/gist_id}", "starred_url": "https://api.github.com/users/polamayster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polamayster/subscriptions", "organizations_url": "https://api.github.com/users/polamayster/orgs", "repos_url": "https://api.github.com/users/polamayster/repos", "events_url": "https://api.github.com/users/polamayster/events{/privacy}", "received_events_url": "https://api.github.com/users/polamayster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-17T19:50:24Z", "updated_at": "2019-09-20T18:25:08Z", "closed_at": "2019-09-20T18:25:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Let's say we have app runing in ECS(lots of gunicorn workers) using IAM role and want to reuse botocore session for all boto3 clients to not query for credentials each time and to not hit throttling limits with botocore.credentials.ContainerProvider:\r\n```python\r\nimport botocore.session\r\nimport boto3\r\n\r\nbotocore_session = botocore.session.get_session()\r\nbotocore_session._credentials = RefreshableCredentials(...)\r\nboto3.setup_default_session(botocore_session=botocore_session)\r\n```\r\nCode at https://github.com/aws/aws-encryption-sdk-python/blob/master/src/aws_encryption_sdk/key_providers/kms.py#L164\r\n```python\r\nif region_name not in self._regional_clients:\r\n    session = boto3.session.Session(region_name=region_name, botocore_session=self.config.botocore_session)\r\n    client = session.client(\"kms\", config=self._user_agent_adding_config)\r\n    self._register_client(client, region_name)\r\n    self._regional_clients[region_name] = client\r\n```\r\n will end up doing this inside `boto3.session`:\r\n```python\r\nif region_name is not None:\r\n    self._session.set_config_variable('region', region_name)\r\n```\r\nbasically modifying botocore session for each unique region in `key_ids` supplied to `KMSMasterKeyProvider` for example:\r\n```python\r\nkms_key_provider = aws_encryption_sdk.KMSMasterKeyProvider(\r\n    key_ids=[\r\n         'arn:aws:kms:eu-west-1:11111111111111:key/111111111-1111-1111-1111-1111111111111',\r\n         'arn:aws:kms:us-east-1:2222222222222:key/22222222-2222-2222-2222-222222222222',\r\n         'arn:aws:kms:ap-northeast-1:3333333333333:key/33333333-3333-3333-3333-333333333333'\r\n     ],\r\n     botocore_session=botocore_session\r\n)\r\n```\r\nit will be setting region variable for botocore_session multiple times and last one `ap-northeast-1` will become new region of default session, so any new boto3 client without explicitly set region_name will be created for this region e.g.\r\n```python\r\nsns = boto3.client('sns')\r\nvars(sns)\r\n\r\n{\r\n    '_serializer': <botocore.validate.ParamValidationDecorator at 0x7fecb6516978>,\r\n    '_endpoint': sns(https://sns.ap-northeast-1.amazonaws.com),\r\n    ....\r\n}\r\n```\r\nwhich is not desired behavior and of course could be fixed by setting `region_name` explicitly (everywhere) but could be fixed more easily by:\r\n```python\r\nif region_name not in self._regional_clients:\r\n   session = boto3.session.Session(botocore_session=self.config.botocore_session)\r\n   client = session.client(\"kms\", region_name=region_name, config=self._user_agent_adding_config)\r\n    self._register_client(client, region_name)\r\n    self._regional_clients[region_name] = client\r\n```\r\ninstead without modifying default botocore session and achieving same result.\r\n\r\nPlease let me know if I miss the reason for actually setting region_name for a session as it is right now or use KMSMasterKeyProvider incorrectly otherwise please consider adding this change to KMSMasterKeyProvider.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/181", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/181/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/181/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/181", "id": 477018942, "node_id": "MDU6SXNzdWU0NzcwMTg5NDI=", "number": 181, "title": "RawAESKeyring MUST add signing keyring trace flags", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1622946466, "node_id": "MDU6TGFiZWwxNjIyOTQ2NDY2", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/good%20first%20issue", "name": "good first issue", "color": "35f4de", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-05T19:25:05Z", "updated_at": "2020-05-29T17:30:32Z", "closed_at": "2020-05-29T17:30:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The Raw AES keyring uses the encryption context as AAD when encrypting the data key, so it MUST add:\r\n* `WRAPPING_KEY_SIGNED_ENC_CTX` flag on encrypt\r\n* `WRAPPING_KEY_VERIFIED_ENC_CTX` flag on decrypt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/178", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/178/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/178/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/178", "id": 473449365, "node_id": "MDU6SXNzdWU0NzM0NDkzNjU=", "number": 178, "title": "There are no test KMS keys in any region other than us-west-1", "user": {"login": "caitlin-tibbetts", "id": 21025983, "node_id": "MDQ6VXNlcjIxMDI1OTgz", "avatar_url": "https://avatars3.githubusercontent.com/u/21025983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caitlin-tibbetts", "html_url": "https://github.com/caitlin-tibbetts", "followers_url": "https://api.github.com/users/caitlin-tibbetts/followers", "following_url": "https://api.github.com/users/caitlin-tibbetts/following{/other_user}", "gists_url": "https://api.github.com/users/caitlin-tibbetts/gists{/gist_id}", "starred_url": "https://api.github.com/users/caitlin-tibbetts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caitlin-tibbetts/subscriptions", "organizations_url": "https://api.github.com/users/caitlin-tibbetts/orgs", "repos_url": "https://api.github.com/users/caitlin-tibbetts/repos", "events_url": "https://api.github.com/users/caitlin-tibbetts/events{/privacy}", "received_events_url": "https://api.github.com/users/caitlin-tibbetts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-26T16:54:21Z", "updated_at": "2019-07-26T18:01:38Z", "closed_at": "2019-07-26T18:01:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For the integration and example tests of the SDK, there is only a test KMS key for us-west-1, making it impossible to test cases using two different keys in different regions.\r\n\r\nIssue found in Pull Request #177.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/173", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/173/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/173/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/173", "id": 471267454, "node_id": "MDU6SXNzdWU0NzEyNjc0NTQ=", "number": 173, "title": "Update flake8-docstrings minimum version to 1.5.0", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 800862875, "node_id": "MDU6TGFiZWw4MDA4NjI4NzU=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/dependency%20breaking%20change", "name": "dependency breaking change", "color": "ea3cd0", "default": false, "description": null}, {"id": 1622946466, "node_id": "MDU6TGFiZWwxNjIyOTQ2NDY2", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/good%20first%20issue", "name": "good first issue", "color": "35f4de", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-22T19:17:34Z", "updated_at": "2020-01-16T20:53:35Z", "closed_at": "2020-01-16T20:53:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We can temporarily work around this by pinning to `pydocstyle < 4.0.0`, but we need to figure out what's going on here and what path forward we want to take.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/156", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/156/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/156/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/156", "id": 448368454, "node_id": "MDU6SXNzdWU0NDgzNjg0NTQ=", "number": 156, "title": "Revise Examples ", "user": {"login": "ttjsu-aws", "id": 40477596, "node_id": "MDQ6VXNlcjQwNDc3NTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/40477596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ttjsu-aws", "html_url": "https://github.com/ttjsu-aws", "followers_url": "https://api.github.com/users/ttjsu-aws/followers", "following_url": "https://api.github.com/users/ttjsu-aws/following{/other_user}", "gists_url": "https://api.github.com/users/ttjsu-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/ttjsu-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ttjsu-aws/subscriptions", "organizations_url": "https://api.github.com/users/ttjsu-aws/orgs", "repos_url": "https://api.github.com/users/ttjsu-aws/repos", "events_url": "https://api.github.com/users/ttjsu-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/ttjsu-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317672, "node_id": "MDU6TGFiZWw3ODIzMTc2NzI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocking%20next%20release", "name": "blocking next release", "color": "f9d0c4", "default": false, "description": null}, {"id": 524552403, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDM=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 5, "created_at": "2019-05-24T22:03:33Z", "updated_at": "2020-04-09T23:26:40Z", "closed_at": "2020-04-09T23:26:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The AWS Encryption SDK Examples in Python is not intuitive/simple to understand. The API usage is not immediately apparent and is buried in a lot of details. \r\n\r\nIt would be useful to have examples that are a combination of the commonly used APIs, algorithm suites and the type of data (string/stream) to be encrypted/decrypted.\r\n\r\n**A. Commonly used APIs :**\r\n\r\n1. Encrypt/Decrypt using one KMS CMK\r\n2. Encrypt/Decrypt using multiple KMS CMKs in Multiple Regions\r\n3. Decrypt using KMS CMK with the client provider \r\n4. Decrypt using KMS Discovery with region limits/filters\r\n5. Decrypt using KMS generic discovery\r\n6. Encrypt/Decrypt using Multi-KR/Multi-MKP\r\n7. Caching 1:1 local cache: caching cmm\r\n8. Caching 1:n local cache: caching cmm\r\n\r\nOnce we have the Keyring Implementation: https://github.com/aws/aws-encryption-sdk-python/issues/146 \r\n\r\n9.  Encrypt/ Decrypt using Raw AES Keyring \r\n10.  Encrypt using Raw RSA Keyring (public-key) \r\n11.  Decrypt using Raw RSA Keyring (public and private) \r\n12.  Encrypt/Decrypt using KMS Keyring\r\n13.  Encrypt/Decrypt using  Multi-Keyring\r\n\r\n**B. Types of data for encryption/decryption:**\r\n\r\n1. One shot/ string \r\n2. Streaming data\r\n\r\n**C. Commonly used Algorithm Suite:**\r\n\r\n1. Default Algorithm Suite AES_256_GCM_IV12_TAG16_HKDF_SHA384_ECDSA_P384 with P-384 and SHA-384\r\n2. Default w/o signing AES256_GCM_IV12_TAG16_HKDF_SHA256\r\n\r\nExamples: \r\n\r\n- [x]     A1.B1.C1 #236\r\n- [x]     A1.B2.C1 #236\r\n- [x]     A1.B1.C2 #236\r\n- [x]     A2.B1.C1 #177\r\n- [x]     A3.B1.C1 #236\r\n- [x]     A4.B1.C1 #236\r\n- [x]     A5.B1.C1 #236\r\n- [x]     A6.B1.C1 #236\r\n- [x]     A7.B1.C1 #239\r\n- [x]     A8.B1.C1 #239\r\n- [x]     A9.B1.C1 #221\r\n- [x]     A10.B1.C1 #221\r\n- [x]     A11.B1.C1 #221\r\n- [x]     A12.B1.C1 #221\r\n- [x]     A13.B1.C1 #221\r\n\r\n \r\nAlso, be sure to include/update the README to help navigate through the examples. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/150", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/150/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/150/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/150", "id": 443540620, "node_id": "MDU6SXNzdWU0NDM1NDA2MjA=", "number": 150, "title": " Intermittent success when decrypting using KMSMasterKey, on object encrypted using Multiple CMKs", "user": {"login": "johnwalker", "id": 1283229, "node_id": "MDQ6VXNlcjEyODMyMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1283229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnwalker", "html_url": "https://github.com/johnwalker", "followers_url": "https://api.github.com/users/johnwalker/followers", "following_url": "https://api.github.com/users/johnwalker/following{/other_user}", "gists_url": "https://api.github.com/users/johnwalker/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnwalker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnwalker/subscriptions", "organizations_url": "https://api.github.com/users/johnwalker/orgs", "repos_url": "https://api.github.com/users/johnwalker/repos", "events_url": "https://api.github.com/users/johnwalker/events{/privacy}", "received_events_url": "https://api.github.com/users/johnwalker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-13T18:30:27Z", "updated_at": "2019-05-30T19:17:56Z", "closed_at": "2019-05-21T02:32:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\nimport aws_encryption_sdk\r\nfrom aws_encryption_sdk.key_providers.kms import KMSMasterKey\r\n\r\nCMK_ARNS = {\r\n \"A\": \"arn1\",\r\n \"B\": \"arn2\"\r\n}\r\nplaintext=b'abdc'\r\ncontext = {'purpose': 'encryption context'}\r\n\r\nmaster_key_provider_A = aws_encryption_sdk.KMSMasterKeyProvider()\r\nmaster_key_provider_A.add_master_key(CMK_ARNS['A'])\r\nmaster_key_provider_A.add_master_key(CMK_ARNS['B'])\r\n\r\nmaster_key_provider_B = KMSMasterKey(key_id=CMK_ARNS['B'])\r\n\r\nencrypted_message, header = aws_encryption_sdk.encrypt(\r\n  encryption_context=context,\r\n  key_provider=master_key_provider_A,\r\n  source=plaintext\r\n)\r\n\r\ndecrypted_message, decrypted_header = aws_encryption_sdk.decrypt(\r\n        key_provider=master_key_provider_B,\r\n  source=encrypted_message\r\n)\r\n```\r\n\r\nDecrypting using `master_key_provider_B` fails intermittently with:\r\n\r\n```\r\naws_encryption_sdk.exceptions.IncorrectMasterKeyError: Provided data key provider\r\nMasterKeyInfo(provider_id='aws-kms', key_info=b'$ARN2') does not match Master Key\r\nprovider MasterKeyInfo(provider_id='aws-kms', key_info=b'$ARN1')\r\n```\r\n\r\nThe expected behavior is that decryption always succeeds, since `B's` CMK is among those used in `A's`.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/149", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/149/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/149/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/149", "id": 436807601, "node_id": "MDU6SXNzdWU0MzY4MDc2MDE=", "number": 149, "title": "Configuration information needed for decrypting Amazon Connect data", "user": {"login": "chamakov", "id": 2537201, "node_id": "MDQ6VXNlcjI1MzcyMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2537201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chamakov", "html_url": "https://github.com/chamakov", "followers_url": "https://api.github.com/users/chamakov/followers", "following_url": "https://api.github.com/users/chamakov/following{/other_user}", "gists_url": "https://api.github.com/users/chamakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/chamakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chamakov/subscriptions", "organizations_url": "https://api.github.com/users/chamakov/orgs", "repos_url": "https://api.github.com/users/chamakov/repos", "events_url": "https://api.github.com/users/chamakov/events{/privacy}", "received_events_url": "https://api.github.com/users/chamakov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317591, "node_id": "MDU6TGFiZWw3ODIzMTc1OTE=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocked", "name": "blocked", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-24T17:01:00Z", "updated_at": "2020-08-14T16:58:15Z", "closed_at": "2020-08-14T16:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to decrypt a string generated by AWS Connect, using aws-encryption-sdk-python, but I'm not able to do it, I'm receiving a \"Decryption failed.\" Error every time.\r\n\r\nI'm using a raw_key generator:\r\n\r\n```python\r\ndef _get_raw_key(self, key_id):\r\n        try:\r\n            static_key = self._static_keys[key_id]\r\n        except KeyError:\r\n            # X.509 private key file\r\n            static_key = open('blog.connect.private.key', 'rb').read()\r\n            self._static_keys[key_id] = static_key\r\n        return WrappingKey(\r\n            wrapping_algorithm=WrappingAlgorithm.RSA_OAEP_SHA1_MGF1,\r\n            wrapping_key=static_key,\r\n            wrapping_key_type=EncryptionKeyType.PRIVATE\r\n        )\r\n```\r\n\r\nSomebody can help me with this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/147", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/147/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/147/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/147", "id": 434482215, "node_id": "MDU6SXNzdWU0MzQ0ODIyMTU=", "number": 147, "title": "Caching CMM max age should be required to be greater than 0", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-17T20:55:54Z", "updated_at": "2019-09-20T22:46:57Z", "closed_at": "2019-09-20T22:46:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The caching CMM should require that `max_age` is greater than 0.\r\n\r\nIf initialized with a `max_age` value that is not greater than 0, we should raise a `ValueError` with an appropriate error message similar to the checks we already apply:\r\n\r\nhttps://github.com/aws/aws-encryption-sdk-python/blob/master/src/aws_encryption_sdk/materials_managers/caching.py#L98-L109", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/146", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/146/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/146/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/146", "id": 429942476, "node_id": "MDU6SXNzdWU0Mjk5NDI0NzY=", "number": 146, "title": "add keyrings", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317672, "node_id": "MDU6TGFiZWw3ODIzMTc2NzI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocking%20next%20release", "name": "blocking next release", "color": "f9d0c4", "default": false, "description": null}, {"id": 524552402, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1", "html_url": "https://github.com/aws/aws-encryption-sdk-python/milestone/1", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/milestones/1/labels", "id": 5130606, "node_id": "MDk6TWlsZXN0b25lNTEzMDYwNg==", "number": 1, "title": "keyrings", "description": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in DefaultCryptoMaterialsManager, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to DefaultCryptoMaterialsManager, we will need to make a KeyringDefaultCryptoMaterialsManager that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the keyring branch.", "creator": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "open_issues": 19, "closed_issues": 43, "state": "open", "created_at": "2020-02-21T21:27:41Z", "updated_at": "2020-08-10T17:53:57Z", "due_on": "2020-08-25T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2019-04-05T21:30:36Z", "updated_at": "2020-04-09T23:36:03Z", "closed_at": "2020-04-09T23:36:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Starting with the AWS Encryption SDK for C, we moved from master keys/providers to keyrings as a configuration/framework primitive. We need to add corresponding keyrings to this client as well.\r\n\r\nIn order to maintain backwards compatibility, we need to retain the existing MKP framework and support the use of MKPs within the new keyring framework. After discussing several options, we decided that the best route to accomplish this is with a MKP keyring.\r\n\r\nThis MKP keyring will take a MKP as input and provide the MK/MKP management logic currently in `DefaultCryptoMaterialsManager`, along with necessary keyring logic (ex: adding keyring traces), all wrapped up in the new keyring interface.\r\n\r\nAs a temporary measure, in order to enable end-to-end keyring tests without tackling the MKP keyring and the updates to `DefaultCryptoMaterialsManager`, we will need to make a `KeyringDefaultCryptoMaterialsManager` that handles the signing/verification keys but only understands keyrings.\r\n\r\nAll keyring development PRs should be made to the `keyring` branch.\r\n\r\n- [x] Updated cryptographic materials to meet keyring needs [pr: #163]\r\n- [x] Make updated encryption materials immutable [issue: #214]\r\n- [x] `KeyringTraceFlag` does not need to be value/name-compatible with C [issue: #215]\r\n- [x] Keyring interface [pr: #161]\r\n- [x] AWS KMS keyring [issue: #212] [pr: #218]\r\n- [x] Raw RSA keyring [pr: #165]\r\n- [x] Raw AES keyring [pr: #165]\r\n- [x] Multi keyring [pr: #166]\r\n- [x] Enable keyring use. [issue: #211] [pr: #216]\r\n- [x] Migration guide for users [issue: #213]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/103", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/103/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/103/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/103", "id": 380408671, "node_id": "MDU6SXNzdWUzODA0MDg2NzE=", "number": 103, "title": "Reduce required API of source streams.", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552402, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 782317518, "node_id": "MDU6TGFiZWw3ODIzMTc1MTg=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/maintenance", "name": "maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-13T20:26:38Z", "updated_at": "2018-12-18T00:44:13Z", "closed_at": "2018-12-18T00:44:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, the source stream used by `streaming_client` streams must implement four APIs:\r\n\r\n- `read()`\r\n- `tell()`\r\n- `close()`\r\n- `closed`\r\n\r\nAs raised in #80, there are several cases where it would be useful for us to only require `read()`.\r\n\r\nThis leaves the following to be considered for elimination:\r\n\r\n- [x] `tell()`\r\n- [x] `close()`\r\n- [x] `closed`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/100", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/100/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/100/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/100", "id": 380063215, "node_id": "MDU6SXNzdWUzODAwNjMyMTU=", "number": 100, "title": "Restructure tests to match module heirarchy", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552403, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDM=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}, {"id": 782317518, "node_id": "MDU6TGFiZWw3ODIzMTc1MTg=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/maintenance", "name": "maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-13T05:13:35Z", "updated_at": "2019-10-08T00:10:28Z", "closed_at": "2019-10-08T00:10:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Putting our tests in a structure that matches the source code helps a lot in making the tests discoverable and simple to map to the source that they are testing. We should restructure the tests in this repo to match the source structure, similar to how we structured tests in https://github.com/aws/aws-dynamodb-encryption-python.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/99", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/99/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/99/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/99", "id": 380062426, "node_id": "MDU6SXNzdWUzODAwNjI0MjY=", "number": 99, "title": "Convert all tests to pytest", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552403, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDM=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}, {"id": 782317518, "node_id": "MDU6TGFiZWw3ODIzMTc1MTg=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/maintenance", "name": "maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-11-13T05:08:55Z", "updated_at": "2018-12-18T00:22:30Z", "closed_at": "2018-12-18T00:22:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A lot of the original test suite was written in `unittest`. Let's get all of that moved over to `pytest`.\r\n\r\nInitially, this should be converting `unittest.TestCase` classes to `pytest` classes similar to what was done in #98. We can pull those methods out to stand-alone functions later if we decide we want to, but leaving them in classes will make the diffs most simpler.\r\n\r\nI would also like to opportunistically remove some of the over-zealous mocking present in these classes where we can.\r\n\r\nTest modules to convert:\r\n\r\n- [x] test/integration/test_i_aws_encrytion_sdk_client.py #114\r\n- [x] test/unit/test_aws_encryption_sdk.py #115\r\n- [x] test/unit/test_defaults.py #116\r\n- [x] test/unit/test_deserialize.py #117\r\n- [x] test/unit/test_encryption_context.py #118\r\n- [x] test/unit/test_providers_base_master_key.py #119\r\n- [x] test/unit/test_providers_base_master_key_provider.py #120\r\n- [x] test/unit/test_providers_kms_master_key.py #121\r\n- [x] test/unit/test_providers_kms_master_key_provider.py #122\r\n- [x] test/unit/test_providers_raw_master_key.py #123\r\n- [x] test/unit/test_providers_raw_master_key_provider.py #124\r\n- [x] test/unit/test_serialize.py #125\r\n- [x] test/unit/test_streaming_client_stream_decryptor.py #126\r\n- [x] test/unit/test_streaming_client_stream_encryptor.py #127\r\n- [x] test/unit/test_util_str_ops.py #128\r\n- [x] test/unit/test_utils.py #129\r\n\r\n\r\nDue to the changes that will need to happen, anyone looking at this please follow the following guidelines:\r\n1. Convert from `unittest` classes to classes using `pytest` first. We can change to functions later if desired, but converting the classes directly will minimize the changes in each test file.\r\n1. One test file per PR. This will minimize the amount of changes that need to be reviewed and speed up the review process.\r\n1. Run `tox -re autoformat` before committing to apply our formatting rules.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/83", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/83/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/83/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/83", "id": 360149157, "node_id": "MDU6SXNzdWUzNjAxNDkxNTc=", "number": 83, "title": "KMSMasterKeyProvider - requested master keys are generated before setting default region.", "user": {"login": "dtmistry", "id": 5296432, "node_id": "MDQ6VXNlcjUyOTY0MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5296432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtmistry", "html_url": "https://github.com/dtmistry", "followers_url": "https://api.github.com/users/dtmistry/followers", "following_url": "https://api.github.com/users/dtmistry/following{/other_user}", "gists_url": "https://api.github.com/users/dtmistry/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtmistry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtmistry/subscriptions", "organizations_url": "https://api.github.com/users/dtmistry/orgs", "repos_url": "https://api.github.com/users/dtmistry/repos", "events_url": "https://api.github.com/users/dtmistry/events{/privacy}", "received_events_url": "https://api.github.com/users/dtmistry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-14T04:04:52Z", "updated_at": "2018-09-20T19:15:36Z", "closed_at": "2018-09-20T19:15:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using KMSMasterKeyProvider, can a CMK key alias be used as the key_id instead of the arn?\r\n\r\nThe KMS API `GenerateDataKey` operation [accepts](https://docs.aws.amazon.com/kms/latest/APIReference/API_GenerateDataKey.html#API_GenerateDataKey_RequestSyntax) alias as the key_id. But it looks like the sdk expects the key_id to be an arn. If the key_id is not an arn, the init fails with the below error - \r\n\r\nThe below fails with an exception - \r\n\r\n```python\r\nkwargs = dict(\r\n    key_ids=[\"alias/cmk-alias\"],\r\n    region_names=[\"us-east-1\"],\r\n    botocore_session=existing_session\r\n)\r\naws_encryption_sdk.KMSMasterKeyProvider(**kwargs)      \r\n```\r\n\r\n```error\r\nUnknownRegionError: No default region found and no region determinable from key id: alias/cmk-alias\r\n\r\n/usr/local/lib/python2.7/site-packages/aws_encryption_sdk/key_providers/kms.py:50:UnknownRegionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/80", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/80/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/80/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/80", "id": 357023333, "node_id": "MDU6SXNzdWUzNTcwMjMzMzM=", "number": 80, "title": "DecryptionStream should handle simplest FileObj", "user": {"login": "Redoubts", "id": 2435101, "node_id": "MDQ6VXNlcjI0MzUxMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2435101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Redoubts", "html_url": "https://github.com/Redoubts", "followers_url": "https://api.github.com/users/Redoubts/followers", "following_url": "https://api.github.com/users/Redoubts/following{/other_user}", "gists_url": "https://api.github.com/users/Redoubts/gists{/gist_id}", "starred_url": "https://api.github.com/users/Redoubts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Redoubts/subscriptions", "organizations_url": "https://api.github.com/users/Redoubts/orgs", "repos_url": "https://api.github.com/users/Redoubts/repos", "events_url": "https://api.github.com/users/Redoubts/events{/privacy}", "received_events_url": "https://api.github.com/users/Redoubts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552402, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-05T00:32:57Z", "updated_at": "2019-05-30T19:27:35Z", "closed_at": "2019-05-30T19:27:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I'm trying to stream a download into a decryption stream, and my code looks something like this:\r\n\r\n```python\r\ndownloadable = self.bucket.Object(key).get()\r\ndestination = open(path_to_file, \"wb\")\r\n\r\ndecrypted_data = aws_encryption_sdk.stream(\r\n            mode='d',\r\n            source=downloadable[\"Body\"],\r\n            key_provider=self.static_master_key_provider\r\n)\r\n\r\nfor chunk in decrypted_data:\r\n    destination.write(chunk)\r\n```\r\n\r\nWhen I do this, I get an error after a single successful chunk read:\r\n`AttributeError: 'StreamingBody' object has no attribute 'closed'`\r\nI think it should try and handle this case (object with nothing but read and close).\r\n\r\nUnless you think this is an inappropriate way of piping an s3 blob into the decryption streamer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/75", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/75/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/75/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/75", "id": 355281597, "node_id": "MDU6SXNzdWUzNTUyODE1OTc=", "number": 75, "title": "Can't pass an object with read() to StreamDecryptor", "user": {"login": "Redoubts", "id": 2435101, "node_id": "MDQ6VXNlcjI0MzUxMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2435101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Redoubts", "html_url": "https://github.com/Redoubts", "followers_url": "https://api.github.com/users/Redoubts/followers", "following_url": "https://api.github.com/users/Redoubts/following{/other_user}", "gists_url": "https://api.github.com/users/Redoubts/gists{/gist_id}", "starred_url": "https://api.github.com/users/Redoubts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Redoubts/subscriptions", "organizations_url": "https://api.github.com/users/Redoubts/orgs", "repos_url": "https://api.github.com/users/Redoubts/repos", "events_url": "https://api.github.com/users/Redoubts/events{/privacy}", "received_events_url": "https://api.github.com/users/Redoubts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-29T18:31:38Z", "updated_at": "2018-09-04T22:15:58Z", "closed_at": "2018-09-04T22:14:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "So now I'm trying to download an encrypted file, and I figured I'd pipe it through the `StreamDecryptor`. But when I try this, I get back \r\n\r\n`TypeError: 'StreamingBody' does not have the buffer interface`\r\n\r\nI suspect this is because in `def prep_stream_data(data):` (L138:internal/utils/\\_\\_init\\_\\_.py), my file like object is checked with `isinstance(data, (file, io.IOBase, six.StringIO))`. But my object is a botocore `StreamingBody`, which doesn't inherit from any of these. So my object gets passed to io.BytesIO and dies because it's a stream and not a buffer.\r\n\r\nI'm not sure what this check is specifically requiring, it might be nicer to check for specific methods -- I expected anything with `read()` to work here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/73", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/73/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/73/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/73", "id": 355260035, "node_id": "MDU6SXNzdWUzNTUyNjAwMzU=", "number": 73, "title": "readable() from File Object from aws_encryption_sdk.stream always False", "user": {"login": "Redoubts", "id": 2435101, "node_id": "MDQ6VXNlcjI0MzUxMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2435101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Redoubts", "html_url": "https://github.com/Redoubts", "followers_url": "https://api.github.com/users/Redoubts/followers", "following_url": "https://api.github.com/users/Redoubts/following{/other_user}", "gists_url": "https://api.github.com/users/Redoubts/gists{/gist_id}", "starred_url": "https://api.github.com/users/Redoubts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Redoubts/subscriptions", "organizations_url": "https://api.github.com/users/Redoubts/orgs", "repos_url": "https://api.github.com/users/Redoubts/repos", "events_url": "https://api.github.com/users/Redoubts/events{/privacy}", "received_events_url": "https://api.github.com/users/Redoubts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-29T17:28:57Z", "updated_at": "2018-09-04T22:14:47Z", "closed_at": "2018-08-30T19:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to upload a file to an S3 bucket with boto3's `upload_fileobj`. I wanted to create an StreamEncryptor so that I could chain together the encryption and upload without much copying. But I find that the StreamEncryptor object won't take because it's not compatible. \r\n\r\nCompatibility means calling `readable()` on the object if it exists, and ensuring it returns `True`. But in this case, my stream object returns `False` on the call. This is unexpected, because I can call `read()` and get data -- which seems wrong because `False` means `read()` should raise an error.\r\n\r\nI can't see where readable is implemented in this class, it seems deep in the base/meta class. But maybe it's not implemented at all and defaulting to this value. But I think it should either return a semantically correct value, or not have this function at all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/72", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/72/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/72/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/72", "id": 354050071, "node_id": "MDU6SXNzdWUzNTQwNTAwNzE=", "number": 72, "title": "Generate non-conflicting frozen upstream test requirements", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-25T23:09:54Z", "updated_at": "2018-08-30T21:31:41Z", "closed_at": "2018-08-30T21:31:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "pyca/cryptography runs downstream tests for this project and other to verify that their changes have not broken identified downstream dependencies.\r\n\r\nEvents today caused the current way that we are handling this integration to be a problem. https://github.com/aws/aws-dynamodb-encryption-python/issues/85\r\n\r\nWe need to define and automate creation of a special frozen test requirements file for upstream tests to use when testing this repository in order to avoid this happening again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/68", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/68/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/68/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/68", "id": 351003499, "node_id": "MDU6SXNzdWUzNTEwMDM0OTk=", "number": 68, "title": "Add Python 3.7", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-15T23:32:22Z", "updated_at": "2018-08-30T19:36:29Z", "closed_at": "2018-08-30T19:36:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Add Python 3.7 tests to CI and add 3.7 to supported versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/67", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/67/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/67/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/67", "id": 351003377, "node_id": "MDU6SXNzdWUzNTEwMDMzNzc=", "number": 67, "title": "blacken", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-15T23:31:49Z", "updated_at": "2018-08-16T00:28:45Z", "closed_at": "2018-08-16T00:28:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Apply `black` and `isort` autoformatters and add to CI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/65", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/65/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/65/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/65", "id": 350919176, "node_id": "MDU6SXNzdWUzNTA5MTkxNzY=", "number": 65, "title": "Update for Pylint 2.0.0", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-15T18:39:26Z", "updated_at": "2018-08-15T23:30:27Z", "closed_at": "2018-08-15T23:30:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Pylint 2.0.0 added a bunch of new checks. We need to update to meet them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/60", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/60/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/60/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/60", "id": 341378862, "node_id": "MDU6SXNzdWUzNDEzNzg4NjI=", "number": 60, "title": "How to get 'IV' used for encryption using kms", "user": {"login": "siriaws", "id": 41277084, "node_id": "MDQ6VXNlcjQxMjc3MDg0", "avatar_url": "https://avatars3.githubusercontent.com/u/41277084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siriaws", "html_url": "https://github.com/siriaws", "followers_url": "https://api.github.com/users/siriaws/followers", "following_url": "https://api.github.com/users/siriaws/following{/other_user}", "gists_url": "https://api.github.com/users/siriaws/gists{/gist_id}", "starred_url": "https://api.github.com/users/siriaws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siriaws/subscriptions", "organizations_url": "https://api.github.com/users/siriaws/orgs", "repos_url": "https://api.github.com/users/siriaws/repos", "events_url": "https://api.github.com/users/siriaws/events{/privacy}", "received_events_url": "https://api.github.com/users/siriaws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-16T03:09:02Z", "updated_at": "2018-12-15T02:54:58Z", "closed_at": "2018-12-15T02:54:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to get 'IV' used for encryption using kms?\r\n we are using s3 copy to redshift  using client side encryption. and s3 object need s3  data as  metadata .\r\nthe error i see is \r\n\"error: Failed writing body (0 != 16347) Cause: S3 object encryption key iv is of invalid size. Size=17. Expected size 16\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/59", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/59/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/59/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/59", "id": 339204935, "node_id": "MDU6SXNzdWUzMzkyMDQ5MzU=", "number": 59, "title": "How can I encrypt a folder?", "user": {"login": "StefanMeier12", "id": 40916655, "node_id": "MDQ6VXNlcjQwOTE2NjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/40916655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StefanMeier12", "html_url": "https://github.com/StefanMeier12", "followers_url": "https://api.github.com/users/StefanMeier12/followers", "following_url": "https://api.github.com/users/StefanMeier12/following{/other_user}", "gists_url": "https://api.github.com/users/StefanMeier12/gists{/gist_id}", "starred_url": "https://api.github.com/users/StefanMeier12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StefanMeier12/subscriptions", "organizations_url": "https://api.github.com/users/StefanMeier12/orgs", "repos_url": "https://api.github.com/users/StefanMeier12/repos", "events_url": "https://api.github.com/users/StefanMeier12/events{/privacy}", "received_events_url": "https://api.github.com/users/StefanMeier12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-08T07:38:55Z", "updated_at": "2018-08-15T18:38:30Z", "closed_at": "2018-08-15T18:38:30Z", "author_association": "NONE", "active_lock_reason": null, "body": " I would like to encrypt and decrypt the EBeispielordner1 folder. It would also be interesting to have several\r\nCan encrypt folders in a single slide, e.g.\r\n\r\nE/Beispielordner1\r\n\r\nE/Beispielordner2\r\n\r\nE/Beispielordner3\r\n\r\nI would like to start this program from the console without GUI.\r\n\r\nCan you help me? How can I customize your code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/58", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/58/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/58/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/58", "id": 337080445, "node_id": "MDU6SXNzdWUzMzcwODA0NDU=", "number": 58, "title": "AttributeError while running examples in this repo", "user": {"login": "nbommu1", "id": 7593335, "node_id": "MDQ6VXNlcjc1OTMzMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7593335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbommu1", "html_url": "https://github.com/nbommu1", "followers_url": "https://api.github.com/users/nbommu1/followers", "following_url": "https://api.github.com/users/nbommu1/following{/other_user}", "gists_url": "https://api.github.com/users/nbommu1/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbommu1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbommu1/subscriptions", "organizations_url": "https://api.github.com/users/nbommu1/orgs", "repos_url": "https://api.github.com/users/nbommu1/repos", "events_url": "https://api.github.com/users/nbommu1/events{/privacy}", "received_events_url": "https://api.github.com/users/nbommu1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-29T17:37:23Z", "updated_at": "2019-05-30T19:24:59Z", "closed_at": "2019-05-30T19:24:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nwhen I'm running examples from this repo \"Encryption and Decryption\" , this gives me the following error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"kms-multi.py\", line 11, in <module>\r\n    key_provider=kms_key_provider\r\n  File \"/home/nbommu/python/local/lib/python2.7/site-packages/aws_encryption_sdk/__init__.py\", line 76, in encrypt\r\n    ciphertext = encryptor.read()\r\n  File \"/home/nbommu/python/local/lib/python2.7/site-packages/aws_encryption_sdk/streaming_client.py\", line 202, in read\r\n    self._prep_message()\r\n  File \"/home/nbommu/python/local/lib/python2.7/site-packages/aws_encryption_sdk/streaming_client.py\", line 405, in _prep_message\r\n    request=encryption_materials_request\r\n  File \"/home/nbommu/python/local/lib/python2.7/site-packages/aws_encryption_sdk/materials_managers/default.py\", line 78, in get_encryption_materials\r\n    signing_key = self._generate_signing_key_and_update_encryption_context(algorithm, encryption_context)\r\n  File \"/home/nbommu/python/local/lib/python2.7/site-packages/aws_encryption_sdk/materials_managers/default.py\", line 54, in _generate_signing_key_and_update_encryption_context\r\n    if algorithm.signing_algorithm_info is None:\r\nAttributeError: 'tuple' object has no attribute 'signing_algorithm_info'\r\n```\r\n\r\nName: Python\r\nVersion: 2.7.14\r\nName: boto3\r\nVersion: 1.7.48", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/56", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/56/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/56/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/56", "id": 334231354, "node_id": "MDU6SXNzdWUzMzQyMzEzNTQ=", "number": 56, "title": "Add support for additional SHA2 hashes in RawMasterKey RSA-OAEP-MGF1 wrapping algorithms", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552402, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-20T20:10:37Z", "updated_at": "2018-11-14T01:36:17Z", "closed_at": "2018-11-14T01:36:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\n\r\n`RawMasterKey` provides a compatible implementation of the behavior exhibited by the `JceMasterKey` provided in the AWS Encryption SDK for Java. Unfortunately, because we did not define constraints for `JceMasterKey`, when used with an RSA keypair it will accept [any JCE Standard Name wrapping algorithm for RSA](https://github.com/awslabs/aws-encryption-sdk-java/blob/master/src/main/java/com/amazonaws/encryptionsdk/jce/JceMasterKey.java#L98). This is only constrained by the Standard Names that your JCE Provider supports.\r\n\r\n`RawMasterKey`, by way of `WrappingAlgorithm`, is much more opinionated and will only accept [the specific algorithms that we have pre-defined](https://github.com/awslabs/aws-encryption-sdk-python/blob/master/src/aws_encryption_sdk/identifiers.py#L262-L264). This list was defined as `PKCS1v15`, `OAEP-MGF1-SHA1`, and `OAEP-MGF1-SHA256` because those are the only algorithms defined in the [JCE implementation requirements](https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#impl).\r\n\r\nWe will explicitly not be supporting all possible algorithms for several reasons, including but not limited to:\r\n1. No constraints are set in the JCE specification, so any JCE Provider could in theory support any names that they want to, including fully custom names/algorithms.\r\n1. Some commonly supported algorithms, such as some supported by the [SunJCE Provider](https://docs.oracle.com/javase/8/docs/technotes/guides/security/SunProviders.html#SunJCEProvider), we explicitly will never support. These include `NoPadding` and `OAEP-MGF1-MD5`.\r\n1. We do need to at some point better define the constraints of algorithms allowed be `JceMasterKey`. What exactly that will look like, especially considering compatibility requirements, remains to be seen and requires discussion.\r\n\r\n## Solution\r\n\r\nWe should add allowed `WrappingAlgorithm` definitions for `RSA-OAEP-MGF1` with additional valid SHA2 algorithms. We should at least add `SHA512`. Whether we should add SHA384/etc is pending discussion.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/51", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/51/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/51/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/51", "id": 320526385, "node_id": "MDU6SXNzdWUzMjA1MjYzODU=", "number": 51, "title": "Unable to decrypt any data key", "user": {"login": "ShailChoksi", "id": 2770931, "node_id": "MDQ6VXNlcjI3NzA5MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2770931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShailChoksi", "html_url": "https://github.com/ShailChoksi", "followers_url": "https://api.github.com/users/ShailChoksi/followers", "following_url": "https://api.github.com/users/ShailChoksi/following{/other_user}", "gists_url": "https://api.github.com/users/ShailChoksi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShailChoksi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShailChoksi/subscriptions", "organizations_url": "https://api.github.com/users/ShailChoksi/orgs", "repos_url": "https://api.github.com/users/ShailChoksi/repos", "events_url": "https://api.github.com/users/ShailChoksi/events{/privacy}", "received_events_url": "https://api.github.com/users/ShailChoksi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-05-05T17:21:33Z", "updated_at": "2018-12-15T02:53:56Z", "closed_at": "2018-12-15T02:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "code: \r\n```\r\nkms_key_provider = aws_encryption_sdk.KMSMasterKeyProvider(key_ids=[\r\n    os.environ[\"ENCRYPTION_KEY_ARN\"]\r\n])\r\n\r\n\r\ndef encrypt(plaintext):\r\n    ciphertext, _ = aws_encryption_sdk.encrypt(\r\n        source=plaintext,\r\n        key_provider=kms_key_provider\r\n    )\r\n\r\n    return base64.b64encode(ciphertext)\r\n\r\n\r\ndef decrypt(ciphertext_b64):\r\n    ciphertext = base64.b64decode(ciphertext_b64)\r\n\r\n    plaintext, _ = aws_encryption_sdk.decrypt(            \r\n        source=ciphertext,\r\n        key_provider=kms_key_provider,\r\n    )\r\n    return plaintext\r\n```\r\n\r\nFYI, this is using v1.3.2.\r\n\r\nI get the following error: \r\n```\r\nUnable to decrypt any data key\r\n```\r\n\r\nWhen I print out the ciphertext I can clearly see the correct encryption key arn. So I am not sure whats wrong here.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/49", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/49/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/49/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/49", "id": 313872301, "node_id": "MDU6SXNzdWUzMTM4NzIzMDE=", "number": 49, "title": "re-enable bandit run in Travis once >1.4.0 is released", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317591, "node_id": "MDU6TGFiZWw3ODIzMTc1OTE=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/blocked", "name": "blocked", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-12T20:16:25Z", "updated_at": "2018-08-15T23:30:38Z", "closed_at": "2018-08-15T23:30:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "re-enable bandit run in Travis once >1.4.0 is released\r\n\r\nThe bug that was causing us issues has been fixed[1], but a new version of bandit has not yet been released with these changes.\r\n\r\n[1] https://bugs.launchpad.net/bandit/+bug/1749603", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/44", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/44/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/44/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/44", "id": 298853466, "node_id": "MDU6SXNzdWUyOTg4NTM0NjY=", "number": 44, "title": "avoid leaving hanging object references in helper functions", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1622946466, "node_id": "MDU6TGFiZWwxNjIyOTQ2NDY2", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/good%20first%20issue", "name": "good first issue", "color": "35f4de", "default": true, "description": ""}, {"id": 782317518, "node_id": "MDU6TGFiZWw3ODIzMTc1MTg=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/maintenance", "name": "maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-21T06:13:18Z", "updated_at": "2020-05-05T17:39:16Z", "closed_at": "2020-05-05T17:39:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `encrypt` and `decrypt` helper functions in the top-level `aws_encryption_sdk` module currently return the header object from the `EncryptionStream` objects. To avoid any possibility of those objects not being released for garbage collection because of active reference, we should copy the header object and return the copy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/39", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/39/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/39/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/39", "id": 287542536, "node_id": "MDU6SXNzdWUyODc1NDI1MzY=", "number": 39, "title": "With attrs 17.4.0, \"convert\" is deprecated in favor of \"converter\"", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317057, "node_id": "MDU6TGFiZWw3ODIzMTcwNTc=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/PR%20pending", "name": "PR pending", "color": "c2e0c6", "default": false, "description": null}, {"id": 800862875, "node_id": "MDU6TGFiZWw4MDA4NjI4NzU=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/dependency%20breaking%20change", "name": "dependency breaking change", "color": "ea3cd0", "default": false, "description": null}, {"id": 782317518, "node_id": "MDU6TGFiZWw3ODIzMTc1MTg=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/maintenance", "name": "maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-01-10T19:02:43Z", "updated_at": "2018-01-12T23:59:56Z", "closed_at": "2018-01-12T23:59:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\n\r\n> The attr.ib(convert=callable) option is now deprecated in favor of attr.ib(converter=callable).\r\n> \r\n> This is done to achieve consistency with other noun-based arguments like validator.\r\n> \r\n> convert will keep working until at least January 2019 while raising a DeprecationWarning.\r\n\r\nhttps://github.com/python-attrs/attrs/blob/master/CHANGELOG.rst#deprecations\r\n\r\nReported on the AWS forums: https://forums.aws.amazon.com/thread.jspa?threadID=271087\r\n\r\n## Solution\r\n\r\nWe'll need to rename each use of \"convert\" to \"converter\" and bump requirements to `attrs >= 17.4.0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/37", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/37/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/37/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/37", "id": 283013391, "node_id": "MDU6SXNzdWUyODMwMTMzOTE=", "number": 37, "title": "pylint 1.8.0 introduced new checks that we are failing", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317057, "node_id": "MDU6TGFiZWw3ODIzMTcwNTc=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/PR%20pending", "name": "PR pending", "color": "c2e0c6", "default": false, "description": null}, {"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 782317518, "node_id": "MDU6TGFiZWw3ODIzMTc1MTg=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/maintenance", "name": "maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-12-18T20:41:18Z", "updated_at": "2017-12-19T21:35:39Z", "closed_at": "2017-12-19T21:35:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://travis-ci.org/awslabs/aws-encryption-sdk-python/jobs/317489061", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/34", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/34/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/34/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/34", "id": 279353149, "node_id": "MDU6SXNzdWUyNzkzNTMxNDk=", "number": 34, "title": "RawMasterKeyProvider runtim-error: AttributeError: can't set attribute", "user": {"login": "solzsolz", "id": 6286177, "node_id": "MDQ6VXNlcjYyODYxNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6286177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solzsolz", "html_url": "https://github.com/solzsolz", "followers_url": "https://api.github.com/users/solzsolz/followers", "following_url": "https://api.github.com/users/solzsolz/following{/other_user}", "gists_url": "https://api.github.com/users/solzsolz/gists{/gist_id}", "starred_url": "https://api.github.com/users/solzsolz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solzsolz/subscriptions", "organizations_url": "https://api.github.com/users/solzsolz/orgs", "repos_url": "https://api.github.com/users/solzsolz/repos", "events_url": "https://api.github.com/users/solzsolz/events{/privacy}", "received_events_url": "https://api.github.com/users/solzsolz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-05T12:13:30Z", "updated_at": "2018-08-01T18:12:42Z", "closed_at": "2018-01-10T18:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nhi \r\n\r\nI called below method:\r\n\r\n  cycle_file(\"sample.txt\")\r\n\r\nGot below run-time error:\r\n\r\n----------------------\r\n\r\ntraceback (most recent call last):\r\n  File \".\\testSdk.py\", line 116, in <module>\r\n    main()\r\n  File \".\\testSdk.py\", line 109, in main\r\n    cycle_file(\"sample.txt\")\r\n  File \".\\testSdk.py\", line 61, in cycle_file\r\n    master_key_provider.add_master_key(key_id)\r\n  File \"C:\\Users\\A610620\\AppData\\Local\\Continuum\\Anaconda3\\lib\\site-packages\\aws_encryption_sdk\\key_providers\\base.py\", line 155, in add_master_key\r\n    master_key = self._new_master_key(key_id)\r\n  File \"C:\\Users\\A610620\\AppData\\Local\\Continuum\\Anaconda3\\lib\\site-packages\\aws_encryption_sdk\\key_providers\\raw.py\", line 234, in _new_master_key\r\n    wrapping_key=wrapping_key\r\n  File \"<attrs generated init 97ee74820011dd83c2b5dad60b4be0b7f1be967f>\", line 3, in __init__\r\nAttributeError: can't set attribute\r\n\r\n----------------------------\r\n\r\nexception (2nd exception!) is being thrown here (def _get_raw_key)\r\n\r\n    def _get_raw_key(self, key_id):\r\n        \"\"\"Returns a static, randomly-generated symmetric key for the specified key ID.\r\n\r\n        :param str key_id: Key ID\r\n        :returns: Wrapping key that contains the specified static key\r\n        :rtype: :class:`aws_encryption_sdk.internal.crypto.WrappingKey`\r\n        \"\"\"\r\n        try:\r\n            static_key = self._static_keys[key_id]\r\n        except KeyError:\r\n            static_key = os.urandom(32)\r\n            self._static_keys[key_id] = static_key\r\n            try:\r\n                return WrappingKey(wrapping_algorithm=WrappingAlgorithm.AES_256_GCM_IV12_TAG16_NO_PADDING,wrapping_key=static_key,wrapping_key_type=EncryptionKeyType.SYMMETRIC)\r\n            except Exception as e:\r\n                print (e)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/32", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/32/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/32/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/32", "id": 278748428, "node_id": "MDU6SXNzdWUyNzg3NDg0Mjg=", "number": 32, "title": "blacklist pytest 3.3.0", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-12-03T06:12:40Z", "updated_at": "2017-12-05T21:56:15Z", "closed_at": "2017-12-05T21:56:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\nWe are affected by the same issue identified here: https://github.com/awslabs/aws-encryption-sdk-cli/issues/125\r\n\r\n## Solution\r\nAs we did with the CLI, we will be blacklisting pytest 3.3.0. I am confident that the fix will be included in pytest 3.3.1 https://github.com/pytest-dev/pytest/issues/2957", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/31", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/31/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/31/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/31", "id": 278647303, "node_id": "MDU6SXNzdWUyNzg2NDczMDM=", "number": 31, "title": "some tests break when default region is set in .aws/config", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1622946466, "node_id": "MDU6TGFiZWwxNjIyOTQ2NDY2", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/good%20first%20issue", "name": "good first issue", "color": "35f4de", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-02T02:32:51Z", "updated_at": "2019-10-17T19:02:33Z", "closed_at": "2019-10-17T19:02:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\nSome of our unit tests fail when there is a region set for the default profile in `.aws/config`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/29", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/29/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/29/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/29", "id": 276721804, "node_id": "MDU6SXNzdWUyNzY3MjE4MDQ=", "number": 29, "title": "attrs 17.3.0 breaks some of our tests", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-11-25T03:18:57Z", "updated_at": "2017-12-05T21:56:50Z", "closed_at": "2017-12-05T21:56:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\nThe backwards incompatible change in [attrs 17.3.0][1] broke [some of our tests][2]. This is apparently due to our use of a feature that was [deprecated in 16.1][3].\r\n\r\n## Solution\r\nThe good news is that none of our actual client code uses this deprecated feature, so users should not be affected by this. Because of this, we just need to update our affected tests to move away from this access pattern.\r\n\r\n[1]: https://attrs.readthedocs.io/en/stable/changelog.html#id1\r\n[2]: https://travis-ci.org/awslabs/aws-encryption-sdk-python/builds/307011820\r\n[3]: https://github.com/python-attrs/attrs/pull/253", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/26", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/26/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/26/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/26", "id": 273119072, "node_id": "MDU6SXNzdWUyNzMxMTkwNzI=", "number": 26, "title": "_EncryptionStream.read() does not properly handle b < 0", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-11T04:47:55Z", "updated_at": "2018-11-09T00:43:36Z", "closed_at": "2018-11-09T00:43:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\n`read()` for `b < 0` should readall. Currently, it will attempt to process a read of a negative value of bytes; it will only readall if `b is None`.\r\n\r\n## Solution\r\nSanitize `b < 0` to `None`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/25", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/25/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/25/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/25", "id": 272027656, "node_id": "MDU6SXNzdWUyNzIwMjc2NTY=", "number": 25, "title": "user agent is not actually being modified", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-11-07T23:54:21Z", "updated_at": "2018-08-15T21:36:33Z", "closed_at": "2018-08-15T21:36:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\nI could have sworn I checked this, but apparently the user agent modification we are doing is not actually taking effect.\r\n\r\n## Solution\r\nIt looks like this needs to be modified on the botocore level, not on the boto3 client level. Unfortunately, this means that we cannot modify the user agent if a user provides a custom KMS client, as we should not be modifying a botocore client that might be used for something else.\r\n\r\nIn `KMSMasterKeyProvider` we can modify the botocore client if we build it directly. However, we should not modify a botocore client that was provided to us.\r\n\r\n### TODO\r\nMake sure that there is not a way to modify the user agent at the boto3 client layer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/24", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/24/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/24/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/24", "id": 270466898, "node_id": "MDU6SXNzdWUyNzA0NjY4OTg=", "number": 24, "title": "streaming_client classes do not properly interpret short reads in source streams", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-11-01T21:58:48Z", "updated_at": "2018-11-14T01:35:20Z", "closed_at": "2018-11-14T01:35:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\nPer [PEP 3116](https://www.python.org/dev/peps/pep-3116/#raw-i-o):\r\n\r\n> .read(n: int) -> bytes\r\n> \r\n>     Read up to n bytes from the object and return them. Fewer than n bytes may be\r\n>     returned if the operating system call returns fewer than n bytes. If 0 bytes are\r\n>     returned, this indicates end of file. If the object is in non-blocking mode and no\r\n>     bytes are available, the call returns None.\r\n\r\nThe current behavior of the clients in `streaming_clients` is to interpret reads returning fewer than n bytes as OEF.\r\n\r\n## Solution\r\nUpdate clients to properly handle short reads per PEP 3116.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/23", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/23/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/23/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/23", "id": 269818936, "node_id": "MDU6SXNzdWUyNjk4MTg5MzY=", "number": 23, "title": "add pytest markers and refactor testenvs to separate unit/func/integ/accept", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 782317057, "node_id": "MDU6TGFiZWw3ODIzMTcwNTc=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/PR%20pending", "name": "PR pending", "color": "c2e0c6", "default": false, "description": null}, {"id": 524552402, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDI=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-31T03:03:10Z", "updated_at": "2018-08-01T18:12:41Z", "closed_at": "2018-01-13T01:42:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Problem\r\nCurrently, all the tests run as a big batch, with the integration tests skipped unless a specific environment variable is found.\r\n\r\nThis is a bit clunky and makes it difficult to tell in Travis whether integration tests were run or skipped.\r\n\r\n## Solution\r\n1. Add pytest markers to all functional, integration, and acceptance (xcompat) tests.\r\n   * https://docs.pytest.org/en/latest/example/markers.html\r\n1. Update tox to have separate testenvs for unt/func/integ/accept tests.\r\n   * http://tox.readthedocs.io/en/latest/config.html#generating-environments-conditional-settings\r\n1. Update Travis CI configuration to run the new tox testenvs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/20", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/20/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/20/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/20", "id": 261401001, "node_id": "MDU6SXNzdWUyNjE0MDEwMDE=", "number": 20, "title": "Set up Windows CI builds with AppVeyor or similar", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-09-28T17:35:02Z", "updated_at": "2018-01-17T00:20:23Z", "closed_at": "2018-01-17T00:20:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/18", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/18/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/18/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/18", "id": 261156562, "node_id": "MDU6SXNzdWUyNjExNTY1NjI=", "number": 18, "title": "refactor skip_tests() to simplify and streamline", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-28T00:20:47Z", "updated_at": "2018-01-15T18:23:58Z", "closed_at": "2018-01-15T18:23:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Once we have the test vectors available as a Python package, much of `integration_test_utils`, including `skip_tests()` can be significantly simplified.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/17", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/17/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/17/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/17", "id": 261151215, "node_id": "MDU6SXNzdWUyNjExNTEyMTU=", "number": 17, "title": "deserialize_header function needs to be refactored", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-09-27T23:45:23Z", "updated_at": "2018-08-15T23:30:32Z", "closed_at": "2018-08-15T23:30:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As pylint and flake8 justifiably point out, `internal.formatting.deserialize.deserialize_header` is too complex. Refactor to simplify.\r\n\r\n```\r\n186590df9307:aws-encryption-sdk-python bullocm$ tox -e flake8,pylint\r\nGLOB sdist-make: /Users/bullocm/git/aws-encryption-sdk-python/setup.py\r\nflake8 inst-nodeps: /Users/bullocm/git/aws-encryption-sdk-python/.tox/dist/aws-encryption-sdk-1.3.2.zip\r\nflake8 installed: asn1crypto==0.23.0,attrs==17.2.0,aws-encryption-sdk==1.3.2,boto3==1.4.7,botocore==1.7.17,cffi==1.11.0,cryptography==2.0.3,docutils==0.14,flake8==3.4.1,flake8-docstrings==1.1.0,flake8-import-order==0.13,flake8-polyfill==1.0.1,idna==2.6,jmespath==0.9.3,mccabe==0.6.1,pycodestyle==2.3.1,pycparser==2.18,pydocstyle==2.0.0,pyflakes==1.5.0,python-dateutil==2.6.1,s3transfer==0.1.11,six==1.11.0,snowballstemmer==1.2.1,wrapt==1.10.11\r\nflake8 runtests: PYTHONHASHSEED='1582386464'\r\nflake8 runtests: commands[0] | flake8 src/aws_encryption_sdk/ setup.py\r\nsrc/aws_encryption_sdk/internal/formatting/deserialize.py:63:1: C901 'deserialize_header' is too complex (15)\r\nERROR: InvocationError: '/Users/bullocm/git/aws-encryption-sdk-python/.tox/flake8/bin/flake8 src/aws_encryption_sdk/ setup.py'\r\npylint inst-nodeps: /Users/bullocm/git/aws-encryption-sdk-python/.tox/dist/aws-encryption-sdk-1.3.2.zip\r\npylint installed: asn1crypto==0.23.0,astroid==1.5.3,attrs==17.2.0,aws-encryption-sdk==1.3.2,boto3==1.4.7,botocore==1.7.17,cffi==1.11.0,coverage==4.4.1,cryptography==2.0.3,docutils==0.14,idna==2.6,isort==4.2.15,jmespath==0.9.3,lazy-object-proxy==1.3.1,mccabe==0.6.1,mock==2.0.0,pbr==3.1.1,py==1.4.34,pycparser==2.18,pyflakes==1.6.0,pylint==1.7.2,pytest==3.2.2,pytest-catchlog==1.2.2,pytest-cov==2.5.1,pytest-mock==1.6.3,python-dateutil==2.6.1,s3transfer==0.1.11,six==1.11.0,wrapt==1.10.11\r\npylint runtests: PYTHONHASHSEED='1582386464'\r\npylint runtests: commands[0] | pylint --rcfile=pylintrc src/aws_encryption_sdk/ setup.py\r\n************* Module aws_encryption_sdk.internal.formatting.deserialize\r\nsrc/aws_encryption_sdk/internal/formatting/deserialize.py:63: [R0914(too-many-locals), deserialize_header] Too many local variables (27/15)\r\nsrc/aws_encryption_sdk/internal/formatting/deserialize.py:63: [R0915(too-many-statements), deserialize_header] Too many statements (54/50)\r\n\r\n------------------------------------------------------------------\r\nYour code has been rated at 9.99/10 (previous run: 9.99/10, +0.00)\r\n\r\nERROR: InvocationError: '/Users/bullocm/git/aws-encryption-sdk-python/.tox/pylint/bin/pylint --rcfile=pylintrc src/aws_encryption_sdk/ setup.py'\r\n__________________________________________________________________________________________________ summary ___________________________________________________________________________________________________\r\nERROR:   flake8: commands failed\r\nERROR:   pylint: commands failed\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/13", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/13/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/13/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/13", "id": 258655405, "node_id": "MDU6SXNzdWUyNTg2NTU0MDU=", "number": 13, "title": "StreamDecryptor._read_header() fails when source stream does not support tell() and seek()", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-18T23:55:21Z", "updated_at": "2017-10-25T21:10:20Z", "closed_at": "2017-10-25T21:10:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`StreamDecryptor._read_header()` currently assumes that the input stream supports `tell()` and `seek()` and uses these methods to rewind the input read after deserializing the header to feed into the header auth hash. If these methods are not supported (ex: for `stdin`), decryption will fail.\r\n\r\nWe cannot simply read the entire thing into memory, as we have no way of knowing how large the input stream will be. We cannot use a `BufferedReader` because we have no way of reasonably knowing how much we need to buffer (somewhere between ~600B and 8MB).\r\n\r\nProposed fix is to create `internal.utils.TeeStream`, based on `internal.utils.ROStream`, which will record all data which is read to an alternate stream. This alternate stream will then be read out after reading the header and the contents returned from `internal.deserialize.deserialize_header` along with the deserialized header.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/11", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/11/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/11/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/11", "id": 253844136, "node_id": "MDU6SXNzdWUyNTM4NDQxMzY=", "number": 11, "title": "cross-region performance optimization", "user": {"login": "rspicer", "id": 9052833, "node_id": "MDQ6VXNlcjkwNTI4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9052833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspicer", "html_url": "https://github.com/rspicer", "followers_url": "https://api.github.com/users/rspicer/followers", "following_url": "https://api.github.com/users/rspicer/following{/other_user}", "gists_url": "https://api.github.com/users/rspicer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspicer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspicer/subscriptions", "organizations_url": "https://api.github.com/users/rspicer/orgs", "repos_url": "https://api.github.com/users/rspicer/repos", "events_url": "https://api.github.com/users/rspicer/events{/privacy}", "received_events_url": "https://api.github.com/users/rspicer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-08-30T00:34:23Z", "updated_at": "2018-08-01T18:12:41Z", "closed_at": "2017-09-25T19:32:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again my friends - just finished implementation, using this library called from within a child process in node. I initially thought my slow speeds were due to the buildup and takedown of the process itself, but it seems now, after some timing tests, that this isn't the case.\r\n\r\nThe decrypt function, by itself, takes 1+ seconds. Is this normal behaviour? I'm calling it a single time, with a string payload no larger than 400 characters long.  Sometimes I call it with a longer string, but even with strings ~50 characters in length it seems to take this full second of time.\r\n\r\nFor our use case (calling it within an API endpoint) this doesn't really work. Am I doing something wrong? Let me know if you need to see my code, but it only has a few additions from the example code you guys gave, and I'm timing only the call to the SDK itself.\r\n\r\nThanks guys!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/10", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/10/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/10/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/10", "id": 253790251, "node_id": "MDU6SXNzdWUyNTM3OTAyNTE=", "number": 10, "title": "Underlying (and useful) exception details are hidden", "user": {"login": "morrissimo", "id": 782829, "node_id": "MDQ6VXNlcjc4MjgyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/782829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morrissimo", "html_url": "https://github.com/morrissimo", "followers_url": "https://api.github.com/users/morrissimo/followers", "following_url": "https://api.github.com/users/morrissimo/following{/other_user}", "gists_url": "https://api.github.com/users/morrissimo/gists{/gist_id}", "starred_url": "https://api.github.com/users/morrissimo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morrissimo/subscriptions", "organizations_url": "https://api.github.com/users/morrissimo/orgs", "repos_url": "https://api.github.com/users/morrissimo/repos", "events_url": "https://api.github.com/users/morrissimo/events{/privacy}", "received_events_url": "https://api.github.com/users/morrissimo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-08-29T20:17:26Z", "updated_at": "2017-09-12T23:34:55Z", "closed_at": "2017-09-12T23:34:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "This has bitten me numerous times!\r\n\r\nAll of the following instances catch `ClientError` from botocore and re-raise a new generic (and remarkably useless by comparison) exception:\r\n* `key_providers.kms._generate_data_key:L213`\r\n* `key_providers.kms._encrypt_data_key:L250`\r\n* `key_providers.kms._decrypt_data_key:L283`\r\n\r\nI believe a different approach should be taken here to prevent hiding botocore Client exception details (network connectivity, insufficient permissions, etc).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/8", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/8/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/8/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/8", "id": 251468755, "node_id": "MDU6SXNzdWUyNTE0Njg3NTU=", "number": 8, "title": "DefaultCryptoMaterialsManager docstring incorrectly indicates that algorithm is a configurable parameter", "user": {"login": "mattsb42", "id": 6590697, "node_id": "MDQ6VXNlcjY1OTA2OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6590697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42", "html_url": "https://github.com/mattsb42", "followers_url": "https://api.github.com/users/mattsb42/followers", "following_url": "https://api.github.com/users/mattsb42/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42/orgs", "repos_url": "https://api.github.com/users/mattsb42/repos", "events_url": "https://api.github.com/users/mattsb42/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-08-20T05:52:54Z", "updated_at": "2017-09-12T23:34:49Z", "closed_at": "2017-09-12T23:34:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "`DefaultCrytoMaterialsManager` docstring incorrectly indicates that algorithm is configurable.  Behavior is as intended, but I missed clearing out this docstring.\r\n\r\nhttps://github.com/awslabs/aws-encryption-sdk-python/blob/b6a2bbca4db6ab46d65fe7e2eacfffe25abff3a2/aws_encryption_sdk/materials_managers/default.py#L26", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/7", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/7/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/7/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/7", "id": 250390378, "node_id": "MDU6SXNzdWUyNTAzOTAzNzg=", "number": 7, "title": "Some docstrings indicate str return value when they should indicate bytes", "user": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 524552400, "node_id": "MDU6TGFiZWw1MjQ1NTI0MDA=", "url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsb42-aws", "id": 23565203, "node_id": "MDQ6VXNlcjIzNTY1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/23565203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsb42-aws", "html_url": "https://github.com/mattsb42-aws", "followers_url": "https://api.github.com/users/mattsb42-aws/followers", "following_url": "https://api.github.com/users/mattsb42-aws/following{/other_user}", "gists_url": "https://api.github.com/users/mattsb42-aws/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsb42-aws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsb42-aws/subscriptions", "organizations_url": "https://api.github.com/users/mattsb42-aws/orgs", "repos_url": "https://api.github.com/users/mattsb42-aws/repos", "events_url": "https://api.github.com/users/mattsb42-aws/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsb42-aws/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-08-15T18:02:36Z", "updated_at": "2017-09-12T23:34:37Z", "closed_at": "2017-09-12T23:34:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As raised in [issue 6](https://github.com/awslabs/aws-encryption-sdk-python/issues/6), some of the docstrings still indicate a `str` return value.  The docs need to be swept to catch any of these cases[1][2] and fix them.\r\n\r\n[1] https://github.com/awslabs/aws-encryption-sdk-python/blob/master/aws_encryption_sdk/__init__.py#L61\r\n[2] https://github.com/awslabs/aws-encryption-sdk-python/blob/master/aws_encryption_sdk/__init__.py#L106", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/6", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/6/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/6/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/6", "id": 250386824, "node_id": "MDU6SXNzdWUyNTAzODY4MjQ=", "number": 6, "title": "Encrypt function returning Byte Array instead of string", "user": {"login": "rspicer", "id": 9052833, "node_id": "MDQ6VXNlcjkwNTI4MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9052833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspicer", "html_url": "https://github.com/rspicer", "followers_url": "https://api.github.com/users/rspicer/followers", "following_url": "https://api.github.com/users/rspicer/following{/other_user}", "gists_url": "https://api.github.com/users/rspicer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspicer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspicer/subscriptions", "organizations_url": "https://api.github.com/users/rspicer/orgs", "repos_url": "https://api.github.com/users/rspicer/repos", "events_url": "https://api.github.com/users/rspicer/events{/privacy}", "received_events_url": "https://api.github.com/users/rspicer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T17:49:21Z", "updated_at": "2018-08-01T18:12:41Z", "closed_at": "2017-08-15T18:04:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there! I'm new to using this library, so forgive any stupid questions :). When I call the encrypt function, it returns a byte array... although, in the documentation, it says it's supposed to return a string. My implementation relies on the ciphertext being returned as a string - if I'm missing something, and it can't be, is there an encoding for the byte array I can use to convert it in to a string?\r\n\r\nThanks for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/5", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/5/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/5/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/5", "id": 233723166, "node_id": "MDU6SXNzdWUyMzM3MjMxNjY=", "number": 5, "title": "Cache KMS plaintext and encrypted datakeys with some TTL?", "user": {"login": "gregsterin", "id": 21046178, "node_id": "MDQ6VXNlcjIxMDQ2MTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/21046178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregsterin", "html_url": "https://github.com/gregsterin", "followers_url": "https://api.github.com/users/gregsterin/followers", "following_url": "https://api.github.com/users/gregsterin/following{/other_user}", "gists_url": "https://api.github.com/users/gregsterin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregsterin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregsterin/subscriptions", "organizations_url": "https://api.github.com/users/gregsterin/orgs", "repos_url": "https://api.github.com/users/gregsterin/repos", "events_url": "https://api.github.com/users/gregsterin/events{/privacy}", "received_events_url": "https://api.github.com/users/gregsterin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-05T21:59:32Z", "updated_at": "2018-08-01T18:12:41Z", "closed_at": "2017-08-09T19:41:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've noticed that each call to encrypt() in the SDK results in network calls to KMS for GenerateDataKey and Encrypt. In my use case, I am using Kinesis and I would like encrypt each record in Kinesis using aws-encryption-sdk-python. Since I can have many records I need to encrypt per second, it would be nice if the SDK would cache data keys for some TTL, so that I'm not making network calls for each record I need to encrypt, as there can be hundreds-thousands of these per second. Current measurements suggest that each call to encrypt takes ~50ms, the majority of this time due to the network calls.\r\n\r\nIs there a recommended way to handle such use case?\r\n\r\nIf not, I would suggest adding two optional kwargs to the KMS key provider:\r\n\r\n* cache_kms_client_response\r\n* kms_client_response_cache_ttl,\r\n\r\nsuch that I can create a key provider that caches the keys for some time to fix this problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/4", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/4/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/4/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/4", "id": 231142677, "node_id": "MDU6SXNzdWUyMzExNDI2Nzc=", "number": 4, "title": "encryption_context isn't respected on decrypt", "user": {"login": "troylar", "id": 1931732, "node_id": "MDQ6VXNlcjE5MzE3MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1931732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troylar", "html_url": "https://github.com/troylar", "followers_url": "https://api.github.com/users/troylar/followers", "following_url": "https://api.github.com/users/troylar/following{/other_user}", "gists_url": "https://api.github.com/users/troylar/gists{/gist_id}", "starred_url": "https://api.github.com/users/troylar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troylar/subscriptions", "organizations_url": "https://api.github.com/users/troylar/orgs", "repos_url": "https://api.github.com/users/troylar/repos", "events_url": "https://api.github.com/users/troylar/events{/privacy}", "received_events_url": "https://api.github.com/users/troylar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-24T19:13:40Z", "updated_at": "2018-08-01T18:12:41Z", "closed_at": "2017-05-24T20:39:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/2", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/2/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/2/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/2", "id": 229213953, "node_id": "MDU6SXNzdWUyMjkyMTM5NTM=", "number": 2, "title": "TypeError: unhashable type: 'EncryptedDataKey' - possible incompatibility with attrs-17.1.0", "user": {"login": "rjw", "id": 13656641, "node_id": "MDQ6VXNlcjEzNjU2NjQx", "avatar_url": "https://avatars1.githubusercontent.com/u/13656641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjw", "html_url": "https://github.com/rjw", "followers_url": "https://api.github.com/users/rjw/followers", "following_url": "https://api.github.com/users/rjw/following{/other_user}", "gists_url": "https://api.github.com/users/rjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjw/subscriptions", "organizations_url": "https://api.github.com/users/rjw/orgs", "repos_url": "https://api.github.com/users/rjw/repos", "events_url": "https://api.github.com/users/rjw/events{/privacy}", "received_events_url": "https://api.github.com/users/rjw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-17T01:35:21Z", "updated_at": "2018-08-01T18:12:40Z", "closed_at": "2017-05-23T18:25:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI'm getting the above error when trying to encrypt using `aws_encryption_sdk.encrypt()` as per the README.md instructions [here](https://github.com/awslabs/aws-encryption-sdk-python) at this location:\r\n\r\n```\r\n/aws_encryption_sdk/internal/utils.py\", line 173, in prepare_data_keys\r\n    encrypted_data_keys.add(encrypted_key)\r\nTypeError: unhashable type: 'EncryptedDataKey'\r\n\r\n```\r\n\r\nI'm using Python 2.7.4 with `aws-encryption-sdk-1.2.0` and `attrs-17.1.0` (which I think is the cause of the problem). Installation of the SDK looked fine, and the dependencies installed fine too.\r\n\r\nThe `__hash__` method on encrypted_key is `None`, so it's unable to add it to the set being returned by `prepare_data_keys()`.\r\n\r\nWhen I edit `aws_encryption_sdk/structures.py` and add `frozen=True` to the `@attr.s()` decoration on `class MasterKeyInfo(object)` and `class EncryptedDataKey(object)`, the objects become hashable courtesy of `attrs`, and it seems to work OK.\r\n\r\nThe changes to `attrs` could be the problem here, looking at [commits since 16.3.0](https://github.com/python-attrs/attrs/compare/16.3.0...master), there are a few relating to frozen classes and hashing behaviour.\r\n\r\nReverting to `attrs-16.3.0` works fine, which would seem to confirm this.\r\n\r\nI'm using a fresh CMK loaded into a `KMSMasterKeyProvider` as per the instructions:\r\n\r\n```\r\nkms_key_provider = aws_encryption_sdk.KMSMasterKeyProvider(key_ids=[\r\n    'arn:aws:kms:ap-southeast-2:123456789012:key/749cd1b6-dc9b-4a1d-9a90-86ef2b11012a'\r\n])\r\n```\r\n\r\nThe` EncryptedDataKey encrypted_key` that's obtained and returned looks OK and is:\r\n```\r\nEncryptedDataKey(key_provider=MasterKeyInfo(provider_id=u'aws-kms', key_info='arn:aws:kms:ap-southeast-2:123456789012:key/749cd1b6-dc9b-4a1d-9a90-86ef2b11012a'), encrypted_data_key=\"\\x01\\x02\\x02\\x00x\\x1b\\x825\\xa7\\x9aZ^k:0\\xa5\\xd2rD\\xb8\\xc3U\\xea+\\x1d\\xe5\\x90\\xe8\\x1b\\x90\\xe7'X\\x00\\xa7s+\\x01\\xbb\\x87\\xa2w\\x04\\xe7y\\xe6u\\xd4I\\xa5\\x813j+\\x00\\x00\\x00~0|\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x07\\x06\\xa0o0m\\x02\\x01\\x000h\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x07\\x010\\x1e\\x06\\t`\\x86H\\x01e\\x03\\x04\\x01.0\\x11\\x04\\x0c\\xc7\\xc3\\xe0\\x1f\\r\\xd8\\xe0c\\x13r?\\xd1\\x02\\x01\\x10\\x80;J5c\\x943\\xf9\\x965\\xd6p%\\x1a\\xb1S\\x9e\\x13\\x8f\\xceV\\\\\\xe6v\\xacD9o\\x89\\xd7\\x147\\xca\\xa8\\x84\\xc0i\\x169?\\xef\\xe1\\xcan~\\xe0\\xd20_^\\xd1M\\xc4\\x166\\x9am\\xbe\\xa47\\xcb\")\r\n```\r\n\r\nPlease let me know if you need any further information?\r\n\r\nThanks\r\nRichard\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/1", "repository_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python", "labels_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/1/comments", "events_url": "https://api.github.com/repos/aws/aws-encryption-sdk-python/issues/1/events", "html_url": "https://github.com/aws/aws-encryption-sdk-python/issues/1", "id": 216803729, "node_id": "MDU6SXNzdWUyMTY4MDM3Mjk=", "number": 1, "title": "Name aws-encryption", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-24T14:34:15Z", "updated_at": "2018-08-01T18:12:40Z", "closed_at": "2017-03-24T18:12:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm now the owner of the name aws-encryption, trying to install it currently fails with a message \"Did you mean to install aws-encryption-sdk?\" ([code](https://github.com/adamchainz/aws-encryption/blob/master/setup.py)).\r\n\r\nMaybe you want it though?", "performed_via_github_app": null, "score": 1.0}]}