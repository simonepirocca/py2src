{"total_count": 59, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/keleshev/schema/issues/242", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/242/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/242/events", "html_url": "https://github.com/keleshev/schema/issues/242", "id": 674417052, "node_id": "MDU6SXNzdWU2NzQ0MTcwNTI=", "number": 242, "title": "is there conditional schema?", "user": {"login": "ftian1", "id": 16394660, "node_id": "MDQ6VXNlcjE2Mzk0NjYw", "avatar_url": "https://avatars1.githubusercontent.com/u/16394660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftian1", "html_url": "https://github.com/ftian1", "followers_url": "https://api.github.com/users/ftian1/followers", "following_url": "https://api.github.com/users/ftian1/following{/other_user}", "gists_url": "https://api.github.com/users/ftian1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftian1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftian1/subscriptions", "organizations_url": "https://api.github.com/users/ftian1/orgs", "repos_url": "https://api.github.com/users/ftian1/repos", "events_url": "https://api.github.com/users/ftian1/events{/privacy}", "received_events_url": "https://api.github.com/users/ftian1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T15:50:02Z", "updated_at": "2020-08-07T00:48:43Z", "closed_at": "2020-08-07T00:48:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to express a dependency relationship between yaml items, \r\n\r\nsuch as:\r\n\r\ngender: male\r\nbeard:                # optional, only needed when gender value is male.\r\n  color: golden\r\n\r\nseems this repo doesn't support this semantic? or am i missing sth?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/235", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/235/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/235/events", "html_url": "https://github.com/keleshev/schema/issues/235", "id": 643678711, "node_id": "MDU6SXNzdWU2NDM2Nzg3MTE=", "number": 235, "title": "Are Enums working?", "user": {"login": "eulogio-gutierrez", "id": 43067518, "node_id": "MDQ6VXNlcjQzMDY3NTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/43067518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eulogio-gutierrez", "html_url": "https://github.com/eulogio-gutierrez", "followers_url": "https://api.github.com/users/eulogio-gutierrez/followers", "following_url": "https://api.github.com/users/eulogio-gutierrez/following{/other_user}", "gists_url": "https://api.github.com/users/eulogio-gutierrez/gists{/gist_id}", "starred_url": "https://api.github.com/users/eulogio-gutierrez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eulogio-gutierrez/subscriptions", "organizations_url": "https://api.github.com/users/eulogio-gutierrez/orgs", "repos_url": "https://api.github.com/users/eulogio-gutierrez/repos", "events_url": "https://api.github.com/users/eulogio-gutierrez/events{/privacy}", "received_events_url": "https://api.github.com/users/eulogio-gutierrez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-23T09:25:25Z", "updated_at": "2020-06-26T06:34:03Z", "closed_at": "2020-06-26T06:34:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nrunning this:\r\n\r\n```\r\nfrom schema import Schema\r\nimport json\r\n\r\nprint(json.dumps(Schema({\"letters\": [\"a\", \"b\", \"c\"]}).json_schema(\"https://example.com/my-schema.json\")))\r\n```\r\n\r\ngives me: \r\n\r\n`{\"type\": \"object\", \"properties\": {\"letters\": {\"type\": \"array\", \"items\": {\"enum\": [\"a\", \"b\", \"c\"]}}}, \"required\": [\"letters\"], \"additionalProperties\": false, \"$id\": \"https://example.com/my-schema.json\", \"$schema\": \"http://json-schema.org/draft-07/schema#\"}`\r\n\r\nbut I was expecting to get either this:\r\n\r\n`{\"type\": \"object\", \"properties\": {\"letters\": {\"type\": \"string\", \"enum\": [\"a\", \"b\", \"c\"]}}, \"required\": [\"letters\"], \"additionalProperties\": false, \"$id\": \"https://example.com/my-schema.json\", \"$schema\": \"http://json-schema.org/draft-07/schema#\"}`\r\n\r\nor this:\r\n\r\n`{\"type\": \"object\", \"properties\": {\"letters\": {\"enum\": [\"a\", \"b\", \"c\"]}}, \"required\": [\"letters\"], \"additionalProperties\": false, \"$id\": \"https://example.com/my-schema.json\", \"$schema\": \"http://json-schema.org/draft-07/schema#\"}`\r\n\r\nWhat is the correct way to use Enums?\r\n\r\nThanks\r\nEulogio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/233", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/233/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/233/events", "html_url": "https://github.com/keleshev/schema/issues/233", "id": 629660982, "node_id": "MDU6SXNzdWU2Mjk2NjA5ODI=", "number": 233, "title": "Seven and a half thumbs up!", "user": {"login": "futzu", "id": 52701496, "node_id": "MDQ6VXNlcjUyNzAxNDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/52701496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/futzu", "html_url": "https://github.com/futzu", "followers_url": "https://api.github.com/users/futzu/followers", "following_url": "https://api.github.com/users/futzu/following{/other_user}", "gists_url": "https://api.github.com/users/futzu/gists{/gist_id}", "starred_url": "https://api.github.com/users/futzu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/futzu/subscriptions", "organizations_url": "https://api.github.com/users/futzu/orgs", "repos_url": "https://api.github.com/users/futzu/repos", "events_url": "https://api.github.com/users/futzu/events{/privacy}", "received_events_url": "https://api.github.com/users/futzu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T03:19:53Z", "updated_at": "2020-06-03T06:47:03Z", "closed_at": "2020-06-03T06:47:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been looking for this sort of thing, but didn't know what to call it.\r\nI started working on my own this morning and accidentally found your repo \r\nsearching for something totally different. \r\n\r\n_You have made my day man._ \r\n\r\n**No issue here, \r\nI just got excited and had to tell you.**  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/232", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/232/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/232/events", "html_url": "https://github.com/keleshev/schema/issues/232", "id": 627013938, "node_id": "MDU6SXNzdWU2MjcwMTM5Mzg=", "number": 232, "title": "[Question] How to validate/convert into a list of str?", "user": {"login": "cuteufo", "id": 22253431, "node_id": "MDQ6VXNlcjIyMjUzNDMx", "avatar_url": "https://avatars2.githubusercontent.com/u/22253431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuteufo", "html_url": "https://github.com/cuteufo", "followers_url": "https://api.github.com/users/cuteufo/followers", "following_url": "https://api.github.com/users/cuteufo/following{/other_user}", "gists_url": "https://api.github.com/users/cuteufo/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuteufo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuteufo/subscriptions", "organizations_url": "https://api.github.com/users/cuteufo/orgs", "repos_url": "https://api.github.com/users/cuteufo/repos", "events_url": "https://api.github.com/users/cuteufo/events{/privacy}", "received_events_url": "https://api.github.com/users/cuteufo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-29T05:43:30Z", "updated_at": "2020-05-29T19:53:47Z", "closed_at": "2020-05-29T19:51:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would allow following types of inputs, and want to use Schema(...).validate() to validate the input and convert them into a list of str, as commented:\r\n```\r\n      [\"123\", \"456\"],      # [\"123\", \"456\"]\r\n      [123, 456],          # [\"123\", \"456\"]\r\n      [date(2020, 2, 2)],  # [\"2020-02-02\"]\r\n      123,                 # [\"123\"]\r\n      [],                  # None\r\n      None,                # None\r\n```\r\nTried a bunch of Schema() settings, but didn't get any luck. The challenge is how to convert 123 into a str and then into a list of str.\r\n\r\nAny advice will be much appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/219", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/219/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/219/events", "html_url": "https://github.com/keleshev/schema/issues/219", "id": 489023031, "node_id": "MDU6SXNzdWU0ODkwMjMwMzE=", "number": 219, "title": "Types inside `And` are ignored when creating JSON schema", "user": {"login": "berkanteber", "id": 25663776, "node_id": "MDQ6VXNlcjI1NjYzNzc2", "avatar_url": "https://avatars1.githubusercontent.com/u/25663776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkanteber", "html_url": "https://github.com/berkanteber", "followers_url": "https://api.github.com/users/berkanteber/followers", "following_url": "https://api.github.com/users/berkanteber/following{/other_user}", "gists_url": "https://api.github.com/users/berkanteber/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkanteber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkanteber/subscriptions", "organizations_url": "https://api.github.com/users/berkanteber/orgs", "repos_url": "https://api.github.com/users/berkanteber/repos", "events_url": "https://api.github.com/users/berkanteber/events{/privacy}", "received_events_url": "https://api.github.com/users/berkanteber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-09-04T08:42:58Z", "updated_at": "2019-09-10T17:58:53Z", "closed_at": "2019-09-04T17:33:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, it is as follows:\r\n\r\n```\r\n>>> Schema({'name': str}).json_schema(\"example_schema\")\r\n{\r\n    'type': 'object',\r\n    'properties': {'name': {'type': 'string'}},\r\n    'required': ['name']\r\n    'additionalProperties': False,\r\n    'id': 'example_schema',\r\n    '$schema': 'http://json-schema.org/draft-07/schema#'\r\n}\r\n\r\n>>> Schema({'name': And(str, Use(str.lower))}).json_schema(\"example_schema\")\r\n{\r\n    'type': 'object',\r\n    'properties': {'name': {}},\r\n    'required': ['name']\r\n    'additionalProperties': False,\r\n    'id': 'example_schema',\r\n    '$schema': 'http://json-schema.org/draft-07/schema#'\r\n}\r\n```\r\n\r\nConverting `str` to `And(str, Use(str.lower))` results in dropping the `{'type': 'string'}` in JSON schema. However, if there is a single type in `And`, it should be preserved in JSON schema.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/204", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/204/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/204/events", "html_url": "https://github.com/keleshev/schema/issues/204", "id": 434687380, "node_id": "MDU6SXNzdWU0MzQ2ODczODA=", "number": 204, "title": "Renaming a key in data?", "user": {"login": "discosultan", "id": 2970736, "node_id": "MDQ6VXNlcjI5NzA3MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2970736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/discosultan", "html_url": "https://github.com/discosultan", "followers_url": "https://api.github.com/users/discosultan/followers", "following_url": "https://api.github.com/users/discosultan/following{/other_user}", "gists_url": "https://api.github.com/users/discosultan/gists{/gist_id}", "starred_url": "https://api.github.com/users/discosultan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/discosultan/subscriptions", "organizations_url": "https://api.github.com/users/discosultan/orgs", "repos_url": "https://api.github.com/users/discosultan/repos", "events_url": "https://api.github.com/users/discosultan/events{/privacy}", "received_events_url": "https://api.github.com/users/discosultan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-18T09:57:28Z", "updated_at": "2019-04-18T11:32:42Z", "closed_at": "2019-04-18T11:15:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found similar issues but not this particular case.\r\n\r\nIs the following possible with this library and if, then any guidance to a recommended approach is appreciated:\r\n\r\n```py\r\nfrom schema import Schema\r\n\r\ninput = {'foo': 1}\r\nexpected_output = {'bar': 1}\r\n\r\noutput = Schema({\r\n    Rename('foo', 'bar'): int  # <-- hypothetical, but would it be possible?\r\n}).validate(input)\r\n\r\nassert output == expected_output\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/199", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/199/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/199/events", "html_url": "https://github.com/keleshev/schema/issues/199", "id": 417764570, "node_id": "MDU6SXNzdWU0MTc3NjQ1NzA=", "number": 199, "title": "\"Or\" or \"in\" for arrays ", "user": {"login": "VasiliyRusin", "id": 3685852, "node_id": "MDQ6VXNlcjM2ODU4NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3685852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VasiliyRusin", "html_url": "https://github.com/VasiliyRusin", "followers_url": "https://api.github.com/users/VasiliyRusin/followers", "following_url": "https://api.github.com/users/VasiliyRusin/following{/other_user}", "gists_url": "https://api.github.com/users/VasiliyRusin/gists{/gist_id}", "starred_url": "https://api.github.com/users/VasiliyRusin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VasiliyRusin/subscriptions", "organizations_url": "https://api.github.com/users/VasiliyRusin/orgs", "repos_url": "https://api.github.com/users/VasiliyRusin/repos", "events_url": "https://api.github.com/users/VasiliyRusin/events{/privacy}", "received_events_url": "https://api.github.com/users/VasiliyRusin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-06T11:50:15Z", "updated_at": "2019-03-06T11:52:25Z", "closed_at": "2019-03-06T11:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> schema = Schema([{'name': And(str, len),\r\n...                   'age':  And(Use(int), lambda n: 18 <= n <= 99),\r\n...                   Optional('gender'): And(str, Use(str.lower),\r\n...                                           lambda s: s in ('squid', 'kid'))}])\r\n```\r\n\r\nIn the \"Examples\" in readme.md you have this piece of code. I'm a bit confused why You didn't use Or in instead of `lambda`?\r\n\r\nFor example:\r\n```\r\n>>> schema = Schema([{'name': And(str, len),\r\n...                   'age':  And(Use(int), lambda n: 18 <= n <= 99),\r\n...                   Optional('gender'): And(str, Use(str.lower), Or('squid', 'kid'))}])\r\n```\r\n\r\nThere are any reasons why I should not do this?\r\n\r\nP. S. I suppose it should be marked as Question.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/197", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/197/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/197/events", "html_url": "https://github.com/keleshev/schema/issues/197", "id": 414333615, "node_id": "MDU6SXNzdWU0MTQzMzM2MTU=", "number": 197, "title": "Update pypi version to 0.7.2?", "user": {"login": "sklarsa", "id": 1929541, "node_id": "MDQ6VXNlcjE5Mjk1NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1929541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sklarsa", "html_url": "https://github.com/sklarsa", "followers_url": "https://api.github.com/users/sklarsa/followers", "following_url": "https://api.github.com/users/sklarsa/following{/other_user}", "gists_url": "https://api.github.com/users/sklarsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/sklarsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sklarsa/subscriptions", "organizations_url": "https://api.github.com/users/sklarsa/orgs", "repos_url": "https://api.github.com/users/sklarsa/repos", "events_url": "https://api.github.com/users/sklarsa/events{/privacy}", "received_events_url": "https://api.github.com/users/sklarsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-02-25T22:16:23Z", "updated_at": "2019-02-25T22:43:54Z", "closed_at": "2019-02-25T22:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd really like to start using Hooks, but the latest version of this lib in pypi is 0.6.8.  Is there a scheduled release date for 0.7.2?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/195", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/195/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/195/events", "html_url": "https://github.com/keleshev/schema/issues/195", "id": 410814252, "node_id": "MDU6SXNzdWU0MTA4MTQyNTI=", "number": 195, "title": "Question: Schema for list of strings with regex", "user": {"login": "ngfgrant", "id": 6362273, "node_id": "MDQ6VXNlcjYzNjIyNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6362273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngfgrant", "html_url": "https://github.com/ngfgrant", "followers_url": "https://api.github.com/users/ngfgrant/followers", "following_url": "https://api.github.com/users/ngfgrant/following{/other_user}", "gists_url": "https://api.github.com/users/ngfgrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngfgrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngfgrant/subscriptions", "organizations_url": "https://api.github.com/users/ngfgrant/orgs", "repos_url": "https://api.github.com/users/ngfgrant/repos", "events_url": "https://api.github.com/users/ngfgrant/events{/privacy}", "received_events_url": "https://api.github.com/users/ngfgrant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-15T15:17:14Z", "updated_at": "2019-02-21T18:22:36Z", "closed_at": "2019-02-18T12:05:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey - first of all great project thank you for all the work.\r\n\r\nI have been banging my head against the wall for something that I am absolutely sure is possible but looking for some pointers.\r\n\r\n```yaml\r\n\r\n___\r\n...\r\nemails:\r\n  - email@test.comm\r\n  - email2@test.comm\r\n...\r\n```\r\n\r\n```python \r\n...\r\n\r\ndef _email_regex():\r\n    return r'(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)'\r\n\r\n\r\nschema = Schema(\r\n    {\r\n...\r\n        'emails': [how can I validate the list of strings matches the _email_regex()],\r\n...\r\n    }\r\n\r\n```\r\n\r\n\r\nI can easily validate that `emails` is a list but I would like to go a step further and check that the value of the items in the list are strings and meet the regex defined above. Seemed to work very easily when the values are just a single string but being a list I think I am missing something.\r\n\r\nAny help gratefully received. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/190", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/190/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/190/events", "html_url": "https://github.com/keleshev/schema/issues/190", "id": 403445134, "node_id": "MDU6SXNzdWU0MDM0NDUxMzQ=", "number": 190, "title": "Disabling type checking", "user": {"login": "abbas-aghamirzaei", "id": 10250357, "node_id": "MDQ6VXNlcjEwMjUwMzU3", "avatar_url": "https://avatars3.githubusercontent.com/u/10250357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abbas-aghamirzaei", "html_url": "https://github.com/abbas-aghamirzaei", "followers_url": "https://api.github.com/users/abbas-aghamirzaei/followers", "following_url": "https://api.github.com/users/abbas-aghamirzaei/following{/other_user}", "gists_url": "https://api.github.com/users/abbas-aghamirzaei/gists{/gist_id}", "starred_url": "https://api.github.com/users/abbas-aghamirzaei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abbas-aghamirzaei/subscriptions", "organizations_url": "https://api.github.com/users/abbas-aghamirzaei/orgs", "repos_url": "https://api.github.com/users/abbas-aghamirzaei/repos", "events_url": "https://api.github.com/users/abbas-aghamirzaei/events{/privacy}", "received_events_url": "https://api.github.com/users/abbas-aghamirzaei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-26T14:09:00Z", "updated_at": "2019-01-27T11:57:25Z", "closed_at": "2019-01-27T02:54:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi.\r\nhow can I disable type checking(for performance)?\r\nI want to only check the structure of dictionary. Is it possible?\r\nthanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/189", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/189/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/189/events", "html_url": "https://github.com/keleshev/schema/issues/189", "id": 401025257, "node_id": "MDU6SXNzdWU0MDEwMjUyNTc=", "number": 189, "title": "Option to Allow Extra Keys in Schema", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-19T19:08:18Z", "updated_at": "2019-10-28T22:45:26Z", "closed_at": "2019-10-28T22:45:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The ability to allow extra keys makes it very easy to use `And` to compose a more complex schema from individual pieces. See #188 and [this comment](https://github.com/keleshev/schema/issues/188#issuecomment-455806593) which describes how to trivially solve it with an `allow_extra_keys=True` flag in `Schema`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/185", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/185/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/185/events", "html_url": "https://github.com/keleshev/schema/issues/185", "id": 386705825, "node_id": "MDU6SXNzdWUzODY3MDU4MjU=", "number": 185, "title": "Need Help(Use configuration file set mode)", "user": {"login": "ZJLavender", "id": 12455587, "node_id": "MDQ6VXNlcjEyNDU1NTg3", "avatar_url": "https://avatars1.githubusercontent.com/u/12455587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZJLavender", "html_url": "https://github.com/ZJLavender", "followers_url": "https://api.github.com/users/ZJLavender/followers", "following_url": "https://api.github.com/users/ZJLavender/following{/other_user}", "gists_url": "https://api.github.com/users/ZJLavender/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZJLavender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZJLavender/subscriptions", "organizations_url": "https://api.github.com/users/ZJLavender/orgs", "repos_url": "https://api.github.com/users/ZJLavender/repos", "events_url": "https://api.github.com/users/ZJLavender/events{/privacy}", "received_events_url": "https://api.github.com/users/ZJLavender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-03T08:23:14Z", "updated_at": "2018-12-06T03:20:11Z", "closed_at": "2018-12-06T03:20:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "`    mode = ' {\"_id\" : And(Use(int), lambda n: n >= 0)}'\r\n     payload = {\"_id\": 10}\r\n     print(Schema(mode).is_valid(payload))\r\n     print(Schema( {\"_id\" : And(Use(int), lambda n: n >= 0)}).is_valid(payload))\r\n`\r\nI want to definition the mode in configuration file\uff0cso the variable \u2018mode\u2019 in my code will be type str. And in the line 3 the run result is False and the line 4 is True. So if I want to use configuration file in my project,how to solve this problem in a easy way.Can you give me some suggestion, Best wish.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/183", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/183/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/183/events", "html_url": "https://github.com/keleshev/schema/issues/183", "id": 380948226, "node_id": "MDU6SXNzdWUzODA5NDgyMjY=", "number": 183, "title": "python2 : Exceptions should mimic standard py2 ", "user": {"login": "ocehugo", "id": 1202691, "node_id": "MDQ6VXNlcjEyMDI2OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1202691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ocehugo", "html_url": "https://github.com/ocehugo", "followers_url": "https://api.github.com/users/ocehugo/followers", "following_url": "https://api.github.com/users/ocehugo/following{/other_user}", "gists_url": "https://api.github.com/users/ocehugo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ocehugo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ocehugo/subscriptions", "organizations_url": "https://api.github.com/users/ocehugo/orgs", "repos_url": "https://api.github.com/users/ocehugo/repos", "events_url": "https://api.github.com/users/ocehugo/events{/privacy}", "received_events_url": "https://api.github.com/users/ocehugo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-15T00:33:31Z", "updated_at": "2018-11-15T02:26:58Z", "closed_at": "2018-11-15T02:10:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "To append a msg to the Schema Exceptions we need to do somehting like:\r\n\r\n``` \r\ntry:\r\n     Schema(int).validate('abc')\r\nexcept SchemaUnexpectedTypeError as e:\r\n     raise type(e)(''.join(e.args + (\"mymsg\",)))\r\n```\r\n\r\nI was not aware that SchemaExceptions in python2 do not mimic the standard exceptions in py2, by providing an \"message\" method to enable this:\r\n\r\n```\r\nraise type(e)(e.message + \"mymsg\")\r\n```\r\nHowever, python3 removed the message method from exception class, so args should be used.\r\n\r\nHence, i'm closing my own issue given that the somewhat ugliest but more powerful py3 standard should be used instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/167", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/167/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/167/events", "html_url": "https://github.com/keleshev/schema/issues/167", "id": 365129624, "node_id": "MDU6SXNzdWUzNjUxMjk2MjQ=", "number": 167, "title": "Schema({<key_type>: <value_type>}).is_valid({}) returns False?", "user": {"login": "bhyde", "id": 19701, "node_id": "MDQ6VXNlcjE5NzAx", "avatar_url": "https://avatars0.githubusercontent.com/u/19701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhyde", "html_url": "https://github.com/bhyde", "followers_url": "https://api.github.com/users/bhyde/followers", "following_url": "https://api.github.com/users/bhyde/following{/other_user}", "gists_url": "https://api.github.com/users/bhyde/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhyde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhyde/subscriptions", "organizations_url": "https://api.github.com/users/bhyde/orgs", "repos_url": "https://api.github.com/users/bhyde/repos", "events_url": "https://api.github.com/users/bhyde/events{/privacy}", "received_events_url": "https://api.github.com/users/bhyde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-29T12:49:59Z", "updated_at": "2018-09-29T13:15:39Z", "closed_at": "2018-09-29T12:57:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a dictionary to manage set of objects it's a bit subtle to include the empty set.\r\n```\r\n>>> Schema({int:int}).is_valid({1:2})\r\nTrue\r\n>>> Schema({int:int}).is_valid({})\r\nFalse\r\n>>> \r\n```\r\nYou need to write ```Schema(Or({int:int}, {}))```\r\n\r\nBut maybe I'm not looking at this right.\r\n\r\nIt seems inconsistent with the handling for lists.\r\n```\r\n>>> Schema([int]).is_valid([1])\r\nTrue\r\n>>> Schema([int]).is_valid([])\r\nTrue\r\n```\r\nI'd think this is a bug that has matured into a feature.  A tips and tricks addition to the documentation would be sweet though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/165", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/165/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/165/events", "html_url": "https://github.com/keleshev/schema/issues/165", "id": 362145865, "node_id": "MDU6SXNzdWUzNjIxNDU4NjU=", "number": 165, "title": "add python 3.7 to test list ?", "user": {"login": "xialu4820723", "id": 16009684, "node_id": "MDQ6VXNlcjE2MDA5Njg0", "avatar_url": "https://avatars0.githubusercontent.com/u/16009684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xialu4820723", "html_url": "https://github.com/xialu4820723", "followers_url": "https://api.github.com/users/xialu4820723/followers", "following_url": "https://api.github.com/users/xialu4820723/following{/other_user}", "gists_url": "https://api.github.com/users/xialu4820723/gists{/gist_id}", "starred_url": "https://api.github.com/users/xialu4820723/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xialu4820723/subscriptions", "organizations_url": "https://api.github.com/users/xialu4820723/orgs", "repos_url": "https://api.github.com/users/xialu4820723/repos", "events_url": "https://api.github.com/users/xialu4820723/events{/privacy}", "received_events_url": "https://api.github.com/users/xialu4820723/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-20T11:34:34Z", "updated_at": "2018-09-29T12:58:32Z", "closed_at": "2018-09-29T12:58:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "3.7 has been released for 3 months, it's a good idea to do this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/164", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/164/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/164/events", "html_url": "https://github.com/keleshev/schema/issues/164", "id": 360370879, "node_id": "MDU6SXNzdWUzNjAzNzA4Nzk=", "number": 164, "title": "way to validate dependency between keys?", "user": {"login": "mkj28", "id": 2279299, "node_id": "MDQ6VXNlcjIyNzkyOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2279299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkj28", "html_url": "https://github.com/mkj28", "followers_url": "https://api.github.com/users/mkj28/followers", "following_url": "https://api.github.com/users/mkj28/following{/other_user}", "gists_url": "https://api.github.com/users/mkj28/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkj28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkj28/subscriptions", "organizations_url": "https://api.github.com/users/mkj28/orgs", "repos_url": "https://api.github.com/users/mkj28/repos", "events_url": "https://api.github.com/users/mkj28/events{/privacy}", "received_events_url": "https://api.github.com/users/mkj28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-14T16:21:53Z", "updated_at": "2018-11-27T17:38:18Z", "closed_at": "2018-11-27T17:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we validate a dictionary like this:\r\n```\r\n[{'name': 'Sue', 'age': 28},\r\n {'name': 'Max', 'dob': '2000-01-01'}]\r\n```\r\neither age or dob must be provided, but if one is provided, the other should not exist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/163", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/163/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/163/events", "html_url": "https://github.com/keleshev/schema/issues/163", "id": 355244310, "node_id": "MDU6SXNzdWUzNTUyNDQzMTA=", "number": 163, "title": "Validate \"if condition mandatory value\" rule", "user": {"login": "mycaule", "id": 6161385, "node_id": "MDQ6VXNlcjYxNjEzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6161385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mycaule", "html_url": "https://github.com/mycaule", "followers_url": "https://api.github.com/users/mycaule/followers", "following_url": "https://api.github.com/users/mycaule/following{/other_user}", "gists_url": "https://api.github.com/users/mycaule/gists{/gist_id}", "starred_url": "https://api.github.com/users/mycaule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mycaule/subscriptions", "organizations_url": "https://api.github.com/users/mycaule/orgs", "repos_url": "https://api.github.com/users/mycaule/repos", "events_url": "https://api.github.com/users/mycaule/events{/privacy}", "received_events_url": "https://api.github.com/users/mycaule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-29T16:42:22Z", "updated_at": "2018-09-05T18:00:14Z", "closed_at": "2018-09-05T18:00:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello how would I write this kind of validation rule with `schema` ?\r\n\r\n```scala\r\n// Scala way\r\nval with_item: Boolean\r\nval item_value: Option[Int]\r\n\r\n(with_item, item_value) match {\r\n   case (true, Some(value)) if value >=0 => Valid()\r\n   case (false, None) => Valid()\r\n   case _ => Invalid()\r\n}\r\n```\r\nMy Python implementation isn't perfect.\r\n\r\n```python\r\n# Python schema way\r\nYesNoFeatureModel = Or(Use(bool), None)\r\nItemValueModel = Or(And(Use(int), lambda x: 0 <= x), None)\r\n\r\nSchema({\r\n   ...\r\n   'with_item': YesNoFeatureModel,\r\n    Optional('item_value'): ItemValueModel, # FIXME\r\n   ...\r\n})\r\n```\r\n\r\nIn fact, I would like to match\r\n```\r\nwith_item=True, item_value=10, other fields... => OK\r\nwith_item=True, item_value=None, other fields... => NOT OK\r\nwith_item=False, item_value=10, other fields... => NOT OK\r\nwith_item=False, item_value=None, other fields... => OK\r\n```\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/154", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/154/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/154/events", "html_url": "https://github.com/keleshev/schema/issues/154", "id": 332430446, "node_id": "MDU6SXNzdWUzMzI0MzA0NDY=", "number": 154, "title": "`is_valid` is not in the current release", "user": {"login": "scottbelden", "id": 6951699, "node_id": "MDQ6VXNlcjY5NTE2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6951699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottbelden", "html_url": "https://github.com/scottbelden", "followers_url": "https://api.github.com/users/scottbelden/followers", "following_url": "https://api.github.com/users/scottbelden/following{/other_user}", "gists_url": "https://api.github.com/users/scottbelden/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottbelden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottbelden/subscriptions", "organizations_url": "https://api.github.com/users/scottbelden/orgs", "repos_url": "https://api.github.com/users/scottbelden/repos", "events_url": "https://api.github.com/users/scottbelden/events{/privacy}", "received_events_url": "https://api.github.com/users/scottbelden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-14T14:34:23Z", "updated_at": "2018-06-14T15:04:30Z", "closed_at": "2018-06-14T14:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a new user looking over the README it mentions the `is_valid` method that I want to try but unfortunately that is not in the latest release on PyPI. Could you please make a new release so that the helper can be used?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/152", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/152/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/152/events", "html_url": "https://github.com/keleshev/schema/issues/152", "id": 330048153, "node_id": "MDU6SXNzdWUzMzAwNDgxNTM=", "number": 152, "title": "SchemaError only shows first check that fails validation", "user": {"login": "dlobue", "id": 155965, "node_id": "MDQ6VXNlcjE1NTk2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/155965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlobue", "html_url": "https://github.com/dlobue", "followers_url": "https://api.github.com/users/dlobue/followers", "following_url": "https://api.github.com/users/dlobue/following{/other_user}", "gists_url": "https://api.github.com/users/dlobue/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlobue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlobue/subscriptions", "organizations_url": "https://api.github.com/users/dlobue/orgs", "repos_url": "https://api.github.com/users/dlobue/repos", "events_url": "https://api.github.com/users/dlobue/events{/privacy}", "received_events_url": "https://api.github.com/users/dlobue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-06T21:59:26Z", "updated_at": "2018-06-06T22:32:14Z", "closed_at": "2018-06-06T22:32:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to see all the ways that the data being validated doesn't match the defined schema. To give an example:\r\n\r\n    Schema({'a': And(int,\r\n                     lambda x: x > 10,\r\n                     lambda y: y % 2 == 0),\r\n            'b': int}).validate({'a': 7, 'b': 'w'})\r\n\r\nThe above code results in the exception `SchemaError(\"Key 'a' error:\\n<lambda>(7) should evaluate to True\")` that has the following values on its properties:\r\n\r\n    >>> schemaerror.autos\r\n    [\"Key 'a' error:\", None, '<lambda>(7) should evaluate to True']\r\n\r\n    >>> schemaerror.code\r\n    \"Key 'a' error:\\n<lambda>(7) should evaluate to True\"\r\n\r\n    >>> schemaerror.errors\r\n    [None, None, None]\r\n\r\n    >>> schemaerror.args\r\n    (\"Key 'a' error:\\n<lambda>(7) should evaluate to True\",)\r\n\r\n\r\nWhat I would like to see are messages showing that the value of `a` failed both lambdas (ideally with the source code of the lambda shown for reference), and that the value of `b` is of the wrong type.\r\n\r\nThanks, and great project!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/139", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/139/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/139/events", "html_url": "https://github.com/keleshev/schema/issues/139", "id": 226105440, "node_id": "MDU6SXNzdWUyMjYxMDU0NDA=", "number": 139, "title": "hash(Optional(foo)) should equal hash(foo)", "user": {"login": "kurtbrose", "id": 543934, "node_id": "MDQ6VXNlcjU0MzkzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/543934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kurtbrose", "html_url": "https://github.com/kurtbrose", "followers_url": "https://api.github.com/users/kurtbrose/followers", "following_url": "https://api.github.com/users/kurtbrose/following{/other_user}", "gists_url": "https://api.github.com/users/kurtbrose/gists{/gist_id}", "starred_url": "https://api.github.com/users/kurtbrose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kurtbrose/subscriptions", "organizations_url": "https://api.github.com/users/kurtbrose/orgs", "repos_url": "https://api.github.com/users/kurtbrose/repos", "events_url": "https://api.github.com/users/kurtbrose/events{/privacy}", "received_events_url": "https://api.github.com/users/kurtbrose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-03T20:29:46Z", "updated_at": "2017-05-05T23:29:29Z", "closed_at": "2017-05-05T23:29:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\n{schema.Optional(1): 2, schema.Optional(1): 3}\r\n\r\nschema.Schema({schema.Optional(1): 2, schema.Optional(1): 3}).validate({1:3})\r\n```\r\n\r\nIf Optional(foo) had a hash based on foo, then Optional(const) would overwrite itself as a dict key, and you wouldn't get race condition / undefined behavior from the above construct.\r\n\r\nAlso, it would make this kind of non-sensical schema impossible:\r\n\r\n```python\r\n{schema.Optional([]): 2}\r\n```\r\n\r\nOne way to achieve this would be to switch schema objects into attrs instances.\r\nhttps://attrs.readthedocs.io/en/stable/\r\n\r\nThis would get \"free\" `__eq__`, `__hash__`, `__repr__`, and `__init__` that behave as expected.  Also, if desired all classes could be switched to use `__slots__` very easily.\r\n\r\nThis would add a dependency to schema, but might be worth it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/138", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/138/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/138/events", "html_url": "https://github.com/keleshev/schema/issues/138", "id": 224275670, "node_id": "MDU6SXNzdWUyMjQyNzU2NzA=", "number": 138, "title": "Can we get a release for 2017?", "user": {"login": "mahmoud", "id": 130193, "node_id": "MDQ6VXNlcjEzMDE5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/130193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahmoud", "html_url": "https://github.com/mahmoud", "followers_url": "https://api.github.com/users/mahmoud/followers", "following_url": "https://api.github.com/users/mahmoud/following{/other_user}", "gists_url": "https://api.github.com/users/mahmoud/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahmoud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahmoud/subscriptions", "organizations_url": "https://api.github.com/users/mahmoud/orgs", "repos_url": "https://api.github.com/users/mahmoud/repos", "events_url": "https://api.github.com/users/mahmoud/events{/privacy}", "received_events_url": "https://api.github.com/users/mahmoud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-25T21:20:14Z", "updated_at": "2018-01-09T02:05:56Z", "closed_at": "2018-01-09T02:05:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not to be a nag, we all love schema! At least a few PRs have been merged since September 2016 and I think we would love to see a release with all the new features. Telling people to pip install from GitHub just doesn't have the same ring to it ;)\r\n\r\nThanks for all your hard work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/136", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/136/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/136/events", "html_url": "https://github.com/keleshev/schema/issues/136", "id": 218298792, "node_id": "MDU6SXNzdWUyMTgyOTg3OTI=", "number": 136, "title": "(crazy) feature idea: @validate_args() decorator", "user": {"login": "kurtbrose", "id": 543934, "node_id": "MDQ6VXNlcjU0MzkzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/543934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kurtbrose", "html_url": "https://github.com/kurtbrose", "followers_url": "https://api.github.com/users/kurtbrose/followers", "following_url": "https://api.github.com/users/kurtbrose/following{/other_user}", "gists_url": "https://api.github.com/users/kurtbrose/gists{/gist_id}", "starred_url": "https://api.github.com/users/kurtbrose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kurtbrose/subscriptions", "organizations_url": "https://api.github.com/users/kurtbrose/orgs", "repos_url": "https://api.github.com/users/kurtbrose/repos", "events_url": "https://api.github.com/users/kurtbrose/events{/privacy}", "received_events_url": "https://api.github.com/users/kurtbrose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-30T19:11:49Z", "updated_at": "2017-05-05T23:29:02Z", "closed_at": "2017-05-05T23:29:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://gist.github.com/kurtbrose/8633b06f0bced5cba52a7a8b1d763ae8\r\n\r\n```python\r\n    @validate_args(a=[str], b=int, c=lambda v: v is not None)\r\n    def foo(a, b, c, d):\r\n        return a, b, c, d\r\n\r\n    try:\r\n        foo('cat', 1, 2, 3)\r\n    except ValueError as ve:\r\n        print ve\r\n\r\n    try:\r\n        foo([1], b=2, c=None, d=12)\r\n    except ValueError as ve:\r\n        print ve\r\n    \r\n    foo(['cat', 'dog'], 2, 3, 4)\r\n```\r\n\r\nIntercepts kwargs passed to `@validate_args()` and passes them through the validate() of the corresponding schema before being passed on to the wrapped function.\r\n\r\nFailed validates are gathered together and raised as a single exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/132", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/132/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/132/events", "html_url": "https://github.com/keleshev/schema/issues/132", "id": 213194382, "node_id": "MDU6SXNzdWUyMTMxOTQzODI=", "number": 132, "title": "Custom error message doesn't get formatted if flavor==CALLABLE", "user": {"login": "M3t0r", "id": 1084491, "node_id": "MDQ6VXNlcjEwODQ0OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1084491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M3t0r", "html_url": "https://github.com/M3t0r", "followers_url": "https://api.github.com/users/M3t0r/followers", "following_url": "https://api.github.com/users/M3t0r/following{/other_user}", "gists_url": "https://api.github.com/users/M3t0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/M3t0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M3t0r/subscriptions", "organizations_url": "https://api.github.com/users/M3t0r/orgs", "repos_url": "https://api.github.com/users/M3t0r/repos", "events_url": "https://api.github.com/users/M3t0r/events{/privacy}", "received_events_url": "https://api.github.com/users/M3t0r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-09T23:07:55Z", "updated_at": "2020-07-15T09:07:27Z", "closed_at": "2020-07-15T09:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nSchema(lambda i: i == 5, error=\"Formatstring: {}\").validate(12)\r\n```\r\nproduces an exception with the message \"Formatstring: {}\" and not \"Formatstring: 12\"\r\n\r\nI had to change line [309](https://github.com/keleshev/schema/blob/master/schema.py#L309) to\r\n\r\n    raise SchemaError('%s(%r) should evaluate to True' % (f, data), e.format(data))\r\n\r\nto get it working as intended.\r\n\r\nYou're also missing the documentation for this feature all together. Took me a while to figure out. And #4 is still open, too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/130", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/130/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/130/events", "html_url": "https://github.com/keleshev/schema/issues/130", "id": 212331299, "node_id": "MDU6SXNzdWUyMTIzMzEyOTk=", "number": 130, "title": "Should `ignore_extra_keys` flag applying recursively on dict?", "user": {"login": "hangyan", "id": 3939015, "node_id": "MDQ6VXNlcjM5MzkwMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3939015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hangyan", "html_url": "https://github.com/hangyan", "followers_url": "https://api.github.com/users/hangyan/followers", "following_url": "https://api.github.com/users/hangyan/following{/other_user}", "gists_url": "https://api.github.com/users/hangyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/hangyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hangyan/subscriptions", "organizations_url": "https://api.github.com/users/hangyan/orgs", "repos_url": "https://api.github.com/users/hangyan/repos", "events_url": "https://api.github.com/users/hangyan/events{/privacy}", "received_events_url": "https://api.github.com/users/hangyan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-07T05:01:21Z", "updated_at": "2017-03-09T14:43:58Z", "closed_at": "2017-03-09T14:43:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/121", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/121/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/121/events", "html_url": "https://github.com/keleshev/schema/issues/121", "id": 177776213, "node_id": "MDU6SXNzdWUxNzc3NzYyMTM=", "number": 121, "title": "Error when error argument missing", "user": {"login": "DaMaillard", "id": 18449092, "node_id": "MDQ6VXNlcjE4NDQ5MDky", "avatar_url": "https://avatars3.githubusercontent.com/u/18449092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DaMaillard", "html_url": "https://github.com/DaMaillard", "followers_url": "https://api.github.com/users/DaMaillard/followers", "following_url": "https://api.github.com/users/DaMaillard/following{/other_user}", "gists_url": "https://api.github.com/users/DaMaillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/DaMaillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DaMaillard/subscriptions", "organizations_url": "https://api.github.com/users/DaMaillard/orgs", "repos_url": "https://api.github.com/users/DaMaillard/repos", "events_url": "https://api.github.com/users/DaMaillard/events{/privacy}", "received_events_url": "https://api.github.com/users/DaMaillard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-19T12:51:53Z", "updated_at": "2016-09-19T13:01:25Z", "closed_at": "2016-09-19T12:54:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Error when serialazing a SchemaError object : \n\n``` python\n>>> import copy\n>>> from schema import SchemaError\n>>> s = SchemaError('a', None)\n>>> copy.deepcopy(s)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/damienmaillard/.virtualenvs/bricklane/lib/python3.4/copy.py\", line 182, in deepcopy\n    y = _reconstruct(x, rv, 1, memo)\n  File \"/Users/damienmaillard/.virtualenvs/bricklane/lib/python3.4/copy.py\", line 295, in _reconstruct\n    y = callable(*args)\nTypeError: __init__() missing 1 required positional argument: 'errors'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/119", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/119/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/119/events", "html_url": "https://github.com/keleshev/schema/issues/119", "id": 175176210, "node_id": "MDU6SXNzdWUxNzUxNzYyMTA=", "number": 119, "title": "Question: how to define schema for recursive structure?", "user": {"login": "AlexandreDecan", "id": 4992216, "node_id": "MDQ6VXNlcjQ5OTIyMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4992216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexandreDecan", "html_url": "https://github.com/AlexandreDecan", "followers_url": "https://api.github.com/users/AlexandreDecan/followers", "following_url": "https://api.github.com/users/AlexandreDecan/following{/other_user}", "gists_url": "https://api.github.com/users/AlexandreDecan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexandreDecan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexandreDecan/subscriptions", "organizations_url": "https://api.github.com/users/AlexandreDecan/orgs", "repos_url": "https://api.github.com/users/AlexandreDecan/repos", "events_url": "https://api.github.com/users/AlexandreDecan/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexandreDecan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-06T07:15:24Z", "updated_at": "2016-09-07T17:49:31Z", "closed_at": "2016-09-07T16:26:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \n\nI've a question about the definition of a schema for a recursive structure. Say for example I want to encode a `person` which has a firstname, a lastname, and a list of children which are `person` too.\nHow can I do that?\n\nBasically, I would like to do: \n\n``` python\nperson = {'firstname': str, 'lastname': str, Optional('children'): [person]}\n```\n\nObviously, this does not work. Is there a solution?\n\nCurrently, I do something like: \n\n``` python\nperson = {'firstname': str, 'lastname': str}\nperson[Optional('children')] = [person]\n```\n\n... but I find it not really readable...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/114", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/114/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/114/events", "html_url": "https://github.com/keleshev/schema/issues/114", "id": 168522090, "node_id": "MDU6SXNzdWUxNjg1MjIwOTA=", "number": 114, "title": "Add testsuite to release tarball", "user": {"login": "ghisvail", "id": 1964655, "node_id": "MDQ6VXNlcjE5NjQ2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1964655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghisvail", "html_url": "https://github.com/ghisvail", "followers_url": "https://api.github.com/users/ghisvail/followers", "following_url": "https://api.github.com/users/ghisvail/following{/other_user}", "gists_url": "https://api.github.com/users/ghisvail/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghisvail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghisvail/subscriptions", "organizations_url": "https://api.github.com/users/ghisvail/orgs", "repos_url": "https://api.github.com/users/ghisvail/repos", "events_url": "https://api.github.com/users/ghisvail/events{/privacy}", "received_events_url": "https://api.github.com/users/ghisvail/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-31T15:06:52Z", "updated_at": "2016-08-01T11:16:09Z", "closed_at": "2016-08-01T11:15:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please consider updating your `MANIFEST` file to include the testsuite for `schema`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/111", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/111/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/111/events", "html_url": "https://github.com/keleshev/schema/issues/111", "id": 167860605, "node_id": "MDU6SXNzdWUxNjc4NjA2MDU=", "number": 111, "title": "Subclass SchemaError for default errors such as 'Wrong keys', 'Missing keys'  'Wrong Type'", "user": {"login": "bernalrs", "id": 245996, "node_id": "MDQ6VXNlcjI0NTk5Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/245996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernalrs", "html_url": "https://github.com/bernalrs", "followers_url": "https://api.github.com/users/bernalrs/followers", "following_url": "https://api.github.com/users/bernalrs/following{/other_user}", "gists_url": "https://api.github.com/users/bernalrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernalrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernalrs/subscriptions", "organizations_url": "https://api.github.com/users/bernalrs/orgs", "repos_url": "https://api.github.com/users/bernalrs/repos", "events_url": "https://api.github.com/users/bernalrs/events{/privacy}", "received_events_url": "https://api.github.com/users/bernalrs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-27T13:58:11Z", "updated_at": "2016-07-27T16:57:53Z", "closed_at": "2016-07-27T16:57:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to suggest a simple change that would see the introduction of some new Error/Exception derived from SchemaError which would serve the purpose.\n\nAs of verson 0.6.1:\n1.  `raise SchemaError('Wrong keys %s in %r' % (s_wrong_keys, data),  e.format(data) if e else None)` \n2. `raise SchemaError('Missing keys: ' + s_missing_keys, e)`\n3. `SchemaError('%r should be instance of %r' % (data, s.__name__), e.format(data) if e else None)`\n\ninto \n1.  `class SchemaWrongKeyError(SchemaError):`\n2.  `class` SchemaMissingkeysError(SchemaError):\n3. `class SchemaUnexpectedTypeError`(SchemaError)\n\nThanks \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/106", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/106/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/106/events", "html_url": "https://github.com/keleshev/schema/issues/106", "id": 160069536, "node_id": "MDU6SXNzdWUxNjAwNjk1MzY=", "number": 106, "title": "XOr implementation", "user": {"login": "andrrizzi", "id": 1682142, "node_id": "MDQ6VXNlcjE2ODIxNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1682142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrrizzi", "html_url": "https://github.com/andrrizzi", "followers_url": "https://api.github.com/users/andrrizzi/followers", "following_url": "https://api.github.com/users/andrrizzi/following{/other_user}", "gists_url": "https://api.github.com/users/andrrizzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrrizzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrrizzi/subscriptions", "organizations_url": "https://api.github.com/users/andrrizzi/orgs", "repos_url": "https://api.github.com/users/andrrizzi/repos", "events_url": "https://api.github.com/users/andrrizzi/events{/privacy}", "received_events_url": "https://api.github.com/users/andrrizzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-13T23:52:17Z", "updated_at": "2018-10-22T19:14:16Z", "closed_at": "2018-10-22T19:14:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, this library is awesome.\n\nI've implemented a `XOr` class for exclusive schemas (shamelessly copying from the `Or` class). Maybe this is naively wrong, but so far this has worked as expected.\n\n``` python\nclass XOr(And):\n\n    def validate(self, data):\n        accepted = False\n        x = SchemaError([], [])\n        for s in [Schema(s, error=self._error) for s in self._args]:\n            try:\n                validated = s.validate(data)\n                if accepted:\n                    raise SchemaError(['%r did not validate %r' % (self, data)],\n                                      [self._error])\n                accepted = True\n            except SchemaError as _x:\n                x = _x\n        if not accepted:\n            raise SchemaError(['%r did not validate %r' % (self, data)] + x.autos,\n                              [self._error] + x.errors)\n        return validated\n```\n\nIf you are interested in this, I can open a PR.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/103", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/103/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/103/events", "html_url": "https://github.com/keleshev/schema/issues/103", "id": 136605761, "node_id": "MDU6SXNzdWUxMzY2MDU3NjE=", "number": 103, "title": "Multi-field validation", "user": {"login": "dmzkrsk", "id": 94747, "node_id": "MDQ6VXNlcjk0NzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/94747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmzkrsk", "html_url": "https://github.com/dmzkrsk", "followers_url": "https://api.github.com/users/dmzkrsk/followers", "following_url": "https://api.github.com/users/dmzkrsk/following{/other_user}", "gists_url": "https://api.github.com/users/dmzkrsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmzkrsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmzkrsk/subscriptions", "organizations_url": "https://api.github.com/users/dmzkrsk/orgs", "repos_url": "https://api.github.com/users/dmzkrsk/repos", "events_url": "https://api.github.com/users/dmzkrsk/events{/privacy}", "received_events_url": "https://api.github.com/users/dmzkrsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-26T05:59:36Z", "updated_at": "2016-02-26T22:32:58Z", "closed_at": "2016-02-26T22:32:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an object like `{'n': 10, 'total': 40}`\n\nHow can I validate `n <= total`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/98", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/98/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/98/events", "html_url": "https://github.com/keleshev/schema/issues/98", "id": 115430631, "node_id": "MDU6SXNzdWUxMTU0MzA2MzE=", "number": 98, "title": "Allow formatting for custom error messages", "user": {"login": "MaxNoe", "id": 5488440, "node_id": "MDQ6VXNlcjU0ODg0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxNoe", "html_url": "https://github.com/MaxNoe", "followers_url": "https://api.github.com/users/MaxNoe/followers", "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}", "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions", "organizations_url": "https://api.github.com/users/MaxNoe/orgs", "repos_url": "https://api.github.com/users/MaxNoe/repos", "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxNoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-06T04:13:34Z", "updated_at": "2016-07-27T13:25:09Z", "closed_at": "2016-07-27T13:25:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would be hugely helpfull, if one could format the information\nwhich is available for the stanard error messages also into the custom errors.\n\nIdea:\n\n```\nfrom schema import Schema\nfrom os import path\n\ntest_existance = Schema(path.exists, error='File \"%(data)r\" not found!')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/83", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/83/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/83/events", "html_url": "https://github.com/keleshev/schema/issues/83", "id": 108373694, "node_id": "MDU6SXNzdWUxMDgzNzM2OTQ=", "number": 83, "title": "Inconsistent return types for validate: type(schema) or type(data)?", "user": {"login": "sjakobi", "id": 3664523, "node_id": "MDQ6VXNlcjM2NjQ1MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3664523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjakobi", "html_url": "https://github.com/sjakobi", "followers_url": "https://api.github.com/users/sjakobi/followers", "following_url": "https://api.github.com/users/sjakobi/following{/other_user}", "gists_url": "https://api.github.com/users/sjakobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjakobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjakobi/subscriptions", "organizations_url": "https://api.github.com/users/sjakobi/orgs", "repos_url": "https://api.github.com/users/sjakobi/repos", "events_url": "https://api.github.com/users/sjakobi/events{/privacy}", "received_events_url": "https://api.github.com/users/sjakobi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-25T17:35:33Z", "updated_at": "2015-09-30T21:38:17Z", "closed_at": "2015-09-30T21:38:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've noted a small inconsistency when validating with iterable and dict schemas:\n\n``` python\n        if flavor == ITERABLE:\n            data = Schema(type(s), error=e).validate(data)\n            return type(s)(Or(*s, error=e).validate(d) for d in data)\n        if flavor == DICT:\n            data = Schema(dict, error=e).validate(data)\n            new = type(data)()  # new - is a dict of the validated values\n            ...\n            return new\n```\n\nBriefly, when validating with iterable schemas the return type is that of the schema, when validating with dict schemas it's that of the input.\n\nPersonally I think that it's more flexible to have the return type match the one of the input.\n\nIdeas, preferences?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/82", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/82/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/82/events", "html_url": "https://github.com/keleshev/schema/issues/82", "id": 108243818, "node_id": "MDU6SXNzdWUxMDgyNDM4MTg=", "number": 82, "title": "Sorting arbitrary values doesn't work", "user": {"login": "sjakobi", "id": 3664523, "node_id": "MDQ6VXNlcjM2NjQ1MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3664523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjakobi", "html_url": "https://github.com/sjakobi", "followers_url": "https://api.github.com/users/sjakobi/followers", "following_url": "https://api.github.com/users/sjakobi/following{/other_user}", "gists_url": "https://api.github.com/users/sjakobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjakobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjakobi/subscriptions", "organizations_url": "https://api.github.com/users/sjakobi/orgs", "repos_url": "https://api.github.com/users/sjakobi/repos", "events_url": "https://api.github.com/users/sjakobi/events{/privacy}", "received_events_url": "https://api.github.com/users/sjakobi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-25T01:10:10Z", "updated_at": "2015-09-25T13:16:58Z", "closed_at": "2015-09-25T13:16:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At a1c5c5b482539eea4f95f06026ff847c7d7d0f20:\n\n``` python\nIn [2]: s = Schema(dict())\n\nIn [3]: s.validate({'abc': None, 1: None})\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-8afbe26b3b72> in <module>()\n----> 1 s.validate({'abc': None, 1: None})\n\n/home/simon/src/schema/schema.py in validate(self, data)\n    148             if len(new) != len(data):\n    149                 wrong_keys = set(data.keys()) - set(new.keys())\n--> 150                 s_wrong_keys = ', '.join(repr(k) for k in sorted(wrong_keys))\n    151                 raise SchemaError('Wrong keys %s in %r' % (s_wrong_keys, data),\n    152                                   e)\n\nTypeError: unorderable types: int() < str()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/75", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/75/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/75/events", "html_url": "https://github.com/keleshev/schema/issues/75", "id": 108027890, "node_id": "MDU6SXNzdWUxMDgwMjc4OTA=", "number": 75, "title": "Redundant logic or missing test case?", "user": {"login": "sjakobi", "id": 3664523, "node_id": "MDQ6VXNlcjM2NjQ1MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3664523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjakobi", "html_url": "https://github.com/sjakobi", "followers_url": "https://api.github.com/users/sjakobi/followers", "following_url": "https://api.github.com/users/sjakobi/following{/other_user}", "gists_url": "https://api.github.com/users/sjakobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjakobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjakobi/subscriptions", "organizations_url": "https://api.github.com/users/sjakobi/orgs", "repos_url": "https://api.github.com/users/sjakobi/repos", "events_url": "https://api.github.com/users/sjakobi/events{/privacy}", "received_events_url": "https://api.github.com/users/sjakobi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-23T23:34:51Z", "updated_at": "2015-09-24T20:04:33Z", "closed_at": "2015-09-24T20:04:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was just fiddling around in the `dict`-part of the `validate` method and noticed the change here (https://github.com/sjakobi/schema/commit/486cb583391084c773db8895ed4d03b93c8be1d9) didn't result in a failing test.\n\nDoes anybody know why this logic was necessary in the first place? Is it redundant now?\n\nI'll probably look into this at a later time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/68", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/68/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/68/events", "html_url": "https://github.com/keleshev/schema/issues/68", "id": 106609736, "node_id": "MDU6SXNzdWUxMDY2MDk3MzY=", "number": 68, "title": "Cannot install with pip3 -- README.rst contains non-ascii character.", "user": {"login": "Grazfather", "id": 497310, "node_id": "MDQ6VXNlcjQ5NzMxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/497310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Grazfather", "html_url": "https://github.com/Grazfather", "followers_url": "https://api.github.com/users/Grazfather/followers", "following_url": "https://api.github.com/users/Grazfather/following{/other_user}", "gists_url": "https://api.github.com/users/Grazfather/gists{/gist_id}", "starred_url": "https://api.github.com/users/Grazfather/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Grazfather/subscriptions", "organizations_url": "https://api.github.com/users/Grazfather/orgs", "repos_url": "https://api.github.com/users/Grazfather/repos", "events_url": "https://api.github.com/users/Grazfather/events{/privacy}", "received_events_url": "https://api.github.com/users/Grazfather/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-15T17:52:59Z", "updated_at": "2015-09-22T18:20:40Z", "closed_at": "2015-09-22T18:20:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` bash\n$ pip3 install schema\nDownloading/unpacking schema\n  Downloading schema-0.3.1.tar.gz\n  Running setup.py (path:/private/tmp/pip_build_bla/schema/setup.py) egg_info for package schema\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/private/tmp/pip_build_bla/schema/setup.py\", line 16, in <module>\n        long_description=open('README.rst').read(),\n      File \"/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/lib/python3.4/encodings/ascii.py\", line 26, in decode\n        return codecs.ascii_decode(input, self.errors)[0]\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 2360: ordinal not in range(128)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/private/tmp/pip_build_bla/schema/setup.py\", line 16, in <module>\n\n    long_description=open('README.rst').read(),\n\n  File \"/usr/local/Cellar/python3/3.4.2_1/Frameworks/Python.framework/Versions/3.4/lib/python3.4/encodings/ascii.py\", line 26, in decode\n\n    return codecs.ascii_decode(input, self.errors)[0]\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 2360: ordinal not in range(128)\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in /private/tmp/pip_build_bla/schema\nStoring debug log for failure in /Users/bla/.pip/pip.log\n```\n\nThe culprit line in the readme is here:\n\n```\nAlternatively, you can just drop `schema.py` file into your project\u2014it is self-contained.\n```\n\n(The m-width dash)\n\nIf I set LANG=utf-8, it works:\n\n``` bash\n$ LANG=utf-8 pip install schema\nDownloading/unpacking schema\n  Downloading schema-0.3.1.tar.gz\n  Running setup.py (path:/Users/bla/tmpvenv/build/schema/setup.py) egg_info for package schema\n\nInstalling collected packages: schema\n  Running setup.py install for schema\n\nSuccessfully installed schema\nCleaning up...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/64", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/64/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/64/events", "html_url": "https://github.com/keleshev/schema/issues/64", "id": 94229846, "node_id": "MDU6SXNzdWU5NDIyOTg0Ng==", "number": 64, "title": "Feature Request: Named parts", "user": {"login": "kosz85", "id": 2547425, "node_id": "MDQ6VXNlcjI1NDc0MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2547425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kosz85", "html_url": "https://github.com/kosz85", "followers_url": "https://api.github.com/users/kosz85/followers", "following_url": "https://api.github.com/users/kosz85/following{/other_user}", "gists_url": "https://api.github.com/users/kosz85/gists{/gist_id}", "starred_url": "https://api.github.com/users/kosz85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kosz85/subscriptions", "organizations_url": "https://api.github.com/users/kosz85/orgs", "repos_url": "https://api.github.com/users/kosz85/repos", "events_url": "https://api.github.com/users/kosz85/events{/privacy}", "received_events_url": "https://api.github.com/users/kosz85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-10T06:45:26Z", "updated_at": "2015-09-23T10:55:54Z", "closed_at": "2015-09-23T10:55:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nSometimes I want to only validate some data, and sometimes also process it. It would be nice to have it in one schema. \nSimple Example:\n\n```\n>>> schema = Schema({'user': And(int, Use(get_user_from_db, name='import'))})\n>>> s.validate({'user': 1})  # current behavior\n{'user': <User: username>}\n>>> s.validate({'user': 1}, exclude=('import',))\n{'user': 1}\n```\n\nThe second option, validates it, but do not run particular elements, it could be `exclude` and `only` parameters. Not named would be always run. I imagine it could work also like this `Name('import', Use(get_user_from_db))` or with optional multiple names `Name(('import', 'process'), Use(...))`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/63", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/63/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/63/events", "html_url": "https://github.com/keleshev/schema/issues/63", "id": 92466995, "node_id": "MDU6SXNzdWU5MjQ2Njk5NQ==", "number": 63, "title": "Feature Request: Docstrings", "user": {"login": "pmolodo", "id": 71800, "node_id": "MDQ6VXNlcjcxODAw", "avatar_url": "https://avatars2.githubusercontent.com/u/71800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmolodo", "html_url": "https://github.com/pmolodo", "followers_url": "https://api.github.com/users/pmolodo/followers", "following_url": "https://api.github.com/users/pmolodo/following{/other_user}", "gists_url": "https://api.github.com/users/pmolodo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmolodo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmolodo/subscriptions", "organizations_url": "https://api.github.com/users/pmolodo/orgs", "repos_url": "https://api.github.com/users/pmolodo/repos", "events_url": "https://api.github.com/users/pmolodo/events{/privacy}", "received_events_url": "https://api.github.com/users/pmolodo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-01T19:31:05Z", "updated_at": "2015-09-23T10:55:59Z", "closed_at": "2015-09-23T10:55:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd love to see support for docstrings/helpstrings/descriptions of some sort.  Not only would this encourage documentation of the schema, but it would allow automated generation of things like argument parsers, and allow us to finally unite all our schema-definition in one place.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/60", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/60/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/60/events", "html_url": "https://github.com/keleshev/schema/issues/60", "id": 91057247, "node_id": "MDU6SXNzdWU5MTA1NzI0Nw==", "number": 60, "title": "Created Is validator, is it useful for creating a PR?", "user": {"login": "gabrielhpugliese", "id": 1252818, "node_id": "MDQ6VXNlcjEyNTI4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1252818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrielhpugliese", "html_url": "https://github.com/gabrielhpugliese", "followers_url": "https://api.github.com/users/gabrielhpugliese/followers", "following_url": "https://api.github.com/users/gabrielhpugliese/following{/other_user}", "gists_url": "https://api.github.com/users/gabrielhpugliese/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrielhpugliese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrielhpugliese/subscriptions", "organizations_url": "https://api.github.com/users/gabrielhpugliese/orgs", "repos_url": "https://api.github.com/users/gabrielhpugliese/repos", "events_url": "https://api.github.com/users/gabrielhpugliese/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrielhpugliese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-25T19:43:32Z", "updated_at": "2015-06-26T13:54:59Z", "closed_at": "2015-06-26T13:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The motivation is setting different error message on SchemaError when trying to validate a single type.\n\nThis is the code:\n\n``` python\nclass Is(And):\n    def __init__(self, *args, **kwargs):\n        super(Is, self).__init__(*args, **kwargs)\n        self._type = args[0]\n\n    def validate(self, data):\n        if not isinstance(data, self._type):\n            error_message = '{} did not validate {}'.format(\n                repr(self),\n                repr(data)\n            )\n            raise SchemaError(error_message, error_message)\n        return True\n```\n\nAnd usage:\n\n``` python\nSCHEMA = Schema({\n    'number': Is(int, error='Invalid zipcode param'),\n})\n```\n\nShould I create a PR?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/59", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/59/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/59/events", "html_url": "https://github.com/keleshev/schema/issues/59", "id": 75684585, "node_id": "MDU6SXNzdWU3NTY4NDU4NQ==", "number": 59, "title": "New release?", "user": {"login": "marc2982", "id": 1229503, "node_id": "MDQ6VXNlcjEyMjk1MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1229503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marc2982", "html_url": "https://github.com/marc2982", "followers_url": "https://api.github.com/users/marc2982/followers", "following_url": "https://api.github.com/users/marc2982/following{/other_user}", "gists_url": "https://api.github.com/users/marc2982/gists{/gist_id}", "starred_url": "https://api.github.com/users/marc2982/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marc2982/subscriptions", "organizations_url": "https://api.github.com/users/marc2982/orgs", "repos_url": "https://api.github.com/users/marc2982/repos", "events_url": "https://api.github.com/users/marc2982/events{/privacy}", "received_events_url": "https://api.github.com/users/marc2982/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2015-05-12T17:57:17Z", "updated_at": "2015-10-26T17:40:48Z", "closed_at": "2015-10-26T15:44:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "There hasn't been a release since last April and I would like to use the new defaulting functionality. Would you mind cutting a new release?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/58", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/58/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/58/events", "html_url": "https://github.com/keleshev/schema/issues/58", "id": 64119147, "node_id": "MDU6SXNzdWU2NDExOTE0Nw==", "number": 58, "title": "Broken distribution package", "user": {"login": "mbergkvist", "id": 11540172, "node_id": "MDQ6VXNlcjExNTQwMTcy", "avatar_url": "https://avatars3.githubusercontent.com/u/11540172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbergkvist", "html_url": "https://github.com/mbergkvist", "followers_url": "https://api.github.com/users/mbergkvist/followers", "following_url": "https://api.github.com/users/mbergkvist/following{/other_user}", "gists_url": "https://api.github.com/users/mbergkvist/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbergkvist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbergkvist/subscriptions", "organizations_url": "https://api.github.com/users/mbergkvist/orgs", "repos_url": "https://api.github.com/users/mbergkvist/repos", "events_url": "https://api.github.com/users/mbergkvist/events{/privacy}", "received_events_url": "https://api.github.com/users/mbergkvist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-24T22:51:45Z", "updated_at": "2015-04-10T05:39:49Z", "closed_at": "2015-04-10T05:39:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The implementation of the `Optional` class is missing from the package at PyPi.\n\n```\n$ curl https://pypi.python.org/packages/source/s/schema/schema-0.3.1.tar.gz -o schema-0.3.1.tar.gz\n$ tar xzf schema-0.3.1.tar.gz schema-0.3.1/schema.py\n$ tail schema-0.3.1/schema.py\n            raise SchemaError('%s(%r) should evaluate to True' % (f, data), e)\n        if s == data:\n            return data\n        else:\n            raise SchemaError('%r does not match %r' % (s, data), e)\n\n\nclass Optional(Schema):\n\n    \"\"\"Marker for an optional part of Schema.\"\"\"\n```\n\nAnd then nothing more.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/57", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/57/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/57/events", "html_url": "https://github.com/keleshev/schema/issues/57", "id": 63562292, "node_id": "MDU6SXNzdWU2MzU2MjI5Mg==", "number": 57, "title": "Using \"str: object\" to allow and ignore unrecognized fields defeats validation of Optional fields", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-03-22T18:43:28Z", "updated_at": "2015-10-01T18:40:57Z", "closed_at": "2015-09-26T11:28:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Use case: A schema may contain some optional fields that should be validated if present. Unrecognized fields should be allowed and ignored.\n\nThe docs say that unrecognized fields may be allowed and ignored by including `str: object` in the schema. However, this defeats the validation of any Optional fields:\n\n```\nPython 3.4.3 (default, Mar  1 2015, 15:44:16)\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from schema import Schema, Optional\n>>> s = Schema({'required': str, Optional('optional'): int})\n>>> s.validate({'required': 'valid', 'optional': 'invalid'})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.4/site-packages/schema.py\", line 125, in validate\n    nvalue = Schema(svalue, error=e).validate(value)\n  File \"/usr/local/lib/python3.4/site-packages/schema.py\", line 161, in validate\n    raise SchemaError('%r should be instance of %r' % (data, s), e)\nschema.SchemaError: 'invalid' should be instance of <class 'int'>\n>>> s = Schema({'required': str, Optional('optional'): int, str: object})\n>>> s.validate({'required': 'valid', 'optional': 'invalid'})\n{'required': 'valid', 'optional': 'invalid'}\n>>> from schema import __version__\n>>> __version__\n'0.3.1'\n```\n\nIs this behavior intentional or is this a bug?\n\nThanks for any attention to this and for releasing schema.\n\nP.S. I cranked out some one-off code to do schema validation in a side project years ago that I never separated out and released as its own module. It's still up on GitHub at https://github.com/jab/SiCDS/blob/master/sicds/schema.py in case there's anything there you'd like to incorporate into this project. Looks like I released that code GPLv3 but if you'd require another license I could certainly relicense it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/56", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/56/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/56/events", "html_url": "https://github.com/keleshev/schema/issues/56", "id": 60044648, "node_id": "MDU6SXNzdWU2MDA0NDY0OA==", "number": 56, "title": "doesn't work with operator.methodcaller", "user": {"login": "hsharrison", "id": 4441865, "node_id": "MDQ6VXNlcjQ0NDE4NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4441865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsharrison", "html_url": "https://github.com/hsharrison", "followers_url": "https://api.github.com/users/hsharrison/followers", "following_url": "https://api.github.com/users/hsharrison/following{/other_user}", "gists_url": "https://api.github.com/users/hsharrison/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsharrison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsharrison/subscriptions", "organizations_url": "https://api.github.com/users/hsharrison/orgs", "repos_url": "https://api.github.com/users/hsharrison/repos", "events_url": "https://api.github.com/users/hsharrison/events{/privacy}", "received_events_url": "https://api.github.com/users/hsharrison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-06T01:19:28Z", "updated_at": "2015-09-27T15:45:14Z", "closed_at": "2015-09-27T15:45:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfrom operator import methodcaller\nfrom schema import Schema\n\nf = methodcaller('endswith', '.csv')\nassert f('test.csv')\n\nSchema(f).validate('test.csv')\n\nAttributeError: 'operator.methodcaller' object has no attribute '__name__'\n```\n\nWe can't assume that all callables have a `__name__`, it would seem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/50", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/50/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/50/events", "html_url": "https://github.com/keleshev/schema/issues/50", "id": 50030775, "node_id": "MDU6SXNzdWU1MDAzMDc3NQ==", "number": 50, "title": "'... %r ...' % user_supplied_value is unsafe", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-11-25T14:07:59Z", "updated_at": "2015-03-04T13:16:52Z", "closed_at": "2015-03-04T13:16:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please use `'... %s ...' % repr(user_supplied_value)` or at least `'... %r ...' % (user_supplied_value, )` or you'll end up crashing if the user_supplied_value happens to be a tuple.\n\nOne example of such a failure:\n\n```\n>>> schema.Schema({}).validate({(1, 2): 'a'})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/tmp/sandbox/local/lib/python2.7/site-packages/schema.py\", line 145, in validate\n    s_wrong_keys = ', '.join('%r' % k for k in sorted(wrong_keys))\n  File \"/tmp/sandbox/local/lib/python2.7/site-packages/schema.py\", line 145, in <genexpr>\n    s_wrong_keys = ', '.join('%r' % k for k in sorted(wrong_keys))\nTypeError: not all arguments converted during string formatting\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/44", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/44/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/44/events", "html_url": "https://github.com/keleshev/schema/issues/44", "id": 35583178, "node_id": "MDU6SXNzdWUzNTU4MzE3OA==", "number": 44, "title": "Wrong behaviour with Optional(basestring): object", "user": {"login": "poulainv", "id": 6195703, "node_id": "MDQ6VXNlcjYxOTU3MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6195703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poulainv", "html_url": "https://github.com/poulainv", "followers_url": "https://api.github.com/users/poulainv/followers", "following_url": "https://api.github.com/users/poulainv/following{/other_user}", "gists_url": "https://api.github.com/users/poulainv/gists{/gist_id}", "starred_url": "https://api.github.com/users/poulainv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poulainv/subscriptions", "organizations_url": "https://api.github.com/users/poulainv/orgs", "repos_url": "https://api.github.com/users/poulainv/repos", "events_url": "https://api.github.com/users/poulainv/events{/privacy}", "received_events_url": "https://api.github.com/users/poulainv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-12T13:25:54Z", "updated_at": "2015-03-04T18:45:12Z", "closed_at": "2015-03-04T18:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n> Schema({Optional('attr1'): 'foo', Optional(basestring): object}).validate({'attr1': 'new_foo'})\n{'attr1': 'new_foo'}\n```\n\nMy use case: any keys should be accepted in the dict. Only condition, if I have `attr1` it must be  `foo`. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/43", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/43/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/43/events", "html_url": "https://github.com/keleshev/schema/issues/43", "id": 32382266, "node_id": "MDU6SXNzdWUzMjM4MjI2Ng==", "number": 43, "title": "Bad version number on README.txt", "user": {"login": "jmansilla", "id": 488675, "node_id": "MDQ6VXNlcjQ4ODY3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/488675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmansilla", "html_url": "https://github.com/jmansilla", "followers_url": "https://api.github.com/users/jmansilla/followers", "following_url": "https://api.github.com/users/jmansilla/following{/other_user}", "gists_url": "https://api.github.com/users/jmansilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmansilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmansilla/subscriptions", "organizations_url": "https://api.github.com/users/jmansilla/orgs", "repos_url": "https://api.github.com/users/jmansilla/repos", "events_url": "https://api.github.com/users/jmansilla/events{/privacy}", "received_events_url": "https://api.github.com/users/jmansilla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-28T17:52:03Z", "updated_at": "2015-09-26T00:31:35Z", "closed_at": "2015-09-26T00:31:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On the **Installation** section says \n\npip install schema==0.2.0\n\nWhen right now shall be 0.3.0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/40", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/40/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/40/events", "html_url": "https://github.com/keleshev/schema/issues/40", "id": 31012347, "node_id": "MDU6SXNzdWUzMTAxMjM0Nw==", "number": 40, "title": "When validating, check if issubclass of type instead of just type", "user": {"login": "jmansilla", "id": 488675, "node_id": "MDQ6VXNlcjQ4ODY3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/488675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmansilla", "html_url": "https://github.com/jmansilla", "followers_url": "https://api.github.com/users/jmansilla/followers", "following_url": "https://api.github.com/users/jmansilla/following{/other_user}", "gists_url": "https://api.github.com/users/jmansilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmansilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmansilla/subscriptions", "organizations_url": "https://api.github.com/users/jmansilla/orgs", "repos_url": "https://api.github.com/users/jmansilla/repos", "events_url": "https://api.github.com/users/jmansilla/events{/privacy}", "received_events_url": "https://api.github.com/users/jmansilla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-07T19:03:18Z", "updated_at": "2015-09-25T18:11:58Z", "closed_at": "2015-09-25T10:23:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have so code that should work both in python 2 and 3, and because of that I'm using instead of strings\n\nfuture.builtins.str\n\nthe type of such a thing is \n\nfuture.builtins.types.newstr.BaseNewStr\n\nand because of that, instead of validating the type is used as a callable.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/33", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/33/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/33/events", "html_url": "https://github.com/keleshev/schema/issues/33", "id": 23226661, "node_id": "MDU6SXNzdWUyMzIyNjY2MQ==", "number": 33, "title": "Schema([str]).validate([]) passes but not Schema({str:str}).validate({})", "user": {"login": "jwoillez", "id": 2133261, "node_id": "MDQ6VXNlcjIxMzMyNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2133261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwoillez", "html_url": "https://github.com/jwoillez", "followers_url": "https://api.github.com/users/jwoillez/followers", "following_url": "https://api.github.com/users/jwoillez/following{/other_user}", "gists_url": "https://api.github.com/users/jwoillez/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwoillez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwoillez/subscriptions", "organizations_url": "https://api.github.com/users/jwoillez/orgs", "repos_url": "https://api.github.com/users/jwoillez/repos", "events_url": "https://api.github.com/users/jwoillez/events{/privacy}", "received_events_url": "https://api.github.com/users/jwoillez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-25T07:56:07Z", "updated_at": "2013-11-25T08:21:08Z", "closed_at": "2013-11-25T08:21:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> from schema import Schema\n>>> Schema([str]).validate([])\n[]\n>>> Schema({str:str}).validate({})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"build/bdist.macosx-10.8-x86_64/egg/schema.py\", line 150, in validate\nschema.SchemaError: missed keys set([<type 'str'>])\n```\n\nWould you take a PR making both of them pass?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/31", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/31/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/31/events", "html_url": "https://github.com/keleshev/schema/issues/31", "id": 22394805, "node_id": "MDU6SXNzdWUyMjM5NDgwNQ==", "number": 31, "title": "Use of schema in astroquery", "user": {"login": "jwoillez", "id": 2133261, "node_id": "MDQ6VXNlcjIxMzMyNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2133261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwoillez", "html_url": "https://github.com/jwoillez", "followers_url": "https://api.github.com/users/jwoillez/followers", "following_url": "https://api.github.com/users/jwoillez/following{/other_user}", "gists_url": "https://api.github.com/users/jwoillez/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwoillez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwoillez/subscriptions", "organizations_url": "https://api.github.com/users/jwoillez/orgs", "repos_url": "https://api.github.com/users/jwoillez/repos", "events_url": "https://api.github.com/users/jwoillez/events{/privacy}", "received_events_url": "https://api.github.com/users/jwoillez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-11-09T22:06:59Z", "updated_at": "2015-09-26T11:18:32Z", "closed_at": "2015-09-26T11:18:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "@halst - The project https://github.com/astropy/astroquery would benefit from using schema. The simplest approach would be to copy schema.py, as well as the MIT license.\n\nI've setup a branch for you to have a look:\nhttps://github.com/jwoillez/astroquery/tree/schema\n\nSchema itself is at:\nhttps://github.com/jwoillez/astroquery/blob/schema/astroquery/utils/schema.py\n\nThe license:\nhttps://github.com/jwoillez/astroquery/blob/schema/licenses/SCHEMA.rst\n\nDoes this look correct to you?\n\nThanks! Really love schema!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/25", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/25/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/25/events", "html_url": "https://github.com/keleshev/schema/issues/25", "id": 21060626, "node_id": "MDU6SXNzdWUyMTA2MDYyNg==", "number": 25, "title": "Wrong use of \"key '' is required\" exception", "user": {"login": "charlax", "id": 120501, "node_id": "MDQ6VXNlcjEyMDUwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/120501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlax", "html_url": "https://github.com/charlax", "followers_url": "https://api.github.com/users/charlax/followers", "following_url": "https://api.github.com/users/charlax/following{/other_user}", "gists_url": "https://api.github.com/users/charlax/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlax/subscriptions", "organizations_url": "https://api.github.com/users/charlax/orgs", "repos_url": "https://api.github.com/users/charlax/repos", "events_url": "https://api.github.com/users/charlax/events{/privacy}", "received_events_url": "https://api.github.com/users/charlax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-16T05:09:59Z", "updated_at": "2015-09-26T11:16:13Z", "closed_at": "2015-09-26T11:16:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey,\n\nIt seems that the exception raised line https://github.com/halst/schema/blob/master/schema.py#L139 can also be raised when there's no handler for a given dict key.\n\nCode to reproduce the problem:\n\n``` python\nschema.Schema({schema.Optional(\"toaster\"): basestring}).validate({\"grillepain\": None})\n```\n\nThis will raise `SchemaError: key Optional('toaster') is required`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/22", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/22/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/22/events", "html_url": "https://github.com/keleshev/schema/issues/22", "id": 18779705, "node_id": "MDU6SXNzdWUxODc3OTcwNQ==", "number": 22, "title": "Incorrect exception message", "user": {"login": "kmelnikov", "id": 15929, "node_id": "MDQ6VXNlcjE1OTI5", "avatar_url": "https://avatars0.githubusercontent.com/u/15929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmelnikov", "html_url": "https://github.com/kmelnikov", "followers_url": "https://api.github.com/users/kmelnikov/followers", "following_url": "https://api.github.com/users/kmelnikov/following{/other_user}", "gists_url": "https://api.github.com/users/kmelnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmelnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmelnikov/subscriptions", "organizations_url": "https://api.github.com/users/kmelnikov/orgs", "repos_url": "https://api.github.com/users/kmelnikov/repos", "events_url": "https://api.github.com/users/kmelnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/kmelnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-30T09:56:26Z", "updated_at": "2015-09-24T21:18:02Z", "closed_at": "2015-09-24T21:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Strange error message is appeared:\n\nTest:\na = {'task_id': 209, 'batch_id': 0}\nshc = {'task_id': int}\n\nSchema(shc).validate(a)\n\nOut:\nC:\\PL\\Python27\\python.exe C:/Users/kmelnikov/Projects/ROCS2/temp/validation.py\nTraceback (most recent call last):\n  File \"C:/Users/kmelnikov/Projects/ROCS2/temp/validation.py\", line 70, in <module>\n    Schema(shc).validate(dat)\n  File \"C:\\PL\\Python27\\lib\\site-packages\\schema.py\", line 140, in validate\n    raise SchemaError('key %r is required' % skey, e)\nschema.SchemaError: key 'task_id' is required\n\nI believe the message should be something like \"key 'batch_id' is required\".\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/15", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/15/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/15/events", "html_url": "https://github.com/keleshev/schema/issues/15", "id": 13190120, "node_id": "MDU6SXNzdWUxMzE5MDEyMA==", "number": 15, "title": "{'a':int} cannot match {'b':'x', 'a':1}", "user": {"login": "reedboat", "id": 223579, "node_id": "MDQ6VXNlcjIyMzU3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/223579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedboat", "html_url": "https://github.com/reedboat", "followers_url": "https://api.github.com/users/reedboat/followers", "following_url": "https://api.github.com/users/reedboat/following{/other_user}", "gists_url": "https://api.github.com/users/reedboat/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedboat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedboat/subscriptions", "organizations_url": "https://api.github.com/users/reedboat/orgs", "repos_url": "https://api.github.com/users/reedboat/repos", "events_url": "https://api.github.com/users/reedboat/events{/privacy}", "received_events_url": "https://api.github.com/users/reedboat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-04-15T08:54:40Z", "updated_at": "2015-09-26T11:16:01Z", "closed_at": "2015-09-26T11:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": " s = Schema({'a':int})\n print s.validate({'c':'x', 'a':1})\n\nIt reports that 'a' is required, while a has been provided.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/13", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/13/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/13/events", "html_url": "https://github.com/keleshev/schema/issues/13", "id": 12819976, "node_id": "MDU6SXNzdWUxMjgxOTk3Ng==", "number": 13, "title": "AttributeError raised when Schema([]).validate([1])", "user": {"login": "suzanshakya", "id": 108650, "node_id": "MDQ6VXNlcjEwODY1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/108650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suzanshakya", "html_url": "https://github.com/suzanshakya", "followers_url": "https://api.github.com/users/suzanshakya/followers", "following_url": "https://api.github.com/users/suzanshakya/following{/other_user}", "gists_url": "https://api.github.com/users/suzanshakya/gists{/gist_id}", "starred_url": "https://api.github.com/users/suzanshakya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suzanshakya/subscriptions", "organizations_url": "https://api.github.com/users/suzanshakya/orgs", "repos_url": "https://api.github.com/users/suzanshakya/repos", "events_url": "https://api.github.com/users/suzanshakya/events{/privacy}", "received_events_url": "https://api.github.com/users/suzanshakya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-04-04T20:59:17Z", "updated_at": "2013-04-18T17:11:59Z", "closed_at": "2013-04-18T17:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> from schema import Schema\n>>> Schema([]).validate([1])\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/sujanshakya/.virtualenvs/testing_schema/src/schema/schema.py\", line 109, in validate\n    return type(s)(Or(*s, error=e).validate(d) for d in data)\n  File \"/Users/sujanshakya/.virtualenvs/testing_schema/src/schema/schema.py\", line 109, in <genexpr>\n    return type(s)(Or(*s, error=e).validate(d) for d in data)\n  File \"/Users/sujanshakya/.virtualenvs/testing_schema/src/schema/schema.py\", line 56, in validate\n    raise SchemaError(['%r did not validate %r' % (self, data)] + x.autos,\nAttributeError: 'NoneType' object has no attribute 'autos'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/12", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/12/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/12/events", "html_url": "https://github.com/keleshev/schema/issues/12", "id": 12305733, "node_id": "MDU6SXNzdWUxMjMwNTczMw==", "number": 12, "title": "plan to develop a feature about 'default value for optional key'?", "user": {"login": "reedboat", "id": 223579, "node_id": "MDQ6VXNlcjIyMzU3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/223579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedboat", "html_url": "https://github.com/reedboat", "followers_url": "https://api.github.com/users/reedboat/followers", "following_url": "https://api.github.com/users/reedboat/following{/other_user}", "gists_url": "https://api.github.com/users/reedboat/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedboat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedboat/subscriptions", "organizations_url": "https://api.github.com/users/reedboat/orgs", "repos_url": "https://api.github.com/users/reedboat/repos", "events_url": "https://api.github.com/users/reedboat/events{/privacy}", "received_events_url": "https://api.github.com/users/reedboat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-03-22T03:42:01Z", "updated_at": "2015-09-26T11:21:28Z", "closed_at": "2015-09-26T11:21:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/11", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/11/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/11/events", "html_url": "https://github.com/keleshev/schema/issues/11", "id": 10428160, "node_id": "MDU6SXNzdWUxMDQyODE2MA==", "number": 11, "title": "Interesting question", "user": {"login": "keleshev", "id": 619158, "node_id": "MDQ6VXNlcjYxOTE1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/619158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keleshev", "html_url": "https://github.com/keleshev", "followers_url": "https://api.github.com/users/keleshev/followers", "following_url": "https://api.github.com/users/keleshev/following{/other_user}", "gists_url": "https://api.github.com/users/keleshev/gists{/gist_id}", "starred_url": "https://api.github.com/users/keleshev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keleshev/subscriptions", "organizations_url": "https://api.github.com/users/keleshev/orgs", "repos_url": "https://api.github.com/users/keleshev/repos", "events_url": "https://api.github.com/users/keleshev/events{/privacy}", "received_events_url": "https://api.github.com/users/keleshev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-29T18:33:19Z", "updated_at": "2013-03-29T17:35:50Z", "closed_at": "2013-03-29T17:35:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "http://stackoverflow.com/questions/14588098/docopt-schema-validation\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/9", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/9/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/9/events", "html_url": "https://github.com/keleshev/schema/issues/9", "id": 9159517, "node_id": "MDU6SXNzdWU5MTU5NTE3", "number": 9, "title": "Support for keys as literals and types at the same time", "user": {"login": "keleshev", "id": 619158, "node_id": "MDQ6VXNlcjYxOTE1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/619158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keleshev", "html_url": "https://github.com/keleshev", "followers_url": "https://api.github.com/users/keleshev/followers", "following_url": "https://api.github.com/users/keleshev/following{/other_user}", "gists_url": "https://api.github.com/users/keleshev/gists{/gist_id}", "starred_url": "https://api.github.com/users/keleshev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keleshev/subscriptions", "organizations_url": "https://api.github.com/users/keleshev/orgs", "repos_url": "https://api.github.com/users/keleshev/repos", "events_url": "https://api.github.com/users/keleshev/events{/privacy}", "received_events_url": "https://api.github.com/users/keleshev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-12-10T21:27:06Z", "updated_at": "2013-05-14T14:55:35Z", "closed_at": "2013-05-14T14:55:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/docopt/docopt/issues/61\n\n``` python\nSchema({'<infile>': Use(open), str: object})  # don't care about other str keys\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/7", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/7/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/7/events", "html_url": "https://github.com/keleshev/schema/issues/7", "id": 8844862, "node_id": "MDU6SXNzdWU4ODQ0ODYy", "number": 7, "title": "UnboundLocalError", "user": {"login": "dstufft", "id": 145979, "node_id": "MDQ6VXNlcjE0NTk3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstufft", "html_url": "https://github.com/dstufft", "followers_url": "https://api.github.com/users/dstufft/followers", "following_url": "https://api.github.com/users/dstufft/following{/other_user}", "gists_url": "https://api.github.com/users/dstufft/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstufft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstufft/subscriptions", "organizations_url": "https://api.github.com/users/dstufft/orgs", "repos_url": "https://api.github.com/users/dstufft/repos", "events_url": "https://api.github.com/users/dstufft/events{/privacy}", "received_events_url": "https://api.github.com/users/dstufft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-11-30T06:20:08Z", "updated_at": "2013-03-06T19:39:57Z", "closed_at": "2013-03-06T19:39:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using PyPy and when I attempt to validate a dictionary I get an UnboundLocalError.\n\n```\n>>> import schema\n>>>> schema.Schema({}).validate({})\n{}\n>>>> schema.Schema({}).validate({\"foo\": \"bar\"})\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/Users/dstufft/.virtualenvs/warehouse2/site-packages/schema.py\", line 107, in validate\n    elif type(skey) is not Optional:\nUnboundLocalError: local variable 'skey' referenced before assignment\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/5", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/5/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/5/events", "html_url": "https://github.com/keleshev/schema/issues/5", "id": 7808347, "node_id": "MDU6SXNzdWU3ODA4MzQ3", "number": 5, "title": "UnboundLocalError instead of SchemaError with python 3.3", "user": {"login": "flying-sheep", "id": 291575, "node_id": "MDQ6VXNlcjI5MTU3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flying-sheep", "html_url": "https://github.com/flying-sheep", "followers_url": "https://api.github.com/users/flying-sheep/followers", "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}", "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}", "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions", "organizations_url": "https://api.github.com/users/flying-sheep/orgs", "repos_url": "https://api.github.com/users/flying-sheep/repos", "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}", "received_events_url": "https://api.github.com/users/flying-sheep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-10-23T19:54:57Z", "updated_at": "2013-03-06T21:32:52Z", "closed_at": "2013-03-06T20:15:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "i don\u2019t really understand it, but apparently python 3 doesn\u2019t like the `except SchemaError as x`, which shows if i `Use(func)`, and `func` throws an error. with python2 it bails out properly with a `SchemaError`.\n\ni\u2019m using the PyPi version 1.1.0: [6654985c16](https://github.com/halst/schema/blob/6654985c161c99f0a5a6091a4b16bbbee5214d37/schema.py) (btw., a version bump would be nice)\n\nit\u2019s all a big wat to me:\n\n``` python\nIn [0]: Schema({'z': Use(open)}).validate({'z': '3'})\n---------------------------------------------------------------------------\nUnboundLocalError                         Traceback (most recent call last)\n<ipython-input-0-587362465235> in <module>()\n----> 1 Schema({'z': Use(open)}).validate({'z': '3'})\n\n/usr/lib/python3.3/site-packages/schema.py in validate(self, data)\n    106                     new[nkey] = nvalue\n    107                 elif type(skey) is not Optional:\n--> 108                     if x is not None:\n    109                         raise SchemaError(['key %r is required' % key] +\n    110                                           x.autos, [e] + x.errors)\n\nUnboundLocalError: local variable 'x' referenced before assignment\n```\n\n``` python\nIn [1]: try: Schema({'z': Use(open)}).validate({'z': '3'})\n   ...: except: pdb.post_mortem()\n> /usr/lib/python3.3/site-packages/schema.py(108)validate()\n(Pdb) where\n  <ipython-input-1-69871cda9050>(1)<module>()\n-> try: Schema({'z': Use(open)}).validate({'z': '3'})\n> /usr/lib/python3.3/site-packages/schema.py(108)validate()\n-> if x is not None:\n(Pdb) pp locals()\n{'coverage': set(),\n 'data': {'z': '3'},\n 'e': None,\n 'key': 'z',\n 'new': {},\n 'nkey': 'z',\n 's': {'z': Use(<built-in function open>)},\n 'self': Schema({'z': Use(<built-in function open>)}),\n 'skey': 'z',\n 'svalue': Use(<built-in function open>),\n 'valid': False,\n 'value': '3'}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/3", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/3/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/3/events", "html_url": "https://github.com/keleshev/schema/issues/3", "id": 7594410, "node_id": "MDU6SXNzdWU3NTk0NDEw", "number": 3, "title": "Incorrect error when invalid dict keys are sent in", "user": {"login": "taavi", "id": 35443, "node_id": "MDQ6VXNlcjM1NDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/35443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taavi", "html_url": "https://github.com/taavi", "followers_url": "https://api.github.com/users/taavi/followers", "following_url": "https://api.github.com/users/taavi/following{/other_user}", "gists_url": "https://api.github.com/users/taavi/gists{/gist_id}", "starred_url": "https://api.github.com/users/taavi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taavi/subscriptions", "organizations_url": "https://api.github.com/users/taavi/orgs", "repos_url": "https://api.github.com/users/taavi/repos", "events_url": "https://api.github.com/users/taavi/events{/privacy}", "received_events_url": "https://api.github.com/users/taavi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 11939727, "node_id": "MDU6TGFiZWwxMTkzOTcyNw==", "url": "https://api.github.com/repos/keleshev/schema/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2012-10-15T14:42:21Z", "updated_at": "2014-02-17T14:43:53Z", "closed_at": "2014-02-17T14:43:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using git://github.com/halst/schema.git@127ad3d040009d03973b50c4b105e698a7635440\n\n```\n>>> from schema import *\n>>> s = Schema({'status': Use(str)})\n\n>>> s.validate({'status':'foo'}) # Good\n{'status': 'foo'}\n\n>>> s.validate({'bogus':'foo'}) # Good\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/taavi/src/envs/pluto/src/schema/schema.py\", line 119, in validate\n    raise SchemaError('key %r is required' % skey, e)\nschema.SchemaError: key 'status' is required\n\n>>> s.validate({'bogus':'foo', 'status': 'bar'}) # BAD\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/taavi/src/envs/pluto/src/schema/schema.py\", line 119, in validate\n    raise SchemaError('key %r is required' % skey, e)\nschema.SchemaError: key 'status' is required\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keleshev/schema/issues/1", "repository_url": "https://api.github.com/repos/keleshev/schema", "labels_url": "https://api.github.com/repos/keleshev/schema/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/keleshev/schema/issues/1/comments", "events_url": "https://api.github.com/repos/keleshev/schema/issues/1/events", "html_url": "https://github.com/keleshev/schema/issues/1", "id": 6421453, "node_id": "MDU6SXNzdWU2NDIxNDUz", "number": 1, "title": "Path Traversal in README", "user": {"login": "westurner", "id": 50891, "node_id": "MDQ6VXNlcjUwODkx", "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westurner", "html_url": "https://github.com/westurner", "followers_url": "https://api.github.com/users/westurner/followers", "following_url": "https://api.github.com/users/westurner/following{/other_user}", "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}", "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westurner/subscriptions", "organizations_url": "https://api.github.com/users/westurner/orgs", "repos_url": "https://api.github.com/users/westurner/repos", "events_url": "https://api.github.com/users/westurner/events{/privacy}", "received_events_url": "https://api.github.com/users/westurner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-08-23T22:30:29Z", "updated_at": "2012-09-02T16:19:24Z", "closed_at": "2012-09-02T16:19:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nSchema(os.path.exists).validate('./')\n```\n\nSee: http://cwe.mitre.org/data/definitions/23.html\n", "performed_via_github_app": null, "score": 1.0}]}