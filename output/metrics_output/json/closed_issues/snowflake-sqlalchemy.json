{"total_count": 53, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/180", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/180/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/180/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/180", "id": 649659185, "node_id": "MDU6SXNzdWU2NDk2NTkxODU=", "number": 180, "title": "sqlalchemy.util.queue.Empty, in running query using flask", "user": {"login": "aman0511", "id": 3745880, "node_id": "MDQ6VXNlcjM3NDU4ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3745880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aman0511", "html_url": "https://github.com/aman0511", "followers_url": "https://api.github.com/users/aman0511/followers", "following_url": "https://api.github.com/users/aman0511/following{/other_user}", "gists_url": "https://api.github.com/users/aman0511/gists{/gist_id}", "starred_url": "https://api.github.com/users/aman0511/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aman0511/subscriptions", "organizations_url": "https://api.github.com/users/aman0511/orgs", "repos_url": "https://api.github.com/users/aman0511/repos", "events_url": "https://api.github.com/users/aman0511/events{/privacy}", "received_events_url": "https://api.github.com/users/aman0511/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-02T05:58:33Z", "updated_at": "2020-07-09T18:41:24Z", "closed_at": "2020-07-09T18:41:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/163", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/163/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/163/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/163", "id": 577031223, "node_id": "MDU6SXNzdWU1NzcwMzEyMjM=", "number": 163, "title": "SQLAlchemy TypeError: 'NoneType' object is not subscriptable ", "user": {"login": "Stoltzman", "id": 61505413, "node_id": "MDQ6VXNlcjYxNTA1NDEz", "avatar_url": "https://avatars2.githubusercontent.com/u/61505413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stoltzman", "html_url": "https://github.com/Stoltzman", "followers_url": "https://api.github.com/users/Stoltzman/followers", "following_url": "https://api.github.com/users/Stoltzman/following{/other_user}", "gists_url": "https://api.github.com/users/Stoltzman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stoltzman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stoltzman/subscriptions", "organizations_url": "https://api.github.com/users/Stoltzman/orgs", "repos_url": "https://api.github.com/users/Stoltzman/repos", "events_url": "https://api.github.com/users/Stoltzman/events{/privacy}", "received_events_url": "https://api.github.com/users/Stoltzman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-06T16:13:11Z", "updated_at": "2020-03-09T16:14:18Z", "closed_at": "2020-03-09T16:14:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\nPython 3.8.1\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nWindows-10-10.0.16299-SP0\r\n3. What are the component versions in the environment (`pip list`)? \r\nPackage                       Version\r\n----------------------------- ----------\r\naltair                        4.0.1\r\nantlr4-python2-runtime        4.7.1\r\nappdirs                       1.4.3\r\nasn1crypto                    1.3.0\r\natomicwrites                  1.1.5\r\nattrs                         18.1.0\r\nautopep8                      1.5\r\nazure-common                  1.1.24\r\nazure-storage-blob            2.1.0\r\nazure-storage-common          2.1.0\r\nbackcall                      0.1.0\r\nbackports.functools-lru-cache 1.6.1\r\nbleach                        3.1.1\r\nboto3                         1.11.17\r\nbotocore                      1.14.17\r\ncertifi                       2019.11.28\r\ncffi                          1.13.2\r\nchardet                       3.0.4\r\nClick                         7.0\r\ncolorama                      0.4.3\r\ncoverage                      5.0.3\r\ncryptography                  2.8\r\ndecorator                     4.4.1\r\ndefusedxml                    0.6.0\r\ndistlib                       0.3.0\r\ndocutils                      0.15.2\r\nelasticsearch                 6.4.0\r\nentrypoints                   0.3\r\nfilelock                      3.0.12\r\nflake8                        3.5.0\r\nflake8-tidy-imports           1.1.0\r\nfuture                        0.18.2\r\nhttplib2                      0.9.2\r\nidna                          2.8\r\nijson                         2.6.1\r\nipykernel                     5.1.4\r\nipython                       7.12.0\r\nipython-genutils              0.2.0\r\nipywidgets                    7.5.1\r\njedi                          0.16.0\r\nJinja2                        2.11.1\r\njmespath                      0.9.5\r\njsonschema                    3.2.0\r\njupyter-client                6.0.0\r\njupyter-core                  4.6.3\r\nMarkupSafe                    1.1.1\r\nmarshmallow                   2.20.5\r\nmccabe                        0.6.1\r\nmistune                       0.8.4\r\nmock                          2.0.0\r\nmore-itertools                4.2.0\r\nnbconvert                     5.6.1\r\nnbformat                      5.0.4\r\nneo4j-driver                  1.7.2\r\nneobolt                       1.7.16\r\nneotime                       1.7.1\r\nnotebook                      6.0.3\r\nnumpy                         1.18.1\r\noscrypto                      1.2.0\r\npandas                        1.0.1\r\npandocfilters                 1.4.2\r\nparso                         0.6.2\r\npbr                           5.4.4\r\npickleshare                   0.7.5\r\npip                           20.0.2\r\npluggy                        0.13.1\r\nprometheus-client             0.7.1\r\nprompt-toolkit                3.0.3\r\npsutil                        5.7.0\r\npy                            1.5.3\r\npycodestyle                   2.5.0\r\npycparser                     2.19\r\npycryptodomex                 3.9.7\r\npyflakes                      1.6.0\r\nPygments                      2.5.2\r\npyhocon                       0.3.42\r\nPyJWT                         1.7.1\r\npyOpenSSL                     19.1.0\r\npyparsing                     2.2.0\r\npyrsistent                    0.15.7\r\npytest                        3.10.1\r\npytest-cov                    2.8.1\r\npytest-mock                   1.13.0\r\npython-dateutil               2.8.1\r\npytz                          2018.4\r\npywin32                       227\r\npywinpty                      0.5.7\r\npyzmq                         19.0.0\r\nrequests                      2.22.0\r\nretrying                      1.3.3\r\nruamel.yaml                   0.16.10\r\nruamel.yaml.clib              0.2.0\r\ns3transfer                    0.3.3\r\nscipy                         1.4.1\r\nSend2Trash                    1.5.0\r\nsetuptools                    41.2.0\r\nsix                           1.14.0\r\nsnowflake-connector-python    2.2.1\r\nsnowflake-sqlalchemy          1.2.1\r\nSQLAlchemy                    1.3.13\r\nstatsd                        3.2.1\r\nstevedore                     1.32.0\r\ntermcolor                     1.1.0\r\nterminado                     0.8.3\r\ntestpath                      0.4.4\r\ntoolz                         0.10.0\r\ntornado                       6.0.3\r\ntraitlets                     4.3.3\r\ntyping                        3.6.4\r\ntzlocal                       2.0.0\r\nUnidecode                     1.1.1\r\nurllib3                       1.25.8\r\nvirtualenv                    20.0.7\r\nvirtualenv-clone              0.5.3\r\nvirtualenvwrapper-win         1.2.6\r\nwcwidth                       0.1.8\r\nwebencodings                  0.5.1\r\nwheel                         0.31.1\r\nwidgetsnbextension            3.5.1\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\n5. What did you expect to see?\r\nExecuting a batch in in Great_expectations which uses SQLAlchemy. The batch works OK for regular tables However when trying a batch on a view it fails due to the generated query in SF seem to be wrong.\r\n\r\n SHOW /* sqlalchemy:get_table_comment */ VIEWS LIKE 'dim_portfolio' IN SCHEMA datamart\r\n\r\n6. What did you see instead?\r\n SHOW /* sqlalchemy:get_table_comment */ TABLES LIKE 'dim_portfolio' IN SCHEMA datamart\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-5-804edf7342f8> in <module>\r\n     11 \r\n     12 batch = context.get_batch(batch_kwargs, expectation_suite_name)\r\n---> 13 batch.head()\r\n     14 \r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\great_expectations\\dataset\\sqlalchemy_dataset.py in head(self, n)\r\n    326 \r\n    327         try:\r\n--> 328             df = next(pd.read_sql_table(\r\n    329                 table_name=self._table.name,\r\n    330                 schema=self._table.schema,\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\pandas\\io\\sql.py in read_sql_table(table_name, con, schema, index_col, coerce_float, parse_dates, columns, chunksize)\r\n    240     meta = MetaData(con, schema=schema)\r\n    241     try:\r\n--> 242         meta.reflect(only=[table_name], views=True)\r\n    243     except sqlalchemy.exc.InvalidRequestError:\r\n    244         raise ValueError(f\"Table {table_name} not found\")\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\sql\\schema.py in reflect(self, bind, schema, views, only, extend_existing, autoload_replace, resolve_fks, **dialect_kwargs)\r\n   4269             for name in load:\r\n   4270                 try:\r\n-> 4271                     Table(name, self, **reflect_opts)\r\n   4272                 except exc.UnreflectableTableError as uerr:\r\n   4273                     util.warn(\"Skipping table %s: %s\" % (name, uerr))\r\n<string> in __new__(cls, *args, **kw)\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py in warned(fn, *args, **kwargs)\r\n    126                     )\r\n    127 \r\n--> 128             return fn(*args, **kwargs)\r\n    129 \r\n    130         doc = fn.__doc__ is not None and fn.__doc__ or \"\"\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\sql\\schema.py in __new__(cls, *args, **kw)\r\n    504             except:\r\n    505                 with util.safe_reraise():\r\n--> 506                     metadata._remove_table(name, schema)\r\n    507 \r\n    508     @property\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py in __exit__(self, type_, value, traceback)\r\n     66             self._exc_info = None  # remove potential circular references\r\n     67             if not self.warn_only:\r\n---> 68                 compat.reraise(exc_type, exc_value, exc_tb)\r\n     69         else:\r\n     70             if not compat.py3k and self._exc_info and self._exc_info[1]:\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\util\\compat.py in reraise(tp, value, tb, cause)\r\n    151         if value.__traceback__ is not tb:\r\n    152             raise value.with_traceback(tb)\r\n--> 153         raise value\r\n    154 \r\n    155     def u(s):\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\sql\\schema.py in __new__(cls, *args, **kw)\r\n    499             metadata._add_table(name, schema, table)\r\n    500             try:\r\n--> 501                 table._init(name, metadata, *args, **kw)\r\n    502                 table.dispatch.after_parent_attach(table, metadata)\r\n    503                 return table\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\sql\\schema.py in _init(self, name, metadata, *args, **kwargs)\r\n    588         # circular foreign keys\r\n    589         if autoload:\r\n--> 590             self._autoload(\r\n    591                 metadata,\r\n    592                 autoload_with,\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\sql\\schema.py in _autoload(self, metadata, autoload_with, include_columns, exclude_columns, resolve_fks, _extend_on)\r\n    611 \r\n    612         if autoload_with:\r\n--> 613             autoload_with.run_callable(\r\n    614                 autoload_with.dialect.reflecttable,\r\n    615                 self,\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\engine\\base.py in run_callable(self, callable_, *args, **kwargs)\r\n   1613 \r\n   1614         \"\"\"\r\n-> 1615         return callable_(self, *args, **kwargs)\r\n   1616 \r\n   1617     def _run_visitor(self, visitorcallable, element, **kwargs):\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\engine\\default.py in reflecttable(self, connection, table, include_columns, exclude_columns, resolve_fks, **opts)\r\n    464     ):\r\n    465         insp = reflection.Inspector.from_engine(connection)\r\n--> 466         return insp.reflecttable(\r\n    467             table, include_columns, exclude_columns, resolve_fks, **opts\r\n    468         )\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\engine\\reflection.py in reflecttable(self, table, include_columns, exclude_columns, resolve_fks, _extend_on)\r\n    700         )\r\n    701 \r\n--> 702         self._reflect_table_comment(\r\n    703             table_name, schema, table, reflection_options\r\n    704         )\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\engine\\reflection.py in _reflect_table_comment(self, table_name, schema, table, reflection_options)\r\n   1003     ):\r\n   1004         try:\r\n-> 1005             comment_dict = self.get_table_comment(table_name, schema)\r\n   1006         except NotImplementedError:\r\n   1007             return\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\sqlalchemy\\engine\\reflection.py in get_table_comment(self, table_name, schema, **kw)\r\n    533         \"\"\"\r\n    534 \r\n--> 535         return self.dialect.get_table_comment(\r\n    536             self.bind, table_name, schema, info_cache=self.info_cache, **kw\r\n    537         )\r\nc:\\users\\mist\\envs\\ge_sf\\lib\\site-packages\\snowflake\\sqlalchemy\\snowdialect.py in get_table_comment(self, connection, table_name, schema, **kw)\r\n    584         cursor = connection.execute(sql_command)\r\n    585         ans = cursor.fetchone()\r\n--> 586         return {'text': ans['comment'] if ans['comment'] else None}\r\n    587 \r\n    588 \r\nTypeError: 'NoneType' object is not subscriptable\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/148", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/148/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/148/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/148", "id": 547371044, "node_id": "MDU6SXNzdWU1NDczNzEwNDQ=", "number": 148, "title": "Import failure when installed via external package - packaged as an egg", "user": {"login": "edmartin101", "id": 52158974, "node_id": "MDQ6VXNlcjUyMTU4OTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/52158974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmartin101", "html_url": "https://github.com/edmartin101", "followers_url": "https://api.github.com/users/edmartin101/followers", "following_url": "https://api.github.com/users/edmartin101/following{/other_user}", "gists_url": "https://api.github.com/users/edmartin101/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmartin101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmartin101/subscriptions", "organizations_url": "https://api.github.com/users/edmartin101/orgs", "repos_url": "https://api.github.com/users/edmartin101/repos", "events_url": "https://api.github.com/users/edmartin101/events{/privacy}", "received_events_url": "https://api.github.com/users/edmartin101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-09T09:58:13Z", "updated_at": "2020-01-15T14:29:52Z", "closed_at": "2020-01-15T14:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. What version of Python are you using (`python --version`)?\r\nPython 2.7.16\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nDarwin-18.7.0-x86_64-i386-64bit\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\nsnowflake-sqlalchemy==1.1.16\r\nsnowflake-connector-python==2.1.3\r\n```\r\n4. What did you do?\r\nA packaged dependency that includes Snowflake SQL via an egg (i.e a private package installed via Github) will lead to an import issue when run due to line 27 in snowdialect.py, which is not discoverable. However, when the same dependency is packaged and manually installed as a wheel there is no apparent issue with this import path. This issue only impacts Python 2.7 \r\n\r\n5. What did you expect to see?\r\nThat the external dependency reliant on Snowflake SQLAlchemy would work built as both an egg or as a wheel.\r\n6. What did you see instead?\r\nWhen installed as an egg the dependency blows up the system. However, when a wheel is built and installed from the same package it works as expected. I would expect that the package making use of Snowflake-sqlalchemy would be installable from both an egg and whl.\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n```\r\nfrom our_library.snowflake_operators import SnowflakeOperator\r\n  File \"/server/python/service/lib/python2.7/site-packages/our_library/snowflake_operators.py\", line 4, in <module>\r\n    from snowflake.sqlalchemy import VARIANT\r\n  File \"/server/python/service/lib/python2.7/site-packages/snowflake/sqlalchemy/__init__.py\", line 8, in <module>\r\n    from snowflake.sqlalchemy import snowdialect\r\n  File \"/server/python/service/lib/python2.7/site-packages/snowflake/sqlalchemy/snowdialect.py\", line 27, in <module>\r\n    from snowflake.sqlalchemy.connectors.constants import UTF8\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/142", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/142/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/142/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/142", "id": 538528655, "node_id": "MDU6SXNzdWU1Mzg1Mjg2NTU=", "number": 142, "title": "`_get_schema_columns` broken in release v1.1.17", "user": {"login": "dylan-murray", "id": 43968990, "node_id": "MDQ6VXNlcjQzOTY4OTkw", "avatar_url": "https://avatars0.githubusercontent.com/u/43968990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylan-murray", "html_url": "https://github.com/dylan-murray", "followers_url": "https://api.github.com/users/dylan-murray/followers", "following_url": "https://api.github.com/users/dylan-murray/following{/other_user}", "gists_url": "https://api.github.com/users/dylan-murray/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylan-murray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylan-murray/subscriptions", "organizations_url": "https://api.github.com/users/dylan-murray/orgs", "repos_url": "https://api.github.com/users/dylan-murray/repos", "events_url": "https://api.github.com/users/dylan-murray/events{/privacy}", "received_events_url": "https://api.github.com/users/dylan-murray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-12-16T16:46:46Z", "updated_at": "2020-02-07T19:43:58Z", "closed_at": "2020-02-07T19:43:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\n`3.7`\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\n`Ubuntu`\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\n```\r\nsnowflake-connector-python 2.1.1\r\nsnowflake-sqlalchemy       1.1.17\r\nSQLAlchemy                 1.3.11\r\n```\r\n\r\n4. What did you do?\r\n\r\nIssue is breaking code that was previously working in v1.1.16\r\n\r\n6. What did you see instead?\r\n\r\n```\r\nsqlalchemy.exc.ProgrammingError: (snowflake.connector.errors.ProgrammingError) 252004: Binding parameters must be a list: {'table_schema': ''}\r\n\r\n[SQL:\r\n        SELECT /* sqlalchemy:_get_columns_in_schema */\r\n               ic.table_name,\r\n               ic.column_name,\r\n               ic.data_type,\r\n               ic.character_maximum_length,\r\n               ic.numeric_precision,\r\n               ic.numeric_scale,\r\n               ic.is_nullable,\r\n               ic.column_default,\r\n               ic.is_identity,\r\n               ic.comment\r\n          FROM information_schema.columns ic\r\n         WHERE ic.table_schema=%(table_schema)s\r\n         ORDER BY ic.ordinal_position]\r\nparameters: {'table_schema': ''}]\r\n(Background on this error at: http://sqlalche.me/e/f405)\r\n```\r\n\r\nseems to be occurring here https://github.com/snowflakedb/snowflake-sqlalchemy/blob/db3104d0fcd076700bc68648a892e80cc4c0214a/snowdialect.py#L325-L339\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/135", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/135/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/135/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/135", "id": 529579677, "node_id": "MDU6SXNzdWU1Mjk1Nzk2Nzc=", "number": 135, "title": "support comments on table", "user": {"login": "kalyanaramansanthanam", "id": 32317681, "node_id": "MDQ6VXNlcjMyMzE3Njgx", "avatar_url": "https://avatars3.githubusercontent.com/u/32317681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalyanaramansanthanam", "html_url": "https://github.com/kalyanaramansanthanam", "followers_url": "https://api.github.com/users/kalyanaramansanthanam/followers", "following_url": "https://api.github.com/users/kalyanaramansanthanam/following{/other_user}", "gists_url": "https://api.github.com/users/kalyanaramansanthanam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalyanaramansanthanam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalyanaramansanthanam/subscriptions", "organizations_url": "https://api.github.com/users/kalyanaramansanthanam/orgs", "repos_url": "https://api.github.com/users/kalyanaramansanthanam/repos", "events_url": "https://api.github.com/users/kalyanaramansanthanam/events{/privacy}", "received_events_url": "https://api.github.com/users/kalyanaramansanthanam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-27T21:26:02Z", "updated_at": "2019-11-27T21:27:49Z", "closed_at": "2019-11-27T21:27:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\nPython 2.7.15+\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nLinux-4.15.0-65-generic-x86_64-with-Ubuntu-18.04-bionic\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\nPackage                       Version  \r\n----------------------------- ---------\r\nalembic                       1.0.11   \r\nAPScheduler                   3.6.1    \r\nasn1crypto                    0.24.0   \r\nazure-common                  1.1.23   \r\nazure-nspkg                   3.0.2    \r\nazure-storage-blob            2.1.0    \r\nazure-storage-common          2.1.0    \r\nazure-storage-nspkg           3.1.0    \r\nbackports.functools-lru-cache 1.5      \r\nboto3                         1.9.253  \r\nbotocore                      1.12.253 \r\ncertifi                       2019.9.11\r\ncffi                          1.13.1   \r\nchardet                       3.0.4    \r\nClick                         7.0      \r\ncolorlog                      4.0.2    \r\ncryptography                  2.8      \r\ndocutils                      0.15.2   \r\nenum34                        1.1.6    \r\nfuncsigs                      1.0.2    \r\nfuture                        0.18.1   \r\nfutures                       3.3.0    \r\ngevent                        1.4.0    \r\ngreenlet                      0.4.15   \r\nhumanize                      0.5.1    \r\nidna                          2.8      \r\nijson                         2.5.1    \r\ninfluxdb                      5.2.3    \r\nipaddress                     1.0.23   \r\nJinja2                        2.10.3   \r\njmespath                      0.9.4    \r\nMako                          1.1.0    \r\nMarkupSafe                    1.1.1    \r\npip                           19.3.1   \r\npip-tools                     4.3.0    \r\npyasn1                        0.4.7    \r\npyasn1-modules                0.2.7    \r\npycparser                     2.19     \r\npycryptodomex                 3.9.0    \r\nPyJWT                         1.7.1    \r\npyOpenSSL                     19.0.0   \r\npython-dateutil               2.8.0    \r\npython-editor                 1.0.4    \r\npytz                          2019.3   \r\nrequests                      2.22.0   \r\ns3transfer                    0.2.1    \r\nsetuptools                    42.0.1   \r\nsix                           1.12.0   \r\nsnowflake-connector-python    1.9.1    \r\nsnowflake-sqlalchemy          1.1.15   \r\nSQLAlchemy                    1.3.10   \r\ntzlocal                       2.0.0    \r\nurllib3                       1.25.6   \r\nwheel                         0.33.6   \r\n\r\n```\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\nI am trying to add comments to tables via sqlalchemy\r\n```\r\n\r\nclass TableA(Base):\r\n\r\n    __tablename__ = 'table_a'\r\n    __table_args__= {\r\n        'comment': (\"This table has been deprecated\")\r\n    }\r\n    row_id = Column(String(256), primary_key=True)\r\n\r\nThis generates an alembic revision in which the `comment` is being included\r\nop.create_table('table_id',\r\n    sa.PrimaryKeyConstraint('row_id'),\r\n    comment=\"This table has been deprecated \"\r\n    )\r\n\r\nhowever, the comment is not being included when `CREATE TABLE` sql is produced\r\n\r\nCREATE TABLE table_a (\r\n\trow_id VARCHAR(256), \r\n\tPRIMARY KEY (row_id)\r\n)\r\n\r\n```\r\n\r\n5. What did you expect to see?\r\n\r\ncomment to be included in the CREATE TABLE query\r\n\r\n6. What did you see instead?\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\nimport logging\r\nimport os\r\n\r\nfor logger_name in ['snowflake.sqlalchemy', 'snowflake.connector', 'botocore']: \r\n    logger = logging.getLogger(logger_name)\r\n    logger.setLevel(logging.DEBUG)\r\n    ch = logging.StreamHandler()\r\n    ch.setLevel(logging.DEBUG)\r\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\r\n    logger.addHandler(ch)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/134", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/134/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/134/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/134", "id": 529570718, "node_id": "MDU6SXNzdWU1Mjk1NzA3MTg=", "number": 134, "title": "Turning SSL on", "user": {"login": "kkwan-tc", "id": 40668524, "node_id": "MDQ6VXNlcjQwNjY4NTI0", "avatar_url": "https://avatars3.githubusercontent.com/u/40668524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkwan-tc", "html_url": "https://github.com/kkwan-tc", "followers_url": "https://api.github.com/users/kkwan-tc/followers", "following_url": "https://api.github.com/users/kkwan-tc/following{/other_user}", "gists_url": "https://api.github.com/users/kkwan-tc/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkwan-tc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkwan-tc/subscriptions", "organizations_url": "https://api.github.com/users/kkwan-tc/orgs", "repos_url": "https://api.github.com/users/kkwan-tc/repos", "events_url": "https://api.github.com/users/kkwan-tc/events{/privacy}", "received_events_url": "https://api.github.com/users/kkwan-tc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913931, "node_id": "MDU6TGFiZWwzOTQ5MTM5MzE=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-27T21:00:43Z", "updated_at": "2019-11-29T13:14:39Z", "closed_at": "2019-11-29T13:14:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python Version 3.6.5\r\nDarwin-18.7.0-x86_64-i386-64bit\r\n\r\nRelevant package versions:\r\nsnowflake-connector-python 2.0.4\r\nsnowflake-sqlalchemy       1.1.16\r\nSQLAlchemy                 1.3.5\r\n\r\nI'm having trouble finding this in the documentation\r\nwhen creating an engine is SSL turned on by default? If not is this the correct way to turn it on? (is it supported?)\r\n\r\n```\r\nengine = create_engine(URL(\r\n    account=<>,\r\n    user=<>,\r\n    warehouse=<>,\r\n    role=<>,\r\n    database=<>,\r\n    ),\r\n    connect_args={\r\n        'private_key': pkb,\r\n        'ssl':True}\r\n    )\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/132", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/132/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/132/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/132", "id": 527703323, "node_id": "MDU6SXNzdWU1Mjc3MDMzMjM=", "number": 132, "title": "Calling str on custom_types throws Exception", "user": {"login": "villebro", "id": 33317356, "node_id": "MDQ6VXNlcjMzMzE3MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/33317356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villebro", "html_url": "https://github.com/villebro", "followers_url": "https://api.github.com/users/villebro/followers", "following_url": "https://api.github.com/users/villebro/following{/other_user}", "gists_url": "https://api.github.com/users/villebro/gists{/gist_id}", "starred_url": "https://api.github.com/users/villebro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villebro/subscriptions", "organizations_url": "https://api.github.com/users/villebro/orgs", "repos_url": "https://api.github.com/users/villebro/repos", "events_url": "https://api.github.com/users/villebro/events{/privacy}", "received_events_url": "https://api.github.com/users/villebro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-24T14:08:33Z", "updated_at": "2020-05-07T20:42:07Z", "closed_at": "2020-05-07T20:42:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n`Python 3.7.4`\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n`Darwin-18.7.0-x86_64-i386-64bit`\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\nPackage                    Version   Location                \r\n-------------------------- --------- ------------------------\r\nasn1crypto                 1.2.0     \r\nazure-common               1.1.23    \r\nazure-storage-blob         2.1.0     \r\nazure-storage-common       2.1.0     \r\nboto3                      1.10.15   \r\nbotocore                   1.13.15   \r\ncertifi                    2019.9.11 \r\ncffi                       1.13.2    \r\nchardet                    3.0.4     \r\nClick                      7.0       \r\ncryptography               2.8       \r\ndecorator                  4.4.1     \r\ndocutils                   0.15.2    \r\nfuture                     0.18.2    \r\nidna                       2.8       \r\nijson                      2.5.1     \r\njmespath                   0.9.4     \r\nnumpy                      1.17.2    \r\noscrypto                   1.1.0     \r\npbr                        5.4.3     \r\npip                        19.2.3    \r\npip-tools                  4.2.0     \r\npyarrow                    0.14.1    \r\npycparser                  2.19      \r\npycryptodomex              3.9.2     \r\nPyJWT                      1.7.1     \r\npyOpenSSL                  19.0.0    \r\npython-dateutil            2.8.0     \r\npytz                       2019.3    \r\nrequests                   2.22.0    \r\ns3transfer                 0.2.1     \r\nsetuptools                 41.2.0    \r\nsix                        1.13.0    \r\nsnowflake-connector-python 2.0.3     \r\nsnowflake-sqlalchemy       1.1.16    \r\nSQLAlchemy                 1.3.11    \r\nsqlalchemy-migrate         0.13.0    \r\nSQLAlchemy-Utils           0.34.2    \r\nsqlparse                   0.3.0     \r\nsqltask                    0.5.2     /Users/ville/dev/sqltask\r\nTempita                    0.5.2     \r\nurllib3                    1.24.3    \r\nwheel                      0.33.6\r\n```\r\n\r\n4. What did you do?\r\n```python\r\nfrom snowflake.sqlachemy import custom_types\r\n\r\ntinyint = custom_types.TINYINT()\r\ntimestamp_ntz = custom_types.TIMESTAMP_NTZ()\r\n\r\ntinyint_str = str(tinyint)  # this works\r\ntimestamp_ntz_str = str(timestamp_ntz)  # this doesn't\r\n```\r\n\r\n5. What did you expect to see?\r\ncalling `str()` on snowflake types should work similar to how regular SqlAlchemy types do.\r\n\r\n6. What did you see instead?\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/ville/.local/share/virtualenvs/adm-C7TUfBSf/lib/python3.7/site-packages/sqlalchemy/sql/visitors.py\", line 88, in _compiler_dispatch\r\n    meth = getter(visitor)\r\nAttributeError: 'GenericTypeCompiler' object has no attribute 'visit_TIMESTAMP_NTZ'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/ville/.local/share/virtualenvs/adm-C7TUfBSf/lib/python3.7/site-packages/sqlalchemy/sql/type_api.py\", line 607, in __str__\r\n    return str(self.compile())\r\n  File \"/Users/ville/.local/share/virtualenvs/adm-C7TUfBSf/lib/python3.7/site-packages/sqlalchemy/sql/type_api.py\", line 590, in compile\r\n    return dialect.type_compiler.process(self)\r\n  File \"/Users/ville/.local/share/virtualenvs/adm-C7TUfBSf/lib/python3.7/site-packages/sqlalchemy/sql/compiler.py\", line 400, in process\r\n    return type_._compiler_dispatch(self, **kw)\r\n  File \"/Users/ville/.local/share/virtualenvs/adm-C7TUfBSf/lib/python3.7/site-packages/sqlalchemy/sql/visitors.py\", line 90, in _compiler_dispatch\r\n    raise exc.UnsupportedCompilationError(visitor, cls)\r\nsqlalchemy.exc.UnsupportedCompilationError: Compiler <sqlalchemy.sql.compiler.GenericTypeCompiler object at 0x114661d90> can't render element of type <class 'snowflake.sqlalchemy.custom_types.TIMESTAMP_NTZ'> (Background on this error at: http://sqlalche.me/e/l7de)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/130", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/130/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/130/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/130", "id": 521655031, "node_id": "MDU6SXNzdWU1MjE2NTUwMzE=", "number": 130, "title": "Import of SnowflakeOCSPAsn1Crypto crashes Python", "user": {"login": "ms32035", "id": 5060473, "node_id": "MDQ6VXNlcjUwNjA0NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5060473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ms32035", "html_url": "https://github.com/ms32035", "followers_url": "https://api.github.com/users/ms32035/followers", "following_url": "https://api.github.com/users/ms32035/following{/other_user}", "gists_url": "https://api.github.com/users/ms32035/gists{/gist_id}", "starred_url": "https://api.github.com/users/ms32035/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ms32035/subscriptions", "organizations_url": "https://api.github.com/users/ms32035/orgs", "repos_url": "https://api.github.com/users/ms32035/repos", "events_url": "https://api.github.com/users/ms32035/events{/privacy}", "received_events_url": "https://api.github.com/users/ms32035/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913928, "node_id": "MDU6TGFiZWwzOTQ5MTM5Mjg=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/17", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/17", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/17/labels", "id": 4843337, "node_id": "MDk6TWlsZXN0b25lNDg0MzMzNw==", "number": 17, "title": "v2.0.5", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2019-11-13T18:31:59Z", "updated_at": "2019-11-20T06:56:00Z", "due_on": null, "closed_at": null}, "comments": 13, "created_at": "2019-11-12T16:24:26Z", "updated_at": "2020-07-20T17:10:21Z", "closed_at": "2019-11-14T15:41:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\nPython 3.7.5\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nDarwin-19.0.0-x86_64-i386-64bit\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\nsee attached log file\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\n`from snowflake.connector.ocsp_asn1crypto import SnowflakeOCSPAsn1Crypto as SFOCSP` \r\n\r\nsee attached log file for the complete process\r\n\r\n5. What did you expect to see?\r\n\r\n6. What did you see instead?\r\n\r\nPython process crashes\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n[log.txt](https://github.com/snowflakedb/snowflake-sqlalchemy/files/3837132/log.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/127", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/127/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/127/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/127", "id": 515898745, "node_id": "MDU6SXNzdWU1MTU4OTg3NDU=", "number": 127, "title": "[Version 1.1.16] Import path `azure.storage.blob`; cannot import name 'BlockBlobService'", "user": {"login": "arthurdysart", "id": 40406522, "node_id": "MDQ6VXNlcjQwNDA2NTIy", "avatar_url": "https://avatars2.githubusercontent.com/u/40406522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurdysart", "html_url": "https://github.com/arthurdysart", "followers_url": "https://api.github.com/users/arthurdysart/followers", "following_url": "https://api.github.com/users/arthurdysart/following{/other_user}", "gists_url": "https://api.github.com/users/arthurdysart/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurdysart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurdysart/subscriptions", "organizations_url": "https://api.github.com/users/arthurdysart/orgs", "repos_url": "https://api.github.com/users/arthurdysart/repos", "events_url": "https://api.github.com/users/arthurdysart/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurdysart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-01T04:01:49Z", "updated_at": "2019-11-01T22:45:47Z", "closed_at": "2019-11-01T22:45:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. What version of Python are you using (`python --version`)?\r\n> Python 3.6.8\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n> Darwin-18.7.0-x86_64-i386-64bit\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n> Package                    Version\r\n> -------------------------- ---------\r\n> asn1crypto                 1.2.0\r\n> azure-common               1.1.23\r\n> azure-core                 1.0.0\r\n> azure-storage-blob         12.0.0\r\n> boto3                      1.9.253\r\n> botocore                   1.12.253\r\n> certifi                    2019.9.11\r\n> cffi                       1.13.1\r\n> chardet                    3.0.4\r\n> cryptography               2.8\r\n> docutils                   0.15.2\r\n> future                     0.18.2\r\n> idna                       2.8\r\n> ijson                      2.5.1\r\n> isodate                    0.6.0\r\n> jmespath                   0.9.4\r\n> msrest                     0.6.10\r\n> oauthlib                   3.1.0\r\n> oscrypto                   1.1.0\r\n> pip                        19.3.1\r\n> pycparser                  2.19\r\n> pycryptodomex              3.9.0\r\n> PyJWT                      1.7.1\r\n> pyOpenSSL                  19.0.0\r\n> python-dateutil            2.8.0\r\n> pytz                       2019.3\r\n> requests                   2.22.0\r\n> requests-oauthlib          1.2.0\r\n> s3transfer                 0.2.1\r\n> setuptools                 41.6.0\r\n> six                        1.12.0\r\n> snowflake-connector-python 2.0.2\r\n> snowflake-sqlalchemy       1.1.16\r\n> SQLAlchemy                 1.3.10\r\n> urllib3                    1.25.6\r\n> wheel                      0.33.6\r\n> \r\n\r\n4. What did you do? If possible, provide a recipe for reproducing the error.A complete runnable program is good.\r\n\r\nInstalled `snowflake-connector-python` and `snowflake-sqlalchemy`:\r\n```bash\r\nvirtualenv -p python3 venv-snowflake-issue\r\n. venv-snowflake-issue/bin/activate\r\npip3 install --upgrade snowflake-sqlalchemy snowflake-connector-python\r\npython3 -c 'from snowflake.sqlalchemy import URL'\r\n```\r\n\r\n5. What did you expect to see?\r\n\r\n6. What did you see instead?\r\n> Module import path `azure.storage.blob` appears incorrect and yields following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/sqlalchemy/__init__.py\", line 8, in <module>\r\n    from . import snowdialect\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/sqlalchemy/snowdialect.py\", line 25, in <module>\r\n    from snowflake.connector.constants import UTF8\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/__init__.py\", line 21, in <module>\r\n    from .connection import SnowflakeConnection\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/connection.py\", line 44, in <module>\r\n    from .cursor import SnowflakeCursor, LOG_MAX_QUERY_LENGTH\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/cursor.py\", line 29, in <module>\r\n    from .file_transfer_agent import (SnowflakeFileTransferAgent)\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/file_transfer_agent.py\", line 20, in <module>\r\n    from .azure_util import SnowflakeAzureUtil\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/azure_util.py\", line 9, in <module>\r\n    from azure.storage.blob import BlockBlobService\r\nImportError: cannot import name 'BlockBlobService'\r\n```\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\n2019-10-31 23:59:42,181 - MainThread ssl_wrap_socket.py:86 - inject_into_urllib3() - DEBUG - Injecting ssl_wrap_socket_with_ocsp\r\n2019-10-31 23:59:42,192 - MainThread auth.py:71 - <module>() - DEBUG - cache directory: /Users/main-user/Library/Caches/Snowflake\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/sqlalchemy/__init__.py\", line 8, in <module>\r\n    from . import snowdialect\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/sqlalchemy/snowdialect.py\", line 25, in <module>\r\n    from snowflake.connector.constants import UTF8\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/__init__.py\", line 21, in <module>\r\n    from .connection import SnowflakeConnection\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/connection.py\", line 44, in <module>\r\n    from .cursor import SnowflakeCursor, LOG_MAX_QUERY_LENGTH\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/cursor.py\", line 29, in <module>\r\n    from .file_transfer_agent import (SnowflakeFileTransferAgent)\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/file_transfer_agent.py\", line 20, in <module>\r\n    from .azure_util import SnowflakeAzureUtil\r\n  File \"/Users/main-user/local-test/lib/python3.6/site-packages/snowflake/connector/azure_util.py\", line 9, in <module>\r\n    from azure.storage.blob import BlockBlobService\r\nImportError: cannot import name 'BlockBlobService'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/121", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/121/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/121/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/121", "id": 506522327, "node_id": "MDU6SXNzdWU1MDY1MjIzMjc=", "number": 121, "title": "what people need is just generate the uniquied id,why they need to register a account", "user": {"login": "schild", "id": 4749283, "node_id": "MDQ6VXNlcjQ3NDkyODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4749283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schild", "html_url": "https://github.com/schild", "followers_url": "https://api.github.com/users/schild/followers", "following_url": "https://api.github.com/users/schild/following{/other_user}", "gists_url": "https://api.github.com/users/schild/gists{/gist_id}", "starred_url": "https://api.github.com/users/schild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schild/subscriptions", "organizations_url": "https://api.github.com/users/schild/orgs", "repos_url": "https://api.github.com/users/schild/repos", "events_url": "https://api.github.com/users/schild/events{/privacy}", "received_events_url": "https://api.github.com/users/schild/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913931, "node_id": "MDU6TGFiZWwzOTQ5MTM5MzE=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-14T08:52:46Z", "updated_at": "2019-10-22T10:20:29Z", "closed_at": "2019-10-22T10:20:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\n5. What did you expect to see?\r\n\r\n6. What did you see instead?\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\nimport logging\r\nimport os\r\n\r\nfor logger_name in ['snowflake.sqlalchemy', 'snowflake.connector', 'botocore']: \r\n    logger = logging.getLogger(logger_name)\r\n    logger.setLevel(logging.DEBUG)\r\n    ch = logging.StreamHandler()\r\n    ch.setLevel(logging.DEBUG)\r\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\r\n    logger.addHandler(ch)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/120", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/120/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/120/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/120", "id": 502078470, "node_id": "MDU6SXNzdWU1MDIwNzg0NzA=", "number": 120, "title": "APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap()", "user": {"login": "WilliamHoltam", "id": 22566733, "node_id": "MDQ6VXNlcjIyNTY2NzMz", "avatar_url": "https://avatars3.githubusercontent.com/u/22566733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WilliamHoltam", "html_url": "https://github.com/WilliamHoltam", "followers_url": "https://api.github.com/users/WilliamHoltam/followers", "following_url": "https://api.github.com/users/WilliamHoltam/following{/other_user}", "gists_url": "https://api.github.com/users/WilliamHoltam/gists{/gist_id}", "starred_url": "https://api.github.com/users/WilliamHoltam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WilliamHoltam/subscriptions", "organizations_url": "https://api.github.com/users/WilliamHoltam/orgs", "repos_url": "https://api.github.com/users/WilliamHoltam/repos", "events_url": "https://api.github.com/users/WilliamHoltam/events{/privacy}", "received_events_url": "https://api.github.com/users/WilliamHoltam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T13:48:43Z", "updated_at": "2019-10-03T16:32:13Z", "closed_at": "2019-10-03T16:32:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\nPython 3\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nWindows-10-10.0.18362-SP0\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\n# Name                    Version                   Build  Channel\r\nasn1crypto                1.0.0                    py37_0    conda-forge\r\nazure-common              1.1.23                   pypi_0    pypi\r\nazure-storage-blob        2.1.0                    pypi_0    pypi\r\nazure-storage-common      2.1.0                    pypi_0    pypi\r\nbackcall                  0.1.0                    py37_0\r\nblas                      1.0                         mkl\r\nboto3                     1.9.241                    py_0    conda-forge\r\nbotocore                  1.12.241                   py_0    conda-forge\r\nca-certificates           2019.9.11            hecc5488_0    conda-forge\r\ncertifi                   2019.9.11                py37_0\r\ncffi                      1.12.3           py37hb32ad35_0    conda-forge\r\nchardet                   3.0.4                    pypi_0    pypi\r\ncolorama                  0.4.1                    py37_0\r\ncryptography              2.7              py37hb32ad35_0    conda-forge\r\ncycler                    0.10.0                   py37_0\r\ndecorator                 4.4.0                    py37_1\r\ndocutils                  0.15.2                   py37_0    conda-forge\r\nfreetype                  2.9.1                ha9979f8_1\r\nfuture                    0.17.1                   pypi_0    pypi\r\nicc_rt                    2019.0.0             h0cc432a_1\r\nicu                       58.2                 ha66f8fd_1\r\nidna                      2.8                      pypi_0    pypi\r\nijson                     2.5.1                    pypi_0    pypi\r\nintel-openmp              2019.4                      245\r\nipykernel                 5.1.2            py37h39e3cac_0\r\nipython                   7.8.0            py37h39e3cac_0\r\nipython_genutils          0.2.0                    py37_0\r\njedi                      0.15.1                   py37_0\r\njmespath                  0.9.4                      py_0    conda-forge\r\njpeg                      9b                   hb83a4c4_2\r\njupyter_client            5.3.3                    py37_1\r\njupyter_core              4.5.0                      py_0\r\nkiwisolver                1.1.0            py37ha925a31_0\r\nlibpng                    1.6.37               h2a8f88b_0\r\nlibsodium                 1.0.16               h9d3ae62_0\r\nmatplotlib                3.1.1            py37hc8f65d3_0\r\nmkl                       2019.4                      245\r\nmkl-service               2.3.0            py37hb782905_0\r\nmkl_fft                   1.0.14           py37h14836fe_0\r\nmkl_random                1.1.0            py37h675688f_0\r\nnumpy                     1.16.5           py37h19fb1c0_0\r\nnumpy-base                1.16.5           py37hc3f5095_0\r\nopenssl                   1.1.1c               hfa6e2cd_0    conda-forge\r\noscrypto                  0.19.1                   pypi_0    pypi\r\npandas                    0.25.1           py37ha925a31_0\r\nparso                     0.5.1                      py_0\r\npatsy                     0.5.1                    py37_0\r\npickleshare               0.7.5                    py37_0\r\npip                       19.2.3                   py37_0\r\nprompt_toolkit            2.0.9                    py37_0\r\npyarrow                   0.14.0                   pypi_0    pypi\r\npycparser                 2.19                     pypi_0    pypi\r\npycryptodomex             3.9.0                    pypi_0    pypi\r\npygments                  2.4.2                      py_0\r\npyjwt                     1.7.1                    pypi_0    pypi\r\npyopenssl                 19.0.0                   pypi_0    pypi\r\npyparsing                 2.4.2                      py_0\r\npyqt                      5.9.2            py37h6538335_2\r\npysocks                   1.7.1                    py37_0    conda-forge\r\npython                    3.7.4                h5263a28_0\r\npython-dateutil           2.8.0                    py37_0\r\npytz                      2019.2                     py_0\r\npywin32                   223              py37hfa6e2cd_1\r\npyzmq                     18.1.0           py37ha925a31_0\r\nqt                        5.9.7            vc14h73c81de_0\r\nrequests                  2.22.0                   pypi_0    pypi\r\ns3transfer                0.2.1                    py37_0    conda-forge\r\nscipy                     1.3.1            py37h29ff71c_0\r\nseaborn                   0.9.0                    py37_0\r\nsetuptools                41.2.0                   py37_0\r\nsip                       4.19.8           py37h6538335_0\r\nsix                       1.12.0                   py37_0\r\nsnowflake-connector-python 2.0.0                    pypi_0    pypi\r\nsnowflake-sqlalchemy      1.1.15                   pypi_0    pypi\r\nsqlalchemy                1.3.8            py37hfa6e2cd_0    conda-forge\r\nsqlite                    3.29.0               he774522_0\r\nstatsmodels               0.10.1           py37h8c2d366_0\r\ntornado                   6.0.3            py37he774522_0\r\ntraitlets                 4.3.2                    py37_0\r\nurllib3                   1.25.6                   py37_0    conda-forge\r\nvc                        14.1                 h0510ff6_4\r\nvs2015_runtime            14.16.27012          hf0eaf9b_0\r\nwcwidth                   0.1.7                    py37_0\r\nwheel                     0.33.6                   py37_0\r\nwin_inet_pton             1.1.0                    py37_0    conda-forge\r\nwincertstore              0.2                      py37_0\r\nzeromq                    4.3.1                h33f27b4_3\r\nzlib                      1.2.11               h62dcd97_3\r\n```\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\n```\r\nfrom sqlalchemy import create_engine\r\nfrom snowflake.sqlalchemy import URL\r\nimport pandas as pd\r\nimport snowflake.connector\r\n\r\nctx = snowflake.connector.connect(\r\n    user='<your_user_name>',\r\n    password='<your_password>',\r\n    account='<your_account_name>'\r\n    )\r\n```\r\n\r\nI also tried\r\n\r\n```\r\nfrom sqlalchemy import create_engine\r\n\r\nengine = create_engine(\r\n    'snowflake://{user}:{password}@{account}/'.format(\r\n        user='<your_user_login_name>',\r\n        password='<your_password>',\r\n        account='<your_account_name>',\r\n    )\r\n)\r\ntry:\r\n    connection = engine.connect()\r\n    results = connection.execute('select current_version()').fetchone()\r\n    print(results[0])\r\nfinally:\r\n    connection.close()\r\n    engine.dispose()\r\n```\r\n\r\n5. What did you expect to see?\r\nI expected to see the snowflake version.\r\n\r\n6. What did you see instead?\r\n```\r\n---------------------------------------------------------------------------\r\nAPIException                              Traceback (most recent call last)\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py in validate_by_direct_connection(self, issuer, subject, telemetry_data, hostname, do_retry)\r\n   1130             try:\r\n-> 1131                 self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n   1132                 err = None\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py in process_ocsp_response(self, issuer, cert_id, ocsp_response)\r\n    279             ocsp_cert,\r\n--> 280             tbs_response_data)\r\n    281 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py in verify_signature(self, signature_algorithm, signature, cert, data)\r\n    315     def verify_signature(self, signature_algorithm, signature, cert, data):\r\n--> 316         pubkey = cert.public_key.unwrap().dump()\r\n    317         rsakey = RSA.importKey(pubkey)\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py in unwrap(self)\r\n   1064         raise APIException(\r\n-> 1065             'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\n   1066             'please use oscrypto.asymmetric.PublicKey().unwrap() instead')\r\n\r\nAPIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nAttributeError                            Traceback (most recent call last)\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py in _request_exec(self, session, method, full_url, headers, data, token, catch_okta_unauthorized_error, is_raw_text, is_raw_binary, binary_data_handler, socket_timeout)\r\n    789                 stream=is_raw_binary,\r\n--> 790                 auth=SnowflakeAuth(token),\r\n    791             )\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\r\n    464         send_kwargs.update(settings)\r\n--> 465         resp = self.send(prep, **send_kwargs)\r\n    466 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py in send(self, request, **kwargs)\r\n    572         # Send the request\r\n--> 573         r = adapter.send(request, **kwargs)\r\n    574 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\r\n    369                     retries=self.max_retries,\r\n--> 370                     timeout=timeout\r\n    371                 )\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, **response_kw)\r\n    543                                                   timeout=timeout_obj,\r\n--> 544                                                   body=body, headers=headers)\r\n    545 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py in _make_request(self, conn, method, url, timeout, **httplib_request_kw)\r\n    340         try:\r\n--> 341             self._validate_conn(conn)\r\n    342         except (SocketTimeout, BaseSSLError) as e:\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py in _validate_conn(self, conn)\r\n    760         if not getattr(conn, 'sock', None):  # AppEngine might not have  `.sock`\r\n--> 761             conn.connect()\r\n    762 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py in connect(self)\r\n    237                                     server_hostname=hostname,\r\n--> 238                                     ssl_version=resolved_ssl_version)\r\n    239 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py in ssl_wrap_socket_with_ocsp(sock, keyfile, certfile, cert_reqs, ca_certs, server_hostname, ssl_version)\r\n    394             use_fail_open=FEATURE_OCSP_MODE == OCSPMode.FAIL_OPEN\r\n--> 395         ).validate(server_hostname, ret.connection)\r\n    396         if not v:\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py in validate(self, hostname, connection, no_exception)\r\n    995 \r\n--> 996         return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n    997 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py in _validate(self, hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n   1001         results = self._validate_certificates_sequential(\r\n-> 1002             cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n   1003 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py in _validate_certificates_sequential(self, cert_data, telemetry_data, hostname, do_retry)\r\n   1183             r = self.validate_by_direct_connection(\r\n-> 1184                 issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n   1185             results.append(r)\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py in validate_by_direct_connection(self, issuer, subject, telemetry_data, hostname, do_retry)\r\n   1152             telemetry_data.set_error_msg(str(ex))\r\n-> 1153             err = self.verify_fail_open(ex, telemetry_data)\r\n   1154             SnowflakeOCSP.OCSP_CACHE.delete_cache(self, cert_id)\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py in verify_fail_open(self, ex_obj, telemetry_data)\r\n   1165         else:\r\n-> 1166             if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\n   1167                 logger.debug(telemetry_data.generate_telemetry_data(\"RevokedCertificateError\", True))\r\n\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nRetryRequest                              Traceback (most recent call last)\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py in _request_exec_wrapper(self, session, method, full_url, headers, data, retry_ctx, no_retry, token, **kwargs)\r\n    639                 token=token,\r\n--> 640                 **kwargs)\r\n    641             if return_object is not None:\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py in _request_exec(self, session, method, full_url, headers, data, token, catch_okta_unauthorized_error, is_raw_text, is_raw_binary, binary_data_handler, socket_timeout)\r\n    882                 exc_info=True)\r\n--> 883             raise RetryRequest(err)\r\n    884         except Exception as err:\r\n\r\nRetryRequest: 'APIException' object has no attribute 'errno'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nOperationalError                          Traceback (most recent call last)\r\n<ipython-input-14-1e172c53a212> in <module>\r\n      4     user=sf_credentials[\"user\"],\r\n      5     password=sf_credentials[\"password\"],\r\n----> 6     role=sf_credentials[\"role\"]\r\n      7 )\r\n      8 cs = ctx.cursor()\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\__init__.py in Connect(**kwargs)\r\n     31 \r\n     32 def Connect(**kwargs):\r\n---> 33     return SnowflakeConnection(**kwargs)\r\n     34 \r\n     35 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\connection.py in __init__(self, **kwargs)\r\n    185 \r\n    186         self.converter = None\r\n--> 187         self.connect(**kwargs)\r\n    188         self._telemetry = TelemetryClient(self._rest)\r\n    189         self.telemetry_enabled = False\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\connection.py in connect(self, **kwargs)\r\n    482 \r\n    483         self.__set_error_attributes()\r\n--> 484         self.__open_connection()\r\n    485 \r\n    486     def close(self):\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\connection.py in __open_connection(self)\r\n    698         if not auth.read_temporary_credential(\r\n    699                 self.account, self.user, self._session_parameters):\r\n--> 700             self.__authenticate(auth_instance)\r\n    701         else:\r\n    702             # set the current objects as the session is derived from the id\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\connection.py in __authenticate(self, auth_instance)\r\n    929             mfa_callback=self._mfa_callback,\r\n    930             password_callback=self._password_callback,\r\n--> 931             session_parameters=self._session_parameters,\r\n    932         )\r\n    933 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\auth.py in authenticate(self, auth_instance, account, user, database, schema, warehouse, role, passcode, passcode_in_password, mfa_callback, password_callback, session_parameters, timeout)\r\n    195                 url, headers, json.dumps(body),\r\n    196                 timeout=self._rest._connection.login_timeout,\r\n--> 197                 socket_timeout=self._rest._connection.login_timeout)\r\n    198         except ForbiddenError as err:\r\n    199             # HTTP 403\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py in _post_request(self, url, headers, body, token, timeout, _no_results, no_retry, socket_timeout, _include_retry_params)\r\n    519                          timeout=timeout, token=token,\r\n    520                          no_retry=no_retry, socket_timeout=socket_timeout,\r\n--> 521                          _include_retry_params=_include_retry_params)\r\n    522         logger.debug(\r\n    523             u'ret[code] = {code}, after post request'.format(\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py in fetch(self, method, full_url, headers, data, timeout, **kwargs)\r\n    598                 ret = self._request_exec_wrapper(\r\n    599                     session, method, full_url, headers, data, retry_ctx,\r\n--> 600                     **kwargs)\r\n    601                 if ret is not None:\r\n    602                     return ret\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py in _request_exec_wrapper(self, session, method, full_url, headers, data, retry_ctx, no_retry, token, **kwargs)\r\n    681                     else:\r\n    682                         self.handle_invalid_certificate_error(\r\n--> 683                             conn, full_url, cause)\r\n    684                     return {}  # required for tests\r\n    685             sleeping_time = retry_ctx.next_sleep()\r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py in handle_invalid_certificate_error(self, conn, full_url, cause)\r\n    711                 u'msg': u'Failed to execute request: {0}'.format(\r\n    712                     cause),\r\n--> 713                 u'errno': ER_FAILED_TO_REQUEST,\r\n    714             })\r\n    715 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\errors.py in errorhandler_wrapper(connection, cursor, errorclass, errorvalue)\r\n     98             return\r\n     99         elif connection is not None:\r\n--> 100             connection.errorhandler(connection, cursor, errorclass, errorvalue)\r\n    101             return\r\n    102 \r\n\r\n~\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\errors.py in default_errorhandler(connection, cursor, errorclass, errorvalue)\r\n     71             sqlstate=errorvalue.get(u'sqlstate'),\r\n     72             sfqid=errorvalue.get(u'sfqid'),\r\n---> 73             done_format_msg=errorvalue.get(u'done_format_msg'))\r\n     74 \r\n     75     @staticmethod\r\n\r\nOperationalError: 250003: Failed to execute request: 'APIException' object has no attribute 'errno'\r\n```\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\n2019-10-03 14:40:48,273 - MainThread connection.py:178 - __init__() - INFO - Snowflake Connector for Python Version: 2.0.0, Python Version: 3.7.4, Platform: Windows-10-10.0.18362-SP0\r\n2019-10-03 14:40:48,275 - MainThread connection.py:478 - connect() - DEBUG - connect\r\n2019-10-03 14:40:48,275 - MainThread connection.py:715 - __config() - DEBUG - __config\r\n2019-10-03 14:40:48,276 - MainThread connection.py:790 - __config() - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.\r\n2019-10-03 14:40:48,277 - MainThread converter.py:140 - __init__() - DEBUG - use_numpy: False\r\n2019-10-03 14:40:48,278 - MainThread converter_issue23517.py:27 - __init__() - DEBUG - initialized\r\n2019-10-03 14:40:48,279 - MainThread connection.py:641 - __open_connection() - DEBUG - REST API object was created: datalytyx.east-us-2.azure.snowflakecomputing.com:443\r\n2019-10-03 14:40:48,279 - MainThread auth.py:129 - authenticate() - DEBUG - authenticate\r\n2019-10-03 14:40:48,280 - MainThread auth.py:153 - authenticate() - DEBUG - assertion content: *********\r\n2019-10-03 14:40:48,281 - MainThread auth.py:165 - authenticate() - DEBUG - account=datalytyx, user=WILLHOLTAM, database=None, schema=None, warehouse=None, role=DATABRICKS, request_id=694f6a53-445a-4d86-8bac-f4e3a57164d8\r\n2019-10-03 14:40:48,282 - MainThread auth.py:191 - authenticate() - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '2.0.0', 'SVN_REVISION': None, 'ACCOUNT_NAME': 'datalytyx', 'LOGIN_NAME': 'WILLHOLTAM', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'PythonConnector', 'OS': 'Windows', 'OS_VERSION': 'Windows-10-10.0.18362-SP0', 'PYTHON_VERSION': '3.7.4', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'MSC v.1915 64 bit (AMD64)', 'OCSP_MODE': 'FAIL_OPEN'}, 'SESSION_PARAMETERS': {'CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY': 900, 'CLIENT_PREFETCH_THREADS': 4}}\r\n2019-10-03 14:40:48,283 - MainThread retry.py:155 - from_int() - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None)\r\n2019-10-03 14:40:48,283 - MainThread retry.py:155 - from_int() - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None)\r\n2019-10-03 14:40:48,285 - MainThread network.py:928 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-10-03 14:40:48,286 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 120, retry cnt: 1\r\n2019-10-03 14:40:48,287 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:40:48,290 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (1): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:49,246 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:40:49,247 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:49,248 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:40:49,248 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:40:49,249 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:40:49,250 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:40:49,251 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:49,252 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:49,253 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:40:49,255 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:49,257 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:49,258 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:49,260 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:49,262 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:49,264 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:49,265 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:40:49,267 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:40:49,268 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:40:49,270 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:40:49,271 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:40:49,273 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=1, sleeping=2(s)\r\n2019-10-03 14:40:51,273 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 118, retry cnt: 2\r\n2019-10-03 14:40:51,274 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:40:51,275 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (2): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:51,573 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:40:51,574 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:51,574 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:40:51,575 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:40:51,575 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:40:51,576 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:40:51,577 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:51,577 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:51,579 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:40:51,581 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:51,585 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:51,587 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:51,589 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:51,590 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:51,592 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:51,593 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:40:51,594 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:40:51,595 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:40:51,595 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:40:51,596 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:40:51,600 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=2, sleeping=2(s)\r\n2019-10-03 14:40:53,601 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 116, retry cnt: 3\r\n2019-10-03 14:40:53,602 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:40:53,605 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (3): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:53,906 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:40:53,906 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:53,907 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:40:53,907 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:40:53,909 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:40:53,910 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:40:53,910 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:53,911 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:53,913 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:40:53,915 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:53,916 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:53,921 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:53,923 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:53,924 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:53,926 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:53,928 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:40:53,929 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:40:53,930 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:40:53,930 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:40:53,931 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:40:53,934 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=3, sleeping=1(s)\r\n2019-10-03 14:40:54,936 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 115, retry cnt: 4\r\n2019-10-03 14:40:54,936 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:40:54,939 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (4): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:55,234 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:40:55,235 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:55,236 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:40:55,238 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:40:55,239 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:40:55,239 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:40:55,240 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:55,241 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:55,243 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:40:55,246 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:55,248 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:55,251 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:55,254 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:55,257 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:55,259 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:55,260 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:40:55,261 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:40:55,262 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:40:55,263 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:40:55,265 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:40:55,268 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=4, sleeping=3(s)\r\n2019-10-03 14:40:58,269 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 112, retry cnt: 5\r\n2019-10-03 14:40:58,269 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:40:58,271 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (5): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:58,574 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:40:58,576 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:58,576 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:40:58,577 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:40:58,578 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:40:58,579 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:40:58,580 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:40:58,581 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:40:58,582 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:40:58,585 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:58,587 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:58,588 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:40:58,590 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:58,592 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:40:58,593 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:40:58,595 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:40:58,596 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:40:58,596 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:40:58,597 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:40:58,597 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:40:58,601 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=5, sleeping=7(s)\r\n2019-10-03 14:41:05,602 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 105, retry cnt: 6\r\n2019-10-03 14:41:05,604 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:41:05,607 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (6): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:05,911 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:41:05,912 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:05,912 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:41:05,913 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:41:05,913 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:41:05,914 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:41:05,914 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:05,916 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:05,918 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:41:05,923 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:05,924 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:05,925 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:05,927 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:05,928 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:05,929 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:05,931 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:41:05,933 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:41:05,934 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:41:05,934 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:41:05,935 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:41:05,937 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=6, sleeping=8(s)\r\n2019-10-03 14:41:13,938 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 97, retry cnt: 7\r\n2019-10-03 14:41:13,940 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:41:13,943 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (7): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:14,247 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:41:14,247 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:14,248 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:41:14,248 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:41:14,249 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:41:14,249 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:41:14,250 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:14,250 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:14,252 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:41:14,254 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:14,257 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:14,259 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:14,261 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:14,263 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:14,264 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:14,266 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:41:14,266 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:41:14,267 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:41:14,267 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:41:14,268 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:41:14,271 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=7, sleeping=10(s)\r\n2019-10-03 14:41:24,271 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 87, retry cnt: 8\r\n2019-10-03 14:41:24,273 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:41:24,277 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (8): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:24,583 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:41:24,584 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:24,585 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:41:24,586 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:41:24,587 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:41:24,587 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:41:24,588 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:24,589 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:24,591 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:41:24,593 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:24,595 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:24,599 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:24,601 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:24,603 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:24,604 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:24,606 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:41:24,607 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:41:24,607 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:41:24,608 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:41:24,608 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:41:24,611 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=8, sleeping=16(s)\r\n2019-10-03 14:41:40,611 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 71, retry cnt: 9\r\n2019-10-03 14:41:40,612 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:41:40,614 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (9): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:40,918 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:41:40,920 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:40,921 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:41:40,921 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:41:40,922 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:41:40,923 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:41:40,923 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:40,924 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:40,927 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:41:40,929 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:40,931 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:40,933 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:40,935 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:40,937 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:40,939 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:40,941 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:41:40,942 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:41:40,942 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:41:40,943 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:41:40,944 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:41:40,947 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=9, sleeping=16(s)\r\n2019-10-03 14:41:56,947 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 55, retry cnt: 10\r\n2019-10-03 14:41:56,948 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:41:56,951 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (10): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:57,248 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:41:57,249 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:57,250 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:41:57,251 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:41:57,252 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:41:57,254 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:41:57,254 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:41:57,260 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:41:57,262 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:41:57,264 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:57,267 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:57,271 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:41:57,274 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:57,277 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:41:57,280 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:41:57,282 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:41:57,284 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:41:57,284 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:41:57,285 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:41:57,286 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:41:57,289 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=10, sleeping=7(s)\r\n2019-10-03 14:42:04,291 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 48, retry cnt: 11\r\n2019-10-03 14:42:04,292 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:42:04,294 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (11): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:42:04,590 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:42:04,590 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:42:04,591 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:42:04,592 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:42:04,592 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:42:04,593 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:42:04,595 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:42:04,596 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:42:04,597 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:42:04,600 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:42:04,608 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:42:04,611 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:42:04,613 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:42:04,616 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:42:04,619 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:42:04,622 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:42:04,624 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:42:04,624 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:42:04,625 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:42:04,626 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:42:04,632 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=11, sleeping=16(s)\r\n2019-10-03 14:42:20,634 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 32, retry cnt: 12\r\n2019-10-03 14:42:20,634 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:42:20,636 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (12): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:42:20,942 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:42:20,942 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:42:20,943 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:42:20,943 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:42:20,944 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:42:20,944 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:42:20,945 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:42:20,947 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:42:20,948 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:42:20,950 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:42:20,951 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:42:20,955 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:42:20,956 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:42:20,959 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:42:20,960 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:42:20,963 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:42:20,964 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:42:20,965 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:42:20,965 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:42:20,966 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:42:20,969 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=12, sleeping=16(s)\r\n2019-10-03 14:42:36,970 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 16, retry cnt: 13\r\n2019-10-03 14:42:36,971 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:42:36,973 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (13): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:42:37,275 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:42:37,276 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:42:37,277 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:42:37,277 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:42:37,278 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:42:37,279 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:42:37,279 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:42:37,280 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:42:37,282 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:42:37,283 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:42:37,284 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:42:37,286 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:42:37,289 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:42:37,292 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:42:37,293 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:42:37,295 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:42:37,296 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:42:37,297 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:42:37,297 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:42:37,298 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:42:37,301 - MainThread network.py:694 - _request_exec_wrapper() - DEBUG - retrying: errorclass=<class 'AttributeError'>, error='APIException' object has no attribute 'errno', counter=13, sleeping=16(s)\r\n2019-10-03 14:42:53,301 - MainThread network.py:627 - _request_exec_wrapper() - DEBUG - remaining request timeout: 0, retry cnt: 14\r\n2019-10-03 14:42:53,303 - MainThread network.py:766 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-10-03 14:42:53,305 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (14): datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:42:53,638 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-10-03 14:42:53,638 - MainThread ocsp_snowflake.py:422 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file://C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:42:53,639 - MainThread ocsp_snowflake.py:424 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 69\r\n2019-10-03 14:42:53,639 - MainThread ocsp_snowflake.py:218 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-10-03 14:42:53,641 - MainThread ocsp_snowflake.py:252 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-10-03 14:42:53,642 - MainThread ocsp_snowflake.py:568 - check_ocsp_response_cache_lock_dir() - DEBUG - Failed to check OCSP response cache file. No worry. It will validate with OCSP server: file: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json, lock directory: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json.lck, error: [WinError 2] The system cannot find the file specified: 'C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json'\r\n2019-10-03 14:42:53,643 - MainThread ocsp_snowflake.py:465 - read_ocsp_response_cache_file() - DEBUG - Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/WilliamHoltam/AppData/Local/Snowflake/Caches/ocsp_response_cache.json\r\n2019-10-03 14:42:53,644 - MainThread ocsp_snowflake.py:972 - validate() - DEBUG - validating certificate: datalytyx.east-us-2.azure.snowflakecomputing.com\r\n2019-10-03 14:42:53,645 - MainThread ocsp_asn1crypto.py:340 - extract_certificate_chain() - DEBUG - # of certificates: 2\r\n2019-10-03 14:42:53,647 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:42:53,649 - MainThread ocsp_asn1crypto.py:347 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:42:53,650 - MainThread ocsp_asn1crypto.py:369 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('organizational_unit_name', 'www.digicert.com'), ('common_name', 'DigiCert Global Root CA')])\r\n2019-10-03 14:42:53,653 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:42:53,656 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'DigiCert Inc'), ('common_name', 'DigiCert SHA2 Secure Server CA')])\r\n2019-10-03 14:42:53,658 - MainThread ocsp_snowflake.py:588 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'California'), ('locality_name', 'San Mateo'), ('organization_name', 'Snowflake Computing, Inc.'), ('organizational_unit_name', 'Snowflake Computing'), ('common_name', '*.east-us-2.azure.snowflakecomputing.com')])\r\n2019-10-03 14:42:53,659 - MainThread ocsp_snowflake.py:1124 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-10-03 14:42:53,660 - MainThread ocsp_asn1crypto.py:269 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-10-03 14:42:53,661 - MainThread ocsp_asn1crypto.py:275 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-10-03 14:42:53,661 - MainThread ocsp_snowflake.py:1151 - validate_by_direct_connection() - DEBUG - OCSP Validation failed asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n2019-10-03 14:42:53,662 - MainThread network.py:882 - _request_exec() - DEBUG - Hit retryable client error. Retrying... Ignore the following error stack: 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:42:53,664 - MainThread network.py:666 - _request_exec_wrapper() - ERROR - 'APIException' object has no attribute 'errno'\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1131, in validate_by_direct_connection\r\n    self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 280, in process_ocsp_response\r\n    tbs_response_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_asn1crypto.py\", line 316, in verify_signature\r\n    pubkey = cert.public_key.unwrap().dump()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\asn1crypto\\keys.py\", line 1065, in unwrap\r\n    'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nasn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 790, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\botocore\\vendored\\requests\\packages\\urllib3\\connection.py\", line 238, in connect\r\n    ssl_version=resolved_ssl_version)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ssl_wrap_socket.py\", line 395, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 996, in validate\r\n    return self._validate(hostname, cert_data, telemetry_data, do_retry, no_exception)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1002, in _validate\r\n    cert_data, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1184, in _validate_certificates_sequential\r\n    issuer, subject, telemetry_data, hostname, do_retry=do_retry)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1153, in validate_by_direct_connection\r\n    err = self.verify_fail_open(ex, telemetry_data)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\ocsp_snowflake.py\", line 1166, in verify_fail_open\r\n    if ex_obj.errno is ER_SERVER_CERTIFICATE_REVOKED:\r\nAttributeError: 'APIException' object has no attribute 'errno'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 640, in _request_exec_wrapper\r\n    **kwargs)\r\n  File \"C:\\Users\\WilliamHoltam\\Miniconda3\\envs\\palladium\\lib\\site-packages\\snowflake\\connector\\network.py\", line 883, in _request_exec\r\n    raise RetryRequest(err)\r\nsnowflake.connector.network.RetryRequest: 'APIException' object has no attribute 'errno'\r\n2019-10-03 14:42:53,668 - MainThread network.py:941 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/118", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/118/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/118/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/118", "id": 495297933, "node_id": "MDU6SXNzdWU0OTUyOTc5MzM=", "number": 118, "title": "Comments not created when creating new table", "user": {"login": "villebro", "id": 33317356, "node_id": "MDQ6VXNlcjMzMzE3MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/33317356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villebro", "html_url": "https://github.com/villebro", "followers_url": "https://api.github.com/users/villebro/followers", "following_url": "https://api.github.com/users/villebro/following{/other_user}", "gists_url": "https://api.github.com/users/villebro/gists{/gist_id}", "starred_url": "https://api.github.com/users/villebro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villebro/subscriptions", "organizations_url": "https://api.github.com/users/villebro/orgs", "repos_url": "https://api.github.com/users/villebro/repos", "events_url": "https://api.github.com/users/villebro/events{/privacy}", "received_events_url": "https://api.github.com/users/villebro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913928, "node_id": "MDU6TGFiZWwzOTQ5MTM5Mjg=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/18", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/18", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/18/labels", "id": 4871159, "node_id": "MDk6TWlsZXN0b25lNDg3MTE1OQ==", "number": 18, "title": "v1.1.17", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 2, "state": "open", "created_at": "2019-11-22T22:53:02Z", "updated_at": "2019-12-03T03:22:09Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2019-09-18T15:25:17Z", "updated_at": "2019-12-03T03:21:44Z", "closed_at": "2019-12-03T03:21:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n`3.7.4`\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n`Darwin-18.7.0-x86_64-i386-64bit`\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\n$ pip list\r\nPackage                    Version   Location                \r\n-------------------------- --------- ------------------------\r\nasn1crypto                 0.24.0    \r\nazure-common               1.1.23    \r\nazure-storage-blob         2.1.0     \r\nazure-storage-common       2.1.0     \r\nboto3                      1.9.230   \r\nbotocore                   1.12.230  \r\ncertifi                    2019.9.11 \r\ncffi                       1.12.3    \r\nchardet                    3.0.4     \r\nClick                      7.0       \r\ncryptography               2.7       \r\ndocutils                   0.15.2    \r\nfuture                     0.17.1    \r\nidna                       2.8       \r\nijson                      2.4       \r\njmespath                   0.9.4     \r\nnumpy                      1.17.2    \r\npandas                     0.25.1    \r\npip                        19.2.3    \r\npip-tools                  4.1.0     \r\npycparser                  2.19      \r\npycryptodomex              3.9.0     \r\nPyJWT                      1.7.1     \r\npyOpenSSL                  19.0.0    \r\npython-dateutil            2.8.0     \r\npytz                       2019.2    \r\nrequests                   2.22.0    \r\ns3transfer                 0.2.1     \r\nsetuptools                 41.2.0    \r\nsix                        1.12.0    \r\nsnowflake-connector-python 1.9.0     \r\nsnowflake-sqlalchemy       1.1.14    \r\nSQLAlchemy                 1.3.8     \r\nSQLAlchemy-Utils           0.34.2    \r\nsqltask                    0.0.2     /Users/ville/dev/sqltask\r\nurllib3                    1.25.3    \r\nwheel                      0.33.6 \r\n```\r\n4. What did you do?\r\n\r\nWhen defining a column (e.g. `Column(\"tstamp\", DateTime, comment=\"Timestamp when row was created\")`) and adding it to a table which is later generated using `metadata.create_all(tables=[table])`, both table and column comments are unavailable (`NotImplementedException` for `inspector.get_table_comment(table_name)` and `None` when inspecting the created table with `inspector.get_columns(table_name)`).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/117", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/117/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/117/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/117", "id": 494770433, "node_id": "MDU6SXNzdWU0OTQ3NzA0MzM=", "number": 117, "title": "Cannot insert to tables with auto-incrementing primary keys", "user": {"login": "necaris", "id": 460769, "node_id": "MDQ6VXNlcjQ2MDc2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/460769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/necaris", "html_url": "https://github.com/necaris", "followers_url": "https://api.github.com/users/necaris/followers", "following_url": "https://api.github.com/users/necaris/following{/other_user}", "gists_url": "https://api.github.com/users/necaris/gists{/gist_id}", "starred_url": "https://api.github.com/users/necaris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/necaris/subscriptions", "organizations_url": "https://api.github.com/users/necaris/orgs", "repos_url": "https://api.github.com/users/necaris/repos", "events_url": "https://api.github.com/users/necaris/events{/privacy}", "received_events_url": "https://api.github.com/users/necaris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-17T18:03:01Z", "updated_at": "2019-10-14T10:21:25Z", "closed_at": "2019-10-09T22:03:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a table has an auto-incrementing primary key, attempting to call `.insert()` without supplying a value for the auto-incrementing field unexpectedly fails. \r\n\r\nIt looks like this could be solved by having `SnowflakeExecutionContext` implement `get_insert_default()`, as `PGExecutionContext` does: https://github.com/zzzeek/sqlalchemy/blob/3980a9a455d08c5073cabc3c2b77de46fa36d7b4/lib/sqlalchemy/dialects/postgresql/base.py#L2292\r\n\r\nFull answers to questions, and reproducing program, below...\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n  - `Python 3.7.3`\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n  - `Darwin-18.7.0-x86_64-i386-64bit`\r\n3. What are the component versions in the environment (`pip list`)? \r\n  - `snowflake-connector-python 1.8.2       \r\nsnowflake-sqlalchemy       1.1.13`\r\n4. What did you do?\r\n  - complete program below:\r\n```python\r\nimport os\r\nimport logging\r\n\r\nimport sqlalchemy as sa\r\n\r\n# Set loggers to DEBUG as requested by Snowflake when reproducing issue\r\nfor logger_name in ['snowflake.sqlalchemy', 'snowflake.connector', 'botocore']:\r\n    logger = logging.getLogger(logger_name)\r\n    logger.setLevel(logging.DEBUG)\r\n    ch = logging.StreamHandler()\r\n    ch.setLevel(logging.DEBUG)\r\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\r\n    logger.addHandler(ch)\r\n\r\n# reproduce the error\r\nenv = os.environ\r\nengine = sa.create_engine(f\"snowflake://{env['SNOWFLAKE_USERNAME']}:{env['SNOWFLAKE_PASSWORD']}@{env['SNOWFLAKE_ACCOUNT']}/{env['SNOWFLAKE_DATABASE']}?role={env['SNOWFLAKE_ROLE']}\")\r\nmetadata = sa.MetaData(bind=engine, schema=env.get('SNOWFLAKE_SCHEMA', None))\r\ntable = sa.Table(\r\n        env['SNOWFLAKE_TABLE'],\r\n        metadata,\r\n        sa.Column(\"id\", sa.Integer, primary_key=True, autoincrement=True),\r\n        sa.Column(\"foo\", sa.String),\r\n        extend_existing=True,\r\n    )\r\nmetadata.create_all()\r\n\r\ntry:\r\n    table.insert().values(foo='bar').execute()\r\n    print(\"Happy days!\")\r\nfinally:\r\n    engine.dispose()\r\n```\r\n5. What did you expect to see?\r\n  - Nothing -- the script should complete and exit successfully\r\n\r\n6. What did you see instead?\r\n  - `sqlalchemy.exc.ProgrammingError: (snowflake.connector.errors.ProgrammingError) 100072 (22000): 018ef388-0324-4ff6-0000-14792512efca: NULL result in a non-nullable column\r\n[SQL: INSERT INTO sandbox.see_the_bug (id, foo) VALUES (%(id)s, %(foo)s)]\r\n[parameters: {'id': None, 'foo': 'bar'}]\r\n(Background on this error at: http://sqlalche.me/e/f405)`\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\n2019-09-17 13:19:09,306 - MainThread ssl_wrap_socket.py:86 - inject_into_urllib3() - DEBUG - Injecting ssl_wrap_socket_with_ocsp\r\n2019-09-17 13:19:09,314 - MainThread auth.py:66 - <module>() - DEBUG - cache directory: /Users/ramichowdhury/Library/Caches/Snowflake\r\n2019-09-17 13:19:09,490 - MainThread connection.py:171 - __init__() - INFO - Snowflake Connector for Python Version: 1.8.2, Python Version: 3.7.3, Platform: Darwin-18.7.0-x86_64-i386-64bit\r\n2019-09-17 13:19:09,490 - MainThread connection.py:471 - connect() - DEBUG - connect\r\n2019-09-17 13:19:09,490 - MainThread connection.py:711 - __config() - DEBUG - __config\r\n2019-09-17 13:19:09,490 - MainThread connection.py:787 - __config() - INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.\r\n2019-09-17 13:19:09,490 - MainThread converter.py:167 - __init__() - DEBUG - use_numpy: False\r\n2019-09-17 13:19:09,490 - MainThread connection.py:622 - __open_connection() - DEBUG - REST API object was created: *******.snowflakecomputing.com:443\r\n2019-09-17 13:19:09,490 - MainThread auth.py:160 - authenticate() - DEBUG - authenticate\r\n2019-09-17 13:19:09,491 - MainThread auth.py:184 - authenticate() - DEBUG - assertion content: *********\r\n2019-09-17 13:19:09,491 - MainThread auth.py:196 - authenticate() - DEBUG - account=******, user=********, database=********, schema=None, warehouse=None, role=********, request_id=bd6c7ac9-1b56-41bc-a2a3-656dce739866\r\n2019-09-17 13:19:09,491 - MainThread auth.py:222 - authenticate() - DEBUG - body['data']: {'CLIENT_APP_ID': 'PythonConnector', 'CLIENT_APP_VERSION': '1.8.2', 'SVN_REVISION': None, 'ACCOUNT_NAME': '********', 'LOGIN_NAME': '********', 'CLIENT_ENVIRONMENT': {'APPLICATION': 'PythonConnector', 'OS': 'Darwin', 'OS_VERSION': 'Darwin-18.7.0-x86_64-i386-64bit', 'PYTHON_VERSION': '3.7.3', 'PYTHON_RUNTIME': 'CPython', 'PYTHON_COMPILER': 'Clang 4.0.1 (tags/RELEASE_401/final)', 'OCSP_MODE': 'FAIL_OPEN'}, 'SESSION_PARAMETERS': {'AUTOCOMMIT': False, 'CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY': 900, 'CLIENT_PREFETCH_THREADS': 4}}\r\n2019-09-17 13:19:09,491 - MainThread retry.py:155 - from_int() - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None)\r\n2019-09-17 13:19:09,491 - MainThread retry.py:155 - from_int() - DEBUG - Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None)\r\n2019-09-17 13:19:09,491 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:09,491 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: 120, retry cnt: 1\r\n2019-09-17 13:19:09,491 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:09,513 - MainThread connectionpool.py:735 - _new_conn() - INFO - Starting new HTTPS connection (1): ******.snowflakecomputing.com\r\n2019-09-17 13:19:09,822 - MainThread ocsp_snowflake.py:357 - OCSPCache() - DEBUG - cache directory: /Users/ramichowdhury/Library/Caches/Snowflake\r\n2019-09-17 13:19:09,823 - MainThread ssl_wrap_socket.py:390 - ssl_wrap_socket_with_ocsp() - DEBUG - OCSP Mode: FAIL_OPEN, OCSP response cache file name: None\r\n2019-09-17 13:19:09,823 - MainThread ocsp_snowflake.py:379 - reset_ocsp_response_cache_uri() - DEBUG - ocsp_response_cache_uri: file:///Users/ramichowdhury/Library/Caches/Snowflake/ocsp_response_cache.json\r\n2019-09-17 13:19:09,823 - MainThread ocsp_snowflake.py:381 - reset_ocsp_response_cache_uri() - DEBUG - OCSP_VALIDATION_CACHE size: 0\r\n2019-09-17 13:19:09,823 - MainThread ocsp_snowflake.py:206 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json\r\n2019-09-17 13:19:09,823 - MainThread ocsp_snowflake.py:240 - reset_ocsp_dynamic_cache_server_url() - DEBUG - OCSP dynamic cache server RETRY URL: None\r\n2019-09-17 13:19:09,825 - MainThread ocsp_snowflake.py:417 - read_ocsp_response_cache_file() - DEBUG - Read OCSP response cache file: /Users/ramichowdhury/Library/Caches/Snowflake/ocsp_response_cache.json, count=53\r\n2019-09-17 13:19:09,825 - MainThread ocsp_snowflake.py:894 - validate() - DEBUG - validating certificate: ******.snowflakecomputing.com\r\n2019-09-17 13:19:09,825 - MainThread ocsp_asn1crypto.py:278 - extract_certificate_chain() - DEBUG - # of certificates: 4\r\n2019-09-17 13:19:09,826 - MainThread ocsp_asn1crypto.py:285 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('common_name', '*.snowflakecomputing.com')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('organizational_unit_name', 'Server CA 1B'), ('common_name', 'Amazon')])\r\n2019-09-17 13:19:09,842 - MainThread ocsp_asn1crypto.py:285 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('organizational_unit_name', 'Server CA 1B'), ('common_name', 'Amazon')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])\r\n2019-09-17 13:19:09,842 - MainThread ocsp_asn1crypto.py:285 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')]), issuer: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])\r\n2019-09-17 13:19:09,843 - MainThread ocsp_asn1crypto.py:285 - extract_certificate_chain() - DEBUG - subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')]), issuer: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])\r\n2019-09-17 13:19:09,845 - MainThread ocsp_asn1crypto.py:82 - read_cert_bundle() - DEBUG - reading certificate bundle: /Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/botocore/vendored/requests/cacert.pem\r\n2019-09-17 13:19:09,856 - MainThread ocsp_asn1crypto.py:82 - read_cert_bundle() - DEBUG - reading certificate bundle: /Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/certifi/cacert.pem\r\n2019-09-17 13:19:09,867 - MainThread ocsp_asn1crypto.py:307 - create_pair_issuer_subject() - DEBUG - not found issuer_der: OrderedDict([('country_name', 'US'), ('organization_name', 'Starfield Technologies, Inc.'), ('organizational_unit_name', 'Starfield Class 2 Certification Authority')])\r\n2019-09-17 13:19:09,869 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6021(s)\r\n2019-09-17 13:19:09,869 - MainThread ocsp_snowflake.py:545 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.snowflakecomputing.com')])\r\n2019-09-17 13:19:09,870 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6084(s)\r\n2019-09-17 13:19:09,870 - MainThread ocsp_snowflake.py:545 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('organizational_unit_name', 'Server CA 1B'), ('common_name', 'Amazon')])\r\n2019-09-17 13:19:09,871 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6084(s)\r\n2019-09-17 13:19:09,871 - MainThread ocsp_snowflake.py:545 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])\r\n2019-09-17 13:19:09,871 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +1296(s)\r\n2019-09-17 13:19:09,871 - MainThread ocsp_snowflake.py:545 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])\r\n2019-09-17 13:19:09,872 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6021(s)\r\n2019-09-17 13:19:09,872 - MainThread ocsp_snowflake.py:545 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('common_name', '*.snowflakecomputing.com')])\r\n2019-09-17 13:19:09,874 - MainThread ocsp_snowflake.py:1040 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-09-17 13:19:09,874 - MainThread ocsp_asn1crypto.py:216 - process_ocsp_response() - DEBUG - Certificate is NOT attached in Basic OCSP Response. Using issuer's certificate\r\n2019-09-17 13:19:09,874 - MainThread ocsp_asn1crypto.py:222 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-09-17 13:19:09,878 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6021(s)\r\n2019-09-17 13:19:09,879 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6084(s)\r\n2019-09-17 13:19:09,879 - MainThread ocsp_snowflake.py:545 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('organizational_unit_name', 'Server CA 1B'), ('common_name', 'Amazon')])\r\n2019-09-17 13:19:09,879 - MainThread ocsp_snowflake.py:1040 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-09-17 13:19:09,880 - MainThread ocsp_asn1crypto.py:185 - process_ocsp_response() - DEBUG - Certificate is attached in Basic OCSP Response\r\n2019-09-17 13:19:09,881 - MainThread ocsp_asn1crypto.py:187 - process_ocsp_response() - DEBUG - Verifying the attached certificate is signed by the issuer\r\n2019-09-17 13:19:09,881 - MainThread ocsp_asn1crypto.py:191 - process_ocsp_response() - DEBUG - Valid Not After: 2022-10-24 20:13:22+00:00\r\n2019-09-17 13:19:09,882 - MainThread ocsp_asn1crypto.py:222 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-09-17 13:19:09,883 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6084(s)\r\n2019-09-17 13:19:09,884 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6084(s)\r\n2019-09-17 13:19:09,884 - MainThread ocsp_snowflake.py:545 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])\r\n2019-09-17 13:19:09,885 - MainThread ocsp_snowflake.py:1040 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-09-17 13:19:09,886 - MainThread ocsp_asn1crypto.py:185 - process_ocsp_response() - DEBUG - Certificate is attached in Basic OCSP Response\r\n2019-09-17 13:19:09,886 - MainThread ocsp_asn1crypto.py:187 - process_ocsp_response() - DEBUG - Verifying the attached certificate is signed by the issuer\r\n2019-09-17 13:19:09,886 - MainThread ocsp_asn1crypto.py:191 - process_ocsp_response() - DEBUG - Valid Not After: 2022-10-24 20:16:05+00:00\r\n2019-09-17 13:19:09,887 - MainThread ocsp_asn1crypto.py:222 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-09-17 13:19:09,888 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +6084(s)\r\n2019-09-17 13:19:09,889 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +1296(s)\r\n2019-09-17 13:19:09,889 - MainThread ocsp_snowflake.py:545 - find_cache() - DEBUG - hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])\r\n2019-09-17 13:19:09,890 - MainThread ocsp_snowflake.py:1040 - validate_by_direct_connection() - DEBUG - using OCSP response cache\r\n2019-09-17 13:19:09,891 - MainThread ocsp_asn1crypto.py:185 - process_ocsp_response() - DEBUG - Certificate is attached in Basic OCSP Response\r\n2019-09-17 13:19:09,891 - MainThread ocsp_asn1crypto.py:187 - process_ocsp_response() - DEBUG - Verifying the attached certificate is signed by the issuer\r\n2019-09-17 13:19:09,891 - MainThread ocsp_asn1crypto.py:191 - process_ocsp_response() - DEBUG - Valid Not After: 2021-12-14 07:00:00+00:00\r\n2019-09-17 13:19:09,893 - MainThread ocsp_asn1crypto.py:222 - process_ocsp_response() - DEBUG - Verifying the OCSP response is signed by the issuer.\r\n2019-09-17 13:19:09,894 - MainThread ocsp_snowflake.py:1189 - _is_validaity_range() - DEBUG - Tolerable Validity range for OCSP response: +1296(s)\r\n2019-09-17 13:19:09,894 - MainThread ocsp_snowflake.py:479 - write_ocsp_response_cache_file() - DEBUG - writing OCSP response cache file\r\n2019-09-17 13:19:09,894 - MainThread ocsp_snowflake.py:1399 - encode_ocsp_response_cache() - DEBUG - encoding OCSP response cache to JSON\r\n2019-09-17 13:19:09,901 - MainThread ocsp_snowflake.py:926 - _validate() - DEBUG - ok\r\n2019-09-17 13:19:10,290 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /session/v1/login-request?request_id=bd6c7ac9-1b56-41bc-a2a3-656dce739866&databaseName=data_lake_restricted&roleName=dl_restricted_w_role&request_guid=3e2f6b0d-5e3c-4953-9c9f-f437a0abcc60 HTTP/1.1\" 200 1312\r\n2019-09-17 13:19:10,291 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:10,292 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:10,292 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:10,292 - MainThread auth.py:319 - authenticate() - DEBUG - completed authentication\r\n2019-09-17 13:19:10,292 - MainThread auth.py:336 - authenticate() - DEBUG - token = ******\r\n2019-09-17 13:19:10,292 - MainThread auth.py:340 - authenticate() - DEBUG - master_token = ******\r\n2019-09-17 13:19:10,292 - MainThread auth.py:344 - authenticate() - DEBUG - id_token = NULL\r\n2019-09-17 13:19:10,294 - MainThread connection.py:551 - cursor() - DEBUG - cursor\r\n2019-09-17 13:19:10,294 - MainThread cursor.py:428 - execute() - DEBUG - executing SQL/command\r\n2019-09-17 13:19:10,294 - MainThread connection.py:1034 - __process_params_dict() - DEBUG - parameters: {}\r\n2019-09-17 13:19:10,294 - MainThread cursor.py:451 - execute() - DEBUG - binding: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1] with input=[{}], processed=[{}]\r\n2019-09-17 13:19:10,294 - MainThread cursor.py:480 - execute() - INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]\r\n2019-09-17 13:19:10,294 - MainThread connection.py:1063 - _next_sequence_counter() - DEBUG - sequence counter: 1\r\n2019-09-17 13:19:10,294 - MainThread cursor.py:308 - _execute_helper() - DEBUG - running query [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]\r\n2019-09-17 13:19:10,294 - MainThread cursor.py:317 - _execute_helper() - DEBUG - is_file_transfer: False\r\n2019-09-17 13:19:10,295 - MainThread connection.py:819 - cmd_query() - DEBUG - _cmd_query\r\n2019-09-17 13:19:10,295 - MainThread connection.py:841 - cmd_query() - DEBUG - sql=[SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1], sequence_id=[1], is_file_transfer=[None]\r\n2019-09-17 13:19:10,295 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:10,295 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: None, retry cnt: 1\r\n2019-09-17 13:19:10,295 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:10,468 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /queries/v1/query-request?requestId=e5247b33-6b59-4853-be2f-3d343dc1ea84&request_guid=7ae95a20-fde1-4bec-a3df-28b528d28b8d HTTP/1.1\" 200 916\r\n2019-09-17 13:19:10,469 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:10,469 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:10,470 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:10,470 - MainThread cursor.py:504 - execute() - DEBUG - sfqid: 018ef38f-03c9-563d-0000-1479251310ae\r\n2019-09-17 13:19:10,470 - MainThread cursor.py:506 - execute() - INFO - query execution done\r\n2019-09-17 13:19:10,470 - MainThread cursor.py:508 - execute() - DEBUG - SUCCESS\r\n2019-09-17 13:19:10,470 - MainThread cursor.py:512 - execute() - DEBUG - PUT OR GET: None\r\n2019-09-17 13:19:10,471 - MainThread connection.py:551 - cursor() - DEBUG - cursor\r\n2019-09-17 13:19:10,471 - MainThread cursor.py:428 - execute() - DEBUG - executing SQL/command\r\n2019-09-17 13:19:10,471 - MainThread connection.py:1034 - __process_params_dict() - DEBUG - parameters: {}\r\n2019-09-17 13:19:10,471 - MainThread cursor.py:451 - execute() - DEBUG - binding: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1] with input=[{}], processed=[{}]\r\n2019-09-17 13:19:10,472 - MainThread cursor.py:480 - execute() - INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]\r\n2019-09-17 13:19:10,472 - MainThread connection.py:1063 - _next_sequence_counter() - DEBUG - sequence counter: 2\r\n2019-09-17 13:19:10,472 - MainThread cursor.py:308 - _execute_helper() - DEBUG - running query [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]\r\n2019-09-17 13:19:10,472 - MainThread cursor.py:317 - _execute_helper() - DEBUG - is_file_transfer: False\r\n2019-09-17 13:19:10,472 - MainThread connection.py:819 - cmd_query() - DEBUG - _cmd_query\r\n2019-09-17 13:19:10,472 - MainThread connection.py:841 - cmd_query() - DEBUG - sql=[SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1], sequence_id=[2], is_file_transfer=[None]\r\n2019-09-17 13:19:10,472 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:10,473 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: None, retry cnt: 1\r\n2019-09-17 13:19:10,473 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:10,638 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /queries/v1/query-request?requestId=1d22fb9a-1be5-43cc-92a6-8cd91f42e352&request_guid=e780ae60-1f85-4445-af51-a502b6b1b76a HTTP/1.1\" 200 917\r\n2019-09-17 13:19:10,638 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:10,639 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:10,639 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:10,639 - MainThread cursor.py:504 - execute() - DEBUG - sfqid: 018ef38f-03b0-1119-0000-14792513088a\r\n2019-09-17 13:19:10,639 - MainThread cursor.py:506 - execute() - INFO - query execution done\r\n2019-09-17 13:19:10,640 - MainThread cursor.py:508 - execute() - DEBUG - SUCCESS\r\n2019-09-17 13:19:10,640 - MainThread cursor.py:512 - execute() - DEBUG - PUT OR GET: None\r\n2019-09-17 13:19:10,640 - MainThread connection.py:551 - cursor() - DEBUG - cursor\r\n2019-09-17 13:19:10,640 - MainThread cursor.py:428 - execute() - DEBUG - executing SQL/command\r\n2019-09-17 13:19:10,640 - MainThread cursor.py:451 - execute() - DEBUG - binding: [ROLLBACK] with input=[None], processed=[{}]\r\n2019-09-17 13:19:10,640 - MainThread cursor.py:480 - execute() - INFO - query: [ROLLBACK]\r\n2019-09-17 13:19:10,640 - MainThread connection.py:1063 - _next_sequence_counter() - DEBUG - sequence counter: 3\r\n2019-09-17 13:19:10,641 - MainThread cursor.py:308 - _execute_helper() - DEBUG - running query [ROLLBACK]\r\n2019-09-17 13:19:10,641 - MainThread cursor.py:317 - _execute_helper() - DEBUG - is_file_transfer: False\r\n2019-09-17 13:19:10,641 - MainThread connection.py:819 - cmd_query() - DEBUG - _cmd_query\r\n2019-09-17 13:19:10,641 - MainThread connection.py:841 - cmd_query() - DEBUG - sql=[ROLLBACK], sequence_id=[3], is_file_transfer=[None]\r\n2019-09-17 13:19:10,642 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:10,642 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: None, retry cnt: 1\r\n2019-09-17 13:19:10,642 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:10,806 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /queries/v1/query-request?requestId=c4d0ed53-e0af-4aa0-8c33-f4e9aa82d95e&request_guid=388910fa-055c-420c-b28a-db64affe5022 HTTP/1.1\" 200 928\r\n2019-09-17 13:19:10,807 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:10,807 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:10,807 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:10,808 - MainThread cursor.py:504 - execute() - DEBUG - sfqid: 018ef38f-0355-38a9-0000-14792513088e\r\n2019-09-17 13:19:10,808 - MainThread cursor.py:506 - execute() - INFO - query execution done\r\n2019-09-17 13:19:10,808 - MainThread cursor.py:508 - execute() - DEBUG - SUCCESS\r\n2019-09-17 13:19:10,808 - MainThread cursor.py:512 - execute() - DEBUG - PUT OR GET: None\r\n2019-09-17 13:19:10,809 - MainThread connection.py:551 - cursor() - DEBUG - cursor\r\n2019-09-17 13:19:10,810 - MainThread cursor.py:428 - execute() - DEBUG - executing SQL/command\r\n2019-09-17 13:19:10,810 - MainThread connection.py:1034 - __process_params_dict() - DEBUG - parameters: {}\r\n2019-09-17 13:19:10,810 - MainThread cursor.py:451 - execute() - DEBUG - binding: [DESC TABLE /* sqlalchemy:_has_object */ sandbox.see_the_bug] with input=[{}], processed=[{}]\r\n2019-09-17 13:19:10,810 - MainThread cursor.py:480 - execute() - INFO - query: [DESC TABLE /* sqlalchemy:_has_object */ sandbox.see_the_bug]\r\n2019-09-17 13:19:10,810 - MainThread connection.py:1063 - _next_sequence_counter() - DEBUG - sequence counter: 4\r\n2019-09-17 13:19:10,810 - MainThread cursor.py:308 - _execute_helper() - DEBUG - running query [DESC TABLE /* sqlalchemy:_has_object */ sandbox.see_the_bug]\r\n2019-09-17 13:19:10,810 - MainThread cursor.py:317 - _execute_helper() - DEBUG - is_file_transfer: False\r\n2019-09-17 13:19:10,810 - MainThread connection.py:819 - cmd_query() - DEBUG - _cmd_query\r\n2019-09-17 13:19:10,811 - MainThread connection.py:841 - cmd_query() - DEBUG - sql=[DESC TABLE /* sqlalchemy:_has_object */ sandbox.see_the_bug], sequence_id=[4], is_file_transfer=[None]\r\n2019-09-17 13:19:10,811 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:10,811 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: None, retry cnt: 1\r\n2019-09-17 13:19:10,811 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:11,006 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /queries/v1/query-request?requestId=e084443d-8cdd-46ba-938e-dc939bdb4d1f&request_guid=8fae4742-5106-4993-97d1-134a1b201d66 HTTP/1.1\" 200 1075\r\n2019-09-17 13:19:11,007 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:11,007 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:11,007 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:11,008 - MainThread cursor.py:504 - execute() - DEBUG - sfqid: 018ef38f-03d8-de7c-0000-1479251310b2\r\n2019-09-17 13:19:11,008 - MainThread cursor.py:506 - execute() - INFO - query execution done\r\n2019-09-17 13:19:11,008 - MainThread cursor.py:508 - execute() - DEBUG - SUCCESS\r\n2019-09-17 13:19:11,008 - MainThread cursor.py:512 - execute() - DEBUG - PUT OR GET: None\r\n2019-09-17 13:19:11,009 - MainThread connection.py:551 - cursor() - DEBUG - cursor\r\n2019-09-17 13:19:11,009 - MainThread cursor.py:428 - execute() - DEBUG - executing SQL/command\r\n2019-09-17 13:19:11,009 - MainThread cursor.py:451 - execute() - DEBUG - binding: [ROLLBACK] with input=[None], processed=[{}]\r\n2019-09-17 13:19:11,009 - MainThread cursor.py:480 - execute() - INFO - query: [ROLLBACK]\r\n2019-09-17 13:19:11,010 - MainThread connection.py:1063 - _next_sequence_counter() - DEBUG - sequence counter: 5\r\n2019-09-17 13:19:11,010 - MainThread cursor.py:308 - _execute_helper() - DEBUG - running query [ROLLBACK]\r\n2019-09-17 13:19:11,010 - MainThread cursor.py:317 - _execute_helper() - DEBUG - is_file_transfer: False\r\n2019-09-17 13:19:11,010 - MainThread connection.py:819 - cmd_query() - DEBUG - _cmd_query\r\n2019-09-17 13:19:11,010 - MainThread connection.py:841 - cmd_query() - DEBUG - sql=[ROLLBACK], sequence_id=[5], is_file_transfer=[None]\r\n2019-09-17 13:19:11,010 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:11,010 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: None, retry cnt: 1\r\n2019-09-17 13:19:11,010 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:11,174 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /queries/v1/query-request?requestId=ea1257a0-6313-4b04-b6a0-809a9f85c4c9&request_guid=ef9b8fbf-5a37-4fda-b81f-f92c07ad88b8 HTTP/1.1\" 200 925\r\n2019-09-17 13:19:11,175 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:11,176 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:11,176 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:11,176 - MainThread cursor.py:504 - execute() - DEBUG - sfqid: 018ef38f-0308-670c-0000-147925130892\r\n2019-09-17 13:19:11,176 - MainThread cursor.py:506 - execute() - INFO - query execution done\r\n2019-09-17 13:19:11,177 - MainThread cursor.py:508 - execute() - DEBUG - SUCCESS\r\n2019-09-17 13:19:11,177 - MainThread cursor.py:512 - execute() - DEBUG - PUT OR GET: None\r\n2019-09-17 13:19:11,178 - MainThread connection.py:551 - cursor() - DEBUG - cursor\r\n2019-09-17 13:19:11,178 - MainThread cursor.py:428 - execute() - DEBUG - executing SQL/command\r\n2019-09-17 13:19:11,178 - MainThread connection.py:1034 - __process_params_dict() - DEBUG - parameters: {'id': 'NULL', 'foo': \"'bar'\"}\r\n2019-09-17 13:19:11,178 - MainThread cursor.py:451 - execute() - DEBUG - binding: [INSERT INTO sandbox.see_the_bug (id, foo) VALUES (%(id)s, %(foo)s)] with input=[{'id': None, 'foo': 'bar'}], processed=[{'id': 'NULL', 'foo': \"'bar'\"}]\r\n2019-09-17 13:19:11,178 - MainThread cursor.py:480 - execute() - INFO - query: [INSERT INTO sandbox.see_the_bug (id, foo) VALUES (NULL, 'bar')]\r\n2019-09-17 13:19:11,179 - MainThread connection.py:1063 - _next_sequence_counter() - DEBUG - sequence counter: 6\r\n2019-09-17 13:19:11,179 - MainThread cursor.py:308 - _execute_helper() - DEBUG - running query [INSERT INTO sandbox.see_the_bug (id, foo) VALUES (NULL, 'bar')]\r\n2019-09-17 13:19:11,179 - MainThread cursor.py:317 - _execute_helper() - DEBUG - is_file_transfer: False\r\n2019-09-17 13:19:11,179 - MainThread connection.py:819 - cmd_query() - DEBUG - _cmd_query\r\n2019-09-17 13:19:11,179 - MainThread connection.py:841 - cmd_query() - DEBUG - sql=[INSERT INTO sandbox.see_the_bug (id, foo) VALUES (NULL, 'bar')], sequence_id=[6], is_file_transfer=[None]\r\n2019-09-17 13:19:11,179 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:11,179 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: None, retry cnt: 1\r\n2019-09-17 13:19:11,179 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:12,008 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /queries/v1/query-request?requestId=9679a92f-2c69-46af-a6b6-4c63f77123b7&request_guid=9fdfbded-a3a3-4304-be82-b94227c2890f HTTP/1.1\" 200 197\r\n2019-09-17 13:19:12,009 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:12,010 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:12,010 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = 100072, after post request\r\n2019-09-17 13:19:12,010 - MainThread cursor.py:504 - execute() - DEBUG - sfqid: 018ef38f-039e-edfa-0000-1479251310b6\r\n2019-09-17 13:19:12,010 - MainThread cursor.py:506 - execute() - INFO - query execution done\r\n2019-09-17 13:19:12,011 - MainThread cursor.py:545 - execute() - DEBUG - {'data': {'internalError': False, 'errorCode': '100072', 'age': 0, 'sqlState': '22000', 'queryId': '018ef38f-039e-edfa-0000-1479251310b6'}, 'message': 'NULL result in a non-nullable column', 'code': '100072', 'success': False}\r\n2019-09-17 13:19:12,011 - MainThread connection.py:551 - cursor() - DEBUG - cursor\r\n2019-09-17 13:19:12,011 - MainThread cursor.py:428 - execute() - DEBUG - executing SQL/command\r\n2019-09-17 13:19:12,011 - MainThread cursor.py:451 - execute() - DEBUG - binding: [ROLLBACK] with input=[None], processed=[{}]\r\n2019-09-17 13:19:12,012 - MainThread cursor.py:480 - execute() - INFO - query: [ROLLBACK]\r\n2019-09-17 13:19:12,012 - MainThread connection.py:1063 - _next_sequence_counter() - DEBUG - sequence counter: 7\r\n2019-09-17 13:19:12,012 - MainThread cursor.py:308 - _execute_helper() - DEBUG - running query [ROLLBACK]\r\n2019-09-17 13:19:12,012 - MainThread cursor.py:317 - _execute_helper() - DEBUG - is_file_transfer: False\r\n2019-09-17 13:19:12,012 - MainThread connection.py:819 - cmd_query() - DEBUG - _cmd_query\r\n2019-09-17 13:19:12,012 - MainThread connection.py:841 - cmd_query() - DEBUG - sql=[ROLLBACK], sequence_id=[7], is_file_transfer=[None]\r\n2019-09-17 13:19:12,013 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:12,013 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: None, retry cnt: 1\r\n2019-09-17 13:19:12,013 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:12,316 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /queries/v1/query-request?requestId=b9941c0d-a7bc-4962-980a-4de0266577d0&request_guid=e63409f1-6b08-4ac6-adae-5cc4e39ad805 HTTP/1.1\" 200 927\r\n2019-09-17 13:19:12,317 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:12,317 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:12,317 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:12,318 - MainThread cursor.py:504 - execute() - DEBUG - sfqid: 018ef38f-0319-a211-0000-14792513089e\r\n2019-09-17 13:19:12,318 - MainThread cursor.py:506 - execute() - INFO - query execution done\r\n2019-09-17 13:19:12,318 - MainThread cursor.py:508 - execute() - DEBUG - SUCCESS\r\n2019-09-17 13:19:12,318 - MainThread cursor.py:512 - execute() - DEBUG - PUT OR GET: None\r\n2019-09-17 13:19:12,319 - MainThread connection.py:551 - cursor() - DEBUG - cursor\r\n2019-09-17 13:19:12,319 - MainThread cursor.py:428 - execute() - DEBUG - executing SQL/command\r\n2019-09-17 13:19:12,319 - MainThread cursor.py:451 - execute() - DEBUG - binding: [ROLLBACK] with input=[None], processed=[{}]\r\n2019-09-17 13:19:12,319 - MainThread cursor.py:480 - execute() - INFO - query: [ROLLBACK]\r\n2019-09-17 13:19:12,319 - MainThread connection.py:1063 - _next_sequence_counter() - DEBUG - sequence counter: 8\r\n2019-09-17 13:19:12,320 - MainThread cursor.py:308 - _execute_helper() - DEBUG - running query [ROLLBACK]\r\n2019-09-17 13:19:12,320 - MainThread cursor.py:317 - _execute_helper() - DEBUG - is_file_transfer: False\r\n2019-09-17 13:19:12,320 - MainThread connection.py:819 - cmd_query() - DEBUG - _cmd_query\r\n2019-09-17 13:19:12,320 - MainThread connection.py:841 - cmd_query() - DEBUG - sql=[ROLLBACK], sequence_id=[8], is_file_transfer=[None]\r\n2019-09-17 13:19:12,320 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:12,320 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: None, retry cnt: 1\r\n2019-09-17 13:19:12,320 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:12,504 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /queries/v1/query-request?requestId=f30258c6-8e1b-4ed5-99db-a6ecd93e76bf&request_guid=28d9716b-ebe0-4436-aa70-e6407a2287b8 HTTP/1.1\" 200 927\r\n2019-09-17 13:19:12,505 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:12,505 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:12,505 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:12,506 - MainThread cursor.py:504 - execute() - DEBUG - sfqid: 018ef38f-038a-faf0-0000-1479251310ba\r\n2019-09-17 13:19:12,506 - MainThread cursor.py:506 - execute() - INFO - query execution done\r\n2019-09-17 13:19:12,506 - MainThread cursor.py:508 - execute() - DEBUG - SUCCESS\r\n2019-09-17 13:19:12,506 - MainThread cursor.py:512 - execute() - DEBUG - PUT OR GET: None\r\n2019-09-17 13:19:12,506 - MainThread connection.py:492 - close() - INFO - closed\r\n2019-09-17 13:19:12,507 - MainThread telemetry.py:113 - close() - DEBUG - Closing telemetry client.\r\n2019-09-17 13:19:12,507 - MainThread telemetry.py:93 - send_batch() - DEBUG - Sending 1 logs to telemetry.\r\n2019-09-17 13:19:12,507 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:12,507 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: 5, retry cnt: 1\r\n2019-09-17 13:19:12,507 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:12,634 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /telemetry/send?request_guid=c8d795ce-7bac-46ce-9d64-e7932c9fa851 HTTP/1.1\" 200 86\r\n2019-09-17 13:19:12,635 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:12,635 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:12,635 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\n2019-09-17 13:19:12,635 - MainThread telemetry.py:103 - send_batch() - DEBUG - Successfully uploading metrics to telemetry.\r\n2019-09-17 13:19:12,636 - MainThread network.py:900 - _use_requests_session() - DEBUG - Active requests sessions: 1, idle: 0\r\n2019-09-17 13:19:12,636 - MainThread network.py:635 - _request_exec_wrapper() - DEBUG - remaining request timeout: 5, retry cnt: 1\r\n2019-09-17 13:19:12,636 - MainThread network.py:751 - _request_exec() - DEBUG - socket timeout: 60\r\n2019-09-17 13:19:12,829 - MainThread connectionpool.py:383 - _make_request() - DEBUG - \"POST /session?delete=true&request_guid=80036318-5764-4c30-a1de-72ae57f8d1a8 HTTP/1.1\" 200 76\r\n2019-09-17 13:19:12,830 - MainThread network.py:783 - _request_exec() - DEBUG - SUCCESS\r\n2019-09-17 13:19:12,830 - MainThread network.py:913 - _use_requests_session() - DEBUG - Active requests sessions: 0, idle: 1\r\n2019-09-17 13:19:12,830 - MainThread network.py:533 - _post_request() - DEBUG - ret[code] = None, after post request\r\nTraceback (most recent call last):\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/engine/base.py\", line 1244, in _execute_context\r\n    cursor, statement, parameters, context\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/engine/default.py\", line 550, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/snowflake/connector/cursor.py\", line 558, in execute\r\n    errvalue)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/snowflake/connector/errors.py\", line 97, in errorhandler_wrapper\r\n    cursor.errorhandler(connection, cursor, errorclass, errorvalue)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/snowflake/connector/errors.py\", line 73, in default_errorhandler\r\n    done_format_msg=errorvalue.get(u'done_format_msg'))\r\nsnowflake.connector.errors.ProgrammingError: 100072 (22000): 018ef38f-039e-edfa-0000-1479251310b6: NULL result in a non-nullable column\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"reproducible.py\", line 29, in <module>\r\n    table.insert().values(foo='bar').execute()\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/sql/base.py\", line 411, in execute\r\n    return e._execute_clauseelement(self, multiparams, params)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/engine/base.py\", line 2173, in _execute_clauseelement\r\n    return connection._execute_clauseelement(elem, multiparams, params)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/engine/base.py\", line 1107, in _execute_clauseelement\r\n    distilled_params,\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/engine/base.py\", line 1248, in _execute_context\r\n    e, statement, parameters, cursor, context\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/engine/base.py\", line 1466, in _handle_dbapi_exception\r\n    util.raise_from_cause(sqlalchemy_exception, exc_info)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/util/compat.py\", line 383, in raise_from_cause\r\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/util/compat.py\", line 128, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/engine/base.py\", line 1244, in _execute_context\r\n    cursor, statement, parameters, context\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/sqlalchemy/engine/default.py\", line 550, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/snowflake/connector/cursor.py\", line 558, in execute\r\n    errvalue)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/snowflake/connector/errors.py\", line 97, in errorhandler_wrapper\r\n    cursor.errorhandler(connection, cursor, errorclass, errorvalue)\r\n  File \"/Users/ramichowdhury/.anaconda3/envs/labs-recommendation-service/lib/python3.7/site-packages/snowflake/connector/errors.py\", line 73, in default_errorhandler\r\n    done_format_msg=errorvalue.get(u'done_format_msg'))\r\nsqlalchemy.exc.ProgrammingError: (snowflake.connector.errors.ProgrammingError) 100072 (22000): 018ef38f-039e-edfa-0000-1479251310b6: NULL result in a non-nullable column\r\n[SQL: INSERT INTO sandbox.see_the_bug (id, foo) VALUES (%(id)s, %(foo)s)]\r\n[parameters: {'id': None, 'foo': 'bar'}]\r\n(Background on this error at: http://sqlalche.me/e/f405)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/116", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/116/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/116/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/116", "id": 494736124, "node_id": "MDU6SXNzdWU0OTQ3MzYxMjQ=", "number": 116, "title": "Race in chunk downloader?", "user": {"login": "SteveAlexander", "id": 4321921, "node_id": "MDQ6VXNlcjQzMjE5MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4321921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SteveAlexander", "html_url": "https://github.com/SteveAlexander", "followers_url": "https://api.github.com/users/SteveAlexander/followers", "following_url": "https://api.github.com/users/SteveAlexander/following{/other_user}", "gists_url": "https://api.github.com/users/SteveAlexander/gists{/gist_id}", "starred_url": "https://api.github.com/users/SteveAlexander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SteveAlexander/subscriptions", "organizations_url": "https://api.github.com/users/SteveAlexander/orgs", "repos_url": "https://api.github.com/users/SteveAlexander/repos", "events_url": "https://api.github.com/users/SteveAlexander/events{/privacy}", "received_events_url": "https://api.github.com/users/SteveAlexander/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-17T16:47:30Z", "updated_at": "2019-09-19T21:29:44Z", "closed_at": "2019-09-19T21:29:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\nPython 3.7.3\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nDarwin-18.6.0-x86_64-i386-64bit\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\n```\r\nsnowflake-connector-python 1.8.1\r\nsnowflake-ingest           0.9.1\r\nsnowflake-sqlalchemy       1.1.14\r\nSQLAlchemy                 1.3.6\r\n```\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\nPerforming a select with `fetchall()` on the result set, as a regular part of my product's data processing. I'll figure out a test case, but I don't have one just yet.\r\n\r\nThe error occurs perhaps once every 40-50 runs.\r\n\r\n5. What did you expect to see?\r\n\r\nNo error.\r\n\r\n6. What did you see instead?\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/lib/python3.7/site-packages/snowflake/connector/cursor.py\", line 753, in fetchone\r\n    row = next(self._current_chunk_row)\r\nStopIteration\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n...\r\n  File \"/anaconda3/lib/python3.7/site-packages/sqlalchemy/engine/result.py\", line 1216, in fetchall\r\n    e, None, None, self.cursor, self.context\r\n  File \"/anaconda3/lib/python3.7/site-packages/sqlalchemy/engine/base.py\", line 1468, in _handle_dbapi_exception\r\n    util.reraise(*exc_info)\r\n  File \"/anaconda3/lib/python3.7/site-packages/sqlalchemy/util/compat.py\", line 153, in reraise\r\n    raise value\r\n  File \"/anaconda3/lib/python3.7/site-packages/sqlalchemy/engine/result.py\", line 1211, in fetchall\r\n    l = self.process_rows(self._fetchall_impl())\r\n  File \"/anaconda3/lib/python3.7/site-packages/sqlalchemy/engine/result.py\", line 1161, in _fetchall_impl\r\n    return self.cursor.fetchall()\r\n  File \"/anaconda3/lib/python3.7/site-packages/snowflake/connector/cursor.py\", line 828, in fetchall\r\n    row = self.fetchone()\r\n  File \"/anaconda3/lib/python3.7/site-packages/snowflake/connector/cursor.py\", line 759, in fetchone\r\n    next_chunk = self._chunk_downloader.next_chunk()\r\n  File \"/anaconda3/lib/python3.7/site-packages/snowflake/connector/chunk_downloader.py\", line 176, in next_chunk\r\n    raise self._downloader_error\r\n  File \"/anaconda3/lib/python3.7/site-packages/snowflake/connector/chunk_downloader.py\", line 130, in _download_chunk\r\n    with self._chunk_locks[idx]:\r\nKeyError: 1\r\n```\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\nProblem appears to not occur when logs are being collected. Suggests it may be a race condition.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/115", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/115/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/115/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/115", "id": 491527297, "node_id": "MDU6SXNzdWU0OTE1MjcyOTc=", "number": 115, "title": "Support Identity Provider (IdP) Authentication", "user": {"login": "idoki-boxycharm", "id": 52007278, "node_id": "MDQ6VXNlcjUyMDA3Mjc4", "avatar_url": "https://avatars0.githubusercontent.com/u/52007278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idoki-boxycharm", "html_url": "https://github.com/idoki-boxycharm", "followers_url": "https://api.github.com/users/idoki-boxycharm/followers", "following_url": "https://api.github.com/users/idoki-boxycharm/following{/other_user}", "gists_url": "https://api.github.com/users/idoki-boxycharm/gists{/gist_id}", "starred_url": "https://api.github.com/users/idoki-boxycharm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idoki-boxycharm/subscriptions", "organizations_url": "https://api.github.com/users/idoki-boxycharm/orgs", "repos_url": "https://api.github.com/users/idoki-boxycharm/repos", "events_url": "https://api.github.com/users/idoki-boxycharm/events{/privacy}", "received_events_url": "https://api.github.com/users/idoki-boxycharm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913931, "node_id": "MDU6TGFiZWwzOTQ5MTM5MzE=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-10T08:31:29Z", "updated_at": "2019-09-11T00:13:27Z", "closed_at": "2019-09-11T00:13:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Library does not support SSO (single sign on) authentication from IdP such as Okta. This authentication method becomes widespread in organizations, supporting it would make the library usable for this use-case.\r\n\r\nThe SnowFlake [python connector](https://docs.snowflake.net/manuals/user-guide/python-connector-example.html#connecting-using-federated-authentication) supports it out-of-the-box and can be relied on.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/113", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/113/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/113/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/113", "id": 484170948, "node_id": "MDU6SXNzdWU0ODQxNzA5NDg=", "number": 113, "title": "Incorrect SQL generated for INSERT with CTE", "user": {"login": "pratimapatel2008", "id": 54416741, "node_id": "MDQ6VXNlcjU0NDE2NzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/54416741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pratimapatel2008", "html_url": "https://github.com/pratimapatel2008", "followers_url": "https://api.github.com/users/pratimapatel2008/followers", "following_url": "https://api.github.com/users/pratimapatel2008/following{/other_user}", "gists_url": "https://api.github.com/users/pratimapatel2008/gists{/gist_id}", "starred_url": "https://api.github.com/users/pratimapatel2008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pratimapatel2008/subscriptions", "organizations_url": "https://api.github.com/users/pratimapatel2008/orgs", "repos_url": "https://api.github.com/users/pratimapatel2008/repos", "events_url": "https://api.github.com/users/pratimapatel2008/events{/privacy}", "received_events_url": "https://api.github.com/users/pratimapatel2008/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/15", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/15", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/15/labels", "id": 4707502, "node_id": "MDk6TWlsZXN0b25lNDcwNzUwMg==", "number": 15, "title": "v1.1.15", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2019-09-30T22:06:09Z", "updated_at": "2019-10-22T10:21:49Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-08-22T19:28:50Z", "updated_at": "2019-09-30T22:06:13Z", "closed_at": "2019-09-30T22:06:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n`Python 2.7.10`\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n`Darwin-18.7.0-x86_64-i386-64bit`\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\npip list\r\nPackage                    Version\r\n-------------------------- --------\r\nasn1crypto                 0.24.0\r\nawscli                     1.16.175\r\nazure-common               1.1.21\r\nazure-storage-blob         2.0.1\r\nazure-storage-common       2.0.0\r\nboto3                      1.9.158\r\nbotocore                   1.12.165\r\ncertifi                    2019.3.9\r\ncffi                       1.12.3\r\nchardet                    3.0.4\r\ncolorama                   0.3.9\r\ncryptography               2.6.1\r\ndocutils                   0.14\r\nfurl                       2.0.0\r\nfuture                     0.17.1\r\nidna                       2.8\r\nijson                      2.3\r\njmespath                   0.9.4\r\norderedmultidict           1.0\r\npip                        19.2.2\r\npyasn1                     0.4.5\r\npycparser                  2.19\r\npycryptodome               3.8.1\r\npycryptodomex              3.8.1\r\nPyJWT                      1.7.1\r\npyOpenSSL                  19.0.0\r\npython-dateutil            2.8.0\r\npytz                       2019.1\r\nPyYAML                     3.13\r\nrequests                   2.22.0\r\nrsa                        3.4.2\r\ns3transfer                 0.2.0\r\nsetuptools                 40.8.0\r\nsix                        1.12.0\r\nsnowflake-connector-python 1.8.1\r\nsnowflake-ingest           0.9.1\r\nsnowflake-sqlalchemy       1.1.14\r\nSQLAlchemy                 1.3.6\r\ntyping                     3.6.6\r\nurllib3                    1.25.3\r\n```\r\n\r\n4. What did you do?\r\nI tried to INSERT operation with CTE and I could see that the generated query is in incorrect format.\r\n\r\nA complete runnable program is good.\r\n==============================\r\n```\r\nfrom snowflake.sqlalchemy import snowdialect\r\nfrom datetime import date\r\nfrom sqlalchemy import (MetaData, Table, Column, Integer,\r\n                        Date, select, literal, and_, exists, create_engine)\r\nimport logging\r\nlogging.getLogger('sqlalchemy.engine').setLevel(logging.INFO)\r\n\r\nmetadata = MetaData()\r\nvisitors = Table('visitors', metadata,Column('product_id', Integer),Column('date1', Date),Column('count', Integer))\r\nproduct_id = 1\r\nday = date.today()\r\ncount = 5\r\nwith_bar = select([literal(product_id), literal(day), literal(count)]).cte('bar')\r\nsel = select([with_bar])\r\nins = visitors.insert().from_select([visitors.c.product_id, visitors.c.date1, visitors.c.count], sel)\r\nprint ins.compile(dialect=snowdialect.dialect())\r\n```\r\n\r\n5. What did you expect to see?\r\n`INSERT INTO visitors (product_id, date1, count) WITH bar AS\r\n(SELECT %(param_1)s AS anon_1, %(param_2)s AS anon_2, %(param_3)s AS anon_3)\r\n SELECT bar.anon_1, bar.anon_2, bar.anon_3\r\nFROM bar`\r\n\r\n6. What did you see instead?\r\n`WITH bar AS\r\n(SELECT %(param_1)s AS anon_1, %(param_2)s AS anon_2, %(param_3)s AS anon_3)\r\n INSERT INTO visitors (product_id, date1, count) SELECT bar.anon_1, bar.anon_2, bar.anon_3\r\nFROM bar`\r\n\r\n\r\nThere is a simple fix for this problem, we need to add below property in snowdialect.py class SnowflakeDialect which overrides default SQLAlchemy configs.\r\ncte_follows_insert = True\r\n\r\nBelow is patch file.\r\n=================\r\n```\r\ndiff --git a/snowdialect.py b/snowdialect.py\r\nindex 5221b3d..b5a1759 100644\r\n--- a/snowdialect.py\r\n+++ b/snowdialect.py\r\n@@ -70,6 +70,7 @@ ischema_names = {\r\n class SnowflakeDialect(default.DefaultDialect):\r\n     name = 'snowflake'\r\n     max_identifier_length = 65535\r\n+    cte_follows_insert = True\r\n\r\n     encoding = UTF8\r\n     default_paramstyle = 'pyformat'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/112", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/112/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/112/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/112", "id": 482460791, "node_id": "MDU6SXNzdWU0ODI0NjA3OTE=", "number": 112, "title": "Unable to use on AWS Lambda ", "user": {"login": "Jflick58", "id": 22459070, "node_id": "MDQ6VXNlcjIyNDU5MDcw", "avatar_url": "https://avatars0.githubusercontent.com/u/22459070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jflick58", "html_url": "https://github.com/Jflick58", "followers_url": "https://api.github.com/users/Jflick58/followers", "following_url": "https://api.github.com/users/Jflick58/following{/other_user}", "gists_url": "https://api.github.com/users/Jflick58/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jflick58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jflick58/subscriptions", "organizations_url": "https://api.github.com/users/Jflick58/orgs", "repos_url": "https://api.github.com/users/Jflick58/repos", "events_url": "https://api.github.com/users/Jflick58/events{/privacy}", "received_events_url": "https://api.github.com/users/Jflick58/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913931, "node_id": "MDU6TGFiZWwzOTQ5MTM5MzE=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-08-19T18:27:23Z", "updated_at": "2020-04-14T08:42:31Z", "closed_at": "2019-10-22T10:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. What version of Python are you using (`python --version`)?\r\n\r\nTried 3.6.7 and 3.7.1 \r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nBuilding distribution on Linux-4.15.0-1035-aws-x86_64-with-Ubuntu-18.04-bionic, \r\n\r\nRunning on AWS Lambda (Linux-4.14.133-88.105.amzn1.x86_64-x86_64-with-glibc2.2.5)\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\nPackage                    Version\r\n-------------------------- ---------\r\nasn1crypto                 0.24.0\r\nazure-common               1.1.23\r\nazure-storage-blob         2.1.0\r\nazure-storage-common       2.1.0\r\nboto3                      1.9.210\r\nbotocore                   1.12.210\r\ncertifi                    2019.6.16\r\ncffi                       1.12.3\r\nchardet                    3.0.4\r\nClick                      7.0\r\ncryptography               2.7\r\ndocutils                   0.15.2\r\nfsspec                     0.4.1\r\nfuture                     0.17.1\r\nidna                       2.8\r\nijson                      2.4\r\njmespath                   0.9.4\r\nnumpy                      1.17.0\r\npandas                     0.25.0\r\npip                        19.2.2\r\npycparser                  2.19\r\npycryptodomex              3.8.2\r\nPyJWT                      1.7.1\r\npyOpenSSL                  19.0.0\r\npython-dateutil            2.8.0\r\npython-lambda              3.2.6\r\npytz                       2019.2\r\nPyYAML                     5.1.2\r\nrequests                   2.22.0\r\ns3fs                       0.3.3\r\ns3transfer                 0.2.1\r\nsetuptools                 41.1.0\r\nsix                        1.12.0\r\nsnowflake-connector-python 1.8.7\r\nsnowflake-sqlalchemy       1.1.14\r\nSQLAlchemy                 1.3.7\r\nurllib3                    1.25.3\r\nwheel                      0.33.6\r\n\r\n\r\n4. What did you do?\r\n\r\n```\r\nimport pandas as pd \r\nfrom sqlalchemy import create_engine\r\n\r\ndb_string = \"snowflake://{}:{}@{}/{}/{}?warehouse={}?role={}\".format(\r\n            user, password, account, db, schema, warehouse, role\r\n        )\r\nengine = create_engine(db_string)\r\nconn = engine.connect() \r\n```\r\n\r\n5. What did you expect to see?\r\nI expect to see no errors with a successful connection. I then pass the `conn` object to a `pd.to_sql()` method. \r\n\r\n6. What did you see instead?\r\n\r\nNo module named 'snowflake.sqlalchemy'\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n[lambda_logs.txt](https://github.com/snowflakedb/snowflake-sqlalchemy/files/3517157/lambda_logs.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/111", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/111/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/111/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/111", "id": 481513678, "node_id": "MDU6SXNzdWU0ODE1MTM2Nzg=", "number": 111, "title": "Relatively High Lag for Query Results", "user": {"login": "stefanseltmann77", "id": 13016284, "node_id": "MDQ6VXNlcjEzMDE2Mjg0", "avatar_url": "https://avatars2.githubusercontent.com/u/13016284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanseltmann77", "html_url": "https://github.com/stefanseltmann77", "followers_url": "https://api.github.com/users/stefanseltmann77/followers", "following_url": "https://api.github.com/users/stefanseltmann77/following{/other_user}", "gists_url": "https://api.github.com/users/stefanseltmann77/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanseltmann77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanseltmann77/subscriptions", "organizations_url": "https://api.github.com/users/stefanseltmann77/orgs", "repos_url": "https://api.github.com/users/stefanseltmann77/repos", "events_url": "https://api.github.com/users/stefanseltmann77/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanseltmann77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913931, "node_id": "MDU6TGFiZWwzOTQ5MTM5MzE=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-16T09:00:48Z", "updated_at": "2019-09-30T22:06:48Z", "closed_at": "2019-09-30T22:06:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI\u2019m currently using the connector in a project that involves a web-gui based on flask. \r\nIn this application I\u2019m experiencing lags from 150ms to 400ms or even more for each query passed along to the snowflake.\r\nSession pooling is activated by default via the snowflake connector as far as I know. That's also what the log shows.\r\nThe mentioned lags for each query makes the connection to slow for a web UI\r\n\r\nSetup:\r\n- Python 3.6\r\n- Linux-3.10.0-862.14.4.el7.x86_64-x86_64-with-centos-7.5.1804-Core\r\n- SQLAlchemy  1.3.1\r\n- snowflake-sqlalchemy  1.1.12 \r\n- snowflake-connector-python  1.7.10 \r\n\r\nIs there anything that can be done to decrease the lag?\r\nExamples for this lag are in the lines:  531, 630, 658, 697, 731, 769 ... \r\nbasically most of the lines including \"connectionpool\"\r\n\r\nThanks in advance!\r\n\r\n[python_connector.log](https://github.com/snowflakedb/snowflake-sqlalchemy/files/3508824/python_connector.log)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/109", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/109/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/109/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/109", "id": 473079577, "node_id": "MDU6SXNzdWU0NzMwNzk1Nzc=", "number": 109, "title": "Type Synonyms not exported to top-level module", "user": {"login": "jcampbell", "id": 332575, "node_id": "MDQ6VXNlcjMzMjU3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/332575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcampbell", "html_url": "https://github.com/jcampbell", "followers_url": "https://api.github.com/users/jcampbell/followers", "following_url": "https://api.github.com/users/jcampbell/following{/other_user}", "gists_url": "https://api.github.com/users/jcampbell/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcampbell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcampbell/subscriptions", "organizations_url": "https://api.github.com/users/jcampbell/orgs", "repos_url": "https://api.github.com/users/jcampbell/repos", "events_url": "https://api.github.com/users/jcampbell/events{/privacy}", "received_events_url": "https://api.github.com/users/jcampbell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/15", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/15", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/15/labels", "id": 4707502, "node_id": "MDk6TWlsZXN0b25lNDcwNzUwMg==", "number": 15, "title": "v1.1.15", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2019-09-30T22:06:09Z", "updated_at": "2019-10-22T10:21:49Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2019-07-25T21:32:19Z", "updated_at": "2019-10-22T13:49:13Z", "closed_at": "2019-10-22T10:21:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\nPython 3.7.3\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nDarwin-18.7.0-x86_64-i386-64bit\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\n...\r\nsnowflake-connector-python    1.8.5         \r\nsnowflake-sqlalchemy          1.1.13        \r\nSQLAlchemy                    1.3.6  \r\n...\r\n```\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\n```\r\nimport snowflake.sqlalchemy.snowdialect\r\ngetattr(snowflake.sqlalchemy.snowdialect, \"VARCHAR\")  # correctly returns type\r\ngetattr(snowflake.sqlalchemy.snowdialect, \"TEXT\")  # raises AttributeError; fails to reflect snowflake-supported type synonym\r\n```\r\n\r\n5. What did you expect to see?\r\nI expected both statements to return `sqlalchemy.sql.sqltypes.VARCHAR`\r\n\r\n6. What did you see instead?\r\nI see an AttributeError\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\nimport logging\r\nimport os\r\n\r\nfor logger_name in ['snowflake.sqlalchemy', 'snowflake.connector', 'botocore']: \r\n    logger = logging.getLogger(logger_name)\r\n    logger.setLevel(logging.DEBUG)\r\n    ch = logging.StreamHandler()\r\n    ch.setLevel(logging.DEBUG)\r\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\r\n    logger.addHandler(ch)\r\n```\r\nYes; the only logging produced is during the import itself:\r\n```\r\n2019-07-25 17:27:51,642 - MainThread ssl_wrap_socket.py:86 - inject_into_urllib3() - DEBUG - Injecting ssl_wrap_socket_with_ocsp\r\n2019-07-25 17:27:51,654 - MainThread auth.py:66 - <module>() - DEBUG - cache directory: /Users/james/Library/Caches/Snowflake\r\n```\r\n\r\n\r\nsnowdialect.py apears to use the `ischema_names` dict internally for type mapping, but the sqlalchemy docs and norm is to export those items as top-level names in the dialect (see, e.g. postgres docs (recognize it's a \"supported\" and \"included\" dialect): \r\n\r\n> As with all SQLAlchemy dialects, all UPPERCASE types that are known to be valid with PostgreSQL are importable from the top level dialect, whether they originate from sqlalchemy.types or from the local dialect:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/108", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/108/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/108/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/108", "id": 454900917, "node_id": "MDU6SXNzdWU0NTQ5MDA5MTc=", "number": 108, "title": "CSVFormatter class has `FIELD_DELIMETER` spelled incorrectly", "user": {"login": "skapoor-coatue", "id": 48841433, "node_id": "MDQ6VXNlcjQ4ODQxNDMz", "avatar_url": "https://avatars1.githubusercontent.com/u/48841433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skapoor-coatue", "html_url": "https://github.com/skapoor-coatue", "followers_url": "https://api.github.com/users/skapoor-coatue/followers", "following_url": "https://api.github.com/users/skapoor-coatue/following{/other_user}", "gists_url": "https://api.github.com/users/skapoor-coatue/gists{/gist_id}", "starred_url": "https://api.github.com/users/skapoor-coatue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skapoor-coatue/subscriptions", "organizations_url": "https://api.github.com/users/skapoor-coatue/orgs", "repos_url": "https://api.github.com/users/skapoor-coatue/repos", "events_url": "https://api.github.com/users/skapoor-coatue/events{/privacy}", "received_events_url": "https://api.github.com/users/skapoor-coatue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/16", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/16", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/16/labels", "id": 4773409, "node_id": "MDk6TWlsZXN0b25lNDc3MzQwOQ==", "number": 16, "title": "v1.1.14", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2019-10-22T10:24:38Z", "updated_at": "2019-10-22T10:24:47Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-06-11T20:58:46Z", "updated_at": "2019-10-22T10:24:47Z", "closed_at": "2019-10-22T10:24:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)? `Python 3.7.1`\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)? `Darwin-17.7.0-x86_64-i386-64bit`\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\nPackage                            Version    \r\n---------------------------------- -----------\r\n-andas                             0.23.4     \r\nalabaster                          0.7.12     \r\nalembic                            0.9.10     \r\nanaconda-client                    1.7.2      \r\nanaconda-project                   0.8.2      \r\napache-airflow                     1.10.3     \r\napipkg                             1.5        \r\nappdirs                            1.4.3      \r\nappnope                            0.1.0      \r\nappscript                          1.0.1      \r\nAPScheduler                        3.6.0      \r\nasn1crypto                         0.24.0     \r\naspy.yaml                          1.2.0      \r\nastroid                            2.1.0      \r\nastropy                            3.1        \r\natomicwrites                       1.2.1      \r\nattrs                              18.2.0     \r\nawscli                             1.16.134   \r\nazure-common                       1.1.18     \r\nazure-storage-blob                 1.5.0      \r\nazure-storage-common               1.4.0      \r\nBabel                              2.6.0      \r\nbackcall                           0.1.0      \r\nbackoff                            1.8.0      \r\nbackports.os                       0.1.1      \r\nbackports.shutil-get-terminal-size 1.0.0      \r\nbcrypt                             3.1.6      \r\nbeautifulsoup4                     4.6.3      \r\nbitarray                           0.8.3      \r\nbkcharts                           0.2        \r\nblack                              19.3b0     \r\nblaze                              0.11.3     \r\nbleach                             3.0.2      \r\nbokeh                              1.0.2      \r\nboto                               2.49.0     \r\nboto3                              1.9.125    \r\nbotocore                           1.12.125   \r\nBottleneck                         1.2.1      \r\ncached-property                    1.5.1      \r\ncertifi                            2019.3.9   \r\ncffi                               1.11.5     \r\ncfgparse                           1.3        \r\ncfgv                               1.6.0      \r\nchardet                            3.0.4      \r\nClick                              7.0        \r\ncloudpickle                        0.6.1      \r\nclyent                             1.2.2      \r\ncolorama                           0.3.9      \r\nconfigobj                          5.0.6      \r\nconfigparser                       3.5.3      \r\nconfigparser2                      4.0.0      \r\ncontextlib2                        0.5.5      \r\ncoverage                           4.5.3      \r\ncroniter                           0.3.30     \r\ncryptography                       2.4.2      \r\ncycler                             0.10.0     \r\nCython                             0.29.2     \r\ncytoolz                            0.9.0.1    \r\ndask                               1.0.0      \r\ndatashape                          0.5.4      \r\ndecorator                          4.3.0      \r\ndefusedxml                         0.5.0      \r\ndill                               0.2.9      \r\ndistributed                        1.25.1     \r\ndocopt                             0.6.2      \r\ndocutils                           0.14       \r\neditdistance                       0.5.3      \r\nentrypoints                        0.2.3      \r\net-xmlfile                         1.0.1      \r\nexecnet                            1.6.0      \r\nfastcache                          1.0.2      \r\nFicusFramework                     2.9.3.post1\r\nfilelock                           3.0.10     \r\nFlask                              1.0.2      \r\nFlask-Admin                        1.5.3      \r\nFlask-AppBuilder                   1.12.3     \r\nFlask-Babel                        0.12.2     \r\nFlask-Caching                      1.3.3      \r\nFlask-Cors                         3.0.7      \r\nFlask-Login                        0.4.1      \r\nFlask-OpenID                       1.2.5      \r\nFlask-SQLAlchemy                   2.4.0      \r\nflask-swagger                      0.2.13     \r\nFlask-WTF                          0.14.2     \r\nfuncsigs                           1.0.0      \r\nfuture                             0.16.0     \r\ngevent                             1.3.7      \r\ngitdb2                             2.0.5      \r\nGitPython                          2.1.11     \r\nglob2                              0.6        \r\ngmpy2                              2.0.8      \r\ngreenlet                           0.4.15     \r\ngunicorn                           19.9.0     \r\nh5py                               2.8.0      \r\nheapdict                           1.0.0      \r\nHiYaPyCo                           0.4.14     \r\nhtml5lib                           1.0.1      \r\nidentify                           1.4.3      \r\nidna                               2.8        \r\nijson                              2.3        \r\nimageio                            2.4.1      \r\nimagesize                          1.1.0      \r\nimportlib-metadata                 0.17       \r\nipaddress                          1.0.22     \r\nipykernel                          5.1.0      \r\nipython                            7.2.0      \r\nipython-genutils                   0.2.0      \r\nipywidgets                         7.4.2      \r\niso8601                            0.1.12     \r\nisort                              4.3.4      \r\nitsdangerous                       1.1.0      \r\njdcal                              1.4        \r\njedi                               0.13.2     \r\nJinja2                             2.10       \r\njmespath                           0.9.4      \r\njson-merge-patch                   0.2        \r\njsonpath-rw                        1.4.0      \r\njsonschema                         2.6.0      \r\njupyter                            1.0.0      \r\njupyter-client                     5.2.4      \r\njupyter-console                    6.0.0      \r\njupyter-core                       4.4.0      \r\njupyterlab                         0.35.3     \r\njupyterlab-server                  0.2.0      \r\nkeyring                            17.0.0     \r\nkiwisolver                         1.0.1      \r\nlazy-object-proxy                  1.3.1      \r\nlibarchive-c                       2.8        \r\nlief                               0.9.0      \r\nllvmlite                           0.26.0     \r\nlocket                             0.2.0      \r\nlockfile                           0.12.2     \r\nlxml                               4.2.5      \r\nMako                               1.0.10     \r\nMarkdown                           2.6.11     \r\nMarkupSafe                         1.1.0      \r\nmastercard-api-core                1.4.12     \r\nmastercard-sector-insights         1.0.5      \r\nmastercard-spending-pulse          1.0.5      \r\nmatplotlib                         3.0.2      \r\nmccabe                             0.6.1      \r\nmistune                            0.8.4      \r\nmkl-fft                            1.0.6      \r\nmkl-random                         1.0.2      \r\nmore-itertools                     4.3.0      \r\nmpmath                             1.1.0      \r\nmsgpack                            0.5.6      \r\nmultipledispatch                   0.6.0      \r\nmunch                              2.3.2      \r\nnbconvert                          5.4.0      \r\nnbformat                           4.4.0      \r\nnetworkx                           2.2        \r\nnltk                               3.4        \r\nnodeenv                            1.3.3      \r\nnose                               1.3.7      \r\nnose2                              0.9.1      \r\nnotebook                           5.7.4      \r\nnumba                              0.41.0     \r\nnumexpr                            2.6.8      \r\nnumpy                              1.15.4     \r\nnumpydoc                           0.8.0      \r\noauthlib                           3.0.1      \r\nodo                                0.5.1      \r\nolefile                            0.46       \r\nopenpyxl                           2.5.12     \r\nordereddict                        1.1        \r\npackaging                          18.0       \r\npandas                             0.24.2     \r\npandocfilters                      1.4.2      \r\nparameterized                      0.7.0      \r\nparamiko                           2.4.2      \r\nparso                              0.3.1      \r\npartd                              0.3.9      \r\npath.py                            11.5.0     \r\npathlib2                           2.3.3      \r\npatsy                              0.5.1      \r\npeewee                             3.9.5      \r\npendulum                           1.4.4      \r\npep8                               1.7.1      \r\npexpect                            4.6.0      \r\npickleshare                        0.7.5      \r\npigar                              0.9.2      \r\nPillow                             5.3.0      \r\npip                                19.1.1     \r\npipdeptree                         0.13.2     \r\npipreqs                            0.4.9      \r\npkginfo                            1.4.2      \r\npluggy                             0.12.0     \r\nply                                3.11       \r\npre-commit                         1.16.1     \r\nprettytable                        0.7.2      \r\nprometheus-client                  0.5.0      \r\nprompt-toolkit                     2.0.7      \r\npsutil                             5.4.8      \r\npsycopg2                           2.8.2      \r\nptyprocess                         0.6.0      \r\npy                                 1.7.0      \r\npy-eureka-client                   0.5.7      \r\npyasn1                             0.4.5      \r\npycodestyle                        2.4.0      \r\npycosat                            0.6.3      \r\npycparser                          2.19       \r\npycrypto                           2.6.1      \r\npycryptodomex                      3.8.0      \r\npycurl                             7.43.0.2   \r\npyflakes                           2.0.0      \r\nPygments                           2.3.1      \r\npyhocon                            0.3.51     \r\nPyJWT                              1.7.1      \r\npylint                             2.2.2      \r\nPyNaCl                             1.3.0      \r\npyodbc                             4.0.25     \r\npyOpenSSL                          18.0.0     \r\npyparsing                          2.3.0      \r\npysftp                             0.2.8      \r\nPySocks                            1.6.8      \r\npytest                             4.5.0      \r\npytest-arraydiff                   0.3        \r\npytest-astropy                     0.5.0      \r\npytest-doctestplus                 0.2.0      \r\npytest-forked                      1.0.2      \r\npytest-openfiles                   0.3.1      \r\npytest-parallel                    0.0.9      \r\npytest-remotedata                  0.3.1      \r\npytest-xdist                       1.28.0     \r\npython-daemon                      2.1.2      \r\npython-dateutil                    2.7.5      \r\npython-editor                      1.0.4      \r\npython3-openid                     3.1.0      \r\npytz                               2018.7     \r\npytzdata                           2019.1     \r\nPyWavelets                         1.0.1      \r\nPyYAML                             3.13       \r\npyzmq                              17.1.2     \r\nQtAwesome                          0.5.3      \r\nqtconsole                          4.4.3      \r\nQtPy                               1.5.2      \r\nratelimit                          2.2.1      \r\nreaderwriterlock                   1.0.3      \r\nrequests                           2.21.0     \r\nrequests-oauthlib                  1.2.0      \r\nrope                               0.11.0     \r\nrsa                                3.4.2      \r\nruamel-yaml                        0.15.46    \r\ns3transfer                         0.2.0      \r\nscikit-image                       0.14.1     \r\nscikit-learn                       0.20.1     \r\nscipy                              1.1.0      \r\nseaborn                            0.9.0      \r\nsemantics3                         0.3.9      \r\nSend2Trash                         1.5.0      \r\nsetproctitle                       1.1.10     \r\nsetuptools                         40.6.3     \r\nsimplegeneric                      0.8.1      \r\nsingledispatch                     3.4.0.3    \r\nsix                                1.12.0     \r\nsmmap2                             2.0.5      \r\nsnowballstemmer                    1.2.1      \r\nsnowflake-connector-python         1.7.9      \r\nsnowflake-sqlalchemy               1.1.13     \r\nsortedcollections                  1.0.1      \r\nsortedcontainers                   2.1.0      \r\nSphinx                             1.8.2      \r\nsphinxcontrib-websupport           1.1.0      \r\nspyder                             3.3.2      \r\nspyder-kernels                     0.3.0      \r\nSQLAlchemy                         1.2.15     \r\nsqlparse                           0.3.0      \r\nstatsmodels                        0.9.0      \r\nsympy                              1.3        \r\ntables                             3.4.4      \r\ntabulate                           0.8.3      \r\ntblib                              1.3.2      \r\ntenacity                           4.12.0     \r\nterminado                          0.8.1      \r\ntestpath                           0.4.2      \r\ntext-unidecode                     1.2        \r\nthrift                             0.11.0     \r\ntoml                               0.10.0     \r\ntoolz                              0.9.0      \r\ntornado                            5.1.1      \r\ntqdm                               4.28.1     \r\ntraitlets                          4.3.2      \r\ntzlocal                            1.5.1      \r\nunicodecsv                         0.14.1     \r\nurl-normalize                      1.4.1      \r\nurllib3                            1.24.1     \r\nvirtualenv                         16.5.0     \r\nwcwidth                            0.1.7      \r\nwebencodings                       0.5.1      \r\nWerkzeug                           0.14.1     \r\nwheel                              0.32.3     \r\nwidgetsnbextension                 3.4.2      \r\nwrapt                              1.10.11    \r\nWTForms                            2.2.1      \r\nwurlitzer                          1.0.2      \r\nxlrd                               1.2.0      \r\nXlsxWriter                         1.1.2      \r\nxlwings                            0.15.1     \r\nxlwt                               1.3.0      \r\nyarg                               0.1.9      \r\nzict                               0.1.3      \r\nzipp                               0.5.1      \r\nzope.deprecation                   4.4.0\r\n```\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n```python\r\nfrom snowflake.sqlalchemy import (CSVFormatter)\r\nCSVFormatter().field_delimeter(',').escape(None).null_if(['null', 'Null'])\r\nOut[4]: FILE_FORMAT=(TYPE=csv FIELD_DELIMETER = ',' ESCAPE = None NULL_IF = ('null', 'Null'))\r\n```\r\n\r\n5. What did you expect to see?\r\n```python\r\nFILE_FORMAT=(TYPE=csv FIELD_DELIMITER = ',' ESCAPE = None NULL_IF = ('null', 'Null'))\r\n```\r\n\r\n6. What did you see instead?\r\nIt should be `FIELD_DELIMITER` not `FIELD_DELIMETER`\r\nSee: https://docs.snowflake.net/manuals/sql-reference/sql/create-file-format.html\r\n```python\r\nFILE_FORMAT=(TYPE=csv FIELD_DELIMETER = ',' ESCAPE = None NULL_IF = ('null', 'Null'))\r\n```\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\nimport logging\r\nimport os\r\n\r\nfor logger_name in ['snowflake.sqlalchemy', 'snowflake.connector', 'botocore']: \r\n    logger = logging.getLogger(logger_name)\r\n    logger.setLevel(logging.DEBUG)\r\n    ch = logging.StreamHandler()\r\n    ch.setLevel(logging.DEBUG)\r\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\r\n    logger.addHandler(ch)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/99", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/99/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/99/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/99", "id": 443528999, "node_id": "MDU6SXNzdWU0NDM1Mjg5OTk=", "number": 99, "title": "CopyInto's maxfilesize method expects a bool instead of an int", "user": {"login": "colemandsmith", "id": 22803121, "node_id": "MDQ6VXNlcjIyODAzMTIx", "avatar_url": "https://avatars2.githubusercontent.com/u/22803121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colemandsmith", "html_url": "https://github.com/colemandsmith", "followers_url": "https://api.github.com/users/colemandsmith/followers", "following_url": "https://api.github.com/users/colemandsmith/following{/other_user}", "gists_url": "https://api.github.com/users/colemandsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/colemandsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colemandsmith/subscriptions", "organizations_url": "https://api.github.com/users/colemandsmith/orgs", "repos_url": "https://api.github.com/users/colemandsmith/repos", "events_url": "https://api.github.com/users/colemandsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/colemandsmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/14", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/14", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/14/labels", "id": 4325909, "node_id": "MDk6TWlsZXN0b25lNDMyNTkwOQ==", "number": 14, "title": "v1.1.13", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2019-05-17T20:53:41Z", "updated_at": "2019-05-17T22:44:34Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2019-05-13T18:00:46Z", "updated_at": "2019-05-17T20:54:59Z", "closed_at": "2019-05-17T20:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\nPython 3.6.8 :: Anaconda, Inc.\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nDarwin-18.5.0-x86_64-i386-64bit\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\nsnowflake-connector-python 1.7.11\r\nsnowflake-sqlalchemy 1.1.12\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\nFor a `CopyInto` object I made, I tried to set the maxfilesize to 50 MB (int value of 50000000) like so:\r\n\r\n```\r\nunload_stmt = CopyInto(table, bucket, formatter) \r\nunload_stmt.maxfilesize(50000000)\r\n```\r\n\r\nThis was based on my understanding of the [snowflake docs](https://docs.snowflake.net/manuals/sql-reference/sql/copy-into-location.html#label-copy-into-location-copyoptions) that CSVs could be set to have a max file size in a `COPY INTO` statement.\r\n\r\n5. What did you expect to see?\r\n\r\nI expected to have the copy option set properly such that when this is compiled. `MAX_FILE_SIZE=50000000` appears in the generated SQL.\r\n\r\n6. What did you see instead?\r\n\r\nan error:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-44-783ee63d0133> in <module>\r\n----> 1 unload_stmt.maxfilesize(50000000)\r\n\r\n~/miniconda3/envs/civis36/lib/python3.6/site-packages/snowflake/sqlalchemy/custom_commands.py in maxfilesize(self, max_size)\r\n    118     def maxfilesize(self, max_size):\r\n    119         if not isinstance(max_size, bool):\r\n--> 120             raise TypeError(\"Parameter max_size should  be a boolean value\")\r\n    121         self.copy_options.update({'MAX_FILE_SIZE': translate_bool(max_size)})\r\n    122 \r\n\r\nTypeError: Parameter max_size should  be a boolean value\r\n```\r\n\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\nimport logging\r\nimport os\r\n\r\nfor logger_name in ['snowflake.sqlalchemy', 'snowflake.connector', 'botocore']: \r\n    logger = logging.getLogger(logger_name)\r\n    logger.setLevel(logging.DEBUG)\r\n    ch = logging.StreamHandler()\r\n    ch.setLevel(logging.DEBUG)\r\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\r\n    logger.addHandler(ch)\r\n```\r\nI believe this is unnecessary; see error.\r\n______\r\n\r\nThe issue arises from [the maxfilesize method](https://github.com/snowflakedb/snowflake-sqlalchemy/blob/3741cd0363e1c08c0b5f73c8207e8be72a778f17/custom_commands.py#L118) on CopyInto. I believe this is a typo that may have arisen from going off the previous configs, which expect booleans.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/98", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/98/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/98/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/98", "id": 442961073, "node_id": "MDU6SXNzdWU0NDI5NjEwNzM=", "number": 98, "title": "Table inspector unable to get columns for table with period in name", "user": {"login": "villebro", "id": 33317356, "node_id": "MDQ6VXNlcjMzMzE3MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/33317356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villebro", "html_url": "https://github.com/villebro", "followers_url": "https://api.github.com/users/villebro/followers", "following_url": "https://api.github.com/users/villebro/following{/other_user}", "gists_url": "https://api.github.com/users/villebro/gists{/gist_id}", "starred_url": "https://api.github.com/users/villebro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villebro/subscriptions", "organizations_url": "https://api.github.com/users/villebro/orgs", "repos_url": "https://api.github.com/users/villebro/repos", "events_url": "https://api.github.com/users/villebro/events{/privacy}", "received_events_url": "https://api.github.com/users/villebro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-05-11T06:46:49Z", "updated_at": "2020-04-06T19:19:45Z", "closed_at": "2020-04-06T19:19:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a fairly minor bug as it isn't exactly best practice to include periods in table names, but as Snowflake supports periods in table names I think this should also work in `snowflake-sqlalchemy`. I ran into this when testing a new feature in Apache Superset for Apache Drill, where periods in table names are common.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n`3.7.2`\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n`Darwin-18.5.0-x86_64-i386-64bit`\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\nPackage                    Version    \r\n-------------------------- -----------\r\nalembic                    1.0.8      \r\namqp                       2.4.2      \r\napispec                    1.2.0      \r\nasn1crypto                 0.24.0     \r\nastroid                    2.2.5      \r\nattrs                      19.1.0     \r\nazure-common               1.1.18     \r\nazure-storage-blob         1.5.0      \r\nazure-storage-common       1.4.0      \r\nBabel                      2.6.0      \r\nbilliard                   3.5.0.5    \r\nbleach                     3.1.0      \r\nboto3                      1.4.7      \r\nbotocore                   1.7.48     \r\ncachetools                 3.1.0      \r\ncchardet                   2.1.4      \r\ncelery                     4.2.2      \r\ncertifi                    2019.3.9   \r\ncffi                       1.12.2     \r\nchardet                    3.0.4      \r\nclick                      6.7        \r\ncolorama                   0.4.1      \r\ncontextlib2                0.5.5      \r\ncroniter                   0.3.29     \r\ncryptography               2.6.1      \r\ncx-Oracle                  7.1.2      \r\ndecorator                  4.4.0      \r\ndefusedxml                 0.5.0      \r\ndocutils                   0.14       \r\net-xmlfile                 1.0.1      \r\nfilelock                   3.0.10     \r\nFlask                      1.0.2      \r\nFlask-AppBuilder           1.12.5     \r\nFlask-Babel                0.12.2     \r\nFlask-Caching              1.6.0      \r\nFlask-Compress             1.4.0      \r\nFlask-Cors                 3.0.7      \r\nFlask-JWT-Extended         3.18.1     \r\nFlask-Login                0.4.1      \r\nFlask-Migrate              2.4.0      \r\nFlask-OpenID               1.2.5      \r\nFlask-Script               2.0.6      \r\nFlask-SQLAlchemy           2.3.2      \r\nflask-talisman             0.6.0      \r\nFlask-Testing              0.7.1      \r\nFlask-WTF                  0.14.2     \r\nflower                     0.9.2      \r\nfuture                     0.17.1     \r\ngeographiclib              1.49       \r\ngeopy                      1.19.0     \r\ngevent                     1.4.0      \r\ngoogle-api-core            1.9.0      \r\ngoogle-auth                1.6.3      \r\ngoogle-auth-oauthlib       0.3.0      \r\ngoogle-cloud-bigquery      1.11.2     \r\ngoogle-cloud-core          0.29.1     \r\ngoogle-resumable-media     0.3.2      \r\ngoogleapis-common-protos   1.5.9      \r\ngreenlet                   0.4.15     \r\ngunicorn                   19.9.0     \r\nhumanize                   0.5.1      \r\nidna                       2.8        \r\nijson                      2.3        \r\nisodate                    0.6.0      \r\nisort                      4.3.17     \r\nitsdangerous               1.1.0      \r\njdcal                      1.4        \r\nJinja2                     2.10       \r\njmespath                   0.9.4      \r\nJPype1                     0.6.3      \r\njsonlines                  1.2.0      \r\njsonschema                 3.0.1      \r\nkombu                      4.3.0      \r\nlazy-object-proxy          1.3.1      \r\nlinear-tsv                 1.1.0      \r\nMako                       1.0.8      \r\nMarkdown                   3.1        \r\nMarkupSafe                 1.1.1      \r\nmarshmallow                2.19.2     \r\nmarshmallow-enum           1.4.1      \r\nmarshmallow-sqlalchemy     0.16.2     \r\nmccabe                     0.6.1      \r\nmypy                       0.701      \r\nmypy-extensions            0.4.1      \r\nmysql                      0.0.2      \r\nmysql-client               0.0.1      \r\nmysqlclient                1.4.2.post1\r\nnose                       1.3.7      \r\nnumpy                      1.16.2     \r\noauthlib                   3.0.1      \r\nopenpyxl                   2.4.11     \r\npandas                     0.23.4     \r\npandas-gbq                 0.10.0     \r\nparsedatetime              2.4        \r\npathlib2                   2.3.3      \r\npip                        19.0.3     \r\npip-tools                  3.5.0      \r\npluggy                     0.9.0      \r\npolyline                   1.3.2      \r\nprison                     0.1.0      \r\nprotobuf                   3.7.1      \r\npsycopg2                   2.7.7      \r\npy                         1.8.0      \r\npyasn1                     0.4.5      \r\npyasn1-modules             0.2.4      \r\nPyAthenaJDBC               1.3.4      \r\npybigquery                 0.4.10     \r\npycparser                  2.19       \r\npycryptodomex              3.8.0      \r\npydata-google-auth         0.1.3      \r\npydruid                    0.5.2      \r\nPyHive                     0.5.1      \r\nPyJWT                      1.7.1      \r\npylint                     2.3.1      \r\npyOpenSSL                  19.0.0     \r\npyrsistent                 0.14.11    \r\npython-dateutil            2.8.0      \r\npython-editor              1.0.4      \r\npython-geohash             0.8.5      \r\npython-ldap                3.2.0      \r\npython3-openid             3.1.0      \r\npytz                       2018.9     \r\nPyYAML                     5.1        \r\nredis                      3.2.1      \r\nrequests                   2.21.0     \r\nrequests-oauthlib          1.2.0      \r\nretry                      0.9.2      \r\nrfc3986                    1.2.0      \r\nrsa                        4.0        \r\ns3transfer                 0.1.13     \r\nsasl                       0.2.1      \r\nselenium                   3.141.0    \r\nsetuptools                 40.8.0     \r\nsimplejson                 3.16.0     \r\nsix                        1.12.0     \r\nsnowflake-connector-python 1.7.9      \r\nsnowflake-sqlalchemy       1.1.12     \r\nSQLAlchemy                 1.3.1      \r\nsqlalchemy-redshift        0.7.3      \r\nSQLAlchemy-Utils           0.33.11    \r\nsqlparse                   0.3.0      \r\ntableschema                1.1.0      \r\ntabulator                  1.19.0     \r\nthrift                     0.11.0     \r\nthrift-sasl                0.3.0      \r\ntoml                       0.10.0     \r\ntornado                    6.0.2      \r\ntox                        3.7.0      \r\ntyped-ast                  1.3.4      \r\nunicodecsv                 0.14.1     \r\nUnidecode                  1.0.22     \r\nurllib3                    1.24.1     \r\nvine                       1.3.0      \r\nvirtualenv                 16.4.3     \r\nwebencodings               0.5.1      \r\nWerkzeug                   0.15.1     \r\nwheel                      0.33.1     \r\nwrapt                      1.11.1     \r\nWTForms                    2.2.1      \r\nWTForms-JSON               0.3.3      \r\nxlrd                       1.2.0 \r\n```\r\n\r\n4. What did you do?\r\nThe SQLAlchemy inspector is unable to return columns when calling `inspector.get_columns('table.name', 'schema')`. Apparently necessary quoting rules are not applied. More specifically the error arises when `reflection.py` calls\r\n```python\r\ndialect.get_columns(\r\n            self.bind, table_name, schema, info_cache=self.info_cache, **kw\r\n        )\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/97", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/97/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/97/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/97", "id": 442796194, "node_id": "MDU6SXNzdWU0NDI3OTYxOTQ=", "number": 97, "title": "CopyInto statement doesn't compile correctly when the source is storage and the destination is a table", "user": {"login": "colemandsmith", "id": 22803121, "node_id": "MDQ6VXNlcjIyODAzMTIx", "avatar_url": "https://avatars2.githubusercontent.com/u/22803121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colemandsmith", "html_url": "https://github.com/colemandsmith", "followers_url": "https://api.github.com/users/colemandsmith/followers", "following_url": "https://api.github.com/users/colemandsmith/following{/other_user}", "gists_url": "https://api.github.com/users/colemandsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/colemandsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colemandsmith/subscriptions", "organizations_url": "https://api.github.com/users/colemandsmith/orgs", "repos_url": "https://api.github.com/users/colemandsmith/repos", "events_url": "https://api.github.com/users/colemandsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/colemandsmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/14", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/14", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/14/labels", "id": 4325909, "node_id": "MDk6TWlsZXN0b25lNDMyNTkwOQ==", "number": 14, "title": "v1.1.13", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2019-05-17T20:53:41Z", "updated_at": "2019-05-17T22:44:34Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-05-10T16:18:43Z", "updated_at": "2019-05-17T20:55:26Z", "closed_at": "2019-05-17T20:55:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\nPython 3.6.8 :: Anaconda, Inc.\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nDarwin-18.5.0-x86_64-i386-64bit\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\nsnowflake-connector-python   1.7.11  \r\nsnowflake-sqlalchemy               1.1.12\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\nI was trying to use the CopyInto command in order to copy from a table to S3. From my understanding this should be possible since the `COPY INTO` syntax in Snowflake seems to go both ways (tables -> storage and storage -> tables). However, the table name becomes blank when trying to use this. As an example from your test suite:\r\n```\r\nfood_items = Table(\"python_tests_foods\", meta,\r\n                       Column('id', Integer, Sequence('new_user_id_seq'), primary_key=True),\r\n                       Column('name', String),\r\n                       Column('quantity', Integer))\r\n# fake key of course\r\nstorage = AWSBucket.from_uri('s3://backup').encryption_aws_sse_kms(\r\n                                      '1234abcd-12ab-34cd-56ef-1234567890ab')\r\n# this works\r\nCopyInto(from_=food_items, into=storage, formatter=CSVFormatter()).compile(dialect=SnowflakeDialect()).string\r\n\r\n# generates \"COPY INTO 's3://foo/bar' FROM python_tests_foods FILE_FORMAT=(TYPE=csv) ENCRYPTION=(TYPE='AWS_SSE_KMS' KMS_KEY_ID='1234abcd-12ab-34cd-56ef-1234567890ab')\"\r\n\r\n# this does not work\r\nCopyInto(from_=storage, into=food_items, formatter=CSVFormatter()).compile(dialect=SnowflakeDialect()).string\r\n\r\n# generates 'COPY INTO  FROM ((\"\\'s3://foo/bar\\'\", \\'\\', \"ENCRYPTION=(TYPE=\\'AWS_SSE_KMS\\' KMS_KEY_ID=\\'1234abcd-12ab-34cd-56ef-1234567890ab\\')\")) FILE_FORMAT=(TYPE=csv)'\r\n```\r\n\r\n5. What did you expect to see?\r\n\r\nI would expect to see something like:\r\n`\"COPY INTO python_tests_foods FROM  's3://foo/bar' FILE_FORMAT=(TYPE=csv) ENCRYPTION=(TYPE='AWS_SSE_KMS' KMS_KEY_ID='1234abcd-12ab-34cd-56ef-1234567890ab')\"`\r\n\r\n6. What did you see instead?\r\n\r\n`'COPY INTO  FROM ((\"\\'s3://foo/bar\\'\", \\'\\', \"ENCRYPTION=(TYPE=\\'AWS_SSE_KMS\\' KMS_KEY_ID=\\'1234abcd-12ab-34cd-56ef-1234567890ab\\')\")) FILE_FORMAT=(TYPE=csv)'`\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n```\r\nimport logging\r\nimport os\r\n\r\nfor logger_name in ['snowflake.sqlalchemy', 'snowflake.connector', 'botocore']: \r\n    logger = logging.getLogger(logger_name)\r\n    logger.setLevel(logging.DEBUG)\r\n    ch = logging.StreamHandler()\r\n    ch.setLevel(logging.DEBUG)\r\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\r\n    logger.addHandler(ch)\r\n```\r\n\r\nI don't see any log output here.\r\n\r\n______\r\nI know that `CopyInto` is aliased to `CopyIntoStorage` and seems like the intended path is from Snowflake -> S3/Azure, but I am somewhat surprised that going the other way does not work considering the original method is named generically `CopyInto`.\r\n\r\nThe origins lies in [the SnowflakeCompiler class](https://github.com/snowflakedb/snowflake-sqlalchemy/blob/3741cd0363e1c08c0b5f73c8207e8be72a778f17/base.py#L180), which seems to assume that only `_from` can be a table. \r\n\r\nIf I'm missing some important step, I would greatly appreciate if someone could point me in the right direction. If not, though, I would hope that this is something that could be addressed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/96", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/96/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/96/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/96", "id": 441647696, "node_id": "MDU6SXNzdWU0NDE2NDc2OTY=", "number": 96, "title": "The schema, database parts of the database URL are being *ignored* for a new connection at least under circumstances:", "user": {"login": "ztane", "id": 704200, "node_id": "MDQ6VXNlcjcwNDIwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/704200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ztane", "html_url": "https://github.com/ztane", "followers_url": "https://api.github.com/users/ztane/followers", "following_url": "https://api.github.com/users/ztane/following{/other_user}", "gists_url": "https://api.github.com/users/ztane/gists{/gist_id}", "starred_url": "https://api.github.com/users/ztane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ztane/subscriptions", "organizations_url": "https://api.github.com/users/ztane/orgs", "repos_url": "https://api.github.com/users/ztane/repos", "events_url": "https://api.github.com/users/ztane/events{/privacy}", "received_events_url": "https://api.github.com/users/ztane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-08T09:49:59Z", "updated_at": "2019-05-17T20:56:05Z", "closed_at": "2019-05-17T20:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using 3.6.7; Linux-4.15.0-47-generic-x86_64-with-Ubuntu-18.04-bionic; packages\r\n```\r\nPackage                    Version \r\n-------------------------- --------\r\nasn1crypto                 0.24.0  \r\nazure-common               1.1.20  \r\nazure-storage-blob         1.5.0   \r\nazure-storage-common       1.4.0   \r\nboto3                      1.9.144 \r\nbotocore                   1.12.144\r\ncertifi                    2019.3.9\r\ncffi                       1.12.3  \r\nchardet                    3.0.4   \r\ncryptography               2.6.1   \r\ndocutils                   0.14    \r\nfuture                     0.17.1  \r\nidna                       2.8     \r\nijson                      2.3     \r\njmespath                   0.9.4   \r\npip                        19.1.1  \r\npkg-resources              0.0.0   \r\npycparser                  2.19    \r\npycryptodomex              3.8.1   \r\nPyJWT                      1.7.1   \r\npyOpenSSL                  19.0.0  \r\npython-dateutil            2.8.0   \r\npytz                       2019.1  \r\nrequests                   2.21.0  \r\ns3transfer                 0.2.0   \r\nsetuptools                 41.0.1  \r\nsix                        1.12.0  \r\nsnowflake-connector-python 1.7.11  \r\nsnowflake-sqlalchemy       1.1.12  \r\nSQLAlchemy                 1.3.3   \r\nurllib3                    1.24.3  \r\nwheel                      0.33.1  \r\n```\r\n\r\nI am running the following code:\r\n\r\n```\r\nfrom snowflake.sqlalchemy import URL\r\nfrom sqlalchemy import create_engine\r\n\r\nurl = URL(\r\n    account='account.region',\r\n    user='user',\r\n    password='swordfish',\r\n    role='testing',\r\n    database='invalid_dbname',\r\n    warehouse='the_wh',\r\n    schema='public',\r\n)\r\nprint(url)\r\n\r\nengine = create_engine(url)\r\n\r\nconnect = engine.connect()\r\nprint(*connect.execute('select current_version()').fetchone())\r\nprint(*connect.execute('select current_database()').fetchone())\r\nprint(*connect.execute('select current_schema()').fetchone())\r\n```\r\n\r\nExpected output: exception for trying to connect to a database that does not exist\r\n\r\nActual output\r\n\r\n```\r\nsnowflake://user:swordfish@account.region/dbname/public?role=testing&warehouse=the_wh\r\n3.23.1\r\nNone\r\nNone\r\n```\r\n\r\nExpectation would be an *exception would have been raised*. Instead, everything succeeds, and None is printed for last 2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/93", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/93/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/93/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/93", "id": 435583976, "node_id": "MDU6SXNzdWU0MzU1ODM5NzY=", "number": 93, "title": "Retrieving column metadata for columns of type `float` returns error", "user": {"login": "clausherther", "id": 7342749, "node_id": "MDQ6VXNlcjczNDI3NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7342749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clausherther", "html_url": "https://github.com/clausherther", "followers_url": "https://api.github.com/users/clausherther/followers", "following_url": "https://api.github.com/users/clausherther/following{/other_user}", "gists_url": "https://api.github.com/users/clausherther/gists{/gist_id}", "starred_url": "https://api.github.com/users/clausherther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clausherther/subscriptions", "organizations_url": "https://api.github.com/users/clausherther/orgs", "repos_url": "https://api.github.com/users/clausherther/repos", "events_url": "https://api.github.com/users/clausherther/events{/privacy}", "received_events_url": "https://api.github.com/users/clausherther/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-22T03:17:40Z", "updated_at": "2019-04-22T03:24:12Z", "closed_at": "2019-04-22T03:24:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Querying column metadata for Snowflake tables containing a column of type `float` returns the error below. This is also true when connecting using the `cache_column_metadata=True` option.\r\n\r\n```\r\nPython 3.6.7\r\nOS: MacOS\r\nSql Alchemy version: 1.3.1\r\nSnowflake Sql Alchemy version: 1.1.3\r\n```\r\n\r\n```python\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.engine import reflection\r\nfrom snowflake.sqlalchemy import URL\r\n\r\nengine = create_engine(URL(\r\n    account = 'myaccount',\r\n    user = 'myuser',\r\n    password = 'mypassword',\r\n    database = 'mydb',\r\n    schema = 'myschema',\r\n    warehouse = 'WH',\r\n    role='SYSADMIN',\r\n    numpy=True,\r\n))\r\n\r\ninsp = reflection.Inspector.from_engine(engine)\r\n\r\nfor t in insp.get_table_names(schema=schema):\r\n\r\n    print(t) \r\n    column_metadata = insp.get_columns(t, schema)\r\n\r\n    for c in column_metadata:\r\n        print(\"\\t- \", c[\"name\"])\r\n```\r\n\r\n`__init__() got an unexpected keyword argument 'scale'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/92", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/92/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/92/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/92", "id": 431556069, "node_id": "MDU6SXNzdWU0MzE1NTYwNjk=", "number": 92, "title": "Too long inserts attempted (maximum number of expressions in a list exceeded, expected at most 16,384, got 98,508)", "user": {"login": "ztane", "id": 704200, "node_id": "MDQ6VXNlcjcwNDIwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/704200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ztane", "html_url": "https://github.com/ztane", "followers_url": "https://api.github.com/users/ztane/followers", "following_url": "https://api.github.com/users/ztane/following{/other_user}", "gists_url": "https://api.github.com/users/ztane/gists{/gist_id}", "starred_url": "https://api.github.com/users/ztane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ztane/subscriptions", "organizations_url": "https://api.github.com/users/ztane/orgs", "repos_url": "https://api.github.com/users/ztane/repos", "events_url": "https://api.github.com/users/ztane/events{/privacy}", "received_events_url": "https://api.github.com/users/ztane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913928, "node_id": "MDU6TGFiZWwzOTQ5MTM5Mjg=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/13", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/13", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/13/labels", "id": 4290513, "node_id": "MDk6TWlsZXN0b25lNDI5MDUxMw==", "number": 13, "title": "v1.7.11", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2019-05-07T01:18:19Z", "updated_at": "2019-05-07T01:19:46Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2019-04-10T15:04:31Z", "updated_at": "2020-05-27T12:16:45Z", "closed_at": "2019-05-07T01:18:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\nPython 3.6.7\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nLinux-4.15.0-46-generic-x86_64-with-Ubuntu-18.04-bionic\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\n```\r\nasn1crypto (0.24.0)\r\nazure-common (1.1.18)\r\nazure-storage-blob (1.5.0)\r\nazure-storage-common (1.4.0)\r\nboto3 (1.9.130)\r\nbotocore (1.12.130)\r\ncertifi (2019.3.9)\r\ncffi (1.12.2)\r\nchardet (3.0.4)\r\ncryptography (2.6.1)\r\ndocutils (0.14)\r\nfuture (0.17.1)\r\nidna (2.8)\r\nijson (2.3)\r\ninflect (2.1.0)\r\njmespath (0.9.4)\r\npip (9.0.1)\r\npkg-resources (0.0.0)\r\npsycopg2 (2.8.1)\r\npycparser (2.19)\r\npycryptodomex (3.8.1)\r\nPyJWT (1.7.1)\r\npyOpenSSL (19.0.0)\r\npython-dateutil (2.8.0)\r\npytz (2018.9)\r\nrequests (2.21.0)\r\ns3transfer (0.2.0)\r\nsetuptools (39.0.1)\r\nsix (1.12.0)\r\nsnowflake-connector-python (1.7.10)\r\nsnowflake-sqlalchemy (1.1.11)\r\nsqlacodegen (2.0.1)\r\nSQLAlchemy (1.3.2)\r\nurllib3 (1.24.1)\r\n```\r\n\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\nAdd a sizable number of ORM objects (in the ten-thousand range with 12 columns each) into Session, then flush-commit in one go\r\n\r\n5. What did you expect to see?\r\n\r\nThings working\r\n\r\n6. What did you see instead?\r\n\r\nsqlalchemy.exc.ProgrammingError: (snowflake.connector.errors.ProgrammingError) 001795 (42601): 018b6efe-0063-7ca9-0000-00001d29a0a9: SQL compilation error: error line 1 at position 344\r\nmaximum number of expressions in a list exceeded, expected at most 16,384, got 98,508\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\nToo much data\r\n\r\n--- \r\n\r\nThe error has been detailed in the Connector issue https://github.com/snowflakedb/snowflake-connector-python/issues/37 - the \"solution\" is setting `snowflake.connector.paramstyle = 'qmark'`. This should be the setting that SQLAlchemy connections *should* use to avoid the spurious errors. \r\n\r\nOTOH it can be seen as an error in the Connector, as https://github.com/snowflakedb/snowflake-connector-python/blob/5be6b8c6531aac7c2ca3858be784c5f5f714a0e4/cursor.py#L688  should be aware of the limitation and do only maximum of 16384 per one `conn.execute` invocation!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/90", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/90/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/90/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/90", "id": 429532731, "node_id": "MDU6SXNzdWU0Mjk1MzI3MzE=", "number": 90, "title": "Comments missing from reflected tables", "user": {"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913926, "node_id": "MDU6TGFiZWwzOTQ5MTM5MjY=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-04-05T00:06:56Z", "updated_at": "2019-04-05T20:35:47Z", "closed_at": "2019-04-05T20:35:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As described [here](https://stackoverflow.com/questions/55412332/snowflake-sqlalchemy-cant-inspect-column-comments) `snowflake-sqlalchemy` does not seem to retrieve comments of column when reflecting tables.\r\n\r\nIt seems like we retrieve the comments, but then discard it along the way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/89", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/89/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/89/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/89", "id": 426322422, "node_id": "MDU6SXNzdWU0MjYzMjI0MjI=", "number": 89, "title": "Passing session parameters to engine/session", "user": {"login": "villebro", "id": 33317356, "node_id": "MDQ6VXNlcjMzMzE3MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/33317356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villebro", "html_url": "https://github.com/villebro", "followers_url": "https://api.github.com/users/villebro/followers", "following_url": "https://api.github.com/users/villebro/following{/other_user}", "gists_url": "https://api.github.com/users/villebro/gists{/gist_id}", "starred_url": "https://api.github.com/users/villebro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villebro/subscriptions", "organizations_url": "https://api.github.com/users/villebro/orgs", "repos_url": "https://api.github.com/users/villebro/repos", "events_url": "https://api.github.com/users/villebro/events{/privacy}", "received_events_url": "https://api.github.com/users/villebro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913931, "node_id": "MDU6TGFiZWwzOTQ5MTM5MzE=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-28T06:35:19Z", "updated_at": "2019-03-29T16:54:57Z", "closed_at": "2019-03-29T16:54:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to pass session parameters to `snowflake-sqlalchemy`? Specifically I would like to override the account setting for `QUOTED_IDENTIFIERS_IGNORE_CASE`, but possibly other settings, too. I tried poking at the `URL`, `engine_params` and `metadata_params` but wasn't able to change the default settings. All help much appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/86", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/86/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/86/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/86", "id": 423761628, "node_id": "MDU6SXNzdWU0MjM3NjE2Mjg=", "number": 86, "title": "snowflake-sqlalchemy breaks table creation with indices for all dialects", "user": {"login": "micaelbergeron", "id": 991233, "node_id": "MDQ6VXNlcjk5MTIzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/991233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micaelbergeron", "html_url": "https://github.com/micaelbergeron", "followers_url": "https://api.github.com/users/micaelbergeron/followers", "following_url": "https://api.github.com/users/micaelbergeron/following{/other_user}", "gists_url": "https://api.github.com/users/micaelbergeron/gists{/gist_id}", "starred_url": "https://api.github.com/users/micaelbergeron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micaelbergeron/subscriptions", "organizations_url": "https://api.github.com/users/micaelbergeron/orgs", "repos_url": "https://api.github.com/users/micaelbergeron/repos", "events_url": "https://api.github.com/users/micaelbergeron/events{/privacy}", "received_events_url": "https://api.github.com/users/micaelbergeron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913926, "node_id": "MDU6TGFiZWwzOTQ5MTM5MjY=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keller00", "id": 8452750, "node_id": "MDQ6VXNlcjg0NTI3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8452750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keller00", "html_url": "https://github.com/keller00", "followers_url": "https://api.github.com/users/keller00/followers", "following_url": "https://api.github.com/users/keller00/following{/other_user}", "gists_url": "https://api.github.com/users/keller00/gists{/gist_id}", "starred_url": "https://api.github.com/users/keller00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keller00/subscriptions", "organizations_url": "https://api.github.com/users/keller00/orgs", "repos_url": "https://api.github.com/users/keller00/repos", "events_url": "https://api.github.com/users/keller00/events{/privacy}", "received_events_url": "https://api.github.com/users/keller00/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/11", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/11", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/11/labels", "id": 4177784, "node_id": "MDk6TWlsZXN0b25lNDE3Nzc4NA==", "number": 11, "title": "v1.1.12", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2019-03-27T16:46:32Z", "updated_at": "2019-04-16T21:49:24Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2019-03-21T14:34:01Z", "updated_at": "2019-05-03T18:55:40Z", "closed_at": "2019-04-16T21:49:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. What version of Python are you using (`python --version`)?\r\n\r\nPython3.6\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nLinux-5.0.2-arch1-1-ARCH-x86_64-with-arch\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\n```\r\nsnowflake-connector-python 1.6.10\r\nsnowflake-sqlalchemy       1.1.10\r\nSQLAlchemy                 1.2.12\r\n```\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\nWith `snowflake-sqlalchemy==1.1.10` it is impossible to create a Table with an index on any dialect.\r\n\r\n5. What did you expect to see?\r\n\r\nI would expect the snowflake dialect checks to be scoped to snowflake connections.\r\n\r\n6. What did you see instead?\r\n\r\nAn error message is being thrown when creating a table with the `sqlite://` dialect: \r\n\"Snowflake does not support indexes\"\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\nThe problem is in base.py: it registers a global handler on the `before_create` event and throw an error without looking if the connection is using the `snowflake` dialect.\r\n\r\nSee https://github.com/snowflakedb/snowflake-sqlalchemy/blob/80191ba13bf7d0216e2d18225120803383034ed0/base.py#L411-420\r\n\r\n```python\r\n@sa_vnt.listens_for(Table, 'before_create')\r\ndef check_table(table, connection, **kw):\r\n    # there should be a dialect check here\r\n    if table.indexes:\r\n        raise NotImplementedError(\"Snowflake does not support indexes\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/85", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/85/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/85/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/85", "id": 418105609, "node_id": "MDU6SXNzdWU0MTgxMDU2MDk=", "number": 85, "title": "Import from non existent module", "user": {"login": "bkyryliuk", "id": 5727938, "node_id": "MDQ6VXNlcjU3Mjc5Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5727938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkyryliuk", "html_url": "https://github.com/bkyryliuk", "followers_url": "https://api.github.com/users/bkyryliuk/followers", "following_url": "https://api.github.com/users/bkyryliuk/following{/other_user}", "gists_url": "https://api.github.com/users/bkyryliuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkyryliuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkyryliuk/subscriptions", "organizations_url": "https://api.github.com/users/bkyryliuk/orgs", "repos_url": "https://api.github.com/users/bkyryliuk/repos", "events_url": "https://api.github.com/users/bkyryliuk/events{/privacy}", "received_events_url": "https://api.github.com/users/bkyryliuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/12", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/12", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/12/labels", "id": 4177787, "node_id": "MDk6TWlsZXN0b25lNDE3Nzc4Nw==", "number": 12, "title": "v1.1.11", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2019-03-27T16:46:53Z", "updated_at": "2019-03-27T16:47:00Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-03-07T02:57:46Z", "updated_at": "2019-03-27T16:47:01Z", "closed_at": "2019-03-27T16:47:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/snowflakedb/snowflake-sqlalchemy/blob/80191ba13bf7d0216e2d18225120803383034ed0/snowdialect.py#L23\r\n\r\nThis imports from the un-existent package and couples this lib with the https://github.com/snowflakedb/snowflake-connector-python\r\n\r\nThis and name-spacing makes it probably impossible to use in the bazel build system\r\n\r\nIt would be nice to either merge those 2 libraries or completely decouple them and put into separate directories.\r\n\r\nE.g. if you rename the package, imports stop working and you see:\r\n```\r\nValueError: Attempted relative import beyond toplevel package```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/84", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/84/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/84/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/84", "id": 415381707, "node_id": "MDU6SXNzdWU0MTUzODE3MDc=", "number": 84, "title": "Setting `numpy=True` causes timezone to be dropped", "user": {"login": "kforeman", "id": 275114, "node_id": "MDQ6VXNlcjI3NTExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/275114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kforeman", "html_url": "https://github.com/kforeman", "followers_url": "https://api.github.com/users/kforeman/followers", "following_url": "https://api.github.com/users/kforeman/following{/other_user}", "gists_url": "https://api.github.com/users/kforeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/kforeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kforeman/subscriptions", "organizations_url": "https://api.github.com/users/kforeman/orgs", "repos_url": "https://api.github.com/users/kforeman/repos", "events_url": "https://api.github.com/users/kforeman/events{/privacy}", "received_events_url": "https://api.github.com/users/kforeman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913928, "node_id": "MDU6TGFiZWwzOTQ5MTM5Mjg=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1253030319, "node_id": "MDU6TGFiZWwxMjUzMDMwMzE5", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/jira", "name": "jira", "color": "9cf287", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/13", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/13", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/13/labels", "id": 4290513, "node_id": "MDk6TWlsZXN0b25lNDI5MDUxMw==", "number": 13, "title": "v1.7.11", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2019-05-07T01:18:19Z", "updated_at": "2019-05-07T01:19:46Z", "due_on": null, "closed_at": null}, "comments": 10, "created_at": "2019-02-27T23:54:10Z", "updated_at": "2019-05-07T01:19:46Z", "closed_at": "2019-05-07T01:19:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have tried to switch from `snowflake-connector` to `snowflake-sqlalchemy` in order to take advantage of some of its features (numpy compatibility, connection pool management through engines, querying directly into Pandas using `pd.read_sql_query()`, but we're running into an issue that we can't both get numpy-compatible query results and timezones simultaneously.\r\n\r\nTurning on `numpy=True` when creating the engine fixes our problem with decimals being objects instead of floats, but then we stop getting timezones.\r\n\r\n[This notebook](https://gist.github.com/kforeman/b3291657ef762f94474252923f46665e) contains a reproducible example.\r\n\r\n1. What version of Python are you using?\r\n`Python 3.7.1`\r\n\r\n2. What operating system and processor architecture are you using?\r\n`Darwin-18.2.0-x86_64-i386-64bit`\r\n\r\n3. What are the component versions in the environment? \r\n```\r\npandas\r\n\t0.23.4\r\nsnowflake.connector\r\n\t1.7.6\r\nsnowflake.sqlalchemy\r\n\t1.1.10\r\nsqlalchemy\r\n\t1.2.15\r\n```\r\n\r\n4. What did you do?\r\nI tried to find a combination of parameters to `snowflake.sqlalchemy.URL` that would both return numpy-friendly results (e.g. cast decimal to float) and attach timezones to the results.\r\n\r\n5. What did you expect to see?\r\nSetting `numpy=True` would return decimal cast to float, but still include timezones in timestamps.\r\n\r\n6. What did you see instead?\r\nTurning on `numpy=True` when creating the engine fixes our problem with decimals being objects instead of floats, but then we stop getting timezones.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/80", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/80/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/80/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/80", "id": 408575703, "node_id": "MDU6SXNzdWU0MDg1NzU3MDM=", "number": 80, "title": "Regression in version 1.1.8 when creating connection", "user": {"login": "villebro", "id": 33317356, "node_id": "MDQ6VXNlcjMzMzE3MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/33317356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villebro", "html_url": "https://github.com/villebro", "followers_url": "https://api.github.com/users/villebro/followers", "following_url": "https://api.github.com/users/villebro/following{/other_user}", "gists_url": "https://api.github.com/users/villebro/gists{/gist_id}", "starred_url": "https://api.github.com/users/villebro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villebro/subscriptions", "organizations_url": "https://api.github.com/users/villebro/orgs", "repos_url": "https://api.github.com/users/villebro/repos", "events_url": "https://api.github.com/users/villebro/events{/privacy}", "received_events_url": "https://api.github.com/users/villebro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913926, "node_id": "MDU6TGFiZWwzOTQ5MTM5MjY=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/10", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/10", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/10/labels", "id": 4045418, "node_id": "MDk6TWlsZXN0b25lNDA0NTQxOA==", "number": 10, "title": "v1.1.9", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2019-02-11T01:27:46Z", "updated_at": "2019-02-11T20:30:21Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2019-02-10T20:33:13Z", "updated_at": "2019-02-11T20:36:15Z", "closed_at": "2019-02-11T20:30:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n3.6.7 (Linux), 3.7.2 (MacOS)\r\n\r\n2. What operating system and processor architecture are you using?\r\nLinux, MacOS\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\nCreating a connection to \"snowflake://USER:PASSWORD@HOSTNAME/DATABASE?warehouse=WAREHOUSE\" yields \r\n`Connection failed!\\n\\nThe error message returned was:\\ncannot import name 'NoneType' from 'types'` (py 3.7.2 on MacOS)\r\n`Connection failed!\\n\\nThe error message returned was:\\ncannot import name 'NoneType'` (py 3.6.7 on Ubuntu 18.04 LTS)\r\n\r\nThe problem was seen on Apache Superset after upgrading to 1.1.8.\r\n\r\n5. What did you expect to see?\r\nWorks correctly on 1.1.6, but gives the above error on 1.1.8.\r\n\r\nIf you are unable to reproduce I can provide a script to replicate the error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/73", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/73/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/73/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/73", "id": 392196409, "node_id": "MDU6SXNzdWUzOTIxOTY0MDk=", "number": 73, "title": "SQLAlchemy connector returning incorrect case for quoted uppercase alias", "user": {"login": "mike-seekwell", "id": 34747639, "node_id": "MDQ6VXNlcjM0NzQ3NjM5", "avatar_url": "https://avatars3.githubusercontent.com/u/34747639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mike-seekwell", "html_url": "https://github.com/mike-seekwell", "followers_url": "https://api.github.com/users/mike-seekwell/followers", "following_url": "https://api.github.com/users/mike-seekwell/following{/other_user}", "gists_url": "https://api.github.com/users/mike-seekwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/mike-seekwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mike-seekwell/subscriptions", "organizations_url": "https://api.github.com/users/mike-seekwell/orgs", "repos_url": "https://api.github.com/users/mike-seekwell/repos", "events_url": "https://api.github.com/users/mike-seekwell/events{/privacy}", "received_events_url": "https://api.github.com/users/mike-seekwell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913928, "node_id": "MDU6TGFiZWwzOTQ5MTM5Mjg=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-18T15:03:19Z", "updated_at": "2019-02-11T20:55:31Z", "closed_at": "2019-02-11T20:55:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n3.7\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nDarwin-17.7.0-x86_64-i386-64bit\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\nName                    Version                   Build  Channel\r\nappnope                   0.1.0                    py37_0  \r\nasn1crypto                0.24.0                    <pip>\r\nazure-common              1.1.16                    <pip>\r\nazure-storage-blob        1.4.0                     <pip>\r\nazure-storage-common      1.4.0                     <pip>\r\nbackcall                  0.1.0                    py37_0  \r\nblas                      1.0                         mkl  \r\nbleach                    3.0.2                    py37_0  \r\nboto3                     1.9.67                    <pip>\r\nbotocore                  1.12.67                   <pip>\r\nca-certificates           2018.03.07                    0  \r\ncertifi                   2018.11.29               py37_0  \r\ncffi                      1.11.5                    <pip>\r\nchardet                   3.0.4                     <pip>\r\ncryptography              2.4.2                     <pip>\r\ncycler                    0.10.0                   py37_0  \r\ndbus                      1.13.2               h760590f_1  \r\ndecorator                 4.3.0                    py37_0  \r\ndocutils                  0.14                      <pip>\r\nentrypoints               0.2.3                    py37_2  \r\nexpat                     2.2.6                h0a44026_0  \r\nfreetype                  2.9.1                hb4e5f40_0  \r\nfuture                    0.17.1                    <pip>\r\ngettext                   0.19.8.1             h15daf44_3  \r\nglib                      2.56.2               hd9629dc_0  \r\nicu                       58.2                 h4b95b61_1  \r\nidna                      2.8                       <pip>\r\nijson                     2.3                       <pip>\r\nintel-openmp              2019.1                      144  \r\nipykernel                 5.1.0            py37h39e3cac_0  \r\nipython                   7.2.0            py37h39e3cac_0  \r\nipython_genutils          0.2.0                    py37_0  \r\nipywidgets                7.4.2                    py37_0  \r\njedi                      0.13.2                   py37_0  \r\njinja2                    2.10                     py37_0  \r\njmespath                  0.9.3                     <pip>\r\njpeg                      9b                   he5867d9_2  \r\njsonschema                2.6.0                    py37_0  \r\njupyter                   1.0.0                    py37_7  \r\njupyter_client            5.2.4                    py37_0  \r\njupyter_console           6.0.0                    py37_0  \r\njupyter_core              4.4.0                    py37_0  \r\nkeyring                   17.0.0                    <pip>\r\nkiwisolver                1.0.1            py37h0a44026_0  \r\nlibcxx                    4.0.1                hcfea43d_1  \r\nlibcxxabi                 4.0.1                hcfea43d_1  \r\nlibedit                   3.1.20170329         hb402a30_2  \r\nlibffi                    3.2.1                h475c297_4  \r\nlibgfortran               3.0.1                h93005f0_2  \r\nlibiconv                  1.15                 hdd342a3_7  \r\nlibpng                    1.6.35               ha441bb4_0  \r\nlibsodium                 1.0.16               h3efe00b_0  \r\nlibxml2                   2.9.8                hab757c2_1  \r\nlibxslt                   1.1.32               hb819dd2_0  \r\nlxml                      4.2.5            py37hef8c89e_0  \r\nmarkupsafe                1.1.0            py37h1de35cc_0  \r\nmatplotlib                3.0.2            py37h54f8f79_0  \r\nmistune                   0.8.4            py37h1de35cc_0  \r\nmkl                       2019.1                      144  \r\nmkl_fft                   1.0.6            py37h27c97d8_0  \r\nmkl_random                1.0.2            py37h27c97d8_0  \r\nnbconvert                 5.3.1                    py37_0  \r\nnbformat                  4.4.0                    py37_0  \r\nncurses                   6.1                  h0a44026_1  \r\nnotebook                  5.7.4                    py37_0  \r\nnumpy                     1.15.4           py37hacdab7b_0  \r\nnumpy-base                1.15.4           py37h6575580_0  \r\nopenssl                   1.1.1a               h1de35cc_0  \r\npandas                    0.23.4           py37h6440ff4_0  \r\npandoc                    2.2.3.2                       0  \r\npandocfilters             1.4.2                    py37_1  \r\nparso                     0.3.1                    py37_0  \r\npcre                      8.42                 h378b8a2_0  \r\npexpect                   4.6.0                    py37_0  \r\npickleshare               0.7.5                    py37_0  \r\npip                       18.1                     py37_0  \r\nprometheus_client         0.5.0                    py37_0  \r\nprompt_toolkit            2.0.7                    py37_0  \r\nptyprocess                0.6.0                    py37_0  \r\npyasn1                    0.4.4                     <pip>\r\npyasn1-modules            0.2.2                     <pip>\r\npycparser                 2.19                      <pip>\r\npycryptodomex             3.7.2                     <pip>\r\npygments                  2.3.1                    py37_0  \r\nPyJWT                     1.7.1                     <pip>\r\npyOpenSSL                 18.0.0                    <pip>\r\npyparsing                 2.3.0                    py37_0  \r\npyqt                      5.9.2            py37h655552a_2  \r\npython                    3.7.1                haf84260_7  \r\npython-dateutil           2.7.5                    py37_0  \r\npytz                      2018.7                   py37_0  \r\npyzmq                     17.1.2           py37h1de35cc_0  \r\nqt                        5.9.7                h468cd18_1  \r\nqtconsole                 4.4.3                    py37_0  \r\nreadline                  7.0                  h1de35cc_5  \r\nrequests                  2.21.0                    <pip>\r\ns3transfer                0.1.13                    <pip>\r\nsend2trash                1.5.0                    py37_0  \r\nsetuptools                40.6.3                   py37_0  \r\nsip                       4.19.8           py37h0a44026_0  \r\nsix                       1.12.0                   py37_0  \r\nsnowflake-connector-python 1.7.3                     <pip>\r\nsnowflake-sqlalchemy      1.1.4                     <pip>\r\nsqlalchemy                1.2.15           py37h1de35cc_0  \r\nsqlite                    3.26.0               ha441bb4_0  \r\nterminado                 0.8.1                    py37_1  \r\ntestpath                  0.4.2                    py37_0  \r\ntk                        8.6.8                ha441bb4_0  \r\ntornado                   5.1.1            py37h1de35cc_0  \r\ntraitlets                 4.3.2                    py37_0  \r\nurllib3                   1.24.1                    <pip>\r\nwcwidth                   0.1.7                    py37_0  \r\nwebencodings              0.5.1                    py37_1  \r\nwheel                     0.32.3                   py37_0  \r\nwidgetsnbextension        3.4.2                    py37_0  \r\nxz                        5.2.4                h1de35cc_4  \r\nzeromq                    4.2.5                h0a44026_1  \r\nzlib                      1.2.11               h1de35cc_3  \r\n\r\n\r\n4. What did you do?\r\n```\r\nsql = '''SELECT CC_CALL_CENTER_ID,\r\n    CC_CITY AS \"cc_city\",\r\n    CC_CITY AS \"CC_CITYU\",\r\n    cc.CC_REC_END_DATE\r\nFROM TPCDS_SF100TCL.CALL_CENTER as cc\r\nLIMIT 100'''\r\n \r\nres = engine.execute(sql)\r\nprint(res.keys())\r\n```\r\n\r\n5. What did you expect to see?\r\n`['cc_call_center_id', 'cc_city', 'CC_CITYU', 'cc_rec_end_date']`\r\n\r\n6. What did you see instead?\r\n`['cc_call_center_id', 'cc_city', 'cc_cityu', 'cc_rec_end_date']`\r\n\r\nPlease see here for more details\r\nhttps://support.snowflake.net/s/question/0D50Z00008hyC4pSAE/sqlalchemy-connector-returning-incorrect-case-upper-lower-for-queries", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/61", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/61/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/61/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/61", "id": 370679419, "node_id": "MDU6SXNzdWUzNzA2Nzk0MTk=", "number": 61, "title": "SQLAlchemy >= 1.2 multi table support", "user": {"login": "nrth", "id": 640755, "node_id": "MDQ6VXNlcjY0MDc1NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/640755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrth", "html_url": "https://github.com/nrth", "followers_url": "https://api.github.com/users/nrth/followers", "following_url": "https://api.github.com/users/nrth/following{/other_user}", "gists_url": "https://api.github.com/users/nrth/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrth/subscriptions", "organizations_url": "https://api.github.com/users/nrth/orgs", "repos_url": "https://api.github.com/users/nrth/repos", "events_url": "https://api.github.com/users/nrth/events{/privacy}", "received_events_url": "https://api.github.com/users/nrth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-16T15:48:55Z", "updated_at": "2018-11-08T02:16:55Z", "closed_at": "2018-11-08T02:16:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1. What version of Python are you using (`python --version`)?\r\n\r\n`python 2.7.12`\r\n\r\n2. What operating system and processor architecture are you using?\r\n\r\n`Linux-4.4.0-137-generic-x86_64-with-Ubuntu-16.04-xenial`\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\n```\r\nsnowflake-connector-python 1.6.10    \r\nsnowflake-sqlalchemy       1.1.2     \r\nSQLAlchemy                 1.2.12 \r\n```\r\n\r\n4. What did you do?\r\n\r\nMulti table update does not work any longer:\r\n- `table1.update().values(name=table2.c.name).where(table1.c.id == table2.c.name)`\r\n- Raises `This backend does not support multiple-table criteria within UPDATE`\r\n___\r\n\r\nMulti table deletes are not supported:\r\n- `table1.delete().where(table1.c.id == table2.c.id)`\r\n- Raises `This backend does not support multiple-table criteria within DELETE`\r\n___\r\n\r\nThis happens since SQLAlchemy changed some behaviours in the `SQLCompiler` and snowflake-sqlalchemy has not implemented them yet:\r\n\r\nhttps://github.com/zzzeek/sqlalchemy/blob/96bb76222e1f612af7bd425ef5b4f208e10a255d/lib/sqlalchemy/sql/compiler.py#L2293\r\n\r\nhttps://github.com/zzzeek/sqlalchemy/blob/96bb76222e1f612af7bd425ef5b4f208e10a255d/lib/sqlalchemy/sql/compiler.py#L2187\r\n___\r\n\r\nI provided a [PR](https://github.com/snowflakedb/snowflake-sqlalchemy/pull/62) fixing these issues.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/59", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/59/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/59/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/59", "id": 360301889, "node_id": "MDU6SXNzdWUzNjAzMDE4ODk=", "number": 59, "title": "Table objects with TIMESTAMP(timezone=True) columns don't produce TIMESTAMP_TZ columns in Snowflake", "user": {"login": "robin900", "id": 325578, "node_id": "MDQ6VXNlcjMyNTU3OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/325578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robin900", "html_url": "https://github.com/robin900", "followers_url": "https://api.github.com/users/robin900/followers", "following_url": "https://api.github.com/users/robin900/following{/other_user}", "gists_url": "https://api.github.com/users/robin900/gists{/gist_id}", "starred_url": "https://api.github.com/users/robin900/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robin900/subscriptions", "organizations_url": "https://api.github.com/users/robin900/orgs", "repos_url": "https://api.github.com/users/robin900/repos", "events_url": "https://api.github.com/users/robin900/events{/privacy}", "received_events_url": "https://api.github.com/users/robin900/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-14T13:19:43Z", "updated_at": "2018-11-08T02:17:07Z", "closed_at": "2018-11-08T02:17:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python: 2.7.10\r\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\r\n\r\npip:\r\n\r\nsnowflake-sqlalchemy==1.1.2\r\n# snowflake-connector-python==1.6.8 # Installed as dependency for snowflake-sqlalchemy\r\n# sqlalchemy==1.2.11 # Installed as dependency for snowflake-sqlalchemy, alembic\r\n\r\nI attempted to take a logical Table object in SQLA and invoke `create(bind=my_snowflake_engine)`. The table was created, but the columns whose type was `TIMESTAMP(timezone=True)` became `TIMESTAMP_NTZ` columns in the Snowflake table instead of `TIMESTAMP_TZ`.\r\n\r\nAlso, I see no way to specify TIMESTAMP_LTZ as a data type for any column.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/58", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/58/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/58/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/58", "id": 359221778, "node_id": "MDU6SXNzdWUzNTkyMjE3Nzg=", "number": 58, "title": "Interest in CopyIntoS3 command", "user": {"login": "sburns", "id": 440820, "node_id": "MDQ6VXNlcjQ0MDgyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/440820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sburns", "html_url": "https://github.com/sburns", "followers_url": "https://api.github.com/users/sburns/followers", "following_url": "https://api.github.com/users/sburns/following{/other_user}", "gists_url": "https://api.github.com/users/sburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/sburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sburns/subscriptions", "organizations_url": "https://api.github.com/users/sburns/orgs", "repos_url": "https://api.github.com/users/sburns/repos", "events_url": "https://api.github.com/users/sburns/events{/privacy}", "received_events_url": "https://api.github.com/users/sburns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913928, "node_id": "MDU6TGFiZWwzOTQ5MTM5Mjg=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/9", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/9", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/9/labels", "id": 4044922, "node_id": "MDk6TWlsZXN0b25lNDA0NDkyMg==", "number": 9, "title": "v1.1.8", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2019-02-10T15:02:37Z", "updated_at": "2019-02-10T15:03:36Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2018-09-11T20:59:56Z", "updated_at": "2019-02-10T15:03:36Z", "closed_at": "2019-02-10T15:03:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "(I removed the ISSUE_TEMPLATE as I don't have an issue, just want to gauge general interest).\r\n\r\nWe're exploring migrating to snowflake from redshift and we heavily depend on [sqlalchemy_redshift.commands.UnloadFromSelect](https://github.com/sqlalchemy-redshift/sqlalchemy-redshift/blob/master/sqlalchemy_redshift/commands.py#L107). Is there any interest in providing a `snowflake_sqlalchemy.commands.CopyIntoS3`?\r\n\r\nI will probably start writing this in a week or so and would be more than happy to contribute it if its something you would feel valuable for the project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/57", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/57/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/57/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/57", "id": 354033321, "node_id": "MDU6SXNzdWUzNTQwMzMzMjE=", "number": 57, "title": "Regression in handling of quoted_name in compiler after 1.1.0", "user": {"login": "villebro", "id": 33317356, "node_id": "MDQ6VXNlcjMzMzE3MzU2", "avatar_url": "https://avatars2.githubusercontent.com/u/33317356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villebro", "html_url": "https://github.com/villebro", "followers_url": "https://api.github.com/users/villebro/followers", "following_url": "https://api.github.com/users/villebro/following{/other_user}", "gists_url": "https://api.github.com/users/villebro/gists{/gist_id}", "starred_url": "https://api.github.com/users/villebro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villebro/subscriptions", "organizations_url": "https://api.github.com/users/villebro/orgs", "repos_url": "https://api.github.com/users/villebro/repos", "events_url": "https://api.github.com/users/villebro/events{/privacy}", "received_events_url": "https://api.github.com/users/villebro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913926, "node_id": "MDU6TGFiZWwzOTQ5MTM5MjY=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-25T18:26:49Z", "updated_at": "2019-01-13T12:57:16Z", "closed_at": "2018-11-08T10:37:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When passing a select query to the compiler, quotes around the alias are lost. This was working correctly in v. 1.1.0, but stopped working as of 1.1.1\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n3.6.4\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nDarwin-17.7.0-x86_64-i386-64bit\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n```\r\nPackage                    Version  \r\n-------------------------- ---------\r\nasn1crypto                 0.24.0   \r\nazure-common               1.1.14   \r\nazure-nspkg                2.0.0    \r\nazure-storage              0.36.0   \r\nboto3                      1.7.84   \r\nbotocore                   1.10.84  \r\ncertifi                    2018.8.24\r\ncffi                       1.11.5   \r\nchardet                    3.0.4    \r\ncryptography               2.3.1    \r\ndocutils                   0.14     \r\nfuture                     0.16.0   \r\nidna                       2.7      \r\nijson                      2.3      \r\njmespath                   0.9.3    \r\npip                        18.0     \r\npyasn1                     0.4.4    \r\npyasn1-modules             0.2.2    \r\npycparser                  2.18     \r\npycryptodomex              3.6.6    \r\nPyJWT                      1.6.4    \r\npyOpenSSL                  18.0.0   \r\npython-dateutil            2.7.3    \r\npytz                       2018.5   \r\nrequests                   2.19.1   \r\ns3transfer                 0.1.13   \r\nsetuptools                 40.2.0   \r\nsix                        1.11.0   \r\nsnowflake-connector-python 1.6.7    \r\nsnowflake-sqlalchemy       1.1.2    \r\nSQLAlchemy                 1.2.11   \r\nurllib3                    1.23     \r\nwheel                      0.31.1\r\n```\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n```\r\nimport sqlalchemy as sa\r\nfrom sqlalchemy.sql import quoted_name, label, column, table\r\n\r\nengine = sa.create_engine(\"snowflake://XXX\")\r\n\r\ncol = column('colname').label(quoted_name('alias', True))\r\nselect_from_table = sa.select([col]).group_by(col).select_from(table(quoted_name('abc', True)))\r\ncompiled_result = select_from_table.compile(engine)\r\n\r\nprint(compiled_result)\r\n```\r\n\r\n5. What did you expect to see?\r\n```\r\nSELECT colname AS \"alias\" \r\nFROM \"abc\" GROUP BY colname\r\n```\r\n\r\n6. What did you see instead?\r\n```\r\nSELECT colname AS alias \r\nFROM \"abc\" GROUP BY colname\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/55", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/55/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/55/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/55", "id": 350574694, "node_id": "MDU6SXNzdWUzNTA1NzQ2OTQ=", "number": 55, "title": "I would love to snowflake to support `supports_multivalues_insert`", "user": {"login": "wxianxin", "id": 13245897, "node_id": "MDQ6VXNlcjEzMjQ1ODk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13245897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wxianxin", "html_url": "https://github.com/wxianxin", "followers_url": "https://api.github.com/users/wxianxin/followers", "following_url": "https://api.github.com/users/wxianxin/following{/other_user}", "gists_url": "https://api.github.com/users/wxianxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/wxianxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wxianxin/subscriptions", "organizations_url": "https://api.github.com/users/wxianxin/orgs", "repos_url": "https://api.github.com/users/wxianxin/repos", "events_url": "https://api.github.com/users/wxianxin/events{/privacy}", "received_events_url": "https://api.github.com/users/wxianxin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913928, "node_id": "MDU6TGFiZWwzOTQ5MTM5Mjg=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-08-14T19:55:55Z", "updated_at": "2018-09-05T22:52:34Z", "closed_at": "2018-09-05T22:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\npython 3.7\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nMac OS. X86\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\nAll latest as of today: 20180814\r\n\r\n4. What did you do?\r\n```\r\n    dialect = getattr(connection, 'dialect', None)\r\n    if dialect and getattr(dialect, 'supports_multivalues_insert', False):\r\n        print('YESSSS!!!!!!!!!!!!!!!!!')\r\n    else:\r\n        print('NOOOOOOO!')\r\n```\r\nI got `No`. There is no support for `supports_multivalues_insert`.  I feel heartbroken.\r\n\r\nA complete runnable program is good.\r\n\r\n5. What did you expect to see?\r\nAdd support for pandas sql to fast upload dataframe to snowflake table.\r\n\r\n6. What did you see instead?\r\nSlow ORM unit of work.\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\nNot necessary", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/54", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/54/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/54/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/54", "id": 331559550, "node_id": "MDU6SXNzdWUzMzE1NTk1NTA=", "number": 54, "title": "Long values in params mishandled", "user": {"login": "darrint", "id": 108186, "node_id": "MDQ6VXNlcjEwODE4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/108186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrint", "html_url": "https://github.com/darrint", "followers_url": "https://api.github.com/users/darrint/followers", "following_url": "https://api.github.com/users/darrint/following{/other_user}", "gists_url": "https://api.github.com/users/darrint/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrint/subscriptions", "organizations_url": "https://api.github.com/users/darrint/orgs", "repos_url": "https://api.github.com/users/darrint/repos", "events_url": "https://api.github.com/users/darrint/events{/privacy}", "received_events_url": "https://api.github.com/users/darrint/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-12T12:08:12Z", "updated_at": "2018-06-12T20:45:11Z", "closed_at": "2018-06-12T20:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "`ProgrammingError: (snowflake.connector.errors.ProgrammingError) 001003 (42000): SQL compilation error:\r\nsyntax error line 3 at position 14 unexpected 'L'.`\r\n\r\nIt appears to me that long values are being mishandled. I don't know whether to blame snowflake-sqlalchemy for trying to substitute them as strings or the connector for substituting as strings incorrectly. I think it's the latter. (Or I'm doing it all wrong.)  \r\n\r\nI've included a full working program to reproduce. I think the problem is here is shown in the log, but I don't know what I should do about it.\r\n\r\nDEBUG:snowflake.connector.cursor:parameters: {u'param_1': u'10', **u'buid_1': u'1L'**}\r\n\r\nThe `L` on the `long(1)` is being sent as a literal to snowflake which is rejecting it.\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\n2.7.12 (default, Dec  4 2017, 14:50:18) \\n[GCC 5.4.0 20160609]\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nLinux-4.4.0-122-generic-x86_64-with-Ubuntu-16.04-xenial\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\n```\r\n\r\nalabaster (0.7.9)\r\nalembic (0.9.9)\r\namqp (1.4.9)\r\naniso8601 (3.0.0)\r\nanyjson (0.3.3)\r\nasn1crypto (0.24.0)\r\nastroid (1.4.8)\r\nAuthorizeSauce (0.5.0)\r\naws-requests-auth (0.4.1)\r\nazure-common (1.1.11)\r\nazure-nspkg (2.0.0)\r\nazure-storage (0.36.0)\r\nBabel (2.3.4)\r\nbackports.functools-lru-cache (1.3)\r\nBeautifulSoup (3.2.1)\r\nbeautifulsoup4 (4.1.3)\r\nbidict (0.3.1)\r\nbilliard (3.3.0.23)\r\nbleach (1.4)\r\nboto (2.25.0)\r\nboto3 (1.7.33)\r\nbotocore (1.10.33)\r\ncelery (3.1.24)\r\ncertifi (2018.4.16)\r\ncffi (1.11.5)\r\ncolorama (0.2.5)\r\nconfigparser (3.5.0)\r\nconstruct (2.8.7)\r\ncoverage (4.2)\r\ncryptography (2.2.2)\r\ncssselect (0.9.1)\r\ncssutils (1.0.1)\r\nddtrace (0.10.1)\r\ndecorator (3.4.0)\r\ndefusedxml (0.4.1)\r\nDjango (1.9.10)\r\ndjango-ajax-selects (1.5.1)\r\ndjango-appconf (1.0.2)\r\ndjango-celery (3.1.17)\r\ndjango-composite-foreignkey (1.0.0a10)\r\ndjango-compressor (2.1)\r\ndjango-cors-headers (1.1.0)\r\ndjango-cprofile-middleware (0.4)\r\ndjango-debug-toolbar (1.6)\r\ndjango-el-pagination (3.0.1)\r\ndjango-extensions (1.7.4)\r\ndjango-filter (1.0.4)\r\ndjango-fsm-widget (0.0.3)\r\ndjango-haystack (2.5.0)\r\ndjango-impersonate (1.0.1)\r\ndjango-jenkins (0.110.0)\r\ndjango-jsonfield (1.0.1)\r\ndjango-jsonfield-compat (0.4.4)\r\ndjango-memcached (0.1.2)\r\ndjango-messages (0.5.0rc0)\r\ndjango-nose (1.4.4)\r\ndjango-passwords (0.2.0)\r\ndjango-polymorphic (1.3)\r\ndjango-recaptcha (1.3.0)\r\ndjango-remote-forms (0.0.1)\r\ndjango-storages (1.1.4)\r\ndjango-taggit (0.21.3)\r\ndjango-tastypie (0.13.3)\r\ndjango-waffle (0.12.0)\r\ndjango-webpack-loader (0.6.0)\r\ndjango-widget-tweaks (1.1.2)\r\ndjangorestframework (3.6.3)\r\ndnspython (1.15.0)\r\ndocutils (0.12)\r\nelasticsearch (5.3.0)\r\nemail-validator (1.0.2)\r\nenum34 (1.1.6)\r\nfactory-boy (2.8.1)\r\nFaker (0.8.3)\r\nfreezegun (0.3.7)\r\nfuture (0.15.2)\r\nfutures (3.1.1)\r\ngeoip2 (2.4.2)\r\ngraphene (2.1.1)\r\ngraphene-django (2.0.0)\r\ngraphql-core (2.0)\r\ngraphql-relay (0.4.5)\r\nhtml5lib (0.999)\r\nhttplib2 (0.10.3)\r\nidna (2.6)\r\nijson (2.3)\r\nipaddress (1.0.18)\r\nipdb (0.8)\r\nipython (1.2.1)\r\niso8601 (0.1.12)\r\nisort (4.2.5)\r\nJinja2 (2.8)\r\njira (0.42)\r\njmespath (0.9.3)\r\nkombu (3.0.37)\r\nlazy-object-proxy (1.2.2)\r\nloremipsum (1.0.5)\r\nlxml (3.2.4)\r\nMako (1.0.7)\r\nMarkdown (2.4)\r\nmarkdown2 (2.1.0)\r\nMarkupSafe (0.23)\r\nmaxminddb (1.3.0)\r\nmccabe (0.5.2)\r\nmimeparse (0.1.3)\r\nmock (1.0.1)\r\nmsgpack-python (0.5.6)\r\nMySQL-python (1.2.5)\r\nnewrelic (2.50.0.39)\r\nnose (1.3.7)\r\noauth2client (4.0.0)\r\noauthlib (2.0.0)\r\nordereddict (1.1)\r\npefile (2016.3.28)\r\npep8 (1.3.3)\r\npexpect (3.1)\r\npip (8.1.1)\r\npromise (2.1)\r\npsycopg2 (2.7.4)\r\nptyprocess (0.5)\r\npyasn1 (0.2.3)\r\npyasn1-modules (0.0.9)\r\npycparser (2.18)\r\npycryptodome (3.6.1)\r\npydns (2.3.6)\r\npyflakes (0.5.0)\r\nPygments (2.1.3)\r\nPyJWT (1.6.4)\r\npylint (1.6.4)\r\npymongo (3.2.2)\r\npymongo-env (0.0.3)\r\npynliner (0.5.1)\r\npyOpenSSL (17.5.0)\r\npysolr (3.2.0)\r\npython-dateutil (2.5.3)\r\npython-editor (1.0.3)\r\npython-memcached (1.53)\r\npython-mimeparse (1.6.0)\r\npython-ptrace (0.9.1)\r\npytz (2016.7)\r\nPyYAML (3.10)\r\nrcssmin (1.0.6)\r\nredis (2.10.5)\r\nrequests (2.9.1)\r\nrequests-oauthlib (0.7.0)\r\nrequests-toolbelt (0.7.0)\r\nrjsmin (1.0.12)\r\nrsa (3.4.2)\r\nRx (1.6.1)\r\ns3transfer (0.1.11)\r\nsaved-search (0.2)\r\nselenium (2.46.0)\r\nsetuptools (20.7.0)\r\nsimplegeneric (0.8.1)\r\nsingledispatch (3.4.0.3)\r\nsix (1.10.0)\r\nsnowballstemmer (1.2.1)\r\nsnowflake-connector-python (1.6.2)\r\nsnowflake-sqlalchemy (1.1.1)\r\nsolrsitemap (1.0)\r\nSouth (0.8.4)\r\nSphinx (1.3.3)\r\nsphinx-rtd-theme (0.1.9)\r\nSQLAlchemy (1.2.8)\r\nsqlparse (0.2.1)\r\nsuds (0.4)\r\nsuds-jurko (0.6)\r\ntestfixtures (3.0.0)\r\ntlslite (0.4.9)\r\ntyping (3.6.4)\r\nua-parser (0.7.3)\r\nunicode-slugify (0.1)\r\nunicodecsv (0.9.4)\r\nurllib3 (1.22)\r\nuser-agents (1.1.0)\r\nvalidate-email (1.2)\r\nwheel (0.24.0)\r\nwrapt (1.10.8)\r\nxlrd (0.9.3)\r\nXlsxWriter (0.8.4)\r\nxxhash (1.0.1)\r\n```\r\n\r\n4. What did you do?\r\n```\r\nimport re\r\nimport base64\r\nfrom sqlalchemy.sql import select, column\r\nfrom sqlalchemy import MetaData, Table, Column, Date, DateTime, Integer, func\r\nfrom sqlalchemy import create_engine\r\n\r\nfrom snowflake.sqlalchemy import URL\r\nfrom secrets import SNOWFLAKE_KEY, SNOWFLAKE_USER, SNOWFLAKE_ACCOUNT\r\n\r\nmetadata = MetaData()\r\n\r\njobview_table = Table(\r\n    'jobview', metadata,\r\n    Column('server_datetime', DateTime(True)),\r\n    Column('server_date', Date),\r\n    Column('buid', Integer),\r\n    snowflake_clusterby=['server_date'],\r\n)\r\n\r\nSNOWFLAKE=dict(\r\n    app=dict(\r\n        user=SNOWFLAKE_USER, account=SNOWFLAKE_ACCOUNT, private_key=SNOWFLAKE_KEY,\r\n        role='sysadmin', region='us-east-1',\r\n        database='test_db', schema='public', warehouse='ingest'))\r\n\r\n\r\ndef build_snowflake_url(db):\r\n    snowflake_settings = dict(SNOWFLAKE[db])\r\n\r\n    if 'private_key' in snowflake_settings:\r\n        key = snowflake_settings['private_key']\r\n        # Decode the raw PEM if the key looks like --- BEGIN ... ---\r\n        if '---' in key:\r\n            # Strip of the header and footer. base64 doesn't want those there.\r\n            key = base64.decodestring(re.sub(r'---.*---', '', key))\r\n            snowflake_settings['private_key'] = key\r\n\r\n    return URL(**snowflake_settings)\r\n\r\n\r\ndef create_snowflake_engine(db):\r\n    url = build_snowflake_url(db)\r\n    engine = create_engine(url)\r\n    return engine\r\n\r\nengine = create_snowflake_engine('app')\r\n\r\ndef go():\r\n    print 'connecting'\r\n    with engine.begin() as connection:\r\n        print 'connected'\r\n        queryset = select([func.count(jobview_table.c['server_datetime'])]).where(column('buid') == 1L).limit(10)\r\n        print 'running'\r\n        results = connection.execute(queryset).fetchall()\r\n        print 'done'\r\n        print results\r\n```\r\n\r\n5. What did you expect to see?\r\n\r\nShould have run the query.\r\n\r\n6. What did you see instead?\r\n\r\n```\r\nconnecting\r\nconnected\r\nrunning\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-100-5f037b91a89a>\", line 1, in <module>\r\n    go2.go()\r\n  File \"go2.py\", line 54, in go\r\n    results = connection.execute(queryset).fetchall()\r\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 948, in execute\r\n    return meth(self, multiparams, params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/sql/elements.py\", line 269, in _execute_on_connection\r\n    return connection._execute_clauseelement(self, multiparams, params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1060, in _execute_clauseelement\r\n    compiled_sql, distilled_params\r\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1200, in _execute_context\r\n    context)\r\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1413, in _handle_dbapi_exception\r\n    exc_info\r\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/util/compat.py\", line 203, in raise_from_cause\r\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context\r\n    context)\r\n  File \"/usr/local/lib/python2.7/dist-packages/sqlalchemy/engine/default.py\", line 508, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File \"/usr/local/lib/python2.7/dist-packages/snowflake/connector/cursor.py\", line 542, in execute\r\n    errvalue)\r\n  File \"/usr/local/lib/python2.7/dist-packages/snowflake/connector/errors.py\", line 97, in errorhandler_wrapper\r\n    cursor.errorhandler(connection, cursor, errorclass, errorvalue)\r\n  File \"/usr/local/lib/python2.7/dist-packages/snowflake/connector/errors.py\", line 73, in default_errorhandler\r\n    done_format_msg=errorvalue.get(u'done_format_msg'))\r\nProgrammingError: (snowflake.connector.errors.ProgrammingError) 001003 (42000): SQL compilation error:\r\nsyntax error line 3 at position 14 unexpected 'L'. [SQL: u'SELECT count(jobview.server_datetime) AS count_1 \\nFROM jobview \\nWHERE buid = %(buid_1)s\\n LIMIT %(param_1)s'] [parameters: {u'param_1': 10, u'buid_1': 1L}] (Background on this error at: http://sqlalche.me/e/f405)\r\n```\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\nSee attached.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/47", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/47/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/47/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/47", "id": 320108382, "node_id": "MDU6SXNzdWUzMjAxMDgzODI=", "number": 47, "title": "Best practice for doing cross database joins using ORM", "user": {"login": "tchoedak", "id": 3946411, "node_id": "MDQ6VXNlcjM5NDY0MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3946411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tchoedak", "html_url": "https://github.com/tchoedak", "followers_url": "https://api.github.com/users/tchoedak/followers", "following_url": "https://api.github.com/users/tchoedak/following{/other_user}", "gists_url": "https://api.github.com/users/tchoedak/gists{/gist_id}", "starred_url": "https://api.github.com/users/tchoedak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tchoedak/subscriptions", "organizations_url": "https://api.github.com/users/tchoedak/orgs", "repos_url": "https://api.github.com/users/tchoedak/repos", "events_url": "https://api.github.com/users/tchoedak/events{/privacy}", "received_events_url": "https://api.github.com/users/tchoedak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/4", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/4", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/4/labels", "id": 3337264, "node_id": "MDk6TWlsZXN0b25lMzMzNzI2NA==", "number": 4, "title": "v1.1.1", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2018-05-10T20:00:22Z", "updated_at": "2018-05-10T20:00:22Z", "due_on": null, "closed_at": null}, "comments": 10, "created_at": "2018-05-03T23:01:53Z", "updated_at": "2018-05-17T17:49:11Z", "closed_at": "2018-05-10T19:47:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Question\r\n\r\nHi there, in snowflake we often have multiple databases, with their own set of schemas, and tables inside those schemas. Ideally data shouldn't have to move between these databases nor schemas, but in practice they often do.\r\n\r\nOne use case is when there might be valuable data between two different databases. In my example, I'm going to reference database `A` and database `B` which has schemas `ant` and `babboons`, which has tables `apples` and `bananas` respectively.\r\n\r\nThrough a direct query using snowflake SQL, you could implement a join like\r\n```\r\nselect\r\n    *\r\nfrom A.ant.apples a\r\njoin B.babboons.bananas b\r\n    on a.id = b.id\r\n```\r\n\r\nHow can you implement a cross database join like the above example using a single session through the ORM interface? my understanding is that a session can only point towards one database.\r\n\r\nThe query would look like such:\r\n```\r\n# assume session was created with database=A\r\nquery = session.query(Ant.id, Banana.id)\\\r\n    .join(Banana, Ant.id == Banana.id)\r\n```\r\n\r\nThis would obviously fail because the query would search for a A.babboons.banana (Database A).\r\n\r\nCan this be done through the ORM interface without dropping to SQL? If so, what's the best practice in doing this?\r\n\r\n\r\n### Issue Template\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\nPython 2.7.12\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nLinux-4.9.76-3.78.amzn1.x86_64-x86_64-with-glibc2.2.5\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\nsnowflake-connector-python==1.5.8\r\nsnowflake-sqlalchemy==1.1.0\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\n5. What did you expect to see?\r\n\r\nN/A\r\n\r\n6. What did you see instead?\r\n\r\nN/A\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/42", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/42/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/42/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/42", "id": 304992477, "node_id": "MDU6SXNzdWUzMDQ5OTI0Nzc=", "number": 42, "title": "pkg_resources.ContextualVersionConflict: (python-dateutil 2.7.0 (/tmp/g/lib/python3.4/site-packages), Requirement.parse('python-dateutil<2.7.0,>=2.1'), {'botocore'})", "user": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-03-14T01:32:28Z", "updated_at": "2018-12-29T05:56:37Z", "closed_at": "2018-12-29T05:55:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/boto/botocore 1.9.8 tighten the upper bound of https://github.com/dateutil/dateutil/ version to `<2.7.0`. If you install snowflake-sqlalchemy in a fresh virtualenv and attempt to make a connection, you'll get this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/stakeda/test_python/sqlalchemy_test.py\", line 31, in <module>\r\n    poolclass=QueuePool)\r\n  File \"/tmp/g/lib/python3.4/site-packages/sqlalchemy/engine/__init__.py\", line 424, in create_engine\r\n    return strategy.create(*args, **kwargs)\r\n  File \"/tmp/g/lib/python3.4/site-packages/sqlalchemy/engine/strategies.py\", line 57, in create\r\n    entrypoint = u._get_entrypoint()\r\n  File \"/tmp/g/lib/python3.4/site-packages/sqlalchemy/engine/url.py\", line 156, in _get_entrypoint\r\n    cls = registry.load(name)\r\n  File \"/tmp/g/lib/python3.4/site-packages/sqlalchemy/util/langhelpers.py\", line 217, in load\r\n    return impl.load()\r\n  File \"/tmp/g/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2309, in load\r\n    self.require(*args, **kwargs)\r\n  File \"/tmp/g/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2326, in require\r\n    items = working_set.resolve(reqs, env, installer)\r\n  File \"/tmp/g/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 810, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (python-dateutil 2.7.0 (/tmp/g/lib/python3.4/site-packages), Requirement.parse('python-dateutil<2.7.0,>=2.1'), {'botocore'})\r\n```\r\nThe workaround is this:\r\n```\r\npip install -U python-dateutil==2.6.1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/41", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/41/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/41/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/41", "id": 297126356, "node_id": "MDU6SXNzdWUyOTcxMjYzNTY=", "number": 41, "title": "botocore requirement limitation", "user": {"login": "jorgebaez212", "id": 1607099, "node_id": "MDQ6VXNlcjE2MDcwOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1607099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorgebaez212", "html_url": "https://github.com/jorgebaez212", "followers_url": "https://api.github.com/users/jorgebaez212/followers", "following_url": "https://api.github.com/users/jorgebaez212/following{/other_user}", "gists_url": "https://api.github.com/users/jorgebaez212/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorgebaez212/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorgebaez212/subscriptions", "organizations_url": "https://api.github.com/users/jorgebaez212/orgs", "repos_url": "https://api.github.com/users/jorgebaez212/repos", "events_url": "https://api.github.com/users/jorgebaez212/events{/privacy}", "received_events_url": "https://api.github.com/users/jorgebaez212/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-14T14:59:28Z", "updated_at": "2018-02-14T20:57:02Z", "closed_at": "2018-02-14T20:57:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is quite common to use awscli, especially if sync between buckets is needed, but if you install the latest version of awscli, botocore version is upgraded to botocore 1.8.42, and when trying to query snowflake using sqlalchemy, the following error rises:\r\n```\r\nFile \"/some/test/virtualenv/path/python2.7/site-packages/sqlalchemy/engine/__init__.py\", line 387, in create_engine \r\n    return strategy.create(*args, **kwargs) \r\nFile \"/some/test/virtualenv/path/python2.7/site-packages/sqlalchemy/engine/strategies.py\", line 56, in create \r\n    entrypoint = u._get_entrypoint() \r\nFile \"/some/test/virtualenv/path/python2.7/site-packages/sqlalchemy/engine/url.py\", line 139, in _get_entrypoint \r\n    cls = registry.load(name) \r\nFile \"/some/test/virtualenv/path/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 214, in load\r\n    return impl.load() \r\nFile \"/some/test/virtualenv/path/python2.7/dist-packages/pkg_resources.py\", line 2188, in load \r\n    self.require(env, installer)\r\nFile \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 2202, in require\r\n    items = working_set.resolve(reqs, env, installer)\r\nFile \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 644, in resolve\r\n    raise VersionConflict(dist, req)\r\npkg_resources.VersionConflict: (botocore 1.8.38 (/usr/local/lib/python2.7/dist-packages), Requirement.parse('botocore>=1.7.0,<1.8.0'))\r\n```\r\nIs it really necessary to set an upper limit for bocore versions to 1.8.0?\r\nCould it be possible to allow the usage of the latest botocore version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/38", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/38/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/38/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/38", "id": 292407873, "node_id": "MDU6SXNzdWUyOTI0MDc4NzM=", "number": 38, "title": "Invalid return value for SnowflakeDialect.get_primary_keys (deprecated)", "user": {"login": "nrth", "id": 640755, "node_id": "MDQ6VXNlcjY0MDc1NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/640755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrth", "html_url": "https://github.com/nrth", "followers_url": "https://api.github.com/users/nrth/followers", "following_url": "https://api.github.com/users/nrth/following{/other_user}", "gists_url": "https://api.github.com/users/nrth/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrth/subscriptions", "organizations_url": "https://api.github.com/users/nrth/orgs", "repos_url": "https://api.github.com/users/nrth/repos", "events_url": "https://api.github.com/users/nrth/events{/privacy}", "received_events_url": "https://api.github.com/users/nrth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913926, "node_id": "MDU6TGFiZWwzOTQ5MTM5MjY=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/3", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/3", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/3/labels", "id": 3072307, "node_id": "MDk6TWlsZXN0b25lMzA3MjMwNw==", "number": 3, "title": "v1.1.0", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2018-01-29T17:13:26Z", "updated_at": "2018-01-29T17:13:33Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2018-01-29T13:32:58Z", "updated_at": "2018-01-29T17:13:33Z", "closed_at": "2018-01-29T17:13:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 2.7.12, Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial\r\n> SQLAlchemy==1.1.15\r\n> snowflake-sqlalchemy==1.0.9\r\n> snowflake-connector-python==1.4.17\r\n\r\nI tracked down an issue with incorrectly set primary keys on reflection lookups.\r\n\r\n#### Steps to reproduce\r\n1. Setup a table/schema with primary key column\r\n2. Do a lookup with sqlalchemy.Table.columns\r\n3. The primary_key property of the pk column is incorrect\r\n\r\n#### Possible solution\r\n\r\n`base.SnowflakeDialect.get_primary_keys` implements a [deprecated](http://docs.sqlalchemy.org/en/latest/core/reflection.html#sqlalchemy.engine.reflection.Inspector.get_primary_keys) method and should return a list of primary keys if implemented (returns a constrained_columns dict currently).\r\n\r\n`get_pk_constraint` is the [replacement](http://docs.sqlalchemy.org/en/latest/core/reflection.html#sqlalchemy.engine.reflection.Inspector.get_pk_constraint) for `get_primary_keys`, the compat implementation in the super class is still based on `get_primary_keys`, the invalid return value of `get_primary_keys` results in an incorrect dict though:\r\n\r\n> {'constrained_columns': {'constrained_columns': ['id'], 'name': None}}\r\n\r\nExpected:\r\n\r\n> {'constrained_columns': ['id'], 'name': None}\r\n\r\nSo basically renaming `get_primary_keys` to `get_pk_constraint` should do the trick, happy to submit a pull request if needed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/37", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/37/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/37/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/37", "id": 292221469, "node_id": "MDU6SXNzdWUyOTIyMjE0Njk=", "number": 37, "title": "Snowflake connection not closing after execution", "user": {"login": "ulti-star", "id": 35897441, "node_id": "MDQ6VXNlcjM1ODk3NDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/35897441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulti-star", "html_url": "https://github.com/ulti-star", "followers_url": "https://api.github.com/users/ulti-star/followers", "following_url": "https://api.github.com/users/ulti-star/following{/other_user}", "gists_url": "https://api.github.com/users/ulti-star/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulti-star/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulti-star/subscriptions", "organizations_url": "https://api.github.com/users/ulti-star/orgs", "repos_url": "https://api.github.com/users/ulti-star/repos", "events_url": "https://api.github.com/users/ulti-star/events{/privacy}", "received_events_url": "https://api.github.com/users/ulti-star/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-28T17:20:26Z", "updated_at": "2018-01-29T02:07:15Z", "closed_at": "2018-01-29T02:07:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n3.6\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\nLinux-4.9.60-linuxkit-aufs-x86_64-with-debian-8.10\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\nasn1crypto (0.24.0)\r\nazure-common (1.1.8)\r\nazure-nspkg (2.0.0)\r\nazure-storage (0.34.2)\r\nboto3 (1.4.8)\r\nbotocore (1.8.36)\r\ncertifi (2018.1.18)\r\ncffi (1.11.4)\r\ncryptography (2.1.4)\r\ndocutils (0.14)\r\nfuture (0.16.0)\r\nidna (2.6)\r\nijson (2.3)\r\njmespath (0.9.3)\r\npexpect (4.2.1)\r\npip (9.0.1)\r\nprofilehooks (1.8.1)\r\npsycopg2 (2.6.2)\r\nptyprocess (0.5.2)\r\npyasn1 (0.3.7)\r\npyasn1-modules (0.1.5)\r\npycparser (2.18)\r\npycryptodome (3.4.8)\r\nPyMySQL (0.6.7)\r\npyOpenSSL (17.5.0)\r\npython-dateutil (2.6.1)\r\npytz (2017.3)\r\nrequests (2.11.1)\r\ns3transfer (0.1.12)\r\nsetuptools (38.2.4)\r\nsix (1.11.0)\r\nsnowflake-connector-python (1.4.13)\r\nsnowflake-sqlalchemy (1.0.7)\r\nSQLAlchemy (1.1.15)\r\ntqdm (4.4.0)\r\nwebsocket-client (0.37.0)\r\nwheel (0.30.0)\r\n\r\n4. What did you do?\r\nI posted this issue in StackOverflow and am creating this issue in GitHub as the problem was not resolved.\r\n\r\nhttps://stackoverflow.com/questions/48464343/sqlalchemy-snowflake-not-closing-connection-after-successfully-retrieving-result\r\n\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\n```import logging\r\nfrom sqlalchemy import create_engine\r\nfrom snowflake.sqlalchemy import URL\r\n\r\nfor logger_name in ['snowflake', 'botocore']:\r\n    logger = logging.getLogger(logger_name)\r\n    logger.setLevel(logging.DEBUG)\r\n    ch = logging.FileHandler('log')\r\n    ch.setLevel(logging.DEBUG)\r\n    ch.setFormatter(logging.Formatter('%(asctime)s - %(threadName)s %(filename)s:%(lineno)d - %(funcName)s() - %(levelname)s - %(message)s'))\r\n    logger.addHandler(ch)\r\n\r\nengine = create_engine(URL(\r\n            account=xxxxx,\r\n            user=xxxxxx,\r\n            password=xxxxxxx,\r\n            database=xxxxx,\r\n            schema=xxxxx,\r\n            warehouse=xxxxxx))\r\n\r\nquery = \"\"\"SELECT * FROM db_name.schema_name.table_name LIMIT 200000\"\"\"\r\n\r\nprint (\"creating connection object\")\r\nconnection = engine.connect()\r\n\r\nprint (\"executing query\")\r\nresults = engine.execute(query)\r\n\r\nprint (\"Total rows retreived by the query\")\r\nprint(results.rowcount)\r\n\r\nprint (\"closing connection\")\r\nconnection.close()\r\n\r\nprint (\"disposing engine\")\r\nengine.dispose()```\r\n\r\n5. What did you expect to see?\r\nI expect the program to print the number of rows and exit.\r\n\r\n6. What did you see instead?\r\nThe connection just hangs in there until I manually kill the python process. But after adding the logging function the program started throwing errors which I have added below.\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\ncreating connection object\r\nexecuting query\r\nTotal rows retreived by the query\r\n109323\r\nclosing connection\r\ndisposing engine\r\n\r\nException during reset or similar\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/pool.py\", line 687, in _finalize_fairy\r\n    fairy._reset(pool)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/pool.py\", line 829, in _reset\r\n    pool._dialect.do_rollback(self)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 440, in do_rollback\r\n    dbapi_connection.rollback()\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/connection.py\", line 375, in rollback\r\n    self.cursor().execute(\"ROLLBACK\")\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/cursor.py\", line 479, in execute\r\n    _is_put_get=_is_put_get)\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/cursor.py\", line 368, in _execute_helper\r\n    _no_results=_no_results)\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/connection.py\", line 617, in cmd_query\r\n    data, client=client, _no_results=_no_results)\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/network.py\", line 248, in request\r\n    timeout=self._connection.network_timeout)\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/network.py\", line 387, in _post_request\r\n    no_retry=no_retry, socket_timeout=socket_timeout)\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/network.py\", line 454, in fetch\r\n    **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/network.py\", line 517, in _request_exec_wrapper\r\n    raise e\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/network.py\", line 480, in _request_exec_wrapper\r\n    **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/snowflake/connector/network.py\", line 633, in _request_exec\r\n    auth=SnowflakeAuth(token),\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/vendored/requests/sessions.py\", line 465, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/vendored/requests/sessions.py\", line 573, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/vendored/requests/adapters.py\", line 370, in send\r\n    timeout=timeout\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 544, in urlopen\r\n    body=body, headers=headers)\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 341, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/vendored/requests/packages/urllib3/connectionpool.py\", line 761, in _validate_conn\r\n    conn.connect()\r\n  File \"/usr/local/lib/python3.6/site-packages/botocore/vendored/requests/packages/urllib3/connection.py\", line 224, in connect\r\n    is_time_off = datetime.date.today() < RECENT_DATE\r\nModuleNotFoundError: import of time halted; None in sys.modules\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/35", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/35/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/35/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/35", "id": 290880748, "node_id": "MDU6SXNzdWUyOTA4ODA3NDg=", "number": 35, "title": "Connection URL parameters aren't documented anywhere", "user": {"login": "kheuton", "id": 4196307, "node_id": "MDQ6VXNlcjQxOTYzMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4196307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kheuton", "html_url": "https://github.com/kheuton", "followers_url": "https://api.github.com/users/kheuton/followers", "following_url": "https://api.github.com/users/kheuton/following{/other_user}", "gists_url": "https://api.github.com/users/kheuton/gists{/gist_id}", "starred_url": "https://api.github.com/users/kheuton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kheuton/subscriptions", "organizations_url": "https://api.github.com/users/kheuton/orgs", "repos_url": "https://api.github.com/users/kheuton/repos", "events_url": "https://api.github.com/users/kheuton/events{/privacy}", "received_events_url": "https://api.github.com/users/kheuton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-01-23T15:31:41Z", "updated_at": "2018-01-23T17:58:17Z", "closed_at": "2018-01-23T17:58:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm developing with snowflake-sqlalchemy, and in my organization control over the snowflake `ROLE` is important. I couldn't find any documentation either on snowflake's website, the snowflake-connector-python docs, or the snowflake-sqlalchemy docs indicating that it might be possible to specify role in a connection URL. ~~However, it looks like adding `?roleName=` to the connection URL would do the trick, based on the [python connector code](https://github.com/snowflakedb/snowflake-connector-python/blob/6c3e666ef6c388a3bde2b190256f88a615259196/auth.py#L156).~~ As mentioned below, this was incorrect, and `role` is the proper parameter. \r\n\r\nWhere should this be documented? I feel as if this repo is the appropriate place, as it contains the url constructor util and is also a heavy user of the URLs. Would it be appropriate to submit a PR documenting the ~~`roleName`~~ (and possibly other) url connection parameters?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/30", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/30/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/30/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/30", "id": 285494258, "node_id": "MDU6SXNzdWUyODU0OTQyNTg=", "number": 30, "title": "DESCRIBE TABLE result is not cached for get_columns and get_primary_keys", "user": {"login": "cladden", "id": 50999, "node_id": "MDQ6VXNlcjUwOTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/50999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cladden", "html_url": "https://github.com/cladden", "followers_url": "https://api.github.com/users/cladden/followers", "following_url": "https://api.github.com/users/cladden/following{/other_user}", "gists_url": "https://api.github.com/users/cladden/gists{/gist_id}", "starred_url": "https://api.github.com/users/cladden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cladden/subscriptions", "organizations_url": "https://api.github.com/users/cladden/orgs", "repos_url": "https://api.github.com/users/cladden/repos", "events_url": "https://api.github.com/users/cladden/events{/privacy}", "received_events_url": "https://api.github.com/users/cladden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/2", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/2", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/2/labels", "id": 3000199, "node_id": "MDk6TWlsZXN0b25lMzAwMDE5OQ==", "number": 2, "title": "v1.0.9", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2017-12-27T19:03:06Z", "updated_at": "2018-01-03T22:40:49Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2018-01-02T17:50:11Z", "updated_at": "2018-01-03T22:40:49Z", "closed_at": "2018-01-03T22:40:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "As far was I can tell, the exact same `DESCRIBE TABLE ...` command is called in both `get_columns()` and `get_primary_keys()`. During reflection, this causes negative performance issues. If DESCRIBE TABLE has to be called twice, could the result be cached to reduce one of the calls?\r\n\r\nAs an example, if a new caching method stored the `DESCRIBE TABLE ...` n2i, result:\r\n\r\n```\r\n@reflection.cache\r\ndef describe_table(self, connection, full_table_name, **kw):\r\n    result = connection.execute(\r\n            \"DESCRIBE TABLE /* sqlalchemy */ {0}\".format(\r\n                    full_table_name))\r\n    n2i = self.__class__._map_name_to_idx(result)\r\n    result = [row for row in result]\r\n    return n2i, result\r\n```\r\n\r\nThen, it could potentially be used in this manner...\r\n\r\nIn `get_primary_keys()`:\r\n```\r\n@reflection.cache\r\ndef get_primary_keys(self, connection, table_name, schema=None, **kw):\r\n    schema = schema or self.default_schema_name\r\n    if not schema:\r\n        row = connection.execute(\"SELECT CURRENT_SCHEMA()\").fetchone()\r\n        schema = self.normalize_name(row[0])\r\n    full_table_name = self._denormalize_quote_join(schema, table_name)\r\n\r\n    n2i, result = self.describe_table(connection, full_table_name, **kw)\r\n    ...\r\n```\r\n\r\nIn `get_columns()`:\r\n```\r\n@reflection.cache\r\ndef get_columns(self, connection, table_name, schema=None, **kw):\r\n    schema = schema or self.default_schema_name\r\n    if not schema:\r\n        row = connection.execute(\"SELECT CURRENT_SCHEMA()\").fetchone()\r\n        schema = self.normalize_name(row[0])\r\n    full_table_name = self._denormalize_quote_join(schema, table_name)\r\n\r\n    n2i, result = self.describe_table(connection, full_table_name, **kw)\r\n    ...\r\n```\r\n\r\nI'm sure there's probably cleaner ways than the above to implement the caching and/or refactor to reduce the repeated code blocks :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/29", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/29/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/29/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/29", "id": 285474951, "node_id": "MDU6SXNzdWUyODU0NzQ5NTE=", "number": 29, "title": "get_foreign_keys should cache database and schema", "user": {"login": "cladden", "id": 50999, "node_id": "MDQ6VXNlcjUwOTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/50999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cladden", "html_url": "https://github.com/cladden", "followers_url": "https://api.github.com/users/cladden/followers", "following_url": "https://api.github.com/users/cladden/following{/other_user}", "gists_url": "https://api.github.com/users/cladden/gists{/gist_id}", "starred_url": "https://api.github.com/users/cladden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cladden/subscriptions", "organizations_url": "https://api.github.com/users/cladden/orgs", "repos_url": "https://api.github.com/users/cladden/repos", "events_url": "https://api.github.com/users/cladden/events{/privacy}", "received_events_url": "https://api.github.com/users/cladden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-02T16:33:02Z", "updated_at": "2018-01-03T22:40:09Z", "closed_at": "2018-01-03T22:40:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "As noted in the `SnowflakeDialect` comments, the current implementation of `get_foreign_keys()` does not cache the database or schema. Instead, it goes out to snowflake to obtain the `full_schema_name ` for every table, resulting in 2 calls to snowflake per table. \r\n\r\nThis is problematic for alembic reflection of schemas with many tables. snowflake reflection can take as long as 15 minutes; while redshift/postgres is under 1 minute. Any caching that can reduce excess calls to snowflake is greatly appreciated :-). \r\n\r\nFor reference, using cProfile during reflection shows:\r\n* 66.9% of the time is spent in `get_columns()`\r\n* 18.5% of the time is spent in `get_foreign_keys()`\r\n* 6.7% of the time is spent in `get_primary_keys()`\r\n\r\nThe low hanging fruit may be to address the 18.5% issue if the `SnowflakeDialect` introduced a new caching method:\r\n\r\n```\r\n@reflection.cache\r\ndef get_full_schema_name(self, connection, schema=None, **kw):\r\n    schema = schema or self.default_schema_name\r\n    row = connection.execute(\"SELECT CURRENT_DATABASE(), \"\r\n                             \"CURRENT_SCHEMA()\").fetchone()\r\n    full_schema_name = self._denormalize_quote_join(\r\n            row[0], schema if schema else row[1])\r\n    return full_schema_name\r\n```\r\n\r\nThen it could be used like this in `get_foreign_keys()`:\r\n```\r\n@reflection.cache\r\ndef get_foreign_keys(self, connection, table_name, schema=None, **kw):\r\n    \"\"\"\r\n    Gets all foreign keys\r\n    \"\"\"\r\n\r\n    full_schema_name = self.get_full_schema_name(connection, schema, **kw)\r\n    ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/25", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/25/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/25/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/25", "id": 284766194, "node_id": "MDU6SXNzdWUyODQ3NjYxOTQ=", "number": 25, "title": "foreign key names should be normalized ", "user": {"login": "cladden", "id": 50999, "node_id": "MDQ6VXNlcjUwOTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/50999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cladden", "html_url": "https://github.com/cladden", "followers_url": "https://api.github.com/users/cladden/followers", "following_url": "https://api.github.com/users/cladden/following{/other_user}", "gists_url": "https://api.github.com/users/cladden/gists{/gist_id}", "starred_url": "https://api.github.com/users/cladden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cladden/subscriptions", "organizations_url": "https://api.github.com/users/cladden/orgs", "repos_url": "https://api.github.com/users/cladden/repos", "events_url": "https://api.github.com/users/cladden/events{/privacy}", "received_events_url": "https://api.github.com/users/cladden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/2", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/2", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/2/labels", "id": 3000199, "node_id": "MDk6TWlsZXN0b25lMzAwMDE5OQ==", "number": 2, "title": "v1.0.9", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2017-12-27T19:03:06Z", "updated_at": "2018-01-03T22:40:49Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2017-12-27T17:39:39Z", "updated_at": "2017-12-27T19:27:14Z", "closed_at": "2017-12-27T19:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Foreign key names should be normalized for proper reflection. I believe the `foreign_key_map` is built by name in `get_foreign_keys`, here:\r\nhttps://github.com/snowflakedb/snowflake-sqlalchemy/blob/master/base.py#L484\r\n\r\nI think the fix may be a 1 line change to wrap the `name` value with a call to `self.normalize_name`, e.g.:\r\n\r\n```\r\ndef get_foreign_keys(self, connection, table_name, schema=None, **kw):\r\n...\r\n        foreign_key_map = {}\r\n        for row in result:\r\n-           name = row[n2i['fk_name']]\r\n+           name = self.normalize_name(row[n2i['fk_name']])\r\n            constrained_table = self.normalize_name(row[n2i['fk_table_name']])\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/24", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/24/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/24/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/24", "id": 284755779, "node_id": "MDU6SXNzdWUyODQ3NTU3Nzk=", "number": 24, "title": "SnowflakeDialect should set the default schema name", "user": {"login": "cladden", "id": 50999, "node_id": "MDQ6VXNlcjUwOTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/50999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cladden", "html_url": "https://github.com/cladden", "followers_url": "https://api.github.com/users/cladden/followers", "following_url": "https://api.github.com/users/cladden/following{/other_user}", "gists_url": "https://api.github.com/users/cladden/gists{/gist_id}", "starred_url": "https://api.github.com/users/cladden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cladden/subscriptions", "organizations_url": "https://api.github.com/users/cladden/orgs", "repos_url": "https://api.github.com/users/cladden/repos", "events_url": "https://api.github.com/users/cladden/events{/privacy}", "received_events_url": "https://api.github.com/users/cladden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/2", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/2", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/2/labels", "id": 3000199, "node_id": "MDk6TWlsZXN0b25lMzAwMDE5OQ==", "number": 2, "title": "v1.0.9", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2017-12-27T19:03:06Z", "updated_at": "2018-01-03T22:40:49Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2017-12-27T16:34:46Z", "updated_at": "2017-12-28T02:54:39Z", "closed_at": "2017-12-28T02:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to postgres dialect implementation, the default schema name should be set by implementing the `_get_default_schema_name` method. This method will be called once on init instead of every call to `SnowflakeDialect.get_columns` and `SnowflakeDialect.get_primary_keys`. The distinction is important for performance reasons esp. for a schema with many e.g. 100+ tables because `get_columns` and `get_primary_keys` will be called often and reflection will take as long as 10 minutes to complete. The solution might be to implement `_get_default_schema_name` method as shown below. \r\n\r\npostgres dialect `_get_default_schema_name` implementation:\r\nhttps://github.com/zzzeek/sqlalchemy/blob/b60461fb95bc78da16c5eb2948e1aff170b78bbc/lib/sqlalchemy/dialects/postgresql/base.py#L2281\r\n\r\nFor the `SnowflakeDialect`, my guess at the implementation is:\r\n```\r\ndef _get_default_schema_name(self, connection):\r\n    \"\"\"Return the string name of the currently selected schema from\r\n    the given connection.\r\n\r\n    This is used by the default implementation to populate the\r\n    \"default_schema_name\" attribute and is called exactly\r\n    once upon first connect.\r\n\r\n    \"\"\"\r\n    schema = connection.scalar(\"select current_schema()\")\r\n    return self.normalize_name(schema)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/22", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/22/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/22/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/22", "id": 283644564, "node_id": "MDU6SXNzdWUyODM2NDQ1NjQ=", "number": 22, "title": "get_columns() should reflect string lengths", "user": {"login": "cladden", "id": 50999, "node_id": "MDQ6VXNlcjUwOTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/50999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cladden", "html_url": "https://github.com/cladden", "followers_url": "https://api.github.com/users/cladden/followers", "following_url": "https://api.github.com/users/cladden/following{/other_user}", "gists_url": "https://api.github.com/users/cladden/gists{/gist_id}", "starred_url": "https://api.github.com/users/cladden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cladden/subscriptions", "organizations_url": "https://api.github.com/users/cladden/orgs", "repos_url": "https://api.github.com/users/cladden/repos", "events_url": "https://api.github.com/users/cladden/events{/privacy}", "received_events_url": "https://api.github.com/users/cladden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/1", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/milestone/1", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/milestones/1/labels", "id": 2992080, "node_id": "MDk6TWlsZXN0b25lMjk5MjA4MA==", "number": 1, "title": "v1.0.8", "description": null, "creator": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2017-12-21T00:07:22Z", "updated_at": "2017-12-21T00:34:31Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2017-12-20T17:48:04Z", "updated_at": "2017-12-21T00:34:31Z", "closed_at": "2017-12-21T00:07:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n\r\n`3.5.4`\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\n\r\n`Linux-4.9.49-moby-x86_64-with-debian-8.10`\r\n \r\n3. What are the component versions in the environment (`pip list`)? \r\n\r\nN/A\r\n\r\n4. What did you do?\r\n\r\nCreated this sqlalchemy model:\r\n\r\n```\r\nclass Appointment(Base):\r\n    string_with_len = Column(String(100))\r\n```\r\n\r\nUsing that model, sqlalchemy correctly issued this create table statement:\r\n\r\n```\r\nCREATE TABLE appointment (\r\n    string_with_len VARCHAR(100)\r\n);\r\n```\r\n\r\nThen, I reflected the table back by doing this:\r\n\r\n```\r\nfrom sqlalchemy import Table\r\nfrom sqlalchemy.engine.reflection import Inspector\r\nfrom sqlalchemy import create_engine\r\n\r\nengine = create_engine(\"{0}://{1}:{2}@{3}:{4}/{5}\".format('snowflake', db_user, db_pass, db_host, db_port, db_name),\r\n                       connect_args={'sslmode': 'prefer'})\r\nmeta = Base.metadata\r\nt = Table('appointment', meta)\r\ninsp = Inspector.from_engine(engine)\r\ninsp.reflecttable(t, None)\r\nprint(t)\r\n```\r\n\r\n5. What did you expect to see?\r\n\r\n```\r\nTable('appointment', MetaData(bind=None), \r\nColumn('string_with_len', String(100), table=<appointment>),\r\n...\r\n```\r\n\r\n6. What did you see instead?\r\n\r\n```\r\nTable('appointment', MetaData(bind=None), \r\nColumn('string_with_len', VARCHAR(), table=<appointment>),\r\n...\r\n```\r\n\r\nEven though my model has the `string_with_len` column as `Column(String(100))`, I see the reflected type as `VARCHAR`, and _without the max length_. In snowflake-sqlalchemy's `base. SnowflakeDialect.get_columns()`, I see the `character_maximum_length` is being queried from snowflake, but then thrown away. Could `character_maximum_length` be used to determine a more accurate sqlalchemy type with length?\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\nN/A", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/19", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/19/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/19/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/19", "id": 229830421, "node_id": "MDU6SXNzdWUyMjk4MzA0MjE=", "number": 19, "title": "Unsupported data type 'boolean' when running with superset", "user": {"login": "ivankixeye", "id": 21066985, "node_id": "MDQ6VXNlcjIxMDY2OTg1", "avatar_url": "https://avatars0.githubusercontent.com/u/21066985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivankixeye", "html_url": "https://github.com/ivankixeye", "followers_url": "https://api.github.com/users/ivankixeye/followers", "following_url": "https://api.github.com/users/ivankixeye/following{/other_user}", "gists_url": "https://api.github.com/users/ivankixeye/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivankixeye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivankixeye/subscriptions", "organizations_url": "https://api.github.com/users/ivankixeye/orgs", "repos_url": "https://api.github.com/users/ivankixeye/repos", "events_url": "https://api.github.com/users/ivankixeye/events{/privacy}", "received_events_url": "https://api.github.com/users/ivankixeye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-18T23:18:56Z", "updated_at": "2017-09-18T17:56:53Z", "closed_at": "2017-09-18T17:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n3.6.1\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nLinux-4.9.27-moby-x86_64-with (alpine docker container)\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\nSee Dockerfile here: https://github.com/ivankixeye/superset/blob/master/Dockerfile\r\n\r\n4. What did you do?\r\nWhen running the docker container, with mounted volume with superset_config.py configured to connect to snowflake e.g.\r\n```python\r\nSQLALCHEMY_DATABASE_URI = 'snowflake://user:pass@account/database/schema?warehouse=whouse'\r\n```\r\nsuperset startup fails because of this error:\r\n```\r\nDB Creation and initialization failed: (snowflake.connector.errors.ProgrammingError) 002040 (42601): 49122873-702d-463e-9f2e-cef63feffa3c: SQL compilation error:\r\nUnsupported data type 'boolean'. [SQL: '\\nCREATE TABLE ab_user (\\n\\tid INTEGER NOT NULL AUTOINCREMENT, \\n\\tfirst_name VARCHAR(64) NOT NULL, \\n\\tlast_name VARCHAR(64) NOT NULL, \\n\\tusername VARCHAR(64) NOT NULL, \\n\\tpassword VARCHAR(256), \\n\\tactive BOOLEAN, \\n\\temail VARCHAR(64) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tlogin_count INTEGER, \\n\\tfail_login_count INTEGER, \\n\\tcreated_on DATETIME, \\n\\tchanged_on DATETIME, \\n\\tcreated_by_fk INTEGER, \\n\\tchanged_by_fk INTEGER, \\n\\tPRIMARY KEY (id), \\n\\tUNIQUE (username), \\n\\tUNIQUE (email), \\n\\tFOREIGN KEY(created_by_fk) REFERENCES ab_user (id), \\n\\tFOREIGN KEY(changed_by_fk) REFERENCES ab_user (id)\\n)\\n\\n']\r\n```\r\n\r\n5. What did you expect to see?\r\nSuperset running without initialization errors. \r\n\r\n6. What did you see instead?\r\nSee error above\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\nNo, I captured all output from the docker container see above\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/17", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/17/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/17/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/17", "id": 228585834, "node_id": "MDU6SXNzdWUyMjg1ODU4MzQ=", "number": 17, "title": "BUG/Issues using COPY keyword in query", "user": {"login": "Pangstar", "id": 7747104, "node_id": "MDQ6VXNlcjc3NDcxMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7747104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pangstar", "html_url": "https://github.com/Pangstar", "followers_url": "https://api.github.com/users/Pangstar/followers", "following_url": "https://api.github.com/users/Pangstar/following{/other_user}", "gists_url": "https://api.github.com/users/Pangstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pangstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pangstar/subscriptions", "organizations_url": "https://api.github.com/users/Pangstar/orgs", "repos_url": "https://api.github.com/users/Pangstar/repos", "events_url": "https://api.github.com/users/Pangstar/events{/privacy}", "received_events_url": "https://api.github.com/users/Pangstar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913926, "node_id": "MDU6TGFiZWwzOTQ5MTM5MjY=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-15T01:25:44Z", "updated_at": "2017-05-15T17:02:48Z", "closed_at": "2017-05-15T17:02:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n3.6\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nmac\r\n\r\n4. What did you do?\r\nIf possible, provide a recipe for reproducing the error.\r\nA complete runnable program is good.\r\n\r\nTrying to run a snowflake COPY statement from engine.execute using sqlalchemy.\r\n\r\n5. What did you expect to see?\r\nI expected it to copy files\r\n\r\n6. What did you see instead?\r\nIt didn't run as expected - snowflake historical logs showed it ran..  (and when I ran the same query using the snowflake online client it worked) but when executed from sqlalchemy it failed to copy.\r\n\r\ni.e. everything looks fine from the client perspective but on snowflake's side it fails - I added COPY to the AUTOCOMMIT_REGEXP regex and everything works as expected\r\n\r\nI have created a PR which fixes the issue on my machine. It is just to add the copy reserved keyword to the base.py file in 2 places.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/15", "repository_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy", "labels_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/15/comments", "events_url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/issues/15/events", "html_url": "https://github.com/snowflakedb/snowflake-sqlalchemy/issues/15", "id": 222024540, "node_id": "MDU6SXNzdWUyMjIwMjQ1NDA=", "number": 15, "title": "BUG with accounts which have subdomains - unable to connect - possible solution in ticket.", "user": {"login": "Pangstar", "id": 7747104, "node_id": "MDQ6VXNlcjc3NDcxMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7747104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pangstar", "html_url": "https://github.com/Pangstar", "followers_url": "https://api.github.com/users/Pangstar/followers", "following_url": "https://api.github.com/users/Pangstar/following{/other_user}", "gists_url": "https://api.github.com/users/Pangstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pangstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pangstar/subscriptions", "organizations_url": "https://api.github.com/users/Pangstar/orgs", "repos_url": "https://api.github.com/users/Pangstar/repos", "events_url": "https://api.github.com/users/Pangstar/events{/privacy}", "received_events_url": "https://api.github.com/users/Pangstar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 394913926, "node_id": "MDU6TGFiZWwzOTQ5MTM5MjY=", "url": "https://api.github.com/repos/snowflakedb/snowflake-sqlalchemy/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-16T18:18:28Z", "updated_at": "2017-04-18T01:14:20Z", "closed_at": "2017-04-17T01:03:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n1. What version of Python are you using (`python --version`)?\r\n3.5\r\n\r\n2. What operating system and processor architecture are you using (`python -c 'import platform; print(platform.platform())'`)?\r\nwindows 10 - intel 17 - not sure ..\r\n\r\n3. What are the component versions in the environment (`pip list`)? \r\n1.0.5\r\n\r\n4. What did you do?\r\nI am trying to connect using a account with a sub domain - I think I've found the issue with your SnowflakeDialect class in base.py\r\n\r\n`\r\nif '.' not in opts['host']: \r\n`\r\nThis on line 356 I don't think there should be an if statement otherwise this doesn't work for connections which have regional subdomains.\r\n\r\n5. What did you expect to see?\r\nI expected it to connect and able to query - once I removed this if statement and made \r\n```\r\n   opts['account'] = opts['host']\r\n            opts['host'] = opts['host'] + '.snowflakecomputing.com'\r\n            opts['port'] = '443'\r\n```\r\nrun as part of create_connect_args then everything worked! (for subdomains) but haven't tested for other connection types as I don't have a other connections. \r\n\r\n6. What did you see instead?\r\nI kept getting a bug from sqlalchemy \r\n\r\n`sqlalchemy.exc.ProgrammingError: (snowflake.connector.errors.ProgrammingError) 251001: None: Account must be specified`\r\n\r\nthe snowflake-sqlalchemy code was not in the stack trace\r\n\r\n7. Can you set logging to DEBUG and collect the logs?\r\n\r\n-- Is this an open project can I submit a pr?\r\n", "performed_via_github_app": null, "score": 1.0}]}