{"total_count": 1539, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/localstack/localstack/issues/2861", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2861/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2861/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2861/events", "html_url": "https://github.com/localstack/localstack/issues/2861", "id": 683864482, "node_id": "MDU6SXNzdWU2ODM4NjQ0ODI=", "number": 2861, "title": "S3 Put Batch is not working", "user": {"login": "yaitskov", "id": 1292734, "node_id": "MDQ6VXNlcjEyOTI3MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1292734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaitskov", "html_url": "https://github.com/yaitskov", "followers_url": "https://api.github.com/users/yaitskov/followers", "following_url": "https://api.github.com/users/yaitskov/following{/other_user}", "gists_url": "https://api.github.com/users/yaitskov/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaitskov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaitskov/subscriptions", "organizations_url": "https://api.github.com/users/yaitskov/orgs", "repos_url": "https://api.github.com/users/yaitskov/repos", "events_url": "https://api.github.com/users/yaitskov/events{/privacy}", "received_events_url": "https://api.github.com/users/yaitskov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-21T22:48:42Z", "updated_at": "2020-08-22T12:55:57Z", "closed_at": "2020-08-22T12:46:40Z", "author_association": "NONE", "active_lock_reason": null, "body": " Put Batch always creates individual files on S3.\r\nBreaks existing tests written for real AWS S3, because suffix hashes are random and \r\norder of messages in files on S3 doesn't match order in the batch!\r\n\r\n[1,2,3] is stored\r\nbut items are read in order [3,1,2]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2854", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2854/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2854/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2854/events", "html_url": "https://github.com/localstack/localstack/issues/2854", "id": 682044810, "node_id": "MDU6SXNzdWU2ODIwNDQ4MTA=", "number": 2854, "title": "Slow S3 upload/delete", "user": {"login": "yaitskov", "id": 1292734, "node_id": "MDQ6VXNlcjEyOTI3MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1292734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaitskov", "html_url": "https://github.com/yaitskov", "followers_url": "https://api.github.com/users/yaitskov/followers", "following_url": "https://api.github.com/users/yaitskov/following{/other_user}", "gists_url": "https://api.github.com/users/yaitskov/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaitskov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaitskov/subscriptions", "organizations_url": "https://api.github.com/users/yaitskov/orgs", "repos_url": "https://api.github.com/users/yaitskov/repos", "events_url": "https://api.github.com/users/yaitskov/events{/privacy}", "received_events_url": "https://api.github.com/users/yaitskov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-19T18:24:09Z", "updated_at": "2020-08-19T19:15:54Z", "closed_at": "2020-08-19T19:15:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "On host laptop with core i7 16g ram upload speed is around 1 file per second.\r\nIs there sleep somewhere? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2846", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2846/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2846/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2846/events", "html_url": "https://github.com/localstack/localstack/issues/2846", "id": 679605218, "node_id": "MDU6SXNzdWU2Nzk2MDUyMTg=", "number": 2846, "title": "Publish image version (tag) to dockerhub", "user": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars3.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-15T16:34:25Z", "updated_at": "2020-08-15T20:52:13Z", "closed_at": "2020-08-15T20:52:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, @whummer, I'd like to ask you to publish the image with a new tag (`0.11.4` or `0.12.0`) to dockerhub.\r\nThere are a bunch of crucial bugs fixed in the `latest` image (and it also seems to be 2 times smaller in size?).\r\n\r\n![image](https://user-images.githubusercontent.com/36276403/90316894-21fdeb00-df2e-11ea-9a80-dca9e2c537ce.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2839", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2839/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2839/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2839/events", "html_url": "https://github.com/localstack/localstack/issues/2839", "id": 677962068, "node_id": "MDU6SXNzdWU2Nzc5NjIwNjg=", "number": 2839, "title": "Latest Docker container does not allow for create of an SQS Queue", "user": {"login": "anjiemerchant", "id": 31166096, "node_id": "MDQ6VXNlcjMxMTY2MDk2", "avatar_url": "https://avatars3.githubusercontent.com/u/31166096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anjiemerchant", "html_url": "https://github.com/anjiemerchant", "followers_url": "https://api.github.com/users/anjiemerchant/followers", "following_url": "https://api.github.com/users/anjiemerchant/following{/other_user}", "gists_url": "https://api.github.com/users/anjiemerchant/gists{/gist_id}", "starred_url": "https://api.github.com/users/anjiemerchant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anjiemerchant/subscriptions", "organizations_url": "https://api.github.com/users/anjiemerchant/orgs", "repos_url": "https://api.github.com/users/anjiemerchant/repos", "events_url": "https://api.github.com/users/anjiemerchant/events{/privacy}", "received_events_url": "https://api.github.com/users/anjiemerchant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-08-12T20:35:31Z", "updated_at": "2020-08-18T15:12:29Z", "closed_at": "2020-08-18T15:12:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nRunning `aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name test_queue` results in the following error message:\r\n\r\n```\r\nUnable to parse response (not well-formed (invalid token): line 1, column 0), invalid XML received. Further retries may succeed:\r\nb'{\"status\": \"running\"}'\r\n```\r\nRunning `aws --endpoint-url=http://localhost:4576 sqs create-queue --queue-name test_queue` results in the following error message:\r\n```\r\nConnection was closed before we received a valid response from endpoint URL: \"http://localhost:4576/\".\r\n```\r\n...\r\n\r\n## Expected behavior\r\nQueues should be created. \r\n\r\n`aws --endpoint-url=http://localhost:4566 sqs list-queues` should list queues.\r\n...\r\n\r\n## Actual behavior\r\nNo queues are created. No queues are listed.\r\n...\r\n\r\n# Steps to reproduce\r\n1. Start LocalStack.\r\n2. Run `aws --endpoint-url=http://localhost:4576 sqs create-queue --queue-name test_queue` in terminal. See error message.\r\n3. Run  `aws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name test_queue` in terminal. See error message.\r\n\r\n## Command used to start LocalStack\r\nHere is my Dockerfile:\r\n```\r\nversion: '3.2'\r\nservices:\r\n  localstack:\r\n    image: localstack/localstack:latest\r\n    container_name: localstack_demo\r\n    ports:\r\n      - '4563-4599:4563-4599'\r\n      - '8055:8080'\r\n    environment:\r\n      - SERVICES=s3\r\n      - DEBUG=1\r\n      - DATA_DIR=/tmp/localstack/data\r\n    volumes:\r\n      - './.localstack:/tmp/localstack'\r\n      - '/var/run/docker.sock:/var/run/docker.sock'\r\n```\r\n\r\nI ran `docker-compose -f localstack/docker-compose.yml up -d`\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2825", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2825/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2825/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2825/events", "html_url": "https://github.com/localstack/localstack/issues/2825", "id": 675602138, "node_id": "MDU6SXNzdWU2NzU2MDIxMzg=", "number": 2825, "title": "Localstack stops responding when it is sent some amount of requests concurrently", "user": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars3.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1263658053, "node_id": "MDU6TGFiZWwxMjYzNjU4MDUz", "url": "https://api.github.com/repos/localstack/localstack/labels/performance", "name": "performance", "color": "edcc38", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-08-08T23:08:56Z", "updated_at": "2020-08-09T21:28:32Z", "closed_at": "2020-08-09T19:31:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "# This is a bug report\r\n\r\n# Detailed description\r\n\r\nThe title pretty much fully describes the bug. I believe this is not service-specific.\r\nI have stumbled with this testing concurrency durability of my services that use dynamodb.\r\nThe bug is floating, but the probability to reproduce it increases with the number of requests sent concurrently.\r\nI've seen it come up even with 3 concurrent requests, but it comes up with 10 ones more or less steadily.\r\n\r\n## Expected behavior\r\n\r\nLocalstack should respond to any amount of concurrent requests. I would even recommend using `dynamodb-local` image for dynamodb implementation (if it turns out that errors are service-specific), because it works properly with any number of concurrent requests.\r\n\r\n## Actual behavior\r\n\r\nSending some amount of concurrent requests to some AWS services might make the entire localstack unresponsive (see examples).\r\n\r\n# Steps to reproduce\r\n\r\nJust start localstack and try sending some 10+ requests to dynamodb or 30+ messages SQS concurrently.\r\n[Here is a demo of how to do it with the example sdk code pasted further](https://drive.google.com/file/d/1ZET6Or-eDJdmmpNqDPveWbv5kknHf-eg/view?usp=sharing)\r\n\r\n## Command used to start LocalStack\r\n\r\n```\r\nlocalstack start\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n<details>\r\n<summary> Javascript </summary>\r\n\r\nTo bootstrap run:\r\n\r\n```\r\nnpm init --yes\r\nnpm i aws-sdk\r\nnode index.js\r\n```\r\n\r\nThere are two scripts with sending concurrent requests to sqs/dynamodb, choose one of them setting `const main` variable.\r\n\r\n```ts\r\n// index.js\r\n\r\nconst aws = require(\"aws-sdk\");\r\n\r\nconst CONCURRENT_REQUESTS = 10;\r\n// set to sqsTest, to run test with sqs\r\nconst main = ddbTest;\r\n\r\nconst cfg = {\r\n    region: \"us-east-2\",\r\n    endpoint: \"http://localhost:4566\",\r\n};\r\n\r\nmain().then(\r\n    () => console.log(\"Done\"),\r\n    err => console.error(\"Whoops:\", err)\r\n);\r\n\r\n// Test sending PUT requests to DynamoDB concurrently\r\nasync function ddbTest() {\r\n    const ddb = new aws.DynamoDB(cfg);\r\n    const TableName = \"sandbox-table\";\r\n\r\n    // Create a sample table\r\n    await ddb.createTable({\r\n        TableName,\r\n        AttributeDefinitions: [{ AttributeName: \"partition_key\", AttributeType: \"S\", }],\r\n        KeySchema:            [{ AttributeName: \"partition_key\", KeyType: \"HASH\" }],\r\n        BillingMode: \"PAY_PER_REQUEST\",\r\n    }).promise();\r\n\r\n    console.log(\"Table\", TableName, \"is created\");\r\n\r\n    // Make concurrent requests\r\n    await waitForConcurrentRequests(i => {\r\n        const Put = { Item: { partition_key: { S: `bar${i}` } }, TableName };\r\n        return ddb.putItem(Put).promise();\r\n    });\r\n\r\n    // Check what was written to the table\r\n    const result = await ddb.scan({ TableName }).promise();\r\n    console.log(\"Items:\", result.Items.length, result.Items);\r\n\r\n    // Cleanup\r\n    await ddb.deleteTable({ TableName }).promise();\r\n}\r\n\r\nasync function waitForConcurrentRequests(makeRequest) {\r\n    let requests = [];\r\n    for (let i = 0; i < CONCURRENT_REQUESTS; ++i) {\r\n        requests.push(makeRequest(i));\r\n    }\r\n    console.log(\"Awaiting for responses...\");\r\n    console.time(\"All requests\");\r\n    await Promise.all(requests).then(\r\n        () => console.log(\"Ok\"),\r\n        err => console.error(\"Err\", err)\r\n    );\r\n    console.timeEnd(\"All requests\");\r\n}\r\n\r\n\r\n// Test sending messages to SQS concurrently\r\nasync function sqsTest() {\r\n    const sqs = new aws.SQS(cfg);\r\n    const { QueueUrl } = await sqs.createQueue({ QueueName: \"test-queue\" }).promise();\r\n\r\n    await waitForConcurrentRequests(i => {\r\n        return sqs.sendMessage({ MessageBody: `baz${i}`, QueueUrl }).promise();\r\n    });\r\n\r\n    // Pop all messages from the queue\r\n    let allMessages = [];\r\n    while (true) {\r\n        const msgs = await sqs.receiveMessage({\r\n            QueueUrl,\r\n            MaxNumberOfMessages: 10\r\n        }).promise();\r\n        if (msgs.Messages === undefined) {\r\n            break;\r\n        }\r\n        allMessages.push(...msgs.Messages.map(it => it.Body));\r\n    }\r\n\r\n    console.log(\"Messages:\", allMessages.length, allMessages);\r\n\r\n    // Cleanup\r\n    await sqs.deleteQueue({ QueueUrl }).promise();\r\n}\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2819", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2819/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2819/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2819/events", "html_url": "https://github.com/localstack/localstack/issues/2819", "id": 675008161, "node_id": "MDU6SXNzdWU2NzUwMDgxNjE=", "number": 2819, "title": "Latest lambci/docker-lambda image has removed hardcoded default credentials", "user": {"login": "j-sv", "id": 1316822, "node_id": "MDQ6VXNlcjEzMTY4MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1316822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-sv", "html_url": "https://github.com/j-sv", "followers_url": "https://api.github.com/users/j-sv/followers", "following_url": "https://api.github.com/users/j-sv/following{/other_user}", "gists_url": "https://api.github.com/users/j-sv/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-sv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-sv/subscriptions", "organizations_url": "https://api.github.com/users/j-sv/orgs", "repos_url": "https://api.github.com/users/j-sv/repos", "events_url": "https://api.github.com/users/j-sv/events{/privacy}", "received_events_url": "https://api.github.com/users/j-sv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 614583963, "node_id": "MDU6TGFiZWw2MTQ1ODM5NjM=", "url": "https://api.github.com/repos/localstack/localstack/labels/configuration", "name": "configuration", "color": "fbca04", "default": false, "description": null}, {"id": 1489098033, "node_id": "MDU6TGFiZWwxNDg5MDk4MDMz", "url": "https://api.github.com/repos/localstack/localstack/labels/lambda-execution", "name": "lambda-execution", "color": "e1f774", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "macnev2013", "id": 13847870, "node_id": "MDQ6VXNlcjEzODQ3ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13847870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macnev2013", "html_url": "https://github.com/macnev2013", "followers_url": "https://api.github.com/users/macnev2013/followers", "following_url": "https://api.github.com/users/macnev2013/following{/other_user}", "gists_url": "https://api.github.com/users/macnev2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/macnev2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macnev2013/subscriptions", "organizations_url": "https://api.github.com/users/macnev2013/orgs", "repos_url": "https://api.github.com/users/macnev2013/repos", "events_url": "https://api.github.com/users/macnev2013/events{/privacy}", "received_events_url": "https://api.github.com/users/macnev2013/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macnev2013", "id": 13847870, "node_id": "MDQ6VXNlcjEzODQ3ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13847870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macnev2013", "html_url": "https://github.com/macnev2013", "followers_url": "https://api.github.com/users/macnev2013/followers", "following_url": "https://api.github.com/users/macnev2013/following{/other_user}", "gists_url": "https://api.github.com/users/macnev2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/macnev2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macnev2013/subscriptions", "organizations_url": "https://api.github.com/users/macnev2013/orgs", "repos_url": "https://api.github.com/users/macnev2013/repos", "events_url": "https://api.github.com/users/macnev2013/events{/privacy}", "received_events_url": "https://api.github.com/users/macnev2013/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-08-07T13:14:29Z", "updated_at": "2020-08-10T07:15:05Z", "closed_at": "2020-08-09T20:36:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[*] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nPerhaps not a bug report per se, but this affected me at least. A new version of `lambci/docker-lambda` was pushed recently. [This commit](https://github.com/lambci/docker-lambda/commit/7ece2742a5b0e84eb09d6ed659f123474e619b27) removed hardcoded defaults for `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.\r\n\r\nI have a lambda that reads a value from secret in `secretsmanager`. If I don't set dummy values for `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` when creating the lambda invoking it will time out reading the secret.\r\n\r\n## Expected behavior\r\n\r\nA lambda function can read a secret from `secretsmanager`.\r\n\r\n## Actual behavior\r\n\r\nLambda times out trying to read secret.\r\n\r\n# Steps to reproduce\r\n\r\nCreate a lambda which tries to read a secret from `secretsmanager` without adding the environments variables mentioned above.\r\n\r\n## Command used to start LocalStack\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nThis will work:\r\n```bash\r\nawslocal lambda create-function \\\r\n  --function-name foo \\\r\n  --runtime go1.x \\\r\n  --handler main \\\r\n  --role arn:aws:iam::123456790:role/ignore \\\r\n  --zip-file fileb://foo.zip \\\r\n  --environment \"Variables={FOO=bar,AWS_ACCOUNT_ID=123456790,AWS_ACCESS_KEY_ID=0,AWS_SECRET_ACCESS_KEY=0}\"\r\n```\r\n\r\nThis will time out while reading:\r\n```bash\r\nawslocal lambda create-function \\\r\n  --function-name foo \\\r\n  --runtime go1.x \\\r\n  --handler main \\\r\n  --role arn:aws:iam::123456790:role/ignore \\\r\n  --zip-file fileb://foo.zip \\\r\n  --environment \"Variables={FOO=bar}\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2814", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2814/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2814/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2814/events", "html_url": "https://github.com/localstack/localstack/issues/2814", "id": 673765005, "node_id": "MDU6SXNzdWU2NzM3NjUwMDU=", "number": 2814, "title": "Shell scripts in docker-entrypoint-initaws.d does't work at all", "user": {"login": "hrytskivr", "id": 23154876, "node_id": "MDQ6VXNlcjIzMTU0ODc2", "avatar_url": "https://avatars2.githubusercontent.com/u/23154876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hrytskivr", "html_url": "https://github.com/hrytskivr", "followers_url": "https://api.github.com/users/hrytskivr/followers", "following_url": "https://api.github.com/users/hrytskivr/following{/other_user}", "gists_url": "https://api.github.com/users/hrytskivr/gists{/gist_id}", "starred_url": "https://api.github.com/users/hrytskivr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hrytskivr/subscriptions", "organizations_url": "https://api.github.com/users/hrytskivr/orgs", "repos_url": "https://api.github.com/users/hrytskivr/repos", "events_url": "https://api.github.com/users/hrytskivr/events{/privacy}", "received_events_url": "https://api.github.com/users/hrytskivr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 939237530, "node_id": "MDU6TGFiZWw5MzkyMzc1MzA=", "url": "https://api.github.com/repos/localstack/localstack/labels/usage", "name": "usage", "color": "0074b7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-05T18:42:35Z", "updated_at": "2020-08-12T18:20:48Z", "closed_at": "2020-08-12T18:20:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ x ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nI'm trying to verify couple of emails for SES service, using sh script in /docker-entrypoint-initaws.d directory, but when the script launches I receive an error. At first I thought there is no bash in localstack container, so I removed shebang, but then it said that there is no aws command and this is completely wrong, because when I execute the command that is inside the scrip by hand via cli in container it works just fine.\r\n\r\n_ses.sh_\r\n```\r\n#!/bin/bash\r\n\r\naws ses verify-email-identity --email-address email@gmail.com --region eu-central-1 --endpoint-url=http://localhost:4579\r\n\r\n```\r\n\r\n_docker-compose.yml_\r\n```\r\nversion: '3.7'\r\n\r\nservices:\r\n  localstack:\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4566-4599:4566-4599\"\r\n    environment:\r\n      - SERVICES=cloudwatch,ses,s3\r\n      - DATA_DIR=/tmp/localstack/data\r\n      - AWS_ACCESS_KEY_ID=key\r\n      - AWS_SECRET_ACCESS_KEY=secret\r\n      - DEFAULT_REGION=eu-central-1\r\n    volumes:\r\n      - \"../storage:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n      - \"./.localstack:/docker-entrypoint-initaws.d\"\r\n```\r\n\r\n_localstack container log_\r\n```\r\nWaiting for all LocalStack services to be ready\r\n2020-08-05 18:33:34,316 CRIT Supervisor is running as root. Privileges were not dropped because no user is specified in the config file. If you intend to run as root, you can set user=root in the config file to avoid this message.\r\n2020-08-05 18:33:34,319 INFO supervisord started with pid 13\r\n2020-08-05 18:33:35,322 INFO spawned: 'dashboard' with pid 19\r\n2020-08-05 18:33:35,323 INFO spawned: 'infra' with pid 20\r\n2020-08-05 18:33:35,327 INFO success: dashboard entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\r\n2020-08-05 18:33:35,328 INFO exited: dashboard (exit status 0; expected)\r\n(. .venv/bin/activate; exec bin/localstack start --host)\r\nLocalStack version: 0.11.3\r\nStarting local dev environment. CTRL-C to quit.\r\n!WARNING! - Looks like you have configured $LAMBDA_REMOTE_DOCKER=1 - please make sure to configure $HOST_TMP_FOLDER to point to your host's $TMPDIR\r\n2020-08-05 18:33:37,253 INFO success: infra entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\r\nStarting edge router (https port 4566)...\r\nStarting mock CloudWatch service on http ports 4566 (recommended) and 4582 (deprecated)...\r\nStarting mock S3 service on http ports 4566 (recommended) and 4572 (deprecated)...\r\nStarting mock SES service on http ports 4566 (recommended) and 4579 (deprecated)...\r\n2020-08-05T18:33:39:INFO:localstack.multiserver: Starting multi API server process on port 36469\r\nRunning on 0.0.0.0:36469 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4566 over https (CTRL + C to quit)\r\nRunning on 0.0.0.0:4572 over http (CTRL + C to quit)\r\nWaiting for all LocalStack services to be ready\r\nReady.\r\n\r\n/usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initaws.d/ses.sh\r\n: No such file or directoryd/ses.sh: line 1: \ufeff#!/bin/bash\r\n```\r\n\r\n## Expected behavior\r\n\r\nThere should't be any errors, and email should be confirmed.\r\n\r\n## Actual behavior\r\n\r\n```\r\n/usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initaws.d/ses.sh\r\n: No such file or directoryd/ses.sh: line 1: \ufeff#!/bin/bash\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n`docker-compose up -d`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n`aws ses verify-email-identity --email-address email@gmail.com --region eu-central-1 --endpoint-url=http://localhost:4579`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2812", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2812/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2812/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2812/events", "html_url": "https://github.com/localstack/localstack/issues/2812", "id": 673277187, "node_id": "MDU6SXNzdWU2NzMyNzcxODc=", "number": 2812, "title": "HOSTNAME_EXTERNAL prevents range request to S3 service", "user": {"login": "okkez", "id": 33111, "node_id": "MDQ6VXNlcjMzMTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/33111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/okkez", "html_url": "https://github.com/okkez", "followers_url": "https://api.github.com/users/okkez/followers", "following_url": "https://api.github.com/users/okkez/following{/other_user}", "gists_url": "https://api.github.com/users/okkez/gists{/gist_id}", "starred_url": "https://api.github.com/users/okkez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/okkez/subscriptions", "organizations_url": "https://api.github.com/users/okkez/orgs", "repos_url": "https://api.github.com/users/okkez/repos", "events_url": "https://api.github.com/users/okkez/events{/privacy}", "received_events_url": "https://api.github.com/users/okkez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-08-05T06:02:05Z", "updated_at": "2020-08-09T11:54:53Z", "closed_at": "2020-08-09T11:54:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a bug report\r\n\r\n# Detailed description\r\n\r\nFailed to send the range request to S3 when setting `HOSTNAME_EXTERNAL` environment variable.\r\n\r\n## Expected behavior\r\n\r\nSucceed in sending the range request to S3 with `HOSTNAME_EXTERNAL` environment variable.\r\n\r\n## Actual behavior\r\n\r\nFailed to send the range request to S3. localstack logs below:\r\n\r\n```\r\n2020-08-05T05:38:21:WARNING:localstack.utils.server.http2_server: Error in proxy handler for request GET http://localhost/bucket-name/xxx: An error occurred (404) when calling the HeadObject operation: Not Found Traceback (most recent call last):\r\n  File \"/opt/code/localstack/localstack/utils/server/http2_server.py\", line 66, in index\r\n    result = await run_sync(handler, request, data)\r\n  File \"/opt/code/localstack/localstack/utils/async_utils.py\", line 46, in run_sync\r\n    return await loop.run_in_executor(THREAD_POOL, copy_context().run, func, *args)\r\n  File \"/usr/lib/python3.8/concurrent/futures/thread.py\", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/opt/code/localstack/localstack/services/generic_proxy.py\", line 555, in handler\r\n    response = modify_and_forward(method=method, path=path_with_params, data_bytes=data, headers=headers,\r\n  File \"/opt/code/localstack/localstack/services/generic_proxy.py\", line 398, in modify_and_forward\r\n    updated_response = update_listener.return_response(**kwargs)\r\n  File \"/opt/code/localstack/localstack/services/s3/s3_listener.py\", line 1193, in return_response\r\n    fix_range_content_type(bucket_name, path, headers, response)\r\n  File \"/opt/code/localstack/localstack/services/s3/s3_listener.py\", line 443, in fix_range_content_type\r\n    result = s3_client.head_object(Bucket=bucket_name, Key=key_name)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/botocore/client.py\", line 316, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/botocore/client.py\", line 635, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (404) when calling the HeadObject operation: Not Found\r\n```\r\n\r\n\r\n# Steps to reproduce\r\n\r\n1. Use docker-compose.yml in this repository with the following diff.\r\n\r\n```diff\r\ndiff --git a/docker-compose.yml b/docker-compose.yml\r\nindex 12e0e6f..d15097c 100644\r\n--- a/docker-compose.yml\r\n+++ b/docker-compose.yml\r\n@@ -16,6 +16,7 @@ services:\r\n       - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n       - DOCKER_HOST=unix:///var/run/docker.sock\r\n       - HOST_TMP_FOLDER=${TMPDIR}\r\n+      - HOSTNAME_EXTERNAL=localstack\r\n     volumes:\r\n       - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n       - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\n\r\n2. Run localstack\r\n\r\n```\r\ndocker-compose up -d localstack\r\n```\r\n\r\n3. Run this script\r\n\r\n```ruby\r\nequire \"bundler/inline\"\r\nrequire \"stringio\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n  gem \"aws-sdk-s3\"\r\nend\r\n\r\nAws.config.update(\r\n  region: \"ap-northeast-1\",\r\n  credentials: Aws::Credentials.new(\"dummy\", \"dummy\"),\r\n)\r\n\r\ns3_client = Aws::S3::Client.new(endpoint: \"http://localstack:4566\", force_path_style: true)\r\n\r\nbegin\r\n  s3_client.create_bucket(bucket: \"test-bucket\")\r\nrescue\r\nend\r\ns3_client.put_object(bucket: \"test-bucket\", key: \"test-object\", body: StringIO.new(\"xxx\\n\" * 100))\r\n\r\nres = s3_client.list_objects_v2(bucket: \"test-bucket\")\r\npp res.to_h\r\nputs \r\nres = s3_client.get_object(bucket: \"test-bucket\", key: \"test-object\", range: \"bytes=10-100\")\r\npp res.to_h\r\n```\r\n\r\n4. Got errors\r\n\r\n## Command used to start LocalStack\r\n\r\n```\r\ndocker-compose up -d localstack\r\n```\r\n\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```ruby\r\nequire \"bundler/inline\"\r\nrequire \"stringio\"\r\n\r\ngemfile do\r\n  source \"https://rubygems.org\"\r\n  gem \"aws-sdk-s3\"\r\nend\r\n\r\nAws.config.update(\r\n  region: \"ap-northeast-1\",\r\n  credentials: Aws::Credentials.new(\"dummy\", \"dummy\"),\r\n)\r\n\r\ns3_client = Aws::S3::Client.new(endpoint: \"http://localstack:4566\", force_path_style: true)\r\n\r\nbegin\r\n  s3_client.create_bucket(bucket: \"test-bucket\")\r\nrescue\r\nend\r\ns3_client.put_object(bucket: \"test-bucket\", key: \"test-object\", body: StringIO.new(\"xxx\\n\" * 100))\r\n\r\nres = s3_client.list_objects_v2(bucket: \"test-bucket\")\r\npp res.to_h\r\nputs \r\nres = s3_client.get_object(bucket: \"test-bucket\", key: \"test-object\", range: \"bytes=10-100\")\r\npp res.to_h\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2790", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2790/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2790/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2790/events", "html_url": "https://github.com/localstack/localstack/issues/2790", "id": 668563801, "node_id": "MDU6SXNzdWU2Njg1NjM4MDE=", "number": 2790, "title": "CloudFormation: Delete stack containing IAM role with inline policy fails", "user": {"login": "mcintyre94", "id": 1711350, "node_id": "MDQ6VXNlcjE3MTEzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1711350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcintyre94", "html_url": "https://github.com/mcintyre94", "followers_url": "https://api.github.com/users/mcintyre94/followers", "following_url": "https://api.github.com/users/mcintyre94/following{/other_user}", "gists_url": "https://api.github.com/users/mcintyre94/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcintyre94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcintyre94/subscriptions", "organizations_url": "https://api.github.com/users/mcintyre94/orgs", "repos_url": "https://api.github.com/users/mcintyre94/repos", "events_url": "https://api.github.com/users/mcintyre94/events{/privacy}", "received_events_url": "https://api.github.com/users/mcintyre94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-30T09:57:38Z", "updated_at": "2020-08-05T13:16:57Z", "closed_at": "2020-08-05T13:16:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nAfter deploying a CloudFormation stack that contains an IAM role with an inline policy, I am unable to delete the stack using `cloudformation delete-stack`\r\n\r\n## Expected behavior\r\n\r\nSame as AWS proper: Stack and all its resources are deleted successfully\r\n\r\n## Actual behavior\r\n\r\nThe stack is not deleted, nor are its resources.\r\n\r\n```\r\n$ awslocal cloudformation delete-stack --stack-name stack1\r\n\r\nUnable to parse response (not well-formed (invalid token): line 1, column 0), invalid XML received:\r\nb'{}'\r\n```\r\n\r\nFrom localstack logs, it seems to be trying to delete the role without first deleting the policy:\r\n\r\n```\r\n2020-07-30T09:53:47:DEBUG:localstack.utils.cloudformation.template_deployer: Running action \"delete\" for resource type \"IAM::Role\" id \"ExecutionRole\"\r\n2020-07-30T09:53:47:DEBUG:localstack.utils.cloudformation.template_deployer: Request for resource type \"IAM::Role\" in region eu-west-1: delete_role {'RoleName': 'stack1-ExecutionRole-M0XZJRIXLJPE'}\r\n2020-07-30T09:53:47:WARNING:localstack.utils.cloudformation.template_deployer: Error calling <bound method ClientCreator._create_api_method.<locals>._api_call of <botocore.client.IAM object at 0x7f223b88f8e0>> with params: {'RoleName': 'stack1-ExecutionRole-M0XZJRIXLJPE'} for resource: {'LogicalResourceId': 'ExecutionRole', 'PhysicalResourceId': 'stack1-ExecutionRole-M0XZJRIXLJPE', 'ResourceType': 'AWS::IAM::Role', 'LastUpdatedTimestamp': '2011-06-21 20:15:58+00:00', 'ResourceStatus': 'CREATE_COMPLETE', 'Properties': {'LogicalResourceId': 'ExecutionRole', 'PhysicalResourceId': 'stack1-ExecutionRole-M0XZJRIXLJPE', 'ResourceType': 'AWS::IAM::Role', 'LastUpdatedTimestamp': '2011-06-21 20:15:58+00:00', 'ResourceStatus': 'CREATE_COMPLETE'}}\r\n2020-07-30T09:53:47:WARNING:localstack.utils.server.http2_server: Error in proxy handler for request POST http://localhost:4566/: An error occurred (DeleteConflict) when calling the DeleteRole operation: Cannot delete entity, must delete policies first. Traceback (most recent call last):\r\n  File \"/opt/code/localstack/localstack/utils/server/http2_server.py\", line 53, in index\r\n    result = await run_sync(handler, request, data)\r\n  File \"/opt/code/localstack/localstack/utils/async_utils.py\", line 46, in run_sync\r\n    return await loop.run_in_executor(THREAD_POOL, copy_context().run, func, *args)\r\n  File \"/usr/lib/python3.8/concurrent/futures/thread.py\", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/opt/code/localstack/localstack/services/generic_proxy.py\", line 550, in handler\r\n    response = modify_and_forward(method=method, path=path_with_params, data_bytes=data, headers=headers,\r\n  File \"/opt/code/localstack/localstack/services/generic_proxy.py\", line 331, in modify_and_forward\r\n    listener_result = listener.forward_request(method=method,\r\n  File \"/opt/code/localstack/localstack/services/cloudformation/cloudformation_listener.py\", line 198, in forward_request\r\n    template_deployer.delete_stack(stack_name, stack_resources)\r\n  File \"/opt/code/localstack/localstack/utils/cloudformation/template_deployer.py\", line 1228, in delete_stack\r\n    delete_resource(resource_id, resources, stack_name)\r\n  File \"/opt/code/localstack/localstack/utils/cloudformation/template_deployer.py\", line 1078, in delete_resource\r\n    return execute_resource_action(resource_id, resources, stack_name, ACTION_DELETE)\r\n  File \"/opt/code/localstack/localstack/utils/cloudformation/template_deployer.py\", line 1100, in execute_resource_action\r\n    result = configure_resource_via_sdk(resource_id, resources, resource_type, func, stack_name)\r\n  File \"/opt/code/localstack/localstack/utils/cloudformation/template_deployer.py\", line 1177, in configure_resource_via_sdk\r\n    raise e\r\n  File \"/opt/code/localstack/localstack/utils/cloudformation/template_deployer.py\", line 1174, in configure_resource_via_sdk\r\n    result = function(**params)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/botocore/client.py\", line 316, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/botocore/client.py\", line 635, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.errorfactory.DeleteConflictException: An error occurred (DeleteConflict) when calling the DeleteRole operation: Cannot delete entity, must delete policies first.\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n`DEFAULT_REGION=eu-west-1 DEBUG=1 localstack start`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nTemplate.yaml is a CloudFormation template containing one IAM role with one nested inline policy:\r\n\r\n```yaml\r\nAWSTemplateFormatVersion: '2010-09-09'\r\n\r\nResources:\r\n  # IAM role for running the step function\r\n  ExecutionRole:\r\n    Type: \"AWS::IAM::Role\"\r\n    Properties:\r\n      AssumeRolePolicyDocument:\r\n        Version: \"2012-10-17\"\r\n        Statement:\r\n        - Effect: \"Allow\"\r\n          Principal:\r\n            Service: !Sub states.${AWS::Region}.amazonaws.com\r\n          Action: \"sts:AssumeRole\"\r\n      Policies:\r\n      - PolicyName: StatesExecutionPolicy\r\n        PolicyDocument:\r\n          Version: \"2012-10-17\"\r\n          Statement:\r\n          - Effect: Allow\r\n            Action: \"lambda:InvokeFunction\"\r\n            Resource: \"*\"\r\n```\r\n\r\nI deploy, and then try to delete this stack:\r\n\r\n```\r\n$ awslocal cloudformation deploy --stack-name stack1 --template-file template.yaml --capabilities CAPABILITY_IAM\r\n\r\nWaiting for changeset to be created..\r\nWaiting for stack create/update to complete\r\nSuccessfully created/updated stack - stack1\r\n\r\n$ awslocal cloudformation delete-stack --stack-name stack1\r\n\r\nUnable to parse response (not well-formed (invalid token): line 1, column 0), invalid XML received:\r\nb'{}'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2789", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2789/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2789/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2789/events", "html_url": "https://github.com/localstack/localstack/issues/2789", "id": 668514816, "node_id": "MDU6SXNzdWU2Njg1MTQ4MTY=", "number": 2789, "title": "S3 file upload via pre-signed URL does not produce an SQS message", "user": {"login": "vecerek", "id": 5737996, "node_id": "MDQ6VXNlcjU3Mzc5OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5737996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vecerek", "html_url": "https://github.com/vecerek", "followers_url": "https://api.github.com/users/vecerek/followers", "following_url": "https://api.github.com/users/vecerek/following{/other_user}", "gists_url": "https://api.github.com/users/vecerek/gists{/gist_id}", "starred_url": "https://api.github.com/users/vecerek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vecerek/subscriptions", "organizations_url": "https://api.github.com/users/vecerek/orgs", "repos_url": "https://api.github.com/users/vecerek/repos", "events_url": "https://api.github.com/users/vecerek/events{/privacy}", "received_events_url": "https://api.github.com/users/vecerek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-30T08:59:47Z", "updated_at": "2020-08-03T12:02:22Z", "closed_at": "2020-08-03T12:02:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: bug report\r\n\r\n# Detailed description\r\n\r\nI have found some similar issues and also a PR that was supposed to fix the issue:\r\n- https://github.com/localstack/localstack/issues/945\r\n- https://github.com/localstack/localstack/issues/1225\r\n- https://github.com/localstack/localstack/pull/1639\r\n\r\nHowever, I can still reproduce the bug on localstack versions: `0.10.8` ~and `0.11.3`~. The bug may be there in all the versions in between and maybe in previous versions, too. I haven't tried.\r\n\r\n## Expected behavior\r\n\r\nProduces an SQS message in the queue.\r\n\r\n## Actual behavior\r\n\r\nDoes not produce an SQS message in the queue.\r\n\r\n# Steps to reproduce\r\n\r\n0. Setup an S3 bucket, a SQS queue and send S3 event notifications to the queue.\r\n1. Generate a pre-signed URL, e.g. via the aws-sdk:\r\n```ts\r\nimport { PutObjectCommand } from \"@aws-sdk/client-s3\";\r\nimport { S3RequestPresigner } from \"@aws-sdk/s3-request-presigner\";\r\nimport { createRequest } from \"@aws-sdk/util-create-request\";\r\nimport { formatUrl } from \"@aws-sdk/util-format-url\";\r\n\r\nconst s3Client = new S3({\r\n  ...config.s3,\r\n  requestHandler: new NodeHttpHandler(),\r\n});\r\n\r\nconst Key = `your-key`;\r\nconst Bucket = context.s3.buckets.MY_BUCKET;\r\nconst request = await createRequest(\r\n  s3Client,\r\n  new PutObjectCommand({\r\n    Bucket,\r\n    ContentDisposition: `attachment; filename=\"image.png\"`,\r\n    ContentLength: 338109,\r\n    ContentType: \"image/png\",\r\n    Key,\r\n  })\r\n);\r\nconst signer = new S3RequestPresigner({ ...s3Client.config });\r\nconst signedRequest = signer.presign(request, {\r\n  expiresIn: 3600,\r\n});\r\nconst uploadUrl = formatUrl(signedRequest);\r\n// \"http://localhost:4572/my-bucket/your-key?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ACCESSKEY%2F20200730%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20200730T081533Z&X-Amz-Expires=3600&X-Amz-Signature=06e5696a5d9d1f7e7bc39fd14be34609f9aefcdd47d6d6f3d5adfab65d9deef8&X-Amz-SignedHeaders=content-disposition%3Bcontent-length%3Bhost&x-id=PutObject\"\r\n```\r\n2. Upload the file using the pre-signed upload URL\r\n```sh\r\n$ curl -X PUT -T image.png -L \"http://localhost:4572/my-bucket/your-key?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ACCESSKEY%2F20200730%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20200730T081533Z&X-Amz-Expires=3600&X-Amz-Signature=06e5696a5d9d1f7e7bc39fd14be34609f9aefcdd47d6d6f3d5adfab65d9deef8&X-Amz-SignedHeaders=content-disposition%3Bcontent-length%3Bhost&x-id=PutObject\" -H \"Content-Type: image/png\" -H \"Content-Length: 338109\" -H \"Content-Disposition: attachment; filename=\\\"image.png\\\"\" -v\r\n*   Trying 127.0.0.1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (127.0.0.1) port 4572 (#0)\r\n> PUT /my-bucket/your-key?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ACCESSKEY%2F20200730%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20200730T081533Z&X-Amz-Expires=3600&X-Amz-Signature=06e5696a5d9d1f7e7bc39fd14be34609f9aefcdd47d6d6f3d5adfab65d9deef8&X-Amz-SignedHeaders=content-disposition%3Bcontent-length%3Bhost&x-id=PutObject HTTP/1.1\r\n> Host: localhost:4572\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Type: image/png\r\n> Content-Length: 338109\r\n> Content-Disposition: attachment; filename=\"image.png\"\r\n> Expect: 100-continue\r\n>\r\n< HTTP/1.1 100 Continue\r\n< date: Thu, 30 Jul 2020 08:16:08 GMT\r\n< server: hypercorn-h11\r\n* We are completely uploaded and fine\r\n< HTTP/1.1 200\r\n< content-type: text/html; charset=utf-8\r\n< content-length: 0\r\n< etag: \"35274179b8de4902adf31366931c30de\"\r\n< last-modified: Thu, 30 Jul 2020 08:16:08 GMT\r\n< access-control-allow-origin: *\r\n< x-amz-request-id: 1A5720281A0C95DE\r\n< x-amz-id-2: MzRISOwyjmnup1A5720281A0C95DE7/JypPGXLh0OVFGcJaaO3KW/hRAqKOpIEEp\r\n< access-control-allow-methods: HEAD,GET,PUT,POST,DELETE,OPTIONS,PATCH\r\n< access-control-allow-headers: authorization,content-type,content-md5,cache-control,x-amz-content-sha256,x-amz-date,x-amz-security-token,x-amz-user-agent,x-amz-target,x-amz-acl,x-amz-version-id,x-localstack-target,x-amz-tagging\r\n< access-control-expose-headers: x-amz-version-id\r\n< connection: close\r\n< date: Thu, 30 Jul 2020 08:16:08 GMT\r\n< server: hypercorn-h11\r\n<\r\n* Closing connection 0\r\n```\r\n3. Verify the upload went through\r\n```sh\r\n$ awslocal s3 ls my-bucket/\r\n2020-07-30 10:16:08     338109 01EEFCMV3T4JN4X3H7ZRDFMKKJ\r\n```\r\n\r\n## Command used to start LocalStack\r\n\r\nRunning on Docker for Mac:\r\n\r\n```sh\r\ndocker run --detach --name localstack --hostname localstack --network-alias localstack --volume localstack:/localstack --volume /var/run/docker.sock:/var/run/docker.sock --net docker -p 4572:4572 -p 4569:4569 -p 4575:4575 -p 4576:4576 -p 8082:8082 --dns 172.18.0.3 -e DATA_DIR\\=/localstack/data -e DEBUG\\=1 -e PROJECT\\=localstack localstack/localstack:0.11.3\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2784", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2784/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2784/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2784/events", "html_url": "https://github.com/localstack/localstack/issues/2784", "id": 667400390, "node_id": "MDU6SXNzdWU2Njc0MDAzOTA=", "number": 2784, "title": "SQS doesn't work", "user": {"login": "natanaelAguiar", "id": 20804506, "node_id": "MDQ6VXNlcjIwODA0NTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/20804506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natanaelAguiar", "html_url": "https://github.com/natanaelAguiar", "followers_url": "https://api.github.com/users/natanaelAguiar/followers", "following_url": "https://api.github.com/users/natanaelAguiar/following{/other_user}", "gists_url": "https://api.github.com/users/natanaelAguiar/gists{/gist_id}", "starred_url": "https://api.github.com/users/natanaelAguiar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natanaelAguiar/subscriptions", "organizations_url": "https://api.github.com/users/natanaelAguiar/orgs", "repos_url": "https://api.github.com/users/natanaelAguiar/repos", "events_url": "https://api.github.com/users/natanaelAguiar/events{/privacy}", "received_events_url": "https://api.github.com/users/natanaelAguiar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571606741, "node_id": "MDU6TGFiZWw1NzE2MDY3NDE=", "url": "https://api.github.com/repos/localstack/localstack/labels/installation", "name": "installation", "color": "bfd4f2", "default": false, "description": null}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-28T21:42:36Z", "updated_at": "2020-07-29T15:36:40Z", "closed_at": "2020-07-29T15:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "# I'm facing a problem when running localstack\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nWhen i run the localstack image i'm facing some connections refused errors. It's intermitent sometimes happens and sometimes doesnt. Follow the stacktrace:\r\n\r\n> 2020-07-28T21:12:20:WARNING:localstack.utils.server.http2_server: Error in proxy handler for request POST http://localstack:4566/: MyHTTPConnectionPool(host='ce84afd67bb5', port=4576): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1b9f1811f0>: Failed to establish a new connection: [Errno 111] Connection refused')) Traceback (most recent call last):\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/connection.py\", line 159, in _new_conn\r\n    conn = connection.create_connection(\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/util/connection.py\", line 84, in create_connection\r\n    raise err\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/util/connection.py\", line 74, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\n# Steps to reproduce\r\nAs this problem is an intermitent one probably you will need to do sometimes. All that I do its run the localstack via docker compose.\r\n\r\n> localstack:\r\n    image: localstack/localstack:0.11.3\r\n    ports:\r\n      - \"4566:4566\"\r\n      - \"8088:8080\"\r\n    environment:\r\n      - SERVICES=sqs,sns\r\n      - DEFAULT_REGION=us-east-1\r\n      - HOSTNAME_EXTERNAL=localstack\r\n\r\n## Command used to start LocalStack\r\n docker-compose up\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2781", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2781/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2781/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2781/events", "html_url": "https://github.com/localstack/localstack/issues/2781", "id": 666984241, "node_id": "MDU6SXNzdWU2NjY5ODQyNDE=", "number": 2781, "title": "dynamodbstreams does not correctly handle sequence number", "user": {"login": "Neos3452", "id": 5870673, "node_id": "MDQ6VXNlcjU4NzA2NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5870673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neos3452", "html_url": "https://github.com/Neos3452", "followers_url": "https://api.github.com/users/Neos3452/followers", "following_url": "https://api.github.com/users/Neos3452/following{/other_user}", "gists_url": "https://api.github.com/users/Neos3452/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neos3452/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neos3452/subscriptions", "organizations_url": "https://api.github.com/users/Neos3452/orgs", "repos_url": "https://api.github.com/users/Neos3452/repos", "events_url": "https://api.github.com/users/Neos3452/events{/privacy}", "received_events_url": "https://api.github.com/users/Neos3452/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 660698194, "node_id": "MDU6TGFiZWw2NjA2OTgxOTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/feature-missing", "name": "feature-missing", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-28T11:04:08Z", "updated_at": "2020-08-11T22:00:12Z", "closed_at": "2020-08-01T00:03:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nFirst of all, thanks a lot for making such great tool, it is really making local development with aws much easier!\r\n\r\nThe problem is that when getting shard iterator via https://docs.aws.amazon.com/cli/latest/reference/dynamodbstreams/get-shard-iterator.html and picking any type that requires a sequence number. It makes the API return 500.\r\n\r\nI took a look at the dynamodb `localstack/services/dynamodbstreams/dynamodbstreams_api.py` and it seems that GetShardIterator action just missed the SequenceNumber field. Also the default sequence is a value that does not pass kinesis validation.\r\n\r\n## Expected behavior\r\n\r\n```json\r\n{\r\n    \"ShardIterator\": \"AAAAAAAAAAHAB/7nooId/YHFtbxkG8nWQeVQYrjLG5oyn1c0uNYGDV7+NLkViy7Tzw5Yj0nXwTrbEHtKIeGRQNZnxGbVUKJEsxHvPQgObIpur/GlLkkPnJNnk6tP5usuFPx9qyLL5moYfYRck8uiahuu4CFd2C553KT758BaxkfaTiBzTvlNc6dzLmAMKoFWjh7aTEI4vxMbkGtNTrd2XXZN5CHKD3yV\"\r\n}\r\n```\r\n\r\n## Actual behavior\r\n\r\nWhen using sequence number from a GetRecords response\r\n```\r\nParameter validation failed:\r\nInvalid length for parameter SequenceNumber, value: 14, valid range: 21-inf\r\n```\r\n\r\nWhen padding sequence with zeros\r\n```\r\nAn error occurred (500) when calling the GetShardIterator operation (reached max retries: 4): <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\nVia docker:\r\n\r\n```dockerfile\r\nFROM localstack/localstack:latest\r\n\r\nENV DOCKER_HOST=unix:///var/run/docker.sock \\\r\n    SERVICES=kinesis,dynamodb,dynamodbstreams,sns,sqs,s3 \\\r\n    DATA_DIR=/tmp/data \\\r\n    USE_SSL=true \\\r\n    START_WEB=0\r\n\r\nEXPOSE 4566-4597 8080\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```bash\r\nawslocal dynamodb create-table --table-name LocalstackTesst --attribute-definitions AttributeName=Name,AttributeType=S --key-schema AttributeName=Name,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 --stream-specification StreamEnabled=true,StreamViewType=NEW_AND_OLD_IMAGES\r\nawslocal dynamodb put-item --table-name LocalstackTesst --item '{\"Name\":{\"S\":\"test-00\"}}'\r\nawslocal dynamodb describe-table --table-name LocalstackTesst # get arn\r\nawslocal dynamodbstreams describe-stream --stream-arn \"arn:aws:dynamodb:us-east-1:000000000000:table/LocalstackTesst/stream/2020-07-28T10:46:39.642\" # get shardid\r\nawslocal dynamodbstreams get-shard-iterator --stream-arn \"arn:aws:dynamodb:us-east-1:000000000000:table/LocalstackTesst/stream/2020-07-28T10:46:39.642\" --shard-id \"shardId-00000001595900000000-000000000000\" --shard-iterator-type TRIM_HORIZON # get iterator\r\nawslocal dynamodbstreams get-records --shard-iterator \"AAAAAAAAAAGF83o8gcnTSbFvBbOlzOFEcKJhGr+DYc0dpPUIFdC171s6pP4AtehVRo5ALNIOPhCAK4vWW37EUQ0qHnk6b/Ke8cGYVwftmB1xMXqUjD15CTW0gMI2VyVumFevgHvM0emsfJ/bRVDKiTKWhfiPdW8o5k4JiCdLzpl4FyMqJa6jQf/q7HFSYaHHZwdfFd2SCBjnV7ziWQqGpd5vsi0qjR3a\" # get sequence number\r\nawslocal dynamodbstreams get-shard-iterator --stream-arn \"arn:aws:dynamodb:us-east-1:000000000000:table/LocalstackTesst/stream/2020-07-28T10:46:39.642\" --shard-id \"shardId-00000001595900000000-000000000000\" --shard-iterator-type AT_SEQUENCE_NUMBER --sequence-number 1\r\nawslocal dynamodbstreams get-shard-iterator --stream-arn \"arn:aws:dynamodb:us-east-1:000000000000:table/LocalstackTesst/stream/2020-07-28T10:46:39.642\" --shard-id \"shardId-00000001595900000000-000000000000\" --shard-iterator-type AT_SEQUENCE_NUMBER --sequence-number \"000000000000000000001\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2780", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2780/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2780/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2780/events", "html_url": "https://github.com/localstack/localstack/issues/2780", "id": 666976491, "node_id": "MDU6SXNzdWU2NjY5NzY0OTE=", "number": 2780, "title": "dynamodbstreams records do not contain ApproximateCreationDateTime", "user": {"login": "Neos3452", "id": 5870673, "node_id": "MDQ6VXNlcjU4NzA2NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5870673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neos3452", "html_url": "https://github.com/Neos3452", "followers_url": "https://api.github.com/users/Neos3452/followers", "following_url": "https://api.github.com/users/Neos3452/following{/other_user}", "gists_url": "https://api.github.com/users/Neos3452/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neos3452/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neos3452/subscriptions", "organizations_url": "https://api.github.com/users/Neos3452/orgs", "repos_url": "https://api.github.com/users/Neos3452/repos", "events_url": "https://api.github.com/users/Neos3452/events{/privacy}", "received_events_url": "https://api.github.com/users/Neos3452/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-28T10:50:30Z", "updated_at": "2020-08-11T22:00:38Z", "closed_at": "2020-08-03T11:56:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nFirst of all, thanks a lot for making such great tool, it is really making local development with aws much easier!\r\n\r\nThe problem is that when GetRecords request is sent https://docs.aws.amazon.com/cli/latest/reference/dynamodbstreams/get-records.html ApproximateCreationDateTime does not appear in the response. Unfortunately this causes some libraries that provide kinesis<->dynamodbstreams compatibility layer crash.\r\n\r\nI took a look at the dynamodb `localstack/services/dynamodb/dynamodb_listener.py` where my understanding is that everything is happening, and it seems that ApproximateCreationDateTime simply is not added to a record. It seems that localstack returns eventVersion 1.0 while AWS is already on 1.1.\r\n\r\n## Expected behavior\r\n\r\n```json\r\n{\r\n    \"Records\": [\r\n        {\r\n            \"eventID\": \"1\",\r\n            \"eventName\": \"INSERT\",\r\n            \"eventVersion\": \"1.0\",\r\n            \"eventSource\": \"aws:dynamodb\",\r\n            \"awsRegion\": \"us-east-1\",\r\n            \"dynamodb\": {\r\n                \"ApproximateCreationDateTime\": 1571849028.0,\r\n                \"Keys\": {\r\n                    \"Name\": {\r\n                        \"S\": \"test-00\"\r\n                    }\r\n                },\r\n                \"NewImage\": {\r\n                    \"Name\": {\r\n                        \"S\": \"test-00\"\r\n                    }\r\n                },\r\n                \"SequenceNumber\": \"1\",\r\n                \"SizeBytes\": 26,\r\n                \"StreamViewType\": \"NEW_AND_OLD_IMAGES\"\r\n            }\r\n        }\r\n    ],\r\n    \"NextShardIterator\": \"AAAAAAAAAAE9j4BP9rsMxqJqUfrLoMNgr/VWKIbhqU4w/nV2vHvSilm6Hvg7VSnbR9g8EDcYaskjMzE2VxUWof2/miEKCae9Itikem8RoLH9fCihVIm+keRToMGjN0BSyQlgfgMwvKKjuCg/2G9nYtnKHJgmUSB5tNuZYtrVMfqonLADm9rvWet1QLL7Kv+ECGwORgp/tMRf42So+TynwGkNx4apsRlY\"\r\n}\r\n\r\n```\r\n\r\n## Actual behavior\r\n\r\n```json\r\n{\r\n    \"Records\": [\r\n        {\r\n            \"eventID\": \"1\",\r\n            \"eventName\": \"INSERT\",\r\n            \"eventVersion\": \"1.0\",\r\n            \"eventSource\": \"aws:dynamodb\",\r\n            \"awsRegion\": \"us-east-1\",\r\n            \"dynamodb\": {\r\n                \"Keys\": {\r\n                    \"Name\": {\r\n                        \"S\": \"test-00\"\r\n                    }\r\n                },\r\n                \"NewImage\": {\r\n                    \"Name\": {\r\n                        \"S\": \"test-00\"\r\n                    }\r\n                },\r\n                \"SequenceNumber\": \"1\",\r\n                \"SizeBytes\": 26,\r\n                \"StreamViewType\": \"NEW_AND_OLD_IMAGES\"\r\n            }\r\n        }\r\n    ],\r\n    \"NextShardIterator\": \"AAAAAAAAAAE9j4BP9rsMxqJqUfrLoMNgr/VWKIbhqU4w/nV2vHvSilm6Hvg7VSnbR9g8EDcYaskjMzE2VxUWof2/miEKCae9Itikem8RoLH9fCihVIm+keRToMGjN0BSyQlgfgMwvKKjuCg/2G9nYtnKHJgmUSB5tNuZYtrVMfqonLADm9rvWet1QLL7Kv+ECGwORgp/tMRf42So+TynwGkNx4apsRlY\"\r\n}\r\n\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\nVia docker:\r\n\r\n```dockerfile\r\nFROM localstack/localstack:latest\r\n\r\nENV DOCKER_HOST=unix:///var/run/docker.sock \\\r\n    SERVICES=kinesis,dynamodb,dynamodbstreams,sns,sqs,s3 \\\r\n    DATA_DIR=/tmp/data \\\r\n    USE_SSL=true \\\r\n    START_WEB=0\r\n\r\nEXPOSE 4566-4597 8080\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```bash\r\nawslocal dynamodb create-table --table-name LocalstackTesst --attribute-definitions AttributeName=Name,AttributeType=S --key-schema AttributeName=Name,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 --stream-specification StreamEnabled=true,StreamViewType=NEW_AND_OLD_IMAGES\r\nawslocal dynamodb put-item --table-name LocalstackTesst --item '{\"Name\":{\"S\":\"test-00\"}}'\r\nawslocal dynamodb describe-table --table-name LocalstackTesst # get arn\r\nawslocal dynamodbstreams describe-stream --stream-arn \"arn:aws:dynamodb:us-east-1:000000000000:table/LocalstackTesst/stream/2020-07-28T10:30:57.768\" # get shardid\r\nawslocal dynamodbstreams get-shard-iterator --stream-arn \"arn:aws:dynamodb:us-east-1:000000000000:table/LocalstackTesst/stream/2020-07-28T10:30:57.768\" --shard-id \"shardId-00000001595900000000-000000000000\" --shard-iterator-type TRIM_HORIZON # get iterator\r\nawslocal dynamodbstreams get-records --shard-iterator \"AAAAAAAAAAGF83o8gcnTSbFvBbOlzOFEcKJhGr+DYc0dpPUIFdC171s6pP4AtehVRo5ALNIOPhCAK4vWW37EUQ0qHnk6b/Ke8cGYVwftmB1xMXqUjD15CTW0gMI2VyVumFevgHvM0emsfJ/bRVDKiTKWhfiPdW8o5k4JiCdLzpl4FyMqJa6jQf/q7HFSYaHHZwdfFd2SCBjnV7ziWQqGpd5vsi0qjR3a\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2779", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2779/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2779/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2779/events", "html_url": "https://github.com/localstack/localstack/issues/2779", "id": 666962424, "node_id": "MDU6SXNzdWU2NjY5NjI0MjQ=", "number": 2779, "title": "Secrets manager: get random password returns incorrect length", "user": {"login": "melcloud", "id": 14476, "node_id": "MDQ6VXNlcjE0NDc2", "avatar_url": "https://avatars0.githubusercontent.com/u/14476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/melcloud", "html_url": "https://github.com/melcloud", "followers_url": "https://api.github.com/users/melcloud/followers", "following_url": "https://api.github.com/users/melcloud/following{/other_user}", "gists_url": "https://api.github.com/users/melcloud/gists{/gist_id}", "starred_url": "https://api.github.com/users/melcloud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/melcloud/subscriptions", "organizations_url": "https://api.github.com/users/melcloud/orgs", "repos_url": "https://api.github.com/users/melcloud/repos", "events_url": "https://api.github.com/users/melcloud/events{/privacy}", "received_events_url": "https://api.github.com/users/melcloud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-28T10:27:21Z", "updated_at": "2020-08-09T21:00:41Z", "closed_at": "2020-08-09T21:00:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nWhen getting a random password from localstack secrets manager, the length of the returned password is incorrect when specifying exclude characters \r\n\r\n## Expected behavior\r\nWhen generating a 120 characters password without certain characters, such as \"'@, it should return the expected length of 120\r\n\r\n## Actual behavior\r\nIt returns random length. Looks like it generates a 120 characters string than removing all those excluded characters\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\ndocker run -p 4566:4566 -e SERVICES=secretsmanager -e DEFAULT_REGION=ap-southeast-2 -e DOCKER_HOST=unix:///var/run/docker.sock localstack/localstack:latest\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```csharp\r\nvar getRandomPasswordRequest = new GetRandomPasswordRequest\r\n{\r\n    ExcludeCharacters = \"/@\\\"'\\\\\",\r\n    PasswordLength = 120\r\n};\r\n\r\nvar randomPasswordResponse = await _secretsManager.GetRandomPasswordAsync(getRandomPasswordRequest);\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2777", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2777/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2777/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2777/events", "html_url": "https://github.com/localstack/localstack/issues/2777", "id": 666591780, "node_id": "MDU6SXNzdWU2NjY1OTE3ODA=", "number": 2777, "title": "Triple access log output", "user": {"login": "jgarbers", "id": 94000, "node_id": "MDQ6VXNlcjk0MDAw", "avatar_url": "https://avatars3.githubusercontent.com/u/94000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgarbers", "html_url": "https://github.com/jgarbers", "followers_url": "https://api.github.com/users/jgarbers/followers", "following_url": "https://api.github.com/users/jgarbers/following{/other_user}", "gists_url": "https://api.github.com/users/jgarbers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgarbers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgarbers/subscriptions", "organizations_url": "https://api.github.com/users/jgarbers/orgs", "repos_url": "https://api.github.com/users/jgarbers/repos", "events_url": "https://api.github.com/users/jgarbers/events{/privacy}", "received_events_url": "https://api.github.com/users/jgarbers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macnev2013", "id": 13847870, "node_id": "MDQ6VXNlcjEzODQ3ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13847870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macnev2013", "html_url": "https://github.com/macnev2013", "followers_url": "https://api.github.com/users/macnev2013/followers", "following_url": "https://api.github.com/users/macnev2013/following{/other_user}", "gists_url": "https://api.github.com/users/macnev2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/macnev2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macnev2013/subscriptions", "organizations_url": "https://api.github.com/users/macnev2013/orgs", "repos_url": "https://api.github.com/users/macnev2013/repos", "events_url": "https://api.github.com/users/macnev2013/events{/privacy}", "received_events_url": "https://api.github.com/users/macnev2013/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macnev2013", "id": 13847870, "node_id": "MDQ6VXNlcjEzODQ3ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13847870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macnev2013", "html_url": "https://github.com/macnev2013", "followers_url": "https://api.github.com/users/macnev2013/followers", "following_url": "https://api.github.com/users/macnev2013/following{/other_user}", "gists_url": "https://api.github.com/users/macnev2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/macnev2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macnev2013/subscriptions", "organizations_url": "https://api.github.com/users/macnev2013/orgs", "repos_url": "https://api.github.com/users/macnev2013/repos", "events_url": "https://api.github.com/users/macnev2013/events{/privacy}", "received_events_url": "https://api.github.com/users/macnev2013/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-27T21:19:36Z", "updated_at": "2020-08-08T16:23:01Z", "closed_at": "2020-08-08T16:23:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nRunning localstack in a Docker (v19.03.8) container on macOS 10.15.6, some log output lines appears in triplicate. It appears that the messages, such as access log entries, are generated by Flask. The lines only appear if **DEBUG** is set in the environment; if **DEBUG** is not set, no access log messages appear, but if **DEBUG** is set, they appear three times each.\r\n\r\nThis is certainly not keeping me from getting things done -- it's just a little confusing when troubleshooting calls into localstack. Thank you in advance for this amazing project and any help you can offer!\r\n\r\n## Expected behavior\r\n\r\nOne line of log output per event, such as an access log line.\r\n\r\n## Actual behavior\r\n\r\nThree identical copies of each log line are generated.\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n    docker run -it -p 4566:4566 -e DEBUG=1 -e SERVICES=s3 localstack/localstack\r\n\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n    awslocal s3 mb s3://stuff\r\n\r\n## Console output\r\n    ...\r\n    Running on 0.0.0.0:4566 over https (CTRL + C to quit)\r\n    2020-07-27T21:09:38:INFO:localstack.multiserver: Starting multi API server process on port 40641\r\n    Running on 0.0.0.0:4572 over http (CTRL + C to quit)\r\n    Running on 0.0.0.0:40641 over http (CTRL + C to quit)\r\n    2020-07-27 21:09:39,891:API:  * Running on http://0.0.0.0:46165/ (Press CTRL+C to quit)\r\n    2020-07-27 21:09:39,891:API:  * Running on http://0.0.0.0:46165/ (Press CTRL+C to quit)\r\n    2020-07-27 21:09:39,891:API:  * Running on http://0.0.0.0:46165/ (Press CTRL+C to quit)\r\n    ...  \r\n    2020-07-27 21:09:48,942:API: 127.0.0.1 - - [27/Jul/2020 21:09:48] \"PUT /stuff HTTP/1.1\" 200 -\r\n    2020-07-27 21:09:48,942:API: 127.0.0.1 - - [27/Jul/2020 21:09:48] \"PUT /stuff HTTP/1.1\" 200 -\r\n    2020-07-27 21:09:48,942:API: 127.0.0.1 - - [27/Jul/2020 21:09:48] \"PUT /stuff HTTP/1.1\" 200 -", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2776", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2776/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2776/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2776/events", "html_url": "https://github.com/localstack/localstack/issues/2776", "id": 666482656, "node_id": "MDU6SXNzdWU2NjY0ODI2NTY=", "number": 2776, "title": "Lambda not getting invoked from S3 bucket notification", "user": {"login": "ambreenshameem", "id": 68869037, "node_id": "MDQ6VXNlcjY4ODY5MDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/68869037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ambreenshameem", "html_url": "https://github.com/ambreenshameem", "followers_url": "https://api.github.com/users/ambreenshameem/followers", "following_url": "https://api.github.com/users/ambreenshameem/following{/other_user}", "gists_url": "https://api.github.com/users/ambreenshameem/gists{/gist_id}", "starred_url": "https://api.github.com/users/ambreenshameem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ambreenshameem/subscriptions", "organizations_url": "https://api.github.com/users/ambreenshameem/orgs", "repos_url": "https://api.github.com/users/ambreenshameem/repos", "events_url": "https://api.github.com/users/ambreenshameem/events{/privacy}", "received_events_url": "https://api.github.com/users/ambreenshameem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-07-27T18:04:44Z", "updated_at": "2020-08-03T15:41:28Z", "closed_at": "2020-07-31T12:19:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am a beginner and have started to explore localstack for testing AWS services. \r\nI am trying to put a file in S3 bucket, lambda is triggered on add file event in s3 bucket, and lambda process the file and save it\u2019s content in dynamo db.\r\nI am able to create bucket, create function, create table and upload file but after uploading the file in s3 bucket, the lambda is not getting triggered and my table remains empty. \r\ni am attaching the docker file . When i look into the docker dashboard i see the localstack server up and running but it doesn't display the steps i am performing in localstack for ex: creating bucket and table.\r\nIs there a way i can validate my lambda running in the docker and is talking to other services?\r\n\r\n\r\ndocker-compose.yml file --\r\n```\r\n version: '2.1'\r\n\r\nservices:\r\n  localstack:\r\n    container_name: \"${LOCALSTACK_DOCKER_NAME-awslocalstack}\"\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4566-4599:4566-4599\"\r\n      - \"${PORT_WEB_UI-8081}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=${SERVICES- }\r\n      - DEBUG=${DEBUG- }\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=docker              #${LAMBDA_EXECUTOR- }\r\n      - LAMBDA_REMOTE_DOCKER=true\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - HOST_TMP_FOLDER=${TMPDIR}\r\n      - LOCALSTACK_HOSTNAME=${LOCALSTACK_HOSTNAME- }\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\ncommands i am running to achieve the goal:\r\n\r\nbucket creation:\r\n```\r\naws s3 mb s3://person-bucket --endpoint-url http://localhost:4572\r\n```\r\n\r\ntable creation:\r\n```\r\naws dynamodb create-table --table-name PersonDetails --attribute-definitions AttributeName=Id,AttributeType=N --key-schema AttributeName=Id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 --endpoint-url=http://localhost:4569\r\n```\r\n\r\nLambda function:\r\n```\r\naws lambda create-function --endpoint-url=http://localhost:4574 --function-name samplelambda --runtime java8 --handler lambda.S3EventHandler --zip-file fileb://C:\\Workspace\\AWS_LocalStack\\localstack-demo\\target\\lambdademo-1.0.0.jar --role arn:aws:iam::1234567:role/anything --environment Variables=\"{PROFILE=LOCAL,AWS_REGION=us-east-1}\"\r\n```\r\n\r\nnotification trigger :\r\n```\r\naws s3api put-bucket-notification-configuration --bucket person-bucket --notification-configuration file://notification.json --endpoint-url http://localhost:4572\r\n```\r\n\r\ndynamodb scan:\r\n```\r\naws dynamodb scan --table-name PersonDetails --endpoint-url http://localhost:4569\r\n```\r\n\r\ncopy samplejson in s3:\r\n```\r\naws s3 cp sample.json s3://person-bucket --endpoint-url=http://localhost:4572\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2775", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2775/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2775/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2775/events", "html_url": "https://github.com/localstack/localstack/issues/2775", "id": 666248604, "node_id": "MDU6SXNzdWU2NjYyNDg2MDQ=", "number": 2775, "title": "awslocal ec2 authorize-security-group-ingress: cant add permission", "user": {"login": "AlexMcowkin", "id": 6000732, "node_id": "MDQ6VXNlcjYwMDA3MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6000732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexMcowkin", "html_url": "https://github.com/AlexMcowkin", "followers_url": "https://api.github.com/users/AlexMcowkin/followers", "following_url": "https://api.github.com/users/AlexMcowkin/following{/other_user}", "gists_url": "https://api.github.com/users/AlexMcowkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexMcowkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexMcowkin/subscriptions", "organizations_url": "https://api.github.com/users/AlexMcowkin/orgs", "repos_url": "https://api.github.com/users/AlexMcowkin/repos", "events_url": "https://api.github.com/users/AlexMcowkin/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexMcowkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-27T12:16:38Z", "updated_at": "2020-08-12T20:53:45Z", "closed_at": "2020-08-12T20:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a bug. I try to add description to my permission list.\r\nwhen I try to describe my group I cant fing description\r\n\r\n[*] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\ntry to add permissions with description. the description does not save.\r\n...\r\n\r\n## Expected behavior\r\nwant to see the description\r\n...\r\n\r\n## Actual behavior\r\nno description\r\n                {\r\n                    \"FromPort\": 5060,\r\n                    \"IpProtocol\": \"udp\",\r\n                    \"IpRanges\": [\r\n                        {\r\n                            \"CidrIp\": \"217.26.172.176/32\"\r\n                        }\r\n                    ],\r\n                    \"ToPort\": 5060,\r\n                    \"UserIdGroupPairs\": []\r\n                },\r\n                {\r\n                    \"FromPort\": 5060,\r\n                    \"IpProtocol\": \"udp\",\r\n                    \"IpRanges\": [\r\n                        {\r\n                            \"CidrIp\": \"217.26.172.177/32\"\r\n                        }\r\n                    ],\r\n                    \"ToPort\": 5060,\r\n\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n  localstack:\r\n    image: localstack/localstack:0.11.0\r\n    environment:\r\n      - SERVICES=s3,iam,ec2\r\n      - USE_SSL=false\r\n      - DEBUG=1\r\n      - DATA_DIR=/tmp/localstack/data\r\n    ports:\r\n      - \"4592:4572\"\r\n      - \"4595:4593\"\r\n      - \"4568:4566\"\r\n      - \"8095:8080\"\r\n      - \"4585:4597\"\r\n    volumes:\r\n      - ./docker/data/s3:/tmp/localstack/data\r\n      - ./docker/localstack:/docker-entrypoint-initaws.d\r\n    networks:\r\n      - my-net\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n// create new group\r\nawslocal ec2 create-security-group --group-name my-security-group --description \"docker security group\"\r\n\r\n// get group id\r\nid=$(awslocal ec2 describe-security-groups --filters Name=group-name,Values=my-security-group --query \"SecurityGroups[*].{ID:GroupId}\" --output text)\r\n\r\n// add default permissions\r\nawslocal ec2 authorize-security-group-ingress --group-id $id --ip-permissions IpProtocol=udp,FromPort=5060,ToPort=5060,IpRanges='[{CidrIp=217.26.172.177/32,Description=\"SIP for site, Added by coder\"},{CidrIp=217.26.172.173/32,Description=\"SIP for site, Added by coder\"}]'\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2768", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2768/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2768/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2768/events", "html_url": "https://github.com/localstack/localstack/issues/2768", "id": 665445849, "node_id": "MDU6SXNzdWU2NjU0NDU4NDk=", "number": 2768, "title": "Error when creating SNS subscription with SQS RedrivePolicy", "user": {"login": "rodrigondec", "id": 3301060, "node_id": "MDQ6VXNlcjMzMDEwNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3301060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigondec", "html_url": "https://github.com/rodrigondec", "followers_url": "https://api.github.com/users/rodrigondec/followers", "following_url": "https://api.github.com/users/rodrigondec/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigondec/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigondec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigondec/subscriptions", "organizations_url": "https://api.github.com/users/rodrigondec/orgs", "repos_url": "https://api.github.com/users/rodrigondec/repos", "events_url": "https://api.github.com/users/rodrigondec/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigondec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "macnev2013", "id": 13847870, "node_id": "MDQ6VXNlcjEzODQ3ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13847870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macnev2013", "html_url": "https://github.com/macnev2013", "followers_url": "https://api.github.com/users/macnev2013/followers", "following_url": "https://api.github.com/users/macnev2013/following{/other_user}", "gists_url": "https://api.github.com/users/macnev2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/macnev2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macnev2013/subscriptions", "organizations_url": "https://api.github.com/users/macnev2013/orgs", "repos_url": "https://api.github.com/users/macnev2013/repos", "events_url": "https://api.github.com/users/macnev2013/events{/privacy}", "received_events_url": "https://api.github.com/users/macnev2013/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macnev2013", "id": 13847870, "node_id": "MDQ6VXNlcjEzODQ3ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13847870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macnev2013", "html_url": "https://github.com/macnev2013", "followers_url": "https://api.github.com/users/macnev2013/followers", "following_url": "https://api.github.com/users/macnev2013/following{/other_user}", "gists_url": "https://api.github.com/users/macnev2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/macnev2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macnev2013/subscriptions", "organizations_url": "https://api.github.com/users/macnev2013/orgs", "repos_url": "https://api.github.com/users/macnev2013/repos", "events_url": "https://api.github.com/users/macnev2013/events{/privacy}", "received_events_url": "https://api.github.com/users/macnev2013/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-07-24T22:15:51Z", "updated_at": "2020-07-30T14:19:08Z", "closed_at": "2020-07-30T14:19:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nI'm trying to create a SNS subscription with `RedrivePolicy` but it fails on LocalStack.\r\n\r\n> I managed to create on AWS servers\r\n> ![image](https://user-images.githubusercontent.com/3301060/88439090-a0101b80-cde0-11ea-9846-4fdfd81b24c4.png)\r\n> ![image](https://user-images.githubusercontent.com/3301060/88439076-92f32c80-cde0-11ea-9092-a43f8569d3b1.png)\r\n\r\n## Expected behavior\r\n\r\nThe subscription be created without error.\r\n\r\n## Actual behavior\r\n```\r\nFile \"/app/webhook/interfaces.py\", line 18, in subscribe\r\n    subscription = topic.subscribe(\r\n  File \"/usr/local/lib/python3.8/site-packages/boto3/resources/factory.py\", line 520, in do_action\r\n    response = action(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/boto3/resources/action.py\", line 83, in __call__\r\n    response = getattr(parent.meta.client, operation_name)(*args, **params)\r\n  File \"/usr/local/lib/python3.8/site-packages/botocore/client.py\", line 316, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/botocore/client.py\", line 635, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.errorfactory.InvalidParameterException: An error occurred (InvalidParameter) when calling the Subscribe operation: AttributeName\r\n```\r\n\r\n# Steps to reproduce\r\n1. start localstack\r\n2. run the script\r\n\r\n## Command used to start LocalStack\r\n\r\n`docker-compose up`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nDocker-compose:\r\n```\r\n    localstack:\r\n        image: localstack/localstack:0.11.3\r\n        ports:\r\n            - \"4566-4599:4566-4599\"\r\n        environment:\r\n            - SERVICES=sns,sqs\r\n            - DEFAULT_REGION=us-east-1\r\n            - DEBUG=1\r\n            - DATA_DIR=/tmp/localstack/data\r\n            - DOCKER_HOST=unix:///var/run/docker.sock\r\n            - HOST_TMP_FOLDER=/tmp/localstack\r\n        volumes:\r\n            - \"/tmp/localstack:/tmp/localstack\"\r\n            - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\nMy code is in Python. I'm using the oficial boto3 lib!\r\n\r\n```python\r\nimport json\r\nimport uuid\r\n\r\nimport boto3\r\n\r\nAWS_DEFAULT_REGION = 'us-east-1'\r\n\r\nAWS_SNS_ENDPOINT_URL = 'http://localhost:4575'\r\nAWS_SQS_ENDPOINT_URL = 'http://localhost:4576'\r\n\r\n\r\nsqs = boto3.resource(\r\n    \"sqs\", region_name=AWS_DEFAULT_REGION, endpoint_url=AWS_SQS_ENDPOINT_URL\r\n)\r\n\r\ndead_letter_queue  = sqs.create_queue(\r\n    QueueName=f'DL-{uuid.uuid4()}',\r\n    Attributes={\"MessageRetentionPeriod\": \"1209600\"},  # 14 dias de reten\u00e7\u00e3o!\r\n)\r\n\r\ndead_letter_queue.arn = dead_letter_queue.attributes.get(\"QueueArn\")\r\n\r\nsns = boto3.resource(\r\n    \"sns\", region_name=AWS_DEFAULT_REGION, endpoint_url=AWS_SNS_ENDPOINT_URL\r\n)\r\n\r\ntopic = sns.create_topic(Name='test')\r\n\r\nurl = 'http://localhost:8000/my_endpoint'\r\n\r\nsubscription = topic.subscribe(\r\n    Protocol=\"http\",\r\n    Endpoint=url,\r\n    Attributes={\r\n        \"DeliveryPolicy\": json.dumps(\r\n            {\r\n                \"healthyRetryPolicy\": {\r\n                    \"minDelayTarget\": 60,  # The minimum delay for a retry. default 20, min 1\r\n                    \"maxDelayTarget\": 1100,  # The maximum delay for a retry. default 20, max 3600\r\n                    \"numRetries\": 6,  # The total number of retries, including immediate, pre-backoff, backoff, and post-backoff retries. Default 3. Max 100\r\n                    \"numNoDelayRetries\": 0,  # The number of retries to be done immediately, with no delay between them. default 0\r\n                    \"numMinDelayRetries\": 3,  # The number of retries in the pre-backoff phase, with the specified minimum delay between them. default 0\r\n                    \"numMaxDelayRetries\": 3,  # The number of retries in the post-backoff phase, with the maximum delay between them. default 0\r\n                    \"backoffFunction\": \"exponential\",  # The model for backoff between retries. Options {arithmetic, exponential, geometric, linear}\r\n                },\r\n                # \"throttlePolicy\": {\r\n                #     \"maxReceivesPerSecond\": 10  # The maximum number of deliveries per second, per subscription. default No throttling\r\n                # }\r\n            }\r\n        ),\r\n        \"RedrivePolicy\": json.dumps(\r\n            {\r\n                \"deadLetterTargetArn\": dead_letter_queue.arn,\r\n            }\r\n        )\r\n    },\r\n)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2767", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2767/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2767/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2767/events", "html_url": "https://github.com/localstack/localstack/issues/2767", "id": 665420424, "node_id": "MDU6SXNzdWU2NjU0MjA0MjQ=", "number": 2767, "title": "IAM Paths not recognized in list operations", "user": {"login": "rpattcorner", "id": 1488518, "node_id": "MDQ6VXNlcjE0ODg1MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1488518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpattcorner", "html_url": "https://github.com/rpattcorner", "followers_url": "https://api.github.com/users/rpattcorner/followers", "following_url": "https://api.github.com/users/rpattcorner/following{/other_user}", "gists_url": "https://api.github.com/users/rpattcorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpattcorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpattcorner/subscriptions", "organizations_url": "https://api.github.com/users/rpattcorner/orgs", "repos_url": "https://api.github.com/users/rpattcorner/repos", "events_url": "https://api.github.com/users/rpattcorner/events{/privacy}", "received_events_url": "https://api.github.com/users/rpattcorner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-24T21:12:05Z", "updated_at": "2020-07-28T22:45:32Z", "closed_at": "2020-07-28T22:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nCould have sworn I posted this a few days ago, but it's gone now, so here's a repeat.\r\n\r\nAWS IAM service maintains path attributes in a range of artifacts including users, roles and policies.  Paths don't make an attribute unique (darn it!) but they do provide critical information for working on groups of artifacts with something -- usually an affiliation -- in common.\r\n\r\nPaths are used as filters in list operations, using the `PathPrefix` optional parameter, for example\r\n\r\n`role_list = iam.list_roles(PathPrefix='/somePathOrOther/')[\"Roles\"]`\r\n\r\nAWS handles path list filtering properly, but localstack ignores the PathPrefix in list operations.  From what I see, localstack returns all path entries in a list operation, regardless of filter.\r\n\r\n## Expected behavior\r\n\r\niam.list_XXX operations return only entries that match the PathPrefix parameter when the parameter is present\r\n\r\n## Actual behavior\r\n\r\niam.list_XXX operations return all entries regardless of PathPrefix\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\ndocker-compose up\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n```\r\n#  Show problem localstack does not honor path\r\nimport localstack_client.session\r\n\r\nsession = localstack_client.session.Session()\r\niam = session.client('iam')\r\nassume_role_policy_doc = '{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"AWS\": [\"arn:aws:iam::123412341234:root\"]}, \"Action\": \"sts:AssumeRole\"}]}'\r\n\r\n# clear out roles and users for a clean test\r\ntry:\r\n    response_role = iam.delete_role(RoleName='fooRole')\r\n    response_user = iam.delete_user(UserName='fooUser')\r\nexcept Exception as e:\r\n    pass\r\n\r\n# Create a unique role with a clearly defined path\r\nresponse = iam.create_role(\r\n    Path='/somePathOrOther/',\r\n    RoleName='fooRole',\r\n    AssumeRolePolicyDocument='{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"AWS\": [\"arn:aws:iam::123412341234:root\"]}, \"Action\": \"sts:AssumeRole\"}]}',\r\n    Description='string'\r\n)\r\n\r\n#  Look for the role where it *should not be found*, in the default path\r\n#  The path format follows the aws rules of starting and ending with a slash, but a naked path gives same result\r\nrole_list = iam.list_roles(PathPrefix='/')[\"Roles\"]\r\nif len(role_list) != 0:\r\n    for role in role_list:\r\n        print (\"We asked for a list of roles with a PathPrefix of '/' but found the role with name \\'{}\\' and path \\'{}\\'\".\r\n               format(role[\"RoleName\"], role[\"Path\"]))\r\n\r\n#  Users have the same problem\r\nresponse = iam.create_user(\r\n    Path='/somePathOrOther/',\r\n    UserName='fooUser',\r\n)\r\n\r\n#  Look for the role where it *should not be found*, in the default path\r\nuser_list = iam.list_users(PathPrefix='/')[\"Users\"]\r\nif len(role_list) != 0:\r\n    for user in user_list:\r\n        print (\"We asked for a list of users with a PathPrefix of '/' but found the user with name \\'{}\\' and path \\'{}\\'\".\r\n               format(user[\"UserName\"], role[\"Path\"]))\r\n\r\n#  Generally the localstack implementation of list_users and list_roles symmetrically ignores the path, e.g.\r\n#  creating an entity with a default (/) path shows up when you ask for a more specific path\r\n\r\n#  Clear out again\r\ntry:\r\n    response_role = iam.delete_role(RoleName='fooRole')\r\n    response_user = iam.delete_user(UserName='fooUser')\r\nexcept Exception as e:\r\n    pass\r\n\r\nresponse = iam.create_role(\r\n    RoleName='fooNoPathRole',   # Note, path is missing, reverts to slash\r\n    AssumeRolePolicyDocument='{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"AWS\": [\"arn:aws:iam::123412341234:root\"]}, \"Action\": \"sts:AssumeRole\"}]}',\r\n    Description='string'\r\n)\r\n\r\n#  Look for the default path role where it *should not be found*, in a specific path\r\nrole_list = iam.list_roles(PathPrefix='/somePathOrOther/')[\"Roles\"]\r\nif len(role_list) != 0:\r\n    for role in role_list:\r\n        print (\"We asked for a list of roles with a PathPrefix of '/somePathOrOther/' but found the role with name \\'{}\\' and path \\'{}\\'\".\r\n               format(role[\"RoleName\"], role[\"Path\"]))\r\n\r\n\r\n```\r\nWith the result:\r\n```\r\nlocalstack_role_err/not_honor_path.py\r\nWe asked for a list of roles with a PathPrefix of '/' but found the role with name 'fooRole' and path '/somePathOrOther/'\r\nWe asked for a list of users with a PathPrefix of '/' but found the user with name 'fooUser' and path '/somePathOrOther/'\r\nWe asked for a list of roles with a PathPrefix of '/somePathOrOther/' but found the role with name 'fooNoPathRole' and path '/'\r\n\r\nProcess finished with exit code 0\r\n```\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2765", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2765/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2765/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2765/events", "html_url": "https://github.com/localstack/localstack/issues/2765", "id": 664896033, "node_id": "MDU6SXNzdWU2NjQ4OTYwMzM=", "number": 2765, "title": "RDS Restoring from Snapshot is failing", "user": {"login": "bodiam", "id": 46468, "node_id": "MDQ6VXNlcjQ2NDY4", "avatar_url": "https://avatars2.githubusercontent.com/u/46468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodiam", "html_url": "https://github.com/bodiam", "followers_url": "https://api.github.com/users/bodiam/followers", "following_url": "https://api.github.com/users/bodiam/following{/other_user}", "gists_url": "https://api.github.com/users/bodiam/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodiam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodiam/subscriptions", "organizations_url": "https://api.github.com/users/bodiam/orgs", "repos_url": "https://api.github.com/users/bodiam/repos", "events_url": "https://api.github.com/users/bodiam/events{/privacy}", "received_events_url": "https://api.github.com/users/bodiam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-24T03:45:07Z", "updated_at": "2020-07-28T03:17:39Z", "closed_at": "2020-07-27T09:54:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nWe're currently trying to write a small script which will create and restore snapshots. Currently, creating snapshots seems to work, but restoring is not. I'm a paid user, but unfortunately I can't see the source and see if this is implemented or not, I'm not sure where this is documented.\r\n\r\n## Expected behavior\r\n\r\nThe RDS is restored\r\n\r\n## Actual behavior\r\n\r\n```\r\nUnable to parse response (syntax error: line 1, column 54), invalid XML received:\r\nb'<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n'\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n SERVICES=s3,rds localstack start\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nawslocal rds create-db-instance --db-instance-identifier db2 --db-instance-class c1 --engine postgres\r\nawslocal rds create-db-snapshot --db-snapshot-identifier db2-snapshot --db-instance-identifier db2\r\nawslocal rds restore-db-instance-from-db-snapshot --db-instance-identifier db2-restore --db-snapshot-identifier db2-snapshot\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2764", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2764/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2764/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2764/events", "html_url": "https://github.com/localstack/localstack/issues/2764", "id": 664818936, "node_id": "MDU6SXNzdWU2NjQ4MTg5MzY=", "number": 2764, "title": "Cache API Authorization for Pro features", "user": {"login": "badarsebard", "id": 10718922, "node_id": "MDQ6VXNlcjEwNzE4OTIy", "avatar_url": "https://avatars0.githubusercontent.com/u/10718922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badarsebard", "html_url": "https://github.com/badarsebard", "followers_url": "https://api.github.com/users/badarsebard/followers", "following_url": "https://api.github.com/users/badarsebard/following{/other_user}", "gists_url": "https://api.github.com/users/badarsebard/gists{/gist_id}", "starred_url": "https://api.github.com/users/badarsebard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badarsebard/subscriptions", "organizations_url": "https://api.github.com/users/badarsebard/orgs", "repos_url": "https://api.github.com/users/badarsebard/repos", "events_url": "https://api.github.com/users/badarsebard/events{/privacy}", "received_events_url": "https://api.github.com/users/badarsebard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-23T23:12:27Z", "updated_at": "2020-08-11T16:33:13Z", "closed_at": "2020-08-11T16:32:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Cached API Authorization for Pro features\r\n\r\n[ ] bug report\r\n[x] feature request\r\n\r\n# Detailed description\r\nWhen disconnected from the internet I'm unable to start the Pro features of localstack. Presumably because the API call fails. It would be nice if the authorization could be cached in some way so that the features remain active for a time until internet becomes available. This is particularly useful in my mind while traveling. Twenty-four hours seems like a reasonable time to live for the cached call.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2761", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2761/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2761/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2761/events", "html_url": "https://github.com/localstack/localstack/issues/2761", "id": 664199625, "node_id": "MDU6SXNzdWU2NjQxOTk2MjU=", "number": 2761, "title": "VPN Gateway attachment.vpc-id filter needs incorporated", "user": {"login": "alanbaldwin", "id": 165938, "node_id": "MDQ6VXNlcjE2NTkzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/165938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanbaldwin", "html_url": "https://github.com/alanbaldwin", "followers_url": "https://api.github.com/users/alanbaldwin/followers", "following_url": "https://api.github.com/users/alanbaldwin/following{/other_user}", "gists_url": "https://api.github.com/users/alanbaldwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanbaldwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanbaldwin/subscriptions", "organizations_url": "https://api.github.com/users/alanbaldwin/orgs", "repos_url": "https://api.github.com/users/alanbaldwin/repos", "events_url": "https://api.github.com/users/alanbaldwin/events{/privacy}", "received_events_url": "https://api.github.com/users/alanbaldwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-23T04:45:43Z", "updated_at": "2020-07-29T07:19:45Z", "closed_at": "2020-07-29T07:19:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nTrying to retrieve vpn gateways by vpc id fails. This has been fixed recently in the upstream library here: https://github.com/spulec/moto/issues/3154 but needs to be incorporated.  The attachment.vpc-id filter is used by terraform when creating an `aws_vpn_gateway_attachment` resource or an `aws_vpn_gateway` that's explicitly attached to a vpc, so it prevents mocking out creating those resources.\r\n\r\n## Expected behavior\r\n\r\nVPN Gateways should be able to be filtered by `attachment.vpc-id`\r\n\r\n## Actual behavior\r\n\r\nAn error is returned from localstack:\r\n```\r\nb'<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n'\r\n```\r\n\r\nand the logs for localstack list the error:\r\n```\r\nmoto.ec2.exceptions.FilterNotImplementedError: The filter 'attachment.vpc-id' for DescribeVpnGateways has not been implemented in Moto yet. Feel free to open an issue at https://github.com/spulec/moto/issues\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n`localstack -d start`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nA minimal set of code to cause the error: \r\n```\r\nawslocal ec2 create-vpn-gateway --type ipsec.1\r\nawslocal ec2 describe-vpn-gateways --filter Name=attachment.vpc-id,Values=vpc-1234\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2760", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2760/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2760/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2760/events", "html_url": "https://github.com/localstack/localstack/issues/2760", "id": 663829552, "node_id": "MDU6SXNzdWU2NjM4Mjk1NTI=", "number": 2760, "title": "java8: Unable to find handler script in Lambda archive", "user": {"login": "dingwen150", "id": 33841773, "node_id": "MDQ6VXNlcjMzODQxNzcz", "avatar_url": "https://avatars1.githubusercontent.com/u/33841773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingwen150", "html_url": "https://github.com/dingwen150", "followers_url": "https://api.github.com/users/dingwen150/followers", "following_url": "https://api.github.com/users/dingwen150/following{/other_user}", "gists_url": "https://api.github.com/users/dingwen150/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingwen150/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingwen150/subscriptions", "organizations_url": "https://api.github.com/users/dingwen150/orgs", "repos_url": "https://api.github.com/users/dingwen150/repos", "events_url": "https://api.github.com/users/dingwen150/events{/privacy}", "received_events_url": "https://api.github.com/users/dingwen150/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1044164786, "node_id": "MDU6TGFiZWwxMDQ0MTY0Nzg2", "url": "https://api.github.com/repos/localstack/localstack/labels/cannot-reproduce", "name": "cannot-reproduce", "color": "6de8bd", "default": false, "description": ""}, {"id": 741276619, "node_id": "MDU6TGFiZWw3NDEyNzY2MTk=", "url": "https://api.github.com/repos/localstack/localstack/labels/java", "name": "java", "color": "e2c988", "default": false, "description": null}, {"id": 1489098033, "node_id": "MDU6TGFiZWwxNDg5MDk4MDMz", "url": "https://api.github.com/repos/localstack/localstack/labels/lambda-execution", "name": "lambda-execution", "color": "e1f774", "default": false, "description": ""}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "macnev2013", "id": 13847870, "node_id": "MDQ6VXNlcjEzODQ3ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13847870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macnev2013", "html_url": "https://github.com/macnev2013", "followers_url": "https://api.github.com/users/macnev2013/followers", "following_url": "https://api.github.com/users/macnev2013/following{/other_user}", "gists_url": "https://api.github.com/users/macnev2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/macnev2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macnev2013/subscriptions", "organizations_url": "https://api.github.com/users/macnev2013/orgs", "repos_url": "https://api.github.com/users/macnev2013/repos", "events_url": "https://api.github.com/users/macnev2013/events{/privacy}", "received_events_url": "https://api.github.com/users/macnev2013/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "macnev2013", "id": 13847870, "node_id": "MDQ6VXNlcjEzODQ3ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13847870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macnev2013", "html_url": "https://github.com/macnev2013", "followers_url": "https://api.github.com/users/macnev2013/followers", "following_url": "https://api.github.com/users/macnev2013/following{/other_user}", "gists_url": "https://api.github.com/users/macnev2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/macnev2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macnev2013/subscriptions", "organizations_url": "https://api.github.com/users/macnev2013/orgs", "repos_url": "https://api.github.com/users/macnev2013/repos", "events_url": "https://api.github.com/users/macnev2013/events{/privacy}", "received_events_url": "https://api.github.com/users/macnev2013/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-22T14:58:58Z", "updated_at": "2020-08-10T05:45:11Z", "closed_at": "2020-08-10T05:44:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a bug report\r\n\r\n# Detailed description\r\nTry to create HelloWorld lambda using java8, but the error is unable to find handler script.\r\n```\r\naws lambda --endpoint=http://localhost:4574 create-function \\\r\n--region us-east-1 \\\r\n--function-name hello \\\r\n--zip-file fileb:///Users/dingwenxiao/Documents/projects/test_lambda/build/distributions/test_lambda-1.0-SNAPSHOT.zip \\\r\n--role whatever \\\r\n--handler example.Hello \\\r\n--runtime java8\r\n```\r\nError\r\n```\r\n2020-07-22T14:55:10:DEBUG:localstack.services.awslambda.lambda_api: Lambda archive content:\r\ntotal 8\r\ndrwxr-xr-x    5 root     root           160 Jul 22 14:55 .\r\ndrwxrwxrwx   21 root     root           672 Jul 22 14:55 ..\r\ndrwxr-xr-x    3 root     root            96 Jul 22 14:55 example\r\ndrwxr-xr-x    3 root     root            96 Jul 22 14:55 lib\r\n-rw-r--r--    1 root     root          5661 Jul 22 14:55 original_lambda_archive.zip\r\n\r\n2020-07-22T14:55:10:WARNING:localstack.services.awslambda.lambda_api: Unable to find handler script in Lambda archive.\r\n```\r\n\r\n## Expected behavior\r\n\r\n...\r\n\r\n## Actual behavior\r\n\r\n```\r\n2020-07-22T14:55:10:DEBUG:localstack.services.awslambda.lambda_api: Lambda archive content:\r\ntotal 8\r\ndrwxr-xr-x    5 root     root           160 Jul 22 14:55 .\r\ndrwxrwxrwx   21 root     root           672 Jul 22 14:55 ..\r\ndrwxr-xr-x    3 root     root            96 Jul 22 14:55 example\r\ndrwxr-xr-x    3 root     root            96 Jul 22 14:55 lib\r\n-rw-r--r--    1 root     root          5661 Jul 22 14:55 original_lambda_archive.zip\r\n\r\n2020-07-22T14:55:10:WARNING:localstack.services.awslambda.lambda_api: Unable to find handler script in Lambda archive.\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n# Command used to start LocalStack\r\nstart command:\r\n`TMPDIR=/private$TMPDIR DEBUG=1 localstack start --docker\r\n`\r\n\r\nconfig file: docker-compose.yml\r\n```\r\nversion: '2.1'\r\n\r\nservices:\r\n  localstack:\r\n    container_name: \"${LOCALSTACK_DOCKER_NAME-localstack_main}\"\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4566-4599:4566-4599\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=${SERVICES- }\r\n      - DEBUG=${DEBUG- }\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - HOST_TMP_FOLDER=${TMPDIR}\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\n# Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\njava lambda code\r\n```\r\npackage example;\r\n\r\nimport com.amazonaws.services.lambda.runtime.Context;\r\nimport com.amazonaws.services.lambda.runtime.RequestHandler;\r\n\r\npublic class Hello implements RequestHandler<Object, String>\r\n{\r\n    \r\n    @Override\r\n    public String handleRequest(Object input, Context context)\r\n    {\r\n        context.getLogger().log(\"Input: \" + input);\r\n        String output = \"example.Hello, \" + input + \"!\";\r\n        return output;\r\n    }\r\n}\r\n```\r\n\r\nSame error with following commands:\r\n\r\n```\r\naws lambda --endpoint=http://localhost:4574 create-function \\\r\n--region us-east-1 \\\r\n--function-name hello \\\r\n--zip-file fileb:///Users/dingwenxiao/Documents/projects/test_lambda/build/distributions/test_lambda-1.0-SNAPSHOT.zip \\\r\n--role whatever \\\r\n--handler example.Hello \\\r\n--runtime java8\r\n```\r\n\r\n```\r\nawslocal lambda  create-function \\\r\n--region us-east-1 \\\r\n--function-name hello \\\r\n--zip-file fileb:///Users/dingwenxiao/Documents/projects/test_lambda/build/distributions/test_lambda-1.0-SNAPSHOT.zip \\\r\n--role whatever \\\r\n--handler example.Hello \\\r\n--runtime java8\r\n```\r\n\r\n```\r\nawslocal lambda  create-function \\\r\n--region us-east-1 \\\r\n--function-name hello \\\r\n--zip-file fileb:///Users/dingwenxiao/Documents/projects/test_lambda/build/distributions/test_lambda-1.0-SNAPSHOT.zip \\\r\n--role whatever \\\r\n--handler example.Hello::handleRequest \\\r\n--runtime java8\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2758", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2758/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2758/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2758/events", "html_url": "https://github.com/localstack/localstack/issues/2758", "id": 663661930, "node_id": "MDU6SXNzdWU2NjM2NjE5MzA=", "number": 2758, "title": "clientContext is always undefined on lambda invoke", "user": {"login": "yonahforst", "id": 1440796, "node_id": "MDQ6VXNlcjE0NDA3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1440796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yonahforst", "html_url": "https://github.com/yonahforst", "followers_url": "https://api.github.com/users/yonahforst/followers", "following_url": "https://api.github.com/users/yonahforst/following{/other_user}", "gists_url": "https://api.github.com/users/yonahforst/gists{/gist_id}", "starred_url": "https://api.github.com/users/yonahforst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yonahforst/subscriptions", "organizations_url": "https://api.github.com/users/yonahforst/orgs", "repos_url": "https://api.github.com/users/yonahforst/repos", "events_url": "https://api.github.com/users/yonahforst/events{/privacy}", "received_events_url": "https://api.github.com/users/yonahforst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 798260296, "node_id": "MDU6TGFiZWw3OTgyNjAyOTY=", "url": "https://api.github.com/repos/localstack/localstack/labels/diverges-from-aws", "name": "diverges-from-aws", "color": "34b5ba", "default": false, "description": null}, {"id": 660698194, "node_id": "MDU6TGFiZWw2NjA2OTgxOTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/feature-missing", "name": "feature-missing", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-22T10:40:56Z", "updated_at": "2020-08-08T00:37:21Z", "closed_at": "2020-07-31T23:10:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nWhen invoking a Lambda function, we should be able to [pass a ClientContext base64 string](https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/Lambda.html#invoke-property) and receive it (decoded) in the handler function context object.\r\n\r\nHowever when I console.log the context object, `clientContext` is always `undefined`\r\n```\r\nSTART RequestId: e3f4ff44-4122-181d-291e-d46263299088 Version: $LATEST\r\n\r\n2020-07-22T09:39:14.813Z    e3f4ff44-4122-181d-291e-d46263299088    INFO      {} {\r\n  callbackWaitsForEmptyEventLoop: [Getter/Setter],\r\n  succeed: [Function],\r\n  fail: [Function],\r\n  done: [Function],\r\n  functionVersion: '$LATEST',\r\n  functionName: 'userMgr-local-users',\r\n  memoryLimitInMB: '1536',\r\n  logGroupName: '/aws/lambda/userMgr-local-users',\r\n  logStreamName: '2020/07/22/[$LATEST]0c043fa44889969a82ad0b09bd15493d',\r\n  clientContext: undefined,\r\n  identity: undefined,\r\n  invokedFunctionArn: 'arn:aws:lambda:eu-west-1:000000000000:function:userMgr-local-users',\r\n  awsRequestId: 'e3f4ff44-4122-181d-291e-d46263299088',\r\n  getRemainingTimeInMillis: [Function: getRemainingTimeInMillis]\r\n}\r\nEND RequestId: e3f4ff44-4122-181d-291e-d46263299088\r\n\r\n```\r\n\r\nI've tried invoking via the js-sdk:\r\n```js\r\nlambda.invoke({\r\nFunctionName: 'userMgr-local-users',\r\nPayload: '{\"foo\":\"bar\"}'\r\nClientContext: 'eyJjdXN0b20iOnsieC1jb3JyZWxhdGlvbi10ZXN0LWN1aWQiOiJja2N4NGttNXUwMDAwMGNzM2NpbzdvODJsIn19'\r\n}).promise()\r\n```\r\nand via the cli:\r\n```\r\nawslocal lambda invoke --function-name userMgr-local-users --client-context foo response.json\r\n```\r\nin both cases the context object on the invoked function has the property `clientContext: undefined`\r\n...\r\n\r\n## Expected behavior\r\nThe context object should contain a `clientContext` key whose value is a string passed by the invoker (base64 decoded, if invoked via the js sdk)\r\n...\r\n\r\n## Actual behavior\r\n`clientContext` is always undefined\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n```\r\necho \"exports.handler = console.log\" > index.js &&  zip function.zip index.js\r\nawslocal lambda create-function --function-name myFunc --handler index.handler --runtime nodejs12.x --zip-file=fileb://function.zip --role foo\r\nawslocal lambda invoke --function-name myFunc response.json --client-context foo\r\nawslogs get /aws/lambda/myFunc --aws-endpoint-url=http://localhost:4586\r\n```\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2755", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2755/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2755/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2755/events", "html_url": "https://github.com/localstack/localstack/issues/2755", "id": 663411915, "node_id": "MDU6SXNzdWU2NjM0MTE5MTU=", "number": 2755, "title": "SQS queues created via docker-entrypoint-initaws.d are missing", "user": {"login": "philBrown", "id": 164814, "node_id": "MDQ6VXNlcjE2NDgxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/164814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philBrown", "html_url": "https://github.com/philBrown", "followers_url": "https://api.github.com/users/philBrown/followers", "following_url": "https://api.github.com/users/philBrown/following{/other_user}", "gists_url": "https://api.github.com/users/philBrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/philBrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philBrown/subscriptions", "organizations_url": "https://api.github.com/users/philBrown/orgs", "repos_url": "https://api.github.com/users/philBrown/repos", "events_url": "https://api.github.com/users/philBrown/events{/privacy}", "received_events_url": "https://api.github.com/users/philBrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-22T01:45:29Z", "updated_at": "2020-07-26T01:15:41Z", "closed_at": "2020-07-25T10:13:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n- [x] bug report\r\n- [ ] feature request\r\n\r\n# Detailed description\r\n\r\nWhen using Docker Compose, SQS queues created using a shell script mounted in `/docker-entrypoint-initaws.d` are not available.\r\n\r\nAfter the container is started, creating queues via the AWS CLI work as expected.\r\n\r\n## Expected behavior\r\n\r\nAfter starting the containers, I should be able to query and send messages to the queues created in the shell script.\r\n\r\n## Actual behavior\r\n\r\nQuerying for queues via\r\n``` bash\r\naws --endpoint-url=http://localhost:4566 sqs list-queues\r\n```\r\nreturns an empty response. Attempting to send a message responds with\r\n\r\n> An error occurred (AWS.SimpleQueueService.NonExistentQueue) when calling the SendMessage operation: The specified queue does not exist for this wsdl version.\r\n\r\nCreating a queue from the host after the container has started works correctly\r\n\r\n``` bash\r\naws --endpoint-url=http://localhost:4566 sqs create-queue --queue-name Foo\r\n```\r\n> ```\r\n> {\r\n>     \"QueueUrl\": \"http://localhost:4566/000000000000/Foo\"\r\n> }\r\n> ```\r\n``` bash\r\naws --endpoint-url=http://localhost:4566 sqs send-message --queue-url http://localhost:4566/000000000000/Foo --message-body \"hi\"\r\n```\r\n> ```\r\n> {\r\n>    \"MD5OfMessageBody\": \"49f68a5c8493ec2c0bf489821c21fc3b\",\r\n>    \"MessageId\": \"a38a322b-eea2-9e9a-69b2-e8d1a0159ac6\"\r\n> }\r\n> ```\r\n\r\n# Steps to reproduce\r\n\r\nUsing docker-compose, I mount a directory with shell scripts to create some SQS queues\r\n\r\ndocker-compose.yml (just the important bits)\r\n``` yml\r\nenvironment:\r\n  - DEFAULT_REGION=ap-southeast-2\r\n  - SERVICES=sqs\r\nvolumes:\r\n  - \"./localstack:/docker-entrypoint-initaws.d\"\r\n```\r\nlocalstack/init.sh\r\n``` bash\r\n#!/usr/bin/env bash\r\nset -x\r\n\r\nawslocal sqs create-queue --queue-name MyQueue\r\n\r\nset +x\r\n```\r\n\r\nThe output from `docker-compose up` shows that these _appear_ to be working\r\n\r\n``` none\r\naws-localstack | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initaws.d/init.sh\r\naws-localstack | ++ awslocal sqs create-queue --queue-name MyQueue\r\naws-localstack | {\r\naws-localstack |     \"QueueUrl\": \"http://localhost:4576/000000000000/MyQueue\"\r\naws-localstack | }\r\naws-localstack | ++ set +x\r\n```\r\n\r\nAfter the container has started, from the host use the AWS CLI to try and query the queues\r\n\r\n``` bash\r\naws --endpoint-url=http://localhost:4566 sqs list-queues\r\n```\r\n\r\nThe response will be empty\r\n\r\n## Command used to start LocalStack\r\n\r\n``` bash\r\ndocker-compose up\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2754", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2754/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2754/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2754/events", "html_url": "https://github.com/localstack/localstack/issues/2754", "id": 663067105, "node_id": "MDU6SXNzdWU2NjMwNjcxMDU=", "number": 2754, "title": "Vulnerable libraries packaged in 0.11.3 container image", "user": {"login": "OliverCole", "id": 6171713, "node_id": "MDQ6VXNlcjYxNzE3MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6171713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OliverCole", "html_url": "https://github.com/OliverCole", "followers_url": "https://api.github.com/users/OliverCole/followers", "following_url": "https://api.github.com/users/OliverCole/following{/other_user}", "gists_url": "https://api.github.com/users/OliverCole/gists{/gist_id}", "starred_url": "https://api.github.com/users/OliverCole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OliverCole/subscriptions", "organizations_url": "https://api.github.com/users/OliverCole/orgs", "repos_url": "https://api.github.com/users/OliverCole/repos", "events_url": "https://api.github.com/users/OliverCole/events{/privacy}", "received_events_url": "https://api.github.com/users/OliverCole/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888569, "node_id": "MDU6TGFiZWw0Njg4ODg1Njk=", "url": "https://api.github.com/repos/localstack/localstack/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 752344656, "node_id": "MDU6TGFiZWw3NTIzNDQ2NTY=", "url": "https://api.github.com/repos/localstack/localstack/labels/pr-requested", "name": "pr-requested", "color": "1e8e0f", "default": false, "description": null}, {"id": 1407837090, "node_id": "MDU6TGFiZWwxNDA3ODM3MDkw", "url": "https://api.github.com/repos/localstack/localstack/labels/won't%20fix", "name": "won't fix", "color": "ea83e3", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-21T14:37:01Z", "updated_at": "2020-07-21T20:59:27Z", "closed_at": "2020-07-21T16:58:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a bug report\r\n\r\n# Detailed description\r\nWe scanned [`localstack/localstack:0.11.3`](https://hub.docker.com/layers/localstack/localstack/0.11.3/images/sha256-3e658f7976d54211c9a8d50c288b097af2d9ff11b6a001a472bf7f56f0307645?context=explore) and our tool flagged up 35 vulnerabilities in libraries included in the container image.\r\n\r\n## Expected behavior\r\nNo vulnerabilities found on scan tools.\r\n\r\n## Actual behavior\r\nScan results: [0.11.3.txt](https://github.com/localstack/localstack/files/4954149/0.11.3.txt)\r\n\r\n# Steps to reproduce\r\nScan with a commercially available scan tool.\r\n\r\n## Command used to start LocalStack\r\nN/A\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nN/A", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2749", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2749/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2749/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2749/events", "html_url": "https://github.com/localstack/localstack/issues/2749", "id": 662030522, "node_id": "MDU6SXNzdWU2NjIwMzA1MjI=", "number": 2749, "title": "Docker-compose dashboard start_web not working", "user": {"login": "rodrigondec", "id": 3301060, "node_id": "MDQ6VXNlcjMzMDEwNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3301060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigondec", "html_url": "https://github.com/rodrigondec", "followers_url": "https://api.github.com/users/rodrigondec/followers", "following_url": "https://api.github.com/users/rodrigondec/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigondec/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigondec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigondec/subscriptions", "organizations_url": "https://api.github.com/users/rodrigondec/orgs", "repos_url": "https://api.github.com/users/rodrigondec/repos", "events_url": "https://api.github.com/users/rodrigondec/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigondec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T16:45:04Z", "updated_at": "2020-07-20T17:35:54Z", "closed_at": "2020-07-20T17:35:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nI'm running the localstack with `docker-compose`.\r\n\r\nThe dashboard web crashes after spawning. Due to missing [`web`](https://github.com/localstack/localstack/tree/master/localstack/dashboard/web) folder on the path `/opt/code/localstack/localstack/dashboard/`.\r\n\r\nMy docker-compose:\r\n\r\n```\r\nversion: \"3.7\"\r\n\r\nservices:\r\n    localstack:\r\n        image: localstack/localstack\r\n        container_name: \"service-localstack-dev\"\r\n        ports:\r\n            - \"4566-4599:4566-4599\"\r\n            - \"8080:8080\"\r\n        environment:\r\n            - SERVICES=sns\r\n            - DEFAULT_REGION=us-east-1\r\n            - DEBUG=1\r\n            - START_WEB=1\r\n            - DATA_DIR=/tmp/localstack/data\r\n            - DOCKER_HOST=unix:///var/run/docker.sock\r\n            - HOST_TMP_FOLDER=/tmp/localstack\r\n        volumes:\r\n            - \"/tmp/localstack:/tmp/localstack\"\r\n            - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\n## Expected behavior\r\nThe dashboard web to be up and running.\r\n\r\n## Actual behavior\r\nThe dashboard web crashes with the output:\r\n\r\n```\r\nservice-localstack-dev | 2020-07-20T16:35:25:DEBUG:bootstrap.py: Loading plugins - scope \"services\", module \"localstack\": <function register_localstack_plugins at 0x7f0d1550aee0>\r\nservice-localstack-dev | ERROR: 'cd \"/opt/code/localstack/localstack/dashboard/web\"; npm install': exit code 243; output: b'/bin/sh: cd: line 1: can\\'t cd to /opt/code/localstack/localstack/dashboard/web: No such file or directory\r\nnpm WARN locking Error: EACCES: permission denied, open \\'/root/.npm/_locks/staging-9bb89b2aa202b609.lock\\'\\nnpm WARN locking  /root/.npm/_locks/staging-9bb89b2aa202b609.lock failed [Error: EACCES: permission denied, open \\'/root/.npm/_locks/staging-9bb89b2aa202b609.lock\\'] {\\nnpm WARN locking   stack: \"Error: EACCES: permission denied, open \\'/root/.npm/_locks/staging-9bb89b2aa202b609.lock\\'\",\\nnpm WARN locking   errno: -13,\\nnpm WARN locking   code: \\'EACCES\\',\\nnpm WARN locking   syscall: \\'open\\',\\nnpm WARN locking   path: \\'/root/.npm/_locks/staging-9bb89b2aa202b609.lock\\'\\nnpm WARN locking }\\nnpm WARN enoent ENOENT: no such file or directory, open \\'/opt/code/localstack/package.json\\'\\nnpm WARN localstack No description\\nnpm WARN localstack No repository field.\\nnpm WARN localstack No README data\\nnpm WARN localstack No license field.\\n\\nnpm ERR! code EACCES\\nnpm ERR! syscall open\\nnpm ERR! path /root/.npm/_locks/staging-9bb89b2aa202b609.lock\\nnpm ERR! errno -13\\nnpm ERR! \\nnpm ERR! Your cache folder contains root-owned files, due to a bug in\\nnpm ERR! previous versions of npm which has since been addressed.\\nnpm ERR! \\nnpm ERR! To permanently fix this problem, please run:\\nnpm ERR!   sudo chown -R 1001:1001 \"/root/.npm\"\\n'\r\nservice-localstack-dev | Traceback (most recent call last):\r\nservice-localstack-dev |   File \"/opt/code/localstack/localstack/utils/cli.py\", line 157, in main\r\nservice-localstack-dev |     subcommand['function'](argv, args)\r\nservice-localstack-dev |   File \"/opt/code/localstack/localstack/utils/cli.py\", line 82, in cmd_web\r\nservice-localstack-dev |     localstack.dashboard.api.serve(port)\r\nservice-localstack-dev |   File \"/opt/code/localstack/localstack/dashboard/api.py\", line 134, in serve\r\nservice-localstack-dev |     ensure_webapp_installed()\r\nservice-localstack-dev |   File \"/opt/code/localstack/localstack/dashboard/api.py\", line 129, in ensure_webapp_installed\r\nservice-localstack-dev |     common.run('cd \"%s\"; npm install' % web_dir)\r\nservice-localstack-dev |   File \"/opt/code/localstack/localstack/utils/common.py\", line 1056, in run\r\nservice-localstack-dev |     return do_run(cmd)\r\nservice-localstack-dev |   File \"/opt/code/localstack/localstack/utils/common.py\", line 1053, in do_run\r\nservice-localstack-dev |     return bootstrap.run(cmd, **kwargs)\r\nservice-localstack-dev |   File \"/opt/code/localstack/localstack/utils/bootstrap.py\", line 579, in run\r\nservice-localstack-dev |     raise e\r\nservice-localstack-dev |   File \"/opt/code/localstack/localstack/utils/bootstrap.py\", line 539, in run\r\nservice-localstack-dev |     output = subprocess.check_output(cmd, shell=True, stderr=stderr, env=env_dict, cwd=cwd)\r\nservice-localstack-dev |   File \"/usr/lib/python3.8/subprocess.py\", line 411, in check_output\r\nservice-localstack-dev |     return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,\r\nservice-localstack-dev |   File \"/usr/lib/python3.8/subprocess.py\", line 512, in run\r\nservice-localstack-dev |     raise CalledProcessError(retcode, process.args,\r\nservice-localstack-dev | subprocess.CalledProcessError: Command 'cd \"/opt/code/localstack/localstack/dashboard/web\"; npm install' returned non-zero exit status 243.\r\nservice-localstack-dev | ERROR: Command 'cd \"/opt/code/localstack/localstack/dashboard/web\"; npm install' returned non-zero exit status 243.\r\nservice-localstack-dev | make: *** [Makefile:109: web] Error 1\r\n```\r\n\r\nFrom the stacktrace the tips I found were from this line \r\n\r\n```\r\nservice-localstack-dev | ERROR: 'cd \"/opt/code/localstack/localstack/dashboard/web\"; npm install': exit code 243; output: b'/bin/sh: cd: line 1: can\\'t cd to /opt/code/localstack/localstack/dashboard/web: No such file or directory\r\n```\r\n\r\nI jumped into the container created and did some digging\r\n\r\n![image](https://user-images.githubusercontent.com/3301060/87963221-c1929f80-ca8e-11ea-8bd2-848af7eb855b.png)\r\n\r\nOn my container there's no folder `web`!\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n`docker-compose up`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2747", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2747/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2747/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2747/events", "html_url": "https://github.com/localstack/localstack/issues/2747", "id": 661022176, "node_id": "MDU6SXNzdWU2NjEwMjIxNzY=", "number": 2747, "title": "localstack IAM list operations (role and user) do not respect PathPrefix ", "user": {"login": "rpattcorner", "id": 1488518, "node_id": "MDQ6VXNlcjE0ODg1MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1488518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpattcorner", "html_url": "https://github.com/rpattcorner", "followers_url": "https://api.github.com/users/rpattcorner/followers", "following_url": "https://api.github.com/users/rpattcorner/following{/other_user}", "gists_url": "https://api.github.com/users/rpattcorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpattcorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpattcorner/subscriptions", "organizations_url": "https://api.github.com/users/rpattcorner/orgs", "repos_url": "https://api.github.com/users/rpattcorner/repos", "events_url": "https://api.github.com/users/rpattcorner/events{/privacy}", "received_events_url": "https://api.github.com/users/rpattcorner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-19T19:31:32Z", "updated_at": "2020-08-02T20:34:37Z", "closed_at": "2020-08-02T20:34:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nThe IAM list operations [list_users](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/iam.html#IAM.Client.list_users) and [list_roles](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/iam.html#IAM.Client.list_roles) have an optional PathPrefix attribute that guarantees retrieval of users and roles with a specified PathPrefix\r\n\r\nBoth PathPrefix qualifiers work in actual boto3 calls but fail with localstack endpoints\r\n\r\n## Expected behavior\r\nOnly users or roles with the specified Path equal to the PathPrefix are listed\r\n\r\n## Actual behavior\r\nAll users or roles are listed regardless of Path or PathPrefix.  The problem is symmetrical, i.e. a list specifying a defaulted path incorrectly returns items with a specified path, and a list specifying a path returns items with a defaulted path\r\n\r\n## Code to illustrate the problem\r\n```\r\n#  Show problem localstack does not honor path\r\nimport localstack_client.session\r\n\r\nsession = localstack_client.session.Session()\r\niam = session.client('iam')\r\nassume_role_policy_doc = '{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"AWS\": [\"arn:aws:iam::123412341234:root\"]}, \"Action\": \"sts:AssumeRole\"}]}'\r\n\r\n# clear out roles and users for a clean test\r\ntry:\r\n    response_role = iam.delete_role(RoleName='fooRole')\r\n    response_user = iam.delete_user(UserName='fooUser')\r\nexcept Exception as e:\r\n    pass\r\n\r\n# Create a unique role with a clearly defined path\r\nresponse = iam.create_role(\r\n    Path='/somePathOrOther/',\r\n    RoleName='fooRole',\r\n    AssumeRolePolicyDocument='{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"AWS\": [\"arn:aws:iam::123412341234:root\"]}, \"Action\": \"sts:AssumeRole\"}]}',\r\n    Description='string'\r\n)\r\n\r\n#  Look for the role where it *should not be found*, in the default path\r\n#  The path format follows the aws rules of starting and ending with a slash, but a naked path gives same result\r\nrole_list = iam.list_roles(PathPrefix='/')[\"Roles\"]\r\nif len(role_list) != 0:\r\n    for role in role_list:\r\n        print (\"We asked for a list of roles with a PathPrefix of '/' but found the role with name \\'{}\\' and path \\'{}\\'\".\r\n               format(role[\"RoleName\"], role[\"Path\"]))\r\n\r\n#  Users have the same problem\r\nresponse = iam.create_user(\r\n    Path='/somePathOrOther/',\r\n    UserName='fooUser',\r\n)\r\n\r\n#  Look for the role where it *should not be found*, in the default path\r\nuser_list = iam.list_users(PathPrefix='/')[\"Users\"]\r\nif len(role_list) != 0:\r\n    for user in user_list:\r\n        print (\"We asked for a list of users with a PathPrefix of '/' but found the user with name \\'{}\\' and path \\'{}\\'\".\r\n               format(user[\"UserName\"], role[\"Path\"]))\r\n\r\n#  Generally the localstack implementation of list_users and list_roles symmetrically ignores the path, e.g.\r\n#  creating an entity with a default (/) path shows up when you ask for a more specific path\r\n\r\n#  Clear out again\r\ntry:\r\n    response_role = iam.delete_role(RoleName='fooRole')\r\n    response_user = iam.delete_user(UserName='fooUser')\r\nexcept Exception as e:\r\n    pass\r\n\r\nresponse = iam.create_role(\r\n    RoleName='fooNoPathRole',   # Note, path is missing, reverts to slash\r\n    AssumeRolePolicyDocument='{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"AWS\": [\"arn:aws:iam::123412341234:root\"]}, \"Action\": \"sts:AssumeRole\"}]}',\r\n    Description='string'\r\n)\r\n\r\n#  Look for the default path role where it *should not be found*, in a specific path\r\nrole_list = iam.list_roles(PathPrefix='/somePathOrOther/')[\"Roles\"]\r\nif len(role_list) != 0:\r\n    for role in role_list:\r\n        print (\"We asked for a list of roles with a PathPrefix of '/somePathOrOther/' but found the role with name \\'{}\\' and path \\'{}\\'\".\r\n               format(role[\"RoleName\"], role[\"Path\"]))\r\n```\r\n\r\n## Here's the result of running the code above:\r\n```\r\nWe asked for a list of roles with a PathPrefix of '/' but found the role with name 'fooRole' and path '/somePathOrOther/'\r\nWe asked for a list of users with a PathPrefix of '/' but found the user with name 'fooUser' and path '/somePathOrOther/'\r\nWe asked for a list of roles with a PathPrefix of '/somePathOrOther/' but found the role with name 'fooNoPathRole' and path '/'\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\n## Command used to start LocalStack\r\ndocker-compose up with a default configuration\r\n...\r\n\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2745", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2745/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2745/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2745/events", "html_url": "https://github.com/localstack/localstack/issues/2745", "id": 660175644, "node_id": "MDU6SXNzdWU2NjAxNzU2NDQ=", "number": 2745, "title": "Dynamodb returns 500 for TransactWriteItems with ConditionCheck", "user": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars3.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-18T14:17:05Z", "updated_at": "2020-08-04T14:01:22Z", "closed_at": "2020-08-03T19:36:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n- [x] bug report\r\n\r\n# Detailed description\r\n\r\nDynamoDb service for some reason returns 500 with an empty-json-object body when sending\r\n`TransactWriteItems` with `ConditionCheck` and some other write operation.\r\nI have verified this behaviour with single `ConditionCheck` in `TransactItems` and it works, but with any of ther `Put, Update, Delete` operations in the transaction it fails...\r\n\r\n## Expected behavior\r\n\r\nIt should not return an error, but it does.\r\nI checked against dynamodb local with:\r\n```\r\ndocker run --rm -p 8000:8000 amazon/dynamodb-local\r\n```\r\nAnd it works, but localstack's dynamodb doesnt...\r\n\r\n## Actual behavior\r\n\r\nIt returns an unhelpful 500 response with empty json object (see Rust SDK output)\r\n\r\n# Steps to reproduce\r\n\r\nStart localstack, wait until it is up and running and run any of JavaScript or Rust snippets bellow.\r\n\r\n## Command used to start LocalStack\r\n\r\n```\r\nlocalstack start\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nJavaScript SDK gives little information about the underlying error, but it is less code:\r\n<details>\r\n<summary>JavaScript SDK</summary>\r\n\r\n```ts\r\nconst aws = require(\"aws-sdk\");\r\n\r\nlet tableName = \"localstack-global\";\r\nconst ddb = new aws.DynamoDB({\r\n    region: \"localstack\",\r\n    endpoint: \"http://localhost:4566\",\r\n});\r\n\r\nasync function main() {\r\n    await ddb.createTable({\r\n        TableName: tableName,\r\n        AttributeDefinitions: [{\r\n            AttributeName: \"partition_key\",\r\n            AttributeType: \"S\",\r\n        }],\r\n        KeySchema: [{\r\n            AttributeName: \"partition_key\",\r\n            KeyType: \"HASH\",\r\n        }],\r\n        BillingMode: \"PAY_PER_REQUEST\",\r\n    }).promise();\r\n\r\n    console.log(\"Table\", tableName, \"is created\");\r\n\r\n    const req = ddb.transactWriteItems({\r\n        TransactItems: [\r\n            {\r\n                ConditionCheck: {\r\n                    TableName: tableName,\r\n                    ConditionExpression: \"attribute_not_exists(partition_key)\",\r\n                    Key: {\r\n                        partition_key: {\r\n                            S: \"foo\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                Put: {\r\n                    Item: {\r\n                        partition_key: {\r\n                            S: \"bar\",\r\n                        },\r\n                    },\r\n                    TableName: tableName,\r\n                },\r\n            },\r\n        ],\r\n    });\r\n    console.time(\"transact\");\r\n    await req.promise().then(\r\n        result => console.log(\"Ok\", result),\r\n        err => console.error(\"Err\", err),\r\n    );\r\n    console.timeEnd(\"transact\");\r\n\r\n    const result = await ddb.scan({ TableName: tableName });\r\n    console.log(\"Items:\",  (await result.promise()).Items);\r\n}\r\n\r\nmain().then(() => console.log(\"Done\"), err => console.error(\"Whoops:\", err));\r\n```\r\nFor some reason it takes a lot of time for it to error out, here is the output:\r\n```bash\r\n~/junk/ts-sandbox $ node index.js \r\nTable localstack-global-6 is created\r\nErr Error [UnknownError]: null\r\n    at Request.extractError (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/protocol/json.js:51:27)\r\n    at Request.callListeners (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/sequential_executor.js:106:20)\r\n    at Request.emit (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/sequential_executor.js:78:10)\r\n    at Request.emit (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/request.js:688:14)\r\n    at Request.transition (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/request.js:22:10)\r\n    at AcceptorStateMachine.runTo (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/state_machine.js:14:12)\r\n    at /home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/state_machine.js:26:10\r\n    at Request.<anonymous> (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/request.js:38:9)\r\n    at Request.<anonymous> (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/request.js:690:12)\r\n    at Request.callListeners (/home/veetaha/junk/ts-sandbox/node_modules/aws-sdk/lib/sequential_executor.js:116:18) {\r\n  code: 'UnknownError',\r\n  time: 2020-07-18T14:41:19.788Z,\r\n  requestId: undefined,\r\n  statusCode: 500,\r\n  retryable: true\r\n}\r\ntransact: 40.678s\r\nItems: [ { partition_key: { S: 'bar' } } ]\r\nDone\r\n```\r\n</details>\r\n\r\nRust SDK gives more info about the failed request and also doesn't have that weird 40s latency (it is instant)\r\n\r\n<details>\r\n<summary>Rust SDK</summary>\r\n\r\n```rust\r\n#![allow(unused)]\r\nuse dynamodb::DynamoDb;\r\nuse dynomite::{dynamodb, attr_map};\r\nuse rusoto_core::RusotoResult;\r\n\r\n#[tokio::main]\r\nasync fn main() {\r\n    let table_name = \"localstack-global\".to_owned();\r\n    let client = dynamodb::DynamoDbClient::new(rusoto_core::Region::Custom {\r\n        name: \"localstack\".to_owned(),\r\n        endpoint: \"http://localhost:4566\".to_owned()\r\n    });\r\n    client.create_table(dynamodb::CreateTableInput {\r\n        attribute_definitions: vec![\r\n            dynamodb::AttributeDefinition {\r\n                attribute_name: \"partition_key\".to_owned(),\r\n                attribute_type: \"S\".to_owned(),\r\n            },\r\n        ],\r\n        key_schema: vec![\r\n            dynamodb::KeySchemaElement {\r\n                attribute_name: \"partition_key\".to_owned(),\r\n                key_type: \"HASH\".to_owned(),\r\n            },\r\n        ],\r\n        table_name: table_name.clone(),\r\n        billing_mode: Some(\"PAY_PER_REQUEST\".to_owned()),\r\n        ..Default::default()\r\n    }).await.unwrap();\r\n    let result = client.transact_write_items(dynamodb::TransactWriteItemsInput {\r\n        transact_items: vec![\r\n            dynamodb::TransactWriteItem {\r\n                condition_check: Some(dynamodb::ConditionCheck {\r\n                    table_name: table_name.clone(),\r\n                    condition_expression: \"attribute_not_exists(partition_key)\".to_owned(),\r\n                    key: attr_map! {\r\n                        \"partition_key\" => \"foo\".to_owned(),\r\n                    },\r\n                    ..Default::default()\r\n                }),\r\n                ..Default::default()\r\n            },\r\n            dynamodb::TransactWriteItem {\r\n                put: Some(dynamodb::Put {\r\n                    item: attr_map! {\r\n                        \"partition_key\" => \"bar\".to_owned()\r\n                    },\r\n                    table_name: table_name.clone(),\r\n                    ..Default::default()\r\n                }),\r\n                ..Default::default()\r\n            },\r\n        ],\r\n        ..Default::default()\r\n    }).await;\r\n\r\n    dbg!(result);\r\n}\r\n```\r\n\r\nOutput:\r\n```bash\r\n~/junk/rust-sandbox $ cargo run\r\n   Compiling crate_foo v0.1.0 (/home/veetaha/junk/rust-sandbox/crate_foo)\r\n    Finished dev [unoptimized + debuginfo] target(s) in 4.20s\r\n     Running `target/debug/crate_foo`\r\n[crate_foo/src/main.rs:57] result = Err(\r\n    Unknown(\r\n        BufferedHttpResponse {status: 500, body: \"{}\", headers: {\"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"2\", \"access-control-allow-origin\": \"*\", \"access-control-allow-methods\": \"HEAD,GET,PUT,POST,DELETE,OPTIONS,PATCH\", \"access-control-allow-headers\": \"authorization,content-type,content-md5,cache-control,x-amz-content-sha256,x-amz-date,x-amz-security-token,x-amz-user-agent,x-amz-target,x-amz-acl,x-amz-version-id,x-localstack-target,x-amz-tagging\", \"access-control-expose-headers\": \"x-amz-version-id\", \"connection\": \"close\", \"date\": \"Sat, 18 Jul 2020 14:46:04 GMT\", \"server\": \"hypercorn-h11\"} },\r\n    ),\r\n)\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2742", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2742/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2742/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2742/events", "html_url": "https://github.com/localstack/localstack/issues/2742", "id": 659710413, "node_id": "MDU6SXNzdWU2NTk3MTA0MTM=", "number": 2742, "title": "When enabling SSL (USE_SSL), /health return {}", "user": {"login": "CyrilDevOps", "id": 36180571, "node_id": "MDQ6VXNlcjM2MTgwNTcx", "avatar_url": "https://avatars2.githubusercontent.com/u/36180571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CyrilDevOps", "html_url": "https://github.com/CyrilDevOps", "followers_url": "https://api.github.com/users/CyrilDevOps/followers", "following_url": "https://api.github.com/users/CyrilDevOps/following{/other_user}", "gists_url": "https://api.github.com/users/CyrilDevOps/gists{/gist_id}", "starred_url": "https://api.github.com/users/CyrilDevOps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CyrilDevOps/subscriptions", "organizations_url": "https://api.github.com/users/CyrilDevOps/orgs", "repos_url": "https://api.github.com/users/CyrilDevOps/repos", "events_url": "https://api.github.com/users/CyrilDevOps/events{/privacy}", "received_events_url": "https://api.github.com/users/CyrilDevOps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-17T22:53:58Z", "updated_at": "2020-07-20T14:12:30Z", "closed_at": "2020-07-18T10:57:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nI start localstack with USE_SSL true and when I try to get the services status with https://localhost:4566/health, I got {},\r\nsame with http://localhost:4566/health\r\n...\r\n\r\n## Expected behavior\r\nI expect to see a json long of my services with their status\r\n...\r\n\r\n## Actual behavior\r\ncurl http or https to /health return {}\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\nwe use docker-compose :\r\n  localstack:\r\n    image: localstack/localstack-light\r\n    container_name: localstack\r\n    environment:\r\n      HOSTNAME: localhost\r\n      SERVICES: ${LOCALSTACK_SERVICES:-kinesis,cloudwatch,dynamodb}\r\n      KINESIS_ERROR_PROBABILITY: ${KINESIS_ERROR_PROBABILITY:- }\r\n      LAMBDA_REMOTE_DOCKER: 'false'\r\n      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-dev}\r\n      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-dev}\r\n      DEFAULT_REGION: us-east-1\r\n      AWS_CBOR_DISABLE: 'true'\r\n      CBOR_ENABLED: 'true'\r\n      USE_SSL: 'true'\r\n    healthcheck:\r\n      test: [\"CMD\", \"curl\", \"-qf\", \"http://localhost:4566/health?reload\"]\r\n      interval: 30s\r\n      timeout: 1s\r\n      retries: 10\r\n    networks:\r\n      backend:\r\n        aliases:\r\n          - localstack\r\n    ports:\r\n      - 4566:4566\r\n    volumes:\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n      - type: bind\r\n        source: ./localstack/initaws.d\r\n        target: /docker-entrypoint-initaws.d\r\n        read_only: true\r\n    tmpfs:\r\n      - /tmp/localstack:exec,mode=600\r\n\r\nI tried it with localstack/localstack image, localstack/localstack-light, and even a fresh image from a git clone of the repo.\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2739", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2739/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2739/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2739/events", "html_url": "https://github.com/localstack/localstack/issues/2739", "id": 659316795, "node_id": "MDU6SXNzdWU2NTkzMTY3OTU=", "number": 2739, "title": "QLDB Cannot read document from table", "user": {"login": "A-R-Smith", "id": 20540571, "node_id": "MDQ6VXNlcjIwNTQwNTcx", "avatar_url": "https://avatars0.githubusercontent.com/u/20540571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/A-R-Smith", "html_url": "https://github.com/A-R-Smith", "followers_url": "https://api.github.com/users/A-R-Smith/followers", "following_url": "https://api.github.com/users/A-R-Smith/following{/other_user}", "gists_url": "https://api.github.com/users/A-R-Smith/gists{/gist_id}", "starred_url": "https://api.github.com/users/A-R-Smith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/A-R-Smith/subscriptions", "organizations_url": "https://api.github.com/users/A-R-Smith/orgs", "repos_url": "https://api.github.com/users/A-R-Smith/repos", "events_url": "https://api.github.com/users/A-R-Smith/events{/privacy}", "received_events_url": "https://api.github.com/users/A-R-Smith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-17T14:47:29Z", "updated_at": "2020-07-19T19:27:10Z", "closed_at": "2020-07-19T19:26:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nThanks for the fix on the [last](https://github.com/localstack/localstack/issues/2693) bug! But alas, the work never ends... here's another issue for you.\r\n\r\nInserting into a QLDB ledger table and reading a simple ION document in Localstack is working correctly. However, when I insert a slightly more complex ION document with a mix of data types, I am unable to read it back out of the table.\r\n\r\n## Expected behavior\r\n```\r\nqldbshell > insert into TEST `{id:\"d4fcbe9680784e9c8b526474df87a16f\",rate:5.00d-2,date1:2020-07-17T14:29:42.909Z,date2:2040-07-04T12:00:00.000Z,another_id:\"9d3cee8bf9ba4b9582999108d3cf83be\",third_id:\"82b5426afbdc4b58b209f4ecb7545198\",bool_col:false,nullable_col:null,small_number:1.06800d-5}`\r\nINFO:\r\n{\r\n documentId: \"F6qRFxiGUtt55OcuLBRiAx\"\r\n}\r\nINFO: (0.2390s)\r\nqldbshell > select * from TEST\r\nINFO:\r\n{\r\n id: \"d4fcbe9680784e9c8b526474df87a16f\",\r\n rate: 0.0500,\r\n date1: 2020-07-17T14:29:42.909Z,\r\n date2: 2040-07-04T12:00:00.000Z,\r\n another_id: \"9d3cee8bf9ba4b9582999108d3cf83be\",\r\n third_id: \"82b5426afbdc4b58b209f4ecb7545198\",\r\n bool_col: false,\r\n nullable_col: null,\r\n small_number: 0.0000106800\r\n}\r\nINFO: (0.3553s)\r\nqldbshell >\r\n```\r\n## Actual behavior\r\n```\r\nqldbshell > insert into TEST `{id:\"d4fcbe9680784e9c8b526474df87a16f\",rate:5.00d-2,date1:2020-07-17T14:29:42.909Z,date2:2040-07-04T12:00:00.000Z,another_id:\"9d3cee8bf9ba4b9582999108d3cf83be\",third_id:\"82b5426afbdc4b58b209f4ecb7545198\",bool_col:false,nullable_col:null,small_number:1.06800d-5}`\r\nINFO:\r\n{\r\n documentId: \"b8d2a610\"\r\n}\r\nINFO: (0.9860s)\r\nqldbshell > select * from TEST\r\nWARNING: OCC conflict or retriable exception occurred: An error occurred (500) when calling the SendCommand operation (reached max retries: 0):\r\nWARNING: OCC conflict or retriable exception occurred: An error occurred (500) when calling the SendCommand operation (reached max retries: 0):\r\nWARNING: OCC conflict or retriable exception occurred: An error occurred (500) when calling the SendCommand operation (reached max retries: 0):\r\nWARNING: OCC conflict or retriable exception occurred: An error occurred (500) when calling the SendCommand operation (reached max retries: 0):\r\nWARNING: OCC conflict or retriable exception occurred: An error occurred (500) when calling the SendCommand operation (reached max retries: 0):\r\nWARNING: Error while executing query: An error occurred (500) when calling the SendCommand operation (reached max retries: 0):\r\nINFO: (6.7645s)\r\nqldbshell >\r\n```\r\n# Steps to reproduce\r\n1) Start localstack with commands below\r\n2) Create the ledger with this command: `aws qldb create-ledger --name TEST --permissions-mode ALLOW_ALL --endpoint-url=http://localhost:4566`\r\n3) Connect to ledger with qldbshell: `qldbshell --ledger TEST -s=http://localhost:4566`\r\n4) Create a test table: `create table TEST`\r\n5) Insert a document:\r\n```\r\ninsert into TEST `{id:\"d4fcbe9680784e9c8b526474df87a16f\",rate:5.00d-2,date1:2020-07-17T14:29:42.909Z,date2:2040-07-04T12:00:00.000Z,another_id:\"9d3cee8bf9ba4b9582999108d3cf83be\",third_id:\"82b5426afbdc4b58b209f4ecb7545198\",bool_col:false,nullable_col:null,small_number:1.06800d-5}`\r\n```\r\n6) Try to read the document:\r\n```\r\nselect * from TEST\r\n```\r\n## Command used to start LocalStack\r\n\r\n`TMPDIR=/private$TMPDIR SERVICES=qldb PORT_WEB_UI=8082 docker-compose -f docker-compose.yml up -d`\r\nThe docker-compose is the standard one provided [here](https://github.com/localstack/localstack/blob/master/docker-compose.yml).\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2737", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2737/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2737/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2737/events", "html_url": "https://github.com/localstack/localstack/issues/2737", "id": 659219025, "node_id": "MDU6SXNzdWU2NTkyMTkwMjU=", "number": 2737, "title": "Cloudfront create distribution with custom JSON", "user": {"login": "MrDeLeTeD", "id": 778725, "node_id": "MDQ6VXNlcjc3ODcyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/778725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrDeLeTeD", "html_url": "https://github.com/MrDeLeTeD", "followers_url": "https://api.github.com/users/MrDeLeTeD/followers", "following_url": "https://api.github.com/users/MrDeLeTeD/following{/other_user}", "gists_url": "https://api.github.com/users/MrDeLeTeD/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrDeLeTeD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrDeLeTeD/subscriptions", "organizations_url": "https://api.github.com/users/MrDeLeTeD/orgs", "repos_url": "https://api.github.com/users/MrDeLeTeD/repos", "events_url": "https://api.github.com/users/MrDeLeTeD/events{/privacy}", "received_events_url": "https://api.github.com/users/MrDeLeTeD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-17T12:33:25Z", "updated_at": "2020-07-19T19:32:07Z", "closed_at": "2020-07-19T19:32:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\nHi,\r\ni have to create a distribution with S3 origin (if possible with private ACL).\r\n\r\nI have a 500 error while creating the distribution.\r\n\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nDistribution JSON: \r\n```\r\n{\r\n  \"Tags\": {\r\n    \"Items\": [\r\n      {\r\n        \"Key\": \"Name\",\r\n        \"Value\": \"SSGDistribution\"\r\n      },\r\n      {\r\n        \"Key\": \"Project\",\r\n        \"Value\": \"ssg-cf\"\r\n      }\r\n    ]\r\n  },\r\n  \"DistributionConfig\": {\r\n    \"CallerReference\": \"cli-example\",\r\n    \"Aliases\": {\r\n      \"Quantity\": 0\r\n    },\r\n    \"DefaultRootObject\": \"index.html\",\r\n    \"Origins\": {\r\n      \"Quantity\": 1,\r\n      \"Items\": [\r\n        {\r\n          \"Id\": \"ssg.s3.amazonaws.com-cli-example\",\r\n          \"DomainName\": \"ssg.s3.amazonaws.com\",\r\n          \"OriginPath\": \"\",\r\n          \"CustomHeaders\": {\r\n            \"Quantity\": 0\r\n          },\r\n          \"S3OriginConfig\": {\r\n            \"OriginAccessIdentity\": \"\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"OriginGroups\": {\r\n      \"Quantity\": 0\r\n    },\r\n    \"DefaultCacheBehavior\": {\r\n      \"TargetOriginId\": \"ssg.s3.amazonaws.com-cli-example\",\r\n      \"ForwardedValues\": {\r\n        \"QueryString\": false,\r\n        \"Cookies\": {\r\n          \"Forward\": \"none\"\r\n        },\r\n        \"Headers\": {\r\n          \"Quantity\": 0\r\n        },\r\n        \"QueryStringCacheKeys\": {\r\n          \"Quantity\": 0\r\n        }\r\n      },\r\n      \"TrustedSigners\": {\r\n        \"Enabled\": false,\r\n        \"Quantity\": 0\r\n      },\r\n      \"ViewerProtocolPolicy\": \"allow-all\",\r\n      \"MinTTL\": 0,\r\n      \"AllowedMethods\": {\r\n        \"Quantity\": 2,\r\n        \"Items\": [\r\n          \"HEAD\",\r\n          \"GET\"\r\n        ],\r\n        \"CachedMethods\": {\r\n          \"Quantity\": 2,\r\n          \"Items\": [\r\n            \"HEAD\",\r\n            \"GET\"\r\n          ]\r\n        }\r\n      },\r\n      \"SmoothStreaming\": false,\r\n      \"DefaultTTL\": 86400,\r\n      \"MaxTTL\": 31536000,\r\n      \"Compress\": false,\r\n      \"LambdaFunctionAssociations\": {\r\n        \"Quantity\": 0\r\n      },\r\n      \"FieldLevelEncryptionId\": \"\"\r\n    },\r\n    \"CacheBehaviors\": {\r\n      \"Quantity\": 0\r\n    },\r\n    \"CustomErrorResponses\": {\r\n      \"Quantity\": 0\r\n    },\r\n    \"Comment\": \"\",\r\n    \"Logging\": {\r\n      \"Enabled\": false,\r\n      \"IncludeCookies\": false,\r\n      \"Bucket\": \"\",\r\n      \"Prefix\": \"\"\r\n    },\r\n    \"PriceClass\": \"PriceClass_All\",\r\n    \"Enabled\": true,\r\n    \"ViewerCertificate\": {\r\n      \"CloudFrontDefaultCertificate\": true,\r\n      \"MinimumProtocolVersion\": \"TLSv1\",\r\n      \"CertificateSource\": \"cloudfront\"\r\n    },\r\n    \"Restrictions\": {\r\n      \"GeoRestriction\": {\r\n        \"RestrictionType\": \"none\",\r\n        \"Quantity\": 0\r\n      }\r\n    },\r\n    \"WebACLId\": \"\",\r\n    \"HttpVersion\": \"http2\",\r\n    \"IsIPV6Enabled\": true\r\n  }\r\n}\r\n```\r\n\r\nlocal command : \r\n```\r\nawslocal cloudfront create-distribution-with-tags --distribution-config-with-tags file://cloudfront.json\r\n```\r\n\r\nError log on docker : \r\n```\r\n2020-07-17T12:17:49:ERROR:cloudfront_api: Exception on /2019-03-26/distribution [POST]\r\nTraceback (most recent call last):\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 2447, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1952, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1821, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1950, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1936, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/localstack_ext/services/cloudfront/cloudfront_api.py\", line 77, in create_distribution\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/localstack_ext/services/cloudfront/cloudfront_api.py\", line 73, in fix_keys\r\nKeyError: 'Items'\r\n```\r\n\r\nCommand return : \r\n```\r\nAn error occurred (500) when calling the CreateDistributionWithTags operation (reached max retries: 4): Internal Server Error\r\n```\r\n## Expected behavior\r\n- Cloudfront distribution is created\r\n...\r\n\r\n## Actual behavior\r\n- Error on call, CF distribution is not created\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\ndocker-compose service description:\r\n```\r\nlocalstack:\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"53:53\"\r\n      - \"443:443\"\r\n      - \"4510-4520:4510-4520\"\r\n      - \"4566-4620:4566-4620\"\r\n      - \"8001:8080\"\r\n    environment:\r\n      - SERVICES=cloudfront,s3,edge,lambda\r\n      - DEBUG=1\r\n      #- DATA_DIR=/tmp/localstack/data\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY}\r\n      - DNS_LOCAL_NAME_PATTERNS='.*cloudfront\\.net'\r\n      - CLOUDFRONT_STATIC_PORTS= 1\r\n    volumes:\r\n      - \"./tmp/localstack:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2731", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2731/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2731/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2731/events", "html_url": "https://github.com/localstack/localstack/issues/2731", "id": 658262024, "node_id": "MDU6SXNzdWU2NTgyNjIwMjQ=", "number": 2731, "title": "Problems with spring cloud message attributes", "user": {"login": "vinicius-rosa-ifood", "id": 67985742, "node_id": "MDQ6VXNlcjY3OTg1NzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/67985742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinicius-rosa-ifood", "html_url": "https://github.com/vinicius-rosa-ifood", "followers_url": "https://api.github.com/users/vinicius-rosa-ifood/followers", "following_url": "https://api.github.com/users/vinicius-rosa-ifood/following{/other_user}", "gists_url": "https://api.github.com/users/vinicius-rosa-ifood/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinicius-rosa-ifood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinicius-rosa-ifood/subscriptions", "organizations_url": "https://api.github.com/users/vinicius-rosa-ifood/orgs", "repos_url": "https://api.github.com/users/vinicius-rosa-ifood/repos", "events_url": "https://api.github.com/users/vinicius-rosa-ifood/events{/privacy}", "received_events_url": "https://api.github.com/users/vinicius-rosa-ifood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-16T14:39:47Z", "updated_at": "2020-07-29T13:42:11Z", "closed_at": "2020-07-28T20:30:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nI'm trying to use the latest version, currently 0.11.3 with spring cloud and noticed that when it sends message attributes of type \"Number.java.lan.Long\", localstack returns an error. I was using version 0.11.2 and it works fine.\r\n\r\n## Expected behavior\r\n\r\nMessage successfully sent\r\n\r\n## Actual behavior\r\n\r\nAn error is returned with `The message attribute 'timestamp' has an invalid message attribute type, the set of supported type prefixes is Binary, Number, and String.` message.\r\n\r\n# Steps to reproduce\r\n1 -  Pull the latest version of localstack image(currently 0.11.3)\r\n2 - Run using docker compose \r\n2 - Create queue \r\n3 - Try to send a message with message attribute of type \"Number.java.lang.Long\"\r\n\r\n## Command used to start LocalStack\r\n\r\n**Docker compose file**\r\n```\r\nversion: \"3\"\r\nservices:\r\n  aws_local:\r\n    container_name: aws_local\r\n    image: \"localstack/localstack:latest\"\r\n    ports:\r\n      - \"4569-4584:4569-4584\"\r\n      - \"8081:8080\"\r\n    environment:\r\n      - AWS_CBOR_DISABLE=true\r\n      - SERVICES=s3,sns,sqs,dynamodb\r\n```\r\n\r\n```\r\ndocker-compose up -d\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```\r\naws --endpoint-url=http://localhost:4576 --region=us-east-1 sqs create-queue --queue-name \"MY_AWSOME_QUEUE\"\r\n\r\naws --endpoint-url=http://localhost:4576 \\\r\n--region=us-east-1 \\\r\nsqs send-message \\\r\n--queue-url \"http://localhost:4576/000000000000/MY_AWSOME_QUEUE\" \\\r\n--message-body \"{\\\"name\\\":test,\\\"uuid\\\":\\\"e890fc87-6627-4d1a-83bf-4fd2541719b3\\\"}\" \\\r\n--message-attributes '{ \"id\":{ \"DataType\":\"String\",\"StringValue\":\"d91bf94f-9191-3429-527c-58b90dc06b55\" }, \"contentType\":{ \"DataType\":\"String\",\"StringValue\":\"application/json\"}, \"timestamp\":{ \"DataType\":\"Number.java.lang.Long\",\"StringValue\":\"1594851603437\"}  }'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2728", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2728/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2728/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2728/events", "html_url": "https://github.com/localstack/localstack/issues/2728", "id": 657472413, "node_id": "MDU6SXNzdWU2NTc0NzI0MTM=", "number": 2728, "title": "HTTP/2 doesn't seem to work", "user": {"login": "laurst", "id": 44269292, "node_id": "MDQ6VXNlcjQ0MjY5Mjky", "avatar_url": "https://avatars0.githubusercontent.com/u/44269292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurst", "html_url": "https://github.com/laurst", "followers_url": "https://api.github.com/users/laurst/followers", "following_url": "https://api.github.com/users/laurst/following{/other_user}", "gists_url": "https://api.github.com/users/laurst/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurst/subscriptions", "organizations_url": "https://api.github.com/users/laurst/orgs", "repos_url": "https://api.github.com/users/laurst/repos", "events_url": "https://api.github.com/users/laurst/events{/privacy}", "received_events_url": "https://api.github.com/users/laurst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-15T16:06:56Z", "updated_at": "2020-07-22T23:52:24Z", "closed_at": "2020-07-22T23:52:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nI want to retrieve data using http2. My use case is to retrieve pre-signed s3 urls, but any GET request on endpoints of the form `/xxx/yyy` (made with curl) seem to fail with the error : \r\n```\r\ncurl: (92) HTTP/2 stream 0 was not closed cleanly: Unknown error code (err 1)\r\n```\r\nOther endpoints, like `/health` for instance, hang forever\r\n\r\n## Expected behavior\r\nIt is possible to GET resources, like s3 objects, using http2\r\n\r\n## Actual behavior\r\nCurl returns an error\r\n\r\n# Steps to reproduce\r\n* Run localstack (I'm using latest)\r\n* In a shell, run : \r\n```shell\r\ncurl --http2 http://localhost:4566/a/b\r\n```\r\n* Get an error\r\n\r\n## Command used to start LocalStack\r\n```\r\nlocalstack start\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2726", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2726/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2726/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2726/events", "html_url": "https://github.com/localstack/localstack/issues/2726", "id": 656940223, "node_id": "MDU6SXNzdWU2NTY5NDAyMjM=", "number": 2726, "title": "SSM labels are not supported", "user": {"login": "cscetbon", "id": 2619840, "node_id": "MDQ6VXNlcjI2MTk4NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2619840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cscetbon", "html_url": "https://github.com/cscetbon", "followers_url": "https://api.github.com/users/cscetbon/followers", "following_url": "https://api.github.com/users/cscetbon/following{/other_user}", "gists_url": "https://api.github.com/users/cscetbon/gists{/gist_id}", "starred_url": "https://api.github.com/users/cscetbon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cscetbon/subscriptions", "organizations_url": "https://api.github.com/users/cscetbon/orgs", "repos_url": "https://api.github.com/users/cscetbon/repos", "events_url": "https://api.github.com/users/cscetbon/events{/privacy}", "received_events_url": "https://api.github.com/users/cscetbon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-14T22:39:20Z", "updated_at": "2020-08-09T21:04:28Z", "closed_at": "2020-08-09T21:04:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request:\r\n\r\n[X ] bug report\r\n\r\n# Detailed description\r\nLabels can't be used in a search. SSM can't find the parameter I look for if I prefix it by `:label`\r\n...\r\n\r\n## Expected behavior\r\nreturns a parameter version that was labeled with the label used to look it up\r\n...\r\n\r\n## Actual behavior\r\nraises `ParameterNotFound` exception\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\ndocker run --rm -ti -e SERVICES=ssm -p 4583:4583 localstack/localstack\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n```\r\nimport boto3\r\n\r\nkey = \"/first/example\"\r\nssm = boto3.client('ssm', endpoint_url=\"http://127.0.0.1:4583\")\r\n\r\nssm.put_parameter(Name=key, Value='something-dev', Type='SecureString', Overwrite=True)\r\nssm.label_parameter_version(Name=key, ParameterVersion=1, Labels=['dev'])\r\nssm.put_parameter(Name=key, Value='something-prod', Type='SecureString', Overwrite=True)\r\nssm.label_parameter_version(Name=key, ParameterVersion=2, Labels=['prod'])\r\nssm.get_parameter(Name=key + \":prod\", WithDecryption=True)\r\n```\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2725", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2725/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2725/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2725/events", "html_url": "https://github.com/localstack/localstack/issues/2725", "id": 656935922, "node_id": "MDU6SXNzdWU2NTY5MzU5MjI=", "number": 2725, "title": "Appsync - VTL - TransactWriteItems not supported", "user": {"login": "ngouass", "id": 17073855, "node_id": "MDQ6VXNlcjE3MDczODU1", "avatar_url": "https://avatars2.githubusercontent.com/u/17073855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngouass", "html_url": "https://github.com/ngouass", "followers_url": "https://api.github.com/users/ngouass/followers", "following_url": "https://api.github.com/users/ngouass/following{/other_user}", "gists_url": "https://api.github.com/users/ngouass/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngouass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngouass/subscriptions", "organizations_url": "https://api.github.com/users/ngouass/orgs", "repos_url": "https://api.github.com/users/ngouass/repos", "events_url": "https://api.github.com/users/ngouass/events{/privacy}", "received_events_url": "https://api.github.com/users/ngouass/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 660698194, "node_id": "MDU6TGFiZWw2NjA2OTgxOTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/feature-missing", "name": "feature-missing", "color": "d4c5f9", "default": false, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-14T22:27:46Z", "updated_at": "2020-07-22T06:56:30Z", "closed_at": "2020-07-19T19:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nTrying to use a TransactWriteItems operation failed.\r\n```\r\nUnsupported AppSync DynamoDB template operation \\\"TransactWriteItems\\\"\r\n```\r\n\r\n### Query\r\n```\r\n#set($updatedAttributes = $ctx.args.item)\r\n#set($id = $util.autoId())\r\n\r\n#set($discard = $ctx.args.input.put(\"itemId\", $id))\r\n#set($discard = $updatedAttributes.put(\"status\", \"AVAILABLE\"))\r\n#set($discard = $updatedAttributes.put(\"createdAt\", $util.time.nowISO8601()))\r\n\r\n{\r\n  \"version\": \"2018-05-29\",\r\n  \"operation\": \"TransactWriteItems\",\r\n  \"transactItems\": [\r\n    {\r\n      \"table\": \"${subItemsTable}\",\r\n      \"operation\": \"PutItem\",\r\n      \"key\": {\r\n        \"PK\": $util.dynamodb.toDynamoDBJson(\"ITEM#$id\"),\r\n        \"SK\": $util.dynamodb.toDynamoDBJson(\"ITEM#$id\")\r\n      },\r\n      \"condition\": {\r\n        \"expression\": \"attribute_not_exists(PK)\"\r\n      },\r\n      \"attributeValues\": $util.dynamodb.toMapValuesJson($updatedAttributes)\r\n    },\r\n    {\r\n      \"table\": \"${subItemsTable}\",\r\n      \"operation\": \"UpdateItem\",\r\n      \"key\": {\r\n        \"PK\": $util.dynamodb.toDynamoDBJson(\"SHOP#$ctx.args.item.shopId\"),\r\n        \"SK\": $util.dynamodb.toDynamoDBJson(\"PROFILE#$ctx.args.item.shopId\")\r\n      },\r\n      \"update\" : {\r\n        \"expression\" : \"ADD #count :plusOne\",\r\n        \"expressionNames\" : {\r\n            \"#count\" : \"itemsCount\"\r\n        },\r\n        \"expressionValues\" : {\r\n            \":plusOne\" : { \"N\" : 1 }\r\n        }\r\n      },\r\n      \"condition\": {\r\n        \"expression\": \"attribute_exists(PK)\"\r\n      }\r\n    },\r\n    {\r\n      \"table\": \"${subItemsTable}\",\r\n      \"operation\": \"UpdateItem\",\r\n      \"key\": {\r\n        \"PK\": $util.dynamodb.toDynamoDBJson(\"SHOP#$ctx.args.item.shopId\"),\r\n        \"SK\": $util.dynamodb.toDynamoDBJson(\"CATEGORY#$ctx.args.item.category\")\r\n      },\r\n      \"update\": {\r\n        \"expression\" : \"SET category = :value ADD #count :plusOne\",\r\n        \"expressionNames\" : {\r\n            \"#count\" : \"itemsCount\",\r\n            \r\n        },\r\n        \"expressionValues\" : {\r\n            \":plusOne\" : { \"N\" : 1 },\r\n            \":value\" : { \"S\": \"$ctx.args.item.category\" }\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n## Expected behavior\r\nFirst operation should add a new item\r\nSecond operation should update the itemsCount on shop object\r\nThird Operation should add a new category item \r\n\r\n\r\n## Actual behavior\r\n```\r\n Unsupported AppSync DynamoDB template operation \\\"TransactWriteItems\\\"\r\n```\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n```\r\nversion: '2.1'\r\n\r\nservices:\r\n  localstack:\r\n    container_name: \"${LOCALSTACK_DOCKER_NAME-localstack_main}\"\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4566-4700:4566-4700\"\r\n      - \"443:443\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=serverless,cloudformation,dynamodb,iam,s3,appsync,edge\r\n      - DEBUG=1\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - HOST_TMP_FOLDER=${TMPDIR}\r\n      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY}\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2724", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2724/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2724/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2724/events", "html_url": "https://github.com/localstack/localstack/issues/2724", "id": 656909553, "node_id": "MDU6SXNzdWU2NTY5MDk1NTM=", "number": 2724, "title": "Localstack not returning correct error code when retreiving S3 files in DEEP_ARCHIVE storage class.", "user": {"login": "tcnleung", "id": 7810168, "node_id": "MDQ6VXNlcjc4MTAxNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7810168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcnleung", "html_url": "https://github.com/tcnleung", "followers_url": "https://api.github.com/users/tcnleung/followers", "following_url": "https://api.github.com/users/tcnleung/following{/other_user}", "gists_url": "https://api.github.com/users/tcnleung/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcnleung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcnleung/subscriptions", "organizations_url": "https://api.github.com/users/tcnleung/orgs", "repos_url": "https://api.github.com/users/tcnleung/repos", "events_url": "https://api.github.com/users/tcnleung/events{/privacy}", "received_events_url": "https://api.github.com/users/tcnleung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-14T21:27:17Z", "updated_at": "2020-08-07T12:46:30Z", "closed_at": "2020-08-07T12:46:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[X ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nWhen retrieving S3 files that are in the DEEP_ARCHIVE class, AWS S3 returns an InvalidObjectState error, but localstack allows the retrieval of the file.\r\n...\r\n\r\n## Expected behavior\r\nLocalstack should return InvalidObjectState error when retrieving S3 files in the DEEP_ARCHIVE storage class.\r\n...\r\n\r\n## Actual behavior\r\nLocalstack returns files in the DEEP_ARCHIVE storage class successfully.\r\n\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\ndocker run --rm -it \\\r\n-p 4566-4597:4566-4597 \\\r\n-e SERVICES=s3,iam,4566-4597 \\ \r\n localstack/loackstack.0.11.1.sh\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n# Set file to deep archived class\r\naws --endpoint-url=http://localhost:4566 s3 cp s3://somebucket/somefile s3://somebucket/somefile --storage-class=DEEP_ARCHIVE  \r\n\r\n# retrieve archved file\r\naws --endpoint-url=http://localhost:4566  s3api get-object --bucket somebucket --key somefile somefile\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2718", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2718/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2718/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2718/events", "html_url": "https://github.com/localstack/localstack/issues/2718", "id": 655499514, "node_id": "MDU6SXNzdWU2NTU0OTk1MTQ=", "number": 2718, "title": "AppSync - VTL - String Methods Not Supported", "user": {"login": "ngouass", "id": 17073855, "node_id": "MDQ6VXNlcjE3MDczODU1", "avatar_url": "https://avatars2.githubusercontent.com/u/17073855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngouass", "html_url": "https://github.com/ngouass", "followers_url": "https://api.github.com/users/ngouass/followers", "following_url": "https://api.github.com/users/ngouass/following{/other_user}", "gists_url": "https://api.github.com/users/ngouass/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngouass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngouass/subscriptions", "organizations_url": "https://api.github.com/users/ngouass/orgs", "repos_url": "https://api.github.com/users/ngouass/repos", "events_url": "https://api.github.com/users/ngouass/events{/privacy}", "received_events_url": "https://api.github.com/users/ngouass/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-12T23:43:03Z", "updated_at": "2020-07-13T21:25:07Z", "closed_at": "2020-07-13T18:11:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nTrying to use String methods returns null \r\n`#set($formattedShopName = \"${ctx.args.shop.shopName.trim().toLowerCase().replace(' ','-')}\")`\r\n\r\n\r\n## Expected behavior\r\n`For shopName = \" Apple Store \" // FormattedShopName = \"apple-store\"`\r\n\r\n\r\n## Actual behavior\r\n`For shopName = \" Apple Store \" // FormattedShopName = null`\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n```\r\nversion: '2.1'\r\n\r\nservices:\r\n  localstack:\r\n    container_name: \"${LOCALSTACK_DOCKER_NAME-localstack_main}\"\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4566-4700:4566-4700\"\r\n      - \"443:443\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=serverless,cloudformation,dynamodb,iam,s3,appsync,edge\r\n      - DEBUG=1\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - HOST_TMP_FOLDER=${TMPDIR}\r\n      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY}\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2717", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2717/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2717/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2717/events", "html_url": "https://github.com/localstack/localstack/issues/2717", "id": 655496853, "node_id": "MDU6SXNzdWU2NTU0OTY4NTM=", "number": 2717, "title": "AppSync - VTL - $util.time.nowISO8601() returns null", "user": {"login": "ngouass", "id": 17073855, "node_id": "MDQ6VXNlcjE3MDczODU1", "avatar_url": "https://avatars2.githubusercontent.com/u/17073855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngouass", "html_url": "https://github.com/ngouass", "followers_url": "https://api.github.com/users/ngouass/followers", "following_url": "https://api.github.com/users/ngouass/following{/other_user}", "gists_url": "https://api.github.com/users/ngouass/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngouass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngouass/subscriptions", "organizations_url": "https://api.github.com/users/ngouass/orgs", "repos_url": "https://api.github.com/users/ngouass/repos", "events_url": "https://api.github.com/users/ngouass/events{/privacy}", "received_events_url": "https://api.github.com/users/ngouass/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-12T23:25:32Z", "updated_at": "2020-07-13T21:24:55Z", "closed_at": "2020-07-13T18:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nTime Utils not working (I made the test only with $util.time.nowISO8601()) \r\n...\r\n\r\n## Expected behavior\r\n`$util.time.nowISO8601() should returns current date string: 2020-07-12T23:40:30.926Z`\r\n...\r\n\r\n## Actual behavior\r\n`$util.time.nowISO8601() return null`\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n```\r\nversion: '2.1'\r\n\r\nservices:\r\n  localstack:\r\n    container_name: \"${LOCALSTACK_DOCKER_NAME-localstack_main}\"\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4566-4700:4566-4700\"\r\n      - \"443:443\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=serverless,cloudformation,dynamodb,iam,s3,appsync,edge\r\n      - DEBUG=1\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - HOST_TMP_FOLDER=${TMPDIR}\r\n      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY}\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2714", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2714/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2714/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2714/events", "html_url": "https://github.com/localstack/localstack/issues/2714", "id": 655354017, "node_id": "MDU6SXNzdWU2NTUzNTQwMTc=", "number": 2714, "title": "Appsync - VTL - String Concatenation not supported", "user": {"login": "ngouass", "id": 17073855, "node_id": "MDQ6VXNlcjE3MDczODU1", "avatar_url": "https://avatars2.githubusercontent.com/u/17073855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngouass", "html_url": "https://github.com/ngouass", "followers_url": "https://api.github.com/users/ngouass/followers", "following_url": "https://api.github.com/users/ngouass/following{/other_user}", "gists_url": "https://api.github.com/users/ngouass/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngouass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngouass/subscriptions", "organizations_url": "https://api.github.com/users/ngouass/orgs", "repos_url": "https://api.github.com/users/ngouass/repos", "events_url": "https://api.github.com/users/ngouass/events{/privacy}", "received_events_url": "https://api.github.com/users/ngouass/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-07-12T08:12:23Z", "updated_at": "2020-07-13T21:24:09Z", "closed_at": "2020-07-13T18:09:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nVTL request containing an expression evaluated to String Concatenation does not work.\r\n\r\n### Query\r\n```\r\nmutation createShop {\r\n            createShop(shop: { shopName: \"Apple\" } ) {\r\n              shopName\r\n            }\r\n          }\r\n```\r\n\r\n### VTL Template (**Works when deploy to Appsync on AWS services**)\r\n```\r\n{\r\n  \"version\" : \"2018-05-29\",\r\n  \"operation\" : \"PutItem\",\r\n  \"key\" : {\r\n    \"PK\": $util.dynamodb.toDynamoDBJson(\"SHOP#${ctx.args.shop.shopName}\"),\r\n    \"SK\": $util.dynamodb.toDynamoDBJson(\"PROFILE#$ctx.args.shop.shopName\")\r\n  },\r\n  \"attributeValues\" : { \"shopName\": { \"S\": \"Apple\" }}\r\n}\r\n```\r\n\r\n## Expected behavior\r\n### Item stored in dynamodb \r\n```\r\n{\r\n            \"PK\": {\r\n                \"S\": \"SHOP#Apple\"\r\n            },\r\n            \"SK\": {\r\n                \"S\": \"PROFILE#Apple\"\r\n            },\r\n            \"shopName\": {\r\n                \"S\": \"Apple\"\r\n            }\r\n        }\r\n```\r\n\r\n\r\n## Actual behavior\r\n### Item stored in dynamodb \r\n```\r\n{\r\n            \"PK\": {\r\n                \"S\": \"SHOP#${ctx.args.shop.shopName}\"\r\n            },\r\n            \"SK\": {\r\n                \"S\": \"PROFILE#$ctx.args.shop.shopName\"\r\n            },\r\n            \"shopName\": {\r\n                \"S\": \"Apple\"\r\n            }\r\n        }\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\ndocker-compose\r\n````\r\nversion: '2.1'\r\n\r\nservices:\r\n  localstack:\r\n    container_name: \"${LOCALSTACK_DOCKER_NAME-localstack_main}\"\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4566-4700:4566-4700\"\r\n      - \"443:443\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=serverless,cloudformation,dynamodb,iam,s3,appsync,edge\r\n      - DEBUG=1\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - HOST_TMP_FOLDER=${TMPDIR}\r\n      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY}\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n````\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2710", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2710/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2710/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2710/events", "html_url": "https://github.com/localstack/localstack/issues/2710", "id": 654976895, "node_id": "MDU6SXNzdWU2NTQ5NzY4OTU=", "number": 2710, "title": "Can't queue multiple messages on SQS within a single message group", "user": {"login": "svenallers", "id": 7449886, "node_id": "MDQ6VXNlcjc0NDk4ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7449886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenallers", "html_url": "https://github.com/svenallers", "followers_url": "https://api.github.com/users/svenallers/followers", "following_url": "https://api.github.com/users/svenallers/following{/other_user}", "gists_url": "https://api.github.com/users/svenallers/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenallers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenallers/subscriptions", "organizations_url": "https://api.github.com/users/svenallers/orgs", "repos_url": "https://api.github.com/users/svenallers/repos", "events_url": "https://api.github.com/users/svenallers/events{/privacy}", "received_events_url": "https://api.github.com/users/svenallers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-07-10T18:59:18Z", "updated_at": "2020-07-21T11:43:50Z", "closed_at": "2020-07-21T11:43:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a bug report\r\n\r\n# Detailed description\r\nIt is not possible to queue multiple messages within a single message group when using a FIFO queue with Sqs. Instead one can only receive the first message every following message is ignored.\r\n\r\n## Expected behavior\r\nEvery message that is sent to a message group, should be received in order with calling `receive-message` on the SQS queue.\r\n\r\n## Actual behavior\r\nOnly the first message that is sent to the queue can be received every following message is ignored.\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n```\r\ndocker run --env SERVICES=\"dynamodb,kinesis,sqs\" --env TMPDIR=\"/tmp\" --name localstack --publish 4568:4568 --publish 4569:4569 --publish 8080:8080 --publish 4576:4576 --rm localstack/localstack:0.11.2\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n```\r\n% awslocal sqs create-queue --queue-name q2.fifo  --attributes \"FifoQueue=true\"\r\n{\r\n    \"QueueUrl\": \"http://localhost:4576/queue/q2.fifo\"\r\n}\r\n% awslocal sqs send-message --queue-url http://localhost:4576/queue/q2.fifo --message-group-id 123 --message-deduplication-id 1 --message-body e1\r\n{\r\n    \"MD5OfMessageBody\": \"cd3dc8b6cffb41e4163dcbd857ca87da\",\r\n    \"MessageId\": \"60cddfd2-f460-4fa6-9082-f7add868677c\"\r\n}\r\n% awslocal sqs send-message --queue-url http://localhost:4576/queue/q2.fifo --message-group-id 123 --message-deduplication-id 2 --message-body e2\r\n{\r\n    \"MD5OfMessageBody\": \"68a9e49bbc88c02083a062a78ab3bf30\",\r\n    \"MessageId\": \"b606e6a2-5e83-4c09-8041-f935d5ccc362\"\r\n}\r\n% awslocal sqs send-message --queue-url http://localhost:4576/queue/q2.fifo --message-group-id 123 --message-deduplication-id 3 --message-body e3\r\n{\r\n    \"MD5OfMessageBody\": \"7ed21b04c0dcde1c638e5c8480ad0026\",\r\n    \"MessageId\": \"a0795291-8174-43ca-84a0-208ea7ed95eb\"\r\n}\r\n% awslocal sqs receive-message --queue-url http://localhost:4576/queue/q2.fifo                                                                   \r\n{\r\n    \"Messages\": [\r\n        {\r\n            \"MessageId\": \"60cddfd2-f460-4fa6-9082-f7add868677c\",\r\n            \"ReceiptHandle\": \"60cddfd2-f460-4fa6-9082-f7add868677c#664c3d54-8363-49b7-9afe-aca4747250a9\",\r\n            \"MD5OfBody\": \"cd3dc8b6cffb41e4163dcbd857ca87da\",\r\n            \"Body\": \"e1\"\r\n        }\r\n    ]\r\n}\r\n% awslocal sqs receive-message --queue-url http://localhost:4576/queue/q2.fifo\r\n% awslocal sqs receive-message --queue-url http://localhost:4576/queue/q2.fifo\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2708", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2708/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2708/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2708/events", "html_url": "https://github.com/localstack/localstack/issues/2708", "id": 654539408, "node_id": "MDU6SXNzdWU2NTQ1Mzk0MDg=", "number": 2708, "title": "When no EC2 instance and SNS topic is created then how the Put metric alarm command Executed", "user": {"login": "uyadavv", "id": 67515639, "node_id": "MDQ6VXNlcjY3NTE1NjM5", "avatar_url": "https://avatars1.githubusercontent.com/u/67515639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uyadavv", "html_url": "https://github.com/uyadavv", "followers_url": "https://api.github.com/users/uyadavv/followers", "following_url": "https://api.github.com/users/uyadavv/following{/other_user}", "gists_url": "https://api.github.com/users/uyadavv/gists{/gist_id}", "starred_url": "https://api.github.com/users/uyadavv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uyadavv/subscriptions", "organizations_url": "https://api.github.com/users/uyadavv/orgs", "repos_url": "https://api.github.com/users/uyadavv/repos", "events_url": "https://api.github.com/users/uyadavv/events{/privacy}", "received_events_url": "https://api.github.com/users/uyadavv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888571, "node_id": "MDU6TGFiZWw0Njg4ODg1NzE=", "url": "https://api.github.com/repos/localstack/localstack/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 468888572, "node_id": "MDU6TGFiZWw0Njg4ODg1NzI=", "url": "https://api.github.com/repos/localstack/localstack/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-10T06:15:30Z", "updated_at": "2020-07-18T18:41:01Z", "closed_at": "2020-07-18T18:40:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n# Type of request: This is a bug\r\n\r\n\r\n\r\n# Detailed description\r\n\r\nI executed this command \"aws cloudwatch put-metric-alarm --alarm-name cpu-mon --alarm-description \"Alarm when CPU exceeds 70 percent\" --metric-name CPUUtilization --namespace AWS/EC2 --statistic Average --period 300 --threshold 70 --comparison-operator GreaterThanThreshold  --dimensions \"Name=InstanceId,Value=i-12345678\" --evaluation-periods 2 --alarm-actions arn:aws:sns:us-east-1:111122223333:MyTopic --unit Percent --endpoint-url=http://localhost:4566\" and there is no instance created nor sns topic then how this command executed successfully.\r\n...\r\n\r\n## Expected behavior\r\nCommand must not execute.\r\n...\r\n\r\n## Actual behavior\r\nCommand executed successfully.\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n1. Start the localstack.\r\n2. Execute these command in mentioned order:\r\na). aws cloudwatch put-metric-alarm --alarm-name cpu-mon --alarm-description \"Alarm when CPU exceeds 70 percent\" --metric-name CPUUtilization --namespace AWS/EC2 --statistic Average --period 300 --threshold 70 --comparison-operator GreaterThanThreshold  --dimensions \"Name=InstanceId,Value=i-12345678\" --evaluation-periods 2 --alarm-actions arn:aws:sns:us-east-1:111122223333:MyTopic --unit Percent --endpoint-url=http://localhost:4566 \r\nb). aws cloudwatch describe-alarms --alarm-names \"test-alarm-metric\" --endpoint-url=http://localhost:4566\r\n\r\n## Command used to start LocalStack\r\ndocker-compose up\r\n...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2707", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2707/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2707/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2707/events", "html_url": "https://github.com/localstack/localstack/issues/2707", "id": 654533496, "node_id": "MDU6SXNzdWU2NTQ1MzM0OTY=", "number": 2707, "title": "Request to describe alarms for Metrics fails", "user": {"login": "uyadavv", "id": 67515639, "node_id": "MDQ6VXNlcjY3NTE1NjM5", "avatar_url": "https://avatars1.githubusercontent.com/u/67515639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uyadavv", "html_url": "https://github.com/uyadavv", "followers_url": "https://api.github.com/users/uyadavv/followers", "following_url": "https://api.github.com/users/uyadavv/following{/other_user}", "gists_url": "https://api.github.com/users/uyadavv/gists{/gist_id}", "starred_url": "https://api.github.com/users/uyadavv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uyadavv/subscriptions", "organizations_url": "https://api.github.com/users/uyadavv/orgs", "repos_url": "https://api.github.com/users/uyadavv/repos", "events_url": "https://api.github.com/users/uyadavv/events{/privacy}", "received_events_url": "https://api.github.com/users/uyadavv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-10T06:00:32Z", "updated_at": "2020-07-19T22:53:04Z", "closed_at": "2020-07-19T22:53:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n# Type of request: This is a feature request\r\n\r\n\r\n\r\n# Detailed description\r\nI have executed this command: \r\n\" aws cloudwatch describe-alarms-for-metric --metric-name UsageMetrics --namespace NewPosts --endpoint-url=http://localhost:4566 \"and getting Error.\r\n--\r\n\r\n\r\n\"\r\n...\r\n\r\n## Expected behavior\r\nCommand must executed successfully.\r\n...\r\n\r\n## Actual behavior\r\nThe server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.\r\n\r\n\r\n# Steps to reproduce\r\n1. Start the LocalStack\r\n2. Execute the command in mentioned order:\r\naws cloudwatch put-metric-data --namespace \"UsageMetrics\" --metric-data file://metric.json --endpoint-url=http://localhost:4566\r\naws cloudwatch describe-alarms-for-metric --metric-name UsageMetrics --namespace NewPosts --endpoint-url=http://localhost:4566\r\n--\r\n\r\n\r\n\r\n## Command used to start LocalStack\r\ndocker-compose up\r\n...\r\n\r\n\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2706", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2706/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2706/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2706/events", "html_url": "https://github.com/localstack/localstack/issues/2706", "id": 654330372, "node_id": "MDU6SXNzdWU2NTQzMzAzNzI=", "number": 2706, "title": "0.11.3: Rejected promise does not fail lambda invocation", "user": {"login": "artamonovkirill", "id": 2599636, "node_id": "MDQ6VXNlcjI1OTk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2599636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artamonovkirill", "html_url": "https://github.com/artamonovkirill", "followers_url": "https://api.github.com/users/artamonovkirill/followers", "following_url": "https://api.github.com/users/artamonovkirill/following{/other_user}", "gists_url": "https://api.github.com/users/artamonovkirill/gists{/gist_id}", "starred_url": "https://api.github.com/users/artamonovkirill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artamonovkirill/subscriptions", "organizations_url": "https://api.github.com/users/artamonovkirill/orgs", "repos_url": "https://api.github.com/users/artamonovkirill/repos", "events_url": "https://api.github.com/users/artamonovkirill/events{/privacy}", "received_events_url": "https://api.github.com/users/artamonovkirill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-09T20:32:59Z", "updated_at": "2020-07-12T18:49:55Z", "closed_at": "2020-07-11T13:21:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\n0.11.3: Rejected promise does not fail lambda invocation.\r\nIn 0.11.2, the same steps failed the lambda invocation.\r\n\r\n## Expected behavior\r\n\r\nLambda invocation fails.\r\n\r\n## Actual behavior\r\n\r\nLambda invocation succeeds.\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\nStarted via TestContainers: https://github.com/artamonovkirill/localstack-lambda/blob/master/src/test/groovy/LocalStack.groovy\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nAWS SDK 2 for Java: `lambda.invoke { it.functionName('lambda') }`\r\n\r\nA complete example can be found here: https://github.com/artamonovkirill/localstack-lambda/blob/master/src/test/groovy/LambdaSpec.groovy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2705", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2705/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2705/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2705/events", "html_url": "https://github.com/localstack/localstack/issues/2705", "id": 654183171, "node_id": "MDU6SXNzdWU2NTQxODMxNzE=", "number": 2705, "title": "SQS FIFO queue. The request include parameter that is not valid for this queue type", "user": {"login": "RuslanKharevych", "id": 31544614, "node_id": "MDQ6VXNlcjMxNTQ0NjE0", "avatar_url": "https://avatars1.githubusercontent.com/u/31544614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RuslanKharevych", "html_url": "https://github.com/RuslanKharevych", "followers_url": "https://api.github.com/users/RuslanKharevych/followers", "following_url": "https://api.github.com/users/RuslanKharevych/following{/other_user}", "gists_url": "https://api.github.com/users/RuslanKharevych/gists{/gist_id}", "starred_url": "https://api.github.com/users/RuslanKharevych/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RuslanKharevych/subscriptions", "organizations_url": "https://api.github.com/users/RuslanKharevych/orgs", "repos_url": "https://api.github.com/users/RuslanKharevych/repos", "events_url": "https://api.github.com/users/RuslanKharevych/events{/privacy}", "received_events_url": "https://api.github.com/users/RuslanKharevych/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-09T16:11:36Z", "updated_at": "2020-07-15T11:08:13Z", "closed_at": "2020-07-11T11:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use TestContainers with LocalStack for integration testing. But i can not send message to fifo queue.\r\n`Nested exception is software.amazon.awssdk.services.sqs.model.SqsException: Value group-1 for parameter MessageGroupId is invalid. The request include parameter that is not valid for this queue type.`\r\n\r\nCreating of fifo queue:\r\n``` \r\nsqsClient.createQueue(CreateQueueRequest.builder()\r\n                .queueName(\"test.fifo\")\r\n                .attributes(Map.of(\r\n                        QueueAttributeName.CONTENT_BASED_DEDUPLICATION, \"true\",\r\n                        QueueAttributeName.FIFO_QUEUE, \"true\"\r\n                ))\r\n                .build());\r\n```\r\n\r\nSending of message:\r\n``` \r\nSendMessageRequest sendMessageRequest = SendMessageRequest.builder()\r\n                    .queueUrl(changeLogQueueUrl)\r\n                    .messageBody(objectMapper.writeValueAsString(event))\r\n                    .messageGroupId(groupId))\r\n                    .messageDeduplicationId(event.getUuid())\r\n                    .build();\r\nsqsClient.sendMessage(sendMessageRequest);\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2703", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2703/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2703/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2703/events", "html_url": "https://github.com/localstack/localstack/issues/2703", "id": 653978381, "node_id": "MDU6SXNzdWU2NTM5NzgzODE=", "number": 2703, "title": "API requests to edge router failing", "user": {"login": "sndrsnk", "id": 3224135, "node_id": "MDQ6VXNlcjMyMjQxMzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3224135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sndrsnk", "html_url": "https://github.com/sndrsnk", "followers_url": "https://api.github.com/users/sndrsnk/followers", "following_url": "https://api.github.com/users/sndrsnk/following{/other_user}", "gists_url": "https://api.github.com/users/sndrsnk/gists{/gist_id}", "starred_url": "https://api.github.com/users/sndrsnk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sndrsnk/subscriptions", "organizations_url": "https://api.github.com/users/sndrsnk/orgs", "repos_url": "https://api.github.com/users/sndrsnk/repos", "events_url": "https://api.github.com/users/sndrsnk/events{/privacy}", "received_events_url": "https://api.github.com/users/sndrsnk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888569, "node_id": "MDU6TGFiZWw0Njg4ODg1Njk=", "url": "https://api.github.com/repos/localstack/localstack/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}, {"id": 939237530, "node_id": "MDU6TGFiZWw5MzkyMzc1MzA=", "url": "https://api.github.com/repos/localstack/localstack/labels/usage", "name": "usage", "color": "0074b7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-09T11:14:46Z", "updated_at": "2020-07-19T23:04:00Z", "closed_at": "2020-07-19T23:03:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Bug Report\r\n\r\n# Detailed description\r\nI'm using serverless to create some lambdas that can be triggered via API calls, and I use serverless-localstack (with LocalStack set up as a separate container via (docker-compose.yml) to which I'm deploying my stack. \r\n\r\nHowever, when I make a simple cURL request to `http://localhost:4566/hello` from the host I receive the following error: \r\n\r\n```nohighlight\r\n2020-07-09T10:42:13:INFO:localstack.services.edge: Unable to find forwarding rule for host \"localhost:4566\", path \"/hello\", target header \"\", auth header \"\", data \"b''\"\r\n```\r\n\r\nResponse: `{\"status\": \"running\"}`. \r\n\r\nIt works as intended when I make the same request directly to `http://localhost:4567/restapis/g2grzvpfhe/local/_user_request_/hello`. \r\n\r\n## Expected behavior\r\nI expect to see API response data from calling `http://localhost:4566/hello` directly. \r\n\r\n## Actual behavior\r\nI receive a `{\"status\": \"running\"}` response with the above error reported in the Docker logs. \r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n`./node_modules/serverless/bin/serverless.js invoke -s local -f LambdaTest -p ./tests/resources/base_event.yml`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nN/A\r\n\r\nNote: I'm using docker image `localstack/localstack:latest`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2702", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2702/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2702/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2702/events", "html_url": "https://github.com/localstack/localstack/issues/2702", "id": 653836028, "node_id": "MDU6SXNzdWU2NTM4MzYwMjg=", "number": 2702, "title": "dynamodb delete-table fails", "user": {"login": "moritzzimmer", "id": 1858685, "node_id": "MDQ6VXNlcjE4NTg2ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1858685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moritzzimmer", "html_url": "https://github.com/moritzzimmer", "followers_url": "https://api.github.com/users/moritzzimmer/followers", "following_url": "https://api.github.com/users/moritzzimmer/following{/other_user}", "gists_url": "https://api.github.com/users/moritzzimmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/moritzzimmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moritzzimmer/subscriptions", "organizations_url": "https://api.github.com/users/moritzzimmer/orgs", "repos_url": "https://api.github.com/users/moritzzimmer/repos", "events_url": "https://api.github.com/users/moritzzimmer/events{/privacy}", "received_events_url": "https://api.github.com/users/moritzzimmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-09T07:36:42Z", "updated_at": "2020-07-25T10:15:34Z", "closed_at": "2020-07-25T10:15:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nDeletion of an existing table fails with an error when using `localstack/localstack-light` although the table is deleted. This behavior occurred using the aws cli (`aws-cli/2.0.26 Python/3.8.3 Darwin/19.5.0 botocore/2.0.0dev30`) as well as in Java unit tests using `testcontainers`.\r\n\r\n## Expected behavior\r\n\r\nExisting table is deleted without error.\r\n\r\n## Actual behavior\r\n\r\nDeleting the table fails with\r\n\r\n```\r\nAn error occurred (ResourceNotFoundException) when calling the DeleteTable operation: Cannot do operations on a non-existent table\r\n```\r\n\r\non the command line. Although the table is actually deleted.\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n```\r\ndocker run --rm -p 4566:4566 --env SERVICES=dynamodb localstack/localstack-light\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\ncreate table\r\n\r\n```\r\naws dynamodb create-table --table-name MusicCollection --attribute-definitions AttributeName=Artist,AttributeType=S AttributeName=SongTitle,AttributeType=S --key-schema AttributeName=Artist,KeyType=HASH AttributeName=SongTitle,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 --endpoint-url http://localhost:4566\r\n```\r\n\r\nverify\r\n\r\n```\r\naws dynamodb list-tables --endpoint-url http://localhost:4566\r\n\r\n{\r\n    \"TableNames\": [\r\n        \"MusicCollection\"\r\n    ]\r\n}\r\n(END)\r\n```\r\n\r\nand try to delete\r\n\r\n```\r\naws dynamodb delete-table --table-name MusicCollection --endpoint-url http://localhost:4566\r\n\r\nAn error occurred (ResourceNotFoundException) when calling the DeleteTable operation: Cannot do operations on a non-existent table\r\n```\r\n\r\ncheck again\r\n\r\n```\r\naws dynamodb list-tables --endpoint-url http://localhost:4566\r\n\r\n{\r\n    \"TableNames\": []\r\n}\r\n(END)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2699", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2699/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2699/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2699/events", "html_url": "https://github.com/localstack/localstack/issues/2699", "id": 653143457, "node_id": "MDU6SXNzdWU2NTMxNDM0NTc=", "number": 2699, "title": "LocalStack: CloudFormation", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1545310297, "node_id": "MDU6TGFiZWwxNTQ1MzEwMjk3", "url": "https://api.github.com/repos/localstack/localstack/labels/cloudformation", "name": "cloudformation", "color": "b9eef7", "default": false, "description": ""}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-08T09:33:45Z", "updated_at": "2020-07-29T15:41:25Z", "closed_at": "2020-07-28T22:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "@whummer  \r\n\r\nI am trying to list the stack resource but unable to do it. It is giving me the error. \r\n\r\nCommand used: \r\n aws cloudformation list-stack-resources --stack-name examplestack1 --endpoint-url=http://localhost:443\r\n\r\nScreenshot \r\n![list stack resource](https://user-images.githubusercontent.com/65276850/86902841-20b9f100-c12c-11ea-9c98-f67cb7ef8ab6.PNG)\r\n\r\nError: Unable to parse response (syntax error: line 1, column 54), invalid XML received. Further retries may succeed:\r\nb'<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n'\r\n\r\n@whummer please help\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2698", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2698/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2698/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2698/events", "html_url": "https://github.com/localstack/localstack/issues/2698", "id": 653133474, "node_id": "MDU6SXNzdWU2NTMxMzM0NzQ=", "number": 2698, "title": "LocalStack: Cloudformation- Issue", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1545310297, "node_id": "MDU6TGFiZWwxNTQ1MzEwMjk3", "url": "https://api.github.com/repos/localstack/localstack/labels/cloudformation", "name": "cloudformation", "color": "b9eef7", "default": false, "description": ""}, {"id": 798260296, "node_id": "MDU6TGFiZWw3OTgyNjAyOTY=", "url": "https://api.github.com/repos/localstack/localstack/labels/diverges-from-aws", "name": "diverges-from-aws", "color": "34b5ba", "default": false, "description": null}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-07-08T09:18:32Z", "updated_at": "2020-08-12T20:56:56Z", "closed_at": "2020-08-12T20:56:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to list the stack with filter condition.\r\nCommand Used:  aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE --endpoint-url=http://localhost:443\r\n\r\nError: It is showing all the stack which are in progress state. The filter condition is not working fine.\r\nPlease find the screenshot attached.\r\n![Error](https://user-images.githubusercontent.com/65276850/86901295-0bdc5e00-c12a-11ea-9a28-eb776e1da118.PNG)\r\n\r\n@whummer  Can you please look into this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2697", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2697/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2697/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2697/events", "html_url": "https://github.com/localstack/localstack/issues/2697", "id": 653091785, "node_id": "MDU6SXNzdWU2NTMwOTE3ODU=", "number": 2697, "title": "LocalStack: CloudFormation", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1545310297, "node_id": "MDU6TGFiZWwxNTQ1MzEwMjk3", "url": "https://api.github.com/repos/localstack/localstack/labels/cloudformation", "name": "cloudformation", "color": "b9eef7", "default": false, "description": ""}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-07-08T08:18:35Z", "updated_at": "2020-08-12T20:58:18Z", "closed_at": "2020-08-12T20:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to delete my stack with the below command but unable to it.\r\n\r\nCommand:\r\n aws cloudformation delete-stack --stack-name examplestack1 --endpoint-url=http://localhost:443\r\n\r\nError:\r\nUnable to parse response (not well-formed (invalid token): line 1, column 0), invalid XML received. Further retries may succeed:\r\nb'{}'\r\n\r\n@whummer  Can you please look into this. The stack which I created is in \"CREATE_IN_PROGRESS\" status and the status is not changing. I have raised an issue for the same. For reference please refer link https://github.com/localstack/localstack/issues/2696\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2693", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2693/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2693/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2693/events", "html_url": "https://github.com/localstack/localstack/issues/2693", "id": 652369704, "node_id": "MDU6SXNzdWU2NTIzNjk3MDQ=", "number": 2693, "title": "QLDB Document insert does not return expected result", "user": {"login": "A-R-Smith", "id": 20540571, "node_id": "MDQ6VXNlcjIwNTQwNTcx", "avatar_url": "https://avatars0.githubusercontent.com/u/20540571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/A-R-Smith", "html_url": "https://github.com/A-R-Smith", "followers_url": "https://api.github.com/users/A-R-Smith/followers", "following_url": "https://api.github.com/users/A-R-Smith/following{/other_user}", "gists_url": "https://api.github.com/users/A-R-Smith/gists{/gist_id}", "starred_url": "https://api.github.com/users/A-R-Smith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/A-R-Smith/subscriptions", "organizations_url": "https://api.github.com/users/A-R-Smith/orgs", "repos_url": "https://api.github.com/users/A-R-Smith/repos", "events_url": "https://api.github.com/users/A-R-Smith/events{/privacy}", "received_events_url": "https://api.github.com/users/A-R-Smith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 798260296, "node_id": "MDU6TGFiZWw3OTgyNjAyOTY=", "url": "https://api.github.com/repos/localstack/localstack/labels/diverges-from-aws", "name": "diverges-from-aws", "color": "34b5ba", "default": false, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-07T14:27:09Z", "updated_at": "2020-07-11T09:21:00Z", "closed_at": "2020-07-11T09:20:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nThere is a difference in what is returned from transactions and commands against a table in a QLDB ledger in AWS vs in Localstack.\r\n\r\n## Expected behavior\r\nWhen inserting a document in AWS QLDB, the transaction returns an Amazon Ion value containing the created documentId.\r\nFrom the qldbshell connected to a QLDB ledger in AWS:\r\n```\r\nqldbshell > insert into TEST `{\"hello\":\"world\"}`\r\nINFO:\r\n{\r\n documentId: \"BabQrIORS5W0XOKhoASZAM\"\r\n}\r\nINFO: (0.2968s)\r\n```\r\n\r\n## Actual behavior\r\nWhen inserting a document in Localstack QLDB, the transaction returns an Amazon Ion value containing the document data that was inserted, NOT the documentId.\r\nFrom the qldbshell connected to a QLDB ledger in Localstack:\r\n```\r\nqldbshell > insert into TEST `{\"hello\":\"world\"}`\r\nINFO:\r\n{\r\n hello: \"world\"\r\n}\r\nINFO: (1.4246s)\r\n```\r\n# Steps to reproduce\r\n1) Start localstack with commands below\r\n2) Create the ledger with this command: `aws qldb create-ledger --name TEST --permissions-mode ALLOW_ALL --endpoint-url=http://localhost:4566`\r\n3) Connect to ledger with qldbshell: `qldbshell --ledger TEST -s=http://localhost:4566`\r\n4) Create a test table: `create table TEST`\r\n5) Try to insert a simple document: \r\n```\r\ninsert into TEST `{\"hello\":\"world\"}`\r\n``` \r\n## Command used to start LocalStack\r\n`TMPDIR=/private$TMPDIR SERVICES=qldb PORT_WEB_UI=8082 docker-compose -f docker-compose.yml up -d`\r\nThe docker-compose is the standard one provided [here](https://github.com/localstack/localstack/blob/master/docker-compose.yml).\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2692", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2692/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2692/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2692/events", "html_url": "https://github.com/localstack/localstack/issues/2692", "id": 652366934, "node_id": "MDU6SXNzdWU2NTIzNjY5MzQ=", "number": 2692, "title": "Not able to SSH the created EC2 instance", "user": {"login": "uyadavv", "id": 67515639, "node_id": "MDQ6VXNlcjY3NTE1NjM5", "avatar_url": "https://avatars1.githubusercontent.com/u/67515639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uyadavv", "html_url": "https://github.com/uyadavv", "followers_url": "https://api.github.com/users/uyadavv/followers", "following_url": "https://api.github.com/users/uyadavv/following{/other_user}", "gists_url": "https://api.github.com/users/uyadavv/gists{/gist_id}", "starred_url": "https://api.github.com/users/uyadavv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uyadavv/subscriptions", "organizations_url": "https://api.github.com/users/uyadavv/orgs", "repos_url": "https://api.github.com/users/uyadavv/repos", "events_url": "https://api.github.com/users/uyadavv/events{/privacy}", "received_events_url": "https://api.github.com/users/uyadavv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T14:23:32Z", "updated_at": "2020-08-02T20:40:32Z", "closed_at": "2020-08-02T20:40:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n# Type of request: This is a bug\r\n\r\n\r\n# Detailed description\r\nI am trying to ssh using this command:\r\nssh -i \"MyKeyPair.pem\" ec2-user@54.214.9.166 --endpoint-url=http://localhost:4597 get this error\r\n\"ssh: connect to host 54.214.9.166 port 22: Connection timed out\"\r\n\r\n\r\n\r\n--\r\n\r\n\r\n\r\nI \r\n\r\n## Expected behavior\r\nMust be able to ssh the created EC2 Instance\r\n...\r\n\r\n## Actual behavior\r\nGetting Error while SSH\r\n\"ssh: connect to host 54.214.9.166 port 22: Connection timed out\"\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n1. Created EC2 Instance using this command:\r\naws --endpoint-url=http://localhost:4597 ec2 run-instances --image-id ami-09d95fab7fff3776c --count 1 --instance-type t2.micro --key-name C:/Users/Desktop/testing.pem --security-group-ids sg-2d25eb0w\r\n\r\n2. Now try to ssh using this command:\r\nssh -i \"MyKeyPair.pem\" ec2-user@54.214.9.166 --endpoint-url=http://localhost:4597\r\n\r\n## Command used to start LocalStack\r\ndocker-compose up\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2691", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2691/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2691/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2691/events", "html_url": "https://github.com/localstack/localstack/issues/2691", "id": 652324198, "node_id": "MDU6SXNzdWU2NTIzMjQxOTg=", "number": 2691, "title": "LocalStack: RDS", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-07T13:29:13Z", "updated_at": "2020-07-22T06:21:50Z", "closed_at": "2020-07-13T20:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to write data from s3 to table at postgre1\r\n\r\nI am attaching the script here which I am using. \r\n\r\nError:\r\npsycopg2.errors.UndefinedFile: could not open file \"s3://personbucket/sample.txt\" for reading: No such file or directory\r\nHINT:  COPY FROM instructs the PostgreSQL server process to read a file. You may want a client-side facility such as psql's \\copy.\r\n\r\nscript I am using:\r\n\r\n```\r\nimport os\r\nimport boto3\r\nimport psycopg2\r\nimport subprocess\r\n\r\nRDS_ENDPOINT = os.environ.get('RDS_ENDPOINT') or 'http://localhost:443'\r\n\r\n#def subprocess_cmd(cmd):\r\n\r\n    \r\n    #command_output = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\r\n    #stdout, stderr = command_output.communicate()\r\n    #if command_output.returncode == 0:\r\n        #print(command_output.returncode)\r\n        #print(\"Command is executed successfully\")\r\n    #else:\r\n        #print(command_output.returncode)\r\n        #print(\"Error: Command error- Please check the table and function name if already created\")\r\n        #exit(0)\r\n\r\n\r\ndef run_queries(instance):\r\n    print('Run DB queries against RDS instance %s' % instance['DBInstanceIdentifier'])\r\n    port = instance['Endpoint']['Port']\r\n    conn = psycopg2.connect(\"dbname=test user=test password='test' host=localhost port=%s\" % port)\r\n    with conn.cursor() as cur:\r\n        cur.execute('CREATE TABLE person (\"id\" INTEGER, \"name\" VARCHAR not null, PRIMARY KEY (\"id\"))')\r\n        print(\"creation of table finishes\")\r\n        cur.execute(\"copy person from 's3://personbucket/sample.txt'\")\r\n    \r\n    with conn.cursor() as cur:\r\n        cur.execute(\"SELECT * FROM person\")\r\n        result = cur.fetchall()\r\n        print(result)\r\n\r\n#def copys3file():\r\n    #print(\"copy statement\")\r\n    #cmd1='aws s3 cp file://sample.txt s3://personbucket/ --endpoint-url=http://localhost:443'\r\n    #subprocess_cmd(cmd1)\r\n\r\n\r\ndef create_db():\r\n    print('Creating RDS DB instance')\r\n    client = connect_rds()\r\n    instance = client.create_db_instance(Engine='postgres', DBInstanceClass='c1', DBInstanceIdentifier='i1')\r\n    return instance['DBInstance']\r\n    \r\ndef connect_rds():\r\n    return boto3.client('rds', endpoint_url=RDS_ENDPOINT)\r\n\r\ndef main():\r\n    instance = create_db()\r\n    #copys3file()\r\n    run_queries(instance)\r\n    delete_db(instance)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2690", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2690/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2690/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2690/events", "html_url": "https://github.com/localstack/localstack/issues/2690", "id": 652311017, "node_id": "MDU6SXNzdWU2NTIzMTEwMTc=", "number": 2690, "title": "SQS Action TagQueue is not working with moto as provider", "user": {"login": "friscoMad", "id": 487098, "node_id": "MDQ6VXNlcjQ4NzA5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/487098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/friscoMad", "html_url": "https://github.com/friscoMad", "followers_url": "https://api.github.com/users/friscoMad/followers", "following_url": "https://api.github.com/users/friscoMad/following{/other_user}", "gists_url": "https://api.github.com/users/friscoMad/gists{/gist_id}", "starred_url": "https://api.github.com/users/friscoMad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/friscoMad/subscriptions", "organizations_url": "https://api.github.com/users/friscoMad/orgs", "repos_url": "https://api.github.com/users/friscoMad/repos", "events_url": "https://api.github.com/users/friscoMad/events{/privacy}", "received_events_url": "https://api.github.com/users/friscoMad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-07T13:12:00Z", "updated_at": "2020-07-13T20:27:58Z", "closed_at": "2020-07-13T20:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nAfter updating to the latest version we did found that our code was not working anymore as calls to tag queues in SQS were returning with error 400:\r\n```\r\ncom.amazonaws.services.sqs.model.AmazonSQSException: null (Service: AmazonSQS; Status Code: 400; Error Code: 400 ; Request ID: null)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1742)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleServiceErrorResponse(AmazonHttpClient.java:1371)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1347)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1127)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:784)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:752)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:726)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:686)\r\n\tat com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:668)\r\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:532)\r\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:512)\r\n\tat com.amazonaws.services.sqs.AmazonSQSClient.doInvoke(AmazonSQSClient.java:2207)\r\n\tat com.amazonaws.services.sqs.AmazonSQSClient.invoke(AmazonSQSClient.java:2174)\r\n\tat com.amazonaws.services.sqs.AmazonSQSClient.invoke(AmazonSQSClient.java:2163)\r\n\tat com.amazonaws.services.sqs.AmazonSQSClient.executeTagQueue(AmazonSQSClient.java:2052)\r\n\tat com.amazonaws.services.sqs.AmazonSQSClient.tagQueue(AmazonSQSClient.java:2024)\r\n\tat com.amazonaws.services.sqs.AmazonSQSClient.tagQueue(AmazonSQSClient.java:2064)\r\n\tat com.returnly.core.sqs.SQSClient.createQueue(SQSClient.kt:234)\r\n\tat com.returnly.core.sqs.SQSClient.findOrCreateQueue(SQSClient.kt:212)\r\n\tat com.returnly.core.sqs.SQSClient.resolveQueues(SQSClient.kt:187)\r\n```\r\n\r\nAs this was working in 0.10.9 I did review the changes and found that #2005 did delegate the command in favor of _elasticmq_ native command but later on #2595 the default backend changed in favor of _moto_. I was unable to confirm if moto does properly support the command or if some patching is needed but I can confirm that using **SQS_PROVIDER=elasticmq** does fix the issue.\r\n\r\n## Expected behavior\r\nTagQueue action does work or at least returns 200 without doing anything.\r\n\r\n## Actual behavior\r\nTagQueue action fails with 400\r\n\r\n# Steps to reproduce\r\n\r\nTag any queue.\r\n\r\n## Command used to start LocalStack\r\n\r\ndocker run -dti -p 4566:4566 -p 4576:4576 localstack/localstack:0.11.3\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```\r\n                val tags = mapOf(\"foo:env\" to runtime.env.lcName, \"foo:creator\" to runtime.name)\r\n                log.info(\"Tagging $it with $tags\")\r\n                sqs.tagQueue(it, tags)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2686", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2686/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2686/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2686/events", "html_url": "https://github.com/localstack/localstack/issues/2686", "id": 651823098, "node_id": "MDU6SXNzdWU2NTE4MjMwOTg=", "number": 2686, "title": "DynamoDb Empty Response", "user": {"login": "triplejay2013", "id": 22566218, "node_id": "MDQ6VXNlcjIyNTY2MjE4", "avatar_url": "https://avatars2.githubusercontent.com/u/22566218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/triplejay2013", "html_url": "https://github.com/triplejay2013", "followers_url": "https://api.github.com/users/triplejay2013/followers", "following_url": "https://api.github.com/users/triplejay2013/following{/other_user}", "gists_url": "https://api.github.com/users/triplejay2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/triplejay2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/triplejay2013/subscriptions", "organizations_url": "https://api.github.com/users/triplejay2013/orgs", "repos_url": "https://api.github.com/users/triplejay2013/repos", "events_url": "https://api.github.com/users/triplejay2013/events{/privacy}", "received_events_url": "https://api.github.com/users/triplejay2013/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-06T21:14:35Z", "updated_at": "2020-07-22T13:32:09Z", "closed_at": "2020-07-22T13:32:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[ x ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nTerraform versions:\r\n- terraform v0.12.28\r\n- aws v2.68.0\r\n\r\nLocalstack v0.11.0\r\n\r\n## Expected behavior\r\n\r\nWhen a table already exists, and I attempt to create it (in AWS), I get the following response\r\n```\r\n{\"__type\":\"com.amazonaws.dynamodb.v20120810#ResourceInUseException\",\"message\":\"Table already exists: thetable\"}\r\n```\r\n\r\n## Actual behavior\r\n\r\nWhen I try to do the same with Localstack, I get nothing (Empty Response). This has been the cause of quite a few issues( [this bug](https://github.com/terraform-providers/terraform-provider-aws/issues/14019) and [this resolution](https://github.com/terraform-providers/terraform-provider-aws/pull/13925/files) are what lead me to discover this issue)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2684", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2684/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2684/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2684/events", "html_url": "https://github.com/localstack/localstack/issues/2684", "id": 651788280, "node_id": "MDU6SXNzdWU2NTE3ODgyODA=", "number": 2684, "title": "DynamoDB stream triggered with MODIFY event instead of INSERT when using UpdateItem for new item", "user": {"login": "mariaines", "id": 1000661, "node_id": "MDQ6VXNlcjEwMDA2NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1000661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariaines", "html_url": "https://github.com/mariaines", "followers_url": "https://api.github.com/users/mariaines/followers", "following_url": "https://api.github.com/users/mariaines/following{/other_user}", "gists_url": "https://api.github.com/users/mariaines/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariaines/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariaines/subscriptions", "organizations_url": "https://api.github.com/users/mariaines/orgs", "repos_url": "https://api.github.com/users/mariaines/repos", "events_url": "https://api.github.com/users/mariaines/events{/privacy}", "received_events_url": "https://api.github.com/users/mariaines/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ninhkd", "id": 1632598, "node_id": "MDQ6VXNlcjE2MzI1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1632598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninhkd", "html_url": "https://github.com/ninhkd", "followers_url": "https://api.github.com/users/ninhkd/followers", "following_url": "https://api.github.com/users/ninhkd/following{/other_user}", "gists_url": "https://api.github.com/users/ninhkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninhkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninhkd/subscriptions", "organizations_url": "https://api.github.com/users/ninhkd/orgs", "repos_url": "https://api.github.com/users/ninhkd/repos", "events_url": "https://api.github.com/users/ninhkd/events{/privacy}", "received_events_url": "https://api.github.com/users/ninhkd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-06T20:06:56Z", "updated_at": "2020-08-01T00:18:47Z", "closed_at": "2020-08-01T00:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nWe've set up localstack with DynamoDB + streams support. Everything is working great, except that our stream handler is being triggered with MODIFY events when we would expect them to be INSERT events, i.e. `OldImage` is empty. \r\n\r\nLooking at dynamodb_listener.py it looks like this is because we're using a DynamoDB `UpdateItem` operation regardless of if it's a new or existing item. However, Dynamo handles this like an INSERT if there is no existing item, so we would expect Localstack to as well.\r\n\r\nE.g. here's a localstack log triggering with eventName MODIFY and OldImage `{}`\r\n\r\n```\r\nlocalstack_1      | 2020-07-02T21:02:18:DEBUG:localstack.services.awslambda.lambda_executors: docker create --name \"localstack_lambda_arn_aws_lambda_us-west-2_000000000000_function_DynamoDbStreamFunction\" --entrypoint /bin/bash -v \"/tmp/.lambda-build\":/var/task --interactive -e AWS_LAMBDA_EVENT_BODY=\"$AWS_LAMBDA_EVENT_BODY\" -e HOSTNAME=\"$HOSTNAME\" -e LOCALSTACK_HOSTNAME=\"$LOCALSTACK_HOSTNAME\" -e AWS_LAMBDA_EVENT_BODY='{\"Records\": [{\"eventID\": \"1\", \"eventVersion\": \"1.0\", \"dynamodb\": {\"StreamViewType\": \"NEW_AND_OLD_IMAGES\", \"SizeBytes\": 481, \"Keys\": {\"_pk\": {\"S\": \"channel.01EC8NCNXFCMVW69XACCH0RNFY\"}, \"_sk\": {\"S\": \"channel.01EC8NCNXFCMVW69XACCH0RNFY\"}}, \"OldImage\": {}, \"NewImage\": {\"_model_name\": {\"S\": \"channel\"}, \"_sk\": {\"S\": \"channel.01EC8NCNXFCMVW69XACCH0RNFY\"}, \"_gsi1_pk\": {\"S\": \"channel#token#.LOCALHOST-169.254.170.1-55842\"}, \"_gsi1_sk\": {\"S\": \"channel#token#.LOCALHOST-169.254.170.1-55842\"}, \"_pk\": {\"S\": \"channel.01EC8NCNXFCMVW69XACCH0RNFY\"}, \"create_date\": {\"N\": \"1593723738033\"}, \"type\": {\"S\": \"websocket\"}, \"channel_id\": {\"S\": \"channel.01EC8NCNXFCMVW69XACCH0RNFY\"}, \"version\": {\"N\": \"1593723738033\"}, \"token\": {\"S\": \"LOCALHOST-169.254.170.1-55842\"}}}, \"awsRegion\": \"us-west-2\", \"eventSource\": \"aws:dynamodb\", \"eventName\": \"MODIFY\", \"eventSourceARN\": \"arn:aws:dynamodb:us-west-2:000000000000:table/table2\"}]}' -e HOSTNAME=192.168.65.2 -e LOCALSTACK_HOSTNAME=192.168.65.2 -e _HANDLER=db_stream.stream_handler -e AWS_LAMBDA_FUNCTION_TIMEOUT=60 -e AWS_LAMBDA_FUNCTION_NAME=DynamoDbStreamFunction -e AWS_LAMBDA_FUNCTION_VERSION='$LATEST' -e AWS_LAMBDA_FUNCTION_INVOKED_ARN=arn:aws:lambda:us-west-2:000000000000:function:DynamoDbStreamFunction -e _LAMBDA_SERVER_PORT=5000  \"lambci/lambda:python3.8\"\r\n```\r\n\r\n## Expected behavior\r\n\r\nUpdateItem with a new item (no existing item for pk/sk) on our DynamoDB table results in an INSERT event on our stream handler function\r\n\r\n## Actual behavior\r\n\r\nUpdateItem with a new item (no existing item for pk/sk) results in a MODIFY event with an empty OldImage\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\nUsing localstack Docker image with docker-compose.yml: `docker-compose up`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```\r\n    aws dynamodb create-table \\\r\n        --endpoint-url=http://$HOST:4566 \\\r\n        --table-name table2 \\\r\n        --attribute-definitions \\\r\n            AttributeName=_pk,AttributeType=S \\\r\n            AttributeName=_sk,AttributeType=S \\\r\n            AttributeName=_gsi1_pk,AttributeType=S \\\r\n            AttributeName=_gsi1_sk,AttributeType=S \\\r\n            AttributeName=_gsi2_pk,AttributeType=S \\\r\n            AttributeName=_gsi2_sk,AttributeType=S \\\r\n        --key-schema \\\r\n            AttributeName=_pk,KeyType=HASH \\\r\n            AttributeName=_sk,KeyType=RANGE \\\r\n        --provisioned-throughput \\\r\n            ReadCapacityUnits=5,WriteCapacityUnits=5 \\\r\n        --global-secondary-indexes \\\r\n            'IndexName=_gsi1_pk-_gsi1_sk-index,KeySchema=[{AttributeName=_gsi1_pk,KeyType=HASH},{AttributeName=_gsi1_sk,KeyType=SORT}],Projection={ProjectionType=ALL},ProvisionedThroughput={ReadCapacityUnits=5,WriteCapacityUnits=5}'\\\r\n            'IndexName=_gsi2_pk-_gsi2_sk-index,KeySchema=[{AttributeName=_gsi2_pk,KeyType=HASH},{AttributeName=_gsi2_sk,KeyType=SORT}],Projection={ProjectionType=ALL},ProvisionedThroughput={ReadCapacityUnits=5,WriteCapacityUnits=5}'\\\r\n        --stream-specification \\\r\n            StreamEnabled=true,StreamViewType=NEW_AND_OLD_IMAGES\r\n    aws dynamodb update-time-to-live \\\r\n        --endpoint-url=http://$HOST:4566 \\\r\n        --table-name table2 \\\r\n        --time-to-live-specification Enabled=true,AttributeName=_ttl\r\n  aws lambda create-function \\\r\n    --endpoint-url http://$HOST:4566 \\\r\n    --function-name DynamoDbStreamFunction \\\r\n    --runtime python3.8 \\\r\n    --role arn:aws:iam:isignored \\\r\n    --handler db_stream.stream_handler \\\r\n    --code S3Bucket=\"__local__\",S3Key=\"$BUILDDIR\" \\\r\n    --timeout 60\r\n    --publish\r\n  aws lambda create-event-source-mapping \\\r\n    --endpoint-url http://$HOST:4566 \\\r\n    --function-name DynamoDbStreamFunction \\\r\n    --batch-size 10 --starting-position LATEST \\\r\n    --event-source-arn arn:aws:dynamodb:us-west-2:000000000000:table/table2 \\\r\n    --starting-position LATEST\r\n```\r\n\r\nPython code when creating an new item:\r\n```py\r\ndb = session.create_client(\"dynamodb\", endpoint_url=settings.LOCALSTACK_ENDPOINT)\r\n...\r\nparams = {\r\n        \"TableName\": self.get_db_table_name(),\r\n        \"Key\": item_key,\r\n        \"UpdateExpression\": dy_updates[\"UpdateExpression\"],\r\n        \"ExpressionAttributeValues\": expression_attribute_values,\r\n        \"ExpressionAttributeNames\": expression_attribute_names,\r\n        \"ReturnValues\": return_values,\r\n        \"ReturnConsumedCapacity\": \"INDEXES\",\r\n}\r\ndb.update_item(**params)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2680", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2680/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2680/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2680/events", "html_url": "https://github.com/localstack/localstack/issues/2680", "id": 651518605, "node_id": "MDU6SXNzdWU2NTE1MTg2MDU=", "number": 2680, "title": "Local Stack: API Gateway", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 660698194, "node_id": "MDU6TGFiZWw2NjA2OTgxOTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/feature-missing", "name": "feature-missing", "color": "d4c5f9", "default": false, "description": null}, {"id": 1407837090, "node_id": "MDU6TGFiZWwxNDA3ODM3MDkw", "url": "https://api.github.com/repos/localstack/localstack/labels/won't%20fix", "name": "won't fix", "color": "ea83e3", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-06T13:00:16Z", "updated_at": "2020-07-08T05:29:00Z", "closed_at": "2020-07-06T14:58:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to check the feasibility of API gateway and SNS service.\r\n\u2022\tFirst, I have create an SNS topic and configure a subscription to send messages to your cell phone for testing.\r\n\u2022\tThen, I have create the basic elements of our API Gateway REST API.\r\n\u2022\tFinally, connect our REST API to our SNS topic via an API Gateway service proxy integration.\r\n\r\nCommand Used:\r\naws sns create-topic --name service-proxy-topic  --output text  --query 'TopicArn' --enpoint-url=http://localhost:443\r\nThen Error in the below command when subscribing the number:\r\naws sns subscribe --topic-arn arn:aws:sns:us-east-1:000000000000:service-proxy-topic --protocol sms --notification-endpoint +918939966466 --endpoint-url=http://localhost:443\r\nError: WARNING:localstack.services.sns.sns_listener: Unexpected protocol \"sms\" for SNS subscription\r\n\r\n@whummer  Can you please help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2677", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2677/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2677/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2677/events", "html_url": "https://github.com/localstack/localstack/issues/2677", "id": 651133840, "node_id": "MDU6SXNzdWU2NTExMzM4NDA=", "number": 2677, "title": "[Bug Report] Cannot get Cognito service to start", "user": {"login": "Vaunorage", "id": 10731763, "node_id": "MDQ6VXNlcjEwNzMxNzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/10731763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vaunorage", "html_url": "https://github.com/Vaunorage", "followers_url": "https://api.github.com/users/Vaunorage/followers", "following_url": "https://api.github.com/users/Vaunorage/following{/other_user}", "gists_url": "https://api.github.com/users/Vaunorage/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vaunorage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vaunorage/subscriptions", "organizations_url": "https://api.github.com/users/Vaunorage/orgs", "repos_url": "https://api.github.com/users/Vaunorage/repos", "events_url": "https://api.github.com/users/Vaunorage/events{/privacy}", "received_events_url": "https://api.github.com/users/Vaunorage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 571606741, "node_id": "MDU6TGFiZWw1NzE2MDY3NDE=", "url": "https://api.github.com/repos/localstack/localstack/labels/installation", "name": "installation", "color": "bfd4f2", "default": false, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}, {"id": 939237530, "node_id": "MDU6TGFiZWw5MzkyMzc1MzA=", "url": "https://api.github.com/repos/localstack/localstack/labels/usage", "name": "usage", "color": "0074b7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-05T19:49:07Z", "updated_at": "2020-07-25T00:20:51Z", "closed_at": "2020-07-25T00:20:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "#  Detailed description\r\nWhen trying to run cognito service, it does not  want to start along with the other services. \r\n\r\n## Actual behavior\r\ndocker run -it -e LOCALSTACK_HOSTNAME=\"localhost\" -e DEFAULT_REGION=\"us-east-1\" -e TEST_AWS_ACCOUNT_ID=\"000000000000\" -e SERVICES=\"edge,cognito,dynamodb\" -p 4566:4566 --rm --privileged --name localstack_main -p 4569:4569 -p 4590-4591:4590-4591 -p 8080-8081:8080-8081  -v \"/tmp/localstack:/tmp/localstack\" -v \"/var/run/docker.sock:/var/run/docker.sock\" -e DOCKER_HOST=\"unix:///var/run/docker.sock\" -e HOST_TMP_FOLDER=\"/tmp/localstack\" \"localstack/localstack\" \r\nWaiting for all LocalStack services to be ready\r\n2020-07-05 19:43:09,129 CRIT Supervisor is running as root.  Privileges were not dropped because no user is specified in the config file.  If you intend to run as root, you can set user=root in the config file to avoid this message.\r\n2020-07-05 19:43:09,134 INFO supervisord started with pid 14\r\n2020-07-05 19:43:10,143 INFO spawned: 'dashboard' with pid 20\r\n2020-07-05 19:43:10,147 INFO spawned: 'infra' with pid 21\r\n2020-07-05 19:43:10,174 INFO success: dashboard entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\r\n(. .venv/bin/activate; bin/localstack web)\r\n(. .venv/bin/activate; exec bin/localstack start --host)\r\nLocalStack version: 0.11.3\r\n2020-07-05 19:43:11,192 INFO success: infra entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\r\nLocalStack version: 0.11.3\r\nStarting local dev environment. CTRL-C to quit.\r\nWaiting for all LocalStack services to be ready\r\n2020-07-05T19:43:16:INFO:localstack.utils.common: Error storing key/cert SSL files (falling back to random tmp file names): [Errno 13] Permission denied: '/tmp/localstack/server.test.pem.key'\r\nRunning on 0.0.0.0:8081 over https (CTRL + C to quit)\r\nStarting edge router (https port 4566)...\r\nStarting mock DynamoDB service in http ports 4566 (recommended) and 4569 (deprecated)...\r\nRunning on 0.0.0.0:4566 over https (CTRL + C to quit)\r\nRunning on 0.0.0.0:4569 over http (CTRL + C to quit)\r\nWaiting for all LocalStack services to be ready\r\nReady\r\n\r\n![image](https://user-images.githubusercontent.com/10731763/86540984-0b985480-bed7-11ea-9650-9d62dfa33ed9.png)\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\ndocker run -it -e LOCALSTACK_HOSTNAME=\"localhost\" -e DEFAULT_REGION=\"us-east-1\" -e TEST_AWS_ACCOUNT_ID=\"000000000000\" -e SERVICES=\"edge,cognito,dynamodb\" -p 4566:4566 --rm --privileged --name localstack_main -p 4569:4569 -p 4590-4591:4590-4591 -p 8080-8081:8080-8081  -v \"/tmp/localstack:/tmp/localstack\" -v \"/var/run/docker.sock:/var/run/docker.sock\" -e DOCKER_HOST=\"unix:///var/run/docker.sock\" -e HOST_TMP_FOLDER=\"/tmp/localstack\" \"localstack/localstack\" \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2676", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2676/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2676/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2676/events", "html_url": "https://github.com/localstack/localstack/issues/2676", "id": 651129558, "node_id": "MDU6SXNzdWU2NTExMjk1NTg=", "number": 2676, "title": "[Bug Report] Dashboard Pro does not show resources", "user": {"login": "Vaunorage", "id": 10731763, "node_id": "MDQ6VXNlcjEwNzMxNzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/10731763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vaunorage", "html_url": "https://github.com/Vaunorage", "followers_url": "https://api.github.com/users/Vaunorage/followers", "following_url": "https://api.github.com/users/Vaunorage/following{/other_user}", "gists_url": "https://api.github.com/users/Vaunorage/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vaunorage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vaunorage/subscriptions", "organizations_url": "https://api.github.com/users/Vaunorage/orgs", "repos_url": "https://api.github.com/users/Vaunorage/repos", "events_url": "https://api.github.com/users/Vaunorage/events{/privacy}", "received_events_url": "https://api.github.com/users/Vaunorage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}, {"id": 720023316, "node_id": "MDU6TGFiZWw3MjAwMjMzMTY=", "url": "https://api.github.com/repos/localstack/localstack/labels/web-ui", "name": "web-ui", "color": "d65c7c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-07-05T19:22:20Z", "updated_at": "2020-07-20T08:50:37Z", "closed_at": "2020-07-18T17:06:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Detailed description\r\nThe pro version of the dashboard always shows that there is no resources found... After looking in the requests I see that it does a POST request to 0.0.0.0:4566/graph but without parameters ..\r\n\r\n# Normal Darshboard\r\n![image](https://user-images.githubusercontent.com/10731763/86540395-fa4d4900-bed2-11ea-8ea9-855181574318.png)\r\n\r\n# Pro Dashboard\r\n![image](https://user-images.githubusercontent.com/10731763/86540408-210b7f80-bed3-11ea-89f1-73c50101edd3.png)\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\ndocker run -it -e LOCALSTACK_HOSTNAME=\"localhost\" -e DEFAULT_REGION=\"us-east-1\" -e TEST_AWS_ACCOUNT_ID=\"000000000000\" -p 4566:4566 --rm --privileged --name localstack_main -p 4567-4620:4567-4620 -p 12121:12121 -p 8080-8081:8080-8081  -v \"/tmp/localstack:/tmp/localstack\" -v \"/var/run/docker.sock:/var/run/docker.sock\" -e DOCKER_HOST=\"unix:///var/run/docker.sock\" -e HOST_TMP_FOLDER=\"/tmp/localstack\" \"localstack/localstack\" -e SERVICES=\"edge,dynamodb,cognito\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2675", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2675/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2675/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2675/events", "html_url": "https://github.com/localstack/localstack/issues/2675", "id": 651123166, "node_id": "MDU6SXNzdWU2NTExMjMxNjY=", "number": 2675, "title": "[bug report] 500 error with POST 0.0.0.0/graph endpoint to get the resources graph", "user": {"login": "Vaunorage", "id": 10731763, "node_id": "MDQ6VXNlcjEwNzMxNzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/10731763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vaunorage", "html_url": "https://github.com/Vaunorage", "followers_url": "https://api.github.com/users/Vaunorage/followers", "following_url": "https://api.github.com/users/Vaunorage/following{/other_user}", "gists_url": "https://api.github.com/users/Vaunorage/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vaunorage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vaunorage/subscriptions", "organizations_url": "https://api.github.com/users/Vaunorage/orgs", "repos_url": "https://api.github.com/users/Vaunorage/repos", "events_url": "https://api.github.com/users/Vaunorage/events{/privacy}", "received_events_url": "https://api.github.com/users/Vaunorage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-05T18:41:43Z", "updated_at": "2020-07-05T19:11:58Z", "closed_at": "2020-07-05T19:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Detailed description\r\n500 error with POST 0.0.0.0/graph endpoint to get the resources graph\r\n\r\n# Steps to reproduce\r\n\r\ncurl http://127.0.0.1:4566/graph -X POST\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n\r\n# Result\r\nWaiting for all LocalStack services to be ready\r\n2020-07-05 18:09:45,830 CRIT Supervisor is running as root.  Privileges were not dropped because no user is specified in the config file.  If you intend to run as root, you can set user=root in the config file to avoid this message.\r\n2020-07-05 18:09:45,836 INFO supervisord started with pid 14\r\n2020-07-05 18:09:46,841 INFO spawned: 'dashboard' with pid 20\r\n2020-07-05 18:09:46,851 INFO spawned: 'infra' with pid 21\r\n2020-07-05 18:09:46,877 INFO success: dashboard entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\r\n(. .venv/bin/activate; bin/localstack web)\r\n(. .venv/bin/activate; exec bin/localstack start --host)\r\n2020-07-05 18:09:47,893 INFO success: infra entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\r\nLocalStack version: 0.11.3\r\nLocalStack version: 0.11.3\r\nStarting local dev environment. CTRL-C to quit.\r\nWaiting for all LocalStack services to be ready\r\n2020-07-05T18:09:56:INFO:localstack.utils.common: Error storing key/cert SSL files (falling back to random tmp file names): [Errno 13] Permission denied: '/tmp/localstack/server.test.pem.key'\r\nRunning on 0.0.0.0:8081 over https (CTRL + C to quit)\r\n2020-07-05T18:09:58:INFO:localstack.services.install: Downloading and installing local KMS server. This may take some time.\r\nWaiting for all LocalStack services to be ready\r\nWaiting for all LocalStack services to be ready\r\nWaiting for all LocalStack services to be ready\r\nWaiting for all LocalStack services to be ready\r\nWaiting for all LocalStack services to be ready\r\nWaiting for all LocalStack services to be ready\r\nStarting edge router (https port 4566)...\r\nStarting mock API Gateway service on http ports 4566 (recommended) and 4567 (deprecated)...\r\nStarting mock CloudFormation service in http ports 4566 (recommended) and 4581 (deprecated)...\r\nStarting mock CloudWatch service on http ports 4566 (recommended) and 4582 (deprecated)...\r\nStarting mock DynamoDB service in http ports 4566 (recommended) and 4569 (deprecated)...\r\nStarting mock DynamoDB Streams service on http ports 4566 (recommended) and 4570 (deprecated)...\r\nStarting mock EC2 service on http ports 4566 (recommended) and 4597 (deprecated)...\r\nStarting mock ES service on http ports 4566 (recommended) and 4578 (deprecated)...\r\nStarting mock Firehose service on http ports 4566 (recommended) and 4573 (deprecated)...\r\nRunning on 0.0.0.0:4566 over https (CTRL + C to quit)\r\nRunning on 0.0.0.0:4567 over http (CTRL + C to quit)\r\n2020-07-05T18:10:39:INFO:localstack.multiserver: Starting multi API server process on port 57845\r\nRunning on 0.0.0.0:57845 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4581 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4569 over http (CTRL + C to quit)\r\nStarting mock IAM service on http ports 4566 (recommended) and 4593 (deprecated)...\r\nStarting mock STS service on http ports 4566 (recommended) and 4592 (deprecated)...\r\nStarting mock Kinesis service in http ports 4566 (recommended) and 4568 (deprecated)...\r\nStarting mock KMS service in http ports 4566 (recommended) and 4599 (deprecated)...\r\nStarting mock Lambda service on http ports 4566 (recommended) and 4574 (deprecated)...\r\nStarting mock CloudWatch Logs service on http ports 4566 (recommended) and 4586 (deprecated)...\r\nStarting mock Redshift service on http ports 4566 (recommended) and 4577 (deprecated)...\r\nStarting mock Route53 service on http ports 4566 (recommended) and 4580 (deprecated)...\r\nStarting mock S3 service on http ports 4566 (recommended) and 4572 (deprecated)...\r\nStarting mock Secrets Manager service on http ports 4566 (recommended) and 4584 (deprecated)...\r\nStarting mock SES service on http ports 4566 (recommended) and 4579 (deprecated)...\r\nStarting mock SNS service on http ports 4566 (recommended) and 4575 (deprecated)...\r\nStarting mock SQS service on http ports 4566 (recommended) and 4576 (deprecated)...\r\nStarting mock SSM service on http ports 4566 (recommended) and 4583 (deprecated)...\r\nStarting mock Cloudwatch Events service on http ports 4566 (recommended) and 4587 (deprecated)...\r\nStarting mock StepFunctions service in http ports 4566 (recommended) and 4585 (deprecated)...\r\nRunning on 0.0.0.0:4593 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4568 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4599 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4586 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4572 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4584 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4575 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4576 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4583 over http (CTRL + C to quit)\r\nRunning on 0.0.0.0:4587 over http (CTRL + C to quit)\r\nWaiting for all LocalStack services to be ready\r\nRunning on 0.0.0.0:4585 over http (CTRL + C to quit)\r\nReady.\r\n2020-07-05T18:13:13:INFO:localstack.services.edge: Unable to find forwarding rule for host \"127.0.0.1:4566\", path \"/favicon.ico\", target header \"\", auth header \"\", data \"b''\"\r\n2020-07-05T18:15:02:INFO:localstack.services.edge: Unable to find forwarding rule for host \"127.0.0.1:4566\", path \"/grap\", target header \"\", auth header \"\", data \"b''\"\r\n2020-07-05T18:15:06:ERROR:app: Exception on /graph [POST]\r\nTraceback (most recent call last):\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 2447, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1952, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1821, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1950, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1936, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/opt/code/localstack/localstack/dashboard/api.py\", line 39, in get_graph\r\n    data = get_payload()\r\n  File \"/opt/code/localstack/localstack/dashboard/api.py\", line 121, in get_payload\r\n    return json.loads(common.to_str(request.data))\r\n  File \"/usr/lib/python3.8/json/__init__.py\", line 357, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/usr/lib/python3.8/json/decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/lib/python3.8/json/decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\n\r\n## Command used to start LocalStack\r\ndocker run -it -e LOCALSTACK_HOSTNAME=\"localhost\" -e DEFAULT_REGION=\"us-east-1\" -e TEST_AWS_ACCOUNT_ID=\"000000000000\" -p 4566:4566 --rm --privileged --name localstack_main -p 4567-4620:4567-4620 -p 12121:12121 -p 8080-8081:8080-8081  -v \"/tmp/localstack:/tmp/localstack\" -v \"/var/run/docker.sock:/var/run/docker.sock\" -e DOCKER_HOST=\"unix:///var/run/docker.sock\" -e HOST_TMP_FOLDER=\"/tmp/localstack\" \"localstack/localstack\" -e SERVICES=\"edge,dynamodb,cognito\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2671", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2671/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2671/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2671/events", "html_url": "https://github.com/localstack/localstack/issues/2671", "id": 650839947, "node_id": "MDU6SXNzdWU2NTA4Mzk5NDc=", "number": 2671, "title": "Unsigned requests fail", "user": {"login": "ryan-gerstenkorn-sp", "id": 59625296, "node_id": "MDQ6VXNlcjU5NjI1Mjk2", "avatar_url": "https://avatars1.githubusercontent.com/u/59625296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryan-gerstenkorn-sp", "html_url": "https://github.com/ryan-gerstenkorn-sp", "followers_url": "https://api.github.com/users/ryan-gerstenkorn-sp/followers", "following_url": "https://api.github.com/users/ryan-gerstenkorn-sp/following{/other_user}", "gists_url": "https://api.github.com/users/ryan-gerstenkorn-sp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryan-gerstenkorn-sp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryan-gerstenkorn-sp/subscriptions", "organizations_url": "https://api.github.com/users/ryan-gerstenkorn-sp/orgs", "repos_url": "https://api.github.com/users/ryan-gerstenkorn-sp/repos", "events_url": "https://api.github.com/users/ryan-gerstenkorn-sp/events{/privacy}", "received_events_url": "https://api.github.com/users/ryan-gerstenkorn-sp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-04T06:52:48Z", "updated_at": "2020-07-06T21:05:47Z", "closed_at": "2020-07-06T21:05:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unsure if this is a bug or not but either way wanted to make a ticket incase anyone else comes across this. I guess I assumed skipping signing was ok since localstack didn't seem to care what I had setup for credentials and it also seems to work on the s3 specific port.\r\n\r\n# Type of request: This is a ...\r\n\r\n[* ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nSet `--no-sign-request` on any request using endpoint localhost:4566\r\n\r\nExample:\r\n\r\n$ aws s3 --no-sign-request --profile=local --endpoint-url=http://localhost:4566 ls \r\n\r\nAn error occurred (404) when calling the ListBuckets operation: Not Found\r\n$ aws s3 --no-sign-request --profile=local --endpoint-url=http://localhost:4572 ls \r\n2020-07-04 00:58:56 asdf\r\n$ aws s3 --profile=local --endpoint-url=http://localhost:4566 ls                   \r\n2020-07-04 00:58:56 asdf\r\n\r\n# Steps to reproduce\r\n\r\n~/.aws/config\r\n```\r\n[profile local]\r\nregion=us-east-1\r\ns3 =\r\n  addressing_style = path\r\n```\r\n\r\n~/.aws/credentials\r\n```\r\n[local]\r\naws_access_key_id = asdf\r\naws_secret_access_key = asd\r\n```\r\n\r\nThen follow the examples above.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2662", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2662/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2662/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2662/events", "html_url": "https://github.com/localstack/localstack/issues/2662", "id": 650192978, "node_id": "MDU6SXNzdWU2NTAxOTI5Nzg=", "number": 2662, "title": "\"localstack web\" reports ERROR: cannot import name '_cancel_all_tasks'", "user": {"login": "nptech9806", "id": 47909385, "node_id": "MDQ6VXNlcjQ3OTA5Mzg1", "avatar_url": "https://avatars1.githubusercontent.com/u/47909385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nptech9806", "html_url": "https://github.com/nptech9806", "followers_url": "https://api.github.com/users/nptech9806/followers", "following_url": "https://api.github.com/users/nptech9806/following{/other_user}", "gists_url": "https://api.github.com/users/nptech9806/gists{/gist_id}", "starred_url": "https://api.github.com/users/nptech9806/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nptech9806/subscriptions", "organizations_url": "https://api.github.com/users/nptech9806/orgs", "repos_url": "https://api.github.com/users/nptech9806/repos", "events_url": "https://api.github.com/users/nptech9806/events{/privacy}", "received_events_url": "https://api.github.com/users/nptech9806/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 571606119, "node_id": "MDU6TGFiZWw1NzE2MDYxMTk=", "url": "https://api.github.com/repos/localstack/localstack/labels/documentation", "name": "documentation", "color": "bfd4f2", "default": true, "description": null}, {"id": 571606741, "node_id": "MDU6TGFiZWw1NzE2MDY3NDE=", "url": "https://api.github.com/repos/localstack/localstack/labels/installation", "name": "installation", "color": "bfd4f2", "default": false, "description": null}, {"id": 939237530, "node_id": "MDU6TGFiZWw5MzkyMzc1MzA=", "url": "https://api.github.com/repos/localstack/localstack/labels/usage", "name": "usage", "color": "0074b7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T20:41:54Z", "updated_at": "2020-07-11T12:38:42Z", "closed_at": "2020-07-11T12:38:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a bug report \r\n\r\n[X] bug report\r\nlocalstack web\r\nLocalStack version: 0.11.3\r\nERROR: cannot import name '_cancel_all_tasks'\r\n\r\n# Detailed description\r\n\"localstack web\" reports ERROR: cannot import name '_cancel_all_tasks'\r\n\r\n...\r\n\r\n## Expected behavior\r\nexpecting localstack web to start up and let me manage\r\n...\r\n\r\n## Actual behavior\r\n\r\nERROR: cannot import name '_cancel_all_tasks'\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\nlocalstack web\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nn/a\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2661", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2661/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2661/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2661/events", "html_url": "https://github.com/localstack/localstack/issues/2661", "id": 649961067, "node_id": "MDU6SXNzdWU2NDk5NjEwNjc=", "number": 2661, "title": "Cannot create multiple permissions for lambda", "user": {"login": "loganasherjones", "id": 3633332, "node_id": "MDQ6VXNlcjM2MzMzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3633332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loganasherjones", "html_url": "https://github.com/loganasherjones", "followers_url": "https://api.github.com/users/loganasherjones/followers", "following_url": "https://api.github.com/users/loganasherjones/following{/other_user}", "gists_url": "https://api.github.com/users/loganasherjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/loganasherjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loganasherjones/subscriptions", "organizations_url": "https://api.github.com/users/loganasherjones/orgs", "repos_url": "https://api.github.com/users/loganasherjones/repos", "events_url": "https://api.github.com/users/loganasherjones/events{/privacy}", "received_events_url": "https://api.github.com/users/loganasherjones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-02T14:08:56Z", "updated_at": "2020-07-03T05:39:14Z", "closed_at": "2020-07-03T05:39:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ x ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nI tried to allow two different AWS accounts to execute the same lambda but get this error when trying to create the 2nd permission:\r\n\r\n```\r\nAn error occurred (500) when calling the AddPermission operation (reached max retries: 2): <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n```\r\n\r\n## Expected behavior\r\n\r\nI expected to be able to create both permissions.\r\n\r\n## Actual behavior\r\n\r\nWhen trying to create the 2nd permission, I get the following error\r\n\r\n```\r\nAn error occurred (500) when calling the AddPermission operation (reached max retries: 2): <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n```\r\n\r\nAnd here is the stack trace in localstack:\r\n\r\n```\r\nlocalstack_1     | 2020-07-02T13:59:34:ERROR:lambda_api: Exception on /2015-03-31/functions/my-function/policy [POST]\r\nlocalstack_1     | Traceback (most recent call last):\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 2447, in wsgi_app\r\nlocalstack_1     |     response = self.full_dispatch_request()\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1952, in full_dispatch_request\r\nlocalstack_1     |     rv = self.handle_user_exception(e)\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\nlocalstack_1     |     return cors_after_request(app.make_response(f(*args, **kwargs)))\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1821, in handle_user_exception\r\nlocalstack_1     |     reraise(exc_type, exc_value, tb)\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/_compat.py\", line 39, in reraise\r\nlocalstack_1     |     raise value\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1950, in full_dispatch_request\r\nlocalstack_1     |     rv = self.dispatch_request()\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1936, in dispatch_request\r\nlocalstack_1     |     return self.view_functions[rule.endpoint](**req.view_args)\r\nlocalstack_1     |   File \"/opt/code/localstack/localstack/services/awslambda/lambda_api.py\", line 1148, in add_permission\r\nlocalstack_1     |     iam_client.create_policy(PolicyName=POLICY_NAME_PATTERN % function,\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/botocore/client.py\", line 316, in _api_call\r\nlocalstack_1     |     return self._make_api_call(operation_name, kwargs)\r\nlocalstack_1     |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/botocore/client.py\", line 635, in _make_api_call\r\nlocalstack_1     |     raise error_class(parsed_response, operation_name)\r\nlocalstack_1     | botocore.errorfactory.EntityAlreadyExistsException: An error occurred (EntityAlreadyExists) when calling the CreatePolicy operation: A policy called lambda_policy_my-function already exists. Duplicate names are not allowed.\r\n\r\n```\r\n\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n**docker-compose.yml**\r\n```\r\nversion: \"2.1\"\r\n\r\nservices:\r\n  localstack:\r\n    image: localstack/localstack:0.11.3\r\n    ports:\r\n      - \"4566:4566\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=lambda,iam,kinesis\r\n      - DEBUG=${DEBUG- }\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=docker-reuse\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\nSpin everything up:\r\n\r\n```\r\ndocker-compose up - d\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n**policy.json**\r\n```\r\n{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n      {\r\n        \"Action\": \"sts:AssumeRole\",\r\n        \"Principal\": {\r\n          \"Service\": \"lambda.amazonaws.com\"\r\n        },\r\n        \"Effect\": \"Allow\",\r\n        \"Sid\": \"\"\r\n      }\r\n    ]\r\n}\r\n```\r\n\r\nCreate the IAM Policy:\r\n```\r\naws iam create-role --role-name Test-Role --assume-role-policy-document file://policy.json\r\n```\r\n\r\nCreate the lambda function:\r\n\r\n```\r\necho \"def handler(event, context): pass\" > my_function.py\r\nzip my_function.zip my_function.py\r\naws lambda create-function \\\r\n    --function-name my-function \\\r\n    --runtime python3.8 \\\r\n    --zip-file fileb://my_function.zip \\\r\n    --handler my_function.handler \\\r\n    --role arn:aws:iam::000000000000:role/Test-Role\r\n```\r\n\r\nAdd permissions for cloudwatch logs\r\n\r\n```\r\naws lambda add-permission \\\r\n    --function-name my-function \\\r\n    --action lambda:InvokeFunction \\\r\n    --statement-id logs \\\r\n    --principal logs.amazonaws.com\r\n{\r\n    \"Statement\": \"logs\"\r\n}\r\n```\r\n\r\nTry to create another permission for kinesis:\r\n\r\n```\r\naws lambda add-permission \\\r\n    --function-name my-function \\\r\n    --action lambda:InvokeFunction \\\r\n    --statement-id kinesis \\\r\n    --principal kinesis.amazonaws.com\r\n\r\nAn error occurred (500) when calling the AddPermission operation (reached max retries: 2): <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2658", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2658/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2658/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2658/events", "html_url": "https://github.com/localstack/localstack/issues/2658", "id": 649690908, "node_id": "MDU6SXNzdWU2NDk2OTA5MDg=", "number": 2658, "title": "cloudformation updateStack: type object 'FakeBucket' has no attribute 'update_from_cloudformation_json'", "user": {"login": "Mindez", "id": 156549, "node_id": "MDQ6VXNlcjE1NjU0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/156549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mindez", "html_url": "https://github.com/Mindez", "followers_url": "https://api.github.com/users/Mindez/followers", "following_url": "https://api.github.com/users/Mindez/following{/other_user}", "gists_url": "https://api.github.com/users/Mindez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mindez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mindez/subscriptions", "organizations_url": "https://api.github.com/users/Mindez/orgs", "repos_url": "https://api.github.com/users/Mindez/repos", "events_url": "https://api.github.com/users/Mindez/events{/privacy}", "received_events_url": "https://api.github.com/users/Mindez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-02T07:06:35Z", "updated_at": "2020-07-02T07:48:24Z", "closed_at": "2020-07-02T07:48:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nLocalstack CloudFormation returns a 500 error on the updateStack operation in cloudformation, even for very simple stacks consisting of just one S3 bucket. I have tried this using Route53 Hosted Zones as well, and get the same error with 'FakeZone' instead of 'FakeBucket'. Update Stack operations always seem to fail with this error.\r\n\r\n## Expected behavior\r\n\r\nThe stack successfully updates with the new parameters provided in the updateStack operation.\r\n\r\n## Actual behavior\r\n\r\nA 500 error is returned with no message.\r\nIn the debug logs the following error is displayed:\r\n```\r\nlocalstack                   | 2020-07-02 06:53:18,229:API: Error on request:\r\nlocalstack                   | Traceback (most recent call last):\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/werkzeug/serving.py\", line 323, in run_wsgi\r\nlocalstack                   |     execute(self.server.app)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/werkzeug/serving.py\", line 312, in execute\r\nlocalstack                   |     application_iter = app(environ, start_response)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/server.py\", line 163, in __call__\r\nlocalstack                   |     return backend_app(environ, start_response)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 2464, in __call__\r\nlocalstack                   |     return self.wsgi_app(environ, start_response)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 2450, in wsgi_app\r\nlocalstack                   |     response = self.handle_exception(e)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\nlocalstack                   |     return cors_after_request(app.make_response(f(*args, **kwargs)))\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1867, in handle_exception\r\nlocalstack                   |     reraise(exc_type, exc_value, tb)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/_compat.py\", line 39, in reraise\r\nlocalstack                   |     raise value\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 2447, in wsgi_app\r\nlocalstack                   |     response = self.full_dispatch_request()\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1952, in full_dispatch_request\r\nlocalstack                   |     rv = self.handle_user_exception(e)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\nlocalstack                   |     return cors_after_request(app.make_response(f(*args, **kwargs)))\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1821, in handle_user_exception\r\nlocalstack                   |     reraise(exc_type, exc_value, tb)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/_compat.py\", line 39, in reraise\r\nlocalstack                   |     raise value\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1950, in full_dispatch_request\r\nlocalstack                   |     rv = self.dispatch_request()\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/flask/app.py\", line 1936, in dispatch_request\r\nlocalstack                   |     return self.view_functions[rule.endpoint](**req.view_args)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/core/utils.py\", line 146, in __call__\r\nlocalstack                   |     result = self.callback(request, request.url, {})\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/core/responses.py\", line 199, in dispatch\r\nlocalstack                   |     return cls()._dispatch(*args, **kwargs)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/core/responses.py\", line 304, in _dispatch\r\nlocalstack                   |     return self.call_action()\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/core/responses.py\", line 389, in call_action\r\nlocalstack                   |     response = method()\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/cloudformation/responses.py\", line 321, in update_stack\r\nlocalstack                   |     stack = self.cloudformation_backend.update_stack(\r\nlocalstack                   |   File \"/opt/code/localstack/localstack/services/cloudformation/cloudformation_starter.py\", line 458, in cf_update_stack\r\nlocalstack                   |     stack = cf_update_stack_orig(*args, **kwargs)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/cloudformation/models.py\", line 711, in update_stack\r\nlocalstack                   |     stack.update(template, role_arn, parameters=parameters, tags=tags)\r\nlocalstack                   |   File \"/opt/code/localstack/localstack/services/cloudformation/cloudformation_starter.py\", line 831, in update\r\nlocalstack                   |     stack_update_orig(self, *args, **kwargs)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/cloudformation/models.py\", line 354, in update\r\nlocalstack                   |     self.resource_map.update(self.template_dict, parameters)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/cloudformation/parsing.py\", line 705, in update\r\nlocalstack                   |     raise last_exception\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/cloudformation/parsing.py\", line 693, in update\r\nlocalstack                   |     changed_resource = parse_and_update_resource(\r\nlocalstack                   |   File \"/opt/code/localstack/localstack/services/cloudformation/cloudformation_starter.py\", line 225, in parse_and_update_resource\r\nlocalstack                   |     return _parse_and_create_resource(logical_id, resource_json, resources_map, region_name, update=True)\r\nlocalstack                   |   File \"/opt/code/localstack/localstack/services/cloudformation/cloudformation_starter.py\", line 278, in _parse_and_create_resource\r\nlocalstack                   |     parse_and_update_resource_orig(logical_id, resource_json_arns_fixed, resources_map, region_name)\r\nlocalstack                   |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/moto/cloudformation/parsing.py\", line 390, in parse_and_update_resource\r\nlocalstack                   |     new_resource = resource_class.update_from_cloudformation_json(\r\nlocalstack                   | AttributeError: type object 'FakeBucket' has no attribute 'update_from_cloudformation_json'\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\nThe following docker-compose parameters are used to start LocalStack:\r\n```\r\n  localstack:\r\n    container_name: localstack\r\n    image: localstack/localstack\r\n    privileged: true\r\n    ports:\r\n      - \"4566:4566\"\r\n      - \"9070:9070\"\r\n    environment:\r\n      SERVICES: route53,sqs,cloudformation,s3\r\n      PORT_WEB_UI: 9070\r\n      DEBUG: cloudformation\r\n      NODE_ENV: 'local'\r\n      HOSTNAME: 'localhost'\r\n      DEFAULT_REGION: 'eu-west-1'\r\n      HOSTNAME_EXTERNAL: 'localstack'\r\n    networks:\r\n      my_network:\r\n        aliases:\r\n          - localstack\r\n    volumes:\r\n        - /var/run/docker.sock:/var/run/docker.sock\r\n        - /tmp/localstack:/tmp/localstack\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nThe following simple parameterised stack is used:\r\n\r\n```\r\nAWSTemplateFormatVersion: \"2010-09-09\"\r\nDescription: Test Stack for Localstack\r\n\r\nParameters:\r\n  DummyParam:\r\n    Type: String\r\n\r\nResources:\r\n  HelloBucket:\r\n    Type: AWS::S3::Bucket\r\n    Parameters:\r\n      BucketName: !Ref DummyParam\r\n```\r\n\r\nThe stack is created using the following in nodeJS:\r\n\r\n```\r\n   import { CloudFormation } from 'aws-sdk'\r\n   ...\r\n   this.cloudFormation = new CloudFormation({ endpoint: 'http://localhost:4566', region: 'eu-west-1'})\r\n   ...\r\n   await this.cloudFormation.createStack({\r\n      StackName: 'dummy-stack',\r\n      TemplateBody: await this.getStackTemplate(),\r\n      Parameters: { ParameterKey: 'DummyParam', ParameterValue: 'test' }\r\n   }).promise()\r\n```\r\n\r\nThe stack is then updated using the following in nodeJS:\r\n\r\n```\r\n   import { CloudFormation } from 'aws-sdk'\r\n   ...\r\n   this.cloudFormation = new CloudFormation({ endpoint: 'http://localhost:4566', region: 'eu-west-1'})\r\n   ...\r\n   await this.cloudFormation.updateStack({\r\n      StackName: 'dummy-stack',\r\n      TemplateBody: await this.getStackTemplate(),\r\n      Parameters: { ParameterKey: 'DummyParam', ParameterValue: 'test2' }\r\n   }).promise()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2655", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2655/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2655/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2655/events", "html_url": "https://github.com/localstack/localstack/issues/2655", "id": 648840243, "node_id": "MDU6SXNzdWU2NDg4NDAyNDM=", "number": 2655, "title": "Issue is related to s3: Sync Command is not working with exclude and include operation", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2182741546, "node_id": "MDU6TGFiZWwyMTgyNzQxNTQ2", "url": "https://api.github.com/repos/localstack/localstack/labels/aws-cli", "name": "aws-cli", "color": "cef47a", "default": false, "description": ""}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-01T09:48:57Z", "updated_at": "2020-07-05T16:34:27Z", "closed_at": "2020-07-05T16:33:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issue: \r\nSync Command is not working with exclude and include operation.\r\n\r\nCommand Used:\r\naws s3 sync . s3://my-bucket/path --exclude \"*.txt\" --include \"MyFile*.txt\" --exclude \"MyFile?.txt\" --endpoint-url=http://localhost:443\r\n\r\naws s3 sync . s3://my-bucket/path --exclude \"*.txt\" --endpoint-url=http://localhost:443\r\n\r\nError:\r\nfatal error: An error occurred (InvalidAccessKeyId) when calling the ListObjectsV2 operation: The AWS Access Key Id you provided does not exist in our records.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2654", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2654/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2654/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2654/events", "html_url": "https://github.com/localstack/localstack/issues/2654", "id": 648577674, "node_id": "MDU6SXNzdWU2NDg1Nzc2NzQ=", "number": 2654, "title": "simple async lambda client throws NPE via TransformingAsyncResponseHandler#onError", "user": {"login": "bmiddleb", "id": 3904123, "node_id": "MDQ6VXNlcjM5MDQxMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3904123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmiddleb", "html_url": "https://github.com/bmiddleb", "followers_url": "https://api.github.com/users/bmiddleb/followers", "following_url": "https://api.github.com/users/bmiddleb/following{/other_user}", "gists_url": "https://api.github.com/users/bmiddleb/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmiddleb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmiddleb/subscriptions", "organizations_url": "https://api.github.com/users/bmiddleb/orgs", "repos_url": "https://api.github.com/users/bmiddleb/repos", "events_url": "https://api.github.com/users/bmiddleb/events{/privacy}", "received_events_url": "https://api.github.com/users/bmiddleb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T00:09:01Z", "updated_at": "2020-07-01T17:28:01Z", "closed_at": "2020-07-01T17:27:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nLocalStack subscription: Pro Edition\r\nMacBook Pro: Catalina\r\nIntelliJ 2020.1\r\nSpringBoot 2.3.1\r\nGradle 6\r\nJava 8\r\n\r\nI am getting \u201cError thrown from TransformingAsyncResponseHandler#onError\u201d along with an NPE in AsyncResponseHandler.onError. There is a known problem with the AWS SDK but changing version, as suggested, didn\u2019t resolve the problem. It occurs for all 5 of the versions I spot-checked all the way back to 2.5.1\r\n\r\nbuild.gradle:\r\ndependencies {\r\n    implementation platform('software.amazon.awssdk:bom:2.13.47')\r\n    implementation platform('com.amazonaws:aws-xray-recorder-sdk-bom:2.6.1')\r\n    implementation 'software.amazon.awssdk:lambda'\r\nstarting with the aws GitHub \u201cblank_java\u201d sample project as the code base. (edited) \r\n...\r\n\r\n## Expected behavior\r\nreturn valid response from lambdaAsyncClient.getAccountSettings\r\n...\r\n\r\n## Actual behavior\r\n2020-06-30 17:01:04.235 ERROR 37227 --- [    Test worker] s.a.a.c.i.h.BaseAsyncClientHandler       : Error thrown from TransformingAsyncResponseHandler#onError, ignoring.\r\n\r\njava.lang.NullPointerException: null\r\n\tat software.amazon.awssdk.core.internal.http.async.AsyncResponseHandler.onError(AsyncResponseHandler.java:76) ~[sdk-core-2.13.47.jar:na]\r\n\tat software.amazon.awssdk.core.internal.http.async.CombinedResponseAsyncHttpResponseHandler.onError(CombinedResponseAsyncHttpResponseHandler.java:70) ~[sdk-core-2.13.47.jar:na]\r\n\tat software.amazon.awssdk.core.internal.handler.BaseAsyncClientHandler.lambda$doExecute$3(BaseAsyncClientHandler.java:223) [sdk-core-2.13.47.jar:na]\r\n\tat software.amazon.awssdk.utils.FunctionalUtils.runAndLogError(FunctionalUtils.java:40) ~[utils-2.13.47.jar:na]\r\n\tat software.amazon.awssdk.core.internal.handler.BaseAsyncClientHandler.doExecute(BaseAsyncClientHandler.java:220) [sdk-core-2.13.47.jar:na]\r\n\tat software.amazon.awssdk.core.internal.handler.BaseAsyncClientHandler.execute(BaseAsyncClientHandler.java:86) [sdk-core-2.13.47.jar:na]\r\n\tat software.amazon.awssdk.awscore.client.handler.AwsAsyncClientHandler.execute(AwsAsyncClientHandler.java:52) [aws-core-2.13.47.jar:na]\r\n\tat software.amazon.awssdk.services.lambda.DefaultLambdaAsyncClient.getAccountSettings(DefaultLambdaAsyncClient.java:1035) [lambda-2.13.47.jar:na]\r\n\tat example.Handler.<init>(Handler.java:38) [main/:na]\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) [na:1.8.0_131]\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) [na:1.8.0_131]\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [na:1.8.0_131]\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423) [na:1.8.0_131]\r\n...\r\n\r\n# Steps to reproduce\r\nClone AWS samples here: https://github.com/awsdocs/aws-lambda-developer-guide/tree/master/sample-apps/blank-java\r\nImport the \"blank-java\" project into IntelliJ\r\nEither use docker-compose or an initializer to start the localstack docker container. I used the latter (see below)\r\nresulting in: 17:01:02.894 [Test worker] INFO \ud83d\udc33 [localstack/localstack:0.8.6] - Container **localstack/localstack:0.8.6** started\r\n\r\n## Command used to start LocalStack\r\nTest extends the following class...\r\n@ContextConfiguration(initializers = BaseTestAwsIntegrator.Initializer.class )\r\npublic class BaseTestAwsIntegrator\r\n{\r\n    private static LocalStackContainer localStackContainer =\r\n        new LocalStackContainer().withServices( LocalStackContainer.Service.LAMBDA );\r\n\r\n    static { localStackContainer.start(); }\r\n\r\n    @Configuration\r\n    public static class Initializer implements ApplicationContextInitializer<ConfigurableApplicationContext> {\r\n        @Override\r\n        public void initialize( ConfigurableApplicationContext configurableApplicationContext ) {\r\n            TestPropertyValues values = TestPropertyValues.of(\r\n                \"aws-access.endpointUri\"\r\n                    + localStackContainer.getEndpointConfiguration( LocalStackContainer.Service.LAMBDA )\r\n                    .getServiceEndpoint() );\r\n\r\n                values.applyTo( configurableApplicationContext );\r\n        }\r\n    }\r\n}\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n@Component\r\npublic class Handler implements RequestHandler<SQSEvent, String> {\r\n    private static final Logger logger = LoggerFactory.getLogger(Handler.class);\r\n    private static final Gson gson = new GsonBuilder().setPrettyPrinting().create();\r\n    private final LambdaAsyncClient lambdaAsyncClient;\r\n\r\n    @Autowired\r\n    public Handler(LambdaAsyncClient lambdaAsyncClient) {\r\n        if ( lambdaAsyncClient == null ) throw new IllegalArgumentException(\"lambdaAsyncClient \"\r\n            + \"not autowired\");\r\n        else log.debug( \"lambdaAsyncClient autowired\" );\r\n\r\n        GetAccountSettingsResponse settings;\r\n        this.lambdaAsyncClient = lambdaAsyncClient;\r\n\r\n        CompletableFuture<GetAccountSettingsResponse> accountSettings =\r\n            this.lambdaAsyncClient.getAccountSettings(\r\n                GetAccountSettingsRequest.builder().build());\r\n\r\n        try {\r\n            if ( accountSettings != null ) {\r\n                while( ! accountSettings.isDone() ) Thread.sleep(1000);\r\n                settings = accountSettings.get();\r\n\r\n                String statusMsg = \"Lambda \";\r\n                if ( settings.sdkHttpResponse().isSuccessful() ) statusMsg += \"succeeded\";\r\n                else statusMsg += \"failed\";\r\n                log.debug( statusMsg );\r\n                log.debug( settings.sdkHttpResponse().toString() );\r\n            }\r\n            else {\r\n                throw new IllegalStateException(\"accountSettings null\");\r\n            }\r\n\r\n        } catch (InterruptedException e) {\r\n            log.error( e.getMessage() );\r\n        } catch (Exception e) {\r\n            log.error( e.getMessage() );\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String handleRequest(SQSEvent event, Context context) {\r\n        String response = new String();\r\n\r\n        // call Lambda API\r\n        logger.info(\"Getting account settings\");\r\n\r\n        CompletableFuture<GetAccountSettingsResponse> accountSettings =\r\n                lambdaAsyncClient.getAccountSettings(GetAccountSettingsRequest.builder().build());\r\n\r\n        // log execution details\r\n        logger.info(\"ENVIRONMENT VARIABLES: {}\", gson.toJson(System.getenv()));\r\n        logger.info(\"CONTEXT: {}\", gson.toJson(context));\r\n        logger.info(\"EVENT: {}\", gson.toJson(event));\r\n\r\n        // process event\r\n        for (SQSMessage msg : event.getRecords()) {\r\n            logger.info(msg.getBody());\r\n        }\r\n\r\n        // process Lambda API response\r\n        try {\r\n            GetAccountSettingsResponse settings = accountSettings.get();\r\n            response = gson.toJson(settings.accountUsage());\r\n            logger.info(\"Account usage: {}\", response);\r\n\r\n        } catch (Exception e) {\r\n            e.getStackTrace();\r\n        }\r\n\r\n        return response;\r\n    }\r\n}\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2653", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2653/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2653/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2653/events", "html_url": "https://github.com/localstack/localstack/issues/2653", "id": 648438034, "node_id": "MDU6SXNzdWU2NDg0MzgwMzQ=", "number": 2653, "title": "Cannot create subscription filter", "user": {"login": "loganasherjones", "id": 3633332, "node_id": "MDQ6VXNlcjM2MzMzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3633332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loganasherjones", "html_url": "https://github.com/loganasherjones", "followers_url": "https://api.github.com/users/loganasherjones/followers", "following_url": "https://api.github.com/users/loganasherjones/following{/other_user}", "gists_url": "https://api.github.com/users/loganasherjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/loganasherjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loganasherjones/subscriptions", "organizations_url": "https://api.github.com/users/loganasherjones/orgs", "repos_url": "https://api.github.com/users/loganasherjones/repos", "events_url": "https://api.github.com/users/loganasherjones/events{/privacy}", "received_events_url": "https://api.github.com/users/loganasherjones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-30T19:30:00Z", "updated_at": "2020-07-07T21:09:59Z", "closed_at": "2020-07-07T21:09:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ x ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nI'm trying to fire a lambda using the cloudwatch logs subscription filter, but it keeps failing with the following error:\r\n\r\n```\r\nAn error occurred (InvalidParameterException) when calling the PutSubscriptionFilter operation: Could not execute the lambda function. Make sure you have given CloudWatch Logs permission to execute your function.\r\n```\r\n\r\n\r\n## Expected behavior\r\n\r\nI expect the subscription filter to be created and for it to fire my lambda function successfully.\r\n\r\n## Actual behavior\r\n\r\nIt give me the error listed above.\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\nStart up localstack:\r\n\r\n**docker-compose.yml**\r\n```\r\nversion: \"2.1\"\r\n\r\nservices:\r\n  localstack:\r\n    image: localstack/localstack:0.11.3\r\n    ports:\r\n      - \"4566:4566\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=s3,iam,lambda,kinesis,logs,sns,sqs,ssm\r\n      - DEBUG=${DEBUG- }\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=docker-reuse\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\nRun:\r\n\r\n```\r\n$ docker-compose up -d\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n**my_function.py**\r\n```\r\nimport logging\r\n\r\ndef handler(event, context):\r\n    log = logging.getLogger(__name__)\r\n    print(\"Handler, print\")\r\n    log.info(\"Info message\")\r\n    log.warning(\"warning message\")\r\n    log.error(\"error message\")\r\n    return \"hooray\"\r\n```\r\n\r\n\r\n**metrics.py**\r\n```\r\nimport logging\r\n\r\ndef handler(event, context):\r\n    log = logging.getLogger(__name__)\r\n    print(\"INSIDE METRICS\")\r\n    return \"DONE\"\r\n```\r\n\r\n**policy.json**\r\n```\r\n{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n      {\r\n        \"Action\": \"sts:AssumeRole\",\r\n        \"Principal\": {\r\n          \"Service\": \"lambda.amazonaws.com\"\r\n        },\r\n        \"Effect\": \"Allow\",\r\n        \"Sid\": \"\"\r\n      }\r\n    ]\r\n}\r\n```\r\n\r\n\r\nZip up the functions:\r\n\r\n```\r\n$ zip my_function.zip my_function.py\r\n$ zip metrics.zip metrics.py\r\n\r\n```\r\n\r\nCreate the policy\r\n\r\n```\r\n$ aws iam create-role --role-name Test-Role --assume-role-policy-document file://policy.json\r\n```\r\n\r\nCreate the functions\r\n\r\n```\r\n$ aws lambda create-function \\\r\n    --function-name my-function \\\r\n    --runtime python3.8 \\\r\n    --zip-file fileb://my_function.zip \\\r\n    --handler my_function.handler \\\r\n    --role arn:aws:iam::000000000000:role/Test-Role\r\n\r\n$ aws lambda create-function \\\r\n    --function-name my-metrics \\\r\n    --runtime python3.8 \\\r\n    --zip-file fileb://metrics.zip \\\r\n    --handler metrics.handler \\\r\n    --role arn:aws:iam::000000000000:role/Test-Role\r\n```\r\n\r\nEnsure you can invoke the functions:\r\n\r\n```\r\n$ aws lambda invoke --function-name my-function out\r\n$ aws lambda invoke --function-name my-metrics out\r\n```\r\n\r\nSee the log-groups were created:\r\n\r\n```\r\n$ aws logs describe-log-groups\r\n{\r\n    \"logGroups\": [\r\n        {\r\n            \"logGroupName\": \"/aws/lambda/my-metrics\",\r\n            \"creationTime\": 1593542770068,\r\n            \"metricFilterCount\": 0,\r\n            \"arn\": \"arn:aws:logs:us-east-1:1:log-group:/aws/lambda/my-metrics\",\r\n            \"storedBytes\": 329\r\n        },\r\n        {\r\n            \"logGroupName\": \"/aws/lambda/my-function\",\r\n            \"creationTime\": 1593542361034,\r\n            \"metricFilterCount\": 0,\r\n            \"arn\": \"arn:aws:logs:us-east-1:1:log-group:/aws/lambda/my-function\",\r\n            \"storedBytes\": 1504\r\n        }\r\n    ]\r\n}\r\n\r\n```\r\n\r\nAllow cloudwatch logs to trigger `my-metrics` function (I've also tried adding `source-arn` and that results in the same error):\r\n\r\n\r\n```\r\n$ aws lambda add-permission \\\r\n    --function-name my-metrics \\\r\n    --action lambda:InvokeFunction \\\r\n    --statement-id logs \\\r\n    --principal logs.amazonaws.com\r\n{\r\n    \"Statment\": \"logs\"\r\n}\r\n```\r\n\r\nTry to setup filter and watch it fail\r\n\r\n```\r\n$ aws logs put-subscription-filter \\\r\n    --log-group-name /aws/lambda/my-function \\\r\n    --filter-name my-subscription \\\r\n    --filter-pattern=\"\" \\\r\n    --destination-arn arn:aws:lambda:us-east-1:000000000000:function:my-metrics\r\nAn error occurred (InvalidParameterException) when calling the PutSubscriptionFilter operation: Could not execute the lambda function. Make sure you have given CloudWatch Logs permission to execute your function.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2651", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2651/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2651/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2651/events", "html_url": "https://github.com/localstack/localstack/issues/2651", "id": 648087788, "node_id": "MDU6SXNzdWU2NDgwODc3ODg=", "number": 2651, "title": "LocalStack:Creation of route table with IPv6 is not working", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-06-30T11:13:48Z", "updated_at": "2020-07-14T19:17:01Z", "closed_at": "2020-07-12T12:54:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issue:\r\n\r\nCreation   of route table with IPv6 is not working\r\nCommand Used:\r\n\r\n- aws ec2 create-vpc --cidr-block 10.0.0.0/16 --amazon-provided-ipv6-cidr-block --endpoint-url=http://localhost:443   \r\n- aws ec2 describe-vpcs --vpc-id vpc-215c76da --endpoint-url=http://localhost:443\r\n- aws ec2 create-subnet --vpc-id vpc-215c76da --cidr-block 10.0.0.0/24 --ipv6-cidr-block 2001:db8:1234:1a00::/56 --endpoint-url=http://localhost:443\r\n- aws ec2 create-internet-gateway --endpoint-url=http://localhost:443\r\n- aws ec2 attach-internet-gateway --vpc-id vpc-215c76da --internet-gateway-id igw-41a58cc5 --endpoint-url=http://localstack:443\r\n- aws ec2 create-route-table --vpc-id vpc-215c76da --endpoint-url=http://localhost:443\r\n\r\n**Error in the below command. This command is run after the above commands are executed successfully.**\r\n aws ec2 create-route --route-table-id rtb-74d6caff --destination-ipv6-cidr-block ::/0 --gateway-id igw-41a58cc5 --endpoint-url=http://localhost:443 \r\n\r\nError- Not Valid CIDR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2650", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2650/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2650/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2650/events", "html_url": "https://github.com/localstack/localstack/issues/2650", "id": 648077914, "node_id": "MDU6SXNzdWU2NDgwNzc5MTQ=", "number": 2650, "title": "LocalStack: VPC end-point API is not working", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-30T10:57:09Z", "updated_at": "2020-08-13T01:17:43Z", "closed_at": "2020-08-12T20:59:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "LocalStack: VPC end-point API is not working\r\n\r\nCommand Used: \r\naws ec2 describe-vpc-endpoint-services --endpoint-url=http://localhost:443\r\n\r\nActual Error:\r\nUnable to parse response (syntax error: line 1, column 54), invalid XML received. Further retries may succeed:\r\nb'<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n'\r\n\r\nDocker Log:\r\n NotImplementedError: The describe_vpc_endpoint_services action has not been implemented", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2649", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2649/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2649/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2649/events", "html_url": "https://github.com/localstack/localstack/issues/2649", "id": 648068781, "node_id": "MDU6SXNzdWU2NDgwNjg3ODE=", "number": 2649, "title": "IAM Attached Policies Issues", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 798260296, "node_id": "MDU6TGFiZWw3OTgyNjAyOTY=", "url": "https://api.github.com/repos/localstack/localstack/labels/diverges-from-aws", "name": "diverges-from-aws", "color": "34b5ba", "default": false, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-30T10:41:10Z", "updated_at": "2020-07-01T19:10:18Z", "closed_at": "2020-07-01T19:10:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Issue**\r\nWe attach policies to a role and when we try to list the policies attached to a role , we get null value as an output.\r\n**Command used**:\r\nCommand to create role:\r\naws iam create-role --role-name trust-role-2 --assume-role-policy-document file://trust-policy.json --endpoint-url=http://localhost:443 - Executed successfully:\r\n\r\nBut when we tried to list the associated policies on the same role we get null values.\r\nCommand Used:\r\naws iam list-attached-role-policies --role-name trust-role-1 --endpoint-url=http://localhost:443 \r\nOutput:\r\n {\r\n    \"AttachedPolicies\": []\r\n}\r\nExpected Result:\r\nPolicies should returned.\r\n\r\nThis is with the Pro Edition of LocalStack\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2647", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2647/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2647/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2647/events", "html_url": "https://github.com/localstack/localstack/issues/2647", "id": 647645665, "node_id": "MDU6SXNzdWU2NDc2NDU2NjU=", "number": 2647, "title": "Possible regression error with IAM Role Policy Document", "user": {"login": "rpattcorner", "id": 1488518, "node_id": "MDQ6VXNlcjE0ODg1MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1488518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpattcorner", "html_url": "https://github.com/rpattcorner", "followers_url": "https://api.github.com/users/rpattcorner/followers", "following_url": "https://api.github.com/users/rpattcorner/following{/other_user}", "gists_url": "https://api.github.com/users/rpattcorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpattcorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpattcorner/subscriptions", "organizations_url": "https://api.github.com/users/rpattcorner/orgs", "repos_url": "https://api.github.com/users/rpattcorner/repos", "events_url": "https://api.github.com/users/rpattcorner/events{/privacy}", "received_events_url": "https://api.github.com/users/rpattcorner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-29T20:29:57Z", "updated_at": "2020-07-02T21:05:20Z", "closed_at": "2020-07-02T18:01:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nOur project's automated tests which ran correctly as recently as 6/22/2020 are consistently failing at the point that we retrieve an IAM role and look into the AssumeRolePolicyDocument.  Rerunning a test marked as successful in GitLab now consistently fails, with no code change in the project.\r\n\r\nInvestigating, I see that after retrieving a role via boto3:\r\n`role_list = self.account_client.list_roles(PathPrefix='/' + asset_path + '/')[\"Roles\"]`\r\n\r\nthe AssumeRolePolicy document is no longer a proper string, but is instead a coded representation of the string:\r\n![image](https://user-images.githubusercontent.com/1488518/86050389-c9c46580-ba21-11ea-8f8b-46c96921505a.png)\r\n\r\nand failure proceeds from there.  Here's the actual string that's returned instead of the expected structure:\r\n`%22%2522%252522%25257B%25255C%252522Version%25255C%252522%25253A%252520%25255C%2525222012-10-17%25255C%252522%25252C%252520%25255C%252522Statement%25255C%252522%25253A%252520%25255B%25257B%25255C%252522Effect%25255C%252522%25253A%252520%25255C%252522Allow%25255C%252522%25252C%252520%25255C%252522Principal%25255C%252522%25253A%252520%25257B%25255C%252522AWS%25255C%252522%25253A%252520%25255B%25255D%25257D%25252C%252520%25255C%252522Action%25255C%252522%25253A%252520%25255C%252522sts%25253AAssumeRole%25255C%252522%25257D%25255D%25257D%252522%2522%22`\r\n\r\nIt looks like there's been a [commit recently](https://github.com/localstack/localstack/pull/2610) that affects the AssumeRolePolicy, and wonder (without evidence other than timing and area of code) if there might have been an undesirable side effect.\r\n\r\nAnother possibility ... because we run localstack in pytest using the [pytest-localstack](https://github.com/mintel/pytest-localstack) framework there's the chance things are now out of sync with the change.  As pytest-localstack isn't updated as frequently as localstack, if this is the likely problem it would be helpful if there are pointers on other ways to run localstack in a pytest framework\r\n\r\n## Expected behavior\r\nExpect role retrieval to produce a proper string in AssumeRolePolicy along the following lines (this is a run against actual AWS using same code):\r\n![image](https://user-images.githubusercontent.com/1488518/86051679-cc27bf00-ba23-11ea-9410-cde4a34a8d4d.png)\r\n\r\nAs you see, the AssumeRolePolicy is represented as an ordinary python structure instead of the coded string\r\n\r\n## Actual behavior\r\nRole retrieval yields a structure in expected behaviour\r\n\r\n# Steps to reproduce\r\n1. Acquire an IAM boto3 client in mock\r\n2. Get some roles and look at them\r\n3. Either observe the AssumeRolePolicyDocument in a debugger or print, or attempt to access it and fail because the structure returned is corrupt\r\n\r\n## Command used to start LocalStack\r\nStarted via pytest-localstack\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n```\r\n        role_list = .account_client.list_roles(PathPrefix='/' + asset_path + '/')[\"Roles\"]\r\n        role_dict = {}\r\n        for role in role_list:  # Format assume_principals as a list to enable comparisons and add role to dict\r\n            assume_principals = role[\"AssumeRolePolicyDocument\"][\"Statement\"][0][\"Principal\"][\"AWS\"]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2646", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2646/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2646/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2646/events", "html_url": "https://github.com/localstack/localstack/issues/2646", "id": 647583622, "node_id": "MDU6SXNzdWU2NDc1ODM2MjI=", "number": 2646, "title": "Add filters to ec2 describe-instances", "user": {"login": "srakhe-uptycs", "id": 65526586, "node_id": "MDQ6VXNlcjY1NTI2NTg2", "avatar_url": "https://avatars1.githubusercontent.com/u/65526586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srakhe-uptycs", "html_url": "https://github.com/srakhe-uptycs", "followers_url": "https://api.github.com/users/srakhe-uptycs/followers", "following_url": "https://api.github.com/users/srakhe-uptycs/following{/other_user}", "gists_url": "https://api.github.com/users/srakhe-uptycs/gists{/gist_id}", "starred_url": "https://api.github.com/users/srakhe-uptycs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srakhe-uptycs/subscriptions", "organizations_url": "https://api.github.com/users/srakhe-uptycs/orgs", "repos_url": "https://api.github.com/users/srakhe-uptycs/repos", "events_url": "https://api.github.com/users/srakhe-uptycs/events{/privacy}", "received_events_url": "https://api.github.com/users/srakhe-uptycs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 660698194, "node_id": "MDU6TGFiZWw2NjA2OTgxOTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/feature-missing", "name": "feature-missing", "color": "d4c5f9", "default": false, "description": null}, {"id": 752344656, "node_id": "MDU6TGFiZWw3NTIzNDQ2NTY=", "url": "https://api.github.com/repos/localstack/localstack/labels/pr-requested", "name": "pr-requested", "color": "1e8e0f", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-29T18:38:02Z", "updated_at": "2020-07-19T22:39:12Z", "closed_at": "2020-07-19T22:39:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n\r\n# Detailed description\r\n\r\nLocalstack does not return expected output when using filters on describe-instances in ec2.\r\n...\r\n\r\n## Expected behavior\r\n\r\nCommand:\r\n`aws --endpoint-url=http://localhost:4566 ec2 describe-instances --filters owner-id=111111111111`\r\n\r\nOutput:\r\n\r\n`{\r\n    \"Reservations\": [\r\n        {\r\n            \"Groups\": [],\r\n            \"Instances\": [\r\n                {\r\n                    \"AmiLaunchIndex\": 0,\r\n                    \"ImageId\": \"ami-00dc79254d1111110\",\r\n                    \"InstanceId\": \"i-00d11111111111a80\",\r\n                    \"InstanceType\": \"t2.micro\",\r\n                    \"KeyName\": \"newdemo\",\r\n                    \"LaunchTime\": \"2020-04-29T20:58:13+00:00\",\r\n                    \"Monitoring\": {\r\n                        \"State\": \"disabled\"\r\n                    },\r\n                    \"Placement\": {\r\n                        \"AvailabilityZone\": \"us-east-1\",\r\n                        \"GroupName\": \"\",\r\n                        \"Tenancy\": \"default\"\r\n                    },\r\n                    \"PrivateDnsName\": \"ip-11-11-0-11.ec2.internal\",\r\n                    \"PrivateIpAddress\": \"11.1.1.11\",\r\n                    \"ProductCodes\": [],\r\n                    \"PublicDnsName\": \"ec2-12-12-12-12.com\",\r\n                    \"PublicIpAddress\": \"12.12.12.12\",\r\n                    \"State\": {\r\n                        \"Code\": 16,\r\n                        \"Name\": \"running\"\r\n                    },\r\n                    \"StateTransitionReason\": \"\",\r\n                    \"SubnetId\": \"subnet-123123123123\",\r\n                    \"VpcId\": \"vpc-0db1111111dfcd698\",\r\n                    \"Architecture\": \"x86_64\",\r\n                    \"BlockDeviceMappings\": [\r\n                        {\r\n                            \"DeviceName\": \"/dev/xvda\",\r\n                            \"Ebs\": {\r\n                                \"AttachTime\": \"2020-04-29T20:58:14+00:00\",\r\n                                \"DeleteOnTermination\": true,\r\n                                \"Status\": \"attached\",\r\n                                \"VolumeId\": \"vol-011111111111db\"\r\n                            }\r\n                        },\r\n                        {\r\n                            \"DeviceName\": \"/dev/sdh\",\r\n                            \"Ebs\": {\r\n                                \"AttachTime\": \"2020-04-29T20:58:33+00:00\",\r\n                                \"DeleteOnTermination\": false,\r\n                                \"Status\": \"attached\",\r\n                                \"VolumeId\": \"vol-01550111111111\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    \"ClientToken\": \"newde-Asset-SVLAMZZZZIS8\",\r\n                    \"EbsOptimized\": false,\r\n                    \"EnaSupport\": true,\r\n                    \"Hypervisor\": \"xen\",\r\n                    \"IamInstanceProfile\": {\r\n                        \"Arn\": \"arn:aws:iam::111111111111:instance-profile/newdemo-EC2InstanceProfile-111O011110315\",\r\n                        \"Id\": \"AAAA5SBBSGA7EQJFSPQUK\"\r\n                    },\r\n                    \"NetworkInterfaces\": [\r\n                        {\r\n                            \"Association\": {\r\n                                \"IpOwnerId\": \"amazon\",\r\n                                \"PublicDnsName\": \"ec2-12-12-12-12.compute-1.amazonaws.com\",\r\n                                \"PublicIp\": \"12.12.12.12\"\r\n                            },\r\n                            \"Attachment\": {\r\n                                \"AttachTime\": \"2020-04-29T20:58:13+00:00\",\r\n                                \"AttachmentId\": \"eni-attach-073515afbc6904407\",\r\n                                \"DeleteOnTermination\": true,\r\n                                \"DeviceIndex\": 0,\r\n                                \"Status\": \"attached\"\r\n                            },\r\n                            \"Description\": \"\",\r\n                            \"Groups\": [\r\n                                {\r\n                                    \"GroupName\": \"WebSg\",\r\n                                    \"GroupId\": \"sg-062f17a512d3a9d6f\"\r\n                                }\r\n                            ],\r\n                            \"Ipv6Addresses\": [],\r\n                            \"MacAddress\": \"0e:cf:ae:23:9b:e1\",\r\n                            \"NetworkInterfaceId\": \"eni-0c65394d55862590c\",\r\n                            \"OwnerId\": \"921341669438\",\r\n                            \"PrivateDnsName\": \"ip-17-1-0-14.ec2.internal\",\r\n                            \"PrivateIpAddress\": \"17.1.0.14\",\r\n                            \"PrivateIpAddresses\": [\r\n                                {\r\n                                    \"Association\": {\r\n                                        \"IpOwnerId\": \"amazon\",\r\n                                        \"PublicDnsName\": \"ec2-12-12-12-12.compute-1.amazonaws.com\",\r\n                                        \"PublicIp\": \"12.12.12.12\"\r\n                                    },\r\n                                    \"Primary\": true,\r\n                                    \"PrivateDnsName\": \"ip-17-1-0-14.ec2.internal\",\r\n                                    \"PrivateIpAddress\": \"17.1.0.14\"\r\n                                }\r\n                            ],\r\n                            \"SourceDestCheck\": true,\r\n                            \"Status\": \"in-use\",\r\n                            \"SubnetId\": \"subnet-0024788cf4e41d62d\",\r\n                            \"VpcId\": \"vpc-0db5918790dfcd698\",\r\n                            \"InterfaceType\": \"interface\"\r\n                        }\r\n                    ],\r\n                    \"RootDeviceName\": \"/dev/xvda\",\r\n                    \"RootDeviceType\": \"ebs\",\r\n                    \"SecurityGroups\": [\r\n                        {\r\n                            \"GroupName\": \"WebSg\",\r\n                            \"GroupId\": \"sg-062f17a512d3a9d6f\"\r\n                        }\r\n                    ],\r\n                    \"SourceDestCheck\": true,\r\n                    \"Tags\": [\r\n                        {\r\n                            \"Key\": \"Name\",\r\n                            \"Value\": \"newdemo-us-east-1-asset05\"\r\n                        },\r\n                        {\r\n                            \"Key\": \"aws:cloudformation:stack-name\",\r\n                            \"Value\": \"newdemo\"\r\n                        },\r\n                        {\r\n                            \"Key\": \"aws:cloudformation:logical-id\",\r\n                            \"Value\": \"Asset05\"\r\n                        },\r\n                        {\r\n                            \"Key\": \"aws:cloudformation:stack-id\",\r\n                            \"Value\": \"arn:aws:cloudformation:us-east-1:111111111111:stack/newdemo/c98a1bf0-8a5b-11ea-a486-0ee1cf96ccc3\"\r\n                        }\r\n                    ],\r\n                    \"VirtualizationType\": \"hvm\",\r\n                    \"CpuOptions\": {\r\n                        \"CoreCount\": 1,\r\n                        \"ThreadsPerCore\": 1\r\n                    },\r\n                    \"CapacityReservationSpecification\": {\r\n                        \"CapacityReservationPreference\": \"open\"\r\n                    },\r\n                    \"HibernationOptions\": {\r\n                        \"Configured\": false\r\n                    },\r\n                    \"MetadataOptions\": {\r\n                        \"State\": \"applied\",\r\n                        \"HttpTokens\": \"optional\",\r\n                        \"HttpPutResponseHopLimit\": 1,\r\n                        \"HttpEndpoint\": \"enabled\"\r\n                    }\r\n                }\r\n            ],\r\n            \"OwnerId\": \"111111111111\",\r\n            \"RequesterId\": \"222222222222\",\r\n            \"ReservationId\": \"r-133354efc510b434t\"\r\n        }\r\n    ]\r\n}`\r\n\r\n...\r\n\r\n## Actual behavior\r\n\r\nCommand used:\r\n`aws --endpoint-url=http://localhost:4566 ec2 describe-instances --filters Name=owner-id Values=000000000000`\r\n(owner-id is 000000000000 by default in ec2 instance for localstack)\r\n\r\nOutput:\r\n```\r\nUnable to parse response (syntax error: line 1, column 54), invalid XML received. Further retries may succeed:\r\nb'<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n'\r\n```\r\n\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\nStarted localstack locally with `make infra` and also tried with docker: `sudo docker-compose up`\r\n\r\n## Instance creation and verification:\r\n\r\nInstance created with `run-instances` and the creation was verified using `describe-instances`\r\n\r\n\r\n\r\n...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2643", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2643/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2643/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2643/events", "html_url": "https://github.com/localstack/localstack/issues/2643", "id": 647445336, "node_id": "MDU6SXNzdWU2NDc0NDUzMzY=", "number": 2643, "title": "SNS does not send Notifications", "user": {"login": "andyautida14", "id": 10094583, "node_id": "MDQ6VXNlcjEwMDk0NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/10094583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyautida14", "html_url": "https://github.com/andyautida14", "followers_url": "https://api.github.com/users/andyautida14/followers", "following_url": "https://api.github.com/users/andyautida14/following{/other_user}", "gists_url": "https://api.github.com/users/andyautida14/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyautida14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyautida14/subscriptions", "organizations_url": "https://api.github.com/users/andyautida14/orgs", "repos_url": "https://api.github.com/users/andyautida14/repos", "events_url": "https://api.github.com/users/andyautida14/events{/privacy}", "received_events_url": "https://api.github.com/users/andyautida14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-29T14:55:45Z", "updated_at": "2020-07-22T03:52:10Z", "closed_at": "2020-07-22T03:51:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nSNS send SubscriptionNotifications and allows confirmation of subscription, but doesn't send Notifications to the subscriber when a publisher publishes to a topic.\r\n\r\n\r\n## Expected behavior\r\nSNS sends Notification when a publisher publishes to a topic\r\n\r\n## Actual behavior\r\nSNS does not send Notification to the subscriber\r\n\r\n# Steps to reproduce\r\n1. Copy the client code below to a file (e.g., replicate.js)\r\n2. Run `npm init` and `npm install aws-sdk express body-parser`\r\n3. On terminal, run the Command used to start LocalStack below\r\n4. On another terminal, run the script `node replicate.js`\r\n\r\n## Command used to start LocalStack\r\n`DEBUG=* SERVICES=sns localstack start`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n```js\r\nconst AWS = require('aws-sdk')\r\nconst express = require('express')\r\nconst bodyParser = require('body-parser')\r\n\r\nconst sns = new AWS.SNS({\r\n  endpoint: 'http://localhost:4566',\r\n  region: 'us-east-1'\r\n})\r\n\r\nconst app = express()\r\n\r\napp.post('/sns-endpoint', bodyParser.json({\r\n  type: 'text/plain'\r\n}), async (req, res) => {\r\n  if(req.headers['x-amz-sns-message-type'] === 'SubscriptionConfirmation') {\r\n    console.log('subscription confirmation:', req.body)\r\n    const { Token, TopicArn } = req.body\r\n    const result = await sns.confirmSubscription({\r\n      Token, TopicArn\r\n    }).promise()\r\n    console.log('subscription confirmation result:', result)\r\n    res.status(204).send()\r\n  } else {\r\n    console.log('subscription notification:', req.body)\r\n    res.res.status(204).send()\r\n  }\r\n})\r\n\r\napp.listen(1337, async () => {\r\n  const create = await sns.createTopic({\r\n    Name: 'sample-topic'\r\n  }).promise()\r\n  console.log('created topic:', create)\r\n  const { TopicArn } = create\r\n  const subscription = await sns.subscribe({\r\n    TopicArn, Protocol: 'http',\r\n    Endpoint: 'http://host.docker.internal:1337/sns-endpoint'\r\n  }).promise()\r\n  console.log('subscription result:', subscription)\r\n  setTimeout(async () => {\r\n    const publish = await sns.publish({\r\n      TopicArn, MessageStructure: 'json',\r\n      Message: '{ \"some\": \"message\" }'\r\n    }).promise()\r\n    console.log('publish result:', publish)\r\n  }, 5000)\r\n})\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2636", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2636/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2636/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2636/events", "html_url": "https://github.com/localstack/localstack/issues/2636", "id": 646946313, "node_id": "MDU6SXNzdWU2NDY5NDYzMTM=", "number": 2636, "title": "Not able to connect with EMR service", "user": {"login": "uyadavv", "id": 67515639, "node_id": "MDQ6VXNlcjY3NTE1NjM5", "avatar_url": "https://avatars1.githubusercontent.com/u/67515639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uyadavv", "html_url": "https://github.com/uyadavv", "followers_url": "https://api.github.com/users/uyadavv/followers", "following_url": "https://api.github.com/users/uyadavv/following{/other_user}", "gists_url": "https://api.github.com/users/uyadavv/gists{/gist_id}", "starred_url": "https://api.github.com/users/uyadavv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uyadavv/subscriptions", "organizations_url": "https://api.github.com/users/uyadavv/orgs", "repos_url": "https://api.github.com/users/uyadavv/repos", "events_url": "https://api.github.com/users/uyadavv/events{/privacy}", "received_events_url": "https://api.github.com/users/uyadavv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-28T15:25:24Z", "updated_at": "2020-07-05T23:04:52Z", "closed_at": "2020-07-05T23:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a service/feature request\r\n\r\n\r\n# Detailed description\r\nI am trying to create EMR cluster in Pro version of Localstack but getting this error \" Could not connect to the endpoint URL: \"http://localhost:4600/\" \"\r\n\r\n...\r\n\r\n## Expected behavior\r\nCommand should get executed on EMR service and Create a cluster.\r\n...\r\n\r\n## Actual behavior\r\nCommand not getting executed.\r\n...\r\n\r\n# Steps to reproduce\r\n1. Start the Docker-Desktop.\r\n2. Then Start the localstack with \"Docker-compose up\" command.\r\n3. Execute the command on local machine:\r\naws --endpoint-url=http://localhost:4600 emr create-cluster --release-label emr-5.14.0 --instance-type m4.large --instance-count 2 \r\n\r\n## Command used to start LocalStack\r\ndocker-compose up\r\n...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2632", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2632/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2632/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2632/events", "html_url": "https://github.com/localstack/localstack/issues/2632", "id": 646602623, "node_id": "MDU6SXNzdWU2NDY2MDI2MjM=", "number": 2632, "title": "/health endpoint does not work when the edge port is mapped to localhost in docker", "user": {"login": "aaronjwhiteside", "id": 1084153, "node_id": "MDQ6VXNlcjEwODQxNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1084153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronjwhiteside", "html_url": "https://github.com/aaronjwhiteside", "followers_url": "https://api.github.com/users/aaronjwhiteside/followers", "following_url": "https://api.github.com/users/aaronjwhiteside/following{/other_user}", "gists_url": "https://api.github.com/users/aaronjwhiteside/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronjwhiteside/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronjwhiteside/subscriptions", "organizations_url": "https://api.github.com/users/aaronjwhiteside/orgs", "repos_url": "https://api.github.com/users/aaronjwhiteside/repos", "events_url": "https://api.github.com/users/aaronjwhiteside/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronjwhiteside/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-27T04:01:07Z", "updated_at": "2020-06-29T23:20:23Z", "closed_at": "2020-06-27T10:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n[x] bug report\r\n\r\n# Detailed description\r\n\r\nWhen using docker and mapping the edge port to a port on localhost, trying to verify that the service is runnig via checking http://localhost:<mapped port>/health always returns in 404.\r\n\r\n```\r\n2020-06-27T03:57:20:INFO:localstack.services.edge: Unable to find forwarding rule for host \"localhost:62907\", path \"/health?reload\", target header \"\", auth header \"\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2629", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2629/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2629/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2629/events", "html_url": "https://github.com/localstack/localstack/issues/2629", "id": 646524642, "node_id": "MDU6SXNzdWU2NDY1MjQ2NDI=", "number": 2629, "title": "DynamoDB: createTable gives invalid response when table already exists", "user": {"login": "svroonland", "id": 2190467, "node_id": "MDQ6VXNlcjIxOTA0Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2190467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svroonland", "html_url": "https://github.com/svroonland", "followers_url": "https://api.github.com/users/svroonland/followers", "following_url": "https://api.github.com/users/svroonland/following{/other_user}", "gists_url": "https://api.github.com/users/svroonland/gists{/gist_id}", "starred_url": "https://api.github.com/users/svroonland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svroonland/subscriptions", "organizations_url": "https://api.github.com/users/svroonland/orgs", "repos_url": "https://api.github.com/users/svroonland/repos", "events_url": "https://api.github.com/users/svroonland/events{/privacy}", "received_events_url": "https://api.github.com/users/svroonland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-26T21:37:09Z", "updated_at": "2020-06-30T18:40:15Z", "closed_at": "2020-06-28T22:17:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nWhen calling `DynamoDbAsyncClient.createTable` for a table that already exists, an empty `CreateTableResponse` is returned instead of an exception being thrown.\r\n\r\n...\r\n\r\n## Expected behavior\r\n\r\nResourceInUseException thrown\r\n\r\n...\r\n\r\n## Actual behavior\r\n\r\nEmpty `CreateTableResponse` object.\r\n\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\nDocker-compose for `localstack/localstack` with `dynamodb` enabled\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nclient.createTable(\"sdf\")\r\n\r\nclient.createTable(\"sdf\") // Should throw ResourceInUseException\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2626", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2626/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2626/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2626/events", "html_url": "https://github.com/localstack/localstack/issues/2626", "id": 646362578, "node_id": "MDU6SXNzdWU2NDYzNjI1Nzg=", "number": 2626, "title": "Small deviation in SQS implementation", "user": {"login": "pwoolcoc", "id": 620392, "node_id": "MDQ6VXNlcjYyMDM5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/620392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwoolcoc", "html_url": "https://github.com/pwoolcoc", "followers_url": "https://api.github.com/users/pwoolcoc/followers", "following_url": "https://api.github.com/users/pwoolcoc/following{/other_user}", "gists_url": "https://api.github.com/users/pwoolcoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwoolcoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwoolcoc/subscriptions", "organizations_url": "https://api.github.com/users/pwoolcoc/orgs", "repos_url": "https://api.github.com/users/pwoolcoc/repos", "events_url": "https://api.github.com/users/pwoolcoc/events{/privacy}", "received_events_url": "https://api.github.com/users/pwoolcoc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 798260296, "node_id": "MDU6TGFiZWw3OTgyNjAyOTY=", "url": "https://api.github.com/repos/localstack/localstack/labels/diverges-from-aws", "name": "diverges-from-aws", "color": "34b5ba", "default": false, "description": null}, {"id": 468888569, "node_id": "MDU6TGFiZWw0Njg4ODg1Njk=", "url": "https://api.github.com/repos/localstack/localstack/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-06-26T16:05:09Z", "updated_at": "2020-06-30T11:48:49Z", "closed_at": "2020-06-30T10:30:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nIn the `ReceiveMessageResult` of the SQS service, I saw this XML from localstack:\r\n\r\n```\r\n...\r\n<MessageAttribute>\r\n     <Name>encoding</Name>\r\n    <Value>\r\n        <DataType>String</DataType>\r\n        <StringValue><![CDATA[gzip]]></StringValue>\r\n    </Value>\r\n</MessageAttribute>\r\n...\r\n```\r\n\r\nThe `<![CDATA[gzip]]>` is slightly different from AWS, which doesn't wrap the value in a `<!CDATA[[]]>` section. This shouldn't be a problem for XML parsers that accept both plain characters and CDATA sections for this element, but the XML parser I was using did not, which causes an error when running the code against localstack but not when running the code against AWS. There is obviously a bug in the XML parser as well, but I thought that I should at least post this here since it is different than what AWS SQS does.\r\n\r\n## Expected behavior\r\n\r\nMessageAttribute::Value elements should not be wrapped in `CDATA` sections.\r\n\r\n## Actual behavior\r\n\r\nMessageAttribute::Value elements all seem to be wrapped in `CDATA` sections.\r\n\r\n# Steps to reproduce\r\n\r\nSend a message to the SQS service which contains some custom message attributes, then make a ReceiveMessageRequest.\r\n\r\n## Command used to start LocalStack\r\n\r\n`docker run --env \"SERVICES=sqs\" localstack/localstack`\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2624", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2624/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2624/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2624/events", "html_url": "https://github.com/localstack/localstack/issues/2624", "id": 646117545, "node_id": "MDU6SXNzdWU2NDYxMTc1NDU=", "number": 2624, "title": "Cloudformation deploy with (only) an IAM resource not working", "user": {"login": "mcintyre94", "id": 1711350, "node_id": "MDQ6VXNlcjE3MTEzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1711350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcintyre94", "html_url": "https://github.com/mcintyre94", "followers_url": "https://api.github.com/users/mcintyre94/followers", "following_url": "https://api.github.com/users/mcintyre94/following{/other_user}", "gists_url": "https://api.github.com/users/mcintyre94/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcintyre94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcintyre94/subscriptions", "organizations_url": "https://api.github.com/users/mcintyre94/orgs", "repos_url": "https://api.github.com/users/mcintyre94/repos", "events_url": "https://api.github.com/users/mcintyre94/events{/privacy}", "received_events_url": "https://api.github.com/users/mcintyre94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1545310297, "node_id": "MDU6TGFiZWwxNTQ1MzEwMjk3", "url": "https://api.github.com/repos/localstack/localstack/labels/cloudformation", "name": "cloudformation", "color": "b9eef7", "default": false, "description": ""}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}, {"id": 939237530, "node_id": "MDU6TGFiZWw5MzkyMzc1MzA=", "url": "https://api.github.com/repos/localstack/localstack/labels/usage", "name": "usage", "color": "0074b7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-26T08:58:53Z", "updated_at": "2020-06-28T09:03:16Z", "closed_at": "2020-06-28T09:03:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nI initially reported this on https://github.com/localstack/localstack/issues/2528, but the OP there has closed it as it's fixed on `latest` for them - so my issue is probably not a dupe of theirs. Figured it probably makes more sense to have a new issue and add some more details than to reopen their resolved one.\r\n\r\n## Expected behavior\r\n\r\nWhen I upload a template that contains an IAM resource using `cloudformation deploy`, the stack is created and the IAM role is created. There are no erorr messages and the exit code of the deploy command is 0.\r\n\r\n## Actual behavior\r\n\r\n**In the shell running `cloudformation deploy`:**\r\n\r\nI get an unexpected output:\r\n\r\n```\r\nWaiting for changeset to be created..\r\n\r\n'Status'\r\n```\r\n\r\nThe exit code is 255:\r\n\r\n```bash\r\n$ echo $?\r\n255\r\n```\r\n\r\nThe stack has been created:\r\n\r\n```bash\r\n$ awslocal cloudformation list-stacks\r\n{\r\n    \"StackSummaries\": [\r\n        {\r\n            \"StackId\": \"arn:aws:cloudformation:us-east-1:000000000000:stack/stack1/1b8fa922-273a-4a78-8ba2-b7cebc5b96bd\",\r\n            \"StackName\": \"stack1\",\r\n            \"TemplateDescription\": \"None\",\r\n            \"CreationTime\": \"2020-06-26T08:49:12Z\",\r\n            \"StackStatus\": \"CREATE_COMPLETE\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nIt has no resources:\r\n\r\n```bash\r\n$ awslocal cloudformation describe-stack-resources --stack-name stack1\r\n{\r\n    \"StackResources\": []\r\n}\r\n```\r\n\r\nThere are no IAM roles:\r\n\r\n```bash\r\n$  awslocal iam list-roles\r\n{\r\n    \"Roles\": []\r\n}\r\n```\r\n\r\n**In the localstack shell:**\r\n\r\n```\r\n2020-06-26T08:40:21:DEBUG:localstack.services.cloudformation.cloudformation_listener: Error response for CloudFormation action \"DescribeStacks\" (400) POST /: b'<ErrorResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\\n  <Error>\\n    <Type>Sender</Type>\\n    <Code>ValidationError</Code>\\n    <Message>Stack with id stack1 does not exist</Message>\\n  </Error>\\n  <RequestId>cf4c737e-5ae2-11e4-a7c9-ad44eEXAMPLE</RequestId>\\n</ErrorResponse>'\r\n2020-06-26T08:40:21:DEBUG:localstack.services.cloudformation.cloudformation_listener: Error response for CloudFormation action \"DescribeChangeSet\" (400) POST /: b'<ErrorResponse xmlns=\"http://cloudformation.amazonaws.com/doc/2010-05-15/\">\\n  <Error>\\n    <Type>Sender</Type>\\n    <Code>ValidationError</Code>\\n    <Message>Stack with id arn:aws:cloudformation:us-east-1:123456789:changeSet/awscli-cloudformation-package-deploy-1593160821/6a1125ec-9940-4c57-a516-6377832f0971 does not exist</Message>\\n  </Error>\\n  <RequestId>cf4c737e-5ae2-11e4-a7c9-ad44eEXAMPLE</RequestId>\\n</ErrorResponse>'\r\n```\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n```bash\r\nDEBUG=1 localstack start\r\n```\r\n\r\nI also tried manually running the `docker run` that translates to in case `localstack/localstack` wasn't latest:\r\n\r\n```bash\r\ndocker run -it -e DEFAULT_REGION=\"us-east-1\" -e TEST_AWS_ACCOUNT_ID=\"000000000000\" -e DEBUG=\"1\" -e LOCALSTACK_HOSTNAME=\"localhost\" -p 443:443 -p 4566:4566 --rm --privileged --name localstack_main -p 8080-8081:8080-8081 -p 4567-4617:4567-4617 -p 10000:10000  -v \"/private/var/folders/k6/s4wg10352ds18zzs_fc295r80000gn/T/localstack:/tmp/localstack\" -v \"/var/run/docker.sock:/var/run/docker.sock\" -e DOCKER_HOST=\"unix:///var/run/docker.sock\" -e HOST_TMP_FOLDER=\"/private/var/folders/k6/s4wg10352ds18zzs_fc295r80000gn/T/localstack\" \"localstack/localstack:latest\"\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\ntemplate.yaml:\r\n\r\n```yaml\r\nAWSTemplateFormatVersion: '2010-09-09'\r\n\r\nResources:\r\n  # IAM role for running the step function\r\n  ExecutionRole:\r\n    Type: \"AWS::IAM::Role\"\r\n    Properties:\r\n      AssumeRolePolicyDocument:\r\n        Version: \"2012-10-17\"\r\n        Statement:\r\n        - Effect: \"Allow\"\r\n          Principal:\r\n            Service: !Sub states.${AWS::Region}.amazonaws.com\r\n          Action: \"sts:AssumeRole\"\r\n      Policies:\r\n      - PolicyName: StatesExecutionPolicy\r\n        PolicyDocument:\r\n          Version: \"2012-10-17\"\r\n          Statement:\r\n          - Effect: Allow\r\n            Action: \"lambda:InvokeFunction\"\r\n            Resource: \"*\"\r\n```\r\n\r\nDeploy command:\r\n\r\n`awslocal cloudformation deploy --stack-name stack1 --template-file cfntest.yml --capabilities CAPABILITY_IAM`\r\n\r\nIf I instead use the `create-stack` command, then that works perfectly: \r\n\r\n`awslocal cloudformation create-stack --stack-name stack1 --template-body file://template.yaml --capabilities CAPABILITY_IAM`\r\n\r\nThis is a workable workaround, but for a more complex stack with parameters the `deploy` equivalent is significantly nicer to use.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2623", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2623/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2623/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2623/events", "html_url": "https://github.com/localstack/localstack/issues/2623", "id": 646038550, "node_id": "MDU6SXNzdWU2NDYwMzg1NTA=", "number": 2623, "title": "local stack started but getting the issue as  permission denied: /tmp/localstack/server.test.pem", "user": {"login": "RSHUKL01", "id": 65276850, "node_id": "MDQ6VXNlcjY1Mjc2ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/65276850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RSHUKL01", "html_url": "https://github.com/RSHUKL01", "followers_url": "https://api.github.com/users/RSHUKL01/followers", "following_url": "https://api.github.com/users/RSHUKL01/following{/other_user}", "gists_url": "https://api.github.com/users/RSHUKL01/gists{/gist_id}", "starred_url": "https://api.github.com/users/RSHUKL01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RSHUKL01/subscriptions", "organizations_url": "https://api.github.com/users/RSHUKL01/orgs", "repos_url": "https://api.github.com/users/RSHUKL01/repos", "events_url": "https://api.github.com/users/RSHUKL01/events{/privacy}", "received_events_url": "https://api.github.com/users/RSHUKL01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T06:23:25Z", "updated_at": "2020-06-26T19:19:47Z", "closed_at": "2020-06-26T19:19:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ ] bug report\r\n\r\n\r\n# Detailed description\r\nlocal stack started but getting the issue as  permission denied: /tmp/localstack/server.test.pem\r\n...\r\n\r\n## Expected behavior\r\nRun without error\r\n...\r\n\r\n# Steps to reproduce\r\nUse my docker compose yaml file below\r\nversion: '2.1'\r\nservices:\r\n  localstack:\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"53:53\"\r\n      - \"443:443\"\r\n      - \"4510-4520:4510-4520\"\r\n      - \"4566-4620:4566-4620\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - LOCALSTACK_API_KEY=2kgAL1q5TV\r\n      - SERVICES=s3,emr,ec2,cloudformation\r\n      - DEBUG=1\r\n      - DATA_DIR=/tmp/localstack/data\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - HOSTNAME=localhost localstack start\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n      \r\n    \r\n## Command used to start LocalStack\r\ndocker-compose up\r\n\r\nError: [Errno 13] Permission denied: '/tmp/localstack/server.test.pem.key'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2620", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2620/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2620/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2620/events", "html_url": "https://github.com/localstack/localstack/issues/2620", "id": 645708377, "node_id": "MDU6SXNzdWU2NDU3MDgzNzc=", "number": 2620, "title": "Add SQS as target in EventBridge", "user": {"login": "alyyousuf7", "id": 14050128, "node_id": "MDQ6VXNlcjE0MDUwMTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/14050128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alyyousuf7", "html_url": "https://github.com/alyyousuf7", "followers_url": "https://api.github.com/users/alyyousuf7/followers", "following_url": "https://api.github.com/users/alyyousuf7/following{/other_user}", "gists_url": "https://api.github.com/users/alyyousuf7/gists{/gist_id}", "starred_url": "https://api.github.com/users/alyyousuf7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alyyousuf7/subscriptions", "organizations_url": "https://api.github.com/users/alyyousuf7/orgs", "repos_url": "https://api.github.com/users/alyyousuf7/repos", "events_url": "https://api.github.com/users/alyyousuf7/events{/privacy}", "received_events_url": "https://api.github.com/users/alyyousuf7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-25T16:44:20Z", "updated_at": "2020-06-29T20:22:02Z", "closed_at": "2020-06-29T20:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n[ ] feature request\r\n\r\n# Detailed description\r\nI'm not able to register SQS target to EventBridge scheduled rule. The issue is exactly the same as my previous issue #2460, but that was for SNS as a target.\r\n\r\nI wish to send a configured input (a constant JSON), instead of the EventBridge's own message to the SQS.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2619", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2619/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2619/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2619/events", "html_url": "https://github.com/localstack/localstack/issues/2619", "id": 645670373, "node_id": "MDU6SXNzdWU2NDU2NzAzNzM=", "number": 2619, "title": "Use latest dynamodb local", "user": {"login": "crash7", "id": 1450075, "node_id": "MDQ6VXNlcjE0NTAwNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1450075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crash7", "html_url": "https://github.com/crash7", "followers_url": "https://api.github.com/users/crash7/followers", "following_url": "https://api.github.com/users/crash7/following{/other_user}", "gists_url": "https://api.github.com/users/crash7/gists{/gist_id}", "starred_url": "https://api.github.com/users/crash7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crash7/subscriptions", "organizations_url": "https://api.github.com/users/crash7/orgs", "repos_url": "https://api.github.com/users/crash7/repos", "events_url": "https://api.github.com/users/crash7/events{/privacy}", "received_events_url": "https://api.github.com/users/crash7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-25T15:48:49Z", "updated_at": "2020-07-01T13:19:08Z", "closed_at": "2020-06-26T17:16:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[x] feature request\r\n\r\n# Detailed description\r\n\r\nHello! \r\n\r\nI'm trying to use the latest dynamodb local build with localstack (because I need the empty sets feature that they added in the last one) and I found that the version is fixed to an old one because of an issue in the docker version:\r\n\r\n```\r\ndynamodb_url = DYNAMODB_JAR_URL_ALPINE if in_docker() else DYNAMODB_JAR_URL\r\n```\r\nand\r\n```\r\n# TODO: Temporarily using a fixed version of DDB in Alpine, as we're hitting a SIGSEGV JVM crash with latest\r\nDYNAMODB_JAR_URL_ALPINE = 'https://github.com/whummer/dynamodb-local/raw/master/etc/DynamoDBLocal.zip'\r\nDYNAMODB_JAR_URL = 'https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.zip'\r\n```\r\n\r\nThe actual crash:\r\n```\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x000000000000d7c6, pid=702, tid=0x00007f2d7f8f2b20\r\n#\r\n# JRE version: OpenJDK Runtime Environment (8.0_242-b08) (build 1.8.0_242-b08)\r\n# Java VM: OpenJDK 64-Bit Server VM (25.242-b08 mixed mode linux-amd64 compressed oops)\r\n# Derivative: IcedTea 3.15.0\r\n# Distribution: Custom build (Wed Jan 29 10:43:50 UTC 2020)\r\n# Problematic frame:\r\n# C  0x000000000000d7c6\r\n....\r\n```\r\n\r\nSo far, seems that when localstack starts the jar in that particular port, it crashes, but using another port it works fine:\r\n```\r\n$ java -Djava.library.path=./DynamoDBLocal_lib -Xmx256m -jar DynamoDBLocal.jar -sharedDb -port 41645 -dbPath /tmp/localstack/data/dynamodb # this crashes\r\n\r\n$ java -Djava.library.path=./DynamoDBLocal_lib -Xmx256m -jar DynamoDBLocal.jar -sharedDb -port 42645 -dbPath /tmp/localstack/data/dynamodb # this works\r\n```\r\n\r\nMy question is: why? Is this related with the proxy? Any insight would be great.\r\n\r\n# Localstack version\r\nTested with tags 0.11.2 and 0.8.6, but doesn't seem to matter since the zip is downloaded on start.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2618", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2618/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2618/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2618/events", "html_url": "https://github.com/localstack/localstack/issues/2618", "id": 645592430, "node_id": "MDU6SXNzdWU2NDU1OTI0MzA=", "number": 2618, "title": "localstack SSM service giving ERROR", "user": {"login": "eerajoshi", "id": 67425607, "node_id": "MDQ6VXNlcjY3NDI1NjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/67425607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eerajoshi", "html_url": "https://github.com/eerajoshi", "followers_url": "https://api.github.com/users/eerajoshi/followers", "following_url": "https://api.github.com/users/eerajoshi/following{/other_user}", "gists_url": "https://api.github.com/users/eerajoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/eerajoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eerajoshi/subscriptions", "organizations_url": "https://api.github.com/users/eerajoshi/orgs", "repos_url": "https://api.github.com/users/eerajoshi/repos", "events_url": "https://api.github.com/users/eerajoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/eerajoshi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1722356689, "node_id": "MDU6TGFiZWwxNzIyMzU2Njg5", "url": "https://api.github.com/repos/localstack/localstack/labels/region-issue", "name": "region-issue", "color": "ffe049", "default": false, "description": ""}, {"id": 577894037, "node_id": "MDU6TGFiZWw1Nzc4OTQwMzc=", "url": "https://api.github.com/repos/localstack/localstack/labels/upstream-issue", "name": "upstream-issue", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-06-25T14:06:12Z", "updated_at": "2020-07-18T18:49:36Z", "closed_at": "2020-07-18T18:49:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This seems to be a bug \r\n\r\n# Detailed description\r\nI am trying to execute \u201caws ssm\u201d command on localstack. Getting below mentioned error -\r\n\r\nSteps:\r\n1.\tCreate EC2 instance on localstack.\r\n2.\tExecute command on above created instance id\r\nCommand on local machine- \r\nC:\\Users\\esongara>aws  --endpoint-url=http://localhost:4566 ssm send-command --instance-ids \"i-09fad7d0571cdfba0\" --document-name \"AWS-RunShellScript\" --comment \"IP config\" --parameters commands=\"ifconfig\" --output text\r\n\r\nAn error occurred (500) when calling the SendCommand operation (reached max retries: 2): <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n\r\nPlease let me know, how I can resolve this error. It would be really helpful. I also dropped a mail on info@localstack.cloud id. But no one reverted back....\r\n\r\n## Expected behaviour\r\nCommand should get executed on EC2...\r\n\r\n## Actual behavior\r\nCommand not getting executed on EC2...instead 500 ERROR is coming\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\ndocker-compose up\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n1.\tCreate EC2 instance on localstack.\r\n2.\tExecute command on above created instance id\r\nCommand on local machine- \r\nC:\\Users\\esongara>aws  --endpoint-url=http://localhost:4566 ssm send-command --instance-ids \"i-09fad7d0571cdfba0\" --document-name \"AWS-RunShellScript\" --comment \"IP config\" --parameters commands=\"ifconfig\" --output text\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2617", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2617/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2617/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2617/events", "html_url": "https://github.com/localstack/localstack/issues/2617", "id": 645491064, "node_id": "MDU6SXNzdWU2NDU0OTEwNjQ=", "number": 2617, "title": "Error Creating Function with DynamoStream Event", "user": {"login": "beldougie", "id": 1800508, "node_id": "MDQ6VXNlcjE4MDA1MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1800508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beldougie", "html_url": "https://github.com/beldougie", "followers_url": "https://api.github.com/users/beldougie/followers", "following_url": "https://api.github.com/users/beldougie/following{/other_user}", "gists_url": "https://api.github.com/users/beldougie/gists{/gist_id}", "starred_url": "https://api.github.com/users/beldougie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beldougie/subscriptions", "organizations_url": "https://api.github.com/users/beldougie/orgs", "repos_url": "https://api.github.com/users/beldougie/repos", "events_url": "https://api.github.com/users/beldougie/events{/privacy}", "received_events_url": "https://api.github.com/users/beldougie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1545310297, "node_id": "MDU6TGFiZWwxNTQ1MzEwMjk3", "url": "https://api.github.com/repos/localstack/localstack/labels/cloudformation", "name": "cloudformation", "color": "b9eef7", "default": false, "description": ""}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}, {"id": 1545309981, "node_id": "MDU6TGFiZWwxNTQ1MzA5OTgx", "url": "https://api.github.com/repos/localstack/localstack/labels/serverless", "name": "serverless", "color": "a9f939", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-25T11:37:51Z", "updated_at": "2020-06-29T12:38:50Z", "closed_at": "2020-06-28T18:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nUsing serverless & the localstack/localstack:latest docker image (released 12 hours ago at time of creating this issue according to docker-hub), a previously correctly working cloudformation stack that creates a DynamoDB table with a DynamoStream that feeds the event source of a lambda function fails to deploy if we use the :latest version of the docker image.\r\n...\r\n\r\n## Expected behavior\r\nIt should deploy the stack to localstack correctly.\r\n...\r\n\r\n## Actual behavior\r\nIt does not deploy the stack correctly, and serverless raises an error 'Invalid EventSourceArn'. This goes away if I pin mydocker image to version 0.11.2 and the stack is deployed correctly.\r\n...\r\n\r\n# Steps to reproduce\r\n\r\nWe use docker compose to run localstack. Our docker-compose file looks like:\r\n\r\n```\r\nversion: '2.1'\r\n\r\nservices:\r\n  localstack:\r\n    container_name: \"${LOCALSTACK_DOCKER_NAME-localstack_main}\"\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4566-4599:4566-4599\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - SERVICES=${SERVICES- }\r\n      - DEBUG=${DEBUG- }\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - HOST_TMP_FOLDER=${TMPDIR}\r\n      - LAMBDA_REMOTE_DOCKER=${LAMBDA_REMOTE_DOCKER-}\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\nWe use a script that calls `docker-compose up -d`\r\n\r\nWe then call a standard `serverless deploy` command to deploy our stacks into localstack to create the application. Everything worked perfectly until this morning when one of my colleagues decided to prune his docker images and, therefore pulled the latest image down. Of course, the fact that the failure was caused by localstack wasn't immediately obvious, but this has cost an entire man-day to track down the problem. \r\n\r\nPlease revert the latest image to 0.11.2 until you have it working.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2616", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2616/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2616/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2616/events", "html_url": "https://github.com/localstack/localstack/issues/2616", "id": 645309702, "node_id": "MDU6SXNzdWU2NDUzMDk3MDI=", "number": 2616, "title": "Error 500 when getting shard iterator in dynamodb stream", "user": {"login": "JavierGarciaGarciaPiksel", "id": 48123995, "node_id": "MDQ6VXNlcjQ4MTIzOTk1", "avatar_url": "https://avatars2.githubusercontent.com/u/48123995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JavierGarciaGarciaPiksel", "html_url": "https://github.com/JavierGarciaGarciaPiksel", "followers_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/followers", "following_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/following{/other_user}", "gists_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/subscriptions", "organizations_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/orgs", "repos_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/repos", "events_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/events{/privacy}", "received_events_url": "https://api.github.com/users/JavierGarciaGarciaPiksel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-25T08:14:42Z", "updated_at": "2020-06-29T04:51:05Z", "closed_at": "2020-06-28T20:57:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nI'm getting a 500 error (Internal error) when I try to get a shard iterator for a dynamodb stream\r\n\r\n`aws --endpoint-url=http://localhost:4566 dynamodbstreams get-shard-iterator --stream-arn arn:aws:dynamodb:us-east-1:000000000000:table/metadata_local/stream/2020-06-25T07:27:58.128 --shard-id shardId-00000001593000000000-000000000000 --shard-iterator-type LATEST`\r\n\r\nAn error occurred (500) when calling the GetShardIterator operation (reached max retries: 4): <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n\r\n## Expected behavior\r\n\r\nGet shard iterator\r\n\r\n## Actual behavior\r\n\r\nGet an internal error\r\n\r\n# Steps to reproduce\r\n\r\n1. Create dynamodb table with stream enabled\r\n2. List streams:\r\n`aws --endpoint-url=http://localhost:4566 dynamodbstreams list-streams\r\n{\r\n    \"Streams\": [\r\n        {\r\n            \"TableName\": \"metadata_local\",\r\n            \"StreamArn\": \"arn:aws:dynamodb:us-east-1:000000000000:table/metadata_local/stream/2020-06-25T07:27:58.128\",\r\n            \"StreamLabel\": \"2020-06-25T07:27:58.128\"\r\n        }\r\n    ]\r\n}`\r\n3. Describe stream\r\n`aws --endpoint-url=http://localhost:4566 dynamodbstreams describe-stream --stream-arn arn:aws:dynamodb:us-east-1:000000000000:table/metadata_local/stream/2020-06-25T07:27:58.128                                                     2 \u21b5\r\n{\r\n    \"StreamDescription\": {\r\n        \"StreamLabel\": \"2020-06-25T07:27:58.128\",\r\n        \"StreamStatus\": \"ENABLED\",\r\n        \"TableName\": \"metadata_local\",\r\n        \"Shards\": [\r\n            {\r\n                \"ShardId\": \"shardId-00000001593000000000-000000000000\",\r\n                \"SequenceNumberRange\": {\r\n                    \"StartingSequenceNumber\": \"49608283705280920505809723516255054209044317068721127426\"\r\n                }\r\n            }\r\n        ],\r\n        \"StreamArn\": \"arn:aws:dynamodb:us-east-1:000000000000:table/metadata_local/stream/2020-06-25T07:27:58.128\",\r\n        \"KeySchema\": [\r\n            {\r\n                \"KeyType\": \"HASH\",\r\n                \"AttributeName\": \"partition_key\"\r\n            },\r\n            {\r\n                \"KeyType\": \"RANGE\",\r\n                \"AttributeName\": \"sort_key\"\r\n            }\r\n        ]\r\n    }\r\n}`\r\n4. Get shard iterator\r\n`aws --endpoint-url=http://localhost:4566 dynamodbstreams get-shard-iterator --stream-arn arn:aws:dynamodb:us-east-1:000000000000:table/metadata_local/stream/2020-06-25T07:27:58.128 --shard-id shardId-00000001593000000000-000000000000 --shard-iterator-type LATEST`\r\n\r\nAn error occurred (500) when calling the GetShardIterator operation (reached max retries: 4): <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n\r\n## Command used to start LocalStack\r\n\r\nI run localstack using docker image\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2615", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2615/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2615/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2615/events", "html_url": "https://github.com/localstack/localstack/issues/2615", "id": 645061249, "node_id": "MDU6SXNzdWU2NDUwNjEyNDk=", "number": 2615, "title": "docker-compose setup port 4566 not reachable while old ports still work", "user": {"login": "jrm2k6", "id": 1088099, "node_id": "MDQ6VXNlcjEwODgwOTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1088099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrm2k6", "html_url": "https://github.com/jrm2k6", "followers_url": "https://api.github.com/users/jrm2k6/followers", "following_url": "https://api.github.com/users/jrm2k6/following{/other_user}", "gists_url": "https://api.github.com/users/jrm2k6/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrm2k6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrm2k6/subscriptions", "organizations_url": "https://api.github.com/users/jrm2k6/orgs", "repos_url": "https://api.github.com/users/jrm2k6/repos", "events_url": "https://api.github.com/users/jrm2k6/events{/privacy}", "received_events_url": "https://api.github.com/users/jrm2k6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1044164786, "node_id": "MDU6TGFiZWwxMDQ0MTY0Nzg2", "url": "https://api.github.com/repos/localstack/localstack/labels/cannot-reproduce", "name": "cannot-reproduce", "color": "6de8bd", "default": false, "description": ""}, {"id": 571606741, "node_id": "MDU6TGFiZWw1NzE2MDY3NDE=", "url": "https://api.github.com/repos/localstack/localstack/labels/installation", "name": "installation", "color": "bfd4f2", "default": false, "description": null}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-06-25T00:31:39Z", "updated_at": "2020-07-31T16:13:00Z", "closed_at": "2020-07-19T00:43:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nRunning in docker-compose setup:\r\n\r\nlocalstack image: 0.11.2\r\n\r\n```\r\nversion: '3'\r\nservices:\r\n  localstack:\r\n    image: localstack/localstack:0.11.2\r\n    restart: always\r\n    ports:\r\n      - \"4566-4599:4566-4599\"\r\n      - \"8010:8010\"\r\n    environment:\r\n      - LOCALSTACK_SERVICES=iam,s3,sns,sqs\r\n      - DEBUG=1\r\n      - DATA_DIR=/tmp/localstack/data\r\n      - PORT_WEB_UI=8010\r\n      - LAMBDA_EXECUTOR=docker\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n      - DEFAULT_REGION=us-west-2\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n```\r\n\r\nIn a different container:\r\n`aws --endpoint-url=http://localstack:4566 sns create-topic --name MyNewTopic`\r\n\r\n## Expected behavior\r\n\r\nA new topic is created:\r\n```\r\n{\r\n    \"TopicArn\": \"arn:aws:sns:us-west-2:000000000000:MyNewTopic\"\r\n}\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nIt hangs and nothing happens\r\n```\r\n\r\nNote: Running `aws --endpoint-url=http://localstack:4575 sns create-topic --name MyNewTopic` works just fine from the same container.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2612", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2612/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2612/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2612/events", "html_url": "https://github.com/localstack/localstack/issues/2612", "id": 644711533, "node_id": "MDU6SXNzdWU2NDQ3MTE1MzM=", "number": 2612, "title": "Queue not found", "user": {"login": "mikicho", "id": 11459632, "node_id": "MDQ6VXNlcjExNDU5NjMy", "avatar_url": "https://avatars1.githubusercontent.com/u/11459632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikicho", "html_url": "https://github.com/mikicho", "followers_url": "https://api.github.com/users/mikicho/followers", "following_url": "https://api.github.com/users/mikicho/following{/other_user}", "gists_url": "https://api.github.com/users/mikicho/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikicho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikicho/subscriptions", "organizations_url": "https://api.github.com/users/mikicho/orgs", "repos_url": "https://api.github.com/users/mikicho/repos", "events_url": "https://api.github.com/users/mikicho/events{/privacy}", "received_events_url": "https://api.github.com/users/mikicho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}, {"id": 1722356689, "node_id": "MDU6TGFiZWwxNzIyMzU2Njg5", "url": "https://api.github.com/repos/localstack/localstack/labels/region-issue", "name": "region-issue", "color": "ffe049", "default": false, "description": ""}, {"id": 939237530, "node_id": "MDU6TGFiZWw5MzkyMzc1MzA=", "url": "https://api.github.com/repos/localstack/localstack/labels/usage", "name": "usage", "color": "0074b7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2020-06-24T15:32:33Z", "updated_at": "2020-07-03T12:16:03Z", "closed_at": "2020-07-03T12:16:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nWhen I run localstack on Jenkins, I get:\r\n```\r\n<ErrorResponse xmlns=\"http://queue.amazonaws.com/doc/2012-11-05/\"> <Error> <Type>Sender</Type> <Code>AWS.SimpleQueueService.NonExistentQueue</Code> <Message>The specified queue does not exist for this wsdl version.</Message> <Detail/> </Error> <RequestId>F31Y6CVCNXCG3WA0U9JHKH734H2YOTJW0087VX8HEC5I716VNVQH</RequestId> </ErrorResponse>\r\n```\r\nfor:\r\n```\r\ncurl \"localstack:4576?Action=GetQueueUrl&QueueName=jobs\"\r\n```\r\n\r\nAlthough the queue was created:\r\n```\r\n\u001b[36mlocalstack_1  |\u001b[0m /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initaws.d/create-sqs-queue.sh\r\n\u001b[36mlocalstack_1  |\u001b[0m {\r\n\u001b[36mlocalstack_1  |\u001b[0m     \"QueueUrl\": \"http://localstack:4576/000000000000/jobs\"\r\n\u001b[36mlocalstack_1  |\u001b[0m }\r\n```\r\n\r\nThis worked for us until a few days ago.\r\n\r\n## Expected behavior\r\nThe job will be created and ready\r\n\r\n## Actual behavior\r\nQueue not found (404)\r\n\r\n# Steps to reproduce\r\n```\r\nawslocal sqs create-queue --queue-name jobs;\r\n```\r\n\r\n\r\n## Command used to start LocalStack\r\ndocker\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n```\r\nawslocal sqs create-queue --queue-name jobs;\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2611", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2611/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2611/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2611/events", "html_url": "https://github.com/localstack/localstack/issues/2611", "id": 644508423, "node_id": "MDU6SXNzdWU2NDQ1MDg0MjM=", "number": 2611, "title": "SSM using awscli/awslocal is much slower than using AWSSimpleSystemsManagement sdk", "user": {"login": "LionH", "id": 8668825, "node_id": "MDQ6VXNlcjg2Njg4MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8668825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LionH", "html_url": "https://github.com/LionH", "followers_url": "https://api.github.com/users/LionH/followers", "following_url": "https://api.github.com/users/LionH/following{/other_user}", "gists_url": "https://api.github.com/users/LionH/gists{/gist_id}", "starred_url": "https://api.github.com/users/LionH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LionH/subscriptions", "organizations_url": "https://api.github.com/users/LionH/orgs", "repos_url": "https://api.github.com/users/LionH/repos", "events_url": "https://api.github.com/users/LionH/events{/privacy}", "received_events_url": "https://api.github.com/users/LionH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T10:36:13Z", "updated_at": "2020-06-28T18:42:04Z", "closed_at": "2020-06-28T18:37:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: Bug report\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nI'm using testContainers to spin up localstack (v0.11.2). I figured out when adding an init.sh script to initialize with store params is much slower than using the java sdk to fill those values (approx. 40 parameters and increasing).\r\n\r\n## Expected behavior\r\nI expected both way of adding parameters were relatively similar\r\n\r\n## Actual behavior\r\nadding parameters through a shell script and aws-cli is slower\r\n\r\n# Steps to reproduce\r\nSample project can be found [here](https://github.com/LionH/localstack-testcontainers-sample)\r\n\r\nHere the results of processing time (sample with 60 parameters):\r\nInitscript process time : 58s 687ms\r\nSdk init process time   : 19s 276ms\r\n\r\n## Command used to start LocalStack\r\nIt is instantiated by TestContainers. No special changes on the default used.\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nput above", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2607", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2607/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2607/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2607/events", "html_url": "https://github.com/localstack/localstack/issues/2607", "id": 643728270, "node_id": "MDU6SXNzdWU2NDM3MjgyNzA=", "number": 2607, "title": "Cloudformation does not work", "user": {"login": "murali2904", "id": 60002593, "node_id": "MDQ6VXNlcjYwMDAyNTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/60002593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murali2904", "html_url": "https://github.com/murali2904", "followers_url": "https://api.github.com/users/murali2904/followers", "following_url": "https://api.github.com/users/murali2904/following{/other_user}", "gists_url": "https://api.github.com/users/murali2904/gists{/gist_id}", "starred_url": "https://api.github.com/users/murali2904/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murali2904/subscriptions", "organizations_url": "https://api.github.com/users/murali2904/orgs", "repos_url": "https://api.github.com/users/murali2904/repos", "events_url": "https://api.github.com/users/murali2904/events{/privacy}", "received_events_url": "https://api.github.com/users/murali2904/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "duongpv7", "id": 5101032, "node_id": "MDQ6VXNlcjUxMDEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5101032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duongpv7", "html_url": "https://github.com/duongpv7", "followers_url": "https://api.github.com/users/duongpv7/followers", "following_url": "https://api.github.com/users/duongpv7/following{/other_user}", "gists_url": "https://api.github.com/users/duongpv7/gists{/gist_id}", "starred_url": "https://api.github.com/users/duongpv7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duongpv7/subscriptions", "organizations_url": "https://api.github.com/users/duongpv7/orgs", "repos_url": "https://api.github.com/users/duongpv7/repos", "events_url": "https://api.github.com/users/duongpv7/events{/privacy}", "received_events_url": "https://api.github.com/users/duongpv7/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2020-06-23T10:35:27Z", "updated_at": "2020-07-15T18:22:46Z", "closed_at": "2020-07-01T10:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ ] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nNot able to run cloudformation and it is not listing any buckets as well.\r\n\r\n...'Status'\r\n[ec2-user@ip-172-31-92-0 ~]$ aws --endpoint-url=http://localhost:4566 cloudformation deploy --template-file /home/ec2-user/Rootstack-amplify.yaml --stack-name TestStack3\r\n\r\nUnable to parse response (syntax error: line 1, column 54), invalid XML received. Further retries may succeed:\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\r\n<title>500 Internal Server Error</title>\r\n<h1>Internal Server Error</h1>\r\n<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\r\n\r\n[ec2-user@ip-172-31-92-0 ~]$ aws --endpoint-url=http://localhost:4566 s3 ls\r\n[ec2-user@ip-172-31-92-0 ~]$\r\n\r\n\r\n[ec2-user@ip-172-31-92-0 ~]$\r\n\r\n\r\n## Expected behavior\r\n\r\n...\r\n\r\n## Actual behavior\r\n\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\ndocker run -d -e HOSTNAME=\"localhost\" -e LOCALSTACK_HOSTNAME=\"localhost\" -e TEST_AWS_ACCOUNT_ID=\"480757267634\" -e AWS_DEFAULT_REGION=\"eu-west-1\" -e REGION=\"eu-west-1\" -p 4566:4566 --rm --privileged --name localstack_main -p 4608-4610:4608-4610 -p 4611-4612:4611-4612 -p 4613-4616:4613-4616 -p 4617-4619:4617-4619 -p 4620:4620 -p 8080-8081:8080-8081 -p 12121:12121 -p 4567-4570:4567-4570 -p 4571-4574:4571-4574 -p 4575:4575 -p 4576-4578:4576-4578 -p 4579-4580:4579-4580 -p 4581-4585:4581-4585 -p 4586-4588:4586-4588 -p 4589-4592:4589-4592 -p 4593:4593 -p 4594-4596:4594-4596 -p 4597-4598:4597-4598 -p 4599-4601:4599-4601 -p 4602-4603:4602-4603 -p 4604-4606:4604-4606 -p 4607:4607  -v \"/opt/localstack:/opt/localstack\" -v \"/var/run/docker.sock:/var/run/docker.sock\" -e DOCKER_HOST=\"unix:///var/run/docker.sock\" -e HOST_TMP_FOLDER=\"/opt/localstack\" \"localstack/localstack\"\r\n\r\nI have installed docker on ec2 instance and have enabled tunneling to my localhost and able to access from web browser and it says services is running.\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2606", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2606/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2606/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2606/events", "html_url": "https://github.com/localstack/localstack/issues/2606", "id": 643673193, "node_id": "MDU6SXNzdWU2NDM2NzMxOTM=", "number": 2606, "title": "localstack.services.s3.s3_listener: Failed to parse LastModified", "user": {"login": "dholroyd", "id": 512165, "node_id": "MDQ6VXNlcjUxMjE2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/512165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dholroyd", "html_url": "https://github.com/dholroyd", "followers_url": "https://api.github.com/users/dholroyd/followers", "following_url": "https://api.github.com/users/dholroyd/following{/other_user}", "gists_url": "https://api.github.com/users/dholroyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dholroyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dholroyd/subscriptions", "organizations_url": "https://api.github.com/users/dholroyd/orgs", "repos_url": "https://api.github.com/users/dholroyd/repos", "events_url": "https://api.github.com/users/dholroyd/events{/privacy}", "received_events_url": "https://api.github.com/users/dholroyd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-23T09:17:46Z", "updated_at": "2020-06-23T11:29:05Z", "closed_at": "2020-06-23T11:29:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nWhen listing an S3 bucket with more than one item, error messages are logged which dump a potentially very large amount of XML (depending on the number of objects in the bucket being listed).\r\n\r\nFor example,\r\n\r\n```\r\n2020-06-22T23:32:02:ERROR:localstack.services.s3.s3_listener: Failed to parse LastModified: ('Unknown string format:', '2020-06-22T23:29:35.108Z</LastModified><ETag>&#34;8d72872b23b16fc4f9c14a0dc76a8558&#34;</ET\r\nag><Size>796180</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358171750000</Key><LastModified>2020-06-22T23:29:40.017Z</LastModified><ETag>&#34;53d419d4a39d443a845efaae44\r\n63b611&#34;</ETag><Size>931728</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358172200000</Key><LastModified>2020-06-22T23:29:45.016Z</LastModified><ETag>&#34;fb5c9cc82d0\r\n3a66fe811ef4c39608dcd&#34;</ETag><Size>934360</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358172650000</Key><LastModified>2020-06-22T23:29:50.035Z</LastModified><ETag>&\r\n#34;07f2d4652b44c1f9d961613113505ca9&#34;</ETag><Size>927780</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358173100000</Key><LastModified>2020-06-22T23:29:55.054Z</LastM\r\nodified><ETag>&#34;0b215fb545d1561459487e04a4e9de79&#34;</ETag><Size>930412</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358173550000</Key><LastModified>2020-06-22T23:30\r\n:00.072Z</LastModified><ETag>&#34;0d68dfa3e324e2620d2e8fb8aca32644&#34;</ETag><Size>934360</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358174000000</Key><LastModified>2\r\n020-06-22T23:30:05.012Z</LastModified><ETag>&#34;3cd9f457157ccde76bc97e06d1616e82&#34;</ETag><Size>939624</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358174450000</Key>\r\n<LastModified>2020-06-22T23:30:10.014Z</LastModified><ETag>&#34;c649d5ba8784af0cee3fea4acff2c07d&#34;</ETag><Size>922516</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358\r\n174900000</Key><LastModified>2020-06-22T23:30:15.023Z</LastModified><ETag>&#34;f8325efdd76da943975fb701fbe39049&#34;</ETag><Size>935676</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/\r\nsegments/143358175350000</Key><LastModified>2020-06-22T23:30:20.041Z</LastModified><ETag>&#34;2c4630b27ea7435a86f8e1cd2530f211&#34;</ETag><Size>919884</Size><StorageClass>STANDARD</StorageClass></Contents><Conte\r\nnts><Key>job/1/segments/143358175800000</Key><LastModified>2020-06-22T23:30:25.058Z</LastModified><ETag>&#34;8b131873c2da0d6d97f69f695fe03132&#34;</ETag><Size>939624</Size><StorageClass>STANDARD</StorageClass></\r\nContents><Contents><Key>job/1/segments/143358176250000</Key><LastModified>2020-06-22T23:30:30.074Z</LastModified><ETag>&#34;32abfd7695be1c24c52605634fdd1e6a&#34;</ETag><Size>931728</Size><StorageClass>STANDARD</\r\nStorageClass></Contents><Contents><Key>job/1/segments/143358176700000</Key><LastModified>2020-06-22T23:30:35.017Z</LastModified><ETag>&#34;ac6d2ff3679e1ec6187ced080cb35d16&#34;</ETag><Size>930412</Size><StorageC\r\nlass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358177150000</Key><LastModified>2020-06-22T23:30:40.011Z</LastModified><ETag>&#34;7eed59c427da29f42bd4a4f12fd06532&#34;</ETag><Size>917252<\r\n/Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358177600000</Key><LastModified>2020-06-22T23:30:45.029Z</LastModified><ETag>&#34;939ca21f5cf3f72bb5a3eb738f23f48e&#34;</ETa\r\ng><Size>930412</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358178050000</Key><LastModified>2020-06-22T23:30:50.038Z</LastModified><ETag>&#34;46cb7c6c5d6876e905e65d106d6\r\n87df4&#34;</ETag><Size>931728</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358178500000</Key><LastModified>2020-06-22T23:30:55.060Z</LastModified><ETag>&#34;ccff83cca301\r\n0144084ebc734d1fb4da&#34;</ETag><Size>926464</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358178950000</Key><LastModified>2020-06-22T23:31:00.082Z</LastModified><ETag>&#\r\n34;2d9290f95f0ed630cfff7612daed4a04&#34;</ETag><Size>929096</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358179400000</Key><LastModified>2020-06-22T23:31:05.022Z</LastMo\r\ndified><ETag>&#34;8cde7b591e5961c9220d6cfba2e950d3&#34;</ETag><Size>929096</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358180750000</Key><LastModified>2020-06-22T23:31:\r\n20.038Z</LastModified><ETag>&#34;e54c3930f24ffa02a09ea842cdd3579e&#34;</ETag><Size>319788</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358181200000</Key><LastModified>20\r\n20-06-22T23:31:25.072Z</LastModified><ETag>&#34;a976ffabe304f68146a6f3be41693c38&#34;</ETag><Size>936992</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358181650000</Key><\r\nLastModified>2020-06-22T23:31:30.082Z</LastModified><ETag>&#34;0b89777db778a7aa37e1878c73173404&#34;</ETag><Size>936992</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/1433581\r\n82100000</Key><LastModified>2020-06-22T23:31:35.010Z</LastModified><ETag>&#34;1fa96aba13d4aea70dca333095e6e634&#34;</ETag><Size>915936</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>job/1/s\r\negments/143358182550000</Key><LastModified>2020-06-22T23:31:40.014Z</LastModified><ETag>&#34;46a85ae0885c0dc465423152fb060415&#34;</ETag><Size>923832</Size><StorageClass>STANDARD</StorageClass></Contents><Conten\r\nts><Key>job/1/segments/143358183000000</Key><LastModified>2020-06-22T23:31:45.025Z</LastModified><ETag>&#34;417c183f04f9522ea628dc31e63b7f5f&#34;</ETag><Size>934360</Size><StorageClass>STANDARD</StorageClass></C\r\nontents><Contents><Key>job/1/segments/143358183450000</Key><LastModified>2020-06-22T23:31:50.050Z</LastModified><ETag>&#34;068f6a0f5793e8883837ac0dd676b03e&#34;</ETag><Size>931728</Size><StorageClass>STANDARD</S\r\ntorageClass></Contents><Contents><Key>job/1/segments/143358183900000</Key><LastModified>2020-06-22T23:31:55.067Z</LastModified><ETag>&#34;bdc4eb2990cff8b60e1b317d31b12cfc&#34;</ETag><Size>931728</Size><StorageCl\r\nass>STANDARD</StorageClass></Contents><Contents><Key>job/1/segments/143358184350000</Key><LastModified>2020-06-22T23:32:00.080Z')                                                                                  \r\n```\r\n\r\n## Expected behaviour\r\n\r\nNo error messages logged\r\n\r\n## Actual behaviour\r\n\r\n...\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n```\r\nlocalstack start\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```\r\n$ awslocal s3 mb s3://test\r\nmake_bucket: test\r\n$ touch testfile\r\n$ awslocal s3 cp testfile s3://test/\r\nupload: ./testfile to s3://test/testfile\r\n$ awslocal s3 ls s3://test\r\n2020-06-23 10:06:58          0 testfile\r\n$ touch testfile2\r\n$ awslocal s3 cp testfile2 s3://test/\r\nupload: ./testfile2 to s3://test/testfile2\r\n$ awslocal s3 ls s3://test\r\n```\r\n\r\nlocalstack output when the **second** `awslocal s3 ls` is run...\r\n```\r\n2020-06-23T09:07:27:ERROR:localstack.services.s3.s3_listener: Failed to parse LastModified: ('Unknown string format:', '2020-06-23T09:06:58.279Z</LastModified><ETag>&#34;d41d8cd98f00b204e9800998ecf8427e&#34;</ETag><Size>0</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>testfile2</Key><LastModified>2020-06-23T09:07:23.767Z')\r\n```\r\n\r\nThis doesn't happen when there is only a single file in the bucket.\r\n\r\nGiven that the problematic input being quoted starts with `2020-06-23T09:06:58.279Z</LastModified>` and ends with `<LastModified>2020-06-23T09:07:23.767Z`, I presume that the problem arises from the naive use of regex in https://github.com/localstack/localstack/blob/bf209a4d36de2c533f203c0bcdcced354d6ef2b5/localstack/services/s3/s3_listener.py#L384 which is greedy-matching (the `([^<]*)`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2605", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2605/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2605/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2605/events", "html_url": "https://github.com/localstack/localstack/issues/2605", "id": 643414434, "node_id": "MDU6SXNzdWU2NDM0MTQ0MzQ=", "number": 2605, "title": "java.lang.NoClassDefFoundError showing up when using lambda layer with lambda java function.", "user": {"login": "kvudathu", "id": 25853640, "node_id": "MDQ6VXNlcjI1ODUzNjQw", "avatar_url": "https://avatars1.githubusercontent.com/u/25853640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvudathu", "html_url": "https://github.com/kvudathu", "followers_url": "https://api.github.com/users/kvudathu/followers", "following_url": "https://api.github.com/users/kvudathu/following{/other_user}", "gists_url": "https://api.github.com/users/kvudathu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvudathu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvudathu/subscriptions", "organizations_url": "https://api.github.com/users/kvudathu/orgs", "repos_url": "https://api.github.com/users/kvudathu/repos", "events_url": "https://api.github.com/users/kvudathu/events{/privacy}", "received_events_url": "https://api.github.com/users/kvudathu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-22T23:08:27Z", "updated_at": "2020-06-28T12:05:02Z", "closed_at": "2020-06-28T12:04:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a bug report, java.lang.NoClassDefFoundError showing when using lambda layer with java function.\r\nUsing pro account.\r\n\r\n# Detailed description\r\nTrying to invoke java lambda with lambda layers after deploying the stack using severless script below. Everything works perfectly when I run serverless to deploy on aws. Even sls invoke doesn't give NoClassDefFoundError error. \r\nI'm confused why localstack is giving NoClassDefFoundError if lambda layers do the contain the class AwsSdkRequestFailure. The lambda function in aws works great.\r\n\r\nError is as follows:\r\n```\r\n{\"errorMessage\":\"Lambda process returned error status code: 1. Result: . Output:\\nException in thread \\\"main\\\" java.lang.NoClassDefFoundError: com/trendmicro/np/ms/connector/exceptions/AwsSdkRequestFailure\\n\\tat java.base/java.lang.Class.forName0(Native Method)\\n\\tat java.base/java.lang.Class.forName(Unknown Source)\\n\\tat cloud.localstack.LambdaExecutor.getHandler(LambdaExecutor.java:150)\\n\\tat cloud.localstack.LambdaExecutor.main(LambdaExecutor.java:64)\\nCaused by: java.lang.ClassNotFoundException: com.trendmicro.np.ms.connector.exceptions.AwsSdkRequestFailure\\n\\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(Unknown Source)\\n\\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Unknown Source)\\n\\tat java.base/java.lang.ClassLoader.loadClass(Unknown Source)\\n\\t... 4 more\",\"errorType\":\"Exception\",\"stackTrace\":[\"  File \\\"/opt/code/localstack/localstack/services/awslambda/lambda_api.py\\\", line 527, in run_lambda\\n    result = LAMBDA_EXECUTOR.execute(func_arn, func_details, event, context=context,\\n\",\"  File \\\"/opt/code/localstack/localstack/services/awslambda/lambda_executors.py\\\", line 136, in execute\\n    return do_execute()\\n\",\"  File \\\"/opt/code/localstack/localstack/services/awslambda/lambda_executors.py\\\", line 128, in do_execute\\n    return _run(func_arn=func_arn)\\n\",\"  File \\\"/opt/code/localstack/localstack/utils/cloudwatch/cloudwatch_util.py\\\", line 143, in wrapped\\n    raise e\\n\",\"  File \\\"/opt/code/localstack/localstack/utils/cloudwatch/cloudwatch_util.py\\\", line 139, in wrapped\\n    result = func(*args, **kwargs)\\n\",\"  File \\\"/opt/code/localstack/localstack/services/awslambda/lambda_executors.py\\\", line 121, in _run\\n    raise e\\n\",\"  File \\\"/opt/code/localstack/localstack/services/awslambda/lambda_executors.py\\\", line 109, in _run\\n    result = self._execute(func_arn, func_details, event, context, version)\\n\",\"  File \\\"/opt/code/localstack/localstack/services/awslambda/lambda_executors.py\\\", line 264, in _execute\\n    result = self.run_lambda_executor(cmd, stdin, env_vars=environment, func_details=func_details)\\n\",\"  File \\\"/opt/code/localstack/localstack/services/awslambda/lambda_executors.py\\\", line 173, in run_lambda_executor\\n    raise Exception('Lambda process returned error status code: %s. Result: %s. Output:\\\\n%s' %\\n\"]}\r\n```\r\n\r\nMy code is as follows:\r\nseverless.yml\r\n```\r\nservice: gateway-discovery\r\n\r\nprovider:\r\n  name: aws\r\n  region: us-west-2\r\n  stage: ${opt:stage, 'aws'}\r\n  role: ${self:custom.lambdaIamRole.${self:provider.stage}}\r\n  logRetentionInDays: 90\r\n\r\npackage:\r\n  individually: true\r\n\r\nlayers:\r\n  lambdaLibs:\r\n    package:\r\n      artifact: build/lambda/layers/java/gateway-discovery-layer.zip\r\n    name: gateway-discovery-layer\r\n    description: \"libraries needed for gateway-discovery lambdas\"\r\n    compatibleRuntimes:\r\n      - java11\r\n\r\nfunctions:\r\n  igw-gateway-status:\r\n    runtime: java11\r\n    package:\r\n      artifact: build/lambda/functions/java/igw-gateway-status/lambda.zip\r\n    handler: com.trendmicro.np.gatewaydiscovery.IgwGatewayStatus\r\n    layers:\r\n      - {Ref:  LambdaLibsLambdaLayer}\r\n    reservedConcurency: 100\r\n    memorySize: 512\r\n    timeout: 20\r\n\r\nplugins:\r\n  - serverless-localstack\r\n\r\ncustom:\r\n  localstack:\r\n    stages:\r\n      # list of stages for which the plugin should be enabled\r\n      - dev\r\n    host: http://localhost  # optional - LocalStack host to connect to\r\n    autostart: false  # optional - start LocalStack in Docker on Serverless deploy\r\n  stages:\r\n    - dev\r\n    - aws\r\n  lambdaIamRole:\r\n    dev: arn:aws:iam::000000000000:role/gateway-lambda-role\r\n    aws: arn:aws:iam::fakeaccount:role/LambdaGatewayDiscovery\r\n```\r\ndocker-compose.yml\r\n```\r\nversion: '3.3'\r\nservices:\r\n  localstack:\r\n    image: localstack/localstack\r\n    ports:\r\n      - \"4567-4597:4567-4597\"\r\n      - \"${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}\"\r\n    environment:\r\n      - LOCALSTACK_API_KEY=12345\r\n      - SERVICES=${SERVICES- }\r\n      - DEBUG=${DEBUG- }\r\n      - DATA_DIR=${DATA_DIR- }\r\n      - PORT_WEB_UI=${PORT_WEB_UI- }\r\n      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }\r\n      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n    volumes:\r\n      - \"${TMPDIR:-/tmp/localstack}:/tmp/localstack\"\r\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\r\n```\r\n\r\nServerless logs\r\n```\r\n sls deploy -s dev\r\nServerless: Using serverless-localstack\r\nServerless: Warning: Unable to find plugin named: TypeScriptPlugin\r\nServerless: Packaging service...\r\nServerless: Creating Stack...\r\nServerless: Checking Stack create progress...\r\n.\r\nServerless: Stack create finished...\r\nServerless: Uploading CloudFormation file to S3...\r\nServerless: Uploading artifacts...\r\nServerless: Uploading service lambda.zip file to S3 (2.76 KB)...\r\nServerless: Uploading service gateway-discovery-layer.zip file to S3 (56.82 MB)...\r\nServerless: Validating template...\r\nServerless: Skipping template validation: Unsupported in Localstack\r\nServerless: Updating Stack...\r\nServerless: Checking Stack update progress...\r\n.\r\nServerless: Stack update finished...\r\nService Information\r\nservice: gateway-discovery\r\nstage: dev\r\nregion: us-west-2\r\nstack: gateway-discovery-dev\r\nresources: 6\r\napi keys:\r\n  None\r\nendpoints:\r\n  None\r\nfunctions:\r\n  igw-gateway-status: gateway-discovery-dev-igw-gateway-status\r\nlayers:\r\n  lambdaLibs: arn:aws:lambda:us-west-2:000000000000:layer:gateway-discovery-layer\r\nServerless: Run the \"serverless\" command to setup monitoring, troubleshooting and testing.\r\n```\r\n\r\npolicy.json used to create IAM role\r\n```\r\n{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"sqs:ReceiveMessage\",\r\n                \"sqs:DeleteMessage\",\r\n                \"sqs:GetQueueAttributes\",\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\",\r\n                \"sts:AssumeRole\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## Command used to start LocalStack\r\ndocker-compose up -d\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nawslocal  iam create-role --role-name gateway-lambda-role --assume-role-policy-document file://policy.json\r\nsls deploy -s dev\r\nawslocal lambda invoke --function-name gateway-discovery-dev-igw-gateway-status output.txt\r\n...\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2604", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2604/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2604/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2604/events", "html_url": "https://github.com/localstack/localstack/issues/2604", "id": 643307115, "node_id": "MDU6SXNzdWU2NDMzMDcxMTU=", "number": 2604, "title": "Cloudformation still doesn't work", "user": {"login": "denissabramovs", "id": 65600131, "node_id": "MDQ6VXNlcjY1NjAwMTMx", "avatar_url": "https://avatars3.githubusercontent.com/u/65600131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denissabramovs", "html_url": "https://github.com/denissabramovs", "followers_url": "https://api.github.com/users/denissabramovs/followers", "following_url": "https://api.github.com/users/denissabramovs/following{/other_user}", "gists_url": "https://api.github.com/users/denissabramovs/gists{/gist_id}", "starred_url": "https://api.github.com/users/denissabramovs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denissabramovs/subscriptions", "organizations_url": "https://api.github.com/users/denissabramovs/orgs", "repos_url": "https://api.github.com/users/denissabramovs/repos", "events_url": "https://api.github.com/users/denissabramovs/events{/privacy}", "received_events_url": "https://api.github.com/users/denissabramovs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1545310297, "node_id": "MDU6TGFiZWwxNTQ1MzEwMjk3", "url": "https://api.github.com/repos/localstack/localstack/labels/cloudformation", "name": "cloudformation", "color": "b9eef7", "default": false, "description": ""}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-22T19:24:10Z", "updated_at": "2020-06-23T08:27:40Z", "closed_at": "2020-06-23T08:27:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just tried to pull latest master and build docker images locally.\r\nAfter successful build and launch, i have tried to deploy your test template from here https://github.com/localstack/localstack/blob/master/tests/integration/templates/template1.yaml and it's failing with status code 400 as invalid request and error message `Stack with id testingstack does not exist` and at the end we have 500 status code.\r\n```\r\ndocker build .\r\ndocker run --rm --name localstackTest --network=host localstack/localstack:master\r\naws --debug --endpoint-url=http://localhost:4566 cloudformation deploy --template-file /var/local/test/cf.yaml --stack-name testingstack\r\n```\r\nI'm doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2602", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2602/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2602/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2602/events", "html_url": "https://github.com/localstack/localstack/issues/2602", "id": 643051695, "node_id": "MDU6SXNzdWU2NDMwNTE2OTU=", "number": 2602, "title": "LOCALSTACK_HOSTNAME has wrong value in dockerized localstack", "user": {"login": "bmitmanski", "id": 24588348, "node_id": "MDQ6VXNlcjI0NTg4MzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/24588348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmitmanski", "html_url": "https://github.com/bmitmanski", "followers_url": "https://api.github.com/users/bmitmanski/followers", "following_url": "https://api.github.com/users/bmitmanski/following{/other_user}", "gists_url": "https://api.github.com/users/bmitmanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmitmanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmitmanski/subscriptions", "organizations_url": "https://api.github.com/users/bmitmanski/orgs", "repos_url": "https://api.github.com/users/bmitmanski/repos", "events_url": "https://api.github.com/users/bmitmanski/events{/privacy}", "received_events_url": "https://api.github.com/users/bmitmanski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-22T12:59:41Z", "updated_at": "2020-06-27T10:43:24Z", "closed_at": "2020-06-27T10:43:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n`LOCALSTACK_HOSTNAME` has wrong value in dockerized localstack\r\nLambda `LOCALSTACK_HOSTNAME` output: 172.18.0.1\r\n\r\n`docker network inspect localstack-network` output: \r\n```\r\n[\r\n    {\r\n        \"Name\": \"localstack-network\",\r\n        \"Id\": \"78fd313ca7b543a63ac8b38463935b78ff436e02c0009b3556d07e09e741d36d\",\r\n        \"Created\": \"2020-06-22T12:44:51.398396816Z\",\r\n        \"Scope\": \"local\",\r\n        \"Driver\": \"bridge\",\r\n        \"EnableIPv6\": false,\r\n        \"IPAM\": {\r\n            \"Driver\": \"default\",\r\n            \"Options\": null,\r\n            \"Config\": [\r\n                {\r\n                    \"Subnet\": \"172.18.0.0/16\",\r\n                    \"Gateway\": \"172.18.0.1\"\r\n                }\r\n            ]\r\n        },\r\n        \"Internal\": false,\r\n        \"Attachable\": true,\r\n        \"Ingress\": false,\r\n        \"ConfigFrom\": {\r\n            \"Network\": \"\"\r\n        },\r\n        \"ConfigOnly\": false,\r\n        \"Containers\": {\r\n            \"71ce4e439e684f7adc18847724ccabc9fa024c5259dda415c6eac2be782409ff\": {\r\n                \"Name\": \"ompliance-jetscan-lambdas_pr-187_localstack_1_b6acaac6a401\",\r\n                \"EndpointID\": \"488069758fb9911ab1ddfc62ca370d56e032f0e0a06b116fa8ef8b6608f3e185\",\r\n                \"MacAddress\": \"02:42:ac:12:00:04\",\r\n                \"IPv4Address\": \"172.18.0.4/16\",\r\n                \"IPv6Address\": \"\"\r\n            },\r\n            ...\r\n        },\r\n        \"Options\": {},\r\n        \"Labels\": {\r\n            \"com.docker.compose.network\": \"localstack-network\",\r\n            \"com.docker.compose.project\": \"ompliance-jetscan-lambdas_pr-187\",\r\n            \"com.docker.compose.version\": \"1.23.1\"\r\n        }\r\n    }\r\n]\r\n```\r\n\r\n## Expected behavior\r\n\r\n`LOCALSTACK_HOSTNAME` has an IP of the localstack container. \r\n\r\n## Actual behavior\r\n\r\n`LOCALSTACK_HOSTNAME` has an IP of the Gateway.\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n```\r\nlocalstack:\r\n    image: localstack/localstack\r\n    networks:\r\n      - localstack-network\r\n    ports:\r\n      - 4566:4566\r\n      - 4572:4572\r\n      - 8080:8080\r\n    environment:\r\n      - DEBUG=1\r\n      - HOSTNAME_EXTERNAL=localstack\r\n      - SERVICES=sqs,lambda,cloudwatch,s3,iam,ec2,stepfunctions,cloudwatchlogs\r\n      - LAMBDA_REMOTE_DOCKER=false\r\n      - LAMBDA_EXECUTOR=docker\r\n      - LAMBDA_DOCKER_NETWORK=localstack-network\r\n      - AWS_ACCESS_KEY_ID=123\r\n      - AWS_SECRET_ACCESS_KEY=xyz\r\n      - DEFAULT_REGION=us-east-1\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n      - /tmp/localstack:/tmp/localstack\r\n\r\nnetworks:\r\n  localstack-network:\r\n    name: localstack-network\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nTo simplify just print in Lambda:\r\n`console.log(process.env.LOCALSTACK_HOSTNAME)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2601", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2601/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2601/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2601/events", "html_url": "https://github.com/localstack/localstack/issues/2601", "id": 642904231, "node_id": "MDU6SXNzdWU2NDI5MDQyMzE=", "number": 2601, "title": "Creating an ECS Service Generates Docker Invalid Reference Error", "user": {"login": "jasonstrimpel", "id": 908118, "node_id": "MDQ6VXNlcjkwODExOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/908118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonstrimpel", "html_url": "https://github.com/jasonstrimpel", "followers_url": "https://api.github.com/users/jasonstrimpel/followers", "following_url": "https://api.github.com/users/jasonstrimpel/following{/other_user}", "gists_url": "https://api.github.com/users/jasonstrimpel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonstrimpel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonstrimpel/subscriptions", "organizations_url": "https://api.github.com/users/jasonstrimpel/orgs", "repos_url": "https://api.github.com/users/jasonstrimpel/repos", "events_url": "https://api.github.com/users/jasonstrimpel/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonstrimpel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1525519971, "node_id": "MDU6TGFiZWwxNTI1NTE5OTcx", "url": "https://api.github.com/repos/localstack/localstack/labels/PRO", "name": "PRO", "color": "f7a0d6", "default": false, "description": ""}, {"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 577928994, "node_id": "MDU6TGFiZWw1Nzc5Mjg5OTQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/priority-high", "name": "priority-high", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T09:22:21Z", "updated_at": "2020-06-24T17:28:33Z", "closed_at": "2020-06-24T17:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[X] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nI build, tag and deploy a container to ERC. I run the following commands to setup an ECS cluster, define a task and run a service in LocalStack:\r\n\r\n```\r\nexport ECS_CLUSTER_NAME=test-cluster\r\nexport ECS_SERVICE_NAME=test-service\r\n\r\nawslocal ecs create-cluster --cluster-name $ECS_CLUSTER_NAME\r\ntask=$(awslocal ecs register-task-definition --cli-input-json file://task.json)\r\n\r\nfamily=$(echo $task | jq .taskDefinition.family | xargs)\r\nrevision=$(echo $task | jq .taskDefinition.revision | xargs)\r\n\r\nawslocal ecs create-service \\\r\n  --cluster $ECS_CLUSTER_NAME \\\r\n  --service-name $ECS_SERVICE_NAME \\\r\n  --task-definition \"$family:$revision\" \\\r\n  --desired-count 1 \\\r\n  --launch-type \"FARGATE\"\r\n\r\n```\r\n\r\nMy task definition file, `task.json` is as follows:\r\n\r\n```\r\n{\r\n  \"family\": \"first-run-task-definition\",\r\n  \"networkMode\": \"awsvpc\",\r\n  \"requiresCompatibilities\": [\r\n    \"FARGATE\"\r\n  ],\r\n  \"cpu\": \"256\",\r\n  \"memory\": \"512\",\r\n  \"containerDefinitions\": [\r\n    {\r\n      \"name\": \"tradeblotter-webapp\",\r\n      \"image\": \"arn:aws:ecr:us-east-1:000000000000:repository/my-webapp\",\r\n      \"portMappings\": [\r\n        {\r\n          \"hostPort\": 80,\r\n          \"protocol\": \"tcp\",\r\n          \"containerPort\": 80\r\n        }\r\n      ],\r\n      \"essential\": true\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nA snippet from my Dockerfile:\r\n\r\n```\r\nFROM python:3.6.5-slim\r\n\r\nEXPOSE 80\r\n\r\nRUN apt-get update \\\r\n  && apt-get clean \\\r\n  && apt-get install -qq -y git build-essential libpq-dev --no-install-recommends \\\r\n  && rm -rf /var/lib/apt/lists/*\r\n\r\nWORKDIR /app\r\n\r\nCOPY requirements.txt requirements.txt\r\nRUN pip install --upgrade pip\r\nRUN pip install -r requirements.txt\r\n\r\nCOPY . .\r\nRUN pip install --editable .\r\n\r\nCMD [\"gunicorn\", \"-c\", \"python:config.gunicorn\", \"myapp:create_app()\"]\r\n\r\n```\r\n\r\nIn the terminal running LocalStack, I get the following error returned from Docker:\r\n\r\n```\r\n2020-06-22T09:07:19:INFO:localstack_ext.services.ecs.ecs_listener: Execution of ECS task e4a68911 failed: Command 'docker run --rm -i  -p 80:80/tcp --env-file /tmp/localstack/07295aa6 --name \"localstack_first-run-task-definition_3\" \"arn:aws:ecr:us-east-1:000000000000:repository/my-webapp\" ' returned non-zero exit status 125. - Output: b\"docker: invalid reference format.\\nSee 'docker run --help'.\\n\"\r\n```\r\n\r\n## Expected behavior\r\n\r\nI expect the task to spin up and run the `CMD` defined in my `Dockerfile`. The error Docker is returning is essentially due to a malformed `run` command, which of course is immutable from my perspective.\r\n\r\n## Actual behavior\r\n\r\nSee above\r\n\r\n# Steps to reproduce\r\n\r\nSee above.\r\n\r\n## Command used to start LocalStack\r\n\r\n```\r\nexport LOCALSTACK_API_KEY=<my_api_key>\r\nexport DEBUG=1\r\nSERVICES=ecr,ecs,rds,sqs localstack start\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nUsing `awslocal`. See above for commands.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2589", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2589/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2589/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2589/events", "html_url": "https://github.com/localstack/localstack/issues/2589", "id": 642314901, "node_id": "MDU6SXNzdWU2NDIzMTQ5MDE=", "number": 2589, "title": "DynamoDb S3Link not working ", "user": {"login": "ramkumar-mn", "id": 26109703, "node_id": "MDQ6VXNlcjI2MTA5NzAz", "avatar_url": "https://avatars3.githubusercontent.com/u/26109703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramkumar-mn", "html_url": "https://github.com/ramkumar-mn", "followers_url": "https://api.github.com/users/ramkumar-mn/followers", "following_url": "https://api.github.com/users/ramkumar-mn/following{/other_user}", "gists_url": "https://api.github.com/users/ramkumar-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramkumar-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramkumar-mn/subscriptions", "organizations_url": "https://api.github.com/users/ramkumar-mn/orgs", "repos_url": "https://api.github.com/users/ramkumar-mn/repos", "events_url": "https://api.github.com/users/ramkumar-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/ramkumar-mn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-20T05:43:37Z", "updated_at": "2020-06-20T05:57:41Z", "closed_at": "2020-06-20T05:45:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a bug\r\n\r\n# Detailed description\r\nWhen tried to use s3link using dynamodbmapper, getting `The AWS Access Key Id you provided does not exist in our records.` error.  \r\nI think this is because aws sdk cannot able to resolve s3 endpoint", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2587", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2587/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2587/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2587/events", "html_url": "https://github.com/localstack/localstack/issues/2587", "id": 642218379, "node_id": "MDU6SXNzdWU2NDIyMTgzNzk=", "number": 2587, "title": "Incorrect response code when Downloading S3 object with invalid range", "user": {"login": "charleswhchan", "id": 679475, "node_id": "MDQ6VXNlcjY3OTQ3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/679475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charleswhchan", "html_url": "https://github.com/charleswhchan", "followers_url": "https://api.github.com/users/charleswhchan/followers", "following_url": "https://api.github.com/users/charleswhchan/following{/other_user}", "gists_url": "https://api.github.com/users/charleswhchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/charleswhchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charleswhchan/subscriptions", "organizations_url": "https://api.github.com/users/charleswhchan/orgs", "repos_url": "https://api.github.com/users/charleswhchan/repos", "events_url": "https://api.github.com/users/charleswhchan/events{/privacy}", "received_events_url": "https://api.github.com/users/charleswhchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "usmangani1", "id": 29707592, "node_id": "MDQ6VXNlcjI5NzA3NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/29707592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usmangani1", "html_url": "https://github.com/usmangani1", "followers_url": "https://api.github.com/users/usmangani1/followers", "following_url": "https://api.github.com/users/usmangani1/following{/other_user}", "gists_url": "https://api.github.com/users/usmangani1/gists{/gist_id}", "starred_url": "https://api.github.com/users/usmangani1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usmangani1/subscriptions", "organizations_url": "https://api.github.com/users/usmangani1/orgs", "repos_url": "https://api.github.com/users/usmangani1/repos", "events_url": "https://api.github.com/users/usmangani1/events{/privacy}", "received_events_url": "https://api.github.com/users/usmangani1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-19T21:07:09Z", "updated_at": "2020-06-22T19:05:15Z", "closed_at": "2020-06-22T19:05:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a ...\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nWhen download invalid a range of bytes from S3 with an invalid range. localstack returns an incorrect error code `RequestedRangeNotSatisfiable` instead of `InvalidRange`\r\n\r\n## Expected behavior\r\n(from S3) Err: InvalidRange: The requested range is not satisfiable\r\n\r\n## Actual behavior\r\n(from localstack) RequestedRangeNotSatisfiable\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n```\r\n\t// Test S3 error code when invalid byte range is specified\r\n\t// Note: the file should be smaller than the range specified\r\n\tcontentLength := 1000000\r\n\trangeByteHeader := \"bytes=1000-1000000\"\r\n        fmt.Printf(\"    range:  %v\\n\", rangeByteHeader)\r\n\r\n\tgetObjectInput := &s3.GetObjectInput{\r\n\t\tBucket: aws.String(bucket),\r\n\t\tKey:    aws.String(key),\r\n\t\tRange:  aws.String(rangeByteHeader),\r\n\t}\r\n\tbuffer := aws.NewWriteAtBuffer(make([]byte, contentLength))\r\n\r\n\tfmt.Println(\"downloader.Download ...\")\r\n\tsize, err := downloader.Download(buffer, getObjectInput)\r\n\t_ = size\r\n\tfmt.Printf(\"Err: %+v\\n\", err)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2585", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2585/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2585/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2585/events", "html_url": "https://github.com/localstack/localstack/issues/2585", "id": 641970974, "node_id": "MDU6SXNzdWU2NDE5NzA5NzQ=", "number": 2585, "title": "S3 list bucket CreationDate fails to parse w/ Java SDK 2", "user": {"login": "efenderbosch", "id": 1494437, "node_id": "MDQ6VXNlcjE0OTQ0Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1494437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/efenderbosch", "html_url": "https://github.com/efenderbosch", "followers_url": "https://api.github.com/users/efenderbosch/followers", "following_url": "https://api.github.com/users/efenderbosch/following{/other_user}", "gists_url": "https://api.github.com/users/efenderbosch/gists{/gist_id}", "starred_url": "https://api.github.com/users/efenderbosch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/efenderbosch/subscriptions", "organizations_url": "https://api.github.com/users/efenderbosch/orgs", "repos_url": "https://api.github.com/users/efenderbosch/repos", "events_url": "https://api.github.com/users/efenderbosch/events{/privacy}", "received_events_url": "https://api.github.com/users/efenderbosch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-19T13:30:30Z", "updated_at": "2020-06-19T22:37:46Z", "closed_at": "2020-06-19T22:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Type of request: This is a bug report\r\n\r\n# Detailed description\r\nS3 list buckets returns a different format for CreationDate than the one expected by the Java SDK and parsing fails. Using Java SDK 2.13.39. Also verified w/ .40, .38, .30 and .20. Will check previous Docker releases for localstack.\r\n\r\n``Unable to unmarshall response (Text '2020-06-17T15:26:46.032838+00:00' could not be parsed at index 19). Response Code: 200, Response Text: \r\nsoftware.amazon.awssdk.core.exception.SdkClientException: Unable to unmarshall response (Text '2020-06-17T15:26:46.032838+00:00' could not be parsed at index 19). Response Code: 200, Response Text: <truncated...>\r\n``\r\n\r\n## Expected behavior\r\nReturn CreationDate in same format as the actual S3 API call.\r\n\r\n## Actual behavior\r\nReturns CreationDate in slightly different format from the actual S3 API call. Fractional seconds are included.\r\n\r\n# Steps to reproduce\r\nRun \"aws s3api list-buckets\" vs \"aws s3api list-buckets --endpoint-url http://localstack:4566\" and note different date format for CreationDate.\r\n\r\n## Command used to start LocalStack\r\ndocker-compose:\r\n```\r\n  localstack:\r\n    image: localstack/localstack\r\n    ports:\r\n      - '4566:4566'\r\n    environment:\r\n      SERVICES: s3\r\n      DEBUG: 1\r\n```\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nSee steps to reproduce.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2582", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2582/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2582/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2582/events", "html_url": "https://github.com/localstack/localstack/issues/2582", "id": 641717118, "node_id": "MDU6SXNzdWU2NDE3MTcxMTg=", "number": 2582, "title": "S3 universal port 4566 does not allow to download file with SDK", "user": {"login": "bmitmanski", "id": 24588348, "node_id": "MDQ6VXNlcjI0NTg4MzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/24588348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmitmanski", "html_url": "https://github.com/bmitmanski", "followers_url": "https://api.github.com/users/bmitmanski/followers", "following_url": "https://api.github.com/users/bmitmanski/following{/other_user}", "gists_url": "https://api.github.com/users/bmitmanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmitmanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmitmanski/subscriptions", "organizations_url": "https://api.github.com/users/bmitmanski/orgs", "repos_url": "https://api.github.com/users/bmitmanski/repos", "events_url": "https://api.github.com/users/bmitmanski/events{/privacy}", "received_events_url": "https://api.github.com/users/bmitmanski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-06-19T05:34:05Z", "updated_at": "2020-07-03T21:23:46Z", "closed_at": "2020-07-03T21:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nUsing node.js AWS SDK function `getObject` returns object with `0` bytes using 4566 port. \r\nOn port 4572 it works fine.\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n```\r\n  localstack:\r\n    image: localstack/localstack\r\n    networks:\r\n      - localstack-network\r\n    ports:\r\n      - 4566:4566\r\n      - 4572:4572\r\n      - 8080:8080\r\n    environment:\r\n      - DEBUG=1\r\n      - HOSTNAME_EXTERNAL=localstack\r\n      - SERVICES=sqs,lambda,cloudwatch,s3,iam,ec2,stepfunctions,cloudwatchlogs\r\n      - LAMBDA_REMOTE_DOCKER=false\r\n      - LAMBDA_EXECUTOR=docker\r\n      - LAMBDA_DOCKER_NETWORK=localstack-network\r\n      - AWS_ACCESS_KEY_ID=123\r\n      - AWS_SECRET_ACCESS_KEY=xyz\r\n      - DEFAULT_REGION=us-east-1\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n      - /tmp/localstack:/tmp/localstack\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```\r\nexport const s3 = new AWS.S3({\r\n  endpoint: `http://localhost:4566`,\r\n  s3ForcePathStyle: true,\r\n  sslEnabled: false\r\n});\r\n\r\nconst { Body } = await s3.getObject({\r\n Bucket: 'bucket',\r\n Key: 'file.json'\r\n}).promise();\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2579", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2579/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2579/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2579/events", "html_url": "https://github.com/localstack/localstack/issues/2579", "id": 640921272, "node_id": "MDU6SXNzdWU2NDA5MjEyNzI=", "number": 2579, "title": "[Terraform] Lambda: Unable to find handler script in local mount in non-remote Docker", "user": {"login": "bmitmanski", "id": 24588348, "node_id": "MDQ6VXNlcjI0NTg4MzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/24588348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmitmanski", "html_url": "https://github.com/bmitmanski", "followers_url": "https://api.github.com/users/bmitmanski/followers", "following_url": "https://api.github.com/users/bmitmanski/following{/other_user}", "gists_url": "https://api.github.com/users/bmitmanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmitmanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmitmanski/subscriptions", "organizations_url": "https://api.github.com/users/bmitmanski/orgs", "repos_url": "https://api.github.com/users/bmitmanski/repos", "events_url": "https://api.github.com/users/bmitmanski/events{/privacy}", "received_events_url": "https://api.github.com/users/bmitmanski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-18T05:34:26Z", "updated_at": "2020-06-27T00:31:38Z", "closed_at": "2020-06-27T00:31:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\n\r\nThere is an error using Terraform to initialize multiple Lambdas. According to code, the exception shouldn't be raised:\r\nhttps://github.com/localstack/localstack/blob/master/localstack/services/awslambda/lambda_api.py#L740\r\n\r\nUnfortunately, this error happens occasionally, so it's hard to find a cause. Maybe some kind of race?                                                                                    \r\n\r\n## Expected behaviour\r\n\r\nSkip checking Lambda archive in local mount in non-remote Docker.\r\n\r\n## Actual behaviour\r\n\r\nlocalstack.services.awslambda.lambda_api: Unable to find handler script (LOCAL_PATH) in Lambda archive. Config for local mount, docker, remote: \"True\", \"True\", \"False\"\r\n\r\n# Steps to reproduce\r\n\r\n## Command used to start LocalStack\r\n\r\n```  \r\nlocalstack:\r\n    image: localstack/localstack\r\n    networks:\r\n      - localstack-network\r\n    ports:\r\n      - 4566:4566\r\n      - 4572:4572\r\n      - 4574:4574\r\n      - 4576:4576\r\n      - 4586:4586\r\n      - 8080:8080\r\n    environment:\r\n      - DEBUG=1\r\n      - HOSTNAME_EXTERNAL=localstack\r\n      - SERVICES=sqs,lambda,cloudwatch,s3,iam,ec2,stepfunctions,cloudwatchlogs\r\n      - LAMBDA_REMOTE_DOCKER=false\r\n      - LAMBDA_EXECUTOR=docker\r\n      - LAMBDA_DOCKER_NETWORK=localstack-network\r\n      - AWS_ACCESS_KEY_ID=123\r\n      - AWS_SECRET_ACCESS_KEY=xyz\r\n      - DEFAULT_REGION=us-east-1\r\n      - DOCKER_HOST=unix:///var/run/docker.sock\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n      - /tmp/localstack:/tmp/localstack\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\nLambda terraform example:\r\nTerraform version: 0.11.14\r\n```\r\nresource \"aws_lambda_function\" \"lambda_function\" {\r\n  s3_bucket                       = \"__local__\"\r\n  s3_key                          = \"local/absolute/path\"\r\n  function_name                   = \"some-function\"\r\n  role                            = \"somerole\"\r\n  handler                         = \"index.myHandler\"\r\n  runtime                         = \"nodejs12.x\"\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2577", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2577/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2577/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2577/events", "html_url": "https://github.com/localstack/localstack/issues/2577", "id": 640796194, "node_id": "MDU6SXNzdWU2NDA3OTYxOTQ=", "number": 2577, "title": "Localstack sqs related failure after version 11.2 - xml.etree.ElementTree.ParseError", "user": {"login": "redSlug", "id": 11279144, "node_id": "MDQ6VXNlcjExMjc5MTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/11279144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redSlug", "html_url": "https://github.com/redSlug", "followers_url": "https://api.github.com/users/redSlug/followers", "following_url": "https://api.github.com/users/redSlug/following{/other_user}", "gists_url": "https://api.github.com/users/redSlug/gists{/gist_id}", "starred_url": "https://api.github.com/users/redSlug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redSlug/subscriptions", "organizations_url": "https://api.github.com/users/redSlug/orgs", "repos_url": "https://api.github.com/users/redSlug/repos", "events_url": "https://api.github.com/users/redSlug/events{/privacy}", "received_events_url": "https://api.github.com/users/redSlug/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 468888567, "node_id": "MDU6TGFiZWw0Njg4ODg1Njc=", "url": "https://api.github.com/repos/localstack/localstack/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 596297464, "node_id": "MDU6TGFiZWw1OTYyOTc0NjQ=", "url": "https://api.github.com/repos/localstack/localstack/labels/needs-triaging", "name": "needs-triaging", "color": "e99695", "default": false, "description": null}, {"id": 859919137, "node_id": "MDU6TGFiZWw4NTk5MTkxMzc=", "url": "https://api.github.com/repos/localstack/localstack/labels/regression", "name": "regression", "color": "992c10", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-17T23:09:27Z", "updated_at": "2020-06-27T15:07:21Z", "closed_at": "2020-06-27T15:07:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nA script that uses a AWS wrapper to create queues is failing. It fails when using `localstack/localstack` image, but passes when pinning to `localstack/localstack:0.11.2`\r\n\r\nHere is the output, \r\n```bash\r\n18:48:55 creating test localstack queues\r\n18:48:56 Traceback (most recent call last):\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/parsers.py\", line 432, in _parse_xml_string_to_dom\r\n18:48:56     parser.feed(xml_string)\r\n18:48:56 xml.etree.ElementTree.ParseError: not well-formed (invalid token): line 1, column 0\r\n18:48:56 \r\n18:48:56 During handling of the above exception, another exception occurred:\r\n18:48:56 \r\n18:48:56 Traceback (most recent call last):\r\n...\r\n18:48:56     for n in self.list_client_queue_names()\r\n18:48:56   File \"/home/mochi/service/lib/aws/sqs.py\", line 188, in list_client_queue_names\r\n18:48:56     QueueNamePrefix=f\"{ENVIRONMENT}-mochi\"\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/client.py\", line 357, in _api_call\r\n18:48:56     return self._make_api_call(operation_name, kwargs)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/client.py\", line 648, in _make_api_call\r\n18:48:56     operation_model, request_dict, request_context)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/client.py\", line 667, in _make_request\r\n18:48:56     return self._endpoint.make_request(operation_model, request_dict)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/endpoint.py\", line 102, in make_request\r\n18:48:56     return self._send_request(request_dict, operation_model)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/endpoint.py\", line 135, in _send_request\r\n18:48:56     request, operation_model, context)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/endpoint.py\", line 167, in _get_response\r\n18:48:56     request, operation_model)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/endpoint.py\", line 218, in _do_get_response\r\n18:48:56     response_dict, operation_model.output_shape)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/parsers.py\", line 240, in parse\r\n18:48:56     parsed = self._do_error_parse(response, shape)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/parsers.py\", line 485, in _do_error_parse\r\n18:48:56     root = self._parse_xml_string_to_dom(xml_contents)\r\n18:48:56   File \"/root/.local/share/virtualenvs/mochi-8rsKKfLK/lib/python3.7/site-packages/botocore/parsers.py\", line 437, in _parse_xml_string_to_dom\r\n18:48:56     \"invalid XML received:\\n%s\" % (e, xml_string))\r\n18:48:56 botocore.parsers.ResponseParserError: Unable to parse response (not well-formed (invalid token): line 1, column 0), invalid XML received:\r\n18:48:56 b'{}'\r\n```\r\n\r\n## Expected behavior\r\n\r\nno exception should be raised\r\n\r\n## Actual behavior\r\n\r\n```bash\r\n18:48:56 botocore.parsers.ResponseParserError: Unable to parse response (not well-formed (invalid token): line 1, column 0), invalid XML received:\r\n```\r\n# Steps to reproduce\r\ncall command to list queues when there are no queues created yet,\r\n```python\r\n            return self.client.list_queues(\r\n                QueueNamePrefix=f\"{ENVIRONMENT}-mochi\"\r\n            )\r\n```\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\n\r\n```python\r\nclass AWSSQSWrapper:\r\n    def __init__(self):\r\n        \"\"\"\r\n        Constructs the queues\r\n        \"\"\"\r\n        try:\r\n            self.sqs = boto3.resource(\"sqs\", **BOTO_CLIENT_KWARGS)\r\n            self.client = boto3.client(\"sqs\", **BOTO_CLIENT_KWARGS)\r\n            self.queues = {\r\n                n: AWSQueue(n, self._get_queue_url(n), self._get_queue(n))\r\n                for n in self.list_client_queue_names()\r\n            }\r\n\r\n        except (HTTPClientError, CredentialRetrievalError) as error:\r\n            raise AWSSQSWrapperError(error)\r\n\r\n    def _get_queue_url(self, queue_name: str):\r\n        return self.client.get_queue_url(QueueName=queue_name)[\"QueueUrl\"]\r\n\r\n    def _get_queue(self, queue_name: str):\r\n        return self.sqs.get_queue_by_name(  # pylint:disable=no-member\r\n            QueueName=queue_name\r\n        )\r\n\r\n    def list_client_queues(self):\r\n        try:\r\n            return self.client.list_queues(\r\n                QueueNamePrefix=f\"{ENVIRONMENT}-mochi\"\r\n            )\r\n        except (HTTPClientError, CredentialRetrievalError) as error:\r\n            raise AWSSQSWrapperError(error)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/localstack/localstack/issues/2574", "repository_url": "https://api.github.com/repos/localstack/localstack", "labels_url": "https://api.github.com/repos/localstack/localstack/issues/2574/labels{/name}", "comments_url": "https://api.github.com/repos/localstack/localstack/issues/2574/comments", "events_url": "https://api.github.com/repos/localstack/localstack/issues/2574/events", "html_url": "https://github.com/localstack/localstack/issues/2574", "id": 640692050, "node_id": "MDU6SXNzdWU2NDA2OTIwNTA=", "number": 2574, "title": "Can not connect to kinesalite running with --ssl", "user": {"login": "tigstep", "id": 7043397, "node_id": "MDQ6VXNlcjcwNDMzOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7043397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tigstep", "html_url": "https://github.com/tigstep", "followers_url": "https://api.github.com/users/tigstep/followers", "following_url": "https://api.github.com/users/tigstep/following{/other_user}", "gists_url": "https://api.github.com/users/tigstep/gists{/gist_id}", "starred_url": "https://api.github.com/users/tigstep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tigstep/subscriptions", "organizations_url": "https://api.github.com/users/tigstep/orgs", "repos_url": "https://api.github.com/users/tigstep/repos", "events_url": "https://api.github.com/users/tigstep/events{/privacy}", "received_events_url": "https://api.github.com/users/tigstep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "whummer", "id": 2807888, "node_id": "MDQ6VXNlcjI4MDc4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2807888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whummer", "html_url": "https://github.com/whummer", "followers_url": "https://api.github.com/users/whummer/followers", "following_url": "https://api.github.com/users/whummer/following{/other_user}", "gists_url": "https://api.github.com/users/whummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/whummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whummer/subscriptions", "organizations_url": "https://api.github.com/users/whummer/orgs", "repos_url": "https://api.github.com/users/whummer/repos", "events_url": "https://api.github.com/users/whummer/events{/privacy}", "received_events_url": "https://api.github.com/users/whummer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-17T19:36:55Z", "updated_at": "2020-06-22T22:55:38Z", "closed_at": "2020-06-19T14:45:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Love localstack? Please consider supporting our collective:\r\n\ud83d\udc49  https://opencollective.com/localstack/donate -->\r\n\r\n# Type of request: This is a ...\r\n\r\n[ x] bug report\r\n[ ] feature request\r\n\r\n# Detailed description\r\nWhen I run the localstack through docker compose like so\r\n` TMPDIR=/private$TMPDIR docker-compose up`\r\nssh into the docker container, stop the kinesalite service, start it back with --ssh flag\r\nand try to connect to kinesis using aws like this\r\n`AWS_ACCESS_KEY_ID=x AWS_SECRET_ACCESS_KEY=x aws --region us-east-1 --endpoint-url https://localhost:4568 kinesis create-stream --stream-name myStreamName --shard-count 1 --no-verify-ssl`\r\n\r\nIt throws\r\n```\r\nSSL validation failed for https://localhost:4568/ EOF occurred in violation of protocol (_ssl.c:727)\r\n```\r\n\r\nOn the docker side I can also see\r\n```\r\n 2020-06-17T17:29:35:WARNING:localstack.utils.server.http2_server: Error in proxy handler for request POST http://localhost:4568/: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response')) Traceback (most recent call last):\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 670, in urlopen\r\nlocalstack_main |     httplib_response = self._make_request(\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 426, in _make_request\r\nlocalstack_main |     six.raise_from(e, None)\r\nlocalstack_main |   File \"<string>\", line 3, in raise_from\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\nlocalstack_main |     httplib_response = conn.getresponse()\r\nlocalstack_main |   File \"/usr/lib/python3.8/http/client.py\", line 1322, in getresponse\r\nlocalstack_main |     response.begin()\r\nlocalstack_main |   File \"/usr/lib/python3.8/http/client.py\", line 303, in begin\r\nlocalstack_main |     version, status, reason = self._read_status()\r\nlocalstack_main |   File \"/usr/lib/python3.8/http/client.py\", line 272, in _read_status\r\nlocalstack_main |     raise RemoteDisconnected(\"Remote end closed connection without\"\r\nlocalstack_main | http.client.RemoteDisconnected: Remote end closed connection without response\r\nlocalstack_main | \r\nlocalstack_main | During handling of the above exception, another exception occurred:\r\nlocalstack_main | \r\nlocalstack_main | Traceback (most recent call last):\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/requests/adapters.py\", line 439, in send\r\nlocalstack_main |     resp = conn.urlopen(\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 724, in urlopen\r\nlocalstack_main |     retries = retries.increment(\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/util/retry.py\", line 403, in increment\r\nlocalstack_main |     raise six.reraise(type(error), error, _stacktrace)\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/packages/six.py\", line 734, in reraise\r\nlocalstack_main |     raise value.with_traceback(tb)\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 670, in urlopen\r\nlocalstack_main |     httplib_response = self._make_request(\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 426, in _make_request\r\nlocalstack_main |     six.raise_from(e, None)\r\nlocalstack_main |   File \"<string>\", line 3, in raise_from\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\nlocalstack_main |     httplib_response = conn.getresponse()\r\nlocalstack_main |   File \"/usr/lib/python3.8/http/client.py\", line 1322, in getresponse\r\nlocalstack_main |     response.begin()\r\nlocalstack_main |   File \"/usr/lib/python3.8/http/client.py\", line 303, in begin\r\nlocalstack_main |     version, status, reason = self._read_status()\r\nlocalstack_main |   File \"/usr/lib/python3.8/http/client.py\", line 272, in _read_status\r\nlocalstack_main |     raise RemoteDisconnected(\"Remote end closed connection without\"\r\nlocalstack_main | urllib3.exceptions.ProtocolError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\r\nlocalstack_main | \r\nlocalstack_main | During handling of the above exception, another exception occurred:\r\nlocalstack_main | \r\nlocalstack_main | Traceback (most recent call last):\r\nlocalstack_main |   File \"/opt/code/localstack/localstack/utils/server/http2_server.py\", line 53, in index\r\nlocalstack_main |     result = await run_sync(handler, request, data)\r\nlocalstack_main |   File \"/opt/code/localstack/localstack/utils/async_utils.py\", line 46, in run_sync\r\nlocalstack_main |     return await loop.run_in_executor(THREAD_POOL, copy_context().run, func, *args)\r\nlocalstack_main |   File \"/usr/lib/python3.8/concurrent/futures/thread.py\", line 57, in run\r\nlocalstack_main |     result = self.fn(*self.args, **self.kwargs)\r\nlocalstack_main |   File \"/opt/code/localstack/localstack/services/generic_proxy.py\", line 550, in handler\r\nlocalstack_main |     response = modify_and_forward(method=method, path=path_with_params, data_bytes=data, headers=headers,\r\nlocalstack_main |   File \"/opt/code/localstack/localstack/services/generic_proxy.py\", line 371, in modify_and_forward\r\nlocalstack_main |     response = requests_method(request_url, data=data_to_send,\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/requests/api.py\", line 119, in post\r\nlocalstack_main |     return request('post', url, data=data, json=json, **kwargs)\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/requests/api.py\", line 61, in request\r\nlocalstack_main |     return session.request(method=method, url=url, **kwargs)\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/requests/sessions.py\", line 530, in request\r\nlocalstack_main |     resp = self.send(prep, **send_kwargs)\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/requests/sessions.py\", line 643, in send\r\nlocalstack_main |     r = adapter.send(request, **kwargs)\r\nlocalstack_main |   File \"/opt/code/localstack/.venv/lib/python3.8/site-packages/requests/adapters.py\", line 498, in send\r\nlocalstack_main |     raise ConnectionError(err, request=request)\r\nlocalstack_main | requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\r\n\r\n\r\n...\r\n\r\n## Expected behavior\r\nI would expect the `--no-verify-ssl` to make this call succeed\r\n...\r\n\r\n## Actual behavior\r\nThe connection is failing.\r\n...\r\n\r\n# Steps to reproduce\r\n1) ` TMPDIR=/private$TMPDIR docker-compose up`\r\n\r\n2) `AWS_ACCESS_KEY_ID=x AWS_SECRET_ACCESS_KEY=x aws --region us-east-1 --endpoint-url https://localhost:4568 kinesis create-stream --stream-name myStreamName --shard-count 1 --no-verify-ssl`\r\n\r\n## Command used to start LocalStack\r\n` TMPDIR=/private$TMPDIR docker-compose up`\r\n...\r\n\r\n## Client code (AWS SDK code snippet, or sequence of \"awslocal\" commands)\r\nI have also installed and ran \r\n`awslocal kinesis list-streams`\r\nGetting \r\n`An error occurred (500) when calling the ListStreams operation (reached max retries: 4): `\r\n...\r\n", "performed_via_github_app": null, "score": 1.0}]}