{"total_count": 74, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/189", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/189/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/189/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/189", "id": 631078191, "node_id": "MDU6SXNzdWU2MzEwNzgxOTE=", "number": 189, "title": "AttributeError when initializing Marshmallow", "user": {"login": "PatrickRic", "id": 39130674, "node_id": "MDQ6VXNlcjM5MTMwNjc0", "avatar_url": "https://avatars0.githubusercontent.com/u/39130674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatrickRic", "html_url": "https://github.com/PatrickRic", "followers_url": "https://api.github.com/users/PatrickRic/followers", "following_url": "https://api.github.com/users/PatrickRic/following{/other_user}", "gists_url": "https://api.github.com/users/PatrickRic/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatrickRic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatrickRic/subscriptions", "organizations_url": "https://api.github.com/users/PatrickRic/orgs", "repos_url": "https://api.github.com/users/PatrickRic/repos", "events_url": "https://api.github.com/users/PatrickRic/events{/privacy}", "received_events_url": "https://api.github.com/users/PatrickRic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95191358, "node_id": "MDU6TGFiZWw5NTE5MTM1OA==", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T19:06:47Z", "updated_at": "2020-06-07T15:57:34Z", "closed_at": "2020-06-07T15:57:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use Flask, SqlAlchemy and Marshmallow to build a REST API with Python.\r\n\r\nI used pipenv to install flask, flask-sqlalchemy, flask-marshmallow and marshmallow-sqlalchemy.\r\n\r\nHere are my dependency versions:\r\n\r\nclick==7.1.2\r\nFlask==1.1.2\r\nflask-marshmallow==0.12.0\r\nFlask-SQLAlchemy==2.4.3\r\nitsdangerous==1.1.0\r\nJinja2==2.11.2\r\nMarkupSafe==1.1.1\r\nmarshmallow==2.21.0\r\nmarshmallow-sqlalchemy==0.19.0\r\nsix==1.15.0\r\nSQLAlchemy==1.3.17\r\nWerkzeug==1.0.1\r\n\r\nHowever, when I try to initialize an instance of Marshmallow with my Flask app as a parameter, I get following Error:\r\n\r\n  File \"/Users/pro/PycharmProjects/EventPlannerAPI/app.py\", line 15, in <module>\r\n    ma = Marshmallow(app)\r\n  File \"/Users/pro/.local/share/virtualenvs/EventPlannerAPI-OoqXq5gv/lib/python3.7/site-packages/flask_marshmallow/__init__.py\", line 104, in __init__\r\n    self.init_app(app)\r\n  File \"/Users/pro/.local/share/virtualenvs/EventPlannerAPI-OoqXq5gv/lib/python3.7/site-packages/flask_marshmallow/__init__.py\", line 116, in init_app\r\n    self.SQLAlchemySchema.OPTIONS_CLASS.session = db.session\r\nAttributeError: 'NoneType' object has no attribute 'OPTIONS_CLASS'\r\n\r\nOn StackOverflow I was told that probably a dependency is broken. Here is my whole code:\r\n\r\n`from flask import Flask, request, jsonify\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom flask_marshmallow import Marshmallow\r\nimport os\r\n\r\n# Init app\r\napp = Flask(__name__)\r\nbasedir = os.path.abspath(os.path.dirname(__file__))\r\n# Database\r\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///' + os.path.join(basedir, 'db.sqlite')\r\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\r\n# Init db\r\ndb = SQLAlchemy(app)\r\n# Init ma\r\nma = Marshmallow(app)\r\n\r\n\r\n# Run Server\r\nif __name__ == '__main__':\r\n    app.run(debug=True)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/188", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/188/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/188/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/188", "id": 628961227, "node_id": "MDU6SXNzdWU2Mjg5NjEyMjc=", "number": 188, "title": "'Marshmallow' object has no attribute 'ModelSchema' when using version 12", "user": {"login": "notdesmond", "id": 29771458, "node_id": "MDQ6VXNlcjI5NzcxNDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/29771458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notdesmond", "html_url": "https://github.com/notdesmond", "followers_url": "https://api.github.com/users/notdesmond/followers", "following_url": "https://api.github.com/users/notdesmond/following{/other_user}", "gists_url": "https://api.github.com/users/notdesmond/gists{/gist_id}", "starred_url": "https://api.github.com/users/notdesmond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notdesmond/subscriptions", "organizations_url": "https://api.github.com/users/notdesmond/orgs", "repos_url": "https://api.github.com/users/notdesmond/repos", "events_url": "https://api.github.com/users/notdesmond/events{/privacy}", "received_events_url": "https://api.github.com/users/notdesmond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-02T07:15:46Z", "updated_at": "2020-06-02T15:51:41Z", "closed_at": "2020-06-02T15:51:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is a bug but when I'm using mashmallow 3.6.0 and marshmallow-sqlalchemy 0.23.1 with flask-marshmallow 12 I get this error 'Marshmallow' object has no attribute 'ModelSchema'.\r\n\r\nThis doesn't happen with I use flask-marshmallow 11.\r\n\r\nThe code:\r\n\r\nclass Companies(mm.ModelSchema):\r\n    class Meta:\r\n        model = CompaniesModel\r\n        unknown = EXCLUDE", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/180", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/180/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/180/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/180", "id": 604898121, "node_id": "MDU6SXNzdWU2MDQ4OTgxMjE=", "number": 180, "title": "Using slqa_session in Meta class declaration.", "user": {"login": "fnalonso", "id": 7150029, "node_id": "MDQ6VXNlcjcxNTAwMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7150029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fnalonso", "html_url": "https://github.com/fnalonso", "followers_url": "https://api.github.com/users/fnalonso/followers", "following_url": "https://api.github.com/users/fnalonso/following{/other_user}", "gists_url": "https://api.github.com/users/fnalonso/gists{/gist_id}", "starred_url": "https://api.github.com/users/fnalonso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fnalonso/subscriptions", "organizations_url": "https://api.github.com/users/fnalonso/orgs", "repos_url": "https://api.github.com/users/fnalonso/repos", "events_url": "https://api.github.com/users/fnalonso/events{/privacy}", "received_events_url": "https://api.github.com/users/fnalonso/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95191358, "node_id": "MDU6TGFiZWw5NTE5MTM1OA==", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T16:35:32Z", "updated_at": "2020-04-27T12:32:27Z", "closed_at": "2020-04-26T18:05:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am implementing a simple API using flask-marshmallow and the error AttributeError: 'DummySession' object has no attribute 'query' happened, after navigating the source code I found some comments about adding the `sqla_session` inside the Meta class when using the attribute `load_instance = True` and then everything started to work fine. Why this is needed ? I am creating my app instance as bellow:\r\n```python\r\nfrom models.db import db #flask_sqlalchemy.SQLAlchemy instance\r\nfrom schemas.ma import ma #flask_marshmallow.Marshmallow instance\r\napp = Flask(__name__)\r\n# models imported\r\n# routes added\r\n\r\ndb.init_app(app)\r\nma.init_app(app)\r\n```\r\nInside the init_app from ma the session is set from app.extensions['sqlalchemy'].db and this is confusing me because I thought this was a global session used for every schema created. This only happen when using the schema.load() method. There is any reason for this behavior ?\r\n\r\nThank you!!\r\n\r\nPS: Sorry if this is not the place to put this question.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/173", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/173/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/173/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/173", "id": 579901872, "node_id": "MDU6SXNzdWU1Nzk5MDE4NzI=", "number": 173, "title": "DeprecationWarning: marshmallow_sqlalchemy.ModelSchema", "user": {"login": "westscz", "id": 9075214, "node_id": "MDQ6VXNlcjkwNzUyMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9075214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westscz", "html_url": "https://github.com/westscz", "followers_url": "https://api.github.com/users/westscz/followers", "following_url": "https://api.github.com/users/westscz/following{/other_user}", "gists_url": "https://api.github.com/users/westscz/gists{/gist_id}", "starred_url": "https://api.github.com/users/westscz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westscz/subscriptions", "organizations_url": "https://api.github.com/users/westscz/orgs", "repos_url": "https://api.github.com/users/westscz/repos", "events_url": "https://api.github.com/users/westscz/events{/privacy}", "received_events_url": "https://api.github.com/users/westscz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 155147362, "node_id": "MDU6TGFiZWwxNTUxNDczNjI=", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-12T12:22:54Z", "updated_at": "2020-04-26T18:05:55Z", "closed_at": "2020-04-26T18:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "ModelSchema and TableSchema in library marshmallow_sqlalchemy are deprecated.\r\n\r\nTraceback:\r\n\r\n```\r\n\"offploox/ext/marshmallow.py:1: in <module>\r\n    from flask_marshmallow import Marshmallow\r\n/usr/local/lib/python3.8/site-packages/flask_marshmallow/__init__.py:24: in <module>\r\n    from . import sqla\r\n/usr/local/lib/python3.8/site-packages/flask_marshmallow/sqla.py:12: in <module>\r\n    import marshmallow_sqlalchemy as msqla\r\n/usr/local/lib/python3.8/site-packages/marshmallow_sqlalchemy/__init__.py:1: in <module>\r\n    from .schema import (\r\n/usr/local/lib/python3.8/site-packages/marshmallow_sqlalchemy/schema/__init__.py:1: in <module>\r\n    from .model_schema import ModelSchema, ModelSchemaOpts, ModelSchemaMeta\r\n/usr/local/lib/python3.8/site-packages/marshmallow_sqlalchemy/schema/model_schema.py:63: in <module>\r\n    class ModelSchema(LoadInstanceMixin.Schema, ma.Schema, metaclass=ModelSchemaMeta):\r\n/usr/local/lib/python3.8/site-packages/marshmallow_sqlalchemy/schema/model_schema.py:40: in __init__\r\n    warnings.warn(\r\nE   DeprecationWarning: marshmallow_sqlalchemy.ModelSchema is deprecated. Subclass marshmallow_sqlalchemy.SQLAlchemyAutoSchema and set \"load_instance = True\" and \"include_relationships = True\" on \"class Meta\" instead.\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/163", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/163/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/163/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/163", "id": 556809112, "node_id": "MDU6SXNzdWU1NTY4MDkxMTI=", "number": 163, "title": "Got Vulnerability while feeding request.get_json() data to marshmallow directly .", "user": {"login": "vvksahoo", "id": 56999733, "node_id": "MDQ6VXNlcjU2OTk5NzMz", "avatar_url": "https://avatars1.githubusercontent.com/u/56999733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvksahoo", "html_url": "https://github.com/vvksahoo", "followers_url": "https://api.github.com/users/vvksahoo/followers", "following_url": "https://api.github.com/users/vvksahoo/following{/other_user}", "gists_url": "https://api.github.com/users/vvksahoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvksahoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvksahoo/subscriptions", "organizations_url": "https://api.github.com/users/vvksahoo/orgs", "repos_url": "https://api.github.com/users/vvksahoo/repos", "events_url": "https://api.github.com/users/vvksahoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vvksahoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-29T11:44:19Z", "updated_at": "2020-02-01T17:43:58Z", "closed_at": "2020-02-01T17:43:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using flask-marshmallow for user input validation . \r\n```\r\nfrom marshmallow import Schema, fields, validate\r\n\r\n\r\nclass UserSchema(Schema):\r\n    username = fields.String(required=True,\r\n                            validate=[validate.Length(min=1, error=\"Field should not be empty.\")])\r\n    pincode = fields.Integer(required=True, validate=validate.Range(\r\n        min=0, error=\"pincode is invalid, it should be a positive integer.\"))\r\n```\r\nIn application  controller part :\r\n```\r\nclass UserDetails(Resource):\r\n    user_schema_obj = UserSchema()\r\n    def post(self):\r\n        if not request.is_json:\r\n            return make_response(jsonify(error_dict(\r\n                current_request_id(), \"Unsupported media type, Requests must be JSON\",\r\n                415)), status.HTTP_415_UNSUPPORTED_MEDIA_TYPE)\r\n\r\n        if not request.json:\r\n            return make_response(jsonify(error_dict(\r\n                current_request_id(), \"Required parameter not found\",\r\n                400)), status.HTTP_400_BAD_REQUEST)\r\n        request_jsn = UserDetails.user_schema_obj.load(request.get_json())\r\n        username = request_jsn['username']\r\n        pincode = request_jsn['pincode']\r\n```\r\nThis is the way i am feeding user input to marshmallow schema . when i am doing app scan it saying ```gets user input from element **get_json**. This element\u2019s value flows through the code without being properly sanitized or validated and is eventually stored in the server-side Session object, in post ```.\r\nThis constitutes a Trust Boundary Violation. \r\nDont know how to resolve this ? Please help!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/160", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/160/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/160/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/160", "id": 554807955, "node_id": "MDU6SXNzdWU1NTQ4MDc5NTU=", "number": 160, "title": "TypeError: issubclass() arg 1 must be a class", "user": {"login": "valentinoPereira", "id": 21219324, "node_id": "MDQ6VXNlcjIxMjE5MzI0", "avatar_url": "https://avatars0.githubusercontent.com/u/21219324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valentinoPereira", "html_url": "https://github.com/valentinoPereira", "followers_url": "https://api.github.com/users/valentinoPereira/followers", "following_url": "https://api.github.com/users/valentinoPereira/following{/other_user}", "gists_url": "https://api.github.com/users/valentinoPereira/gists{/gist_id}", "starred_url": "https://api.github.com/users/valentinoPereira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valentinoPereira/subscriptions", "organizations_url": "https://api.github.com/users/valentinoPereira/orgs", "repos_url": "https://api.github.com/users/valentinoPereira/repos", "events_url": "https://api.github.com/users/valentinoPereira/events{/privacy}", "received_events_url": "https://api.github.com/users/valentinoPereira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-24T15:41:56Z", "updated_at": "2020-04-26T18:06:27Z", "closed_at": "2020-04-26T18:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following is my code `test.py`\r\n```\r\nfrom flask import Flask\r\nfrom wai_backend.settings import FlaskConfig\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom flask_migrate import Migrate\r\nfrom flask_marshmallow import Marshmallow\r\n\r\napp = Flask(__name__)\r\napp.config.from_object(FlaskConfig())\r\ndb = SQLAlchemy(app)\r\nmigrate = Migrate(app)\r\nmarshmallow = Marshmallow(app)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n```\r\n\r\nI am getting the following error when I run `python test.py`:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:/Users/Ajackus/Desktop/Wai Guru/wai-api/wai_backend/test.py\", line 5, in <module>\r\n    from flask_marshmallow import Marshmallow\r\n  File \"C:\\Users\\Ajackus\\Desktop\\Wai Guru\\wai-api\\venv\\lib\\site-packages\\flask_marshmallow\\__init__.py\", line 14, in <module>\r\n    from marshmallow import (\r\n  File \"C:\\Users\\Ajackus\\Desktop\\Wai Guru\\wai-api\\venv\\lib\\site-packages\\marshmallow\\__init__.py\", line 1, in <module>\r\n    from marshmallow.schema import Schema, SchemaOpts\r\n  File \"C:\\Users\\Ajackus\\Desktop\\Wai Guru\\wai-api\\venv\\lib\\site-packages\\marshmallow\\schema.py\", line 14, in <module>\r\n    from marshmallow import base, fields as ma_fields, class_registry, types\r\n  File \"C:\\Users\\Ajackus\\Desktop\\Wai Guru\\wai-api\\venv\\lib\\site-packages\\marshmallow\\fields.py\", line 14, in <module>\r\n    from marshmallow import validate, utils, class_registry, types\r\n  File \"C:\\Users\\Ajackus\\Desktop\\Wai Guru\\wai-api\\venv\\lib\\site-packages\\marshmallow\\validate.py\", line 355, in <module>\r\n    class Regexp(Validator):\r\n  File \"C:\\Users\\Ajackus\\Desktop\\Wai Guru\\wai-api\\venv\\lib\\site-packages\\marshmallow\\validate.py\", line 377, in Regexp\r\n    error: str = None\r\n  File \"C:\\Program Files\\Python 3.5\\lib\\typing.py\", line 534, in __getitem__\r\n    dict(self.__dict__), parameters, _root=True)\r\n  File \"C:\\Program Files\\Python 3.5\\lib\\typing.py\", line 491, in __new__\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"C:\\Program Files\\Python 3.5\\lib\\typing.py\", line 491, in <genexpr>\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\nTypeError: issubclass() arg 1 must be a class\r\n```\r\n\r\nWhen I comment out these two lines everything works fine:\r\n- from flask_marshmallow import Marshmallow\r\n- marshmallow = Marshmallow(app)\r\n\r\nI tried googling this issue but no luck.  I am using `flask_marshmallow==0.10.1`\r\n\r\nCan you help me with this issue please? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/159", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/159/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/159/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/159", "id": 551941032, "node_id": "MDU6SXNzdWU1NTE5NDEwMzI=", "number": 159, "title": "Integration between flask-marshmallow and flask_sqlalchemy", "user": {"login": "joaolongo", "id": 2637270, "node_id": "MDQ6VXNlcjI2MzcyNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2637270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joaolongo", "html_url": "https://github.com/joaolongo", "followers_url": "https://api.github.com/users/joaolongo/followers", "following_url": "https://api.github.com/users/joaolongo/following{/other_user}", "gists_url": "https://api.github.com/users/joaolongo/gists{/gist_id}", "starred_url": "https://api.github.com/users/joaolongo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joaolongo/subscriptions", "organizations_url": "https://api.github.com/users/joaolongo/orgs", "repos_url": "https://api.github.com/users/joaolongo/repos", "events_url": "https://api.github.com/users/joaolongo/events{/privacy}", "received_events_url": "https://api.github.com/users/joaolongo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-19T15:41:48Z", "updated_at": "2020-02-25T18:30:41Z", "closed_at": "2020-02-25T18:30:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\r\n\r\nI'm have been trying to use the ModelSchema in my application with no success. Every time I try to pass a request from my client application to the flask app, I get the following error:\r\n\r\n`for prop in model.__mapper__.iterate_properties:\r\nAttributeError: module 'app.models.User' has no attribute '__mapper__'`\r\n\r\nSo, I have been following the documentation steps to initialize sqlalchemy and marshmallow correctly and I am using the db.Model to declare my models.\r\n\r\nMy doubt is, should __mapper__ be declared manually or i'm missing something:\r\n\r\nHere are my User.py, __init__.py and my schema:\r\n\r\n```\r\nclass User(db.Model):\r\n\r\n    id = db.Column('id', UUID(as_uuid=True), primary_key=True)\r\n    created_at = db.Column(db.DateTime, default=datetime.utcnow())\r\n    last_update = db.Column(db.DateTime, onupdate=datetime.utcnow())\r\n    name = db.Column(db.String(250), nullable=False)\r\n    email = db.Column(db.String(250), nullable=False)\r\n```\r\n\r\n\r\n```\r\ndef create_app(test_config=None):\r\n    f_app = Flask(__name__, instance_relative_config=True)\r\n\r\n    f_app.config.from_object(config.BaseConfig)\r\n\r\n    f_app.url_map.strict_slashes = False\r\n\r\n    app.infrastructure.db.init_app(f_app)\r\n    app.infrastructure.marshmallow.init_app(f_app)\r\n\r\n    app.infrastructure.migrate.init_app(f_app, app.infrastructure.db, directory=os.path.join(f_app.root_path, 'migrations'))\r\n    api = Api(f_app)\r\n\r\n    from app.infrastructure.routes import register_routes\r\n    register_routes(api)\r\n\r\n    try:\r\n        os.makedirs(f_app.instance_path)\r\n    except OSError:\r\n        pass\r\n\r\n    @f_app.route('/', defaults={'path': ''})\r\n    @f_app.route('/<path:path>')\r\n    def index(path):\r\n        return f_app.send_static_file('index.html')\r\n\r\n    @f_app.route('/favicon.ico')\r\n    def favicon():\r\n        return send_from_directory(os.path.join(f_app.root_path, 'static'),\r\n                                   'favicon.ico', mimetype='image/vnd.microsoft.icon')\r\n\r\n    return f_app\r\n```\r\n\r\nthe sqlalchemy and marshmallow classes are instanced and called from another package.\r\n\r\n```\r\nclass UserSchema(marshmallow.ModelSchema):\r\n    class Meta:\r\n        model = User\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/150", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/150/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/150/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/150", "id": 508614173, "node_id": "MDU6SXNzdWU1MDg2MTQxNzM=", "number": 150, "title": "kombu.exceptions.EncodeError: Object of type Response is not JSON serializable when called from celery?", "user": {"login": "scheung38", "id": 1273014, "node_id": "MDQ6VXNlcjEyNzMwMTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1273014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scheung38", "html_url": "https://github.com/scheung38", "followers_url": "https://api.github.com/users/scheung38/followers", "following_url": "https://api.github.com/users/scheung38/following{/other_user}", "gists_url": "https://api.github.com/users/scheung38/gists{/gist_id}", "starred_url": "https://api.github.com/users/scheung38/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scheung38/subscriptions", "organizations_url": "https://api.github.com/users/scheung38/orgs", "repos_url": "https://api.github.com/users/scheung38/repos", "events_url": "https://api.github.com/users/scheung38/events{/privacy}", "received_events_url": "https://api.github.com/users/scheung38/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-17T17:20:22Z", "updated_at": "2020-01-15T00:26:31Z", "closed_at": "2020-01-15T00:26:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```\r\n# Create a Product\r\n@app.route('/contact', methods=['POST'])\r\ndef add_contact():\r\n    insert.delay()\r\n\r\n    return 'Inserted'\r\n\r\n\r\n@celery.task(name='app.insert')\r\ndef insert():\r\n    try:\r\n        firstname = fake.first_name()\r\n        username = firstname + str(fake.random_number(4, 100))\r\n        new_contact = Contact(username, firstname, fake.last_name())\r\n        db.session.add(new_contact)\r\n        db.session.commit()\r\n        print(\"new_contact: \", new_contact)\r\n        return contact_schema.jsonify(new_contact) # contactSchema.\r\n    except Exception as e:\r\n        print(\"Error :\", e)\r\n```\r\nInsert is displayed in POSTMAN\r\n\r\nbut when called from celery :\r\n```\r\n\r\n celery -A app.celery worker --loglevel=INFO\r\n\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nkombu.exceptions.EncodeError: Object of type Response is not JSON serializable\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/149", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/149/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/149/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/149", "id": 492851010, "node_id": "MDU6SXNzdWU0OTI4NTEwMTA=", "number": 149, "title": "Relationship field not validating/required", "user": {"login": "devop911", "id": 26169327, "node_id": "MDQ6VXNlcjI2MTY5MzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/26169327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devop911", "html_url": "https://github.com/devop911", "followers_url": "https://api.github.com/users/devop911/followers", "following_url": "https://api.github.com/users/devop911/following{/other_user}", "gists_url": "https://api.github.com/users/devop911/gists{/gist_id}", "starred_url": "https://api.github.com/users/devop911/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devop911/subscriptions", "organizations_url": "https://api.github.com/users/devop911/orgs", "repos_url": "https://api.github.com/users/devop911/repos", "events_url": "https://api.github.com/users/devop911/events{/privacy}", "received_events_url": "https://api.github.com/users/devop911/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-12T14:42:14Z", "updated_at": "2020-04-26T18:08:28Z", "closed_at": "2020-04-26T18:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\nI am wondering why there is no need to add a relationship field while it is required in the model.\r\n\r\nExample:\r\n\r\nmodels/notification.py\r\n```\r\nclass Notification(db.Model, Timestamp):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    rule_id = db.Column(db.Integer, db.ForeignKey('rule.id'), nullable=False)\r\n    rule = db.relationship(\"Rule\", backref=\"notifications\")\r\n```\r\n\r\n\r\nmodels/rule.py\r\n```\r\nclass Rule(db.Model, Timestamp):\r\n    message = db.Column(db.String(500), nullable=False)\r\n```\r\n\r\n\r\n\r\nschema/base_schema.py\r\n```\r\nclass BaseSchema(ma.ModelSchema):\r\n    id = fields.Integer(dump_only=True)\r\n    created = fields.DateTime(dump_only=True)\r\n    updated = fields.DateTime(dump_only=True)\r\n\r\n    class Meta:\r\n        sqla_session = db.session\r\n```\r\n\r\n\r\n\r\nschema/notification.py\r\n```\r\nclass NotificationSchema(BaseSchema):\r\n\r\n    class Meta(BaseSchema.Meta):\r\n        model = Notification\r\n```\r\n\r\n\r\nPost Endpoint\r\n```\r\n@blueprint_api_v1_notifications.route('', methods=['POST'])\r\ndef add_notification():\r\n    notification_data = request.get_json(force=True)\r\n\r\n    schema = NotificationSchema()\r\n    notification = schema.load(notification_data)\r\n\r\n    db.session.add(notification)\r\n    db.session.commit()\r\n\r\n    return make_response(\r\n        jsonify(schema.dump(notification)),\r\n        201\r\n    )\r\n```\r\n\r\nIf ll do now a post without rule relation in request body, ill end up with an SQLALCHEMY null constraint exception\r\n```\r\n{\r\n  \"error\": \"(psycopg2.errors.NotNullViolation) null value in column \\\"rule_id\\\" violates not-null constraint\\nDETAIL:  Failing row contains (2019-09-12 14:33:35.016647, 2019-09-12 14:33:35.016659, 27, null).\\n\\n[SQL: INSERT INTO notification (created, updated, rule_id) VALUES (%(created)s, %(updated)s, %(rule_id)s) RETURNING notification.id]\\n[parameters: {'created': datetime.datetime(2019, 9, 12, 14, 33, 35, 16647), 'updated': datetime.datetime(2019, 9, 12, 14, 33, 35, 16659), 'rule_id': None}]\\n(Background on this error at: http://sqlalche.me/e/gkpj)\"\r\n}\r\n```\r\n\r\n\r\n\r\nIn my opinion it should be checked if field rule is inside the post json and raise an exception if not.\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/148", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/148/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/148/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/148", "id": 486229275, "node_id": "MDU6SXNzdWU0ODYyMjkyNzU=", "number": 148, "title": "Is there a plan that adding DEFAULT_DATETIME_FORMAT for Flask config", "user": {"login": "gotounix", "id": 18606632, "node_id": "MDQ6VXNlcjE4NjA2NjMy", "avatar_url": "https://avatars2.githubusercontent.com/u/18606632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotounix", "html_url": "https://github.com/gotounix", "followers_url": "https://api.github.com/users/gotounix/followers", "following_url": "https://api.github.com/users/gotounix/following{/other_user}", "gists_url": "https://api.github.com/users/gotounix/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotounix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotounix/subscriptions", "organizations_url": "https://api.github.com/users/gotounix/orgs", "repos_url": "https://api.github.com/users/gotounix/repos", "events_url": "https://api.github.com/users/gotounix/events{/privacy}", "received_events_url": "https://api.github.com/users/gotounix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-28T08:22:51Z", "updated_at": "2019-09-02T06:54:33Z", "closed_at": "2019-09-02T06:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it's better to add a ``DEFAULT_DATETIME_FORMAT`` for global ma.DateTime.\r\nThen we shouldn't add ma.DateTime(format=MyFormat) for each schema created by models.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/147", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/147/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/147/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/147", "id": 484443744, "node_id": "MDU6SXNzdWU0ODQ0NDM3NDQ=", "number": 147, "title": "Incompatibility with marshmallow version 3.0.0", "user": {"login": "rohanjaswal2507", "id": 7920333, "node_id": "MDQ6VXNlcjc5MjAzMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7920333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohanjaswal2507", "html_url": "https://github.com/rohanjaswal2507", "followers_url": "https://api.github.com/users/rohanjaswal2507/followers", "following_url": "https://api.github.com/users/rohanjaswal2507/following{/other_user}", "gists_url": "https://api.github.com/users/rohanjaswal2507/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohanjaswal2507/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohanjaswal2507/subscriptions", "organizations_url": "https://api.github.com/users/rohanjaswal2507/orgs", "repos_url": "https://api.github.com/users/rohanjaswal2507/repos", "events_url": "https://api.github.com/users/rohanjaswal2507/events{/privacy}", "received_events_url": "https://api.github.com/users/rohanjaswal2507/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95191363, "node_id": "MDU6TGFiZWw5NTE5MTM2Mw==", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-23T09:59:19Z", "updated_at": "2019-08-28T14:21:53Z", "closed_at": "2019-08-23T12:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "A new version(3.0.0) of marshmallow has been released on Aug 18, 2019. There have been some changes which break existing implementations. For example, \"combat\" module has been removed from marshmallow 3.0.0.\r\n\r\nExisting applications break because flask-marshmallow requires marshmallow >= 2.0.0 which automatically downloads the latest version(incompatible) during deployments.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/139", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/139/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/139/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/139", "id": 456571433, "node_id": "MDU6SXNzdWU0NTY1NzE0MzM=", "number": 139, "title": "Error working with marshmallow >=3.0.0rc7 did't work.", "user": {"login": "heckad", "id": 45011689, "node_id": "MDQ6VXNlcjQ1MDExNjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/45011689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heckad", "html_url": "https://github.com/heckad", "followers_url": "https://api.github.com/users/heckad/followers", "following_url": "https://api.github.com/users/heckad/following{/other_user}", "gists_url": "https://api.github.com/users/heckad/gists{/gist_id}", "starred_url": "https://api.github.com/users/heckad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heckad/subscriptions", "organizations_url": "https://api.github.com/users/heckad/orgs", "repos_url": "https://api.github.com/users/heckad/repos", "events_url": "https://api.github.com/users/heckad/events{/privacy}", "received_events_url": "https://api.github.com/users/heckad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-15T20:06:06Z", "updated_at": "2019-06-15T22:20:23Z", "closed_at": "2019-06-15T22:20:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "In new marshmellow processor gets `item, many=many, **kwargs`, but in your library, you got only data because I got: `TypeError: make_instance() got an unexpected keyword argument 'many'`. What to do?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/138", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/138/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/138/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/138", "id": 456266785, "node_id": "MDU6SXNzdWU0NTYyNjY3ODU=", "number": 138, "title": "Nasted Schema with multiple fields", "user": {"login": "kakul232", "id": 8085859, "node_id": "MDQ6VXNlcjgwODU4NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8085859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kakul232", "html_url": "https://github.com/kakul232", "followers_url": "https://api.github.com/users/kakul232/followers", "following_url": "https://api.github.com/users/kakul232/following{/other_user}", "gists_url": "https://api.github.com/users/kakul232/gists{/gist_id}", "starred_url": "https://api.github.com/users/kakul232/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kakul232/subscriptions", "organizations_url": "https://api.github.com/users/kakul232/orgs", "repos_url": "https://api.github.com/users/kakul232/repos", "events_url": "https://api.github.com/users/kakul232/events{/privacy}", "received_events_url": "https://api.github.com/users/kakul232/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-14T14:04:37Z", "updated_at": "2020-01-24T11:54:04Z", "closed_at": "2020-01-24T11:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to build a role base relation between 3 model , \r\n\r\nUserModel : \r\n\r\n    class UserModel(db.Model):\r\n        __tablename__ = 'users'\r\n    \r\n        id = Column(Integer, primary_key=True)\r\n        username = Column(String(120), unique=True, nullable=False)\r\n        password = Column(String(120), nullable=False)\r\n        reset_token = Column(String(120), nullable=True)\r\n        status = Column(Integer, nullable=True)\r\n        roleofuser = db.relationship('RoleUser', backref=db.backref('roleofuser'))\r\n\r\nafter that I have created a role and user mapped model\r\nUserRole model\r\n\r\n    class RoleUser(db.Model):\r\n        __tablename__ = 'role_users'\r\n    \r\n        id = Column(Integer(), primary_key=True)\r\n        role_id = Column(Integer(), db.ForeignKey('role.id'))\r\n        user_id = Column(Integer(), db.ForeignKey('users.id'))\r\n        role_rel = db.relationship('Role',\r\n                                   backref=db.backref('role_rel'))\r\n        user_rel = db.relationship('UserModel',\r\n                                   backref=db.backref('user_rel'))\r\n\r\nAnd finally the Role model \r\n \r\n\r\n    class Role(db.Model):\r\n        __tablename__ = 'role'\r\n    \r\n        id = Column(Integer(), primary_key=True)\r\n        name = Column(String(50), unique=True)\r\n\r\nAfter That I ma using Marshmallow schema to display the data \r\n\r\n    class UserScheme(ma.MOdelSchema):\r\n        roleofuser = fields.Nested(\"RoleUserSchema\")\r\n        username = fields.String(required=True)\r\n    \r\n        class Meta:\r\n            model = UserModel\r\n            #fields = (\"username\",\"userrole\")\r\n    \r\n    \"\"\" Role USER mapped \"\"\" \r\n    class RoleUserSchema(ma.Schema):\r\n        user_rel = fields.Nested(\"UserScheme\")\r\n        role_rel = fields.Nested(\"RoleSchema\")\r\n        class Meta:\r\n            model = RoleUser\r\n    \r\n    \"\"\"Role \"\"\"\r\n    \r\n    class RoleSchema(ma.Schema):\r\n        roleuser_rel = fields.Nested(\"RoleUserSchema\")\r\n        class Meta:\r\n            Role\r\n\r\n\r\nNow the problem is after calling `user.query.all() ` , \r\nrelation data is not appending on result ,\r\ngetting result like : \r\n\r\n    {\r\n    roleofuser:{},\r\n    username: abcd123\r\n    } \r\n\r\nand i am expecting\r\n\r\n```\r\n    {\r\n        roleofuser : {\r\n         role_rel: {\r\n                     id:1,\r\n                     name: 'admin'\r\n              }\r\n        },\r\n    username : 'admin232'\r\n    }\r\n```\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/136", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/136/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/136/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/136", "id": 446089176, "node_id": "MDU6SXNzdWU0NDYwODkxNzY=", "number": 136, "title": "How to transform a list of objects into a list of strings?", "user": {"login": "rn4n", "id": 3982052, "node_id": "MDQ6VXNlcjM5ODIwNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3982052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rn4n", "html_url": "https://github.com/rn4n", "followers_url": "https://api.github.com/users/rn4n/followers", "following_url": "https://api.github.com/users/rn4n/following{/other_user}", "gists_url": "https://api.github.com/users/rn4n/gists{/gist_id}", "starred_url": "https://api.github.com/users/rn4n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rn4n/subscriptions", "organizations_url": "https://api.github.com/users/rn4n/orgs", "repos_url": "https://api.github.com/users/rn4n/repos", "events_url": "https://api.github.com/users/rn4n/events{/privacy}", "received_events_url": "https://api.github.com/users/rn4n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-20T12:26:09Z", "updated_at": "2019-11-04T00:12:44Z", "closed_at": "2019-05-20T13:20:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've a question.\r\n\r\nI have these two schemas that are working almost as expected:\r\n\r\n```python\r\nfrom ..models import Municipality, State\r\nfrom flask_marshmallow import Marshmallow\r\n\r\nma = Marshmallow()\r\n\r\nclass MunicipalitySchema(ma.ModelSchema):\r\n    class Meta:\r\n        model = Municipality\r\n        fields = ('name',)\r\n\r\n\r\nclass StateSchema(ma.ModelSchema):\r\n    class Meta:\r\n        model = State\r\n        fields = ('name', 'uf', 'municipalities')\r\n    municipalities = ma.Nested(MunicipalitySchema, many=True)\r\n```\r\n\r\nSo, when I dump the `State` object, it returns:\r\n\r\n```json\r\n{\r\n   \"name\": \"S\u00e3o Paulo\",\r\n   \"uf\": \"SP\",\r\n   \"municipalities\": [\r\n      {\"name\": \"municipality1\"},\r\n      {\"name\": \"municipality2\"},\r\n      {\"name\": \"municipality3\"},\r\n      //...\r\n   ]\r\n}\r\n```\r\n\r\nIt is ok, but I don't want to retrieve the `municipalities` as an array of objects. I would like to return it as an array of strings, considering the `name` property. Like this:\r\n\r\n```json\r\n{\r\n   \"name\": \"S\u00e3o Paulo\",\r\n   \"uf\": \"SP\",\r\n   \"municipalities\": [\r\n      \"municipality1\",\r\n      \"municipality2\",\r\n      \"municipality3\",\r\n      //...\r\n   ]\r\n}\r\n```\r\n\r\nHow can I get that result using Marshmallow?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/128", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/128/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/128/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/128", "id": 421119253, "node_id": "MDU6SXNzdWU0MjExMTkyNTM=", "number": 128, "title": "`__init__() got an unexpected keyword argument 'ordered'` when subclassing mm.ModelSchema", "user": {"login": "ThiefMaster", "id": 179599, "node_id": "MDQ6VXNlcjE3OTU5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThiefMaster", "html_url": "https://github.com/ThiefMaster", "followers_url": "https://api.github.com/users/ThiefMaster/followers", "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}", "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions", "organizations_url": "https://api.github.com/users/ThiefMaster/orgs", "repos_url": "https://api.github.com/users/ThiefMaster/repos", "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}", "received_events_url": "https://api.github.com/users/ThiefMaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-14T16:23:41Z", "updated_at": "2019-03-14T16:26:54Z", "closed_at": "2019-03-14T16:26:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This worked fine with marshmallow 2 but started failing with marshmallow 3rc4, on Python 2.7.15\r\n\r\n```python\r\nfrom flask_marshmallow import Marshmallow\r\nfrom flask_marshmallow.sqla import SchemaOpts\r\nfrom marshmallow_sqlalchemy import ModelConverter\r\n\r\n\r\nclass MyModelConverter(ModelConverter):\r\n    pass  # usually i do more stuff in here, which is not relevant for this issue\r\n\r\n\r\nclass _MySchemaOpts(SchemaOpts):\r\n    def __init__(self, meta):\r\n        super(_MySchemaOpts, self).__init__(meta)\r\n        self.model_converter = getattr(meta, 'model_converter', MyModelConverter)\r\n\r\n\r\nmm = Marshmallow()\r\nclass MyModelSchema(mm.ModelSchema):\r\n    OPTIONS_CLASS = _MySchemaOpts\r\n```\r\n\r\n```pytb\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-bb4a7fc1f246> in <module>()\r\n     15\r\n     16 mm = Marshmallow()\r\n---> 17 class MyModelSchema(mm.ModelSchema):\r\n     18     OPTIONS_CLASS = _MySchemaOpts\r\n\r\n/home/adrian/dev/indico/env/lib/python2.7/site-packages/marshmallow/schema.pyc in __new__(mcs, name, bases, attrs)\r\n    106         # Set klass.opts in __new__ rather than __init__ so that it is accessible in\r\n    107         # get_declared_fields\r\n--> 108         klass.opts = klass.OPTIONS_CLASS(meta, ordered=ordered)\r\n    109         # Add fields specifid in the `include` class Meta option\r\n    110         cls_fields += list(klass.opts.include.items())\r\n\r\nTypeError: Error when calling the metaclass bases\r\n    __init__() got an unexpected keyword argument 'ordered'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/108", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/108/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/108/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/108", "id": 396204849, "node_id": "MDU6SXNzdWUzOTYyMDQ4NDk=", "number": 108, "title": "HyperlinkRelated with ModelSchema results in error", "user": {"login": "antgel", "id": 295571, "node_id": "MDQ6VXNlcjI5NTU3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/295571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antgel", "html_url": "https://github.com/antgel", "followers_url": "https://api.github.com/users/antgel/followers", "following_url": "https://api.github.com/users/antgel/following{/other_user}", "gists_url": "https://api.github.com/users/antgel/gists{/gist_id}", "starred_url": "https://api.github.com/users/antgel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antgel/subscriptions", "organizations_url": "https://api.github.com/users/antgel/orgs", "repos_url": "https://api.github.com/users/antgel/repos", "events_url": "https://api.github.com/users/antgel/events{/privacy}", "received_events_url": "https://api.github.com/users/antgel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-05T22:14:52Z", "updated_at": "2019-01-05T23:24:56Z", "closed_at": "2019-01-05T23:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per the title, is `HyperlinkRelated` supported when using `ModelSchema` (as opposed to `Schema`)? I get the following error:\r\n```\r\nFile \"/home/antony/.virtualenvs/anp-api-flask-restful/lib/python3.6/site-packages/flask/helpers.py\", line 345, in url_for force_external=external)\r\nFile \"/home/antony/.virtualenvs/anp-api-flask-restful/lib/python3.6/site-packages/werkzeug/routing.py\", line 1776, in build\r\n    raise BuildError(endpoint, values, method, self)\r\nwerkzeug.routing.BuildError: Could not build url for endpoint 'reporting_user_detail' with values ['id']. Did you mean 'UsersView:delete' instead?\r\n```\r\n\r\nIf yes, I'll be happy to post some code that makes the above meaningful. ;)\r\n\r\nIf no, have I conceptually misunderstood? Is `HyperlinkRelated` with `ModelSchema` a Bad Idea, or is it just not supported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/107", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/107/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/107/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/107", "id": 392535739, "node_id": "MDU6SXNzdWUzOTI1MzU3Mzk=", "number": 107, "title": "getting empty", "user": {"login": "venkataramireddy123", "id": 45994445, "node_id": "MDQ6VXNlcjQ1OTk0NDQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/45994445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/venkataramireddy123", "html_url": "https://github.com/venkataramireddy123", "followers_url": "https://api.github.com/users/venkataramireddy123/followers", "following_url": "https://api.github.com/users/venkataramireddy123/following{/other_user}", "gists_url": "https://api.github.com/users/venkataramireddy123/gists{/gist_id}", "starred_url": "https://api.github.com/users/venkataramireddy123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/venkataramireddy123/subscriptions", "organizations_url": "https://api.github.com/users/venkataramireddy123/orgs", "repos_url": "https://api.github.com/users/venkataramireddy123/repos", "events_url": "https://api.github.com/users/venkataramireddy123/events{/privacy}", "received_events_url": "https://api.github.com/users/venkataramireddy123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-19T10:30:50Z", "updated_at": "2018-12-26T05:43:14Z", "closed_at": "2018-12-26T05:43:14Z", "author_association": "NONE", "active_lock_reason": null, "body": " notifications = PRO_USERNOTIFICATIONSSchema(many=True,strict=True)\r\n _notifications = notifications.dump(self.PRO_USERNOTIFICATIONSs).data\r\n\r\nshowing empty data like [{}].\r\n\r\ncould any one try to find out what i missed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/168", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/168/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/168/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/168", "id": 562633583, "node_id": "MDU6SXNzdWU1NjI2MzM1ODM=", "number": 168, "title": "return self.session.query( AttributeError: 'DummySession' object has no attribute 'query'", "user": {"login": "dani16antonio", "id": 28380862, "node_id": "MDQ6VXNlcjI4MzgwODYy", "avatar_url": "https://avatars3.githubusercontent.com/u/28380862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dani16antonio", "html_url": "https://github.com/dani16antonio", "followers_url": "https://api.github.com/users/dani16antonio/followers", "following_url": "https://api.github.com/users/dani16antonio/following{/other_user}", "gists_url": "https://api.github.com/users/dani16antonio/gists{/gist_id}", "starred_url": "https://api.github.com/users/dani16antonio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dani16antonio/subscriptions", "organizations_url": "https://api.github.com/users/dani16antonio/orgs", "repos_url": "https://api.github.com/users/dani16antonio/repos", "events_url": "https://api.github.com/users/dani16antonio/events{/privacy}", "received_events_url": "https://api.github.com/users/dani16antonio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-13T15:34:32Z", "updated_at": "2020-02-17T15:03:12Z", "closed_at": "2020-02-16T19:45:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys, this is my first post of publication and I speak Spanish, I am very sorry if you do not understand me clearly, this is my problem\r\nI am using flask-marshmallow in its version 0.9.0 and when I create my table if I add primary_key = True to any field that is not id (Integer) like social number I get this error (Title), and this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\app.py\", line 2309, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\app.py\", line 2295, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask_restful\\__init__.py\", line 273, in error_router\r\n    return original_handler(e)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\app.py\", line 1741, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\_compat.py\", line 34, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask_restful\\__init__.py\", line 273, in error_router\r\n    return original_handler(e)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\_compat.py\", line 34, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask_restful\\__init__.py\", line 480, in wrapper\r\n    resp = resource(*args, **kwargs)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask\\views.py\", line 88, in view\r\n    return self.dispatch_request(*args, **kwargs)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask_restful\\__init__.py\", line 595, in dispatch_request\r\n    resp = meth(*args, **kwargs)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\flask_jwt_extended\\view_decorators.py\", line 103, in wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"C:\\Users\\user\\Documents\\OverBit\\Apiv2\\resource\\student.py\", line 41, in post\r\n    student=student_schema.load(student_data)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\marshmallow_sqlalchemy\\schema.py\", line 194, in load\r\n    return super(ModelSchema, self).load(data, *args, **kwargs)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\marshmallow\\schema.py\", line 504, in load\r\n    postprocess=True,\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\marshmallow\\schema.py\", line 640, in _do_load\r\n    original_data=data,\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\marshmallow\\schema.py\", line 820, in _invoke_load_processors\r\n    data=data, many=many, original_data=original_data,\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\marshmallow\\schema.py\", line 938, in _invoke_processors\r\n    data = processor(data)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\marshmallow_sqlalchemy\\schema.py\", line 176, in make_instance\r\n    instance = self.instance or self.get_instance(data)\r\n  File \"C:\\Users\\user\\.virtualenvs\\Apiv2-zDC9aQiw\\lib\\site-packages\\marshmallow_sqlalchemy\\schema.py\", line 161, in get_instance\r\n    return self.session.query(\r\nAttributeError: 'DummySession' object has no attribute 'query'\r\n```\r\n\r\nthis error is fixed just when my primary key is id (int)\r\nIs there a way for my primary key to be a string?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/104", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/104/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/104/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/104", "id": 384059192, "node_id": "MDU6SXNzdWUzODQwNTkxOTI=", "number": 104, "title": ".", "user": {"login": "ramtinmousavi", "id": 40802525, "node_id": "MDQ6VXNlcjQwODAyNTI1", "avatar_url": "https://avatars2.githubusercontent.com/u/40802525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramtinmousavi", "html_url": "https://github.com/ramtinmousavi", "followers_url": "https://api.github.com/users/ramtinmousavi/followers", "following_url": "https://api.github.com/users/ramtinmousavi/following{/other_user}", "gists_url": "https://api.github.com/users/ramtinmousavi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramtinmousavi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramtinmousavi/subscriptions", "organizations_url": "https://api.github.com/users/ramtinmousavi/orgs", "repos_url": "https://api.github.com/users/ramtinmousavi/repos", "events_url": "https://api.github.com/users/ramtinmousavi/events{/privacy}", "received_events_url": "https://api.github.com/users/ramtinmousavi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-25T08:30:19Z", "updated_at": "2018-11-25T14:10:45Z", "closed_at": "2018-11-25T13:12:31Z", "author_association": "NONE", "active_lock_reason": null, "body": ".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/101", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/101/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/101/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/101", "id": 379040923, "node_id": "MDU6SXNzdWUzNzkwNDA5MjM=", "number": 101, "title": "Dependabot couldn't fetch all your path-based dependencies", "user": {"login": "dependabot-preview[bot]", "id": 27856297, "node_id": "MDM6Qm90Mjc4NTYyOTc=", "avatar_url": "https://avatars3.githubusercontent.com/in/2141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D", "html_url": "https://github.com/apps/dependabot-preview", "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers", "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos", "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-09T06:36:04Z", "updated_at": "2018-11-09T14:11:05Z", "closed_at": "2018-11-09T14:11:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Dependabot couldn't fetch one or more of your project's path-based Python dependencies. The affected dependencies were `'.'/setup.py`.\n\nTo use path-based dependancies with Dependabot the paths must be relative and resolve to a directory in this project's source code.\n\nYou can mention @dependabot in the comments below to contact the Dependabot team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/100", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/100/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/100/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/100", "id": 378155254, "node_id": "MDU6SXNzdWUzNzgxNTUyNTQ=", "number": 100, "title": "Dependabot couldn't fetch all your path-based dependencies", "user": {"login": "dependabot-preview[bot]", "id": 27856297, "node_id": "MDM6Qm90Mjc4NTYyOTc=", "avatar_url": "https://avatars3.githubusercontent.com/in/2141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D", "html_url": "https://github.com/apps/dependabot-preview", "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers", "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos", "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-07T06:11:11Z", "updated_at": "2018-11-08T23:10:52Z", "closed_at": "2018-11-08T23:10:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Dependabot couldn't fetch one or more of your project's path-based Python dependencies. The affected dependencies were `'.'/setup.py`.\n\nTo use path-based dependancies with Dependabot the paths must be relative and resolve to a directory in this project's source code.\n\nYou can mention @dependabot in the comments below to contact the Dependabot team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/98", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/98/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/98/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/98", "id": 376406402, "node_id": "MDU6SXNzdWUzNzY0MDY0MDI=", "number": 98, "title": "Update to marshmallow 3", "user": {"login": "Bernardoow", "id": 4077212, "node_id": "MDQ6VXNlcjQwNzcyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4077212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bernardoow", "html_url": "https://github.com/Bernardoow", "followers_url": "https://api.github.com/users/Bernardoow/followers", "following_url": "https://api.github.com/users/Bernardoow/following{/other_user}", "gists_url": "https://api.github.com/users/Bernardoow/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bernardoow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bernardoow/subscriptions", "organizations_url": "https://api.github.com/users/Bernardoow/orgs", "repos_url": "https://api.github.com/users/Bernardoow/repos", "events_url": "https://api.github.com/users/Bernardoow/events{/privacy}", "received_events_url": "https://api.github.com/users/Bernardoow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-01T14:05:30Z", "updated_at": "2018-11-02T15:26:26Z", "closed_at": "2018-11-02T15:26:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, everyone.\r\n\r\nI want some information about update to marshmallow 3. Where I can look it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/86", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/86/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/86/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/86", "id": 349505593, "node_id": "MDU6SXNzdWUzNDk1MDU1OTM=", "number": 86, "title": "Handling Unknown Fields functionnality", "user": {"login": "chaufmaurice", "id": 38210221, "node_id": "MDQ6VXNlcjM4MjEwMjIx", "avatar_url": "https://avatars1.githubusercontent.com/u/38210221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaufmaurice", "html_url": "https://github.com/chaufmaurice", "followers_url": "https://api.github.com/users/chaufmaurice/followers", "following_url": "https://api.github.com/users/chaufmaurice/following{/other_user}", "gists_url": "https://api.github.com/users/chaufmaurice/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaufmaurice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaufmaurice/subscriptions", "organizations_url": "https://api.github.com/users/chaufmaurice/orgs", "repos_url": "https://api.github.com/users/chaufmaurice/repos", "events_url": "https://api.github.com/users/chaufmaurice/events{/privacy}", "received_events_url": "https://api.github.com/users/chaufmaurice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-10T12:57:34Z", "updated_at": "2019-01-10T14:43:18Z", "closed_at": "2019-01-10T14:43:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm using flask-marshmallow==0.9.0\r\n\r\nAnd I would like to use the Handling Unknown Fields functionnality:\r\n'Turn off automatic skipping of unknown fields' [marshmallow#127](https://github.com/marshmallow-code/marshmallow/issues/127)\r\nhttps://marshmallow.readthedocs.io/en/3.0/quickstart.html#handling-unknown-fields\r\n\r\nBut I'm not able to import : \r\n`from marshmallow import INCLUDE`\r\n=> `ImportError:` cannot import name 'INCLUDE'`\r\n\r\nDo you when it will be integrated to Flask-marshmallow ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/78", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/78/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/78/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/78", "id": 320517199, "node_id": "MDU6SXNzdWUzMjA1MTcxOTk=", "number": 78, "title": "Consider integrating marshmallow_enum while your importing fields from marshmallow", "user": {"login": "bitfinity", "id": 209595, "node_id": "MDQ6VXNlcjIwOTU5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/209595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitfinity", "html_url": "https://github.com/bitfinity", "followers_url": "https://api.github.com/users/bitfinity/followers", "following_url": "https://api.github.com/users/bitfinity/following{/other_user}", "gists_url": "https://api.github.com/users/bitfinity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitfinity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitfinity/subscriptions", "organizations_url": "https://api.github.com/users/bitfinity/orgs", "repos_url": "https://api.github.com/users/bitfinity/repos", "events_url": "https://api.github.com/users/bitfinity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitfinity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-05T15:18:31Z", "updated_at": "2018-05-15T16:43:13Z", "closed_at": "2018-05-15T16:43:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why not add EnumField to base_fields?\r\n\r\nhttps://github.com/justanr/marshmallow_enum\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/77", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/77/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/77/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/77", "id": 316022576, "node_id": "MDU6SXNzdWUzMTYwMjI1NzY=", "number": 77, "title": "Schema.jsonify takes dump(...).data", "user": {"login": "jcassee", "id": 20749, "node_id": "MDQ6VXNlcjIwNzQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/20749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcassee", "html_url": "https://github.com/jcassee", "followers_url": "https://api.github.com/users/jcassee/followers", "following_url": "https://api.github.com/users/jcassee/following{/other_user}", "gists_url": "https://api.github.com/users/jcassee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcassee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcassee/subscriptions", "organizations_url": "https://api.github.com/users/jcassee/orgs", "repos_url": "https://api.github.com/users/jcassee/repos", "events_url": "https://api.github.com/users/jcassee/events{/privacy}", "received_events_url": "https://api.github.com/users/jcassee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-19T20:08:34Z", "updated_at": "2018-05-15T17:28:24Z", "closed_at": "2018-05-15T16:44:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Marshmallow (at least 3.0.0b8) has an implementation of `Schema.dump` that contains a dict of serialized data. However, flask-marshmallow's `Schema.jsonify` tries to take its `data` attribute. (See [source](https://github.com/marshmallow-code/flask-marshmallow/blob/7208b900ecdac881d272378c4ef1482741fe7b9b/flask_marshmallow/schema.py#L35).)\r\n\r\nThis seems to be a bug? It least in my code I get this exception:\r\n```\r\n[...]\r\n  File \"/[...]/flask_marshmallow/schema.py\", line 35, in jsonify\r\n    data = self.dump(obj, many=many).data\r\nAttributeError: 'dict' object has no attribute 'data'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/76", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/76/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/76/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/76", "id": 311281522, "node_id": "MDU6SXNzdWUzMTEyODE1MjI=", "number": 76, "title": "Specify schema fields with types included (not as tuple)", "user": {"login": "georges49", "id": 17703137, "node_id": "MDQ6VXNlcjE3NzAzMTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/17703137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georges49", "html_url": "https://github.com/georges49", "followers_url": "https://api.github.com/users/georges49/followers", "following_url": "https://api.github.com/users/georges49/following{/other_user}", "gists_url": "https://api.github.com/users/georges49/gists{/gist_id}", "starred_url": "https://api.github.com/users/georges49/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georges49/subscriptions", "organizations_url": "https://api.github.com/users/georges49/orgs", "repos_url": "https://api.github.com/users/georges49/repos", "events_url": "https://api.github.com/users/georges49/events{/privacy}", "received_events_url": "https://api.github.com/users/georges49/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-04T15:33:26Z", "updated_at": "2018-05-14T18:50:06Z", "closed_at": "2018-05-14T18:50:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am sorry if this is already mentioned in the documentation or the issues but I could not find it after hours of searching.\r\n\r\nI created the schema as mentioned in the documentation with the fields as a tuple.\r\n```\r\nclass CountrySchema(ma.ModelSchema):\r\n    class Meta:\r\n        fields = ('id', 'code', 'name', 'ISO')\r\n```\r\n\r\nHowever I want to specify the type of the field (because in another schemas I have multiple types such as Decimal, Boolean, DateTime, etc..). So I tried this:\r\n\r\n```\r\nclass CountrySchema(ma.ModelSchema):\r\n    id = ma.UUID(),\r\n    code = ma.String(),\r\n    name = ma.String(),\r\n    ISO = ma.String()\r\n```\r\n\r\nThis worked but when I use the dump method:\r\n`country_schema.dump(country).data`\r\n\r\nI only get the last item:\r\n`{\"ISO\": \"LB\"}`\r\n\r\nWhat I want is:\r\n`{\"id\": \"8c31ef4b-80f2-4945-b7c7-de861a5828f3\", \"code\": \"LEB\", \"name\": \"Lebanon\", \"ISO\": \"LB\"}\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/75", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/75/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/75/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/75", "id": 306174205, "node_id": "MDU6SXNzdWUzMDYxNzQyMDU=", "number": 75, "title": "Validation does not raise a ValidationError", "user": {"login": "adyouri", "id": 7527268, "node_id": "MDQ6VXNlcjc1MjcyNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7527268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adyouri", "html_url": "https://github.com/adyouri", "followers_url": "https://api.github.com/users/adyouri/followers", "following_url": "https://api.github.com/users/adyouri/following{/other_user}", "gists_url": "https://api.github.com/users/adyouri/gists{/gist_id}", "starred_url": "https://api.github.com/users/adyouri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adyouri/subscriptions", "organizations_url": "https://api.github.com/users/adyouri/orgs", "repos_url": "https://api.github.com/users/adyouri/repos", "events_url": "https://api.github.com/users/adyouri/events{/privacy}", "received_events_url": "https://api.github.com/users/adyouri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-17T17:24:32Z", "updated_at": "2019-05-04T14:56:08Z", "closed_at": "2019-05-04T14:56:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When serializing data using `Schema().load`, a `ValidationError` does not get raised; instead, I get an `UnmarshalResult` object with the `data` and `errors`. Is this the expected output? does flask-marshmallow not raise a `ValidationError` when there are errors in the submitted data?\r\n\r\nExample:\r\n\r\n```\r\n>>> from project.schemas import TermSchema\r\n>>> term_schema = TermSchema()\r\n>>> term_data = dict(term=None)\r\n>>> term_schema.load(term_data)\r\nUnmarshalResult(data={}, errors={'term': ['Field may not be null.']})\r\n```\r\n\r\nWhy is it returning an `UnmarshalResult` object instead of raising a validation error?\r\n\r\nHere is the `schemas.py`:\r\n\r\n```\r\nfrom marshmallow import post_load\r\nfrom project.models import Term, Translation\r\nfrom flask_marshmallow import Marshmallow\r\nfrom marshmallow_sqlalchemy import field_for\r\n\r\nma = Marshmallow()\r\n\r\nclass TranslationSchema(ma.ModelSchema):\r\n    class Meta:\r\n        model = Translation\r\n\r\nclass TermSchema(ma.ModelSchema):\r\n    term = field_for(Term, 'term', required=True)\r\n\r\n    class Meta:\r\n        model = Term\r\n    translations = ma.Nested(TranslationSchema, many=True)\r\n\r\n    # Validate term is not none\r\n    # Validate full_term is not none if is_acronym\r\n    @post_load\r\n    def make_term(self, data):\r\n        return data\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/71", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/71/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/71/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/71", "id": 282633946, "node_id": "MDU6SXNzdWUyODI2MzM5NDY=", "number": 71, "title": "Integration of Flask, Flask-marshmallow and MongoAlchemy", "user": {"login": "nurgasemetey", "id": 4669437, "node_id": "MDQ6VXNlcjQ2Njk0Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4669437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nurgasemetey", "html_url": "https://github.com/nurgasemetey", "followers_url": "https://api.github.com/users/nurgasemetey/followers", "following_url": "https://api.github.com/users/nurgasemetey/following{/other_user}", "gists_url": "https://api.github.com/users/nurgasemetey/gists{/gist_id}", "starred_url": "https://api.github.com/users/nurgasemetey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nurgasemetey/subscriptions", "organizations_url": "https://api.github.com/users/nurgasemetey/orgs", "repos_url": "https://api.github.com/users/nurgasemetey/repos", "events_url": "https://api.github.com/users/nurgasemetey/events{/privacy}", "received_events_url": "https://api.github.com/users/nurgasemetey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-16T16:30:06Z", "updated_at": "2017-12-17T19:09:16Z", "closed_at": "2017-12-16T17:03:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI tried the following code:\r\n\r\n```\r\nfrom flask import Flask, request\r\nfrom flask_mongoalchemy import MongoAlchemy\r\nfrom flask_marshmallow import Marshmallow\r\n\r\napp = Flask(__name__)\r\napp.config['MONGOALCHEMY_DATABASE'] = 'flask-alchemy'\r\napp.config['MONGOALCHEMY_USER'] = 'user'\r\napp.config['MONGOALCHEMY_PASSWORD'] = 'password'\r\napp.config['MONGOALCHEMY_SERVER_AUTH'] = False\r\ndb = MongoAlchemy(app)\r\nma = Marshmallow(app)\r\n\r\nclass Author(db.Document):\r\n    name = db.StringField()\r\n\r\nclass AuthorSchema(ma.ModelSchema):\r\n    class Meta:\r\n        model = Author\r\n\r\nauthor_schema = AuthorSchema()\r\nauthors_schema = AuthorSchema(many=True)\r\n\r\n# mark_pilgrim = Author(name='Mark Pilgrim')\r\n# mark_pilgrim.save()\r\n\r\n@app.route(\"/author\", methods=['POST'])\r\ndef addUser():\r\n    # author = Author(name=request.json['name'])\r\n    author_result = author_schema.load(request.json)\r\n    author_result.data.save()\r\n    return \"OK\"\r\n\r\n@app.route(\"/author/<id>\", methods=['GET'])\r\ndef getUser(id):\r\n    author = Author.query.get(id)\r\n    return author_schema.jsonify(author)\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='0.0.0.0', port=9090)\r\n```\r\n\r\nBut application is not starting because of following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/nurgasemetey/IDES/pycharm-2017.2/helpers/pydev/pydevd.py\", line 1596, in <module>\r\n    globals = debugger.run(setup['file'], None, None, is_module)\r\n  File \"/home/nurgasemetey/IDES/pycharm-2017.2/helpers/pydev/pydevd.py\", line 1023, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"/media/nurgasemetey/2321222d-3af5-46b5-b8c5-824322db7a26/nurgasemetey-environment/PyCharm/PYCHARM_PROJECTS/flask-alchemy-mongo/Test.py\", line 16, in <module>\r\n    class AuthorSchema(ma.ModelSchema):\r\n  File \"/usr/local/lib/python2.7/dist-packages/marshmallow/schema.py\", line 118, in __new__\r\n    dict_cls=dict_cls\r\n  File \"/usr/local/lib/python2.7/dist-packages/marshmallow_sqlalchemy/schema.py\", line 60, in get_declared_fields\r\n    declared_fields = mcs.get_fields(converter, opts, base_fields, dict_cls)\r\n  File \"/usr/local/lib/python2.7/dist-packages/marshmallow_sqlalchemy/schema.py\", line 94, in get_fields\r\n    dict_cls=dict_cls,\r\n  File \"/usr/local/lib/python2.7/dist-packages/marshmallow_sqlalchemy/convert.py\", line 93, in fields_for_model\r\n    for prop in model.__mapper__.iterate_properties:\r\nAttributeError: type object 'Author' has no attribute '__mapper\r\n```\r\n\r\nWhat can be wrong?\r\n\r\nVersions\r\n\r\nFlask==0.12\r\nflask-marshmallow==0.8.0\r\nFlask-MongoAlchemy==0.7.2\r\nSQLAlchemy==1.1.11\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/70", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/70/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/70/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/70", "id": 256512533, "node_id": "MDU6SXNzdWUyNTY1MTI1MzM=", "number": 70, "title": "Operation not permitted when installing", "user": {"login": "mush20", "id": 11493552, "node_id": "MDQ6VXNlcjExNDkzNTUy", "avatar_url": "https://avatars1.githubusercontent.com/u/11493552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mush20", "html_url": "https://github.com/mush20", "followers_url": "https://api.github.com/users/mush20/followers", "following_url": "https://api.github.com/users/mush20/following{/other_user}", "gists_url": "https://api.github.com/users/mush20/gists{/gist_id}", "starred_url": "https://api.github.com/users/mush20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mush20/subscriptions", "organizations_url": "https://api.github.com/users/mush20/orgs", "repos_url": "https://api.github.com/users/mush20/repos", "events_url": "https://api.github.com/users/mush20/events{/privacy}", "received_events_url": "https://api.github.com/users/mush20/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-10T14:08:54Z", "updated_at": "2018-06-24T19:58:47Z", "closed_at": "2018-06-24T19:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying:\r\npip install flask-marshmallow.\r\n\r\nBut I keep getting the following error:\r\nCollecting flask-marshmallow\r\n  Using cached flask_marshmallow-0.8.0-py2.py3-none-any.whl\r\nRequirement already satisfied: marshmallow>=2.0.0 in /Library/Python/2.7/site-packages (from flask-marshmallow)\r\nRequirement already satisfied: Flask in /Library/Python/2.7/site-packages (from flask-marshmallow)\r\nCollecting six>=1.9.0 (from flask-marshmallow)\r\n  Using cached six-1.10.0-py2.py3-none-any.whl\r\nRequirement already satisfied: itsdangerous>=0.21 in /Library/Python/2.7/site-packages (from Flask->flask-marshmallow)\r\nRequirement already satisfied: Werkzeug>=0.7 in /Library/Python/2.7/site-packages (from Flask->flask-marshmallow)\r\nRequirement already satisfied: Jinja2>=2.4 in /Library/Python/2.7/site-packages (from Flask->flask-marshmallow)\r\nRequirement already satisfied: click>=2.0 in /Library/Python/2.7/site-packages (from Flask->flask-marshmallow)\r\nRequirement already satisfied: MarkupSafe>=0.23 in /Library/Python/2.7/site-packages (from Jinja2>=2.4->Flask->flask-marshmallow)\r\nInstalling collected packages: six, flask-marshmallow\r\n  Found existing installation: six 1.4.1\r\n    DEPRECATION: Uninstalling a distutils installed project (six) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.\r\n    Uninstalling six-1.4.1:\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/Library/Python/2.7/site-packages/pip/basecommand.py\", line 215, in main\r\n    status = self.run(options, args)\r\n  File \"/Library/Python/2.7/site-packages/pip/commands/install.py\", line 342, in run\r\n    prefix=options.prefix_path,\r\n  File \"/Library/Python/2.7/site-packages/pip/req/req_set.py\", line 778, in install\r\n    requirement.uninstall(auto_confirm=True)\r\n  File \"/Library/Python/2.7/site-packages/pip/req/req_install.py\", line 754, in uninstall\r\n    paths_to_remove.remove(auto_confirm)\r\n  File \"/Library/Python/2.7/site-packages/pip/req/req_uninstall.py\", line 115, in remove\r\n    renames(path, new_path)\r\n  File \"/Library/Python/2.7/site-packages/pip/utils/__init__.py\", line 267, in renames\r\n    shutil.move(old, new)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 302, in move\r\n    copy2(src, real_dst)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 131, in copy2\r\n    copystat(src, dst)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 103, in copystat\r\n    os.chflags(dst, st.st_flags)\r\nOSError: [Errno 1] Operation not permitted: '/var/folders/2y/bb5jc2kn5kj0836ltx7h0jg00000gn/T/pip-Ry2d7a-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/six-1.4.1-py2.7.egg-info'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/68", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/68/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/68/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/68", "id": 254472386, "node_id": "MDU6SXNzdWUyNTQ0NzIzODY=", "number": 68, "title": "URLFor and AbsoluteURLFor fail if URL attribute is None", "user": {"login": "ocervell", "id": 9629314, "node_id": "MDQ6VXNlcjk2MjkzMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9629314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ocervell", "html_url": "https://github.com/ocervell", "followers_url": "https://api.github.com/users/ocervell/followers", "following_url": "https://api.github.com/users/ocervell/following{/other_user}", "gists_url": "https://api.github.com/users/ocervell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ocervell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ocervell/subscriptions", "organizations_url": "https://api.github.com/users/ocervell/orgs", "repos_url": "https://api.github.com/users/ocervell/repos", "events_url": "https://api.github.com/users/ocervell/events{/privacy}", "received_events_url": "https://api.github.com/users/ocervell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-31T21:24:01Z", "updated_at": "2019-03-10T03:36:16Z", "closed_at": "2019-03-10T02:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue has been reported before in #18 but I wanted to provide a simple example showing how this is a problem for a lot of use cases.\r\n\r\n## Example code\r\n```\r\nclass User(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    group_id = Column(db.Integer, db.ForeignKey('groups.id'), default=None)\r\n    group = db.relationship(Group)\r\n\r\nclass UserSchema(ma.ModelSchema):\r\n   class Meta:\r\n      model = User\r\n   group = ma.AbsoluteURLFor('groups', id='<group_id>')\r\n\r\nclass Group(db.Model):\r\n   id = Column(Integer, primary_key=True)\r\n```\r\n\r\n## Issue\r\nCurrently, the `AbsoluteURLFor` and `URLFor` methods will fail with a `werkzeug.routing.BuildError` if `group_id` is not set on the `User` model.\r\n\r\nI know this problem originates directly from `Flask` `url_for` method, that would fail if `id` is `None`, but there should be a way in `Flask-Marshmallow` to skip serialization for this field when `None`.\r\n\r\n## Fix\r\nI am using a temporary fix which is to add a custom handler for `BuildError` errors.\r\nThe following will replace any `BuildError` by an empty string:  \r\n```\r\nhandler = lambda error, endpoint, values: ''\r\napp.url_build_error_handlers.append(handler)\r\n```\r\nThere is two problems with this:\r\n* Too broad: disables all `BuildError`, even for normal routes.\r\n* Limited: `handler` function cannot return `None` (which for me would be the accepted return value), because `Flask` will re-raise the `BuildError` in that case.\r\n\r\n## Solutions\r\n- Add a flag `skip_if_errors` to allow skipping a field if encountering a `BuildError`\r\n- Modify the implementation to catch that usecase and return `None`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/66", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/66/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/66/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/66", "id": 248220307, "node_id": "MDU6SXNzdWUyNDgyMjAzMDc=", "number": 66, "title": "from marshmallow import ( ImportError: cannot import name fields", "user": {"login": "handersonc", "id": 8728986, "node_id": "MDQ6VXNlcjg3Mjg5ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8728986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/handersonc", "html_url": "https://github.com/handersonc", "followers_url": "https://api.github.com/users/handersonc/followers", "following_url": "https://api.github.com/users/handersonc/following{/other_user}", "gists_url": "https://api.github.com/users/handersonc/gists{/gist_id}", "starred_url": "https://api.github.com/users/handersonc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/handersonc/subscriptions", "organizations_url": "https://api.github.com/users/handersonc/orgs", "repos_url": "https://api.github.com/users/handersonc/repos", "events_url": "https://api.github.com/users/handersonc/events{/privacy}", "received_events_url": "https://api.github.com/users/handersonc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-06T02:01:10Z", "updated_at": "2020-07-12T11:45:02Z", "closed_at": "2017-08-11T01:12:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u00b4m getting this when i try to run my project with Flask in a virtualenv\r\n\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 10, in <module>\r\n    from flask_marshmallow import Marshmallow\r\n  File \"C:\\Users\\hcontreras\\Documents\\virtuales\\MarketingProject\\lib\\site-packages\\flask_marshmallow\\__init__.py\", line 14, in <module>\r\n    from marshmallow import (\r\nImportError: cannot import name fields", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/65", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/65/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/65/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/65", "id": 244875491, "node_id": "MDU6SXNzdWUyNDQ4NzU0OTE=", "number": 65, "title": "Support for pagination object", "user": {"login": "italomaia", "id": 14670, "node_id": "MDQ6VXNlcjE0Njcw", "avatar_url": "https://avatars1.githubusercontent.com/u/14670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/italomaia", "html_url": "https://github.com/italomaia", "followers_url": "https://api.github.com/users/italomaia/followers", "following_url": "https://api.github.com/users/italomaia/following{/other_user}", "gists_url": "https://api.github.com/users/italomaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/italomaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/italomaia/subscriptions", "organizations_url": "https://api.github.com/users/italomaia/orgs", "repos_url": "https://api.github.com/users/italomaia/repos", "events_url": "https://api.github.com/users/italomaia/events{/privacy}", "received_events_url": "https://api.github.com/users/italomaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-22T22:27:20Z", "updated_at": "2017-07-23T01:13:05Z", "closed_at": "2017-07-23T01:13:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be quite helpful to have support for flask-sqlalchemy Pagination instances as argument for Schema.jsonify, as returning \"everything\" usually leads to problems. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/62", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/62/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/62/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/62", "id": 231856386, "node_id": "MDU6SXNzdWUyMzE4NTYzODY=", "number": 62, "title": "TypeError: __init__() got an unexpected keyword argument 'ordered' ", "user": {"login": "sjava", "id": 26506, "node_id": "MDQ6VXNlcjI2NTA2", "avatar_url": "https://avatars0.githubusercontent.com/u/26506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjava", "html_url": "https://github.com/sjava", "followers_url": "https://api.github.com/users/sjava/followers", "following_url": "https://api.github.com/users/sjava/following{/other_user}", "gists_url": "https://api.github.com/users/sjava/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjava/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjava/subscriptions", "organizations_url": "https://api.github.com/users/sjava/orgs", "repos_url": "https://api.github.com/users/sjava/repos", "events_url": "https://api.github.com/users/sjava/events{/privacy}", "received_events_url": "https://api.github.com/users/sjava/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95191358, "node_id": "MDU6TGFiZWw5NTE5MTM1OA==", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-28T09:04:24Z", "updated_at": "2017-05-28T16:59:03Z", "closed_at": "2017-05-28T16:56:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):                                             \r\n  File \"manage.py\", line 12, in <module>                                      \r\n    from myapp.app import create_app                                           \r\n  File \"/home/zyb/myapp/myapp/app.py\", line 4, in <module>                     \r\n    from myapp import api, guanli, kanban, post, prod, public, user            \r\n  File \"/home/zyb/myapp/myapp/api/__init__.py\", line 2, in <module>            \r\n    from . import views                                                        \r\n  File \"/home/zyb/myapp/myapp/api/views.py\", line 14, in <module>              \r\n    from myapp.extensions import db, sio                                       \r\n  File \"/home/zyb/myapp/myapp/extensions.py\", line 13, in <module>             \r\n    from flask_marshmallow import Marshmallow                                  \r\n  File \"/home/zyb/.pyenv/versions/myapp/lib/python3.5/site-packages/flask_mars$\r\nmallow/__init__.py\", line 29, in <module>                                      \r\n    from . import sqla                                                         \r\n  File \"/home/zyb/.pyenv/versions/myapp/lib/python3.5/site-packages/flask_mars$\r\nmallow/sqla.py\", line 35, in <module>                                          \r\n    class ModelSchema(msqla.ModelSchema, Schema):                              \r\n  File \"/home/zyb/.pyenv/versions/myapp/lib/python3.5/site-packages/marshmallo$\r\n/schema.py\", line 103, in __new__                                              \r\n    klass.opts = klass.OPTIONS_CLASS(meta, ordered=ordered)                    \r\nTypeError: __init__() got an unexpected keyword argument 'ordered' \r\n\r\n**marshmallow version:3.0.0b2**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/61", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/61/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/61/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/61", "id": 227292827, "node_id": "MDU6SXNzdWUyMjcyOTI4Mjc=", "number": 61, "title": "AbsoluteURLFor.allow_none not honoured", "user": {"login": "decentral1se", "id": 1991377, "node_id": "MDQ6VXNlcjE5OTEzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1991377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentral1se", "html_url": "https://github.com/decentral1se", "followers_url": "https://api.github.com/users/decentral1se/followers", "following_url": "https://api.github.com/users/decentral1se/following{/other_user}", "gists_url": "https://api.github.com/users/decentral1se/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentral1se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentral1se/subscriptions", "organizations_url": "https://api.github.com/users/decentral1se/orgs", "repos_url": "https://api.github.com/users/decentral1se/repos", "events_url": "https://api.github.com/users/decentral1se/events{/privacy}", "received_events_url": "https://api.github.com/users/decentral1se/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T08:48:13Z", "updated_at": "2017-05-09T09:45:58Z", "closed_at": "2017-05-09T09:45:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I have the following schema:\r\n\r\n``` python\r\nfrom flask_marshmallow.sqla import ModelSchema\r\nfrom flask_marshmallow.fields import AbsoluteURLFor\r\n\r\nclass FooSchema(ModelSchema):\r\n    class Meta:\r\n        model = Foo\r\n\r\n    bar_fk = AbsoluteURLFor(\"bar\", some_id=\"<bar>\", allow_none=True)\r\n```\r\n\r\nWhich results in:\r\n\r\n> werkzeug.routing.BuildError: Could not build url for endpoint 'bar' with values ['allow_none']. Did you forget to specify values ['some_id']?\r\n\r\nAnd when I omit `allow_none=True`, I get:\r\n\r\n> werkzeug.routing.BuildError: Could not build url for endpoint 'bar'. Did you forget to specify values ['some_id']?\r\n\r\nWhere presumably, my serializer fails because there is no `bar` for `Foo` and it should be `None`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/60", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/60/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/60/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/60", "id": 225688820, "node_id": "MDU6SXNzdWUyMjU2ODg4MjA=", "number": 60, "title": "SyntaxError: Python 2.6.6...", "user": {"login": "ctomatis", "id": 13559150, "node_id": "MDQ6VXNlcjEzNTU5MTUw", "avatar_url": "https://avatars1.githubusercontent.com/u/13559150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctomatis", "html_url": "https://github.com/ctomatis", "followers_url": "https://api.github.com/users/ctomatis/followers", "following_url": "https://api.github.com/users/ctomatis/following{/other_user}", "gists_url": "https://api.github.com/users/ctomatis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctomatis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctomatis/subscriptions", "organizations_url": "https://api.github.com/users/ctomatis/orgs", "repos_url": "https://api.github.com/users/ctomatis/repos", "events_url": "https://api.github.com/users/ctomatis/events{/privacy}", "received_events_url": "https://api.github.com/users/ctomatis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-02T13:05:32Z", "updated_at": "2017-05-02T13:13:19Z", "closed_at": "2017-05-02T13:13:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "  File \"/usr/lib/python2.6/site-packages/flask_marshmallow/fields.py\", line 127\r\n    for key, value in iteritems(d)\r\n      ^\r\nSyntaxError: invalid syntax", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/59", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/59/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/59/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/59", "id": 221875276, "node_id": "MDU6SXNzdWUyMjE4NzUyNzY=", "number": 59, "title": "Project Status", "user": {"login": "cesarmarroquin", "id": 9895640, "node_id": "MDQ6VXNlcjk4OTU2NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarmarroquin", "html_url": "https://github.com/cesarmarroquin", "followers_url": "https://api.github.com/users/cesarmarroquin/followers", "following_url": "https://api.github.com/users/cesarmarroquin/following{/other_user}", "gists_url": "https://api.github.com/users/cesarmarroquin/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarmarroquin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarmarroquin/subscriptions", "organizations_url": "https://api.github.com/users/cesarmarroquin/orgs", "repos_url": "https://api.github.com/users/cesarmarroquin/repos", "events_url": "https://api.github.com/users/cesarmarroquin/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarmarroquin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-14T19:33:39Z", "updated_at": "2017-04-15T19:44:24Z", "closed_at": "2017-04-15T19:44:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this project still actively maintained?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/57", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/57/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/57/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/57", "id": 208564754, "node_id": "MDU6SXNzdWUyMDg1NjQ3NTQ=", "number": 57, "title": "Circular imports", "user": {"login": "aminalaee", "id": 19784933, "node_id": "MDQ6VXNlcjE5Nzg0OTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/19784933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aminalaee", "html_url": "https://github.com/aminalaee", "followers_url": "https://api.github.com/users/aminalaee/followers", "following_url": "https://api.github.com/users/aminalaee/following{/other_user}", "gists_url": "https://api.github.com/users/aminalaee/gists{/gist_id}", "starred_url": "https://api.github.com/users/aminalaee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aminalaee/subscriptions", "organizations_url": "https://api.github.com/users/aminalaee/orgs", "repos_url": "https://api.github.com/users/aminalaee/repos", "events_url": "https://api.github.com/users/aminalaee/events{/privacy}", "received_events_url": "https://api.github.com/users/aminalaee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-17T21:41:18Z", "updated_at": "2019-07-30T19:14:59Z", "closed_at": "2019-07-30T19:14:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Flask app that has a structure like the following:\r\n\r\n```\r\nproject\r\n  -- users\r\n    __init__.py\r\n    models.py\r\n    views.py\r\n    serializers.py\r\n  -- genres\r\n    __init__.py\r\n    models.py\r\n    views.py\r\n    serializers.py\r\n\r\n```\r\nI have a ModelSchema class in one of my folders that uses models.py from the other folder. SQLAlchemy by default solves this problem by using the string name of the class but I get circular import errors in Marshmallow SQLAlchemy. Is there a way to solve this? Or shoud I change my structure?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/56", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/56/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/56/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/56", "id": 198219015, "node_id": "MDU6SXNzdWUxOTgyMTkwMTU=", "number": 56, "title": "AttributeError: 'Marshmallow' object has no attribute 'ModelSchema'", "user": {"login": "Protosac", "id": 6880594, "node_id": "MDQ6VXNlcjY4ODA1OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6880594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Protosac", "html_url": "https://github.com/Protosac", "followers_url": "https://api.github.com/users/Protosac/followers", "following_url": "https://api.github.com/users/Protosac/following{/other_user}", "gists_url": "https://api.github.com/users/Protosac/gists{/gist_id}", "starred_url": "https://api.github.com/users/Protosac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Protosac/subscriptions", "organizations_url": "https://api.github.com/users/Protosac/orgs", "repos_url": "https://api.github.com/users/Protosac/repos", "events_url": "https://api.github.com/users/Protosac/events{/privacy}", "received_events_url": "https://api.github.com/users/Protosac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-12-31T05:26:11Z", "updated_at": "2020-04-27T13:50:38Z", "closed_at": "2016-12-31T05:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the latest 0.7.0. I installed the build on a different machine and I only get this error on this machine.\r\n\r\nUpon inspecting the module, `marshmallow` indeed does NOT have a `ModelSchema`. Is this a bug or have I screwed something up? I haven't upgraded anything and I don't get this error on a different machine (both are running the latest Ubuntu 16 LTS)\r\n```\r\nOut[2]: <flask_marshmallow.Marshmallow at 0x7f96d8f2a9b0>\r\n\r\nIn [3]: vars(marshmallow)\r\nOut[3]: \r\n{'AbsoluteURLFor': flask_marshmallow.fields.AbsoluteURLFor,\r\n 'AbsoluteUrlFor': flask_marshmallow.fields.AbsoluteURLFor,\r\n 'Bool': marshmallow.fields.Boolean,\r\n 'Boolean': marshmallow.fields.Boolean,\r\n 'Constant': marshmallow.fields.Constant,\r\n 'Date': marshmallow.fields.Date,\r\n 'DateTime': marshmallow.fields.DateTime,\r\n 'Decimal': marshmallow.fields.Decimal,\r\n 'Dict': marshmallow.fields.Dict,\r\n 'Email': marshmallow.fields.Email,\r\n 'Field': marshmallow.fields.Field,\r\n 'Float': marshmallow.fields.Float,\r\n 'FormattedString': marshmallow.fields.FormattedString,\r\n 'Function': marshmallow.fields.Function,\r\n 'Hyperlinks': flask_marshmallow.fields.Hyperlinks,\r\n 'Int': marshmallow.fields.Integer,\r\n 'Integer': marshmallow.fields.Integer,\r\n 'List': marshmallow.fields.List,\r\n 'LocalDateTime': marshmallow.fields.LocalDateTime,\r\n 'Method': marshmallow.fields.Method,\r\n 'Nested': marshmallow.fields.Nested,\r\n 'Number': marshmallow.fields.Number,\r\n 'Raw': marshmallow.fields.Raw,\r\n 'Schema': flask_marshmallow.schema.Schema,\r\n 'Str': marshmallow.fields.String,\r\n 'String': marshmallow.fields.String,\r\n 'Time': marshmallow.fields.Time,\r\n 'TimeDelta': marshmallow.fields.TimeDelta,\r\n 'URL': marshmallow.fields.Url,\r\n 'URLFor': flask_marshmallow.fields.URLFor,\r\n 'UUID': marshmallow.fields.UUID,\r\n 'Url': marshmallow.fields.Url,\r\n 'UrlFor': flask_marshmallow.fields.URLFor}\r\n```\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/55", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/55/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/55/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/55", "id": 196928817, "node_id": "MDU6SXNzdWUxOTY5Mjg4MTc=", "number": 55, "title": "Is there a specific way to format datetime in json?", "user": {"login": "rlam3", "id": 1154044, "node_id": "MDQ6VXNlcjExNTQwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1154044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlam3", "html_url": "https://github.com/rlam3", "followers_url": "https://api.github.com/users/rlam3/followers", "following_url": "https://api.github.com/users/rlam3/following{/other_user}", "gists_url": "https://api.github.com/users/rlam3/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlam3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlam3/subscriptions", "organizations_url": "https://api.github.com/users/rlam3/orgs", "repos_url": "https://api.github.com/users/rlam3/repos", "events_url": "https://api.github.com/users/rlam3/events{/privacy}", "received_events_url": "https://api.github.com/users/rlam3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-12-21T13:08:31Z", "updated_at": "2016-12-22T11:05:22Z", "closed_at": "2016-12-22T11:05:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a specific way to format datetime in json?\r\n\r\nSome of my json dates come out as \"Tue, 22 Sep 2015 10:17:00 GMT\" and some come out as \"2015-02-03T15:40:36.078358+00:00\" \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/54", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/54/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/54/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/54", "id": 195123949, "node_id": "MDU6SXNzdWUxOTUxMjM5NDk=", "number": 54, "title": "How to use HyperLinkRelated when endpoint's arguments are > 1?", "user": {"login": "ev-agelos", "id": 5189219, "node_id": "MDQ6VXNlcjUxODkyMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5189219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ev-agelos", "html_url": "https://github.com/ev-agelos", "followers_url": "https://api.github.com/users/ev-agelos/followers", "following_url": "https://api.github.com/users/ev-agelos/following{/other_user}", "gists_url": "https://api.github.com/users/ev-agelos/gists{/gist_id}", "starred_url": "https://api.github.com/users/ev-agelos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ev-agelos/subscriptions", "organizations_url": "https://api.github.com/users/ev-agelos/orgs", "repos_url": "https://api.github.com/users/ev-agelos/repos", "events_url": "https://api.github.com/users/ev-agelos/events{/privacy}", "received_events_url": "https://api.github.com/users/ev-agelos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-13T00:11:18Z", "updated_at": "2018-10-15T16:38:16Z", "closed_at": "2017-01-13T20:59:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if I use this correctly but my use case is that i have users(table) and subscribers(association table which maps user to another user etc..) so my endpoints are like this:\r\n`/api/users/<int:id>/subscribers/` and\r\n`/api/users/<int:id>/subscribers/<int:subscriber_id>`\r\n\r\nLooking at the [code](https://github.com/marshmallow-code/flask-marshmallow/blob/pypi/flask_marshmallow/sqla.py#L64) I see that `kwargs = {self.url_key: key}` which means i can not pass more than the `url_key`(docs specify this).\r\n\r\nWhat i expect is something like this when i request `/api/users/1`\r\n```js\r\n{\r\n  'username': 'john',\r\n  'email': 'email@john.com',\r\n  'subscribers': [\r\n    '/api/users/1/subscribers/1',\r\n    '/api/users/1/subscribers/4',\r\n    ...\r\n  ]\r\n}\r\n```\r\nIm not expert what so ever but i understand that either i change my endpoints to:\r\n`/api/subscribers/` and `/api/subscribers/<int:id>` .. or?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/53", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/53/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/53/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/53", "id": 194193144, "node_id": "MDU6SXNzdWUxOTQxOTMxNDQ=", "number": 53, "title": "Possible to disable sqlalchemy warning?", "user": {"login": "vimalloc", "id": 238933, "node_id": "MDQ6VXNlcjIzODkzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/238933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vimalloc", "html_url": "https://github.com/vimalloc", "followers_url": "https://api.github.com/users/vimalloc/followers", "following_url": "https://api.github.com/users/vimalloc/following{/other_user}", "gists_url": "https://api.github.com/users/vimalloc/gists{/gist_id}", "starred_url": "https://api.github.com/users/vimalloc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vimalloc/subscriptions", "organizations_url": "https://api.github.com/users/vimalloc/orgs", "repos_url": "https://api.github.com/users/vimalloc/repos", "events_url": "https://api.github.com/users/vimalloc/events{/privacy}", "received_events_url": "https://api.github.com/users/vimalloc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-07T22:39:21Z", "updated_at": "2018-03-23T17:43:27Z", "closed_at": "2017-07-06T05:09:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have sqlalchemy installed in my project and I'm using it for some behind the scenes sqlite3 stuff, but nothing relating to marshmallow. I do not have marshmallow-sqlalchemy installed. When I import flask-marshmallow, I get the following warning:\r\n\r\n```\r\nUserWarning: Flask-SQLAlchemy integration requires marshmallow-sqlalchemy to be installed.\r\n```\r\n\r\nIs there any way I can disable this without installing marshmallow-sqlalchemy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/51", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/51/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/51/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/51", "id": 170071887, "node_id": "MDU6SXNzdWUxNzAwNzE4ODc=", "number": 51, "title": "Using strict flag for schemas does not work as expected", "user": {"login": "ctwichell", "id": 20918199, "node_id": "MDQ6VXNlcjIwOTE4MTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/20918199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctwichell", "html_url": "https://github.com/ctwichell", "followers_url": "https://api.github.com/users/ctwichell/followers", "following_url": "https://api.github.com/users/ctwichell/following{/other_user}", "gists_url": "https://api.github.com/users/ctwichell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctwichell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctwichell/subscriptions", "organizations_url": "https://api.github.com/users/ctwichell/orgs", "repos_url": "https://api.github.com/users/ctwichell/repos", "events_url": "https://api.github.com/users/ctwichell/events{/privacy}", "received_events_url": "https://api.github.com/users/ctwichell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-09T03:07:14Z", "updated_at": "2019-09-01T12:53:36Z", "closed_at": "2019-09-01T12:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my schema I have various validators associated with my data elements, a handful of data elements marked as required, and everything else I just want to have type checked.  In the Meta section of the schema definition I assign strict to True to indicate that, by default, I want Marshmallow to not only perform the validation but throw exceptions when it detects issues.\n\nIn addition to the schema I have two functions that are going to load external data into the schema and then use it.  In function A I want Marshmallow to do the error checking and validation for me, so I will not set/change the value of the strict flag when I invoke the schema.  In function B, however, I want to have control of if, when, or how the validation exceptions are thrown and as such set strict to False when I invoke the schema.\n\nWhen testing function B with data that would cause the schema validation to fail, I found that Marshmallow is still throwing the validation exceptions instead of simply passing everything along to me (even though I set strict to False when invoking the schema).\n\nIf I were to flip things around (i.e. set strict to False in my schema's Meta and then set strict to True when invoking the schema) everything works just like I would expect -- when using the schema variable created with strict set to True Marshmallow does in fact throw validation errors.\n\nHas anyone else seen this issue?  Assuming that the problem I described above is in fact not desired behavior?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/50", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/50/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/50/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/50", "id": 169452193, "node_id": "MDU6SXNzdWUxNjk0NTIxOTM=", "number": 50, "title": "Can you dynamically exclude fields on dump?", "user": {"login": "dland512", "id": 1686534, "node_id": "MDQ6VXNlcjE2ODY1MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1686534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dland512", "html_url": "https://github.com/dland512", "followers_url": "https://api.github.com/users/dland512/followers", "following_url": "https://api.github.com/users/dland512/following{/other_user}", "gists_url": "https://api.github.com/users/dland512/gists{/gist_id}", "starred_url": "https://api.github.com/users/dland512/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dland512/subscriptions", "organizations_url": "https://api.github.com/users/dland512/orgs", "repos_url": "https://api.github.com/users/dland512/repos", "events_url": "https://api.github.com/users/dland512/events{/privacy}", "received_events_url": "https://api.github.com/users/dland512/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-04T19:17:46Z", "updated_at": "2020-07-30T17:27:53Z", "closed_at": "2019-03-07T18:37:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some nested schemas:\n\n```\nclass ParentSchema(Schema):\n    id = fields.Int()\n    uri = fields.Url('')\n    children = fields.Nested('ChildSchema', many=True, exclude=('parent',))\n\nclass ChildSchema(Schema):\n    id = fields.Int()\n    f = fields.String()\n    parent = fields.Nested('ParentSchema', exclude=('children',))\n```\n\nIt all works fine except that when I'm calling `dump` on the schema, calling `parent.children` results in a ginormous database query. The object being dumped is a SqlAlechemy object, and calling its `children` property results in lazy loading of those children from the database. The code looks like this:\n\n```\nparents = Parent.all()\nschema = GameSchema()\nresults = schema.dump(parents, many=True)\n```\n\nI this particular case, I only need the parent records. Loading the children is wasted effort. There are, however cases, when I do need the children to be loaded. For this reason, I can't just put `load_only` on the nested fields in the schema definitions.\n\nIs there any way to tell one call to `dump` to skip certain fields?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/49", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/49/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/49/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/49", "id": 167642259, "node_id": "MDU6SXNzdWUxNjc2NDIyNTk=", "number": 49, "title": "Enquiry : length validation", "user": {"login": "mikekitur", "id": 18682762, "node_id": "MDQ6VXNlcjE4NjgyNzYy", "avatar_url": "https://avatars3.githubusercontent.com/u/18682762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikekitur", "html_url": "https://github.com/mikekitur", "followers_url": "https://api.github.com/users/mikekitur/followers", "following_url": "https://api.github.com/users/mikekitur/following{/other_user}", "gists_url": "https://api.github.com/users/mikekitur/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikekitur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikekitur/subscriptions", "organizations_url": "https://api.github.com/users/mikekitur/orgs", "repos_url": "https://api.github.com/users/mikekitur/repos", "events_url": "https://api.github.com/users/mikekitur/events{/privacy}", "received_events_url": "https://api.github.com/users/mikekitur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-26T15:49:45Z", "updated_at": "2016-07-26T15:54:22Z", "closed_at": "2016-07-26T15:54:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\n\nWhen i used Load, and the value of the variable > size in the Model column, the object is return as json.\n\nDoes Flask-marshmallow allow the validation of the variable size and return the error if it exceed the size of the Model?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/48", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/48/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/48/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/48", "id": 165813033, "node_id": "MDU6SXNzdWUxNjU4MTMwMzM=", "number": 48, "title": "When dumping dates it provides a weird T inside the string for my json", "user": {"login": "rlam3", "id": 1154044, "node_id": "MDQ6VXNlcjExNTQwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1154044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlam3", "html_url": "https://github.com/rlam3", "followers_url": "https://api.github.com/users/rlam3/followers", "following_url": "https://api.github.com/users/rlam3/following{/other_user}", "gists_url": "https://api.github.com/users/rlam3/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlam3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlam3/subscriptions", "organizations_url": "https://api.github.com/users/rlam3/orgs", "repos_url": "https://api.github.com/users/rlam3/repos", "events_url": "https://api.github.com/users/rlam3/events{/privacy}", "received_events_url": "https://api.github.com/users/rlam3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-15T15:23:43Z", "updated_at": "2017-05-28T17:00:21Z", "closed_at": "2017-05-28T17:00:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having trouble with dumping my data with an date string that has a T in the middle. Please advise.\n\n\"2016-06-02T12:25:00+00:00\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/45", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/45/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/45/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/45", "id": 158031382, "node_id": "MDU6SXNzdWUxNTgwMzEzODI=", "number": 45, "title": "accomplishing a join", "user": {"login": "tharrington", "id": 1617488, "node_id": "MDQ6VXNlcjE2MTc0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1617488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tharrington", "html_url": "https://github.com/tharrington", "followers_url": "https://api.github.com/users/tharrington/followers", "following_url": "https://api.github.com/users/tharrington/following{/other_user}", "gists_url": "https://api.github.com/users/tharrington/gists{/gist_id}", "starred_url": "https://api.github.com/users/tharrington/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tharrington/subscriptions", "organizations_url": "https://api.github.com/users/tharrington/orgs", "repos_url": "https://api.github.com/users/tharrington/repos", "events_url": "https://api.github.com/users/tharrington/events{/privacy}", "received_events_url": "https://api.github.com/users/tharrington/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-01T23:46:05Z", "updated_at": "2016-06-03T00:02:36Z", "closed_at": "2016-06-03T00:02:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is accomplished with nesting...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/43", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/43/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/43/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/43", "id": 152970312, "node_id": "MDU6SXNzdWUxNTI5NzAzMTI=", "number": 43, "title": "sqlalchemy. Declarative support ", "user": {"login": "aguegu", "id": 1559791, "node_id": "MDQ6VXNlcjE1NTk3OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1559791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aguegu", "html_url": "https://github.com/aguegu", "followers_url": "https://api.github.com/users/aguegu/followers", "following_url": "https://api.github.com/users/aguegu/following{/other_user}", "gists_url": "https://api.github.com/users/aguegu/gists{/gist_id}", "starred_url": "https://api.github.com/users/aguegu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aguegu/subscriptions", "organizations_url": "https://api.github.com/users/aguegu/orgs", "repos_url": "https://api.github.com/users/aguegu/repos", "events_url": "https://api.github.com/users/aguegu/events{/privacy}", "received_events_url": "https://api.github.com/users/aguegu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-04T09:36:47Z", "updated_at": "2016-05-04T09:55:30Z", "closed_at": "2016-05-04T09:55:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "according to http://flask.pocoo.org/docs/0.10/patterns/sqlalchemy/ , there are two ways documented to use SQLAlchemy in flask, one is with the flask-sqlalchemy extension, the other one is just Declarative, without flask-sqlalchemy. \n\nFor me, I prefer the later one. Because it makes the Database layer much purer. \n\nIn my case, I can extract an models.py file with [sqlacodegen](https://github.com/ksindi/sqlacodegen), and do the migrations with [alembic](https://alembic.readthedocs.io), without `flask-migrate`.\n\nTo do the database ops, the `flask` context is not always necessary. and with flask-sqlalchemy, I have to edit the auto-generated models file with all 'db.' prefix to fix the import problems. Well, it brings more cons than pros. \n\nBut I still feel the `ModelSchema` and `HyperlinkModelSchema` are great code savier. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/38", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/38/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/38/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/38", "id": 150515301, "node_id": "MDU6SXNzdWUxNTA1MTUzMDE=", "number": 38, "title": "Some change in the Docs required , for security reasons json can't pass arrray", "user": {"login": "karan1276", "id": 8016851, "node_id": "MDQ6VXNlcjgwMTY4NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8016851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karan1276", "html_url": "https://github.com/karan1276", "followers_url": "https://api.github.com/users/karan1276/followers", "following_url": "https://api.github.com/users/karan1276/following{/other_user}", "gists_url": "https://api.github.com/users/karan1276/gists{/gist_id}", "starred_url": "https://api.github.com/users/karan1276/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karan1276/subscriptions", "organizations_url": "https://api.github.com/users/karan1276/orgs", "repos_url": "https://api.github.com/users/karan1276/repos", "events_url": "https://api.github.com/users/karan1276/events{/privacy}", "received_events_url": "https://api.github.com/users/karan1276/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-23T04:04:03Z", "updated_at": "2016-04-23T14:29:30Z", "closed_at": "2016-04-23T14:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docs to serialise SQLAlchemy with multiple rows suggest the code bellow:\n\n``` python\nusers_schema = UserSchema(many=True)\n\n@app.route('/api/users/')\ndef users():\n    all_users = User.all()\n    result = users_schema.dump(all_users)\n    return jsonify(result.data)\n    # OR\n    # return user_schema.jsonify(all_users)\n```\n\nThis code will actually give error because list objects can't be jsonified, (ref this)[https://github.com/pallets/flask/issues/673]\n\nInstead the example should be:\n\n``` python\nusers_schema = UserSchema(many=True)\n\n@app.route('/api/users/')\ndef users():\n    all_users = User.all()\n    result = users_schema.dump(all_users)\n    return jsonify({'data':result.data})\n    # OR\n    # return user_schema.jsonify({'data':result.data})\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/37", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/37/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/37/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/37", "id": 146770725, "node_id": "MDU6SXNzdWUxNDY3NzA3MjU=", "number": 37, "title": "AttributeError: 'module' object has no attribute 'QuerySelect'", "user": {"login": "rlam3", "id": 1154044, "node_id": "MDQ6VXNlcjExNTQwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1154044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlam3", "html_url": "https://github.com/rlam3", "followers_url": "https://api.github.com/users/rlam3/followers", "following_url": "https://api.github.com/users/rlam3/following{/other_user}", "gists_url": "https://api.github.com/users/rlam3/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlam3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlam3/subscriptions", "organizations_url": "https://api.github.com/users/rlam3/orgs", "repos_url": "https://api.github.com/users/rlam3/repos", "events_url": "https://api.github.com/users/rlam3/events{/privacy}", "received_events_url": "https://api.github.com/users/rlam3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-07T23:29:17Z", "updated_at": "2016-04-07T23:44:49Z", "closed_at": "2016-04-07T23:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I upgraded from 0.6.0 to 0.6.2 this is the error I'm getting... \n\n```\nAttributeError: 'module' object has no attribute 'QuerySelect'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/36", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/36/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/36/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/36", "id": 146768648, "node_id": "MDU6SXNzdWUxNDY3Njg2NDg=", "number": 36, "title": "@property for class Meta within schema?", "user": {"login": "rlam3", "id": 1154044, "node_id": "MDQ6VXNlcjExNTQwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1154044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlam3", "html_url": "https://github.com/rlam3", "followers_url": "https://api.github.com/users/rlam3/followers", "following_url": "https://api.github.com/users/rlam3/following{/other_user}", "gists_url": "https://api.github.com/users/rlam3/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlam3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlam3/subscriptions", "organizations_url": "https://api.github.com/users/rlam3/orgs", "repos_url": "https://api.github.com/users/rlam3/repos", "events_url": "https://api.github.com/users/rlam3/events{/privacy}", "received_events_url": "https://api.github.com/users/rlam3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-07T23:12:34Z", "updated_at": "2016-04-07T23:50:42Z", "closed_at": "2016-04-07T23:50:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because my property is derived... is there a way for me to include this within the schema? Thanks!\n\nIt keeps giving me AttributeError: \"full_name\" is is not a valid field for Model...\n\n``` python\n\nclass Model(db.Model):\n\n    first_name = String()\n    last_name = String()\n\n    @property\n    def full_name(self):\n        return self.first_name + ' ' + self.last_name\n\nclass ModelSchema(ma.Schema)\n\n    class Meta:\n        fields = (\n            'first_name',\n            'last_name',\n            'full_name',\n        )\n\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/34", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/34/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/34/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/34", "id": 126750857, "node_id": "MDU6SXNzdWUxMjY3NTA4NTc=", "number": 34, "title": "Schema.loads().data return dictionary instead of SQLAlchemy Object", "user": {"login": "ffleandro", "id": 1027186, "node_id": "MDQ6VXNlcjEwMjcxODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1027186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffleandro", "html_url": "https://github.com/ffleandro", "followers_url": "https://api.github.com/users/ffleandro/followers", "following_url": "https://api.github.com/users/ffleandro/following{/other_user}", "gists_url": "https://api.github.com/users/ffleandro/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffleandro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffleandro/subscriptions", "organizations_url": "https://api.github.com/users/ffleandro/orgs", "repos_url": "https://api.github.com/users/ffleandro/repos", "events_url": "https://api.github.com/users/ffleandro/events{/privacy}", "received_events_url": "https://api.github.com/users/ffleandro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-14T21:22:23Z", "updated_at": "2020-08-20T02:39:56Z", "closed_at": "2020-08-20T02:39:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to deserialize a json object in a `POST` request into an `SQLAlchemy Model` object.\n\n```\nclass UserSchema(ma.Schema):\n  class Meta:\n    model = User\nUserSerializer = UserSchema()\n\n(inside my Flask-Restful Post method)\njson = request.get_json()\nuser = UserSerializer.load(json).data\n```\n\nAfter the deserialization, user is an empty dictionary and not an `SQLAlchemy Model` object.\nIf I manually add the fields to the `UserSchema` declaration, it works, however returns a `dictionary` instead of a `SQLAlchemy Model` object:\n\n```\nclass UserSchema(ma.Schema):\n  class Meta:\n    model = User\n    fields = ('email', 'password', 'first_name', 'last_name', 'birth_date')\n```\n\nDo I need to configure anything else in my `UserSchema`?\n\nI have debugged the `Flask-Marshmallow` initialization, and the `has_sqla` flag is True.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/33", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/33/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/33/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/33", "id": 126736093, "node_id": "MDU6SXNzdWUxMjY3MzYwOTM=", "number": 33, "title": "No finding Flask-SQLAlchemy dependency", "user": {"login": "ffleandro", "id": 1027186, "node_id": "MDQ6VXNlcjEwMjcxODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1027186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffleandro", "html_url": "https://github.com/ffleandro", "followers_url": "https://api.github.com/users/ffleandro/followers", "following_url": "https://api.github.com/users/ffleandro/following{/other_user}", "gists_url": "https://api.github.com/users/ffleandro/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffleandro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffleandro/subscriptions", "organizations_url": "https://api.github.com/users/ffleandro/orgs", "repos_url": "https://api.github.com/users/ffleandro/repos", "events_url": "https://api.github.com/users/ffleandro/events{/privacy}", "received_events_url": "https://api.github.com/users/ffleandro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-14T19:58:55Z", "updated_at": "2016-01-14T20:05:30Z", "closed_at": "2016-01-14T20:05:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "`Flask-Marshmallow` is not findind my `Flask-SQLAlchemy extension.\nConsequently, the`has_sqla`flag is allways`False`on application start.\nWhen I serialize an object, it always returns a`dictionary`, instead of an`SQLAlchemy Model` object.\n\nI'm using `Pyenv` for creating a virtual environment.\nDo I need to configure anything in order to force import `Flask-SQLAlchemy`?\n\nI'm using `Flask-Marshmallow` v0.6.2.\nThanks for any help.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/31", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/31/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/31/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/31", "id": 123430548, "node_id": "MDU6SXNzdWUxMjM0MzA1NDg=", "number": 31, "title": "jsonify a list of objects doesn't work", "user": {"login": "genxstylez", "id": 1086338, "node_id": "MDQ6VXNlcjEwODYzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1086338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genxstylez", "html_url": "https://github.com/genxstylez", "followers_url": "https://api.github.com/users/genxstylez/followers", "following_url": "https://api.github.com/users/genxstylez/following{/other_user}", "gists_url": "https://api.github.com/users/genxstylez/gists{/gist_id}", "starred_url": "https://api.github.com/users/genxstylez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genxstylez/subscriptions", "organizations_url": "https://api.github.com/users/genxstylez/orgs", "repos_url": "https://api.github.com/users/genxstylez/repos", "events_url": "https://api.github.com/users/genxstylez/events{/privacy}", "received_events_url": "https://api.github.com/users/genxstylez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-22T07:23:30Z", "updated_at": "2016-01-25T18:51:25Z", "closed_at": "2015-12-30T09:51:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n@app.route('/api/users/')\ndef users():\n    all_users = User.all()\n    result = users_schema.dump(all_users)\n    return jsonify(result.data)\n    # OR\n    # return user_schema.jsonify(all_users)\n```\n\nthe above example raises \n`ValueError: dictionary update sequence element #0 has length 3; 2 is required`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/30", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/30/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/30/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/30", "id": 118859657, "node_id": "MDU6SXNzdWUxMTg4NTk2NTc=", "number": 30, "title": "HyperlinkModelSchema missing?", "user": {"login": "russelldavies", "id": 120115, "node_id": "MDQ6VXNlcjEyMDExNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/120115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/russelldavies", "html_url": "https://github.com/russelldavies", "followers_url": "https://api.github.com/users/russelldavies/followers", "following_url": "https://api.github.com/users/russelldavies/following{/other_user}", "gists_url": "https://api.github.com/users/russelldavies/gists{/gist_id}", "starred_url": "https://api.github.com/users/russelldavies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/russelldavies/subscriptions", "organizations_url": "https://api.github.com/users/russelldavies/orgs", "repos_url": "https://api.github.com/users/russelldavies/repos", "events_url": "https://api.github.com/users/russelldavies/events{/privacy}", "received_events_url": "https://api.github.com/users/russelldavies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-25T15:26:23Z", "updated_at": "2016-04-28T23:39:28Z", "closed_at": "2016-04-28T23:39:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "`HyperlinkModelSchema` is mentioned in the docs and in docstrings but doesn't seem to actually exist anywhere. Not in this project nor marshmallow-sqlalchemy. Perhaps the documentation should be updated to refer to `HyperlinkRelated` instead?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/29", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/29/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/29/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/29", "id": 114557773, "node_id": "MDU6SXNzdWUxMTQ1NTc3NzM=", "number": 29, "title": "Is it possible to exclude fields inside nested fields?", "user": {"login": "divs1210", "id": 3773773, "node_id": "MDQ6VXNlcjM3NzM3NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3773773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divs1210", "html_url": "https://github.com/divs1210", "followers_url": "https://api.github.com/users/divs1210/followers", "following_url": "https://api.github.com/users/divs1210/following{/other_user}", "gists_url": "https://api.github.com/users/divs1210/gists{/gist_id}", "starred_url": "https://api.github.com/users/divs1210/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divs1210/subscriptions", "organizations_url": "https://api.github.com/users/divs1210/orgs", "repos_url": "https://api.github.com/users/divs1210/repos", "events_url": "https://api.github.com/users/divs1210/events{/privacy}", "received_events_url": "https://api.github.com/users/divs1210/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-02T09:30:09Z", "updated_at": "2015-11-08T14:44:00Z", "closed_at": "2015-11-08T14:44:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I effectively achieve the following without creating other versions of `AnotherThing`?\n\n``` python\nclass ThingShema(Schema):\n    another_thing = Nested(AnotherThing. exclude=('some.completely.random.thing',))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/28", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/28/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/28/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/28", "id": 114206490, "node_id": "MDU6SXNzdWUxMTQyMDY0OTA=", "number": 28, "title": "schema.jsonify list of sqlalchemy instances incompatible with flask.jsonify", "user": {"login": "jo-tham", "id": 7353689, "node_id": "MDQ6VXNlcjczNTM2ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7353689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jo-tham", "html_url": "https://github.com/jo-tham", "followers_url": "https://api.github.com/users/jo-tham/followers", "following_url": "https://api.github.com/users/jo-tham/following{/other_user}", "gists_url": "https://api.github.com/users/jo-tham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jo-tham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jo-tham/subscriptions", "organizations_url": "https://api.github.com/users/jo-tham/orgs", "repos_url": "https://api.github.com/users/jo-tham/repos", "events_url": "https://api.github.com/users/jo-tham/events{/privacy}", "received_events_url": "https://api.github.com/users/jo-tham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-10-30T05:48:57Z", "updated_at": "2016-05-23T11:46:25Z", "closed_at": "2015-11-11T06:34:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "@ElvisTheKing @sloria \n\ncontinuing where #19 left off... \n\nI am trying to use flask-marshmallow schema.jsonify on the result of a sqlalchemy query\n\nUsing model instance is ok\n\n```\nfrom models.equipment import Equipment\nequipments = Equipment.query.all()\nequipments_schema.jsonify(equipments[0]).response\n\n#('{\\n  \"date_added\": \"2015-10-23T11:07:46.384414+00:00\", \\n  \"id\": 1, \\n  \"name\": \"beacon\"\\n}', '\\n')\n```\n\nList of model instances breaks\n\n```\nequipments_schema.jsonify(equipments)\n\n#*** AttributeError: \"id\" is not a valid field for [<app.models.equipment.Equipment object at 0x7f5b3c11c240>, <app.models.equipment.Equipment object at 0x7f5b3c11cba8>].\n```\n\nversions\n\n```\nFlask==0.10.1\nflask-marshmallow==0.6.2\n-e git+https://github.com/flask-restful/flask-restful.git@54c51fd88759e2f398d566040200d2c9d51b8e5f#egg=Flask_RESTful-master\nFlask-SQLAlchemy==2.0\nmarshmallow==2.1.3\nmarshmallow-sqlalchemy==0.6.0\n```\n\nI think it's because the sqlalchemy query returns a list of model instances, which is not compatible with flask.jsonify. There's some discussion in flask about this, but it sounds like that'll never be supported.\n\nAm I missing something here? from the examples in the readme one might assume this should work. \n\nOtherwise, any thoughts for how to improve this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/25", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/25/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/25/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/25", "id": 105012846, "node_id": "MDU6SXNzdWUxMDUwMTI4NDY=", "number": 25, "title": "Incompatible with marshmallow-sqlalchemy 0.4.0", "user": {"login": "svenstaro", "id": 1664, "node_id": "MDQ6VXNlcjE2NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenstaro", "html_url": "https://github.com/svenstaro", "followers_url": "https://api.github.com/users/svenstaro/followers", "following_url": "https://api.github.com/users/svenstaro/following{/other_user}", "gists_url": "https://api.github.com/users/svenstaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenstaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenstaro/subscriptions", "organizations_url": "https://api.github.com/users/svenstaro/orgs", "repos_url": "https://api.github.com/users/svenstaro/repos", "events_url": "https://api.github.com/users/svenstaro/events{/privacy}", "received_events_url": "https://api.github.com/users/svenstaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-05T08:08:03Z", "updated_at": "2015-09-06T20:35:00Z", "closed_at": "2015-09-06T20:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Due to [this change](https://github.com/marshmallow-code/marshmallow-sqlalchemy/commit/0f69d7da47587b6398bfc087e213706dff8657e3), flask-marshmallow is now needs some fixing to be compatible again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/24", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/24/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/24/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/24", "id": 100587656, "node_id": "MDU6SXNzdWUxMDA1ODc2NTY=", "number": 24, "title": "URL Formatting", "user": {"login": "cmanallen", "id": 6018782, "node_id": "MDQ6VXNlcjYwMTg3ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6018782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmanallen", "html_url": "https://github.com/cmanallen", "followers_url": "https://api.github.com/users/cmanallen/followers", "following_url": "https://api.github.com/users/cmanallen/following{/other_user}", "gists_url": "https://api.github.com/users/cmanallen/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmanallen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmanallen/subscriptions", "organizations_url": "https://api.github.com/users/cmanallen/orgs", "repos_url": "https://api.github.com/users/cmanallen/repos", "events_url": "https://api.github.com/users/cmanallen/events{/privacy}", "received_events_url": "https://api.github.com/users/cmanallen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-12T16:57:20Z", "updated_at": "2015-08-12T19:42:34Z", "closed_at": "2015-08-12T19:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the preferred method ~~of~~ for formatting urls?\n\nCurrent output: `route?id=1`\nDesired output: `route/1`\n\nMy code:\nSchema: `href = URLFor('route', id='<id>')`\nRoutes: `api.add_resource(cls, 'route/<id>', endpoint='route')`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/20", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/20/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/20/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/20", "id": 79683513, "node_id": "MDU6SXNzdWU3OTY4MzUxMw==", "number": 20, "title": "`BIT` column type raises NotImplementedError", "user": {"login": "rmackinnon", "id": 3688637, "node_id": "MDQ6VXNlcjM2ODg2Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3688637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmackinnon", "html_url": "https://github.com/rmackinnon", "followers_url": "https://api.github.com/users/rmackinnon/followers", "following_url": "https://api.github.com/users/rmackinnon/following{/other_user}", "gists_url": "https://api.github.com/users/rmackinnon/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmackinnon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmackinnon/subscriptions", "organizations_url": "https://api.github.com/users/rmackinnon/orgs", "repos_url": "https://api.github.com/users/rmackinnon/repos", "events_url": "https://api.github.com/users/rmackinnon/events{/privacy}", "received_events_url": "https://api.github.com/users/rmackinnon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-23T01:34:22Z", "updated_at": "2015-05-23T01:39:21Z", "closed_at": "2015-05-23T01:39:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using SQLAlchemy to process MySQL tables for an API I'm building, and one of the columns in my table happens to be type 'BIT'.  This apparently isn't supported Marshmallow, but is a valid column type for SQLAlchemy's MySQL dialect.  Any chance of a fix, or is there an easier work around in the Marshmallow-SQLAlchemy connector that I'm missing?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/18", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/18/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/18/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/18", "id": 72419468, "node_id": "MDU6SXNzdWU3MjQxOTQ2OA==", "number": 18, "title": "Allow UrlFor fields to fail somehow", "user": {"login": "RobinRamael", "id": 127796, "node_id": "MDQ6VXNlcjEyNzc5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/127796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobinRamael", "html_url": "https://github.com/RobinRamael", "followers_url": "https://api.github.com/users/RobinRamael/followers", "following_url": "https://api.github.com/users/RobinRamael/following{/other_user}", "gists_url": "https://api.github.com/users/RobinRamael/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobinRamael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobinRamael/subscriptions", "organizations_url": "https://api.github.com/users/RobinRamael/orgs", "repos_url": "https://api.github.com/users/RobinRamael/repos", "events_url": "https://api.github.com/users/RobinRamael/events{/privacy}", "received_events_url": "https://api.github.com/users/RobinRamael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-01T12:06:26Z", "updated_at": "2019-03-10T03:35:57Z", "closed_at": "2019-03-10T02:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to render HATEOAS links for a user that may or may not have the attribute `avatar_filename`. When the user does not have that attribute or it is None, it would be nice to just skip the rendering of the field all together. Is it possible to do this in some way? Or if not, would this be something that I could help implement?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/17", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/17/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/17/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/17", "id": 71272730, "node_id": "MDU6SXNzdWU3MTI3MjczMA==", "number": 17, "title": "Run travis tests against marshmallow 1.2.x and 2.0.x", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-27T12:40:26Z", "updated_at": "2015-04-28T01:54:47Z", "closed_at": "2015-04-28T01:54:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "So that we can easily catch compatibility issues such as https://github.com/marshmallow-code/flask-marshmallow/issues/15\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/16", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/16/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/16/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/16", "id": 71271603, "node_id": "MDU6SXNzdWU3MTI3MTYwMw==", "number": 16, "title": "Compatibility with marshmallow 2.0.0", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-27T12:35:45Z", "updated_at": "2015-04-28T01:52:52Z", "closed_at": "2015-04-28T01:52:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/15", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/15/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/15/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/15", "id": 71192271, "node_id": "MDU6SXNzdWU3MTE5MjI3MQ==", "number": 15, "title": "ImportError: cannot import name ForcedError", "user": {"login": "renner", "id": 729454, "node_id": "MDQ6VXNlcjcyOTQ1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/729454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renner", "html_url": "https://github.com/renner", "followers_url": "https://api.github.com/users/renner/followers", "following_url": "https://api.github.com/users/renner/following{/other_user}", "gists_url": "https://api.github.com/users/renner/gists{/gist_id}", "starred_url": "https://api.github.com/users/renner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renner/subscriptions", "organizations_url": "https://api.github.com/users/renner/orgs", "repos_url": "https://api.github.com/users/renner/repos", "events_url": "https://api.github.com/users/renner/events{/privacy}", "received_events_url": "https://api.github.com/users/renner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-27T06:31:03Z", "updated_at": "2015-04-28T06:39:07Z", "closed_at": "2015-04-28T01:52:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI could be missing something, but I keep on getting the above `ImportError` when just running a simple [example](http://flask-marshmallow.readthedocs.org/en/latest/). Actually just `import Marshmallow` is enough:\n\n```\n>>> from flask_marshmallow import Marshmallow\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/renner/devel/git/ticklist-flask/flask/lib/python2.7/site-packages/flask_marshmallow/__init__.py\", line 21, in <module>\n    from . import fields\n  File \"/home/renner/devel/git/ticklist-flask/flask/lib/python2.7/site-packages/flask_marshmallow/fields.py\", line 16, in <module>\n    from marshmallow.exceptions import ForcedError\nImportError: cannot import name ForcedError\n>>>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/14", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/14/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/14/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/14", "id": 64655938, "node_id": "MDU6SXNzdWU2NDY1NTkzOA==", "number": 14, "title": "ma.URLFor is generating query url instead of specific urls", "user": {"login": "gbrennon", "id": 2373929, "node_id": "MDQ6VXNlcjIzNzM5Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2373929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbrennon", "html_url": "https://github.com/gbrennon", "followers_url": "https://api.github.com/users/gbrennon/followers", "following_url": "https://api.github.com/users/gbrennon/following{/other_user}", "gists_url": "https://api.github.com/users/gbrennon/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbrennon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbrennon/subscriptions", "organizations_url": "https://api.github.com/users/gbrennon/orgs", "repos_url": "https://api.github.com/users/gbrennon/repos", "events_url": "https://api.github.com/users/gbrennon/events{/privacy}", "received_events_url": "https://api.github.com/users/gbrennon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-26T23:28:52Z", "updated_at": "2015-03-26T23:41:30Z", "closed_at": "2015-03-26T23:41:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I'm using Marshmallow + Flask-RESTful and I have this attributes for my Schema class:\n\n`_links = ma.Hyperlinks({                                                                                                           \n        'self': ma.URLFor('atividade_resource', id='<id>'),                                                                            \n        'collection': ma.URLFor('atividades_resource')                                                                                 \n    })`\n\nand on my controller I have this routes:\n\n`api.add_resource(AtividadeListView, '/v1/atividades',                                                                                  \n                 endpoint='atividades_resource')                                                                                       \napi.add_resource(AtividadeView, '/v1/atividades/<id>',                                                                                 \n                 endpoint='atividade_resource')`\n\nAnd my JSON output is:\n\n`_links\": {\n\"collection\": \"/v1/atividades\",\n\"self\": \"/v1/atividades?id=55024fdfe138235aeac01380\"\n},`\n\nSelf shouldn't be '/v1/atividades/55024fdfe138235aeac01380'?\n\nIs this a bug or something wrong that I am doing?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/13", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/13/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/13/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/13", "id": 63052950, "node_id": "MDU6SXNzdWU2MzA1Mjk1MA==", "number": 13, "title": "BuilderError when defining UrlFor for resource that doesn't exist yet.", "user": {"login": "RobinRamael", "id": 127796, "node_id": "MDQ6VXNlcjEyNzc5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/127796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobinRamael", "html_url": "https://github.com/RobinRamael", "followers_url": "https://api.github.com/users/RobinRamael/followers", "following_url": "https://api.github.com/users/RobinRamael/following{/other_user}", "gists_url": "https://api.github.com/users/RobinRamael/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobinRamael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobinRamael/subscriptions", "organizations_url": "https://api.github.com/users/RobinRamael/orgs", "repos_url": "https://api.github.com/users/RobinRamael/repos", "events_url": "https://api.github.com/users/RobinRamael/events{/privacy}", "received_events_url": "https://api.github.com/users/RobinRamael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-19T17:57:20Z", "updated_at": "2015-03-19T18:31:59Z", "closed_at": "2015-03-19T18:30:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \nI'm not sure if this is a bug, but I would like to be able to define a `UrlFor` in a `Hyperlinks`field before the endpoint passed to `UrlFor` is defined. For some reason, this fails for some (but not all) `UrlFor`s referencing endpoints. I tried to override the `Schema.dumps` method to add the links dynamically, like so:\n\n``` python\nclass UserDocumentSchema(ma.Schema):\n\n    ...\n    _links = ma.Hyperlinks({}) # or _links = None \n\n\n    def dump(self, *args, **kwargs):\n        self._links = ma.Hyperlinks({\n            'self': ma.UrlFor('userdocumentresource', id=\"<id>\") # class UserDocumentResource isn't defined yet as it uses this schema\n        })\n\n        return super(UserDocumentSchema, self).dump(*args, **kwargs)\n\n```\n\nbut the changes aren't seen by the dump call for some reason.\n\nI'm using this library together with flask-restful so I'm defining my endpoints like this: \n\n``` python\napp = Flask(__name__)\napi = restful.Api(app)\nma = Marshmallow(app)\n\nfrom resources import UserDocumentResource # schemas are imported here\n\napi.add_resource(UserDocumentResource, '/foo/')\n\n```\n\nAm I doing something wrong? Can I structure my code better? Or is this something that could be fixed?\nthanks, \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/12", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/12/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/12/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/12", "id": 59632435, "node_id": "MDU6SXNzdWU1OTYzMjQzNQ==", "number": 12, "title": "invalid syntax after installing", "user": {"login": "devpascoe", "id": 1015780, "node_id": "MDQ6VXNlcjEwMTU3ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1015780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devpascoe", "html_url": "https://github.com/devpascoe", "followers_url": "https://api.github.com/users/devpascoe/followers", "following_url": "https://api.github.com/users/devpascoe/following{/other_user}", "gists_url": "https://api.github.com/users/devpascoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/devpascoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devpascoe/subscriptions", "organizations_url": "https://api.github.com/users/devpascoe/orgs", "repos_url": "https://api.github.com/users/devpascoe/repos", "events_url": "https://api.github.com/users/devpascoe/events{/privacy}", "received_events_url": "https://api.github.com/users/devpascoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-03T12:03:43Z", "updated_at": "2015-03-03T22:15:23Z", "closed_at": "2015-03-03T22:15:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've a vanilla Flask app. installed this package and added in my app.py\n_from flask.ext.marshmallow import Marshmallow_\n\n```\nTraceback (most recent call last):\n  File \"app.py\", line 5, in <module>\n    from flask.ext.marshmallow import Marshmallow\n  File \"/venv/lib/python2.6/site-packages/flask/exthook.py\", line 62, in load_module\n    __import__(realname)\n  File \"/venv/lib/python2.6/site-packages/flask_marshmallow/__init__.py\", line 21, in <module>\n    from . import fields\n  File \"/venv/lib/python2.6/site-packages/flask_marshmallow/fields.py\", line 115\n    for key, value in iteritems(d)\n      ^\nSyntaxError: invalid syntax\n```\n\nIs this a python version issue? Should I be running on 3?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/11", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/11/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/11/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/11", "id": 53664744, "node_id": "MDU6SXNzdWU1MzY2NDc0NA==", "number": 11, "title": "Allow list of Hyperlinks", "user": {"login": "royrusso", "id": 654238, "node_id": "MDQ6VXNlcjY1NDIzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/654238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/royrusso", "html_url": "https://github.com/royrusso", "followers_url": "https://api.github.com/users/royrusso/followers", "following_url": "https://api.github.com/users/royrusso/following{/other_user}", "gists_url": "https://api.github.com/users/royrusso/gists{/gist_id}", "starred_url": "https://api.github.com/users/royrusso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/royrusso/subscriptions", "organizations_url": "https://api.github.com/users/royrusso/orgs", "repos_url": "https://api.github.com/users/royrusso/repos", "events_url": "https://api.github.com/users/royrusso/events{/privacy}", "received_events_url": "https://api.github.com/users/royrusso/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95191360, "node_id": "MDU6TGFiZWw5NTE5MTM2MA==", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-07T18:30:39Z", "updated_at": "2015-05-01T03:17:05Z", "closed_at": "2015-05-01T03:17:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently there is no way to create an array/list of hyperlinks, as it expects a dict. A common format for hateoas is as this: https://developer.paypal.com/docs/api/#hateoas-links\n\n\"links\" : [{\n   \"href\" : \"https://api.sandbox.paypal.com/v1/payments/payment/PAY-2XR800907F429382MKEBWOSA\",\n   \"rel\" : \"self\",\n   \"method\" : \"GET\"\n  }, {\n   \"href\" : \"https://api.sandbox.paypal.com/v1/payments/payment/PAY-2XR800907F429382MKEBWOSA/execute\",\n   \"rel\" : \"update\",\n   \"method\" : \"POST\"\n\nThis format provides standard keys for every link, and is therefore easier to navigate.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/10", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/10/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/10/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/10", "id": 52944217, "node_id": "MDU6SXNzdWU1Mjk0NDIxNw==", "number": 10, "title": "URLFor serialization when attribute is `None` results in AttributeError", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-27T00:39:48Z", "updated_at": "2015-01-18T17:48:45Z", "closed_at": "2015-01-18T17:48:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Found by @raj-kesavan in https://github.com/sloria/marshmallow/issues/114 : Serializing `None` with a `URLFor` or `Hyperlinks` field results in an `AttributeError`.\n\n``` python\nfrom flask import Flask\nfrom flask_marshmallow import Marshmallow\n\napp = Flask('testapp')\n\n@app.route('/foo/<id>')\ndef foo(id):\n    return '..'\n\nma = Marshmallow(app)\n\nclass FooSchema(ma.Schema):\n    links = ma.URLFor('foo', id='<id>')\n\nctx = app.test_request_context()\nctx.push()\n\nschema = FooSchema()\nfoo1 = {'id': 1}\nprint(schema.dump(foo1).data)  # {'links': '/foo/1'}\n\n# This should raise a werkzueg BuildError, NOT an AttributeError\nfoo2 = {'id': None}\nprint(schema.dump(foo2).data)  # AttributeError: 'id' is not a valid attribute of {'id': None}\n\nfoo3 = {'id': 0}\nprint(schema.dump(foo3).data)  # AttributeError: 'id' is not a valid attribute of {'id': 0}\nctx.pop()\n```\n\nThe error is due to this code: https://github.com/sloria/flask-marshmallow/blob/f08feafc397a09d01acbe54ec0e4251b12b9940c/flask_marshmallow/fields.py#L79-86\n\nThis behavior is incorrect because it is checking the truthiness of the `self.get_value(attr, obj)`, which may return a valid (but falsy) value , e.g.  `0`.\n\nI think the solution is to remove this check. Will work on a fix shortly.\n\nEDIT: Expanded the code example to clarify the bug.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/9", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/9/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/9/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/9", "id": 52654368, "node_id": "MDU6SXNzdWU1MjY1NDM2OA==", "number": 9, "title": "Deserialization of Hyperlinks and URL fields fails", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95191358, "node_id": "MDU6TGFiZWw5NTE5MTM1OA==", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-22T14:33:47Z", "updated_at": "2014-12-23T15:57:05Z", "closed_at": "2014-12-22T14:39:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From @raj-kesavan in #7 : \n\n> Simple set up with Flask-RESTful and Flask-Marshmallow. When I navigate to /api/v1/person, I get a 500 Internal Server Error. Server logs at bottom.\n\n```\nclass PersonSchema(ma.Schema):\n    name = ma.String(required = True)\n    friends = ma.Hyperlinks({\n        'href': ma.AbsoluteURL('person_ep')\n    })\n\nclass PersonAPI(Resource):\n    def get(self):\n        person, errors = PersonSchema().load({\n            'name': 'Rob'\n        })\n\napi.add_resource(PersonAPI, '/api/v1/person/', endpoint = 'person_ep')\n```\n\nServer log\n\n```\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69]   File \"/usr/local/lib/python2.7/dist-packages/flask_restful/__init__.py\", line 521, in dispatch_request\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69]     resp = meth(*args, **kwargs)\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69]   File \"/var/www/html/devabacus/abacus/views.py\", line 95, in get\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69]     'name': 'Rob'\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69]   File \"/usr/local/lib/python2.7/dist-packages/marshmallow/schema.py\", line 498, in load\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69]     dict_class=self.dict_class\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69]   File \"/usr/local/lib/python2.7/dist-packages/marshmallow/fields.py\", line 260, in deserialize\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69]     key = fields_dict[attr_name].attribute or attr_name\n[Mon Dec 22 04:15:16 2014] [error] [client 108.162.215.69] AttributeError: 'Hyperlinks' object has no attribute 'attribute'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/8", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/8/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/8/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/8", "id": 51627395, "node_id": "MDU6SXNzdWU1MTYyNzM5NQ==", "number": 8, "title": "RuntimeError: working outside of application context", "user": {"login": "rmasters", "id": 34284, "node_id": "MDQ6VXNlcjM0Mjg0", "avatar_url": "https://avatars1.githubusercontent.com/u/34284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmasters", "html_url": "https://github.com/rmasters", "followers_url": "https://api.github.com/users/rmasters/followers", "following_url": "https://api.github.com/users/rmasters/following{/other_user}", "gists_url": "https://api.github.com/users/rmasters/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmasters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmasters/subscriptions", "organizations_url": "https://api.github.com/users/rmasters/orgs", "repos_url": "https://api.github.com/users/rmasters/repos", "events_url": "https://api.github.com/users/rmasters/events{/privacy}", "received_events_url": "https://api.github.com/users/rmasters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-10T23:48:27Z", "updated_at": "2015-03-30T03:03:39Z", "closed_at": "2015-01-18T17:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Flask in the structure [defined here](https://www.digitalocean.com/community/tutorials/how-to-structure-large-flask-applications) and am coming across this error:\n\n```\nTraceback (most recent call last):\n  File \"run.py\", line 2, in <module>\n    from app import app\n  File \".../app/__init__.py\", line 13, in <module>\n    from monitors.controllers import monitors\n  File \".../app/monitors/controllers.py\", line 3, in <module>\n    from .models import Monitor, monitor_schema\n  File \".../app/monitors/models.py\", line 16, in <module>\n    monitor_schema = MonitorSchema()\n  File \".../site-packages/marshmallow/schema.py\", line 227, in __init__\n    self.opts = self.OPTIONS_CLASS(self.Meta)\n  File \".../site-packages/flask_marshmallow/__init__.py\", line 56, in __init__\n    meta, 'strict', current_app.config['MARSHMALLOW_STRICT']\n  File \".../site-packages/werkzeug/local.py\", line 338, in __getattr__\n    return getattr(self._get_current_object(), name)\n  File \".../site-packages/werkzeug/local.py\", line 297, in _get_current_object\n    return self.__local()\n  File \".../site-packages/flask/globals.py\", line 34, in _find_app\n    raise RuntimeError('working outside of application context')\nRuntimeError: working outside of application context\n```\n\nI'm passing through the app instance as below (which should retain the app context?):\n##### __init__.py:\n\n``` python\napp = Flask(__name__)\nma = Marshmallow(app)\n```\n##### monitors/models.py\n\n``` python\nfrom app import app, ma\n\nclass MonitorSchema(ma.Schema):\n    class Meta:\n        fields = ('id', 'name')\n\nmonitor_schema = MonitorSchema()\n```\n##### monitors/controllers.py\n\n``` python\nfrom .models import Monitor, monitor_schema\n\n...\nmonitor = Monitor.query.get(1)\nreturn monitor_schema.dump(monitor).data\n```\n\nAny ideas as to where I'm going wrong? Thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/7", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/7/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/7/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/7", "id": 50924944, "node_id": "MDU6SXNzdWU1MDkyNDk0NA==", "number": 7, "title": "Request parsing example?", "user": {"login": "nickretallack", "id": 13291, "node_id": "MDQ6VXNlcjEzMjkx", "avatar_url": "https://avatars3.githubusercontent.com/u/13291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickretallack", "html_url": "https://github.com/nickretallack", "followers_url": "https://api.github.com/users/nickretallack/followers", "following_url": "https://api.github.com/users/nickretallack/following{/other_user}", "gists_url": "https://api.github.com/users/nickretallack/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickretallack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickretallack/subscriptions", "organizations_url": "https://api.github.com/users/nickretallack/orgs", "repos_url": "https://api.github.com/users/nickretallack/repos", "events_url": "https://api.github.com/users/nickretallack/events{/privacy}", "received_events_url": "https://api.github.com/users/nickretallack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 95191363, "node_id": "MDU6TGFiZWw5NTE5MTM2Mw==", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-04T03:37:23Z", "updated_at": "2014-12-22T14:39:23Z", "closed_at": "2014-12-22T14:39:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this only for serializing responses, or can it be used for parsing requests as well?  Can you add an example of this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/6", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/6/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/6/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/6", "id": 50569100, "node_id": "MDU6SXNzdWU1MDU2OTEwMA==", "number": 6, "title": "Don't overwrite marshmallow URL", "user": {"login": "svenstaro", "id": 1664, "node_id": "MDQ6VXNlcjE2NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenstaro", "html_url": "https://github.com/svenstaro", "followers_url": "https://api.github.com/users/svenstaro/followers", "following_url": "https://api.github.com/users/svenstaro/following{/other_user}", "gists_url": "https://api.github.com/users/svenstaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenstaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenstaro/subscriptions", "organizations_url": "https://api.github.com/users/svenstaro/orgs", "repos_url": "https://api.github.com/users/svenstaro/repos", "events_url": "https://api.github.com/users/svenstaro/events{/privacy}", "received_events_url": "https://api.github.com/users/svenstaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-01T20:15:43Z", "updated_at": "2014-12-07T18:10:31Z", "closed_at": "2014-12-07T18:10:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently you are overwriting marshmallow's own URL field. I don't think this is a good choice generally because in my case I want to validate a URL (so I have an input schema) and obviously I don't have an endpoint to provide it with in this case. It doesn't even make sense to have URLs require endpoints for input/validation.\n\nPerhaps you should call the URL within flask-marshmallow differently?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/4", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/4/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/4/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/4", "id": 35535999, "node_id": "MDU6SXNzdWUzNTUzNTk5OQ==", "number": 4, "title": "Serialize many-to-many", "user": {"login": "speckone", "id": 4030087, "node_id": "MDQ6VXNlcjQwMzAwODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4030087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/speckone", "html_url": "https://github.com/speckone", "followers_url": "https://api.github.com/users/speckone/followers", "following_url": "https://api.github.com/users/speckone/following{/other_user}", "gists_url": "https://api.github.com/users/speckone/gists{/gist_id}", "starred_url": "https://api.github.com/users/speckone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/speckone/subscriptions", "organizations_url": "https://api.github.com/users/speckone/orgs", "repos_url": "https://api.github.com/users/speckone/repos", "events_url": "https://api.github.com/users/speckone/events{/privacy}", "received_events_url": "https://api.github.com/users/speckone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-11T22:56:13Z", "updated_at": "2014-06-12T15:21:48Z", "closed_at": "2014-06-12T15:21:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I serialize a many-to-many relationship? I have the following \n\nhttps://gist.github.com/speckone/6591f424588753f3ddbb\n\nbut I'm getting:\n\nTypeError: list indices must be integers, not str\n\nDo you have an example I could follow?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/1", "repository_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow", "labels_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/1/comments", "events_url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/issues/1/events", "html_url": "https://github.com/marshmallow-code/flask-marshmallow/issues/1", "id": 32584594, "node_id": "MDU6SXNzdWUzMjU4NDU5NA==", "number": 1, "title": "marshal_with decorator?", "user": {"login": "sloria", "id": 2379650, "node_id": "MDQ6VXNlcjIzNzk2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2379650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sloria", "html_url": "https://github.com/sloria", "followers_url": "https://api.github.com/users/sloria/followers", "following_url": "https://api.github.com/users/sloria/following{/other_user}", "gists_url": "https://api.github.com/users/sloria/gists{/gist_id}", "starred_url": "https://api.github.com/users/sloria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sloria/subscriptions", "organizations_url": "https://api.github.com/users/sloria/orgs", "repos_url": "https://api.github.com/users/sloria/repos", "events_url": "https://api.github.com/users/sloria/events{/privacy}", "received_events_url": "https://api.github.com/users/sloria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 96362253, "node_id": "MDU6TGFiZWw5NjM2MjI1Mw==", "url": "https://api.github.com/repos/marshmallow-code/flask-marshmallow/labels/feedback%20welcome", "name": "feedback welcome", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-30T23:50:04Z", "updated_at": "2019-02-25T08:23:08Z", "closed_at": "2014-05-13T04:45:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm considering adding a `marshal_with` decorator, an idea from Flask-Restful: http://flask-restful.readthedocs.org/en/latest/fields.html . I can see how it might fit some use cases (e.g. integrating with Flask-Restful or Flask-API, which expect views to return dictionaries). However, I'm not fully convinced that it adds that much convenience to be worth the added code in this package. \n", "performed_via_github_app": null, "score": 1.0}]}