{"total_count": 157, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/462", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/462/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/462/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/462", "id": 680770513, "node_id": "MDU6SXNzdWU2ODA3NzA1MTM=", "number": 462, "title": "how to query path", "user": {"login": "drunkenlion", "id": 5670400, "node_id": "MDQ6VXNlcjU2NzA0MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5670400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drunkenlion", "html_url": "https://github.com/drunkenlion", "followers_url": "https://api.github.com/users/drunkenlion/followers", "following_url": "https://api.github.com/users/drunkenlion/following{/other_user}", "gists_url": "https://api.github.com/users/drunkenlion/gists{/gist_id}", "starred_url": "https://api.github.com/users/drunkenlion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drunkenlion/subscriptions", "organizations_url": "https://api.github.com/users/drunkenlion/orgs", "repos_url": "https://api.github.com/users/drunkenlion/repos", "events_url": "https://api.github.com/users/drunkenlion/events{/privacy}", "received_events_url": "https://api.github.com/users/drunkenlion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031823410, "node_id": "MDU6TGFiZWwxMDMxODIzNDEw", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/more%20information%20needed", "name": "more information needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-18T07:38:54Z", "updated_at": "2020-08-20T07:25:07Z", "closed_at": "2020-08-20T07:25:07Z", "author_association": "NONE", "active_lock_reason": null, "body": " when I run\r\n\r\n```\r\nmatch p=(n:card{card_id:27})-[r*..3]->(m:card{card_id:106}) where n.card_id<>m.card_id return p limit 5\r\n```\r\n\r\nI can't get path object ,\r\n\r\nAPI Doc says:\r\nCypher Type | Python Type\r\n-- | --\r\nNode | neo4j.graph.Node\r\nRelationship | neo4j.graph.Relationship\r\nPath | neo4j.graph.Path\r\n\r\nbut I can't .\r\n\r\nhow does it work???\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/459", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/459/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/459/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/459", "id": 667627201, "node_id": "MDU6SXNzdWU2Njc2MjcyMDE=", "number": 459, "title": "Exception: Should only attempt to acquire lease when leader.", "user": {"login": "ianhhhhhhhhe", "id": 7475042, "node_id": "MDQ6VXNlcjc0NzUwNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7475042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianhhhhhhhhe", "html_url": "https://github.com/ianhhhhhhhhe", "followers_url": "https://api.github.com/users/ianhhhhhhhhe/followers", "following_url": "https://api.github.com/users/ianhhhhhhhhe/following{/other_user}", "gists_url": "https://api.github.com/users/ianhhhhhhhhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianhhhhhhhhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianhhhhhhhhe/subscriptions", "organizations_url": "https://api.github.com/users/ianhhhhhhhhe/orgs", "repos_url": "https://api.github.com/users/ianhhhhhhhhe/repos", "events_url": "https://api.github.com/users/ianhhhhhhhhe/events{/privacy}", "received_events_url": "https://api.github.com/users/ianhhhhhhhhe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 488095985, "node_id": "MDU6TGFiZWw0ODgwOTU5ODU=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/docs", "name": "docs", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-07-29T07:46:06Z", "updated_at": "2020-08-03T12:51:42Z", "closed_at": "2020-08-03T12:51:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Neo4j Version:** 4.1.0 Enterprise  \r\n**Neo4j Mode**: Cluster  \r\n**Driver version**: Python driver 4.0.2  \r\n**Operating System:** Docker  \r\n\r\nThe network has three neo4j database. Cluster1 is the leader, Cluster0 and Cluster2 are the follower. And my code is like:\r\n\r\ncreateDriver function:\r\n\r\n```\r\nclass Graph(object):\r\n\r\n    def __init__(self, config):\r\n        uri = config[\"neo4jUri\"]\r\n        addresses = config[\"neo4jAddress\"]\r\n        user = config[\"neo4jUser\"]\r\n        password = config[\"neo4jPass\"]\r\n        self._driver = self.createDriver(uri=uri, user=user, password=password, addresses=addresses)\r\n    \r\n    def createDriver(self, uri, user, password, addresses):\r\n        def resolver(address):\r\n            for address in addresses:\r\n                yield address, 7687\r\n        return GraphDatabase.driver(uri, auth=(user, password), resolver=resolver)\r\n\r\n    def run_query(self, func, arg):\r\n        with self._driver.session() as session:\r\n            response = None\r\n            try:\r\n                response = session.write_transaction(func, arg)\r\n            except ConstraintError:\r\n                print(\"ConstraintError\")\r\n                return response\r\n            except Exception as e:\r\n                print(\"Exception: {0}\".format(e))\r\n            finally:\r\n                return response\r\n```\r\n\r\nAnd when I only use Cluster1, it works just fine.\r\n\r\nBut when I use all three addresses, it won't work, and tell:\r\n\r\n```\r\nException: Should only attempt to acquire lease when leader.\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/458", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/458/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/458/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/458", "id": 665363598, "node_id": "MDU6SXNzdWU2NjUzNjM1OTg=", "number": 458, "title": "Who can tell me what's wrong? (Unexpected config keys: encrpted)", "user": {"login": "sherwinNG", "id": 52407961, "node_id": "MDQ6VXNlcjUyNDA3OTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/52407961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherwinNG", "html_url": "https://github.com/sherwinNG", "followers_url": "https://api.github.com/users/sherwinNG/followers", "following_url": "https://api.github.com/users/sherwinNG/following{/other_user}", "gists_url": "https://api.github.com/users/sherwinNG/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherwinNG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherwinNG/subscriptions", "organizations_url": "https://api.github.com/users/sherwinNG/orgs", "repos_url": "https://api.github.com/users/sherwinNG/repos", "events_url": "https://api.github.com/users/sherwinNG/events{/privacy}", "received_events_url": "https://api.github.com/users/sherwinNG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-21T08:57:07Z", "updated_at": "2020-07-27T07:40:26Z", "closed_at": "2020-07-27T07:39:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/data/django-uwsgi/text_labeled/create_graph/build.py\", line 44, in <module>\r\n    create_label_node_and_rel()\r\n  File \"/data/django-uwsgi/text_labeled/create_graph/build.py\", line 13, in create_label_node_and_rel\r\n    _driver = GraphDatabase.driver(**NEO4J_CONFIG)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/neo4j/__init__.py\", line 181, in driver\r\n    return cls.bolt_driver(parsed.netloc, auth=auth, **config)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/neo4j/__init__.py\", line 194, in bolt_driver\r\n    return BoltDriver.open(target, auth=auth, **config)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/neo4j/__init__.py\", line 356, in open\r\n    pool_config, default_workspace_config = Config.consume_chain(config, PoolConfig, WorkspaceConfig)\r\n  File \"/root/anaconda3/lib/python3.6/site-packages/neo4j/conf.py\", line 111, in consume_chain\r\n    raise ConfigurationError(\"Unexpected config keys: %s\" % \", \".join(data.keys()))\r\nneo4j.exceptions.ConfigurationError: Unexpected config keys: encrpted\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/454", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/454/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/454/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/454", "id": 660717962, "node_id": "MDU6SXNzdWU2NjA3MTc5NjI=", "number": 454, "title": "ValueError: URI scheme 'neo4j' not supported", "user": {"login": "DrMartiner", "id": 730717, "node_id": "MDQ6VXNlcjczMDcxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/730717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMartiner", "html_url": "https://github.com/DrMartiner", "followers_url": "https://api.github.com/users/DrMartiner/followers", "following_url": "https://api.github.com/users/DrMartiner/following{/other_user}", "gists_url": "https://api.github.com/users/DrMartiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMartiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMartiner/subscriptions", "organizations_url": "https://api.github.com/users/DrMartiner/orgs", "repos_url": "https://api.github.com/users/DrMartiner/repos", "events_url": "https://api.github.com/users/DrMartiner/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMartiner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-19T09:22:47Z", "updated_at": "2020-07-20T07:49:51Z", "closed_at": "2020-07-20T07:49:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Neo4j Version:** 4.1-enterprise\r\n**Neo4j Mode**: Single instance  \r\n**Driver version**: Python driver 3.8\r\n**Lib version**: ^4.0.2\r\n\r\n```python\r\nfrom neo4j import GraphDatabase, Driver\r\nfrom application import config\r\n\r\ndriver = GraphDatabase.driver(\"neo4j://neo4j:7687\", auth=(\"neo4j\", \"changeme\"))\r\n```\r\n\r\nException:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.8/site-packages/neo4j/__init__.py\", line 108, in driver\r\n    return Driver(uri, **config)\r\n  File \"/usr/local/lib/python3.8/site-packages/neo4j/__init__.py\", line 148, in __new__\r\n    raise ValueError(\"URI scheme %r not supported\" % parsed.scheme)\r\nValueError: URI scheme 'neo4j' not supported```\r\n\r\nUPD: the problem was solved via downgrade to 4.0.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/453", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/453/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/453/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/453", "id": 658433689, "node_id": "MDU6SXNzdWU2NTg0MzM2ODk=", "number": 453, "title": "Cannot start Django with neo4j driver in version 4.0.x. On 1.7.0 works.", "user": {"login": "pitniecik", "id": 68395377, "node_id": "MDQ6VXNlcjY4Mzk1Mzc3", "avatar_url": "https://avatars0.githubusercontent.com/u/68395377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitniecik", "html_url": "https://github.com/pitniecik", "followers_url": "https://api.github.com/users/pitniecik/followers", "following_url": "https://api.github.com/users/pitniecik/following{/other_user}", "gists_url": "https://api.github.com/users/pitniecik/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitniecik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitniecik/subscriptions", "organizations_url": "https://api.github.com/users/pitniecik/orgs", "repos_url": "https://api.github.com/users/pitniecik/repos", "events_url": "https://api.github.com/users/pitniecik/events{/privacy}", "received_events_url": "https://api.github.com/users/pitniecik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-16T18:10:11Z", "updated_at": "2020-07-17T06:41:05Z", "closed_at": "2020-07-17T06:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cannot start Django with neo4j driver in version 4.0.x. On 1.7.0 works.\r\n\r\n**Driver version**: Python driver 4.0.x  \r\n**Operating System:** Docker, Django-3.0.8, Python 3.7, Neomodel 3.2.9\r\n\r\n### Steps to reproduce\r\n1. python manage.py runserver\r\n### Expected behavior\r\nStart Django server\r\n### Actual behavior\r\n\u001b[0m\u001b[91mTraceback (most recent call last):\r\n  File \"manage.py\", line 15, in <module>\r\n\u001b[0m\u001b[91m    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/__init__.py\", line 401, in execute_from_command_line\r\n\u001b[0m\u001b[91m    utility.execute()\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/__init__.py\", line 395, in execute\r\n\u001b[0m\u001b[91m    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/core/management/base.py\", line 341, in run_from_argv\r\n\u001b[0m\u001b[91m    connections.close_all()\r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/utils.py\", line 225, in close_all\r\n\u001b[0m\u001b[91m    for alias in self:\r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/utils.py\", line 219, in __iter__\r\n\u001b[0m\u001b[91m    return iter(self.databases)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/utils/functional.py\", line 48, in __get__\r\n\u001b[0m\u001b[91m    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/db/utils.py\", line 153, in databases\r\n\u001b[0m\u001b[91m    self._databases = settings.DATABASES\r\n  File \"/usr/local/lib/python3.7/site-packages/django/conf/__init__.py\", line 76, in __getattr__\r\n\u001b[0m\u001b[91m    self._setup(name)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/conf/__init__.py\", line 63, in _setup\r\n\u001b[0m\u001b[91m    self._wrapped = Settings(settings_module)\r\n  File \"/usr/local/lib/python3.7/site-packages/django/conf/__init__.py\", line 142, in __init__\r\n\u001b[0m\u001b[91m    mod = importlib.import_module(self.SETTINGS_MODULE)\r\n  File \"/usr/local/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n\u001b[0m\u001b[91m    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n\u001b[0m\u001b[91m  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n\u001b[0m\u001b[91m  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n\u001b[0m\u001b[91m  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n\u001b[0m\u001b[91m  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/gp_pdf/gp_pdf_backend/settings.py\", line 14, in <module>\r\n\u001b[0m\u001b[91m    from neomodel import config\r\n  File \"/usr/local/lib/python3.7/site-packages/neomodel/__init__.py\", line 3, in <module>\r\n\u001b[0m\u001b[91m    from .core import *\r\n  File \"/usr/local/lib/python3.7/site-packages/neomodel/core.py\", line 9, in <module>\r\n\u001b[0m\u001b[91m    from neomodel.util import Database, classproperty, _UnsavedNode, _get_node_properties\r\n  File \"/usr/local/lib/python3.7/site-packages/neomodel/util.py\", line 8, in <module>\r\n\u001b[0m\u001b[91m    from neo4j.v1 import GraphDatabase, basic_auth, CypherError, SessionError\r\n  File \"/usr/local/lib/python3.7/site-packages/neo4j/__init__.py\", line 93, in <module>\r\n\u001b[0m\u001b[91m    from neo4j.data import (\r\n  File \"/usr/local/lib/python3.7/site-packages/neo4j/data.py\", line 30, in <module>\r\n\u001b[0m\u001b[91m    from neo4j.packstream import INT64_MIN, INT64_MAX, Structure\r\nImportError: cannot import name 'INT64_MIN' from 'neo4j.packstream' (/usr/local/lib/python3.7/site-packages/neo4j/packstream/__init__.py)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/450", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/450/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/450/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/450", "id": 656998855, "node_id": "MDU6SXNzdWU2NTY5OTg4NTU=", "number": 450, "title": "[Bug] UnicodeDecodeError raised in setup.py due to unspecified encoding option", "user": {"login": "vungsung", "id": 32069685, "node_id": "MDQ6VXNlcjMyMDY5Njg1", "avatar_url": "https://avatars3.githubusercontent.com/u/32069685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vungsung", "html_url": "https://github.com/vungsung", "followers_url": "https://api.github.com/users/vungsung/followers", "following_url": "https://api.github.com/users/vungsung/following{/other_user}", "gists_url": "https://api.github.com/users/vungsung/gists{/gist_id}", "starred_url": "https://api.github.com/users/vungsung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vungsung/subscriptions", "organizations_url": "https://api.github.com/users/vungsung/orgs", "repos_url": "https://api.github.com/users/vungsung/repos", "events_url": "https://api.github.com/users/vungsung/events{/privacy}", "received_events_url": "https://api.github.com/users/vungsung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 207837127, "node_id": "MDU6TGFiZWwyMDc4MzcxMjc=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T01:41:46Z", "updated_at": "2020-07-15T07:26:24Z", "closed_at": "2020-07-15T07:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Package version**: 4.1.dev0\r\n**Operating System:** Windows 10 1909\r\n**Python version**: Python 3.7.3 x64\r\n\r\n### Steps to reproduce\r\n1. Run `pip install neo4j-driver`, or clone the repo and run `python setup.py install`\r\n### Expected behavior\r\n`setup.py` reads `README.rst` without encoding problems during installing the package.\r\n### Actual behavior\r\n`UnicodeDecodeError` raised during installing the package.\r\n```\r\nC:\\neo4j-python-driver>python setup.py install\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 47, in <module>\r\n    readme = open(path_join(dirname(__file__), \"README.rst\")).read()\r\nUnicodeDecodeError: 'cp950' codec can't decode byte 0xe2 in position 1761: illegal multibyte sequence\r\n```\r\n### The solution\r\n[Line 47 of setup.py](https://github.com/neo4j/neo4j-python-driver/blob/4.1/setup.py#L47)\r\n**Original**: `readme = open(path_join(dirname(__file__), \"README.rst\")).read()`\r\n`open` function tried to use local encoding ('cp950' in my case) to open `README.rst` (which was encoded with 'utf-8').\r\n\r\n**Corrected**: `readme = open(path_join(dirname(__file__), \"README.rst\"), encoding='utf-8').read()`\r\nSpecify 'utf-8' in open() fixed it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/449", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/449/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/449/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/449", "id": 654757830, "node_id": "MDU6SXNzdWU2NTQ3NTc4MzA=", "number": 449, "title": "Different behaviours in the 4.0 driver when returning a result iterator before consuming it ", "user": {"login": "Alsaxian", "id": 24764406, "node_id": "MDQ6VXNlcjI0NzY0NDA2", "avatar_url": "https://avatars3.githubusercontent.com/u/24764406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alsaxian", "html_url": "https://github.com/Alsaxian", "followers_url": "https://api.github.com/users/Alsaxian/followers", "following_url": "https://api.github.com/users/Alsaxian/following{/other_user}", "gists_url": "https://api.github.com/users/Alsaxian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alsaxian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alsaxian/subscriptions", "organizations_url": "https://api.github.com/users/Alsaxian/orgs", "repos_url": "https://api.github.com/users/Alsaxian/repos", "events_url": "https://api.github.com/users/Alsaxian/events{/privacy}", "received_events_url": "https://api.github.com/users/Alsaxian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T12:48:35Z", "updated_at": "2020-07-13T09:03:06Z", "closed_at": "2020-07-13T09:02:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI have always thought that I should rather carry the iterator with me when I pass a result from one function to another wherever it is possible, and only consume it (convert it to a list or a dict) at the last step where I really need to, since iterators are much less cumbersome than lists or dicts in Python, which goes in line with Python's best practice. This idea has been working well with the 1.7.1 driver but I just ran into a problem with the 4.0 driver. Let's consider the following code\r\n\r\n```python\r\nfrom neo4j import GraphDatabase\r\ndriver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"my_password\"), encrypted = False)\r\n\r\ndef gimme_some_names(tx):\r\n    names = tx.run(\"MATCH (pl:Person) RETURN pl.name AS names\")\r\n\r\nwith driver.session() as session1:\r\n    result_non_transactional = session1.run(\"MATCH (pl:Person) RETURN pl.name AS names\")\r\n    result_transactional = session1.read_transaction(gimme_some_names)\r\n\r\ndriver.close()\r\n\r\nprint(\"Result when I don't use transactions:\", result_non_transactional.values())\r\nprint(\"Result when I use transactions:\", result_transactional.values())\r\n```\r\n\r\nThe idea is that I let Neo4j run as little time as possible, I try not to treat any result during an open Neo4j session so that Neo4j should only concentrate on its queries. I use transactions once and not, the other time. However:\r\n\r\nWith Python 3.8.3 + Neo4j 4.0 + neo4j-python-driver 1.7.1, both works well. \r\nWith Python 3.8.3 + Neo4j 4.0 + neo4j-python-driver 4.0, the non-transactional one works well but the transactional one doesn't work, which only returns an empty list. But if I directly convert the result to a list or a dict inside the Neo4j session, both works well again. \r\n\r\nIs this what supposed to be with the 4.0 driver? If yes, any explanation why the 4.0 driver doesn't encourage users to transport result iterators anymore instead of lists when they use transactions, but still keep the possibility when they don't? \r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/434", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/434/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/434/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/434", "id": 648455465, "node_id": "MDU6SXNzdWU2NDg0NTU0NjU=", "number": 434, "title": "Tolerant depreciation of neo4j.result.value() and .values() in version 1.7.1 not in accordance with Azure Functions", "user": {"login": "Alsaxian", "id": 24764406, "node_id": "MDQ6VXNlcjI0NzY0NDA2", "avatar_url": "https://avatars3.githubusercontent.com/u/24764406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alsaxian", "html_url": "https://github.com/Alsaxian", "followers_url": "https://api.github.com/users/Alsaxian/followers", "following_url": "https://api.github.com/users/Alsaxian/following{/other_user}", "gists_url": "https://api.github.com/users/Alsaxian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alsaxian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alsaxian/subscriptions", "organizations_url": "https://api.github.com/users/Alsaxian/orgs", "repos_url": "https://api.github.com/users/Alsaxian/repos", "events_url": "https://api.github.com/users/Alsaxian/events{/privacy}", "received_events_url": "https://api.github.com/users/Alsaxian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-30T20:00:27Z", "updated_at": "2020-07-03T16:01:27Z", "closed_at": "2020-07-01T07:03:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "In reading your [Python 4.0 driver ducumentation](https://neo4j.com/docs/api/python-driver/4.0/api.html#neo4j.Result) one can realize that you are depreciating `neo4j.result.value()` and `.values()` from now on, which were however two of the main ways to consume Neo4j results before, which is OK in theory, because it's only an issue of adding a for-loop to your code, but imagine when in your old projects `value()` and `values()` are everywhere..\r\n\r\nKeeping the old version 1.7 of the Python driver combining with Neo4j 4.0 should have been a good workaround to avoid making these changes here and there. However, this seems not to be true in Azure Functions.\r\n\r\nEnvironment: Python: 3.8.3, neo4j-python-driver: 1.7.1, neobolt: 1.7.17, OS: Windows 10, IDE: VS Code.\r\nIn my local debugging the result consumption with `result.value()` and `result.values()` worked just great.\r\nNow when I tried to deploy everything onto Azure Functions, nightmare comes. With exactly the same environment with Azure Function 3.0.2630, even when I just run everything in local, Errors prompt out.\r\nNo matter if I only include neo4j or neobolt as well in requirements.txt, debugger says\r\n```\r\nException: AttributeError: 'Result' object has no attribute 'value'\r\n```\r\nThen if I change `value()` to a self-made iter-to-list piece of code, everything works. \r\n\r\nIt seems to me that on one side, Azure Functions installs and manages Python packages on its own so that for example you can't really define the exact version you need for the packages you use. On the other, you guys did some not 100% worry-free tricks in the back so that \"higher\" versions of neo4j-python-driver in 1.7 could still run the methods `values()` and `values()` on a result, though both being already depreciated with tolerance in these 1.7 versions, with the thought to drop them out definitely in the future versions of 4.0. But the tricks somehow don't get along with Azure Functions. \r\n\r\nGiven that changing and testing every place where these methods come up in the old code would be extremely cumbersome, look forward to some meaningful solution or advice from the team. Thank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/429", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/429/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/429/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/429", "id": 641851367, "node_id": "MDU6SXNzdWU2NDE4NTEzNjc=", "number": 429, "title": "NotALeaderError in read session", "user": {"login": "aonamrata", "id": 1792005, "node_id": "MDQ6VXNlcjE3OTIwMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1792005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aonamrata", "html_url": "https://github.com/aonamrata", "followers_url": "https://api.github.com/users/aonamrata/followers", "following_url": "https://api.github.com/users/aonamrata/following{/other_user}", "gists_url": "https://api.github.com/users/aonamrata/gists{/gist_id}", "starred_url": "https://api.github.com/users/aonamrata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aonamrata/subscriptions", "organizations_url": "https://api.github.com/users/aonamrata/orgs", "repos_url": "https://api.github.com/users/aonamrata/repos", "events_url": "https://api.github.com/users/aonamrata/events{/privacy}", "received_events_url": "https://api.github.com/users/aonamrata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-19T09:56:15Z", "updated_at": "2020-06-29T11:25:28Z", "closed_at": "2020-06-29T11:25:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Error:**\r\nneobolt.exceptions.NotALeaderError\r\nneobolt.exceptions.NotALeaderError: Should only attempt to take locks when leader.\r\n\r\n\r\n- Neo4j version: 3.5.18\r\n- Neo4j Mode: Casual cluster \r\n- Driver version: Python 1.7.6 with Python 3.6 + Flask\r\n- Operating system: Windows\r\n\r\n- **Steps to reproduce**\r\n\r\n\r\n- Expected behavior\r\n\r\n- Actual behavior\r\n\r\ncode:\r\n```\r\n with neo4j_driver.session(access_mode='READ') as session:\r\n        count_query= f\"\"\"MATCH (i:Identity)-[:HAS_PROFILE]->(p:Profile)-[k:HAS_ACCESS_TO]->(r)\r\n            .....\r\n        \"\"\"\r\n        result = session.run(\r\n            count_query, identity_id=identity_id, profile_type=profile_type)\r\n        count_result = result.single()\r\n```\r\n\r\nIt is similar to https://github.com/neo4j/neo4j-python-driver/issues/276 so I tried adding \r\n```\r\nfrom neobolt.diagnostics import watch\r\nwatch(\"neobolt\")\r\n```\r\n\r\nand these are the logs \r\n```\r\n$ python dev.py\r\n\u2190[36m2020-06-19 15:11:30,144  Attempting to update routing table from Address(host='dev-neo4j-cluster.xxxxxx', port=7687)\u2190[0m\r\n\u2190[36m2020-06-19 15:11:30,191  [#0000]  C: <RESOLVE> Address(host='dev-neo4j-cluster.dev.theorchard.io', p\r\nort=7687)\u2190[0m\r\n\u2190[36m2020-06-19 15:11:30,519  [#0000]  C: <OPEN> ('10.101.2.172', 7687)\u2190[0m\r\n\u2190[36m2020-06-19 15:11:31,210  [#C161]  C: <SECURE> dev-neo4j-cluster.dev.theorchard.io\u2190[0m\r\n\u2190[36m2020-06-19 15:11:31,652  [#C161]  C: <MAGIC> 0x6060B017\u2190[0m\r\n\u2190[36m2020-06-19 15:11:31,653  [#C161]  C: <HANDSHAKE> 0x00000003 0x00000002 0x00000001 0x00000000\u2190[0m\r\n\u2190[36m2020-06-19 15:11:31,868  [#C161]  S: <HANDSHAKE> 0x00000003\u2190[0m\r\n\u2190[36m2020-06-19 15:11:31,872  [#C161]  C: HELLO {'user_agent': 'neobolt/1.7.17 Python/3.6.0-final-0 (win3\r\n2)', 'scheme': 'basic', 'principal': 'npatel', 'credentials': '*******'}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,087  [#C161]  S: SUCCESS {'server': 'Neo4j/3.5.18', 'connection_id': 'bolt-20955\r\n'}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,089  [#C161]  C: RUN 'CALL dbms.cluster.routing.getRoutingTable($context)' {'con\r\ntext': {}} {}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,090  [#C161]  C: PULL_ALL\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,310  [#C161]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,312  [#C161]  S: RECORD * 1\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,312  [#C161]  S: SUCCESS {'bookmark': 'neo4j:bookmark:v1:tx12328175', 'type': 'r\r\n', 't_last': 0}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,314  [#C161]  C: GOODBYE\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,315  [#C161]  C: <CLOSE>\u2190[0m\r\n\u2190[36m2020-06-19 15:11:32,317  Successfully updated routing table from Address(host='dev-neo4j-cluster.xxxxxx', port=7687) (<neobolt.routing.RoutingTable object at 0x0000002095E415F8>)\u2190[0m\r\n * Serving Flask app \"ows-permissions\" (lazy loading)\r\n * Environment: production\r\n   WARNING: This is a development server. Do not use it in a production deployment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: on\r\n * Restarting with stat\r\n\u2190[36m2020-06-19 15:11:34,012  Attempting to update routing table from Address(host='dev-neo4j-cluster.xxxxxx', port=7687)\u2190[0m\r\n\u2190[36m2020-06-19 15:11:34,013  [#0000]  C: <RESOLVE> Address(host='dev-neo4j-cluster.dev.theorchard.io', p\r\nort=7687)\u2190[0m\r\n\u2190[36m2020-06-19 15:11:34,017  [#0000]  C: <OPEN> ('10.101.2.172', 7687)\u2190[0m\r\n\u2190[36m2020-06-19 15:11:34,231  [#C165]  C: <SECURE> dev-neo4j-cluster.dev.theorchard.io\u2190[0m\r\n\u2190[36m2020-06-19 15:11:34,684  [#C165]  C: <MAGIC> 0x6060B017\u2190[0m\r\n\u2190[36m2020-06-19 15:11:34,685  [#C165]  C: <HANDSHAKE> 0x00000003 0x00000002 0x00000001 0x00000000\u2190[0m\r\n\u2190[36m2020-06-19 15:11:34,898  [#C165]  S: <HANDSHAKE> 0x00000003\u2190[0m\r\n\u2190[36m2020-06-19 15:11:34,900  [#C165]  C: HELLO {'user_agent': 'neobolt/1.7.17 Python/3.6.0-final-0 (win3\r\n2)', 'scheme': 'basic', 'principal': 'npatel', 'credentials': '*******'}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,115  [#C165]  S: SUCCESS {'server': 'Neo4j/3.5.18', 'connection_id': 'bolt-20956\r\n'}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,117  [#C165]  C: RUN 'CALL dbms.cluster.routing.getRoutingTable($context)' {'con\r\ntext': {}} {}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,119  [#C165]  C: PULL_ALL\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,336  [#C165]  S: SUCCESS {'t_first': 1, 'fields': ['ttl', 'servers']}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,337  [#C165]  S: RECORD * 1\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,337  [#C165]  S: SUCCESS {'bookmark': 'neo4j:bookmark:v1:tx12328175', 'type': 'r\r\n', 't_last': 0}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,340  [#C165]  C: GOODBYE\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,342  [#C165]  C: <CLOSE>\u2190[0m\r\n\u2190[36m2020-06-19 15:11:35,345  Successfully updated routing table from Address(host='dev-neo4j-cluster.xxxxxx', port=7687) (<neobolt.routing.RoutingTable object at 0x0000002696F01518>)\u2190[0m\r\n * Debugger is active!\r\n * Debugger PIN: 212-272-298\r\n * Running on http://0.0.0.0:5002/ (Press CTRL+C to quit)\r\n\u2190[36m2020-06-19 15:11:43,560  [#0000]  C: <RESOLVE> Address(host='dev-neo4j-cluster-i-0bffa73bb6e73446a.xxxxxx', port=7687)\u2190[0m\r\n\u2190[36m2020-06-19 15:11:43,561  [#0000]  C: <OPEN> ('10.101.7.21', 7687)\u2190[0m\r\n\u2190[36m2020-06-19 15:11:43,891  [#C169]  C: <SECURE> dev-neo4j-cluster-i-0bffa73bb6e73446a.xxxxxx\u2190[0m\r\n\u2190[36m2020-06-19 15:11:44,324  [#C169]  C: <MAGIC> 0x6060B017\u2190[0m\r\n\u2190[36m2020-06-19 15:11:44,325  [#C169]  C: <HANDSHAKE> 0x00000003 0x00000002 0x00000001 0x00000000\u2190[0m\r\n\u2190[36m2020-06-19 15:11:44,539  [#C169]  S: <HANDSHAKE> 0x00000003\u2190[0m\r\n\u2190[36m2020-06-19 15:11:44,543  [#C169]  C: HELLO {'user_agent': 'neobolt/1.7.17 Python/3.6.0-final-0 (win3\r\n2)', 'scheme': 'basic', 'principal': 'npatel', 'credentials': '*******'}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:44,759  [#C169]  S: SUCCESS {'server': 'Neo4j/3.5.18', 'connection_id': 'bolt-5314'\r\n}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:44,888  [#C169]  C: RUN 'MATCH (i:Identity)-[:HAS_PROFILE]->(x) RETURN count(x) as total\\n        ' {} {}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:44,890  [#C169]  C: PULL_ALL\u2190[0m\r\n\u2190[36m2020-06-19 15:11:45,110  [#C169]  S: FAILURE {'code': 'Neo.ClientError.Cluster.NotALeader', 'message\r\n': 'Should only attempt to take locks when leader.'}\u2190[0m\r\n\u2190[36m2020-06-19 15:11:45,110  [#C169]  C: RESET\u2190[0m\r\n\u2190[36m2020-06-19 15:11:45,111  [#C169]  S: IGNORED\u2190[0m\r\n\u2190[36m2020-06-19 15:11:45,374  [#C169]  S: SUCCESS {}\u2190[0m\r\n127.0.0.1 - - [19/Jun/2020 15:11:45] \"GET /identity/resources/LabelParticipant?role=administrator&profile\r\n_type=InsightsProfile HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"D:\\orchardws\\ows-permissions\\env\\lib\\site-packages\\flask\\app.py\", line 2463, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n.....\r\n  File \"D:\\orchardws\\ows-permissions\\permissions\\models\\resource.py\", line 107, in get_role_resources\r\n    count_query, identity_id=identity_id, profile_type=profile_type)\r\n  File \"D:\\orchardws\\ows-permissions\\env\\lib\\site-packages\\neo4j\\__init__.py\", line 503, in run\r\n    self._connection.fetch()\r\n  File \"D:\\orchardws\\ows-permissions\\env\\lib\\site-packages\\neobolt\\direct.py\", line 422, in fetch\r\n    raise error\r\n  File \"D:\\orchardws\\ows-permissions\\env\\lib\\site-packages\\neobolt\\direct.py\", line 419, in fetch\r\n    return self._fetch()\r\n  File \"D:\\orchardws\\ows-permissions\\env\\lib\\site-packages\\neobolt\\direct.py\", line 461, in _fetch\r\n    response.on_failure(summary_metadata or {})\r\n  File \"D:\\orchardws\\ows-permissions\\env\\lib\\site-packages\\neobolt\\direct.py\", line 755, in on_failure\r\n    raise CypherError.hydrate(**metadata)\r\nneobolt.exceptions.NotALeaderError: Should only attempt to take locks when leader.\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/426", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/426/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/426/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/426", "id": 636267498, "node_id": "MDU6SXNzdWU2MzYyNjc0OTg=", "number": 426, "title": "Test issue #10", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T13:53:06Z", "updated_at": "2020-06-12T08:59:39Z", "closed_at": "2020-06-12T08:59:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here is an example issue with **bold** and _italic_ content in the description.\r\n\r\n```\r\ncode()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/425", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/425/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/425/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/425", "id": 636262484, "node_id": "MDU6SXNzdWU2MzYyNjI0ODQ=", "number": 425, "title": "Test issue #9", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T13:46:13Z", "updated_at": "2020-06-10T13:52:15Z", "closed_at": "2020-06-10T13:52:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Nothing to see here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/424", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/424/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/424/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/424", "id": 636261141, "node_id": "MDU6SXNzdWU2MzYyNjExNDE=", "number": 424, "title": "Test issue #8", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T13:44:44Z", "updated_at": "2020-06-10T13:45:55Z", "closed_at": "2020-06-10T13:45:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Nothing to see here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/423", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/423/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/423/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/423", "id": 636258949, "node_id": "MDU6SXNzdWU2MzYyNTg5NDk=", "number": 423, "title": "Test issue #7", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T13:42:54Z", "updated_at": "2020-06-10T13:44:30Z", "closed_at": "2020-06-10T13:44:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As you were.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/422", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/422/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/422/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/422", "id": 636257769, "node_id": "MDU6SXNzdWU2MzYyNTc3Njk=", "number": 422, "title": "Test issue #6", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T13:41:56Z", "updated_at": "2020-06-10T13:42:41Z", "closed_at": "2020-06-10T13:42:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Nothing to see here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/421", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/421/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/421/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/421", "id": 636230691, "node_id": "MDU6SXNzdWU2MzYyMzA2OTE=", "number": 421, "title": "Test issue #5", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T13:06:16Z", "updated_at": "2020-06-10T13:27:09Z", "closed_at": "2020-06-10T13:27:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Nothing is wrong. Nothing to see here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/420", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/420/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/420/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/420", "id": 636173521, "node_id": "MDU6SXNzdWU2MzYxNzM1MjE=", "number": 420, "title": "Test issue #4", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T11:35:17Z", "updated_at": "2020-06-10T11:40:09Z", "closed_at": "2020-06-10T11:40:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ignore this. There is nothing wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/419", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/419/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/419/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/419", "id": 636170187, "node_id": "MDU6SXNzdWU2MzYxNzAxODc=", "number": 419, "title": "Test issue #3", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T11:29:45Z", "updated_at": "2020-06-10T11:30:35Z", "closed_at": "2020-06-10T11:30:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ignore this. There is nothing wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/418", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/418/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/418/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/418", "id": 636167772, "node_id": "MDU6SXNzdWU2MzYxNjc3NzI=", "number": 418, "title": "Test issue #2", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T11:25:58Z", "updated_at": "2020-06-10T11:27:22Z", "closed_at": "2020-06-10T11:27:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ignore this. There is nothing wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/417", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/417/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/417/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/417", "id": 636162988, "node_id": "MDU6SXNzdWU2MzYxNjI5ODg=", "number": 417, "title": "Test issue #1", "user": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T11:18:11Z", "updated_at": "2020-06-10T11:19:40Z", "closed_at": "2020-06-10T11:19:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ignore this. There is nothing wrong, but I do need to include a few keywords: Linux, Windows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/408", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/408/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/408/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/408", "id": 631259152, "node_id": "MDU6SXNzdWU2MzEyNTkxNTI=", "number": 408, "title": "labels missing Nodes", "user": {"login": "subssn21", "id": 721299, "node_id": "MDQ6VXNlcjcyMTI5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/721299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/subssn21", "html_url": "https://github.com/subssn21", "followers_url": "https://api.github.com/users/subssn21/followers", "following_url": "https://api.github.com/users/subssn21/following{/other_user}", "gists_url": "https://api.github.com/users/subssn21/gists{/gist_id}", "starred_url": "https://api.github.com/users/subssn21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/subssn21/subscriptions", "organizations_url": "https://api.github.com/users/subssn21/orgs", "repos_url": "https://api.github.com/users/subssn21/repos", "events_url": "https://api.github.com/users/subssn21/events{/privacy}", "received_events_url": "https://api.github.com/users/subssn21/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 207837127, "node_id": "MDU6TGFiZWwyMDc4MzcxMjc=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-05T02:11:38Z", "updated_at": "2020-06-08T07:18:41Z", "closed_at": "2020-06-08T07:18:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Neo4j version: Aura\r\n- Driver version: 4.0.0b2\r\n- Operating system: Mac OSX Catalina / AWS Ubuntu 18.04\r\n- \r\nWhen executing A query and calling `Result.graph` not all nodes will have their labels in the `Node.labels` set. This worked fine with the 1.7.6 driver on Neo4j 4.0 using the desktop app, The 1.7.6 driver does not work right with Aura.\r\n- Expected behavior\r\n\r\nWhen calling `Result.graph`, the nodes that are returned should all have their labels in the labels set of each of their nodes. \r\n\r\n- Actual behavior\r\n\r\nFor some reason only some of the Nodes have their labels in the set\r\n\r\nI don't have a simple set of reproduction steps, it happens calling many different queries.\r\n\r\nThis Query:\r\n\r\n```\r\nMATCH (f:File{uid: $uid})\r\n        OPTIONAL MATCH (f)-[rel]->(n) \r\n        RETURN f, rel, n\r\n```\r\n\r\nreturns the label for f in the results, but not for the nodes in n, This used to work in the 1.7.6 driver.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/407", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/407/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/407/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/407", "id": 631175107, "node_id": "MDU6SXNzdWU2MzExNzUxMDc=", "number": 407, "title": "Result.data() Attribute Error", "user": {"login": "subssn21", "id": 721299, "node_id": "MDQ6VXNlcjcyMTI5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/721299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/subssn21", "html_url": "https://github.com/subssn21", "followers_url": "https://api.github.com/users/subssn21/followers", "following_url": "https://api.github.com/users/subssn21/following{/other_user}", "gists_url": "https://api.github.com/users/subssn21/gists{/gist_id}", "starred_url": "https://api.github.com/users/subssn21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/subssn21/subscriptions", "organizations_url": "https://api.github.com/users/subssn21/orgs", "repos_url": "https://api.github.com/users/subssn21/repos", "events_url": "https://api.github.com/users/subssn21/events{/privacy}", "received_events_url": "https://api.github.com/users/subssn21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T22:01:30Z", "updated_at": "2020-07-03T16:13:58Z", "closed_at": "2020-06-05T13:42:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Neo4j version: Aura\r\nDriver version: 4.0.0b2\r\nOperating system: MacOSx Catalina / AWS Ubuntu 18.04\r\nWhen upgrading code from 1.7.6 driver to 4.0.0b2 driver calls to reults.data() fails with AttributeError, looking at the code there is no longer a Result.data() method. This is not documented in breaking changes. It is not in the documentation anymore, so it's probably just not documented as a breaking change.\r\n.data() calls and returns the results (as if you had done [rec for rec in results] list comprehensions on the result object)\r\nActual behavior\r\nAttributeError", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/406", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/406/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/406/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/406", "id": 631173045, "node_id": "MDU6SXNzdWU2MzExNzMwNDU=", "number": 406, "title": "Transaction.sync removed from code but not documented.", "user": {"login": "subssn21", "id": 721299, "node_id": "MDQ6VXNlcjcyMTI5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/721299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/subssn21", "html_url": "https://github.com/subssn21", "followers_url": "https://api.github.com/users/subssn21/followers", "following_url": "https://api.github.com/users/subssn21/following{/other_user}", "gists_url": "https://api.github.com/users/subssn21/gists{/gist_id}", "starred_url": "https://api.github.com/users/subssn21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/subssn21/subscriptions", "organizations_url": "https://api.github.com/users/subssn21/orgs", "repos_url": "https://api.github.com/users/subssn21/repos", "events_url": "https://api.github.com/users/subssn21/events{/privacy}", "received_events_url": "https://api.github.com/users/subssn21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T21:56:35Z", "updated_at": "2020-06-05T13:22:48Z", "closed_at": "2020-06-05T13:22:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Neo4j version: Aura\r\n- Driver version: 4.0.0b2\r\n- Operating system: MacOSx Catalina / AWS Ubuntu 18.04\r\n- When upgrading code from 1.7.6 driver to 4.0.0b2 driver calls to Transaction.sync fail with AttributeError, looking at the code there is no longer a sync.method. This is not documented in breaking changes and is still referenced in the API Documentation.\r\n- Expected behavior\r\n.sync() calls and runs any pending tx.run() <Perhaps not necessary anymore, if so not propely documented>\r\n- Actual behavior\r\nAttributeError\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/402", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/402/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/402/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/402", "id": 629057388, "node_id": "MDU6SXNzdWU2MjkwNTczODg=", "number": 402, "title": "Neo4j Api not clear in case of how to consume result object, need more examples, and update required to existing examples.", "user": {"login": "gaurav1999", "id": 20752142, "node_id": "MDQ6VXNlcjIwNzUyMTQy", "avatar_url": "https://avatars2.githubusercontent.com/u/20752142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurav1999", "html_url": "https://github.com/gaurav1999", "followers_url": "https://api.github.com/users/gaurav1999/followers", "following_url": "https://api.github.com/users/gaurav1999/following{/other_user}", "gists_url": "https://api.github.com/users/gaurav1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurav1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurav1999/subscriptions", "organizations_url": "https://api.github.com/users/gaurav1999/orgs", "repos_url": "https://api.github.com/users/gaurav1999/repos", "events_url": "https://api.github.com/users/gaurav1999/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurav1999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-02T09:40:00Z", "updated_at": "2020-06-04T07:31:18Z", "closed_at": "2020-06-04T07:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom neo4j import GraphDatabase\r\n\r\nuri = \"bolt://localhost:7687\"\r\ndriver = GraphDatabase.driver(uri, auth=(\"neo4j\", \"password\"))\r\n\r\ndef print_friends_of(tx, name):\r\n    for record in tx.run(\"MATCH (a:Person)-[:KNOWS]->(f) \"\r\n                         \"WHERE a.name = {name} \"\r\n                         \"RETURN f.name\", name=name):\r\n        print(record[\"f.name\"])\r\n\r\nwith driver.session() as session:\r\n    session.read_transaction(print_friends_of, \"Alice\")\r\n\r\ndriver.close()\r\n```\r\nIn the given example at date June -02-2020 on https://neo4j.com/docs/api/python-driver/current/index.html \r\n\r\nThe example is outdated, now driver expects \"$name\" instead of \"{name}\".\r\n\r\nAlso, I would like to ask an example, which explains how to parse a complete Neo4j Record object.\r\nIn case if we returned the node \"f\" then how to access it's label, it's node id and it's properties through python ```print(record[\"f.name\"])``` like in this example.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/396", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/396/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/396/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/396", "id": 625479939, "node_id": "MDU6SXNzdWU2MjU0Nzk5Mzk=", "number": 396, "title": "[Feature Request] Are there any plans to add support to datadog ddtrace", "user": {"login": "aonamrata", "id": 1792005, "node_id": "MDQ6VXNlcjE3OTIwMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1792005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aonamrata", "html_url": "https://github.com/aonamrata", "followers_url": "https://api.github.com/users/aonamrata/followers", "following_url": "https://api.github.com/users/aonamrata/following{/other_user}", "gists_url": "https://api.github.com/users/aonamrata/gists{/gist_id}", "starred_url": "https://api.github.com/users/aonamrata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aonamrata/subscriptions", "organizations_url": "https://api.github.com/users/aonamrata/orgs", "repos_url": "https://api.github.com/users/aonamrata/repos", "events_url": "https://api.github.com/users/aonamrata/events{/privacy}", "received_events_url": "https://api.github.com/users/aonamrata/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 922060906, "node_id": "MDU6TGFiZWw5MjIwNjA5MDY=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/feature%20request", "name": "feature request", "color": "8bcff9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-27T08:14:42Z", "updated_at": "2020-05-28T07:50:02Z", "closed_at": "2020-05-28T07:50:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Neo4j version: Enterprise X.Y.Z\r\n- Driver version: neo4j==1.7.6\r\n- Operating system: centos7 on AWS\r\n\r\nHi,\r\nWe are using neo4j driver with flask and datadog for reporting. Datadog APM gives a nice breakdown of services\r\n![image](https://user-images.githubusercontent.com/1792005/82994631-1a5e3280-a020-11ea-89be-3335a8b153f4.png)\r\n\r\nIt does not have neo4j support http://pypi.datadoghq.com/trace/docs/#supported-libraries . Are there any plans to add that support?\r\n\r\nThanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/391", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/391/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/391/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/391", "id": 620864877, "node_id": "MDU6SXNzdWU2MjA4NjQ4Nzc=", "number": 391, "title": "SSL handshake error", "user": {"login": "joostboon", "id": 9553628, "node_id": "MDQ6VXNlcjk1NTM2Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9553628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joostboon", "html_url": "https://github.com/joostboon", "followers_url": "https://api.github.com/users/joostboon/followers", "following_url": "https://api.github.com/users/joostboon/following{/other_user}", "gists_url": "https://api.github.com/users/joostboon/gists{/gist_id}", "starred_url": "https://api.github.com/users/joostboon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joostboon/subscriptions", "organizations_url": "https://api.github.com/users/joostboon/orgs", "repos_url": "https://api.github.com/users/joostboon/repos", "events_url": "https://api.github.com/users/joostboon/events{/privacy}", "received_events_url": "https://api.github.com/users/joostboon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T10:31:49Z", "updated_at": "2020-05-20T09:01:02Z", "closed_at": "2020-05-20T09:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Neo4j version: Community 4.0.4\r\n- Neo4j Mode: Single instance\r\n- Driver version: Python neo4j v.1.7.6\r\n- Operating system: MacOS Catelina (10.15.4)\r\n\r\n**Steps to reproduce**\r\n- Expected behavior\r\n\r\nFollowing the guidelines trying to set up a connection from a python script to my neo4j instance running on localhost:\r\n\r\n1. Running neo4j - no issues. \r\n\r\n2. Trying to connect with python:\r\n`pip install neo4j`\r\n\r\n```\r\nfrom neo4j import GraphDatabase\r\n\r\ndriver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\n```\r\n- Actual behavior\r\n\r\nTrying this resolves in a ssl handshake error (see output.txt). I've tried multiple versions of openssl that are still compatible with neo4j but all with the same error result. Also tried downgrading to python3.7, didn't work either. \r\n\r\nPlease see output.txt and env.txt for the set up. This was all run inside a miniconda env.\r\n\r\n[env.txt](https://github.com/neo4j/neo4j-python-driver/files/4649772/env.txt)\r\n[output.txt](https://github.com/neo4j/neo4j-python-driver/files/4649773/output.txt)\r\n[neo4j.conf.txt](https://github.com/neo4j/neo4j-python-driver/files/4649802/neo4j.conf.txt) (sorry had to convert to .txt to be able to upload here)\r\n\r\nPlease let me know if you need any additional info! Hope you can help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/389", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/389/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/389/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/389", "id": 615449978, "node_id": "MDU6SXNzdWU2MTU0NDk5Nzg=", "number": 389, "title": "docs link broken for 4.0", "user": {"login": "andreacassioli", "id": 6704112, "node_id": "MDQ6VXNlcjY3MDQxMTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6704112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreacassioli", "html_url": "https://github.com/andreacassioli", "followers_url": "https://api.github.com/users/andreacassioli/followers", "following_url": "https://api.github.com/users/andreacassioli/following{/other_user}", "gists_url": "https://api.github.com/users/andreacassioli/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreacassioli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreacassioli/subscriptions", "organizations_url": "https://api.github.com/users/andreacassioli/orgs", "repos_url": "https://api.github.com/users/andreacassioli/repos", "events_url": "https://api.github.com/users/andreacassioli/events{/privacy}", "received_events_url": "https://api.github.com/users/andreacassioli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-10T18:35:47Z", "updated_at": "2020-05-19T09:45:58Z", "closed_at": "2020-05-19T09:45:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The link in the driver wiki to 4.0 API docs is broken: https://neo4j.com/docs/api/python-driver/4.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/383", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/383/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/383/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/383", "id": 591121647, "node_id": "MDU6SXNzdWU1OTExMjE2NDc=", "number": 383, "title": "Config Attribute \"database\" does not have an effect.", "user": {"login": "Buchhold", "id": 799185, "node_id": "MDQ6VXNlcjc5OTE4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/799185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Buchhold", "html_url": "https://github.com/Buchhold", "followers_url": "https://api.github.com/users/Buchhold/followers", "following_url": "https://api.github.com/users/Buchhold/following{/other_user}", "gists_url": "https://api.github.com/users/Buchhold/gists{/gist_id}", "starred_url": "https://api.github.com/users/Buchhold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Buchhold/subscriptions", "organizations_url": "https://api.github.com/users/Buchhold/orgs", "repos_url": "https://api.github.com/users/Buchhold/repos", "events_url": "https://api.github.com/users/Buchhold/events{/privacy}", "received_events_url": "https://api.github.com/users/Buchhold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-31T13:43:48Z", "updated_at": "2020-04-14T21:39:21Z", "closed_at": "2020-04-14T08:59:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Env\r\npython 3.8\r\nneo4j-driver              4.0.0a2\r\nNeo4j Server version: 4.0.2 (enterprise)  -- using the 30 day trial, atm\r\n\r\nI have create several \"databases\" through the browser and can successfully switch in the Neo Browser via `:use`. Both, `CREATE`  and `MATCH` statements work as I'd expect.\r\nHowever, I cannot switch through the driver.\r\n\r\n## Steps to reproduce\r\n```\r\ndriver = neo4j.GraphDatabase.driver( \"bolt://host:7687\", auth=(usr, pw), encrypted=False)\r\ns1 = driver.session()\r\ns2 = driver.session(database='mytest')\r\n```\r\ns1._config:\r\n```\r\n<SessionConfig consume_chain=<function Config.consume_chain at 0x7fa86682f670> consume=<bound method Config.consume of <class 'neo4j.conf.WorkspaceConfig'>> connection_acquisition_timeout=60.0 max_retry_time=30.0 initial_retry_delay=1.0 retry_delay_multiplier=2.0 retry_delay_jitter_factor=0.2 database=None fetch_size=1000 bookmarks=() default_access_mode='WRITE'>\r\n```\r\n\r\ns2._config:\r\n```\r\n<SessionConfig consume_chain=<function Config.consume_chain at 0x7fa86682f670> consume=<bound method Config.consume of <class 'neo4j.conf.WorkspaceConfig'>> connection_acquisition_timeout=60.0 max_retry_time=30.0 initial_retry_delay=1.0 retry_delay_multiplier=2.0 retry_delay_jitter_factor=0.2 database='mytest' fetch_size=1000 bookmarks=() default_access_mode='WRITE'>\r\n```\r\n\r\n```\r\nr = s2.run(\"match () return count(*)\")\r\nprint(r.data())\r\n```\r\n\r\n## Expected behavior\r\nprint the number of nodes in `mytest`\r\n\r\n## Actual behavior\r\nprints the number of nodes in the default database\r\n\r\n`CREATE` statements made with the session object target the default DB, too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/382", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/382/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/382/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/382", "id": 590450782, "node_id": "MDU6SXNzdWU1OTA0NTA3ODI=", "number": 382, "title": "This driver doesn't work with the launched Docker container (with :latest).", "user": {"login": "alxfed", "id": 4388478, "node_id": "MDQ6VXNlcjQzODg0Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4388478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxfed", "html_url": "https://github.com/alxfed", "followers_url": "https://api.github.com/users/alxfed/followers", "following_url": "https://api.github.com/users/alxfed/following{/other_user}", "gists_url": "https://api.github.com/users/alxfed/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxfed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxfed/subscriptions", "organizations_url": "https://api.github.com/users/alxfed/orgs", "repos_url": "https://api.github.com/users/alxfed/repos", "events_url": "https://api.github.com/users/alxfed/events{/privacy}", "received_events_url": "https://api.github.com/users/alxfed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-30T17:07:49Z", "updated_at": "2020-03-30T18:05:03Z", "closed_at": "2020-03-30T17:27:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure whether it is your driver or the image of the :latest Docker container, but, when I launch the container (with _all_ available ports: 7474, 7473, 7678 mapped to the corresponding host ports) here's what I get in the PyCharm debugger, in the module `direct.py` in definition of _secure:\r\n<pre>\r\nConnected to pydev debugger (build 193.6911.25)\r\nTraceback (most recent call last):\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/site-packages/neobolt/direct.py\", line 854, in _secure\r\n    s = ssl_context.wrap_socket(s, server_hostname=host if HAS_SNI and host else None)\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/ssl.py\", line 500, in wrap_socket\r\n    return self.sslsocket_class._create(\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/ssl.py\", line 1040, in _create\r\n    self.do_handshake()\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/ssl.py\", line 1309, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLError: [SSL: KRB5_S_TKT_NYV] unexpected eof while reading (_ssl.c:1108)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/site-packages/neobolt/direct.py\", line 608, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/site-packages/neo4j/__init__.py\", line 232, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/site-packages/neobolt/direct.py\", line 972, in connect\r\n    raise last_error\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/site-packages/neobolt/direct.py\", line 963, in connect\r\n    s, der_encoded_server_certificate = _secure(s, host, security_plan.ssl_context, **config)\r\n  File \"/.../miniconda3/envs/jupy/lib/python3.8/site-packages/neobolt/direct.py\", line 859, in _secure\r\n    raise error\r\nneobolt.exceptions.SecurityError: Failed to establish secure connection to '[SSL: KRB5_S_TKT_NYV] unexpected eof while reading (_ssl.c:1108)'\r\n\r\nProcess finished with exit code 130 (interrupted by signal 2: SIGINT)\r\n</pre>\r\n\r\nAny idea why your driver (or your image) is failing to establish a (totally __useless__) SSL connection?\r\n\r\nBy the way, when I'm launching the container it shows the interface on http (not on https) too:\r\n\r\n<pre>\r\nChanged password for user 'neo4j'.\r\nDirectories in use:\r\n  home:         /var/lib/neo4j\r\n  config:       /var/lib/neo4j/conf\r\n  logs:         /logs\r\n  plugins:      /plugins\r\n  import:       /var/lib/neo4j/import\r\n  data:         /var/lib/neo4j/data\r\n  certificates: /var/lib/neo4j/certificates\r\n  run:          /var/lib/neo4j/run\r\nStarting Neo4j.\r\n2020-03-30 17:02:11.213+0000 INFO  ======== Neo4j 4.0.2 ========\r\n2020-03-30 17:02:11.219+0000 INFO  Starting...\r\n2020-03-30 17:02:13.671+0000 INFO  Bolt enabled on 0.0.0.0:7687.\r\n2020-03-30 17:02:13.671+0000 INFO  Started.\r\n2020-03-30 17:02:14.516+0000 INFO  Remote interface available at http://0.0.0.0:7474/\r\n</pre>\r\n\r\nAnd to be absolutely precise, the docker command is:\r\n<pre>\r\ndocker run -p 7473:7473 -p 7474:7474 -p 7687:7687 -v /.../neo4j/data:/data -v /.../neo4j/logs:/logs -v /.../neo4j/plugins:/plugins --env NEO4J_AUTH=neo4j/password --name neodb -d neo4j:latest \r\n</pre>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/380", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/380/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/380/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/380", "id": 587355233, "node_id": "MDU6SXNzdWU1ODczNTUyMzM=", "number": 380, "title": "Nginx - Neoj4 4.0 bolt looks like HTTP", "user": {"login": "peterpribeli", "id": 44584934, "node_id": "MDQ6VXNlcjQ0NTg0OTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/44584934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterpribeli", "html_url": "https://github.com/peterpribeli", "followers_url": "https://api.github.com/users/peterpribeli/followers", "following_url": "https://api.github.com/users/peterpribeli/following{/other_user}", "gists_url": "https://api.github.com/users/peterpribeli/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterpribeli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterpribeli/subscriptions", "organizations_url": "https://api.github.com/users/peterpribeli/orgs", "repos_url": "https://api.github.com/users/peterpribeli/repos", "events_url": "https://api.github.com/users/peterpribeli/events{/privacy}", "received_events_url": "https://api.github.com/users/peterpribeli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-25T00:12:43Z", "updated_at": "2020-03-26T07:46:47Z", "closed_at": "2020-03-26T07:46:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've got an nginx server that terminates SSL (let's encrypt certificate) and redirects neo4j.domain.com and bolt.domain.com:7687 to the neo4j DB.  This is the only configuration in which the neo4j browser actually works. \r\nBut the python driver throws an exception\r\n> neo4j.exceptions.ServiceUnavailable: Cannot to connect to Bolt service on IPv4Address(('bolt.domain.com', 7687)) (looks like HTTP)\r\n\r\nThis is because it receives a bad request (400) response which begins with 'HTTP1.1...'\r\nThe bad request from nginx logs:\r\n\r\n> \"``\\xB0\\x17\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\"\r\n\r\nNow if I transfer the SSL termination of the bolt protocol to the neo4j DB and bypass nginx (which I would not like to do) the python driver works but the browser does not.\r\n\r\nA very similar scenario plays out if I try self-signed certificates on the local network.\r\n\r\nI realize that this might be slightly unrelated but there's [very little](https://github.com/neo4j/neo4j-browser/issues/788) available resources on this.\r\nHow can I connect to bolt that is behind an nginx reverse proxy ? \r\n\r\nThank you!\r\n\r\n**Neo4j Version:** 4.0.2 Community  \r\n**Neo4j Mode**: Single instance  \r\n**Driver version**: Python driver 1.7.1  and 4.0.0.a1\r\n**Operating System:** macOS Catalina client, debian server\r\n**Nginx config:**\r\n\r\n>http{ \r\nupstream neo4j {\r\n  server 192.168.0.2:7474;\r\n}\r\nupstream bolt {\r\n  server 192.168.0.2:7687;\r\n}\r\nserver {\r\n    listen       443 ssl;\r\n    server_name  neo4j.domain.com;\r\n    ssl_certificate /etc/nginx/certificates/https/public.crt;\r\n    ssl_certificate_key /etc/nginx/certificates/https/private.key;\r\n    location / {\r\n        proxy_pass http://neo4j;\r\n    }\r\n}\r\nserver {\r\n    listen       7687 ssl;\r\n    server_name  bolt.domain.com;\r\n    ssl_certificate /etc/nginx/certificates/bolt/public.crt;\r\n    ssl_certificate_key /etc/nginx/certificates/bolt/private.key;\r\n    location / {\r\n        proxy_pass http://bolt;\r\n        proxy_http_version 1.1;\r\n        proxy_set_header Upgrade $http_upgrade;\r\n        proxy_set_header Connection \"upgrade\";\r\n    }\r\n}\r\n### Steps to reproduce\r\n1. Start Neo4j with neo4j(7474) and bolt(7687) both unencrypted\r\n2. Start an nginx reverse proxy: neo4.domain.com -> neo4j(7474),  bolt.domain.com:7687 -> neo4j(7687)\r\n3. Try to connect from GraphDatabase.driver() to bolt://bolt.domain.com:7687\r\n### Expected behavior\r\nBoth neo4j and bolt should have SSL and be reverse proxied by nginx and both the web browser and python connections should work.\r\n### Actual behavior\r\nWith nginx the browser works but python does not and without nginx vice versa.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/377", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/377/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/377/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/377", "id": 586291458, "node_id": "MDU6SXNzdWU1ODYyOTE0NTg=", "number": 377, "title": "transaction.commit() failures on larger data volumes", "user": {"login": "jholtom-ciena", "id": 51782383, "node_id": "MDQ6VXNlcjUxNzgyMzgz", "avatar_url": "https://avatars0.githubusercontent.com/u/51782383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jholtom-ciena", "html_url": "https://github.com/jholtom-ciena", "followers_url": "https://api.github.com/users/jholtom-ciena/followers", "following_url": "https://api.github.com/users/jholtom-ciena/following{/other_user}", "gists_url": "https://api.github.com/users/jholtom-ciena/gists{/gist_id}", "starred_url": "https://api.github.com/users/jholtom-ciena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jholtom-ciena/subscriptions", "organizations_url": "https://api.github.com/users/jholtom-ciena/orgs", "repos_url": "https://api.github.com/users/jholtom-ciena/repos", "events_url": "https://api.github.com/users/jholtom-ciena/events{/privacy}", "received_events_url": "https://api.github.com/users/jholtom-ciena/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-23T15:22:06Z", "updated_at": "2020-03-27T07:58:52Z", "closed_at": "2020-03-27T07:58:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Neo4j Version:** 4.0.1 Enterprise & 3.5.14 Enterprise  (Desktop)\r\n**Neo4j Mode**: Single instance  \r\n**Driver version**: Python driver 4.0.dev0\r\n**Operating System:** macOS 10.15.3\r\n\r\n### Steps to reproduce\r\n\r\n1) Start Neo4j (4.0 or 3.5) with a clean empty database\r\n2) Run script\r\n\r\n```python\r\nfrom neo4j import GraphDatabase,basic_auth\r\nimport neo4j\r\n\r\nscale=340\r\n\r\nif '1.7.6' == neo4j.__version__:\r\n    driver = GraphDatabase.driver('bolt://localhost:7687', encrypted=False, auth=basic_auth('neo4j','test'))\r\nelse:\r\n    driver = GraphDatabase.driver('bolt://localhost:7687', auth=basic_auth('neo4j','test'))\r\n\r\nsession= driver.session()\r\n\r\ntx=session.begin_transaction()\r\nmkNode = \"CREATE (e:Node {nodeId:$rand,name:$name})\"\r\nfor num in range (0,scale):\r\n    tx.run(mkNode,{'rand':num,'name':'Node-'+str(num)})\r\n\r\ntx.commit()\r\n\r\nmkMesh = \"\"\"\r\nWITH $props AS props\r\nMATCH (a:Node {nodeId:$thingA}), (b:Node {nodeId:$thingB}) \r\nMERGE (a)-[re:RELATES {relatesId:$thingA-$thingB}]->(b)\r\n    ON CREATE SET re+=props\r\nMERGE (r:Relation {relationId:$thingA-$thingB})\r\n    ON CREATE SET r+=props\r\nMERGE (a)<-[:RELATES]-(r)-[:RELATES]->(b)\r\n\"\"\"\r\n\r\nprops = {\"StringField-000001\":\"1234\",\"StringField-000002\":\"2020-03-20\",\"StringField-000003\":1234,\"EmptyField-000001\":\"\",\"StringField-000004\":42,\"StringField-000005\":\"Abcdefg\",\"StringField-000006\":\"Ghijklmn\",\"StringField-000007\":\"AbcdefghijklmnopqrstuvwxyzAbcdefghijklmnopqrstuvwxyz\",\"StringField-000008\":\"AbcdefghijklmnopqrstuvwxyzAbcdefghijklmnopqrstuvwxyz\",\"StringField-000009\":\"123\",\"StringField-000010\":42,\"StringField-000011\":\"Abcde1\",\"StringField-000012\":\"aBCDE1\",\"StringField-000013\":\"Zyxwv2\",\"StringField-000014\":\"zYXWV2\",\"StringField-000015\":\"ABCDWXYZ\",\"StringField-000016\":\"4\",\"StringField-000017\":\"zyxwvutsrqponmlkjihgfedcba\",\"StringField-000018\":\"2\",\"StringField-000019\":\"1\",\"StringField-000020\":\"3\",\"StringField-000021\":\"2\",\"StringField-000022\":\"1\",\"StringField-000023\":\"4\",\"StringField-000024\":\"abcdefghijklmnopqrstuvwxyz\",\"StringField-000025\":\"5\",\"StringField-000026\":\"2\"}\r\n\r\ni=0\r\ntx=session.begin_transaction()\r\nfor thingA in range (0,scale):\r\n    for thingB in range (0,scale):\r\n        if thingA != thingB:\r\n            tx.run(mkMesh,{'thingA':thingA,'thingB':thingB,'props':props})\r\n            i+=1\r\n            print('{:6d}: Node-{:3d}=Node-{:3d}'.format(i,thingA,thingB))\r\n        if divmod(i,1000)[1] == 0:\r\n            print(\"Commit-point: \"+str(i))\r\n            tx.commit()\r\n            tx=session.begin_transaction()\r\n\r\ntx.commit()\r\n```\r\n\r\n\r\n### Expected behaviour\r\n\r\nScript should run to completion, mirroring behaviour when using the neo4j==1.7.6 driver stack\r\n\r\n### Actual behaviour\r\n\r\nThe commit phase causes an exception: \r\n\r\nWith a v4.0 database:\r\n\r\n          [deletia]\r\n\r\n\t   999: Node-  2=Node-321\r\n\t  1000: Node-  2=Node-322\r\n\tCommit-point: 1000\r\n\tFailed to write data to connection IPv4Address(('localhost', 7687)) (IPv4Address(('127.0.0.1', 7687))); (\"35; 'Resource temporarily unavailable'\")\r\n\tFailed to write data to connection IPv4Address(('localhost', 7687)) (IPv4Address(('127.0.0.1', 7687))); (\"35; 'Resource temporarily unavailable'\")\r\n\tTraceback (most recent call last):\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 557, in _close\r\n\t    self.sync()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 530, in sync\r\n\t    self.session.sync()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 247, in sync\r\n\t    self._connection.send_all()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/io/_bolt4x0.py\", line 268, in send_all\r\n\t    self._send_all()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/io/_bolt4x0.py\", line 253, in _send_all\r\n\t    self.socket.sendall(data)\r\n\tBlockingIOError: [Errno 35] Resource temporarily unavailable\r\n\r\n\tDuring handling of the above exception, another exception occurred:\r\n\r\n\tTraceback (most recent call last):\r\n\t  File \"testloader.py\", line 42, in <module>\r\n\t    tx.commit()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 539, in commit\r\n\t    self._close()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 564, in _close\r\n\t    self.session.commit_transaction()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 329, in commit_transaction\r\n\t    self._connection.send_all()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/io/_bolt4x0.py\", line 268, in send_all\r\n\t    self._send_all()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/io/_bolt4x0.py\", line 253, in _send_all\r\n\t    self.socket.sendall(data)\r\n\tBlockingIOError: [Errno 35] Resource temporarily unavailable\r\n\r\nWith a v3.5 database:\r\n\r\n\t   998: Node-  2=Node-320\r\n\t   999: Node-  2=Node-321\r\n\t  1000: Node-  2=Node-322\r\n\tCommit-point: 1000\r\n\tFailed to write data to connection IPv4Address(('localhost', 7687)) (IPv4Address(('127.0.0.1', 7687))); (\"35; 'Resource temporarily unavailable'\")\r\n\tFailed to write data to connection IPv4Address(('localhost', 7687)) (IPv4Address(('127.0.0.1', 7687))); (\"35; 'Resource temporarily unavailable'\")\r\n\tTraceback (most recent call last):\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 557, in _close\r\n\t    self.sync()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 530, in sync\r\n\t    self.session.sync()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 247, in sync\r\n\t    self._connection.send_all()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/io/_bolt3.py\", line 270, in send_all\r\n\t    self._send_all()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/io/_bolt3.py\", line 255, in _send_all\r\n\t    self.socket.sendall(data)\r\n\tBlockingIOError: [Errno 35] Resource temporarily unavailable\r\n\r\n\tDuring handling of the above exception, another exception occurred:\r\n\r\n\tTraceback (most recent call last):\r\n\t  File \"testloader.py\", line 42, in <module>\r\n\t    tx.commit()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 539, in commit\r\n\t    self._close()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 564, in _close\r\n\t    self.session.commit_transaction()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/work/simple.py\", line 329, in commit_transaction\r\n\t    self._connection.send_all()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/io/_bolt3.py\", line 270, in send_all\r\n\t    self._send_all()\r\n\t  File \"/Users/jholtom/playpen/py3env/lib/python3.7/site-packages/neo4j-4.0.dev0-py3.7.egg/neo4j/io/_bolt3.py\", line 255, in _send_all\r\n\t    self.socket.sendall(data)\r\n\tBlockingIOError: [Errno 35] Resource temporarily unavailable\r\n\r\nDespite enabling DEBUG level logging, no errors are reported from the server\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/373", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/373/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/373/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/373", "id": 585252970, "node_id": "MDU6SXNzdWU1ODUyNTI5NzA=", "number": 373, "title": "BrokenPipeError - max_connection_lifetime using processor time in Python 2", "user": {"login": "cadryden", "id": 1258866, "node_id": "MDQ6VXNlcjEyNTg4NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1258866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cadryden", "html_url": "https://github.com/cadryden", "followers_url": "https://api.github.com/users/cadryden/followers", "following_url": "https://api.github.com/users/cadryden/following{/other_user}", "gists_url": "https://api.github.com/users/cadryden/gists{/gist_id}", "starred_url": "https://api.github.com/users/cadryden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cadryden/subscriptions", "organizations_url": "https://api.github.com/users/cadryden/orgs", "repos_url": "https://api.github.com/users/cadryden/repos", "events_url": "https://api.github.com/users/cadryden/events{/privacy}", "received_events_url": "https://api.github.com/users/cadryden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-20T18:26:49Z", "updated_at": "2020-04-09T09:18:33Z", "closed_at": "2020-04-08T08:12:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Google AppEngine I've been getting repeatable `BrokenPipeError`s after leaving a server instance alone for a while (~1 hour).  When the server instance is first spun up a new neo4j driver instance is created and running a query works as expected, then after being left idle any query raises a `BrokenPipeError`.\r\n\r\n**Driver version**: Python driver 1.7.6\r\n**Operating System:** Google AppEngine Python 2, also MacOS\r\n\r\n### Expected behavior\r\nAfter setting `max_connection_lifetime` very low (5 seconds), connections should not be reused after long periods of time, causing `BrokenPipeError`s.\r\n\r\n### Investigation\r\nBased on the suggestions and explanations in https://github.com/neo4j/neo4j-python-driver/issues/131 and https://github.com/neo4j/neo4j-python-driver/issues/316 I've tried adjusting `max_connection_lifetime`, but the problem persists even setting it down to 5 seconds (Google AppEngine docs say sockets can be reclaimed after 2 minutes, so I'd expect 5 seconds to very safely under that).\r\n\r\nLooking through the code to see how `max_connection_lifetime` is used, I see that it's used by [`neobolt.direct.Connection.timedout()`](https://github.com/neo4j-drivers/neobolt/blob/1.7/neobolt/direct.py#L515), and it's using `perf_counter()` to determine how long the `Connection` object has existed.\r\n\r\n`perf_counter()` is defined twice by `neobolt.compat` for Python 2 though.  First as [`time.time()`](https://github.com/neo4j-drivers/neobolt/blob/1.7/neobolt/compat/__init__.py#L116) then again as [`time.clock()`](https://github.com/neo4j-drivers/neobolt/blob/1.7/neobolt/compat/__init__.py#L134), but `time.clock()` does not necessarily include sleep or idle time, which would be necessary for tracking how long a `Connection` has been alive.\r\n\r\nIn my case, after leaving a `Connection` idle for an hour `Connection.timedout()` thinks it's been a live for only a fraction of a second, but if it had been using `time.time()` instead of `time.clock()` it'd correctly know the `Connection` is too old to be reused.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/372", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/372/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/372/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/372", "id": 585089547, "node_id": "MDU6SXNzdWU1ODUwODk1NDc=", "number": 372, "title": "Cannot use python bolt with neo4 docker image", "user": {"login": "contra-bit", "id": 24410058, "node_id": "MDQ6VXNlcjI0NDEwMDU4", "avatar_url": "https://avatars2.githubusercontent.com/u/24410058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/contra-bit", "html_url": "https://github.com/contra-bit", "followers_url": "https://api.github.com/users/contra-bit/followers", "following_url": "https://api.github.com/users/contra-bit/following{/other_user}", "gists_url": "https://api.github.com/users/contra-bit/gists{/gist_id}", "starred_url": "https://api.github.com/users/contra-bit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/contra-bit/subscriptions", "organizations_url": "https://api.github.com/users/contra-bit/orgs", "repos_url": "https://api.github.com/users/contra-bit/repos", "events_url": "https://api.github.com/users/contra-bit/events{/privacy}", "received_events_url": "https://api.github.com/users/contra-bit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-20T14:01:16Z", "updated_at": "2020-03-23T09:09:14Z", "closed_at": "2020-03-23T09:09:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Cannot connect to Database\r\n\r\n- Neo4j version: Community 4.0.1\r\n- Neo4j Mode: Single instance using Docker\r\n- Driver version: neobolt-1.7.16\r\n- Operating system: Arch Linux: 5.5.9-arch1-2\r\n- **Steps to reproduce**\r\n\r\nSetup for python (see https://neo4j.com/developer/python/)\r\n``` bash\r\npipenv install neo4j\r\npipenv shell\r\n```\r\n Minimal Setup for testing Neo4j, the password has been replaced with password\r\n``` python\r\nfrom neo4j import GraphDatabase\r\n\r\ndriver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\n\r\ndef add_friend(tx, name, friend_name):\r\n    tx.run(\"MERGE (a:Person {name: $name}) \"\r\n           \"MERGE (a)-[:KNOWS]->(friend:Person {name: $friend_name})\",\r\n           name=name, friend_name=friend_name)\r\n\r\ndef print_friends(tx, name):\r\n    for record in tx.run(\"MATCH (a:Person)-[:KNOWS]->(friend) WHERE a.name = $name \"\r\n                         \"RETURN friend.name ORDER BY friend.name\", name=name):\r\n        print(record[\"friend.name\"])\r\n\r\nwith driver.session() as session:\r\n    session.write_transaction(add_friend, \"Arthur\", \"Guinevere\")\r\n    session.write_transaction(add_friend, \"Arthur\", \"Lancelot\")\r\n    session.write_transaction(add_friend, \"Arthur\", \"Merlin\")\r\n    session.read_transaction(print_friends, \"Arthur\")\r\n\r\ndriver.close()\r\n```\r\nDocker was setup in the way the dockhub tutorial says:\r\n``` bash\r\ndocker run \\                                                                                                         \u2718 130 \r\n    --publish=7474:7474 --publish=7687:7687 \\\r\n    --volume=$HOME/Code/Learn/neo4j/data:/data \\\r\n    neo4j\r\n```\r\n\r\nThe default password was changed.\r\nNeo4J Browser outputs \r\n\r\nYou are connected as user neo4j\r\nto neo4j://0.0.0.0:7687\r\n\r\nAfter I have connected to the database i import the movie data with \r\n```\r\n:play movies\r\n```\r\n\r\nExample Movie Queries are now possible\r\n### Expected behavior\r\nNeo4j writes the Transaction when example.py is executed, thus the second query is run successfully\r\n\r\n- Actual behavior\r\nTo test the python driver we import example.py in the interpreter and get this Stacktrace\r\n``` python\r\n>>> import example\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/s0/Code/Learn/neo4jdriver/example.py\", line 3, in <module>\r\n    driver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neo4j/__init__.py\", line 120, in driver\r\n    return Driver(uri, **config)\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neo4j/__init__.py\", line 161, in __new__\r\n    return subclass(uri, **config)\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neo4j/__init__.py\", line 235, in __new__\r\n    pool.release(pool.acquire())\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neobolt/direct.py\", line 715, in acquire\r\n    return self.acquire_direct(self.address)\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neobolt/direct.py\", line 608, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neo4j/__init__.py\", line 232, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neobolt/direct.py\", line 972, in connect\r\n    raise last_error\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neobolt/direct.py\", line 963, in connect\r\n    s, der_encoded_server_certificate = _secure(s, host, security_plan.ssl_context, **config)\r\n  File \"/home/s0/.local/lib/python3.8/site-packages/neobolt/direct.py\", line 854, in _secure\r\n    s = ssl_context.wrap_socket(s, server_hostname=host if HAS_SNI and host else None)\r\n  File \"/usr/lib/python3.8/ssl.py\", line 500, in wrap_socket\r\n    return self.sslsocket_class._create(\r\n  File \"/usr/lib/python3.8/ssl.py\", line 1040, in _create\r\n    self.do_handshake()\r\n  File \"/usr/lib/python3.8/ssl.py\", line 1309, in do_handshake\r\n    self._sslobj.do_handshake()\r\nOSError: [Errno 0] Error\r\n>>> \r\n```\r\n\r\nI guess this error has do with a deprecation of tls. Could it be possible, that neobolt uses a outdated driver?\r\n\r\nWhat can I do to fix this\r\nThank you a lot and stay healthy\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/369", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/369/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/369/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/369", "id": 582304093, "node_id": "MDU6SXNzdWU1ODIzMDQwOTM=", "number": 369, "title": "cannot authenticate ", "user": {"login": "dcsan", "id": 514002, "node_id": "MDQ6VXNlcjUxNDAwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/514002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcsan", "html_url": "https://github.com/dcsan", "followers_url": "https://api.github.com/users/dcsan/followers", "following_url": "https://api.github.com/users/dcsan/following{/other_user}", "gists_url": "https://api.github.com/users/dcsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcsan/subscriptions", "organizations_url": "https://api.github.com/users/dcsan/orgs", "repos_url": "https://api.github.com/users/dcsan/repos", "events_url": "https://api.github.com/users/dcsan/events{/privacy}", "received_events_url": "https://api.github.com/users/dcsan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-16T13:40:40Z", "updated_at": "2020-03-16T14:05:34Z", "closed_at": "2020-03-16T14:05:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running neo4j via the docker image\r\nI can connect to the DB using the set password from browser and from a docker bash shell.\r\n\r\nBut the python driver fails to connect with:\r\n\r\n> neobolt.exceptions.AuthError: The client is unauthorized due to authentication failure.\r\n\r\n```\r\nneo4j==1.7.6\r\nneobolt==1.7.16\r\nneotime==1.7.4\r\npytz==2019.3\r\nsix==1.14.0\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/368", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/368/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/368/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/368", "id": 582074715, "node_id": "MDU6SXNzdWU1ODIwNzQ3MTU=", "number": 368, "title": "Neo4j Python Bolt driver 1.7 cannot connect to local graph version 4.0.0 and 4.0.1", "user": {"login": "vvvasilev", "id": 31281528, "node_id": "MDQ6VXNlcjMxMjgxNTI4", "avatar_url": "https://avatars2.githubusercontent.com/u/31281528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvvasilev", "html_url": "https://github.com/vvvasilev", "followers_url": "https://api.github.com/users/vvvasilev/followers", "following_url": "https://api.github.com/users/vvvasilev/following{/other_user}", "gists_url": "https://api.github.com/users/vvvasilev/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvvasilev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvvasilev/subscriptions", "organizations_url": "https://api.github.com/users/vvvasilev/orgs", "repos_url": "https://api.github.com/users/vvvasilev/repos", "events_url": "https://api.github.com/users/vvvasilev/events{/privacy}", "received_events_url": "https://api.github.com/users/vvvasilev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-10T15:01:45Z", "updated_at": "2020-03-17T08:20:32Z", "closed_at": "2020-03-17T08:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Neo4j version: 4.0.0 and 4.0.1\r\n- Operating system: Windows 10\r\n- API/Driver: python driver 1.7\r\n\r\n- **Steps to reproduce**\r\n1. Create new graph 4.0.0 or 4.0.1\r\n2. Run the webapp\r\n\r\n- Expected behavior\r\nthe application starts\r\n\r\n- Actual behavior\r\nFile \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\virtualobeya\\models.py\", line 15, in <module>\r\n    driver=GraphDatabase.driver(neo4j_local_uri,auth=(dbuser,dbpass))\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neo4j\\__init__.py\", line 120, in driver\r\n    return Driver(uri, **config)\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neo4j\\__init__.py\", line 161, in __new__\r\n    return subclass(uri, **config)\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neo4j\\__init__.py\", line 235, in __new__\r\n    pool.release(pool.acquire())\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neobolt\\direct.py\", line 719, in acquire\r\n    return self.acquire_direct(self.address)\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neobolt\\direct.py\", line 612, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neo4j\\__init__.py\", line 232, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neobolt\\direct.py\", line 976, in connect\r\n    raise last_error\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neobolt\\direct.py\", line 967, in connect\r\n    s, der_encoded_server_certificate = _secure(s, host, security_plan.ssl_context, **config)\r\n  File \"C:\\Users\\nb67ab\\Envs\\virtualobeya4dec\\lib\\site-packages\\neobolt\\direct.py\", line 858, in _secure\r\n    s = ssl_context.wrap_socket(s, server_hostname=host if HAS_SNI and host else None)\r\n  File \"c:\\program files (x86)\\python38-32\\Lib\\ssl.py\", line 500, in wrap_socket\r\n    return self.sslsocket_class._create(\r\n  File \"c:\\program files (x86)\\python38-32\\Lib\\ssl.py\", line 1040, in _create\r\n    self.do_handshake()\r\n  File \"c:\\program files (x86)\\python38-32\\Lib\\ssl.py\", line 1309, in do_handshake\r\n    self._sslobj.do_handshake()\r\nFileNotFoundError: [Errno 2] No such file or directory\r\n\r\n\r\nVersion 3.5.15 works fine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/365", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/365/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/365/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/365", "id": 577242825, "node_id": "MDU6SXNzdWU1NzcyNDI4MjU=", "number": 365, "title": "IOError when using the Python neo4j driver to connect to Reactome data", "user": {"login": "dvklopfenstein", "id": 7278188, "node_id": "MDQ6VXNlcjcyNzgxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7278188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvklopfenstein", "html_url": "https://github.com/dvklopfenstein", "followers_url": "https://api.github.com/users/dvklopfenstein/followers", "following_url": "https://api.github.com/users/dvklopfenstein/following{/other_user}", "gists_url": "https://api.github.com/users/dvklopfenstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvklopfenstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvklopfenstein/subscriptions", "organizations_url": "https://api.github.com/users/dvklopfenstein/orgs", "repos_url": "https://api.github.com/users/dvklopfenstein/repos", "events_url": "https://api.github.com/users/dvklopfenstein/events{/privacy}", "received_events_url": "https://api.github.com/users/dvklopfenstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-07T00:33:12Z", "updated_at": "2020-03-17T08:21:41Z", "closed_at": "2020-03-17T08:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Guidelines\r\n\r\n- **Neo4j version**: neo4j-community-4.0.1\r\n- **Neo4j Mode**: Single instance\r\n- **Driver version**: Python3.6 lanaguage driver 1.7.6\r\n- **Operating system**: Ubuntu 16.04.4 LTS\r\n- **Java**: jdk-11.0.6\r\n- **Reactome graph database version**: 71\r\n\r\n## **Steps to reproduce**\r\nThe instructions to load the Reactome database into Neo4j are detailed in [neo4j #12408](https://github.com/neo4j/neo4j/issues/12408).\r\nThe crucial step to get Reactome up and running in Neo4j was given by @gsviteri in\r\n his [comment](https://github.com/neo4j/neo4j/issues/12408#issuecomment-594464431).\r\n\r\nNow I am trying to access the Reactome database from a Python script using the recommended Neo4j driver.\r\n```\r\nfrom neo4j import GraphDatabase\r\n\r\n# Try various loads:\r\ndrv = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\ndrv = GraphDatabase.driver(\"neo4j://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\ndrv = GraphDatabase.driver(\"bolt://localhost:7687/graph.db\", auth=(\"neo4j\", \"password\"))\r\ndrv = GraphDatabase.driver(\"neo4j://localhost:7687/graph.db\", auth=(\"neo4j\", \"password\"))\r\n```\r\n\r\nEach of these attempts result in the same **OSError**, shown in the *Actual behavior* section.\r\n\r\n## **Expected behavior**\r\nI expect to get a GraphDatabase object back and see no errors.\r\n\r\n## *Actual behavior*\r\n\r\nHere the error that appears on the screen for each attempt:    \r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/c/Users/note2/Data/git/ReactomePy/src/reactomepy/code/utils.py\", line 32, in get_gdbdr\r\n    return GraphDatabase.driver(dct['url'], auth=(dct['neo4j_username'], dct['neo4j_password']))\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neo4j/__init__.py\", line 120, in driver\r\n    return Driver(uri, **config)\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neo4j/__init__.py\", line 161, in __new__\r\n    return subclass(uri, **config)\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neo4j/__init__.py\", line 235, in __new__\r\n    pool.release(pool.acquire())\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neobolt/direct.py\", line 715, in acquire\r\n    return self.acquire_direct(self.address)\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neobolt/direct.py\", line 608, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neo4j/__init__.py\", line 232, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neobolt/direct.py\", line 972, in connect\r\n    raise last_error\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neobolt/direct.py\", line 963, in connect\r\n    s, der_encoded_server_certificate = _secure(s, host, security_plan.ssl_context, **config)\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/site-packages/neobolt/direct.py\", line 854, in _secure\r\n    s = ssl_context.wrap_socket(s, server_hostname=host if HAS_SNI and host else None)\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/ssl.py\", line 407, in wrap_socket\r\n    _context=self, _session=session)\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/ssl.py\", line 817, in __init__\r\n    self.do_handshake()\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/ssl.py\", line 1077, in do_handshake\r\n    self._sslobj.do_handshake()\r\n  File \"/home/neo4j/anaconda3/lib/python3.6/ssl.py\", line 689, in do_handshake\r\n    self._sslobj.do_handshake()\r\nOSError: [Errno 0] Error\r\n```\r\n\r\nI don't see anything interesting in the [neo4j.log](https://github.com/neo4j/neo4j-python-driver/files/4301147/neo4j.log) or the [debug.log](https://github.com/neo4j/neo4j-python-driver/files/4301149/debug.log), but have attached them anyway.\r\n\r\n### This used to work for me for these versions:\r\n\r\n- **Neo4j version**: neo4j-community-3.4.7\r\n- **Java**: jdk1.8.0_192\r\n- **Reactome graph database version**: 68\r\n\r\n#### Is this important?\r\nAs shown in the next couple figures, when things worked, the connection was:    \r\n```neo4j@bolt://localhost:7687```\r\nNow, the connection is:\r\n```neo4j@neo4j://localhost:7687/graph.db```\r\n\r\n#### Successful past:\r\nThe browser looked like this in the past:\r\n![python_neo4j_gdbdr](https://user-images.githubusercontent.com/7278188/76132438-0981c000-5fe1-11ea-9099-056fcdcdb86d.png)\r\n\r\n#### Unsuccessful present:\r\nNow it looks like this:\r\n![neo4j_4o0o1_connection](https://user-images.githubusercontent.com/7278188/76132274-12be5d00-5fe0-11ea-9469-5bd03f11e69f.png)\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/361", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/361/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/361/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/361", "id": 569027207, "node_id": "MDU6SXNzdWU1NjkwMjcyMDc=", "number": 361, "title": "asyncio support update", "user": {"login": "dconathan", "id": 15098095, "node_id": "MDQ6VXNlcjE1MDk4MDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/15098095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dconathan", "html_url": "https://github.com/dconathan", "followers_url": "https://api.github.com/users/dconathan/followers", "following_url": "https://api.github.com/users/dconathan/following{/other_user}", "gists_url": "https://api.github.com/users/dconathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dconathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dconathan/subscriptions", "organizations_url": "https://api.github.com/users/dconathan/orgs", "repos_url": "https://api.github.com/users/dconathan/repos", "events_url": "https://api.github.com/users/dconathan/events{/privacy}", "received_events_url": "https://api.github.com/users/dconathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-21T15:36:36Z", "updated_at": "2020-02-21T16:06:30Z", "closed_at": "2020-02-21T16:06:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we get an update on the plan/roadmap for asyncio support?  I see a bunch of asyncio code has been removed in a [recent commit](https://github.com/neo4j/neo4j-python-driver/commit/c15eef67d36d7bd4ad3bce60794c6e93afd98aab).\r\n\r\nHas it been removed from the roadmap?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/356", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/356/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/356/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/356", "id": 567613759, "node_id": "MDU6SXNzdWU1Njc2MTM3NTk=", "number": 356, "title": "[Feature Request] set and change database in python code", "user": {"login": "DachuanZhao", "id": 23434805, "node_id": "MDQ6VXNlcjIzNDM0ODA1", "avatar_url": "https://avatars0.githubusercontent.com/u/23434805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DachuanZhao", "html_url": "https://github.com/DachuanZhao", "followers_url": "https://api.github.com/users/DachuanZhao/followers", "following_url": "https://api.github.com/users/DachuanZhao/following{/other_user}", "gists_url": "https://api.github.com/users/DachuanZhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/DachuanZhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DachuanZhao/subscriptions", "organizations_url": "https://api.github.com/users/DachuanZhao/orgs", "repos_url": "https://api.github.com/users/DachuanZhao/repos", "events_url": "https://api.github.com/users/DachuanZhao/events{/privacy}", "received_events_url": "https://api.github.com/users/DachuanZhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T14:36:16Z", "updated_at": "2020-03-16T08:44:34Z", "closed_at": "2020-03-16T08:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Neo4j version: Community4.0.0\r\n- Neo4j Mode: Single instance\r\n- Driver version: python 1.7.6\r\n- Operating system: Ubuntu 18.04\r\n\r\nHow to set and change database in driver object ?\r\n```\r\nfrom neo4j import GraphDatabase\r\n\r\nuri = \"bolt://localhost:7687\"\r\ndriver = GraphDatabase.driver(uri, auth=(\"neo4j\", \"password\"), database=\"db_name\")\r\n```\r\nIs there a ```database``` parameter in ```GraphDatabase.driver``` ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/354", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/354/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/354/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/354", "id": 563729516, "node_id": "MDU6SXNzdWU1NjM3Mjk1MTY=", "number": 354, "title": "neobolt.exceptions.SecurityError on OSX", "user": {"login": "GodsDusk", "id": 13726533, "node_id": "MDQ6VXNlcjEzNzI2NTMz", "avatar_url": "https://avatars3.githubusercontent.com/u/13726533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GodsDusk", "html_url": "https://github.com/GodsDusk", "followers_url": "https://api.github.com/users/GodsDusk/followers", "following_url": "https://api.github.com/users/GodsDusk/following{/other_user}", "gists_url": "https://api.github.com/users/GodsDusk/gists{/gist_id}", "starred_url": "https://api.github.com/users/GodsDusk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GodsDusk/subscriptions", "organizations_url": "https://api.github.com/users/GodsDusk/orgs", "repos_url": "https://api.github.com/users/GodsDusk/repos", "events_url": "https://api.github.com/users/GodsDusk/events{/privacy}", "received_events_url": "https://api.github.com/users/GodsDusk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-12T03:39:22Z", "updated_at": "2020-03-28T06:42:16Z", "closed_at": "2020-03-28T06:42:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Neo4j version: 3.5.3 Enterprise\r\n- Neo4j Mode: Single instance\r\n- python version: 3.5.4 \r\n- Driver version: python driver 1.7.6\r\n- Operating system: macOS Mojave 10.14.6 (18G1012)\r\n\r\n```python\r\nfrom neo4j import GraphDatabase, basic_auth\r\ndriver = GraphDatabase.driver(uri=\"bolt://127.0.0.1:7687\", auth=basic_auth(\"neo4j\", \"mypassword\"))\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neobolt/direct.py\", line 854, in _secure\r\n    s = ssl_context.wrap_socket(s, server_hostname=host if HAS_SNI and host else None)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py\", line 385, in wrap_socket\r\n    _context=self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py\", line 760, in __init__\r\n    self.do_handshake()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py\", line 996, in do_handshake\r\n    self._sslobj.do_handshake()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/ssl.py\", line 641, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLError: [SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:719)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/run.py\", line 11, in <module>\r\n    driver = GraphDatabase.driver(uri=\"bolt://127.0.0.1:7687\", auth=basic_auth(\"neo4j\", \"Docare@2018\"))\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neo4j/__init__.py\", line 120, in driver\r\n    return Driver(uri, **config)\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neo4j/__init__.py\", line 161, in __new__\r\n    return subclass(uri, **config)\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neo4j/__init__.py\", line 235, in __new__\r\n    pool.release(pool.acquire())\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neobolt/direct.py\", line 715, in acquire\r\n    return self.acquire_direct(self.address)\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neobolt/direct.py\", line 608, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neo4j/__init__.py\", line 232, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neobolt/direct.py\", line 972, in connect\r\n    raise last_error\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neobolt/direct.py\", line 963, in connect\r\n    s, der_encoded_server_certificate = _secure(s, host, security_plan.ssl_context, **config)\r\n  File \"/Volumes/Transcend/work/codes_2020/knowledge_graph_ws/pyenv/lib/python3.5/site-packages/neobolt/direct.py\", line 859, in _secure\r\n    raise error\r\nneobolt.exceptions.SecurityError: Failed to establish secure connection to '[SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:719)'\r\n```\r\n\r\nIf I run this code and neo4j service on CentOS , It works fine.\r\nhowever, code on macOS and service on CentOS, the same error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/335", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/335/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/335/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/335", "id": 551337047, "node_id": "MDU6SXNzdWU1NTEzMzcwNDc=", "number": 335, "title": "How to connect to neo4j 4.0 using this driver?", "user": {"login": "naughtyGitCat", "id": 20264659, "node_id": "MDQ6VXNlcjIwMjY0NjU5", "avatar_url": "https://avatars2.githubusercontent.com/u/20264659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naughtyGitCat", "html_url": "https://github.com/naughtyGitCat", "followers_url": "https://api.github.com/users/naughtyGitCat/followers", "following_url": "https://api.github.com/users/naughtyGitCat/following{/other_user}", "gists_url": "https://api.github.com/users/naughtyGitCat/gists{/gist_id}", "starred_url": "https://api.github.com/users/naughtyGitCat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naughtyGitCat/subscriptions", "organizations_url": "https://api.github.com/users/naughtyGitCat/orgs", "repos_url": "https://api.github.com/users/naughtyGitCat/repos", "events_url": "https://api.github.com/users/naughtyGitCat/events{/privacy}", "received_events_url": "https://api.github.com/users/naughtyGitCat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-01-17T10:37:02Z", "updated_at": "2020-02-27T05:25:05Z", "closed_at": "2020-01-17T16:52:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does driver 1.7.6 support neo4j4.0?\r\n\r\n```bash\r\n  File \"/home/dba/db_neo4j/adapters/neo4j.py\", line 24, in initialize_neo4j_pool\r\n    password=Neo4jConfig.password))\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neo4j/__init__.py\", line 120, in driver\r\n    return Driver(uri, **config)\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neo4j/__init__.py\", line 161, in __new__\r\n    return subclass(uri, **config)\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neo4j/__init__.py\", line 235, in __new__\r\n    pool.release(pool.acquire())\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neobolt/direct.py\", line 715, in acquire\r\n    return self.acquire_direct(self.address)\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neobolt/direct.py\", line 608, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neo4j/__init__.py\", line 232, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neobolt/direct.py\", line 972, in connect\r\n    raise last_error\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neobolt/direct.py\", line 963, in connect\r\n    s, der_encoded_server_certificate = _secure(s, host, security_plan.ssl_context, **config)\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/neobolt/direct.py\", line 854, in _secure\r\n    s = ssl_context.wrap_socket(s, server_hostname=host if HAS_SNI and host else None)\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/ssl.py\", line 412, in wrap_socket\r\n    session=session\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/ssl.py\", line 850, in _create\r\n    self.do_handshake()\r\n  File \"/home/dba/db_neo4j/python3/lib/python3.7/ssl.py\", line 1108, in do_handshake\r\n    self._sslobj.do_handshake()\r\nOSError: [Errno 0] Error\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/331", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/331/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/331/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/331", "id": 550022495, "node_id": "MDU6SXNzdWU1NTAwMjI0OTU=", "number": 331, "title": "neobolt.exceptions.ServiceUnavailable: Failed to establish connection to ('::1', 8687, 0, 0) (reason [Errno 113] No route to host)", "user": {"login": "DachuanZhao", "id": 23434805, "node_id": "MDQ6VXNlcjIzNDM0ODA1", "avatar_url": "https://avatars0.githubusercontent.com/u/23434805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DachuanZhao", "html_url": "https://github.com/DachuanZhao", "followers_url": "https://api.github.com/users/DachuanZhao/followers", "following_url": "https://api.github.com/users/DachuanZhao/following{/other_user}", "gists_url": "https://api.github.com/users/DachuanZhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/DachuanZhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DachuanZhao/subscriptions", "organizations_url": "https://api.github.com/users/DachuanZhao/orgs", "repos_url": "https://api.github.com/users/DachuanZhao/repos", "events_url": "https://api.github.com/users/DachuanZhao/events{/privacy}", "received_events_url": "https://api.github.com/users/DachuanZhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-15T07:53:29Z", "updated_at": "2020-04-15T04:08:04Z", "closed_at": "2020-01-15T11:27:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't connect to neo4j when I use neo4j4.0.0 . Everything is OK when I use neo4j3.5.14 .\r\nI'm sure that I have changed bolt port from 7687 to 8687 . When I telnet localhost 8687 , it' can connect\r\n \r\n- Neo4j version: Community4.0.0\r\n- Neo4j Mode: Single instance\r\n- Driver version: python driver 1.7.6 \r\n- Operating system: CentOS7.6\r\n- **Steps to reproduce**\r\n```\r\nNEO4J_HOST = \"localhost\"\r\nNEO4J_PORT = 8687\r\nNEO4J_USERNAME = \"neo4j\"\r\nNEO4J_PASSWORD = \"neo4j\"\r\n\r\nNEO4J_URI = \"bolt://{NEO4J_HOST}:{NEO4J_PORT}\".format(NEO4J_HOST=NEO4J_HOST,NEO4J_PORT=NEO4J_PORT)\r\n\r\nNEO4J_DRIVER = neo4j.GraphDatabase.driver(\r\n    uri=NEO4J_URI,\r\n    auth=(NEO4J_USERNAME, NEO4J_PASSWORD),\r\n    max_connection_lifetime=30 * 60,\r\n    max_connection_pool_size=150, \r\n    connection_acquisition_timeout=2 * 60,\r\n    connection_timeout=3,\r\n    max_retry_time=1,\r\n    )\r\n```\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neobolt/direct.py\", line 831, in _connect\r\n    s.connect(resolved_address)\r\nOSError: [Errno 113] No route to host\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"neo4j01_import_entity.py\", line 34, in <module>\r\n    max_retry_time=1,\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neo4j/__init__.py\", line 120, in driver\r\n    return Driver(uri, **config)\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neo4j/__init__.py\", line 161, in __new__\r\n    return subclass(uri, **config)\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neo4j/__init__.py\", line 235, in __new__\r\n    pool.release(pool.acquire())\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neobolt/direct.py\", line 715, in acquire\r\n    return self.acquire_direct(self.address)\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neobolt/direct.py\", line 608, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neo4j/__init__.py\", line 232, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neobolt/direct.py\", line 972, in connect\r\n    raise last_error\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neobolt/direct.py\", line 962, in connect\r\n    s = _connect(resolved_address, **config)\r\n  File \"/mnt/zhaodachuan/anaconda3/lib/python3.7/site-packages/neobolt/direct.py\", line 843, in _connect\r\n    raise ServiceUnavailable(\"Failed to establish connection to {!r} (reason {})\".format(resolved_address, error))\r\nneobolt.exceptions.ServiceUnavailable: Failed to establish connection to ('::1', 8687, 0, 0) (reason [Errno 113] No route to host)\r\n```\r\n\r\n- Expected behavior\r\n\r\n- Actual behavior\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/321", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/321/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/321/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/321", "id": 544435107, "node_id": "MDU6SXNzdWU1NDQ0MzUxMDc=", "number": 321, "title": "`session = driver.session()` pylint e1111", "user": {"login": "dcsan", "id": 514002, "node_id": "MDQ6VXNlcjUxNDAwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/514002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcsan", "html_url": "https://github.com/dcsan", "followers_url": "https://api.github.com/users/dcsan/followers", "following_url": "https://api.github.com/users/dcsan/following{/other_user}", "gists_url": "https://api.github.com/users/dcsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcsan/subscriptions", "organizations_url": "https://api.github.com/users/dcsan/orgs", "repos_url": "https://api.github.com/users/dcsan/repos", "events_url": "https://api.github.com/users/dcsan/events{/privacy}", "received_events_url": "https://api.github.com/users/dcsan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-02T03:30:58Z", "updated_at": "2020-01-02T08:34:54Z", "closed_at": "2020-01-02T08:33:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This works as documented:\r\n\r\n      with driver.session() as session:\r\n\r\nbut my linter throws an error on this:\r\n\r\n      session = driver.session()\r\n\r\n      > Assigning result of a function call, where the function has no returnpylint(assignment-from-no-return)\r\n\r\n[![enter image description here][1]][1]\r\n\r\nI thought that [`with`](https://www.geeksforgeeks.org/with-statement-in-python/) was just a syntax sugar to handle closing handles etc.\r\n\r\nNote that the code itself will run but the linter errors are really distracting.\r\nIs there a way to fix the original codes such that the linter doesn't choke?\r\n\r\nI'm trying to get a session object to use for multiple transactions (or the lifetime of my app)\r\nhttps://neo4j.com/docs/api/python-driver/current/driver.html#neo4j.Driver.session\r\n\r\n  [1]: https://i.stack.imgur.com/lwu6z.png\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/317", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/317/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/317/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/317", "id": 533844229, "node_id": "MDU6SXNzdWU1MzM4NDQyMjk=", "number": 317, "title": "Underlying socket connection gone (_ssl.c:1866)", "user": {"login": "MrRace", "id": 10300313, "node_id": "MDQ6VXNlcjEwMzAwMzEz", "avatar_url": "https://avatars0.githubusercontent.com/u/10300313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrRace", "html_url": "https://github.com/MrRace", "followers_url": "https://api.github.com/users/MrRace/followers", "following_url": "https://api.github.com/users/MrRace/following{/other_user}", "gists_url": "https://api.github.com/users/MrRace/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrRace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrRace/subscriptions", "organizations_url": "https://api.github.com/users/MrRace/orgs", "repos_url": "https://api.github.com/users/MrRace/repos", "events_url": "https://api.github.com/users/MrRace/events{/privacy}", "received_events_url": "https://api.github.com/users/MrRace/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-06T09:27:22Z", "updated_at": "2019-12-10T18:13:32Z", "closed_at": "2019-12-10T18:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Environment**\uff1a\r\n**Neo4j Version:** 3.5.12 Community  \r\n**Driver version**: Python driver 1.7.6  \r\n\r\nI have lots of \"MACTH\" statements, after hundreds of  execution, error comes below:\r\nERROR\uff1a\r\n```\r\nFailed to write data to connection Address(host='X.X.X.X', port=7688) (Address(host='X.X.X.X', port=7688) ); (\"0; 'Underlying socket connection gone (_ssl.c:1866)'\")\r\nFailed to write data to connection Address(host='X.X.X.X', port=7688) (Address(host='X.X.X.X', port=7688)); (\"0; 'Underlying socket connection gone (_ssl.c:1866)'\")\r\n```\r\nWhat should I do to avoid the error? Thanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/316", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/316/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/316/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/316", "id": 533824127, "node_id": "MDU6SXNzdWU1MzM4MjQxMjc=", "number": 316, "title": "Connection closed after few minutes: defunct connection Address", "user": {"login": "carmignanivittorio", "id": 34647514, "node_id": "MDQ6VXNlcjM0NjQ3NTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/34647514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmignanivittorio", "html_url": "https://github.com/carmignanivittorio", "followers_url": "https://api.github.com/users/carmignanivittorio/followers", "following_url": "https://api.github.com/users/carmignanivittorio/following{/other_user}", "gists_url": "https://api.github.com/users/carmignanivittorio/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmignanivittorio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmignanivittorio/subscriptions", "organizations_url": "https://api.github.com/users/carmignanivittorio/orgs", "repos_url": "https://api.github.com/users/carmignanivittorio/repos", "events_url": "https://api.github.com/users/carmignanivittorio/events{/privacy}", "received_events_url": "https://api.github.com/users/carmignanivittorio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-06T08:44:25Z", "updated_at": "2019-12-10T18:09:30Z", "closed_at": "2019-12-10T18:09:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have a server in which the connection is opened (python):\r\n\r\n    self._driver: Driver = GraphDatabase.driver(credentials[\"uri\"], auth=(credentials[\"user\"], credentials[\"password\"]), max_connection_lifetime=3600*24*30, keep_alive=True)\r\nI run some requests and it works all perfectly. The requests are run by using the function:\r\n\r\n```\r\ndef __exe_query(self, query: str):\r\n    with self._driver.session() as session:\r\n        session.run(query).consume()\r\n```\r\nDespite these queries do not return anything relevant I added .consume() based on this post [Error while loading data in Neo4j (Python Driver)](https://community.neo4j.com/t/error-while-loading-data-in-neo4j-python-driver/7413/9).\r\n\r\nI wait 4-5 minutes (while the server is running waiting for other requests), I run the exact same requests, and I get the **error**:\r\n\r\n`\"Failed to read from defunct connection Address(host='****', port=**)\"`\r\n\r\nI also tried with `max_connection_lifetime=-1`.\r\n\r\nI am working with python 3.7.0 with these libraries versions: neo4j==1.7.2 neobolt==1.7.9 neotime==1.7.4 as suggested by https://github.com/neo4j/neo4j-python-driver/issues/293.\r\nIt does not work in Win10 and Linux Ubuntu 18.04.3 LTS.\r\n\r\nThanks for your help and attention,\r\nVittorio\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/315", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/315/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/315/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/315", "id": 533310025, "node_id": "MDU6SXNzdWU1MzMzMTAwMjU=", "number": 315, "title": "connection timed out while using read_transaction()", "user": {"login": "qf9688", "id": 22748365, "node_id": "MDQ6VXNlcjIyNzQ4MzY1", "avatar_url": "https://avatars2.githubusercontent.com/u/22748365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qf9688", "html_url": "https://github.com/qf9688", "followers_url": "https://api.github.com/users/qf9688/followers", "following_url": "https://api.github.com/users/qf9688/following{/other_user}", "gists_url": "https://api.github.com/users/qf9688/gists{/gist_id}", "starred_url": "https://api.github.com/users/qf9688/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qf9688/subscriptions", "organizations_url": "https://api.github.com/users/qf9688/orgs", "repos_url": "https://api.github.com/users/qf9688/repos", "events_url": "https://api.github.com/users/qf9688/events{/privacy}", "received_events_url": "https://api.github.com/users/qf9688/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-05T12:05:25Z", "updated_at": "2020-01-31T10:01:13Z", "closed_at": "2020-01-31T10:01:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### always occurs after a certain time\r\nand this is recorded by logger in neo4j\r\n```\r\nFailed to write data to connection Address(host='', port=7687) (Address(host='', port=7687)); (\"110; 'Connection timed out'\")\r\n```\r\nthis is debug.log\r\n```\r\nERROR [o.n.b.t.p.HouseKeeper] Fatal error occurred when handling a client connection: [id: 0x4ddc3bca, L:/ - R:/] readAddress(..) failed: Connection timed out\r\nio.netty.channel.unix.Errors$NativeIoException: readAddress(..) failed: Connection timed out\r\n        at io.netty.channel.unix.Errors.newIOException(Errors.java:122)\r\n        at io.netty.channel.unix.Errors.ioResult(Errors.java:146)\r\n        at io.netty.channel.unix.FileDescriptor.readAddress(FileDescriptor.java:178)\r\n        at io.netty.channel.epoll.AbstractEpollChannel.doReadBytes(AbstractEpollChannel.java:343)\r\n        at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:785)\r\n        at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:433)\r\n        at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:330)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n```\r\nis it right?\r\n```\r\n...\r\nself._open_transaction()\r\ntx = self._transaction # get transaction\r\n...\r\nresult = unit_of_work(...) # transacton.run()\r\n...\r\nsession.run()\r\n...\r\n```\r\nbut it seems like has_transaction() in session.run() would be False \r\nthen self._connection.send() will call socket.send_all() where there will throw that exception\r\n```\r\n        if not has_transaction:\r\n            try:\r\n                self._connection.send()\r\n                self._connection.fetch()\r\n            except ConnectionExpired as error:\r\n                raise SessionExpired(*error.args)\r\n```\r\nhave no idea why transaction and connection would fail", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/306", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/306/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/306/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/306", "id": 515112639, "node_id": "MDU6SXNzdWU1MTUxMTI2Mzk=", "number": 306, "title": "MATCH with neotime.Datetime params on value datetime(\"2019-10-30T07:54:02.129790999[UTC]\")", "user": {"login": "huumq00731", "id": 43772748, "node_id": "MDQ6VXNlcjQzNzcyNzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/43772748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huumq00731", "html_url": "https://github.com/huumq00731", "followers_url": "https://api.github.com/users/huumq00731/followers", "following_url": "https://api.github.com/users/huumq00731/following{/other_user}", "gists_url": "https://api.github.com/users/huumq00731/gists{/gist_id}", "starred_url": "https://api.github.com/users/huumq00731/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huumq00731/subscriptions", "organizations_url": "https://api.github.com/users/huumq00731/orgs", "repos_url": "https://api.github.com/users/huumq00731/repos", "events_url": "https://api.github.com/users/huumq00731/events{/privacy}", "received_events_url": "https://api.github.com/users/huumq00731/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 207837127, "node_id": "MDU6TGFiZWwyMDc4MzcxMjc=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-31T02:30:57Z", "updated_at": "2020-06-09T11:44:26Z", "closed_at": "2020-06-09T11:44:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Example bug report\r\n\r\nCan not MATCH with datetime value: \"2019-10-30T07:54:02.129790999[UTC]\r\n\r\n**Neo4j Version:** : 3.5.11  Community  \r\n**Neo4j Mode**: Single instance  \r\n**Driver version**: Python driver 1.7.5  \r\n(Python lib: neo4j==1.7.5, neobolt==1.7.15, neotime==1.7.4)\r\n**Operating System:** Window 10 64bit\r\n\r\n### Steps to reproduce\r\n1. Start Neo4j.\r\n2. Run a query with browser:\r\nCREATE (t:TEST {update_date:datetime(\"2019-10-30T07:54:02.129790999[UTC]\")})\r\n\r\n3. Run python code\r\n```javascript\r\nfrom neo4j import GraphDatabase\r\nfrom neobolt.security import ENCRYPTION_OFF\r\n\r\ndriver = GraphDatabase.driver(\"bolt://127.0.0.1:7687\", auth=(\"neo4j\", \"mchc2019\"), encrypted=ENCRYPTION_OFF)\r\nwith driver.session() as session:\r\n    search_query = \"MATCH (t:TEST) RETURN t\"\r\n    result = session.run(search_query)\r\n    for record in result.records():\r\n        print(record[\"t\"])\r\n        last_date = record[\"t\"].get(\"update_date\")\r\n        \r\n    search_query1 = \"MATCH (t:TEST) WHERE t.update_date=$last_date RETURN t\"\r\n    result1 = session.run(search_query1, last_date=last_date)\r\n    for record1 in result1.records():\r\n        print(record1[\"t\"])\r\n```\r\n\r\n### Expected behavior\r\nOut put is:\r\n\r\n<Node id=248 labels={'TEST'} properties={'update_date': neotime.DateTime(2019, 10, 30, 7, 54, 2.129790999, tzinfo=<UTC>)}>\r\nHave record\r\n<Node id=248 labels={'TEST'} properties={'update_date': neotime.DateTime(2019, 10, 30, 7, 54, 2.129790888, tzinfo=<UTC>)}>\r\n\r\n### Actual behavior\r\nOut put is:\r\n\r\n<Node id=248 labels={'TEST'} properties={'update_date': neotime.DateTime(2019, 10, 30, 7, 54, 2.129790999, tzinfo=<UTC>)}>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/305", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/305/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/305/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/305", "id": 512314877, "node_id": "MDU6SXNzdWU1MTIzMTQ4Nzc=", "number": 305, "title": "NEO4J Underlying socket connection gone (_ssl.c:2084)", "user": {"login": "srinathganesh", "id": 43715636, "node_id": "MDQ6VXNlcjQzNzE1NjM2", "avatar_url": "https://avatars0.githubusercontent.com/u/43715636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinathganesh", "html_url": "https://github.com/srinathganesh", "followers_url": "https://api.github.com/users/srinathganesh/followers", "following_url": "https://api.github.com/users/srinathganesh/following{/other_user}", "gists_url": "https://api.github.com/users/srinathganesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinathganesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinathganesh/subscriptions", "organizations_url": "https://api.github.com/users/srinathganesh/orgs", "repos_url": "https://api.github.com/users/srinathganesh/repos", "events_url": "https://api.github.com/users/srinathganesh/events{/privacy}", "received_events_url": "https://api.github.com/users/srinathganesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-25T05:43:22Z", "updated_at": "2019-12-12T08:35:12Z", "closed_at": "2019-12-12T08:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. I have installed neo4j-driver 1.7.5\r\n2. I have Neo4J Causal Cluster set up\r\n3. Try to start coding in Python to connect to it. (I know its bolt+routing but using default code for now)\r\n\r\nCode\r\n\r\n```\r\n# REF https://pypi.org/project/neo4j-driver/\r\nfrom neo4j import GraphDatabase\r\n\r\ndriver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\n\r\ndef add_friend(tx, name, friend_name):\r\n    tx.run(\"MERGE (a:Person {name: $name}) \"\r\n           \"MERGE (a)-[:KNOWS]->(friend:Person {name: $friend_name})\",\r\n           name=name, friend_name=friend_name)\r\n\r\ndef print_friends(tx, name):\r\n    for record in tx.run(\"MATCH (a:Person)-[:KNOWS]->(friend) WHERE a.name = $name \"\r\n                         \"RETURN friend.name ORDER BY friend.name\", name=name):\r\n        print(record[\"friend.name\"])\r\n\r\nwith driver.session() as session:\r\n    session.write_transaction(add_friend, \"Arthur\", \"Guinevere\")\r\n    session.write_transaction(add_friend, \"Arthur\", \"Lancelot\")\r\n    session.write_transaction(add_friend, \"Arthur\", \"Merlin\")\r\n    session.read_transaction(print_friends, \"Arthur\")\r\n```\r\n\r\nOutput\r\n\r\n```\r\nGuinevere\r\nLancelot\r\nMerlin\r\nFailed to write data to connection Address(host='localhost', port=7687) (Address(host='127.0.0.1', port=7687)); (\"0; 'Underlying socket connection gone (_ssl.c:2084)'\")\r\nFailed to write data to connection Address(host='localhost', port=7687) (Address(host='127.0.0.1', port=7687)); (\"0; 'Underlying socket connection gone (_ssl.c:2084)'\")\r\n```\r\nIF I Add this at the end\r\n\r\n`driver.close()\r\n`THEN i dont get the socket gone error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/304", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/304/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/304/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/304", "id": 506322262, "node_id": "MDU6SXNzdWU1MDYzMjIyNjI=", "number": 304, "title": "Summary result available after and results consumed after is always None", "user": {"login": "tomasonjo", "id": 19948365, "node_id": "MDQ6VXNlcjE5OTQ4MzY1", "avatar_url": "https://avatars1.githubusercontent.com/u/19948365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasonjo", "html_url": "https://github.com/tomasonjo", "followers_url": "https://api.github.com/users/tomasonjo/followers", "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}", "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions", "organizations_url": "https://api.github.com/users/tomasonjo/orgs", "repos_url": "https://api.github.com/users/tomasonjo/repos", "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasonjo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-13T12:59:05Z", "updated_at": "2019-12-12T08:32:01Z", "closed_at": "2019-12-12T08:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tested Neo4j driver 1.7.4 both on Community and Enterprise Neo4j 3.5.11, and the cypher execution time is always None...\r\n\r\nHere is an example script.\r\n\r\n```\r\nquery = \"MATCH (n) RETURN count(n)\"\r\n\r\nwith driver.session() as session:\r\n    r = session.run(firstly_query)\r\n    print(r.summary().result_available_after)\r\n    print(r.summary().result_consumed_after)\r\n```\r\n\r\nI tried it on 1.6.3 version of Neo4j python driver it worked fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/302", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/302/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/302/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/302", "id": 505089834, "node_id": "MDU6SXNzdWU1MDUwODk4MzQ=", "number": 302, "title": "Windows 10: OverflowError: mktime argument out of range", "user": {"login": "martin-neotech", "id": 54799146, "node_id": "MDQ6VXNlcjU0Nzk5MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/54799146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martin-neotech", "html_url": "https://github.com/martin-neotech", "followers_url": "https://api.github.com/users/martin-neotech/followers", "following_url": "https://api.github.com/users/martin-neotech/following{/other_user}", "gists_url": "https://api.github.com/users/martin-neotech/gists{/gist_id}", "starred_url": "https://api.github.com/users/martin-neotech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martin-neotech/subscriptions", "organizations_url": "https://api.github.com/users/martin-neotech/orgs", "repos_url": "https://api.github.com/users/martin-neotech/repos", "events_url": "https://api.github.com/users/martin-neotech/events{/privacy}", "received_events_url": "https://api.github.com/users/martin-neotech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 207837127, "node_id": "MDU6TGFiZWwyMDc4MzcxMjc=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-10T07:30:56Z", "updated_at": "2020-06-10T14:04:27Z", "closed_at": "2020-06-10T14:04:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "# The C library function on windows 10 does not support times below a certain value.\r\n\r\nhttps://github.com/neo4j/neo4j-python-driver/blob/4.0/neo4j/time/__init__.py#L239\r\n\r\n```\r\n    @classmethod\r\n    def local_offset(cls):\r\n        \"\"\" The offset from UTC for local time read from this clock.\r\n        \"\"\"\r\n        return ClockTime(-int(mktime(gmtime(0))))\r\n```\r\n\r\n> python time module\r\n> \r\n> Although this module is always available, not all functions are available on all platforms. Most of the functions defined in this module call platform C library functions with the same name. It may sometimes be helpful to consult the platform documentation, because the semantics of these functions varies among platforms.\r\n> \r\n> The epoch is the point where the time starts, and is platform dependent. For Unix, the epoch is January 1, 1970, 00:00:00 (UTC). To find out what the epoch is on a given platform, look at time.gmtime(0).\r\n> \r\n> https://docs.python.org/3/library/time.html\r\n\r\n```\r\n>>> time.gmtime(0)\r\ntime.struct_time(tm_year=1970, tm_mon=1, tm_mday=1, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=3, tm_yday=1, tm_isdst=0)\r\n\r\n>>> list((ix for ix in time.gmtime(0)))\r\n[1970, 1, 1, 0, 0, 0, 3, 1, 0]\r\n\r\n>>> time.mktime(time.gmtime(0))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nOverflowError: mktime argument out of range\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/301", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/301/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/301/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/301", "id": 501051589, "node_id": "MDU6SXNzdWU1MDEwNTE1ODk=", "number": 301, "title": "Session.__exit__ tries to sync using a broken connection.", "user": {"login": "ecdavis", "id": 730735, "node_id": "MDQ6VXNlcjczMDczNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/730735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecdavis", "html_url": "https://github.com/ecdavis", "followers_url": "https://api.github.com/users/ecdavis/followers", "following_url": "https://api.github.com/users/ecdavis/following{/other_user}", "gists_url": "https://api.github.com/users/ecdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecdavis/subscriptions", "organizations_url": "https://api.github.com/users/ecdavis/orgs", "repos_url": "https://api.github.com/users/ecdavis/repos", "events_url": "https://api.github.com/users/ecdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/ecdavis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-01T17:53:45Z", "updated_at": "2019-11-04T20:33:09Z", "closed_at": "2019-11-04T20:33:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "## `Session.__exit__` tries to sync using a broken connection.\r\n\r\n**Neo4j version:** Community 3.5.11\r\n**Neo4j Mode:** Single instance\r\n**Driver version:** Python driver 1.7.0\r\n**Operating system:** Ubuntu 14.04.6 LTS on AWS\r\n\r\n### Steps to reproduce\r\nThis one is hard to repro, as it requires neo4j to close a Bolt connection. I discovered it while debugging this behavior: https://github.com/neo4j/neo4j/issues/11997 -- one of my queries got \"stuck\" for long enough that neo4j drops the connection, which causes the driver to crash unceremoniously. Here's the code I was running, if it helps: https://github.com/lyft/cartography/blob/0.10.0/cartography/intel/aws/ec2.py#L181-L252\r\n\r\n1. Run a query using the following pattern:\r\n```python\r\nwith driver.session() as session:\r\n    session.run(query)\r\n```\r\n2. During execution of the query, trigger a `ConnectionResetError` in `session._connection.send` -- this can occur when neo4j closes the connection unexpectedly.\r\n\r\n### Expected behavior\r\nOnly `ConnectionResetError` should bubble up to the caller.\r\n\r\n### Actual behavior\r\n`BrokenPipeError` occurs during execution of `Session.__exit__`, then a `NameError` occurs during handling of the `BrokenPipeError`.\r\n\r\nLooking through the code:\r\n1. https://github.com/neo4j/neo4j-python-driver/blob/1.7/neo4j/__init__.py#L498 if a `ConnectionResetError` occurs during this `send` call, it will not be handled and will bubble up to the caller. I don't think this is necessarily a bad thing, but;\r\n2. Because the exception is bubbling upwards, Python cleans up the `with` block, which calls `Session.__exit__`: https://github.com/neo4j/neo4j-python-driver/blob/1.7/neo4j/__init__.py#L369\r\n3. `Session.__exit__` calls `Session.close`: https://github.com/neo4j/neo4j-python-driver/blob/1.7/neo4j/__init__.py#L386\r\n4. The `Session._connection` object is not `None`, so `close` will try to call `sync`: https://github.com/neo4j/neo4j-python-driver/blob/1.7/neo4j/__init__.py#L395\r\n5. `sync` raises a `BrokenPipeError` because the underlying connection is closed.\r\n\r\n#### Neo4j Driver Stack Trace\r\n```\r\nTraceback (most recent call last):\r\n  ...\r\n  File \".../lib/python3.6/site-packages/neo4j/__init__.py\", line 498, in run\r\n    self._connection.send()\r\n  File \".../lib/python3.6/site-packages/neobolt/direct.py\", line 394, in send\r\n    self._send()\r\n  File \".../lib/python3.6/site-packages/neobolt/direct.py\", line 409, in _send\r\n    self.socket.sendall(data)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 965, in sendall\r\n    v = self.send(data[count:])\r\n  File \"/usr/lib/python3.6/ssl.py\", line 935, in send\r\n    return self._sslobj.write(data)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 636, in write\r\n    return self._sslobj.write(data)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \".../lib/python3.6/site-packages/neo4j/__init__.py\", line 395, in close\r\n    self._connection.sync()\r\n  File \".../lib/python3.6/site-packages/neobolt/direct.py\", line 505, in sync\r\n    self.send()\r\n  File \".../lib/python3.6/site-packages/neobolt/direct.py\", line 394, in send\r\n    self._send()\r\n  File \".../lib/python3.6/site-packages/neobolt/direct.py\", line 409, in _send\r\n    self.socket.sendall(data)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 965, in sendall\r\n    v = self.send(data[count:])\r\n  File \"/usr/lib/python3.6/ssl.py\", line 935, in send\r\n    return self._sslobj.write(data)\r\n  File \"/usr/lib/python3.6/ssl.py\", line 636, in write\r\n    return self._sslobj.write(data)\r\nBrokenPipeError: [Errno 32] Broken pipe\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  ...\r\n  File \".../lib/python3.6/site-packages/neo4j/__init__.py\", line 370, in __exit__\r\n    self.close()\r\n  File \".../lib/python3.6/site-packages/neo4j/__init__.py\", line 397, in close\r\n    ServiceUnavailable, SessionError):\r\nNameError: name 'ServiceUnavailable' is not defined\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/300", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/300/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/300/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/300", "id": 499225116, "node_id": "MDU6SXNzdWU0OTkyMjUxMTY=", "number": 300, "title": "query to server Neo4j instance hangs without any error", "user": {"login": "Zhenshan-Jin", "id": 14370804, "node_id": "MDQ6VXNlcjE0MzcwODA0", "avatar_url": "https://avatars0.githubusercontent.com/u/14370804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zhenshan-Jin", "html_url": "https://github.com/Zhenshan-Jin", "followers_url": "https://api.github.com/users/Zhenshan-Jin/followers", "following_url": "https://api.github.com/users/Zhenshan-Jin/following{/other_user}", "gists_url": "https://api.github.com/users/Zhenshan-Jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zhenshan-Jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zhenshan-Jin/subscriptions", "organizations_url": "https://api.github.com/users/Zhenshan-Jin/orgs", "repos_url": "https://api.github.com/users/Zhenshan-Jin/repos", "events_url": "https://api.github.com/users/Zhenshan-Jin/events{/privacy}", "received_events_url": "https://api.github.com/users/Zhenshan-Jin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-27T04:16:22Z", "updated_at": "2019-10-01T10:43:26Z", "closed_at": "2019-10-01T10:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n- Neo4j version: Community 3.5.9\r\n- Neo4j Mode: Single instance(docker)\r\n- Driver version: python driver 1.7.4\r\n- Operating system: Ubuntu 16.10 on GCP\r\n- **Steps to reproduce**\r\n1. send cypher query from a GCP VM to Azure VM, where the neo4j instance is hosted and the neo4j instance is hosted in a docker\r\n- Expected behavior\r\ncreate node/link and return the node id\r\n- Actual behavior\r\nThe process hangs there without any response, no error until we kill the process.\r\nIt happens from time to time and when it happens the neo4j instance is still alive and I can send a query through neo4j browser.\r\nThe actual query is light if I run the query which hangs, it takes less than one second to run in the neo4j browser\r\n\r\n\r\nWe have been solving this issue for a while and haven't got a clue yet. Any suggestions about how to solve the issue or the way that we can look for to solve the issue is welcome!\r\nThank you in advance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/298", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/298/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/298/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/298", "id": 481249342, "node_id": "MDU6SXNzdWU0ODEyNDkzNDI=", "number": 298, "title": "[Feature Request] Base Neo4j Exception", "user": {"login": "john-bodley", "id": 4567245, "node_id": "MDQ6VXNlcjQ1NjcyNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4567245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-bodley", "html_url": "https://github.com/john-bodley", "followers_url": "https://api.github.com/users/john-bodley/followers", "following_url": "https://api.github.com/users/john-bodley/following{/other_user}", "gists_url": "https://api.github.com/users/john-bodley/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-bodley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-bodley/subscriptions", "organizations_url": "https://api.github.com/users/john-bodley/orgs", "repos_url": "https://api.github.com/users/john-bodley/repos", "events_url": "https://api.github.com/users/john-bodley/events{/privacy}", "received_events_url": "https://api.github.com/users/john-bodley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-15T17:15:21Z", "updated_at": "2020-04-14T09:28:15Z", "closed_at": "2020-04-14T09:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently there are a number of [exceptions](https://github.com/neo4j/neo4j-python-driver/blob/4.0/neo4j/exceptions.py) which are derived directly from `Exception`: \r\n\r\n- `ConnectionExpired`\r\n- `CypherError`\r\n- `IncompleteCommitError`\r\n- `ProtocolError`\r\n- `SecurityError`\r\n- `ServiceUnavailable`\r\n\r\nwhich leads to a fairly verbose try/except clause if one specifically wants to catch Neo4j exceptions. I was wondering whether there should be a base Neo4j exception which these six exceptions are derived from, i.e., \r\n\r\n```\r\nclass Neo4jException(Exception):\r\n   \"\"\" Base Neo4j exception. \r\n   \"\"\"\r\n\r\n\r\nclass ProtocolError(Neo4jException):\r\n    \"\"\" Raised when an unexpected or unsupported protocol event occurs.\r\n    \"\"\"\r\n\r\n...\r\n```\r\n\r\nwhich would mean one could simply do, \r\n\r\n```\r\ntry:\r\n    with GraphDatabase.driver(...).session() as session():\r\n        ...\r\nexcept Neo4jException:\r\n    ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/296", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/296/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/296/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/296", "id": 475905620, "node_id": "MDU6SXNzdWU0NzU5MDU2MjA=", "number": 296, "title": "Query time is always returning as 0", "user": {"login": "bavalpey", "id": 36710691, "node_id": "MDQ6VXNlcjM2NzEwNjkx", "avatar_url": "https://avatars3.githubusercontent.com/u/36710691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bavalpey", "html_url": "https://github.com/bavalpey", "followers_url": "https://api.github.com/users/bavalpey/followers", "following_url": "https://api.github.com/users/bavalpey/following{/other_user}", "gists_url": "https://api.github.com/users/bavalpey/gists{/gist_id}", "starred_url": "https://api.github.com/users/bavalpey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bavalpey/subscriptions", "organizations_url": "https://api.github.com/users/bavalpey/orgs", "repos_url": "https://api.github.com/users/bavalpey/repos", "events_url": "https://api.github.com/users/bavalpey/events{/privacy}", "received_events_url": "https://api.github.com/users/bavalpey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-01T21:53:11Z", "updated_at": "2019-12-12T08:31:14Z", "closed_at": "2019-12-12T08:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Bolt driver \r\n\r\nI am trying to time the execution of queries in Neo4j.  There was a [stackoverflow post](https://stackoverflow.com/questions/49859311/how-to-get-the-execution-time-of-a-cypher-query-from-python) detailing how to do this, and I followed the steps for a simple query on my database.  I am getting back records, however, the time is always 0.  It also does not specify what unit the time should be in (anywhere in the limited documentation).\r\nI run the same query on Neo4j directly and the execution time is around 1200ms.  Is there no way to get this number from the bolt connector?\r\n\r\n**Neo4j Version:** 3.5.8 Community  \r\n**Neo4j Mode**: Single instance  \r\n**Driver version**: Python driver 1.7.1  \r\n**Operating System:** Ubuntu 18.04.2 LTS\r\n\r\n### Steps to reproduce\r\n1. Start Neo4j\r\n2. Connect to Neo4j using the GraphDatabase driver\r\n3. Start a session and complete a transaction.\r\n4. Call summary().result_available_after and summary().result_consumed_after and notice both are 0\r\n### Expected behavior\r\nThe time should be at least greater than 0\r\n### Actual behavior\r\nThe query time is 0\r\n\r\nI can attach my code if necessary, but I essentially just followed the example posted on the stackoverflow post I mentioned.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/294", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/294/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/294/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/294", "id": 459390474, "node_id": "MDU6SXNzdWU0NTkzOTA0NzQ=", "number": 294, "title": "ServiceUnavailable Defunct Connection Address - after a certain period of time", "user": {"login": "Zhenshan-Jin", "id": 14370804, "node_id": "MDQ6VXNlcjE0MzcwODA0", "avatar_url": "https://avatars0.githubusercontent.com/u/14370804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zhenshan-Jin", "html_url": "https://github.com/Zhenshan-Jin", "followers_url": "https://api.github.com/users/Zhenshan-Jin/followers", "following_url": "https://api.github.com/users/Zhenshan-Jin/following{/other_user}", "gists_url": "https://api.github.com/users/Zhenshan-Jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zhenshan-Jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zhenshan-Jin/subscriptions", "organizations_url": "https://api.github.com/users/Zhenshan-Jin/orgs", "repos_url": "https://api.github.com/users/Zhenshan-Jin/repos", "events_url": "https://api.github.com/users/Zhenshan-Jin/events{/privacy}", "received_events_url": "https://api.github.com/users/Zhenshan-Jin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-21T22:13:04Z", "updated_at": "2020-04-23T12:47:52Z", "closed_at": "2019-06-23T21:05:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The neo4j driver will give the error `neobolt.exceptions.ServiceUnavailable: Failed to read from defunct connection Address(host='<remote neo4j bolt>', port=7687)` if certain amount of time spent between the creation of neo4j client and creation of the session. However, if I start the session the second time, the error is gone.\r\n\r\n```\r\nfrom neo4j import GraphDatabase\r\nimport time\r\n\r\nneo4j_url = \"bolt://<remote_neo4j_url>:7687\"\r\nuser_name = \"neo4j\"\r\npassword = \"\"\r\nneo4j_client = GraphDatabase.driver(neo4j_url, auth=(user_name, password))\r\n\r\ntime.sleep(300) # 5 minutes\r\nquery = '''MATCH (n) RETURN n LIMIT 1'''\r\n\r\n# with error\r\ntry:\r\n    with neo4j_client.session() as session:\r\n        query_result = session.run(query)\r\nexcept Exception as e:\r\n    print(str(e))\r\n\r\n# no error\r\nwith neo4j_client.session() as session:\r\n    query_result = session.run(query)\r\n```\r\n\r\n\r\n------------------------\r\nEnvironment:\r\npython 3.6\r\nneo4j==1.7.2\r\nneobolt==1.7.4\r\nneotime==1.7.4\r\nmac 10.14.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/293", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/293/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/293/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/293", "id": 454717916, "node_id": "MDU6SXNzdWU0NTQ3MTc5MTY=", "number": 293, "title": "Underlying Socket connection Gone error with Vesion  1.7.4 and Neo4j 3.5", "user": {"login": "YaphetKG", "id": 45075777, "node_id": "MDQ6VXNlcjQ1MDc1Nzc3", "avatar_url": "https://avatars2.githubusercontent.com/u/45075777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaphetKG", "html_url": "https://github.com/YaphetKG", "followers_url": "https://api.github.com/users/YaphetKG/followers", "following_url": "https://api.github.com/users/YaphetKG/following{/other_user}", "gists_url": "https://api.github.com/users/YaphetKG/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaphetKG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaphetKG/subscriptions", "organizations_url": "https://api.github.com/users/YaphetKG/orgs", "repos_url": "https://api.github.com/users/YaphetKG/repos", "events_url": "https://api.github.com/users/YaphetKG/events{/privacy}", "received_events_url": "https://api.github.com/users/YaphetKG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-06-11T14:16:22Z", "updated_at": "2019-11-06T23:01:40Z", "closed_at": "2019-10-01T09:43:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was doing a fresh install of a neo4j - python code. And I have downloaded the latest neo4j docker image. along side it I have neo4j driver version 1.7.4, \r\n\r\nSo my code connects well with\r\n```\r\nfrom neo4j import GraphDatabase\r\ndriver = GraphDatabase.driver(uri=\"bolt://host:7687', auth=('neo4j','XXXX'))\r\n\r\n# as soon as I do the following code I get this error.\r\n# Failed to write data to connection Address(host='xxx', port=xxx) (Address(host='xxx', port=xxxx)); (\"0; 'Underlying socket connection gone (_ssl.c:2061)'\")\r\nwith driver.session() as session:\r\n    session.run('match (c) return c ')\r\n\r\n```\r\n\r\nSo as a fix I downgraded my driver to version 1.7.2 and its working well. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/292", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/292/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/292/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/292", "id": 452069803, "node_id": "MDU6SXNzdWU0NTIwNjk4MDM=", "number": 292, "title": "Underlying Socket connection Gone  error", "user": {"login": "YaphetKG", "id": 45075777, "node_id": "MDQ6VXNlcjQ1MDc1Nzc3", "avatar_url": "https://avatars2.githubusercontent.com/u/45075777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaphetKG", "html_url": "https://github.com/YaphetKG", "followers_url": "https://api.github.com/users/YaphetKG/followers", "following_url": "https://api.github.com/users/YaphetKG/following{/other_user}", "gists_url": "https://api.github.com/users/YaphetKG/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaphetKG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaphetKG/subscriptions", "organizations_url": "https://api.github.com/users/YaphetKG/orgs", "repos_url": "https://api.github.com/users/YaphetKG/repos", "events_url": "https://api.github.com/users/YaphetKG/events{/privacy}", "received_events_url": "https://api.github.com/users/YaphetKG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-04T15:39:45Z", "updated_at": "2019-06-04T15:44:38Z", "closed_at": "2019-06-04T15:44:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Guidelines\r\n\r\nFirstly, if you are an Enterprise customer, you might want to head over to our [Customer Support Portal](http://support.neo4j.com/).\r\n\r\nIf you think you might have **hit a bug** in our software (it happens occasionally!) or you have specific **feature request** then use the issue feature on the relevant GitHub repository.\r\nCheck first though as someone else may have already raised something similar.\r\n\r\nIf you simply want to get started or have a question on how to use a particular feature, ask a question in [Neo4j Online Community](https://community.neo4j.com/) instead.\r\n[StackOverflow](http://stackoverflow.com/questions/tagged/neo4j) also hosts a ton of questions and might already have a discussion around your problem.\r\nMake sure you have a look there too.\r\n\r\nIf you want to make a feature request, please prefix your issue title with `[Feature Request]` so that it is clear to us. \r\nIf you have a bug report however, please continue reading.  \r\nTo help us understand your issue, please specify important details, primarily:\r\n\r\n- Neo4j version: Community/Enterprise X.Y.Z\r\n- Neo4j Mode: Single instance/HA cluster with X members/Casual cluster with X core Y read-replica\r\n- Driver version: X lanaguage driver X.Y.Z (If you use some other library that wraps around this driver, you might want to raise an issue there first)\r\n- Operating system: (for example Windows 10/Ubuntu 16.10 on AWS)\r\n- **Steps to reproduce**\r\n- Expected behavior\r\n- Actual behavior\r\n\r\nAdditionally, include (as appropriate) log-files, stacktraces, and other debug output.\r\nAlways check the server logs to see if there is any stacktrace related to the driver error too.\r\nAslo add any solutions you've tried to solve the problem yourself.\r\n\r\n## Example bug report\r\n\r\nI got connection reset by peer errors.\r\n\r\n**Neo4j Version:** 3.4.10 Community  \r\n**Neo4j Mode**: Single instance  \r\n**Driver version**: Python driver 1.7.1  \r\n**Operating System:** Ubuntu 16.10 on AWS  \r\n\r\n### Steps to reproduce\r\n1. Start Neo4j on a AWS instance\r\n2. Run a query with the driver\r\n3. Put the driver idle for 2h\r\n4. Run another query\r\n### Expected behavior\r\nThe second query shall run successfully\r\n### Actual behavior\r\nThe client failed to run the second query with a `connection reset by peer` stacktrace.  \r\n*attach the stacktrace*  \r\nMeanwhile, in the server log, I found this stacktrace that happened at the same time when the driver failed.  \r\n*attach the stacktrace*  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/291", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/291/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/291/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/291", "id": 452069794, "node_id": "MDU6SXNzdWU0NTIwNjk3OTQ=", "number": 291, "title": "Having issues ", "user": {"login": "YaphetKG", "id": 45075777, "node_id": "MDQ6VXNlcjQ1MDc1Nzc3", "avatar_url": "https://avatars2.githubusercontent.com/u/45075777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaphetKG", "html_url": "https://github.com/YaphetKG", "followers_url": "https://api.github.com/users/YaphetKG/followers", "following_url": "https://api.github.com/users/YaphetKG/following{/other_user}", "gists_url": "https://api.github.com/users/YaphetKG/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaphetKG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaphetKG/subscriptions", "organizations_url": "https://api.github.com/users/YaphetKG/orgs", "repos_url": "https://api.github.com/users/YaphetKG/repos", "events_url": "https://api.github.com/users/YaphetKG/events{/privacy}", "received_events_url": "https://api.github.com/users/YaphetKG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-04T15:39:43Z", "updated_at": "2019-06-04T15:45:17Z", "closed_at": "2019-06-04T15:45:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Guidelines\r\n\r\nFirstly, if you are an Enterprise customer, you might want to head over to our [Customer Support Portal](http://support.neo4j.com/).\r\n\r\nIf you think you might have **hit a bug** in our software (it happens occasionally!) or you have specific **feature request** then use the issue feature on the relevant GitHub repository.\r\nCheck first though as someone else may have already raised something similar.\r\n\r\nIf you simply want to get started or have a question on how to use a particular feature, ask a question in [Neo4j Online Community](https://community.neo4j.com/) instead.\r\n[StackOverflow](http://stackoverflow.com/questions/tagged/neo4j) also hosts a ton of questions and might already have a discussion around your problem.\r\nMake sure you have a look there too.\r\n\r\nIf you want to make a feature request, please prefix your issue title with `[Feature Request]` so that it is clear to us. \r\nIf you have a bug report however, please continue reading.  \r\nTo help us understand your issue, please specify important details, primarily:\r\n\r\n- Neo4j version: Community/Enterprise X.Y.Z\r\n- Neo4j Mode: Single instance/HA cluster with X members/Casual cluster with X core Y read-replica\r\n- Driver version: X lanaguage driver X.Y.Z (If you use some other library that wraps around this driver, you might want to raise an issue there first)\r\n- Operating system: (for example Windows 10/Ubuntu 16.10 on AWS)\r\n- **Steps to reproduce**\r\n- Expected behavior\r\n- Actual behavior\r\n\r\nAdditionally, include (as appropriate) log-files, stacktraces, and other debug output.\r\nAlways check the server logs to see if there is any stacktrace related to the driver error too.\r\nAslo add any solutions you've tried to solve the problem yourself.\r\n\r\n## Example bug report\r\n\r\nI got connection reset by peer errors.\r\n\r\n**Neo4j Version:** 3.4.10 Community  \r\n**Neo4j Mode**: Single instance  \r\n**Driver version**: Python driver 1.7.1  \r\n**Operating System:** Ubuntu 16.10 on AWS  \r\n\r\n### Steps to reproduce\r\n1. Start Neo4j on a AWS instance\r\n2. Run a query with the driver\r\n3. Put the driver idle for 2h\r\n4. Run another query\r\n### Expected behavior\r\nThe second query shall run successfully\r\n### Actual behavior\r\nThe client failed to run the second query with a `connection reset by peer` stacktrace.  \r\n*attach the stacktrace*  \r\nMeanwhile, in the server log, I found this stacktrace that happened at the same time when the driver failed.  \r\n*attach the stacktrace*  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/290", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/290/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/290/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/290", "id": 444455257, "node_id": "MDU6SXNzdWU0NDQ0NTUyNTc=", "number": 290, "title": "DB connection error when shutting down the flask server", "user": {"login": "mahdizadehms", "id": 6589070, "node_id": "MDQ6VXNlcjY1ODkwNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6589070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahdizadehms", "html_url": "https://github.com/mahdizadehms", "followers_url": "https://api.github.com/users/mahdizadehms/followers", "following_url": "https://api.github.com/users/mahdizadehms/following{/other_user}", "gists_url": "https://api.github.com/users/mahdizadehms/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahdizadehms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahdizadehms/subscriptions", "organizations_url": "https://api.github.com/users/mahdizadehms/orgs", "repos_url": "https://api.github.com/users/mahdizadehms/repos", "events_url": "https://api.github.com/users/mahdizadehms/events{/privacy}", "received_events_url": "https://api.github.com/users/mahdizadehms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-15T13:58:33Z", "updated_at": "2019-10-01T09:41:28Z", "closed_at": "2019-10-01T09:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got DB connection error when shutting down the flask server (using CTRL+C). The error has no impact on the app execution process or the user experience (It happens only when you shut down the Flask app).\r\n\r\n```\r\n * Serving Flask app \"app\" (lazy loading)\r\n * Environment: development\r\n * Debug mode: on\r\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\r\n * Restarting with stat\r\n * Debugger is active!\r\n * Debugger PIN: 124-357-501\r\n^C\r\nFailed to write data to connection Address(host='127.0.0.1', port=7687) (\"0; 'Underlying socket connection gone (_ssl.c:2067)'\")\r\nFailed to write data to connection Address(host='127.0.0.1', port=7687) (\"0; 'Underlying socket connection gone (_ssl.c:2067)'\")\r\n```\r\n\r\nFlask version: 1.0.2\r\nNeo4j Server version: 3.5.4 (community)\r\nDriver version: Python driver 1.7.2\r\nOperating System: Ubuntu 18.04 on Windows 10 WSL  \r\n\r\n### Steps to reproduce\r\n1. Start the Flask app and initialize GraphDatabse driver (No need to initiate any sessions)\r\n1. Close the Flask app using CTRL+C\r\n\r\n### Codes\r\nmovies.py:\r\n```\r\n#!/usr/bin/env python\r\nfrom flask import Flask, g\r\n\r\nfrom neo4j import GraphDatabase, basic_auth\r\n\r\napp = Flask(__name__)\r\n\r\ndriver = GraphDatabase.driver('bolt://localhost',auth=basic_auth(\"neo4j\", 'a'))\r\n\r\ndef get_db():\r\n    if not hasattr(g, 'neo4j_db'):\r\n        g.neo4j_db = driver.session()\r\n    return g.neo4j_db\r\n\r\n@app.teardown_appcontext\r\ndef close_db(error):\r\n    if hasattr(g, 'neo4j_db'):\r\n        g.neo4j_db.close()\r\n\r\nif __name__ == '__main__':\r\n    app.run(port=8080)\r\n```\r\n\r\nrequirements.txt:\r\n```\r\nFlask==1.0.2\r\nneo4j==1.7.2\r\n```\r\n\r\nrun:\r\n`python movies.py`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/288", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/288/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/288/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/288", "id": 439248585, "node_id": "MDU6SXNzdWU0MzkyNDg1ODU=", "number": 288, "title": "API Link in Wiki pointing to Wrong Page", "user": {"login": "rvazarkar", "id": 5720446, "node_id": "MDQ6VXNlcjU3MjA0NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5720446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvazarkar", "html_url": "https://github.com/rvazarkar", "followers_url": "https://api.github.com/users/rvazarkar/followers", "following_url": "https://api.github.com/users/rvazarkar/following{/other_user}", "gists_url": "https://api.github.com/users/rvazarkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvazarkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvazarkar/subscriptions", "organizations_url": "https://api.github.com/users/rvazarkar/orgs", "repos_url": "https://api.github.com/users/rvazarkar/repos", "events_url": "https://api.github.com/users/rvazarkar/events{/privacy}", "received_events_url": "https://api.github.com/users/rvazarkar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-01T17:33:33Z", "updated_at": "2019-11-27T04:39:29Z", "closed_at": "2019-11-27T04:39:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Page: https://github.com/neo4j/neo4j-python-driver/wiki\r\n\r\nThe API docs link under the 1.7 driver points to https://neo4j.com/docs/api/python-driver/1.7-preview/\r\n\r\nIt should instead point to https://neo4j.com/docs/api/python-driver/1.7/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/276", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/276/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/276/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/276", "id": 401835393, "node_id": "MDU6SXNzdWU0MDE4MzUzOTM=", "number": 276, "title": "NotALeaderError in write_transaction()", "user": {"login": "P1zz4br0etch3n", "id": 9010623, "node_id": "MDQ6VXNlcjkwMTA2MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9010623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P1zz4br0etch3n", "html_url": "https://github.com/P1zz4br0etch3n", "followers_url": "https://api.github.com/users/P1zz4br0etch3n/followers", "following_url": "https://api.github.com/users/P1zz4br0etch3n/following{/other_user}", "gists_url": "https://api.github.com/users/P1zz4br0etch3n/gists{/gist_id}", "starred_url": "https://api.github.com/users/P1zz4br0etch3n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P1zz4br0etch3n/subscriptions", "organizations_url": "https://api.github.com/users/P1zz4br0etch3n/orgs", "repos_url": "https://api.github.com/users/P1zz4br0etch3n/repos", "events_url": "https://api.github.com/users/P1zz4br0etch3n/events{/privacy}", "received_events_url": "https://api.github.com/users/P1zz4br0etch3n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-01-22T16:03:36Z", "updated_at": "2019-03-04T19:36:28Z", "closed_at": "2019-03-04T19:36:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got NotALeaderError in write_transaction() when running an application with neo4j-driver for about 1 day on average. This happens almost every day since it is runnning 24/7. The app runs a transaction every 5 minutes if necessary. After the first error is thrown no more transactions will succeed until application restart.\r\n\r\nThis might be related: https://github.com/neo4j-contrib/neomodel/issues/335\r\n\r\n**Neo4j Version:** 3.4.9 Enterprise  \r\n**Neo4j Mode**: Causal cluster with 3 core\r\n**Driver version**: Python driver 1.7.1  \r\n**Operating System:** Docker base image python:2.7-slim\r\n**Packaging Tool:** Pipenv \r\n\r\n### Steps to reproduce\r\n1. Start Neo4j on self-hosted VM\r\n2. Start Application on Kubernetes\r\n3. Let it run for a day\r\n\r\n### Expected behavior\r\nThe application keeps being able to run write_transaction() on Neo4j cluster\r\n### Actual behavior\r\nAfter running for about 1 day the application stops being able to write.\r\nTraceback (modified to hide function/application names):\r\n```\r\nTraceback (most recent call last):\\\r\n results = session.write_transaction(_unit_of_work, time_limit)\\\r\n File \\\\\"/usr/local/lib/python2.7/site-packages/neo4j/__init__.py\\\\\", line 708, in write_transaction\\\r\n return self._run_transaction(WRITE_ACCESS, unit_of_work, *args, **kwargs)\\\r\n File \\\\\"/usr/local/lib/python2.7/site-packages/neo4j/__init__.py\\\\\", line 683, in _run_transaction\\\r\n tx.close()\\\r\n File \\\\\"/usr/local/lib/python2.7/site-packages/neo4j/__init__.py\\\\\", line 822, in close\\\r\n self.sync()\\\r\n File \\\\\"/usr/local/lib/python2.7/site-packages/neo4j/__init__.py\\\\\", line 787, in sync\\\r\n self.session.sync()\\\r\n File \\\\\"/usr/local/lib/python2.7/site-packages/neo4j/__init__.py\\\\\", line 538, in sync\\\r\n detail_count, _ = self._connection.sync()\\\r\n File \\\\\"/usr/local/lib/python2.7/site-packages/neobolt/direct.py\\\\\", line 506, in sync\\\r\n detail_delta, summary_delta = self.fetch()\\\r\n File \\\\\"/usr/local/lib/python2.7/site-packages/neobolt/direct.py\\\\\", line 413, in fetch\\\r\n raise error\\\r\nNotALeaderError: No write operations are allowed directly on this database. Writes must pass through the leader. The role of this server is: FOLLOWER\\\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/275", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/275/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/275/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/275", "id": 388132367, "node_id": "MDU6SXNzdWUzODgxMzIzNjc=", "number": 275, "title": "empty result for simple MATCH query on non empty db", "user": {"login": "simkoc", "id": 3002359, "node_id": "MDQ6VXNlcjMwMDIzNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3002359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simkoc", "html_url": "https://github.com/simkoc", "followers_url": "https://api.github.com/users/simkoc/followers", "following_url": "https://api.github.com/users/simkoc/following{/other_user}", "gists_url": "https://api.github.com/users/simkoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/simkoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simkoc/subscriptions", "organizations_url": "https://api.github.com/users/simkoc/orgs", "repos_url": "https://api.github.com/users/simkoc/repos", "events_url": "https://api.github.com/users/simkoc/events{/privacy}", "received_events_url": "https://api.github.com/users/simkoc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-06T09:46:24Z", "updated_at": "2018-12-06T11:13:42Z", "closed_at": "2018-12-06T10:26:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using:\r\nneo4j-driver 1.7.1\r\npython 3.6.7\r\n\r\nIt might be related to issue #134 - I am getting an empty result for just querying 3 arbitrary nodes from the database:\r\n\r\n```\r\nfrom neo4j import GraphDatabase\r\n\r\n\r\nHOST = \"bolt://localhost\"\r\nUSER = \"neo4j\"\r\nPASSWORD = \"123456\"\r\n\r\n\r\ndef connect(host=HOST, user=USER, pwd=PASSWORD):\r\n    return GraphDatabase.driver(host, auth=(user, pwd))\r\n\r\n\r\ndef run_cypher_query(session, query):\r\n    return session.run(query)\r\n\r\n\r\nwith connect() as driver:\r\n    with driver.session() as sess:\r\n        print(run_cypher_query(sess, \"MATCH (m) RETURN m LIMIT 3\").__dict__)\r\n```\r\n\r\nThe result is\r\n\r\n`{'_session': <neo4j.Session object at 0x7fd1a05be7f0>, '_hydrant': <neo4j.types.PackStreamHydrator object at 0x7fd1a058b518>, '_metadata': {'statement': 'MATCH (m) RETURN m LIMIT 3', 'parameters': {}, 'server': <neobolt.direct.ServerInfo object at 0x7fd191c366d8>, 'protocol_version': 3, 't_first': 0, 'fields': ['m']}, '_records': deque([]), '_summary': None}`\r\n\r\nwhich cannot be as the database contains 251 nodes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/274", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/274/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/274/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/274", "id": 383852050, "node_id": "MDU6SXNzdWUzODM4NTIwNTA=", "number": 274, "title": "Neobolt timeout on long running query...", "user": {"login": "oblodgett", "id": 1200292, "node_id": "MDQ6VXNlcjEyMDAyOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1200292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oblodgett", "html_url": "https://github.com/oblodgett", "followers_url": "https://api.github.com/users/oblodgett/followers", "following_url": "https://api.github.com/users/oblodgett/following{/other_user}", "gists_url": "https://api.github.com/users/oblodgett/gists{/gist_id}", "starred_url": "https://api.github.com/users/oblodgett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oblodgett/subscriptions", "organizations_url": "https://api.github.com/users/oblodgett/orgs", "repos_url": "https://api.github.com/users/oblodgett/repos", "events_url": "https://api.github.com/users/oblodgett/events{/privacy}", "received_events_url": "https://api.github.com/users/oblodgett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-23T14:55:42Z", "updated_at": "2018-11-23T17:37:28Z", "closed_at": "2018-11-23T17:37:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I have a long running query and at about the 5:15 mark it fails, and in the logs I see something like this:\r\n\r\n`2018-11-23 14:14:38 DEBUG: neobolt:291: [#89C4]  C: RUN ... `\r\n`2018-11-23 14:14:38 DEBUG: neobolt:299: [#89C4]  C: PULL_ALL`\r\n`2018-11-23 14:20:02 DEBUG: neobolt:510: [#89C4]  C: <CLOSE>`\r\n\r\nWhen I catch the error I get the following output:\r\nFailed to read from defunct connection Address(host='10.1.103.132', port=7687)\r\n\r\nNow diving down into the neobolt package I find that if I change the following:\r\n\r\n`direct.py:58`\r\n`ChunkedInputBuffer = import_best(\"neobolt.bolt._io\", \"neobolt.bolt.io\").ChunkedInputBuffer`\r\n\r\nto\r\n\r\n`from neobolt.bolt.io import ChunkedInputBuffer`\r\n\r\nThe query finishes in about 2:30 and there is no errors, not sure if this is the right group to post this issue? Anyway thanks for you help.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/273", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/273/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/273/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/273", "id": 383760184, "node_id": "MDU6SXNzdWUzODM3NjAxODQ=", "number": 273, "title": "Python neo4j bolt driver loses connection after context switch", "user": {"login": "Sasorien", "id": 4102087, "node_id": "MDQ6VXNlcjQxMDIwODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4102087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sasorien", "html_url": "https://github.com/Sasorien", "followers_url": "https://api.github.com/users/Sasorien/followers", "following_url": "https://api.github.com/users/Sasorien/following{/other_user}", "gists_url": "https://api.github.com/users/Sasorien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sasorien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sasorien/subscriptions", "organizations_url": "https://api.github.com/users/Sasorien/orgs", "repos_url": "https://api.github.com/users/Sasorien/repos", "events_url": "https://api.github.com/users/Sasorien/events{/privacy}", "received_events_url": "https://api.github.com/users/Sasorien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-23T09:54:30Z", "updated_at": "2019-03-04T19:37:45Z", "closed_at": "2019-03-04T19:37:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there, \r\n\r\ni still have a problem with this driver, that can't be answered on StackOverflow yet.\r\nI hope here are some specialists that can help me out on this.\r\n\r\nSummary:\r\nI have a backend written in django which uses the neo4j bolt driver to communicate with the neo4j graph db.\r\nI use a Singleton to handle the connection and the bolt driver closes the connection, whenever I access it from another location than where the connection was initially established (e.g. I open the connection in a view, access it in a signal and when I try to save in the view the connection is lost).\r\n\r\nThe full StackOverflow question with example code: https://stackoverflow.com/questions/53190676/python-neo4j-bolt-driver-loses-connection-after-context-switch\r\n\r\nSome Additional infos according to the contributing guidelines i missed in the StackOverflow question:\r\nWe're operating on Windows10 and Mac OS Mojave and currently using Neo4j 3.4.5 as a single machine and Python 3.6.5.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/272", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/272/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/272/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/272", "id": 379417115, "node_id": "MDU6SXNzdWUzNzk0MTcxMTU=", "number": 272, "title": "Asyncio support", "user": {"login": "mjmare", "id": 1711378, "node_id": "MDQ6VXNlcjE3MTEzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmare", "html_url": "https://github.com/mjmare", "followers_url": "https://api.github.com/users/mjmare/followers", "following_url": "https://api.github.com/users/mjmare/following{/other_user}", "gists_url": "https://api.github.com/users/mjmare/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmare/subscriptions", "organizations_url": "https://api.github.com/users/mjmare/orgs", "repos_url": "https://api.github.com/users/mjmare/repos", "events_url": "https://api.github.com/users/mjmare/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-10T12:10:01Z", "updated_at": "2018-11-20T09:28:37Z", "closed_at": "2018-11-12T10:17:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have async support in the Neo4j python driver. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/266", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/266/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/266/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/266", "id": 374788307, "node_id": "MDU6SXNzdWUzNzQ3ODgzMDc=", "number": 266, "title": "Rolling back transaction leads to AttributeError", "user": {"login": "istrel", "id": 5306643, "node_id": "MDQ6VXNlcjUzMDY2NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5306643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/istrel", "html_url": "https://github.com/istrel", "followers_url": "https://api.github.com/users/istrel/followers", "following_url": "https://api.github.com/users/istrel/following{/other_user}", "gists_url": "https://api.github.com/users/istrel/gists{/gist_id}", "starred_url": "https://api.github.com/users/istrel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/istrel/subscriptions", "organizations_url": "https://api.github.com/users/istrel/orgs", "repos_url": "https://api.github.com/users/istrel/repos", "events_url": "https://api.github.com/users/istrel/events{/privacy}", "received_events_url": "https://api.github.com/users/istrel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 207837127, "node_id": "MDU6TGFiZWwyMDc4MzcxMjc=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-10-28T19:18:12Z", "updated_at": "2018-11-07T13:12:59Z", "closed_at": "2018-11-01T15:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Prerequisites:\r\n- we have 3 servers (one follower, two leaders) behind DNS\r\n- Neo4J address configured this way: 'bolt+routing://private_domain:7687'\r\n\r\nWhen we shutdown leader, we start facing such stack traces (`...` replaced parts of stack in our code);\r\n```\r\nOSError: [Errno 113] No route to host\r\n  ...\r\n  File \"/code/db/neo4j.py\", line 22, in read_transaction\r\n    return self.session.read_transaction(*args, **kwargs)\r\n  File \"neo4j/__init__.py\", line 697, in read_transaction\r\n    return self._run_transaction(READ_ACCESS, unit_of_work, *args, **kwargs)\r\n  File \"neo4j/__init__.py\", line 664, in _run_transaction\r\n    self._open_transaction(access_mode, metadata, timeout)\r\n  File \"neo4j/__init__.py\", line 610, in _open_transaction\r\n    self._connect(access_mode)\r\n  File \"neo4j/__init__.py\", line 367, in _connect\r\n    self._connection = self._acquirer(access_mode)\r\n  File \"neobolt/routing.py\", line 425, in acquire\r\n    connection = self.acquire_direct(address)  # should always be a resolved address\r\n  File \"neobolt/direct.py\", line 575, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"neo4j/__init__.py\", line 255, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"neobolt/direct.py\", line 937, in connect\r\n    raise last_error\r\n  File \"neobolt/direct.py\", line 927, in connect\r\n    s = _connect(resolved_address, **config)\r\n  File \"neobolt/direct.py\", line 793, in _connect\r\n    s.connect(resolved_address)\r\nAttributeError: 'NoneType' object has no attribute 'rollback'\r\n  ...\r\n  File \"neo4j/__init__.py\", line 358, in __exit__\r\n    self.close()\r\n  File \"neo4j/__init__.py\", line 391, in close\r\n    self.rollback_transaction()\r\n  File \"neo4j/__init__.py\", line 643, in rollback_transaction\r\n    self._connection.rollback(on_success=metadata.update)\r\n```\r\n\r\nHere is some logs from neobolt logger captured immediately before exception:\r\n```\r\n01:28:56 [#B50A]  C: RESET\r\n01:28:56 [#B50A]  S: IGNORED\r\n01:28:56 [#B50A]  S: SUCCESS {}\r\n01:28:57 [#0000]  C: <RESOLVE> Address(host='10.230.195.3', port=7687)\r\n01:28:57 [#0000]  C: <OPEN> ('10.230.195.3', 7687)\r\n01:29:00 [#0000]  C: <ERROR> OSError 113 'No route to host'\r\n01:29:00 [#0000]  C: <CLOSE> ('10.230.195.3', 7687)\r\n```\r\n\r\nPython libraries:\r\nneo4j==1.7.0\r\nneobolt==1.7.0\r\n\r\nNeo4j version: 3.4.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/265", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/265/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/265/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/265", "id": 373558532, "node_id": "MDU6SXNzdWUzNzM1NTg1MzI=", "number": 265, "title": "Bump the major version between 1.5.3 and 1.7.0 due to backward compatibility break", "user": {"login": "chiffa", "id": 1384395, "node_id": "MDQ6VXNlcjEzODQzOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1384395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chiffa", "html_url": "https://github.com/chiffa", "followers_url": "https://api.github.com/users/chiffa/followers", "following_url": "https://api.github.com/users/chiffa/following{/other_user}", "gists_url": "https://api.github.com/users/chiffa/gists{/gist_id}", "starred_url": "https://api.github.com/users/chiffa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chiffa/subscriptions", "organizations_url": "https://api.github.com/users/chiffa/orgs", "repos_url": "https://api.github.com/users/chiffa/repos", "events_url": "https://api.github.com/users/chiffa/events{/privacy}", "received_events_url": "https://api.github.com/users/chiffa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-24T16:02:24Z", "updated_at": "2018-10-31T16:35:37Z", "closed_at": "2018-10-31T16:35:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Prior code retrieving properties from neo4j node instances \r\n`` node.properties['property_name']`` fails with the 1.7.0 version, due to the fact that ``properties`` was renamed to ``_properties``. \r\n\r\nThis is a backward compatibility-breaking change and as per [semantic version spec #8 ](https://semver.org/#spec-item-8) has to be accompanied by a major version bump.\r\n\r\nPlease release a patch to support legacy behavior or bump the major version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/264", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/264/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/264/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/264", "id": 369938932, "node_id": "MDU6SXNzdWUzNjk5Mzg5MzI=", "number": 264, "title": "TransientError and performance bottleneck", "user": {"login": "MS-AvivG", "id": 36135200, "node_id": "MDQ6VXNlcjM2MTM1MjAw", "avatar_url": "https://avatars1.githubusercontent.com/u/36135200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MS-AvivG", "html_url": "https://github.com/MS-AvivG", "followers_url": "https://api.github.com/users/MS-AvivG/followers", "following_url": "https://api.github.com/users/MS-AvivG/following{/other_user}", "gists_url": "https://api.github.com/users/MS-AvivG/gists{/gist_id}", "starred_url": "https://api.github.com/users/MS-AvivG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MS-AvivG/subscriptions", "organizations_url": "https://api.github.com/users/MS-AvivG/orgs", "repos_url": "https://api.github.com/users/MS-AvivG/repos", "events_url": "https://api.github.com/users/MS-AvivG/events{/privacy}", "received_events_url": "https://api.github.com/users/MS-AvivG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-14T20:11:50Z", "updated_at": "2018-10-15T09:02:10Z", "closed_at": "2018-10-15T09:02:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi fellows!\r\n\r\nI have a persistent problem that I'm struggling to solve.\r\nI run the following query:\r\n\r\n    MATCH (person: Person {name: 'Mark'})\r\n    WITH person\r\n    UNWIND person.match_list AS match\r\n    MATCH (pet: Animal) \r\n    WHERE pet.name_regex =~ match\r\n    MERGE (person)-[:OWNS_PET]->(pet) \r\n    RETURN pet\r\n\r\nThe query matches a person by name (unique index) and unwinds its match_list, which is a list of regular expressions. Then for each regular expression, I check if any pet name matches (~10 regular expressions in match_list, ~20K Person nodes, ~30k Animal nodes, ~500k total nodes & relationships) and if I get a match I connect the Person and the Animal nodes.\r\n\r\nHowever, this query has two drawbacks:\r\n\r\n1. It is running very slow (more than 500ms to complete on 4 cores workstation 32GB RAM)\r\n2. When I run it multithreaded I get the following exception:\r\n\r\n```\r\n    neo4j.exceptions.TransientError: ForsetiClient[3] can't acquire ExclusiveLock{owner=ForsetiClient[14]} on NODE(1889), because holders of that lock are waiting for ForsetiClient[3].\r\n     Wait list:ExclusiveLock[\r\n    Client[14] waits for [3]]\r\n```\r\n\r\nMy stack is as follows:\r\n\r\n- native graph python driver\r\n- celery with gevent as pool\r\n\r\nI will be glad to improve this query performance and/or fix the multithreading problem. \r\nThanks :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/260", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/260/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/260/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/260", "id": 364642765, "node_id": "MDU6SXNzdWUzNjQ2NDI3NjU=", "number": 260, "title": "Failed to read from defunct connection Address(host='127.0.0.1', port=7687)", "user": {"login": "wbleker", "id": 9681593, "node_id": "MDQ6VXNlcjk2ODE1OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9681593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbleker", "html_url": "https://github.com/wbleker", "followers_url": "https://api.github.com/users/wbleker/followers", "following_url": "https://api.github.com/users/wbleker/following{/other_user}", "gists_url": "https://api.github.com/users/wbleker/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbleker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbleker/subscriptions", "organizations_url": "https://api.github.com/users/wbleker/orgs", "repos_url": "https://api.github.com/users/wbleker/repos", "events_url": "https://api.github.com/users/wbleker/events{/privacy}", "received_events_url": "https://api.github.com/users/wbleker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-27T20:34:09Z", "updated_at": "2018-11-01T11:50:21Z", "closed_at": "2018-11-01T11:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are having issues with the python bolt driver and how it handles working with key value pairs, in our example the key is an int, in 1.5.3 it works, but in 1.6.x and 1.7.x it fails.\r\n\r\nIn the repo below is an example script that can be used with different driver versions to reproduce the error.\r\n\r\nhttps://github.com/wbleker/neo4j_bolt_test.git", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/258", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/258/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/258/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/258", "id": 360311139, "node_id": "MDU6SXNzdWUzNjAzMTExMzk=", "number": 258, "title": "Output in STDOUT after transactional function", "user": {"login": "danodonovan", "id": 156329, "node_id": "MDQ6VXNlcjE1NjMyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/156329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danodonovan", "html_url": "https://github.com/danodonovan", "followers_url": "https://api.github.com/users/danodonovan/followers", "following_url": "https://api.github.com/users/danodonovan/following{/other_user}", "gists_url": "https://api.github.com/users/danodonovan/gists{/gist_id}", "starred_url": "https://api.github.com/users/danodonovan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danodonovan/subscriptions", "organizations_url": "https://api.github.com/users/danodonovan/orgs", "repos_url": "https://api.github.com/users/danodonovan/repos", "events_url": "https://api.github.com/users/danodonovan/events{/privacy}", "received_events_url": "https://api.github.com/users/danodonovan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-14T13:45:19Z", "updated_at": "2018-09-14T14:16:23Z", "closed_at": "2018-09-14T14:16:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "These lines https://github.com/neo4j/neo4j-python-driver/blob/1.7/neo4j/__init__.py#L654 cause noise in the console that can't be controlled - I think they can be safely removed!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/256", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/256/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/256/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/256", "id": 354595913, "node_id": "MDU6SXNzdWUzNTQ1OTU5MTM=", "number": 256, "title": "Docs for temporal data types inaccurate", "user": {"login": "mjmare", "id": 1711378, "node_id": "MDQ6VXNlcjE3MTEzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmare", "html_url": "https://github.com/mjmare", "followers_url": "https://api.github.com/users/mjmare/followers", "following_url": "https://api.github.com/users/mjmare/following{/other_user}", "gists_url": "https://api.github.com/users/mjmare/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmare/subscriptions", "organizations_url": "https://api.github.com/users/mjmare/orgs", "repos_url": "https://api.github.com/users/mjmare/repos", "events_url": "https://api.github.com/users/mjmare/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-28T06:58:50Z", "updated_at": "2018-09-24T15:46:17Z", "closed_at": "2018-09-24T14:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://neo4j.com/docs/api/python-driver/current/types/temporal.html suggests that a Cypher Date is mapped to a standard datetime.date, whereas in actuality it is mapped to a neotime.Date.\r\nThe neotime.Date has no provisions to be cast as a standard date AFAICT.\r\n\r\nStandard date(time)s would make interoperability much more convenient. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/255", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/255/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/255/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/255", "id": 349129181, "node_id": "MDU6SXNzdWUzNDkxMjkxODE=", "number": 255, "title": "AttributeError: 'NoneType' object has no attribute 'acquire': self._pool is None in direct.py", "user": {"login": "saptwa", "id": 35404858, "node_id": "MDQ6VXNlcjM1NDA0ODU4", "avatar_url": "https://avatars3.githubusercontent.com/u/35404858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saptwa", "html_url": "https://github.com/saptwa", "followers_url": "https://api.github.com/users/saptwa/followers", "following_url": "https://api.github.com/users/saptwa/following{/other_user}", "gists_url": "https://api.github.com/users/saptwa/gists{/gist_id}", "starred_url": "https://api.github.com/users/saptwa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saptwa/subscriptions", "organizations_url": "https://api.github.com/users/saptwa/orgs", "repos_url": "https://api.github.com/users/saptwa/repos", "events_url": "https://api.github.com/users/saptwa/events{/privacy}", "received_events_url": "https://api.github.com/users/saptwa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-09T13:32:07Z", "updated_at": "2018-08-10T07:38:21Z", "closed_at": "2018-08-10T07:38:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a pdf file and from which I extract two corpora. The function which returns the keywords is called twice in a loop, once for each corpus. For the first corpus, it extracts the keywords just fine. However, for the 2nd corpus, I'm getting an error like this:\r\n\r\n```\r\n File \"/Users/rishi/Downloads/Lectures/idp/Rake/Rake/conceptmap/models/unsupervised/graphaware_nlp/graphaware.py\", line 82, in process\r\n   Graphaware.create_pipeline()\r\n File \"/Users/rishi/Downloads/Lectures/idp/Rake/Rake/conceptmap/models/unsupervised/graphaware_nlp/graphaware.py\", line 151, in create_pipeline\r\n   is_customstopwords_present = Graphaware.customStopWords_present()\r\n File \"/Users/rishi/Downloads/Lectures/idp/Rake/Rake/conceptmap/models/unsupervised/graphaware_nlp/graphaware.py\", line 130, in customStopWords_present\r\n   with Graphaware.driver.session() as session:\r\n File \"/Users/rishi/.virtualenvs/keyphrase-extraction-centrality/lib/python3.6/site-packages/neo4j/v1/direct.py\", line 81, in session\r\n   return Session(self._pool.acquire, access_mode, **parameters)\r\nAttributeError: 'NoneType' object has no attribute 'acquire'\r\n```\r\n\r\nThese are the tail from the logs:\r\n```\r\nSaptwarshis-MacBook-Pro:logs rishi$ tail neo4j.log\r\n2018-08-09 11:31:40.633+0000 INFO  Taking default pipeline from configuration : customStopWords\r\n2018-08-09 11:31:40.642+0000 INFO  Time for pipeline annotation: 8. Text lenght: 5\r\n2018-08-09 11:31:40.643+0000 INFO  Start storing annotatedText 342\r\n2018-08-09 11:31:40.645+0000 INFO  end storing annotatedText 342\r\n2018-08-09 11:31:40.645+0000 INFO  Notifying listeners for event {}\r\n2018-08-09 11:31:40.646+0000 INFO  Notifying listeners for event {}\r\n2018-08-09 11:31:40.651+0000 WARN  Threshold hit after 1 iterations\r\n2018-08-09 11:31:40.654+0000 INFO  --- Results:\r\n2018-08-09 11:31:40.655+0000 INFO  AnnotatedText with ID 349 processed. Result: true\r\n2018-08-09 11:31:40.661+0000 INFO  Notifying listeners for event {}\r\nSaptwarshis-MacBook-Pro:logs rishi$ tail debug.log\r\n2018-08-09 11:31:40.634+0000 INFO [c.g.n.u.ProcessorUtils] Taking default pipeline from configuration : customStopWords\r\n2018-08-09 11:31:40.643+0000 INFO [c.g.n.p.s.StanfordTextProcessor] Time for pipeline annotation: 8. Text lenght: 5\r\n2018-08-09 11:31:40.643+0000 INFO [c.g.n.p.p.AnnotatedTextPersister] Start storing annotatedText 342\r\n2018-08-09 11:31:40.645+0000 INFO [c.g.n.p.p.AnnotatedTextPersister] end storing annotatedText 342\r\n2018-08-09 11:31:40.645+0000 INFO [c.g.n.e.EventDispatcher] Notifying listeners for event {}\r\n2018-08-09 11:31:40.647+0000 INFO [c.g.n.e.EventDispatcher] Notifying listeners for event {}\r\n2018-08-09 11:31:40.652+0000 WARN [c.g.n.m.p.PageRank] Threshold hit after 1 iterations\r\n2018-08-09 11:31:40.654+0000 INFO [c.g.n.m.t.TextRank] --- Results:\r\n2018-08-09 11:31:40.655+0000 INFO [c.g.n.m.t.TextRankProcessor] AnnotatedText with ID 349 processed. Result: true\r\n2018-08-09 11:31:40.661+0000 INFO [c.g.n.e.EventDispatcher] Notifying listeners for event {}\r\nSaptwarshis-MacBook-Pro:logs rishi$\r\n```\r\nHere is the code:\r\n```\r\nfrom conceptmap.models.base import NLPBaseItem\r\nfrom neo4j.v1 import GraphDatabase\r\nfrom operator import itemgetter\r\n\r\nclass Graphaware(NLPBaseItem):\r\n    driver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\n\r\n\r\n    def __init__(self, data):\r\n        # self.lecturewise_generated_keywords = [[]] * len(data)\r\n        self.lecturewise_generated_keywords = [[]]\r\n        self.generated_keywords_for_each_lecture = []\r\n\r\n        super(Graphaware, self).__init__(data=data)\r\n\r\n\r\n    def process(self):\r\n        self.lecturewise_generated_keywords = [[]] * len(self.data)\r\n        lecturewise_list_of_text = self.data\r\n\r\n        # Initialize pipeline\r\n        Graphaware.create_pipeline()\r\n        Graphaware.set_default_pipeline()\r\n        Graphaware.set_fallback_lang()\r\n\r\n        # create index for populating lecturewise_generated_keywords\r\n        i = 0\r\n        # select each lecture from lecturewise_list_of_text\r\n        for list_of_text in lecturewise_list_of_text:\r\n            # each lecture is a list of text: for ex, lec: ['text1', 'text2', 'text3', ...]\r\n            lecture_delim  = \". \"\r\n            lecture_corpus = lecture_delim.join(list_of_text)\r\n            # Create a node with property 'text' set to lecture_corpus\r\n            Graphaware.add_text_node(lecture_corpus)\r\n            # Annotate the text & generate the keywords\r\n            Graphaware.annotate()\r\n            Graphaware.generate_keywords()\r\n            keywords = Graphaware.return_keywords()\r\n            # Delete everything in the database\r\n            Graphaware.clean_database()\r\n            for keyword in keywords:\r\n                self.generated_keywords_for_each_lecture.append((keyword, round(len(keyword) / 100, 3)))\r\n\r\n            # sort generated_keywords_for_each_lecture according to scores of keyphrases\r\n            self.generated_keywords_for_each_lecture.sort(key=itemgetter(1), reverse=True)\r\n            # store all keywords from a lecture into an element of lecturewise_generated_keywords\r\n            self.lecturewise_generated_keywords[i] = self.generated_keywords_for_each_lecture\r\n            i = i + 1\r\n            self.generated_keywords_for_each_lecture = []\r\n\r\n        # Close the connection to the database\r\n        Graphaware.driver.close()\r\n\r\n    def score_keyphrases(self):\r\n        keyphrases = self.lecturewise_generated_keywords\r\n        print(\"keyphrases: {}\".format(keyphrases))\r\n        return keyphrases\r\n\r\n    @staticmethod\r\n    def customStopWords_present():\r\n        \"\"\"\r\n        Check if pipeline 'customStopWords' already exists\r\n        :return:\r\n        \"\"\"\r\n        with Graphaware.driver.session() as session:\r\n            result = session.run(\"CALL ga.nlp.processor.getPipelines\")\r\n            session.close()\r\n            is_customstopwords_present = False\r\n            pipeline_dict = result.data()\r\n            num_pipelines = len(pipeline_dict)\r\n            # print(\"num_pipelines: {}\".format(num_pipelines))\r\n            for i in range(0, num_pipelines):\r\n                pipeline_i = pipeline_dict[i]\r\n                pipeline_name = pipeline_i['name']\r\n                if \"customStopWords\" == pipeline_name:\r\n                    is_customstopwords_present = True\r\n                    break\r\n            return is_customstopwords_present\r\n\r\n    @staticmethod\r\n    def create_pipeline():\r\n        \"\"\"\r\n        Create a pipeline\r\n        :return:\r\n        \"\"\"\r\n        is_customstopwords_present = Graphaware.customStopWords_present()\r\n        if is_customstopwords_present:\r\n            print(\"pipeline 'customStopWords' already exists\")\r\n        else:\r\n            with Graphaware.driver.session() as session:\r\n                session.run(\r\n                \"CALL ga.nlp.processor.addPipeline({textProcessor: 'com.graphaware.nlp.processor.stanford.StanfordTextProcessor', \\\r\n                name: 'customStopWords', processingSteps: {tokenize: true, ner: true, dependency: true, coref: true, relations: true, cleanxml: true, truecase: true}, \\\r\n                stopWords: '+, result, all, during', threadNumber: 20})\")\r\n                session.close()\r\n\r\n\r\n    @staticmethod\r\n    def set_default_pipeline():\r\n        \"\"\"\r\n        Set a  default pipeline\r\n        :return:\r\n        \"\"\"\r\n        with Graphaware.driver.session() as session:\r\n            session.run(\"CALL ga.nlp.processor.pipeline.default('customStopWords')\")\r\n            session.close()\r\n\r\n    @staticmethod\r\n    def set_fallback_lang():\r\n        \"\"\"\r\n        Set fallback language to English\r\n        :return:\r\n        \"\"\"\r\n        with Graphaware.driver.session() as session:\r\n            session.run(\"CALL ga.nlp.config.set('SETTING_fallbackLanguage', 'en')\")\r\n            session.close()\r\n\r\n    @staticmethod\r\n    def add_text_node(node_text):\r\n        \"\"\"\r\n        Create a node with label 'Text' and set property 'text' of node to node_text\r\n        :param node_text:\r\n        :return:\r\n        \"\"\"\r\n        with Graphaware.driver.session() as session:\r\n            session.run(\"CREATE (n:Text {text: $node_text})\", node_text=node_text)\r\n            session.close()\r\n\r\n    @staticmethod\r\n    def annotate():\r\n        \"\"\"\r\n        Annotate the text.\r\n        The extraction is done via the annotate procedure which is the entry point to text information extraction\r\n        :return:\r\n        \"\"\"\r\n        with Graphaware.driver.session() as session:\r\n            session.run(\"\"\"\\\r\n            MATCH (n:Text)\r\n            CALL ga.nlp.annotate({text: n.text, id: id(n)})\r\n            YIELD result\r\n            MERGE (n)-[:HAS_ANNOTATED_TEXT]->(result)\r\n            RETURN result\r\n            \"\"\")\r\n            session.close()\r\n\r\n    @staticmethod\r\n    def generate_keywords():\r\n        \"\"\"\r\n        Generate keywords\r\n        :return:\r\n        \"\"\"\r\n        with Graphaware.driver.session() as session:\r\n            session.run(\"\"\"\\\r\n            MATCH (a:AnnotatedText)\r\n            CALL ga.nlp.ml.textRank({annotatedText: a, stopwords: '+,other,email', useDependencies: true})\r\n            YIELD result RETURN result\r\n            \"\"\")\r\n            session.close()\r\n\r\n    @staticmethod\r\n    def return_keywords():\r\n        with Graphaware.driver.session() as session:\r\n            result = session.run(\"\"\"\\\r\n            MATCH (n:Keyword) \r\n            RETURN n.originalTagValue\r\n            \"\"\")\r\n            session.close()\r\n        keywords = result.data()\r\n        keywordlist = []\r\n        for keyword in keywords:\r\n            keywordlist.append(keyword['n.originalTagValue'])\r\n        return keywordlist\r\n        # return df(result.data())\r\n\r\n    @staticmethod\r\n    def inspect_multiword_keyphrases():\r\n        \"\"\"\r\n        Inspect multi-word keywords\r\n        :return:\r\n        \"\"\"\r\n        with Graphaware.driver.session() as session:\r\n            result = session.run(\"\"\"\\\r\n            MATCH (k:Keyword)-[:DESCRIBES]->(a:AnnotatedText)\r\n            WHERE size(split(k.value, \" \"))>1\r\n            RETURN k.value AS Keyphrase, count(*) AS n_lessons\r\n            ORDER BY n_lessons DESC\r\n            \"\"\")\r\n            session.close()\r\n            print(\"multi word keyphrases: {}\".format(result.data()))\r\n\r\n    @staticmethod\r\n    def clean_database():\r\n        \"\"\"\r\n        Delete everything in the database\r\n        :return:\r\n        \"\"\"\r\n        with Graphaware.driver.session() as session:\r\n            session.run(\"\"\"\\\r\n            MATCH (n)\r\n            DETACH DELETE n\r\n            \"\"\")\r\n            session.close()\r\n```\r\n\r\nIt seems like self._pool in neo4j/v1/direct.py is not initialized during the 2nd time. Could someone please help me in figuring out why?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/254", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/254/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/254/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/254", "id": 348962066, "node_id": "MDU6SXNzdWUzNDg5NjIwNjY=", "number": 254, "title": "neo4j.exceptions.ServiceUnavailable", "user": {"login": "aqzwy", "id": 18528119, "node_id": "MDQ6VXNlcjE4NTI4MTE5", "avatar_url": "https://avatars1.githubusercontent.com/u/18528119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aqzwy", "html_url": "https://github.com/aqzwy", "followers_url": "https://api.github.com/users/aqzwy/followers", "following_url": "https://api.github.com/users/aqzwy/following{/other_user}", "gists_url": "https://api.github.com/users/aqzwy/gists{/gist_id}", "starred_url": "https://api.github.com/users/aqzwy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aqzwy/subscriptions", "organizations_url": "https://api.github.com/users/aqzwy/orgs", "repos_url": "https://api.github.com/users/aqzwy/repos", "events_url": "https://api.github.com/users/aqzwy/events{/privacy}", "received_events_url": "https://api.github.com/users/aqzwy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031823410, "node_id": "MDU6TGFiZWwxMDMxODIzNDEw", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/more%20information%20needed", "name": "more information needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-09T03:16:18Z", "updated_at": "2018-10-04T10:09:08Z", "closed_at": "2018-10-04T10:09:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "After a period of normal operation, the program went wrong.\r\n\r\nneo4j.exceptions.ServiceUnavailable: Cannot acquire connection to Address(host=bolt_url, port=7687) \r\n\r\nThere is no error in restarting the program. After a while, the same mistake will occur.\r\n\r\nI use neo4j.v1-1.5.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/252", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/252/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/252/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/252", "id": 341748314, "node_id": "MDU6SXNzdWUzNDE3NDgzMTQ=", "number": 252, "title": "neo4j.v1.exceptions.ProtocolError: Server closed connection", "user": {"login": "bingosxs", "id": 12882216, "node_id": "MDQ6VXNlcjEyODgyMjE2", "avatar_url": "https://avatars3.githubusercontent.com/u/12882216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bingosxs", "html_url": "https://github.com/bingosxs", "followers_url": "https://api.github.com/users/bingosxs/followers", "following_url": "https://api.github.com/users/bingosxs/following{/other_user}", "gists_url": "https://api.github.com/users/bingosxs/gists{/gist_id}", "starred_url": "https://api.github.com/users/bingosxs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bingosxs/subscriptions", "organizations_url": "https://api.github.com/users/bingosxs/orgs", "repos_url": "https://api.github.com/users/bingosxs/repos", "events_url": "https://api.github.com/users/bingosxs/events{/privacy}", "received_events_url": "https://api.github.com/users/bingosxs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031823410, "node_id": "MDU6TGFiZWwxMDMxODIzNDEw", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/more%20information%20needed", "name": "more information needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-17T03:01:19Z", "updated_at": "2018-10-08T15:42:36Z", "closed_at": "2018-10-08T15:42:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error when I run the following example code from the guide.\r\n**The bizarreness is that it runs normally if I use python3.**\r\n```\r\nfrom neo4j.v1 import GraphDatabase\r\n\r\nuri = \"bolt://localhost:7687\"\r\ndriver = GraphDatabase.driver(uri, auth=(\"neo4j\", \"password\"))\r\n\r\ndef print_friends_of(tx, name):\r\n    for record in tx.run(\"MATCH (a:Person)-[:KNOWS]->(f) \"\r\n                         \"WHERE a.name = {name} \"\r\n                         \"RETURN f.name\", name=name):\r\n        print(record[\"f.name\"])\r\n\r\nwith driver.session() as session:\r\n    session.read_transaction(print_friends_of, \"Alice\")\r\n```\r\nThe versions of related envs:\r\n\r\n1.   `Python 2.7.12 (default, Dec  4 2017, 14:50:18) `\r\n\r\n2. neo4j-community-3.4.1\r\n \r\n3. The neo4j is started by:\r\n  `neo4j-community-3.4.1/bin/neo4j start`\r\n\r\nneo4j-driver is installed by  pip tool.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/251", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/251/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/251/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/251", "id": 339171567, "node_id": "MDU6SXNzdWUzMzkxNzE1Njc=", "number": 251, "title": "Getting error - ServiceUnavailable: Failed to establish connection to ('127.0.0.1', 7687) (reason 61)", "user": {"login": "tstreamDOTh", "id": 11137394, "node_id": "MDQ6VXNlcjExMTM3Mzk0", "avatar_url": "https://avatars0.githubusercontent.com/u/11137394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tstreamDOTh", "html_url": "https://github.com/tstreamDOTh", "followers_url": "https://api.github.com/users/tstreamDOTh/followers", "following_url": "https://api.github.com/users/tstreamDOTh/following{/other_user}", "gists_url": "https://api.github.com/users/tstreamDOTh/gists{/gist_id}", "starred_url": "https://api.github.com/users/tstreamDOTh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tstreamDOTh/subscriptions", "organizations_url": "https://api.github.com/users/tstreamDOTh/orgs", "repos_url": "https://api.github.com/users/tstreamDOTh/repos", "events_url": "https://api.github.com/users/tstreamDOTh/events{/privacy}", "received_events_url": "https://api.github.com/users/tstreamDOTh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1031823410, "node_id": "MDU6TGFiZWwxMDMxODIzNDEw", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/more%20information%20needed", "name": "more information needed", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-07-07T20:12:12Z", "updated_at": "2018-11-01T10:36:35Z", "closed_at": "2018-11-01T10:36:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to run the example given for python at https://neo4j.com/developer/\r\nI get the following error\r\n\r\n\r\n---------------------------------------------------------------------------\r\nConnectionRefusedError                    Traceback (most recent call last)\r\n/usr/local/lib/python3.7/site-packages/neo4j/bolt/connection.py in _connect(resolved_address, **config)\r\n    577         log_debug(\"~~ [CONNECT] %s\", resolved_address)\r\n--> 578         s.connect(resolved_address)\r\n    579         s.settimeout(t)\r\n\r\nConnectionRefusedError: [Errno 61] Connection refused\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nServiceUnavailable                        Traceback (most recent call last)\r\n<ipython-input-9-56662974c754> in <module>()\r\n      1 from neo4j.v1 import GraphDatabase, basic_auth\r\n      2 \r\n----> 3 session = GraphDatabase.driver(\"bolt://localhost\", auth=basic_auth(\"neo4j\", \"<password>\")).session()\r\n      4 \r\n      5 # Insert data\r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/v1/api.py in driver(cls, uri, **config)\r\n     86         :class:`.Driver` subclass instance directly.\r\n     87         \"\"\"\r\n---> 88         return Driver(uri, **config)\r\n     89 \r\n     90 \r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/v1/api.py in __new__(cls, uri, **config)\r\n    125         for subclass in Driver.__subclasses__():\r\n    126             if parsed.scheme == subclass.uri_scheme:\r\n--> 127                 return subclass(uri, **config)\r\n    128         raise ValueError(\"URI scheme %r not supported\" % parsed.scheme)\r\n    129 \r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/v1/direct.py in __new__(cls, uri, **config)\r\n     71 \r\n     72         pool = DirectConnectionPool(connector, instance.address, **config)\r\n---> 73         pool.release(pool.acquire())\r\n     74         instance._pool = pool\r\n     75         instance._max_retry_time = config.get(\"max_retry_time\", default_config[\"max_retry_time\"])\r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/v1/direct.py in acquire(self, access_mode)\r\n     42 \r\n     43     def acquire(self, access_mode=None):\r\n---> 44         return self.acquire_direct(self.address)\r\n     45 \r\n     46 \r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/bolt/connection.py in acquire_direct(self, address)\r\n    451                 if can_create_new_connection:\r\n    452                     try:\r\n--> 453                         connection = self.connector(address, self.connection_error_handler)\r\n    454                     except ServiceUnavailable:\r\n    455                         self.remove(address)\r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/v1/direct.py in connector(address, error_handler)\r\n     68 \r\n     69         def connector(address, error_handler):\r\n---> 70             return connect(address, security_plan.ssl_context, error_handler, **config)\r\n     71 \r\n     72         pool = DirectConnectionPool(connector, instance.address, **config)\r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/bolt/connection.py in connect(address, ssl_context, error_handler, **config)\r\n    705         raise ServiceUnavailable(\"Failed to resolve addresses for %s\" % address)\r\n    706     else:\r\n--> 707         raise last_error\r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/bolt/connection.py in connect(address, ssl_context, error_handler, **config)\r\n    695         log_debug(\"~~ [RESOLVED] %s -> %s\", address, resolved_address)\r\n    696         try:\r\n--> 697             s = _connect(resolved_address, **config)\r\n    698             s, der_encoded_server_certificate = _secure(s, address[0], ssl_context, **config)\r\n    699             connection = _handshake(s, resolved_address, der_encoded_server_certificate, error_handler, **config)\r\n\r\n/usr/local/lib/python3.7/site-packages/neo4j/bolt/connection.py in _connect(resolved_address, **config)\r\n    585         _force_close(s)\r\n    586         if error.errno in (61, 99, 111, 10061):\r\n--> 587             raise ServiceUnavailable(\"Failed to establish connection to {!r} (reason {})\".format(resolved_address, error.errno))\r\n    588         else:\r\n    589             raise\r\n\r\nServiceUnavailable: Failed to establish connection to ('127.0.0.1', 7687) (reason 61)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/249", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/249/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/249/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/249", "id": 338143713, "node_id": "MDU6SXNzdWUzMzgxNDM3MTM=", "number": 249, "title": "when i run pass_bookmarks_example.py ,i got the following error, what am i doing wrong?", "user": {"login": "pangguoming", "id": 7269202, "node_id": "MDQ6VXNlcjcyNjkyMDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7269202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pangguoming", "html_url": "https://github.com/pangguoming", "followers_url": "https://api.github.com/users/pangguoming/followers", "following_url": "https://api.github.com/users/pangguoming/following{/other_user}", "gists_url": "https://api.github.com/users/pangguoming/gists{/gist_id}", "starred_url": "https://api.github.com/users/pangguoming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pangguoming/subscriptions", "organizations_url": "https://api.github.com/users/pangguoming/orgs", "repos_url": "https://api.github.com/users/pangguoming/repos", "events_url": "https://api.github.com/users/pangguoming/events{/privacy}", "received_events_url": "https://api.github.com/users/pangguoming/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 207837127, "node_id": "MDU6TGFiZWwyMDc4MzcxMjc=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-04T06:21:28Z", "updated_at": "2018-08-22T09:22:21Z", "closed_at": "2018-08-22T09:22:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "D:\\PythonWorkspace\\test\\venv\\Scripts\\python.exe D:/PythonWorkspace/test/pass_bookmarks_example.py\r\nTraceback (most recent call last):\r\n  File \"D:\\PythonWorkspace\\test\\venv\\lib\\site-packages\\neo4j\\v1\\api.py\", line 56, in last_bookmark\r\n    n[i] = int(n[i])\r\nValueError: invalid literal for int() with base 10: 'tx46'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"D:/PythonWorkspace/test/pass_bookmarks_example.py\", line 68, in <module>\r\n    exam.main()\r\n  File \"D:/PythonWorkspace/test/pass_bookmarks_example.py\", line 62, in main\r\n    session_c.write_transaction(self.create_friendship, \"Alice\", \"Bob\")\r\n  File \"D:\\PythonWorkspace\\test\\venv\\lib\\site-packages\\neo4j\\v1\\api.py\", line 497, in write_transaction\r\n    return self._run_transaction(WRITE_ACCESS, unit_of_work, *args, **kwargs)\r\n  File \"D:\\PythonWorkspace\\test\\venv\\lib\\site-packages\\neo4j\\v1\\api.py\", line 462, in _run_transaction\r\n    self.__begin__()\r\n  File \"D:\\PythonWorkspace\\test\\venv\\lib\\site-packages\\neo4j\\v1\\api.py\", line 522, in __begin__\r\n    parameters = {\"bookmark\": self.last_bookmark(), \"bookmarks\": self._bookmarks}\r\n  File \"D:\\PythonWorkspace\\test\\venv\\lib\\site-packages\\neo4j\\v1\\api.py\", line 384, in last_bookmark\r\n    last = last_bookmark(last, bookmark)\r\n  File \"D:\\PythonWorkspace\\test\\venv\\lib\\site-packages\\neo4j\\v1\\api.py\", line 58, in last_bookmark\r\n    raise ValueError(\"Invalid bookmark: {}\".format(b0))\r\nValueError: Invalid bookmark: `neo4j:bookmark:v1:tx46`\r\n\r\nProcess finished with exit code 1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/248", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/248/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/248/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/248", "id": 335756705, "node_id": "MDU6SXNzdWUzMzU3NTY3MDU=", "number": 248, "title": "Breaking API changes", "user": {"login": "danodonovan", "id": 156329, "node_id": "MDQ6VXNlcjE1NjMyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/156329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danodonovan", "html_url": "https://github.com/danodonovan", "followers_url": "https://api.github.com/users/danodonovan/followers", "following_url": "https://api.github.com/users/danodonovan/following{/other_user}", "gists_url": "https://api.github.com/users/danodonovan/gists{/gist_id}", "starred_url": "https://api.github.com/users/danodonovan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danodonovan/subscriptions", "organizations_url": "https://api.github.com/users/danodonovan/orgs", "repos_url": "https://api.github.com/users/danodonovan/repos", "events_url": "https://api.github.com/users/danodonovan/events{/privacy}", "received_events_url": "https://api.github.com/users/danodonovan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-26T10:32:30Z", "updated_at": "2018-08-22T09:25:06Z", "closed_at": "2018-08-22T09:25:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that `v1.6` has changes that break the `v1.5` API.\r\n\r\nFor example \r\n* `Node` objects no longer have a `properties` attribute\r\n*  response `.values()` for more than one row returns the rows as `list`s not `tuple`s\r\n*  other changes I'm yet to discover (?)\r\n\r\nIt would be nice if these changes were mentioned somewhere, maybe a [CHANGELOG](https://keepachangelog.com/en/1.0.0/) etc. ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/246", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/246/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/246/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/246", "id": 334140225, "node_id": "MDU6SXNzdWUzMzQxNDAyMjU=", "number": 246, "title": "Question: Convert to Python datetime", "user": {"login": "g3rd", "id": 746731, "node_id": "MDQ6VXNlcjc0NjczMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/746731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g3rd", "html_url": "https://github.com/g3rd", "followers_url": "https://api.github.com/users/g3rd/followers", "following_url": "https://api.github.com/users/g3rd/following{/other_user}", "gists_url": "https://api.github.com/users/g3rd/gists{/gist_id}", "starred_url": "https://api.github.com/users/g3rd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g3rd/subscriptions", "organizations_url": "https://api.github.com/users/g3rd/orgs", "repos_url": "https://api.github.com/users/g3rd/repos", "events_url": "https://api.github.com/users/g3rd/events{/privacy}", "received_events_url": "https://api.github.com/users/g3rd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-20T15:48:12Z", "updated_at": "2018-08-22T09:36:12Z", "closed_at": "2018-08-22T09:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nHow do I convert the `neotime.DateTime` instance to a Python `datetime.datetime` instance?\r\n\r\nBut what I really need is the epoch seconds. Or to do:\r\n\r\n```\r\nmydate.timestamp()\r\n```\r\n\r\nRight now I'm doing:\r\n\r\n```python\r\nimport datetime\r\nfrom neotime import DateTime\r\n\r\ndt = DateTime(year=2018, month=9, day=26, hour=13, minute=31, second=5.0)\r\npdt = datetime.datetime(dt.year, dt.month, dt.day, dt.hour, dt.minute, int(dt.second))\r\ntimestamp = pdt.timestamp()\r\n```\r\n\r\nWith this example, I'm losing milliseconds.\r\n\r\nSee: https://github.com/technige/neotime/issues/3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/245", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/245/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/245/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/245", "id": 333620919, "node_id": "MDU6SXNzdWUzMzM2MjA5MTk=", "number": 245, "title": "Python Cypher behaviour different to Neo4j browser Cypher", "user": {"login": "AlanKiroku", "id": 38853106, "node_id": "MDQ6VXNlcjM4ODUzMTA2", "avatar_url": "https://avatars1.githubusercontent.com/u/38853106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlanKiroku", "html_url": "https://github.com/AlanKiroku", "followers_url": "https://api.github.com/users/AlanKiroku/followers", "following_url": "https://api.github.com/users/AlanKiroku/following{/other_user}", "gists_url": "https://api.github.com/users/AlanKiroku/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlanKiroku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlanKiroku/subscriptions", "organizations_url": "https://api.github.com/users/AlanKiroku/orgs", "repos_url": "https://api.github.com/users/AlanKiroku/repos", "events_url": "https://api.github.com/users/AlanKiroku/events{/privacy}", "received_events_url": "https://api.github.com/users/AlanKiroku/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-19T10:57:41Z", "updated_at": "2018-06-19T10:59:15Z", "closed_at": "2018-06-19T10:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndef check_existence(txn, check_value):\r\n    txn.run(\"MATCH (a:TemplateTitle {title: $check_value}) RETURN true\", check_value=check_value)\r\n\r\nsession.write_transaction(check_existence, 'Medical History')\r\n```\r\n\r\nThe Cypher via the browser returns: true\r\nThe Cypher via python returns: None\r\n\r\nThe same results occurs when I hard code the passed in value.\r\n\r\nClearly the node with that param exists in the database", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/242", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/242/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/242/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/242", "id": 329570364, "node_id": "MDU6SXNzdWUzMjk1NzAzNjQ=", "number": 242, "title": "Neo4j connectivity authentication error", "user": {"login": "Shashank200", "id": 38310898, "node_id": "MDQ6VXNlcjM4MzEwODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/38310898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shashank200", "html_url": "https://github.com/Shashank200", "followers_url": "https://api.github.com/users/Shashank200/followers", "following_url": "https://api.github.com/users/Shashank200/following{/other_user}", "gists_url": "https://api.github.com/users/Shashank200/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shashank200/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shashank200/subscriptions", "organizations_url": "https://api.github.com/users/Shashank200/orgs", "repos_url": "https://api.github.com/users/Shashank200/repos", "events_url": "https://api.github.com/users/Shashank200/events{/privacy}", "received_events_url": "https://api.github.com/users/Shashank200/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-05T18:18:12Z", "updated_at": "2018-06-06T15:14:56Z", "closed_at": "2018-06-06T12:42:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to develop flask search web app with neo4j.I am using py2neo version 2.0.8 and trying to connect with neo4j updated version 3.4,\r\nThe problem is driver connection error.I think it's compatibility error.Could you provide driver for connecting py2neo 2.0.8 with neo4j.i have to use only py2neo 2.0.8,because my code is compatible with that version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/239", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/239/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/239/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/239", "id": 317416034, "node_id": "MDU6SXNzdWUzMTc0MTYwMzQ=", "number": 239, "title": "Getting a error when trying to run the Quick Example from the README", "user": {"login": "aaronlelevier", "id": 5514112, "node_id": "MDQ6VXNlcjU1MTQxMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5514112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronlelevier", "html_url": "https://github.com/aaronlelevier", "followers_url": "https://api.github.com/users/aaronlelevier/followers", "following_url": "https://api.github.com/users/aaronlelevier/following{/other_user}", "gists_url": "https://api.github.com/users/aaronlelevier/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronlelevier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronlelevier/subscriptions", "organizations_url": "https://api.github.com/users/aaronlelevier/orgs", "repos_url": "https://api.github.com/users/aaronlelevier/repos", "events_url": "https://api.github.com/users/aaronlelevier/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronlelevier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-24T22:21:34Z", "updated_at": "2018-05-07T07:03:21Z", "closed_at": "2018-05-07T07:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to run the [Quick Example](https://github.com/neo4j/neo4j-python-driver#quick-example):\r\n\r\n```python\r\nfrom neo4j.v1 import GraphDatabase\r\n\r\ndriver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\n\r\ndef add_friends(tx, name, friend_name):\r\n    tx.run(\"MERGE (a:Person {name: $name}) \"\r\n           \"MERGE (a)-[:KNOWS]->(friend:Person {name: $friend_name})\",\r\n           name=name, friend_name=friend_name)\r\n\r\ndef print_friends(tx, name):\r\n    for record in tx.run(\"MATCH (a:Person)-[:KNOWS]->(friend) WHERE a.name = $name \"\r\n                         \"RETURN friend.name ORDER BY friend.name\", name=name):\r\n        print(record[\"friend.name\"])\r\n\r\nwith driver.session() as session:\r\n    session.write_transaction(add_friends, \"Arthur\", \"Guinevere\")\r\n    session.write_transaction(add_friends, \"Arthur\", \"Lancelot\")\r\n    session.write_transaction(add_friends, \"Arthur\", \"Merlin\")\r\n    session.read_transaction(print_friends, \"Arthur\")\r\n```\r\n\r\nIt returns:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"query.py\", line 3, in <module>\r\n    driver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"password\"))\r\n  File \"/Users/aaron/Documents/neo4j/venv/lib/python3.6/site-packages/neo4j/v1/api.py\", line 128, in driver\r\n    return driver_class(uri, **config)\r\n  File \"/Users/aaron/Documents/neo4j/venv/lib/python3.6/site-packages/neo4j/v1/direct.py\", line 77, in __init__\r\n    pool.release(pool.acquire())\r\n  File \"/Users/aaron/Documents/neo4j/venv/lib/python3.6/site-packages/neo4j/v1/direct.py\", line 47, in acquire\r\n    connection = self.acquire_direct(address)  # should always be a resolved address\r\n  File \"/Users/aaron/Documents/neo4j/venv/lib/python3.6/site-packages/neo4j/bolt/connection.py\", line 427, in acquire_direct\r\n    raise ValueError(\"Invalid IP address {!r}\".format(address[0]))\r\nValueError: Invalid IP address 'fe80::1%lo0'\r\n```\r\n\r\nIf you change the 2nd line to be a ip4 address for `localhost` to the IP address it works:\r\n\r\n```python\r\ndriver = GraphDatabase.driver(\"bolt://127.0.0.1:7687\", auth=(\"neo4j\", \"password\"))\r\n```\r\n\r\nI saw this while using `pdb` to poke around:\r\n\r\n```\r\n> /Users/aaron/Documents/neo4j/venv/lib/python3.6/site-packages/neo4j/v1/direct.py(46)acquire()\r\n-> for address in resolve(self.address):\r\n(Pdb) self.address\r\nAddress(host='localhost', port=7687)\r\n(Pdb) resolve(self.address)\r\n[('::1', 7687, 0, 0), ('127.0.0.1', 7687), ('fe80::1%lo0', 7687, 0, 1)]\r\n```\r\n\r\nNot sure if the solution is to fix the README or change some other logic so that `localhost` works.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/238", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/238/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/238/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/238", "id": 316381971, "node_id": "MDU6SXNzdWUzMTYzODE5NzE=", "number": 238, "title": "import error", "user": {"login": "mahesh557", "id": 6206165, "node_id": "MDQ6VXNlcjYyMDYxNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6206165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahesh557", "html_url": "https://github.com/mahesh557", "followers_url": "https://api.github.com/users/mahesh557/followers", "following_url": "https://api.github.com/users/mahesh557/following{/other_user}", "gists_url": "https://api.github.com/users/mahesh557/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahesh557/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahesh557/subscriptions", "organizations_url": "https://api.github.com/users/mahesh557/orgs", "repos_url": "https://api.github.com/users/mahesh557/repos", "events_url": "https://api.github.com/users/mahesh557/events{/privacy}", "received_events_url": "https://api.github.com/users/mahesh557/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-20T19:17:31Z", "updated_at": "2018-04-22T22:18:36Z", "closed_at": "2018-04-22T22:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nUnable to run due to import error.\r\nAttempted to run on a fresh ubuntu just installed neo4j-driver, same error perists\r\n\r\n    from neo4j.v1 import GraphDatabase\r\n    ImportError: No module named v1\r\n\r\n> $pip freeze | grep \"neo\"\r\n> You are using pip version 9.0.2, however version 10.0.0 is available.\r\n> You should consider upgrading via the 'pip install --upgrade pip' command.\r\n> neo4j-driver==1.5.3\r\n> \r\n> \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/236", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/236/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/236/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/236", "id": 315651102, "node_id": "MDU6SXNzdWUzMTU2NTExMDI=", "number": 236, "title": "Lost connection with Neo4j instance if run with multiprocess package", "user": {"login": "Zhenshan-Jin", "id": 14370804, "node_id": "MDQ6VXNlcjE0MzcwODA0", "avatar_url": "https://avatars0.githubusercontent.com/u/14370804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zhenshan-Jin", "html_url": "https://github.com/Zhenshan-Jin", "followers_url": "https://api.github.com/users/Zhenshan-Jin/followers", "following_url": "https://api.github.com/users/Zhenshan-Jin/following{/other_user}", "gists_url": "https://api.github.com/users/Zhenshan-Jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zhenshan-Jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zhenshan-Jin/subscriptions", "organizations_url": "https://api.github.com/users/Zhenshan-Jin/orgs", "repos_url": "https://api.github.com/users/Zhenshan-Jin/repos", "events_url": "https://api.github.com/users/Zhenshan-Jin/events{/privacy}", "received_events_url": "https://api.github.com/users/Zhenshan-Jin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-18T21:36:23Z", "updated_at": "2018-06-07T12:37:14Z", "closed_at": "2018-06-07T12:37:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```        \r\nfrom neo4j.v1 import GraphDatabase\r\nneo4j = GraphDatabase.driver()\r\ngraph = neo4j\r\nimport multiprocessing \r\n\r\ndef main(query):\r\n    def run(query, return_):\r\n        with graph.session() as session:\r\n            query_result = session.run(\r\n                query\r\n            )\r\n        return_[\"answers\"] = [rec for rec in query_result]\r\n\r\n    manager = multiprocessing.Manager()\r\n    return_ = manager.dict()\r\n    p = multiprocessing.Process(target=run, name=\"run_query\",\r\n                                args=(query, return_))\r\n    p.start()\r\n    p.join(2)  # timeout after 2s\r\n    p.terminate()\r\n\r\nquery = \"MATCH (n) RETURN n LIMIT 1\"\r\n# works good\r\nmain(query)\r\n# raise error: \r\n# neo4j.exceptions.ServiceUnavailable: Failed to read from defunct connection Address(host='127.0.0.1', port=7687)\r\nmain(query)\r\n```\r\nMy question is why the second run of the main function would raise the error. It seems related to the \r\n```p.join(2)```\r\n\r\nAny idea about it would be appreciated!\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/235", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/235/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/235/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/235", "id": 314963468, "node_id": "MDU6SXNzdWUzMTQ5NjM0Njg=", "number": 235, "title": "Neo4j-driver not imported", "user": {"login": "yasseraj", "id": 3989621, "node_id": "MDQ6VXNlcjM5ODk2MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3989621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yasseraj", "html_url": "https://github.com/yasseraj", "followers_url": "https://api.github.com/users/yasseraj/followers", "following_url": "https://api.github.com/users/yasseraj/following{/other_user}", "gists_url": "https://api.github.com/users/yasseraj/gists{/gist_id}", "starred_url": "https://api.github.com/users/yasseraj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yasseraj/subscriptions", "organizations_url": "https://api.github.com/users/yasseraj/orgs", "repos_url": "https://api.github.com/users/yasseraj/repos", "events_url": "https://api.github.com/users/yasseraj/events{/privacy}", "received_events_url": "https://api.github.com/users/yasseraj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-17T08:50:12Z", "updated_at": "2018-04-26T10:15:52Z", "closed_at": "2018-04-26T10:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have installed neo4j-driver in a virtualenv with python 3.6, using pycharm's package installer, when I open the python shell and type:\r\n`from neo4j.v1 import GraphDatabase`\r\nthe import works just fine. Now, when I create a python script file, and make sure it's using the virtualenv with the following content:\r\n`from neo4j.v1 import GraphDatabase`\r\nAll I get is this error:\r\n`No module named 'neo4j.v1'; 'neo4j' is not a package`\r\nFor the life of me, I can't figure where the problem is, I am on Mac OS Sierra.\r\nAny help is much appreciated.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/232", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/232/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/232/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/232", "id": 310568758, "node_id": "MDU6SXNzdWUzMTA1Njg3NTg=", "number": 232, "title": "Exception thrown running Django including manage.py migrate", "user": {"login": "andyp05", "id": 14006401, "node_id": "MDQ6VXNlcjE0MDA2NDAx", "avatar_url": "https://avatars1.githubusercontent.com/u/14006401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyp05", "html_url": "https://github.com/andyp05", "followers_url": "https://api.github.com/users/andyp05/followers", "following_url": "https://api.github.com/users/andyp05/following{/other_user}", "gists_url": "https://api.github.com/users/andyp05/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyp05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyp05/subscriptions", "organizations_url": "https://api.github.com/users/andyp05/orgs", "repos_url": "https://api.github.com/users/andyp05/repos", "events_url": "https://api.github.com/users/andyp05/events{/privacy}", "received_events_url": "https://api.github.com/users/andyp05/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-02T18:41:04Z", "updated_at": "2018-04-05T11:05:50Z", "closed_at": "2018-04-05T11:05:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know there are a couple threads with this error. I have read them all.\r\n\r\nGet the following error running django runserver or migrate. For runserver, the exception comes up on load, not on exit. I have tried latest stable and new alpha release. I get the same error. \r\n\r\nIs there a way to trap the exception on the close() event if already set to None?\r\n\r\nI tried adding the following to my database class that handles all Neo4j calls.\r\n\r\n```\r\n    def __del__(self):\r\n        if self.driver:\r\n            self.driver.close()\r\n```\r\n\r\nAny suggestions would be appreciated. Thanks.\r\n\r\n`Exception ignored in: <bound method Connection.__del__ of <neo4j.bolt.connection.Connection object at 0x000001F981177278>>\r\nTraceback (most recent call last):\r\n  File \"C:\\Python36\\lib\\site-packages\\neo4j\\bolt\\connection.py\", line 216, in __del__\r\n  File \"C:\\Python36\\lib\\site-packages\\neo4j\\bolt\\connection.py\", line 389, in close\r\n  File \"C:\\Python36\\lib\\logging\\__init__.py\", line 1293, in debug\r\n  File \"C:\\Python36\\lib\\logging\\__init__.py\", line 1546, in isEnabledFor\r\nTypeError: '>=' not supported between instances of 'int' and 'NoneType'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/227", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/227/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/227/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/227", "id": 306473668, "node_id": "MDU6SXNzdWUzMDY0NzM2Njg=", "number": 227, "title": "Can you release a new version?", "user": {"login": "mprahl", "id": 11711106, "node_id": "MDQ6VXNlcjExNzExMTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/11711106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mprahl", "html_url": "https://github.com/mprahl", "followers_url": "https://api.github.com/users/mprahl/followers", "following_url": "https://api.github.com/users/mprahl/following{/other_user}", "gists_url": "https://api.github.com/users/mprahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mprahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mprahl/subscriptions", "organizations_url": "https://api.github.com/users/mprahl/orgs", "repos_url": "https://api.github.com/users/mprahl/repos", "events_url": "https://api.github.com/users/mprahl/events{/privacy}", "received_events_url": "https://api.github.com/users/mprahl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-19T13:58:17Z", "updated_at": "2018-03-19T14:00:04Z", "closed_at": "2018-03-19T13:59:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nWith the latest neo4j-python-driver from PyPi, I'm getting the following output at the end of my script when using neomodel:\r\n```\r\nException AttributeError: AttributeError(\"'NoneType' object has no attribute 'close'\",) in <bound method DirectDriver.__del__ of <neo4j.v1.direct.DirectDriver object at 0x7fc899a9a110>> ignored\r\nException AttributeError: \"'NoneType' object has no attribute 'close'\" in <bound method Connection.__del__ of <neo4j.bolt.connection.Connection object at 0x7fc899a9a390>> ignored\r\n```\r\n\r\nUsing the latest code from the neo4j-python-driver master branch, I don't get those errors any more. Can you please release a new version to PyPi so I may use that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/217", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/217/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/217/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/217", "id": 300646719, "node_id": "MDU6SXNzdWUzMDA2NDY3MTk=", "number": 217, "title": "Conditions for \"Transaction rolled back even if marked as succesful\"", "user": {"login": "aanastasiou", "id": 1336337, "node_id": "MDQ6VXNlcjEzMzYzMzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1336337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aanastasiou", "html_url": "https://github.com/aanastasiou", "followers_url": "https://api.github.com/users/aanastasiou/followers", "following_url": "https://api.github.com/users/aanastasiou/following{/other_user}", "gists_url": "https://api.github.com/users/aanastasiou/gists{/gist_id}", "starred_url": "https://api.github.com/users/aanastasiou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aanastasiou/subscriptions", "organizations_url": "https://api.github.com/users/aanastasiou/orgs", "repos_url": "https://api.github.com/users/aanastasiou/repos", "events_url": "https://api.github.com/users/aanastasiou/events{/privacy}", "received_events_url": "https://api.github.com/users/aanastasiou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "technige", "id": 275311, "node_id": "MDQ6VXNlcjI3NTMxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/275311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technige", "html_url": "https://github.com/technige", "followers_url": "https://api.github.com/users/technige/followers", "following_url": "https://api.github.com/users/technige/following{/other_user}", "gists_url": "https://api.github.com/users/technige/gists{/gist_id}", "starred_url": "https://api.github.com/users/technige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technige/subscriptions", "organizations_url": "https://api.github.com/users/technige/orgs", "repos_url": "https://api.github.com/users/technige/repos", "events_url": "https://api.github.com/users/technige/events{/privacy}", "received_events_url": "https://api.github.com/users/technige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-02-27T14:14:44Z", "updated_at": "2018-05-11T14:04:23Z", "closed_at": "2018-05-11T14:04:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nI am dealing with [this](https://github.com/neo4j-contrib/neomodel/issues/303) issue on Neomodel whose underlying cause seems to be extending to the Neo4J driver.\r\n\r\nAlthough I have been prompted to report it as an issue here, I am not entirely convinced that this is a driver issue.\r\n\r\nI would therefore appreciate some insight into why a `Neo.ClientError.Schema.ConstraintValidationFailed` might also be triggering a `ClientError` exception.\r\n\r\nI suspect that it has something to do with the internal state of the driver / dbms and therefore it might be something that [we need to take into account when gracefully handling exceptions within Neomodel.](https://github.com/neo4j-contrib/neomodel/blob/master/neomodel/util.py#L134)\r\n\r\nAll the best\r\n\r\nP.S. Although this exception is raised and [according to the error codes](https://neo4j.com/docs/developer-manual/current/reference/status-codes/) the transaction is supposed to have been rolled back, the transaction is actually committed. In this case what I would also like to ask is if we can safely ignore this particular exception if it comes up on a commit (?) (But still raise anything else that might have good reasons to happen during a commit (?))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/213", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/213/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/213/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/213", "id": 285044623, "node_id": "MDU6SXNzdWUyODUwNDQ2MjM=", "number": 213, "title": "[Query] Efficient way to batch write", "user": {"login": "manojgudi", "id": 2013357, "node_id": "MDQ6VXNlcjIwMTMzNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2013357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manojgudi", "html_url": "https://github.com/manojgudi", "followers_url": "https://api.github.com/users/manojgudi/followers", "following_url": "https://api.github.com/users/manojgudi/following{/other_user}", "gists_url": "https://api.github.com/users/manojgudi/gists{/gist_id}", "starred_url": "https://api.github.com/users/manojgudi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manojgudi/subscriptions", "organizations_url": "https://api.github.com/users/manojgudi/orgs", "repos_url": "https://api.github.com/users/manojgudi/repos", "events_url": "https://api.github.com/users/manojgudi/events{/privacy}", "received_events_url": "https://api.github.com/users/manojgudi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-29T07:05:24Z", "updated_at": "2018-09-18T21:52:28Z", "closed_at": "2018-04-05T11:12:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey what's the most efficient way to batch write to neo4j using this driver?\r\nI went through the docs for v1.5, and this seems to be one way:\r\n\r\n```python \r\nmultipleCreate = \"create (n:Person {name:\\\"abc\\\"})create (m:Person {name:\\\"pqr\\\"})\"\r\ndef print_friends_of(name):\r\n    with driver.session() as session:\r\n        with session.begin_transaction() as tx:\r\n            print(tx, dir(tx))\r\n            tx.run(multipleCreate)\r\n```\r\n\r\nAs shown above, the user has to maintain everything about the batching process (batch size, constructing batch query etc).\r\nIs there an easier way for creating batch transaction and committing it at the end (like [here)](http://neo4j-rest-client.readthedocs.io/en/latest/transactions.html?highlight=tx.append)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/212", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/212/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/212/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/212", "id": 284438583, "node_id": "MDU6SXNzdWUyODQ0Mzg1ODM=", "number": 212, "title": "Do not enable logging by default", "user": {"login": "mjmare", "id": 1711378, "node_id": "MDQ6VXNlcjE3MTEzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmare", "html_url": "https://github.com/mjmare", "followers_url": "https://api.github.com/users/mjmare/followers", "following_url": "https://api.github.com/users/mjmare/following{/other_user}", "gists_url": "https://api.github.com/users/mjmare/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmare/subscriptions", "organizations_url": "https://api.github.com/users/mjmare/orgs", "repos_url": "https://api.github.com/users/mjmare/repos", "events_url": "https://api.github.com/users/mjmare/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-25T11:22:56Z", "updated_at": "2018-02-21T12:35:07Z", "closed_at": "2018-02-19T10:44:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The neo4j bolt driver pollutes the console (in my IDE or Jupyter notebook with debug messages). \r\n \r\nLogging best practice for libraries dictates that the library does NOT enable al logging handler. See http://docs.python-guide.org/en/latest/writing/logging/#logging-in-a-library and https://docs.python.org/3/howto/logging.html#configuring-logging-for-a-library\r\n\r\nOtherwise: document clearly how to silence the debug logging. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/208", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/208/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/208/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/208", "id": 283336136, "node_id": "MDU6SXNzdWUyODMzMzYxMzY=", "number": 208, "title": "Strange pattern in slowdown of queries from a session over bolt", "user": {"login": "connorwake", "id": 8379685, "node_id": "MDQ6VXNlcjgzNzk2ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8379685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/connorwake", "html_url": "https://github.com/connorwake", "followers_url": "https://api.github.com/users/connorwake/followers", "following_url": "https://api.github.com/users/connorwake/following{/other_user}", "gists_url": "https://api.github.com/users/connorwake/gists{/gist_id}", "starred_url": "https://api.github.com/users/connorwake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/connorwake/subscriptions", "organizations_url": "https://api.github.com/users/connorwake/orgs", "repos_url": "https://api.github.com/users/connorwake/repos", "events_url": "https://api.github.com/users/connorwake/events{/privacy}", "received_events_url": "https://api.github.com/users/connorwake/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-12-19T19:02:51Z", "updated_at": "2020-02-17T10:15:27Z", "closed_at": "2018-01-12T18:10:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "We recently started noticing that a lot of our queries are running slowly over bolt from the python driver when they open up new sessions.  At first we thought that it was because we were setting up the sessions wrong and so they weren't correctly pulling from the connection pool and it would keep having to start up new connections with each request.  However during our debugging and testing we ran into this strange case:\r\n\r\n```\r\ndef tf(f):\r\n     start = time()\r\n     f()\r\n     end = time()\r\n     return (end - start)*1000\r\n```\r\nThis function is just here to time how long each query takes.\r\n\r\n```\r\nwith driver.new_session() as session:\r\n    for i in range(0, 500):\r\n        val = tf(lambda: session.run(\"match (n) return count(n)\"))\r\n        if val > 2:\r\n            print i, \":\", val\r\n```\r\nThen this creates one session and uses it to run the same query over and over.  Usually the queries take under a ms, but this prints out the ones that didn't and this is what we got:\r\n```\r\n0 : 3.43799591064\r\n2 : 2.49195098877\r\n6 : 2.96497344971\r\n14 : 4.04977798462\r\n30 : 6.24489784241\r\n62 : 12.0089054108\r\n132 : 23.7801074982\r\n266 : 17.529964447\r\n432 : 41.0959720612\r\n```\r\n(This was running on my local graph, we see the same thing in our prod environment but with 10x larger slowdowns)\r\nThere's a pattern where the one's that take ~10x time is roughly following `f(0) = 0, f(n) = f(n-1)+ 2^n`. I've run this a few times and its always the same ones that are slow.\r\n\r\nAny ideas what could be going on here and why these specific queries are so slow?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/205", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/205/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/205/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/205", "id": 279210581, "node_id": "MDU6SXNzdWUyNzkyMTA1ODE=", "number": 205, "title": "ServiceUnavailable Defunct Connection Address - AWS Internal load balancer", "user": {"login": "gpierrick", "id": 1524537, "node_id": "MDQ6VXNlcjE1MjQ1Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1524537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpierrick", "html_url": "https://github.com/gpierrick", "followers_url": "https://api.github.com/users/gpierrick/followers", "following_url": "https://api.github.com/users/gpierrick/following{/other_user}", "gists_url": "https://api.github.com/users/gpierrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpierrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpierrick/subscriptions", "organizations_url": "https://api.github.com/users/gpierrick/orgs", "repos_url": "https://api.github.com/users/gpierrick/repos", "events_url": "https://api.github.com/users/gpierrick/events{/privacy}", "received_events_url": "https://api.github.com/users/gpierrick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-05T01:16:58Z", "updated_at": "2017-12-14T09:55:38Z", "closed_at": "2017-12-14T09:26:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe're getting this error from Neo4j refusing to connect every couple of minutes when we point the driver to the load balancer (aws elb classic). When we point the driver to one instance internal IP it works fine\r\n\r\n <class 'neo4j.exceptions.ServiceUnavailable'>: Failed to read from defunct connection Address\r\n\r\nAny help would be much appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/203", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/203/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/203/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/203", "id": 278712015, "node_id": "MDU6SXNzdWUyNzg3MTIwMTU=", "number": 203, "title": "connection_timeout not honoured?", "user": {"login": "mjmare", "id": 1711378, "node_id": "MDQ6VXNlcjE3MTEzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmare", "html_url": "https://github.com/mjmare", "followers_url": "https://api.github.com/users/mjmare/followers", "following_url": "https://api.github.com/users/mjmare/following{/other_user}", "gists_url": "https://api.github.com/users/mjmare/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmare/subscriptions", "organizations_url": "https://api.github.com/users/mjmare/orgs", "repos_url": "https://api.github.com/users/mjmare/repos", "events_url": "https://api.github.com/users/mjmare/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-02T19:50:42Z", "updated_at": "2017-12-04T13:44:47Z", "closed_at": "2017-12-04T11:36:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into a problem with a docker compose setup with a python app and a neo4j 3.3 server. The app container can start up before the Neo server is ready. \r\nI get this exception:\r\n```\r\nneo4j.exceptions.ServiceUnavailable: Cannot acquire connection to Address(host='neo', port=7687)\r\n```\r\nSo I wanted to use the connection_timeout to a largish number (like 10) to allow for this. \r\n```\r\n    driver = GraphDatabase.driver( \"bolt://neo:7687\", connection_timeout=10)\r\n```\r\nHowever it seems it doesn't do anything. I still get the exception and the driver call does not take noticeably longer. \r\nIf I manually restart the app everything is OK.\r\n\r\nAlso I noticed that you can pass any config parameter without warning. It seems there is no checking for valid parameters.\r\n\r\n\r\nUsing python driver 1.5.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/201", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/201/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/201/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/201", "id": 277749040, "node_id": "MDU6SXNzdWUyNzc3NDkwNDA=", "number": 201, "title": "Input buffer capacity exceeded when reading large values", "user": {"login": "liutec", "id": 3606208, "node_id": "MDQ6VXNlcjM2MDYyMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3606208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liutec", "html_url": "https://github.com/liutec", "followers_url": "https://api.github.com/users/liutec/followers", "following_url": "https://api.github.com/users/liutec/following{/other_user}", "gists_url": "https://api.github.com/users/liutec/gists{/gist_id}", "starred_url": "https://api.github.com/users/liutec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liutec/subscriptions", "organizations_url": "https://api.github.com/users/liutec/orgs", "repos_url": "https://api.github.com/users/liutec/repos", "events_url": "https://api.github.com/users/liutec/events{/privacy}", "received_events_url": "https://api.github.com/users/liutec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-29T13:12:07Z", "updated_at": "2017-12-14T09:08:38Z", "closed_at": "2017-12-14T09:08:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When reading results with values larger than the ChunkedInputBuffer's default capacity, a non-descriptive error gets triggered.\r\n\r\nIt would be nice to have the buffer capacities configurable along with a specific error message.\r\n\r\nI'm currently using this as a workaround:\r\n\r\n```python\r\nclass LargeChunkedInputBuffer(ChunkedInputBuffer):\r\n    def __init__(self, capacity=4194304):\r\n        super().__init__(capacity)\r\n\r\nneo4j.bolt.connection.ChunkedInputBuffer = LargeChunkedInputBuffer\r\n```\r\n\r\nI realize it's not the best idea to store large values in Neo4j but as long as it's not prohibited they should be readable.\r\n\r\nhttps://github.com/liutec/neo4j-python-driver/commit/165946f22af4a22c2487eeab74b953d752e6ac05", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/198", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/198/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/198/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/198", "id": 276584229, "node_id": "MDU6SXNzdWUyNzY1ODQyMjk=", "number": 198, "title": "Why the acquire method in connection.py is empty but doesn't have pass?", "user": {"login": "leopeng1995", "id": 10773297, "node_id": "MDQ6VXNlcjEwNzczMjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/10773297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leopeng1995", "html_url": "https://github.com/leopeng1995", "followers_url": "https://api.github.com/users/leopeng1995/followers", "following_url": "https://api.github.com/users/leopeng1995/following{/other_user}", "gists_url": "https://api.github.com/users/leopeng1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/leopeng1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leopeng1995/subscriptions", "organizations_url": "https://api.github.com/users/leopeng1995/orgs", "repos_url": "https://api.github.com/users/leopeng1995/repos", "events_url": "https://api.github.com/users/leopeng1995/events{/privacy}", "received_events_url": "https://api.github.com/users/leopeng1995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-24T11:03:45Z", "updated_at": "2017-11-27T12:58:18Z", "closed_at": "2017-11-27T12:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/neo4j/neo4j-python-driver/blob/1.6/neo4j/bolt/connection.py#L470", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/196", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/196/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/196/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/196", "id": 275187733, "node_id": "MDU6SXNzdWUyNzUxODc3MzM=", "number": 196, "title": "Connection keeps getting reset with UWSGI-NGINX", "user": {"login": "rdhara", "id": 12704053, "node_id": "MDQ6VXNlcjEyNzA0MDUz", "avatar_url": "https://avatars2.githubusercontent.com/u/12704053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdhara", "html_url": "https://github.com/rdhara", "followers_url": "https://api.github.com/users/rdhara/followers", "following_url": "https://api.github.com/users/rdhara/following{/other_user}", "gists_url": "https://api.github.com/users/rdhara/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdhara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdhara/subscriptions", "organizations_url": "https://api.github.com/users/rdhara/orgs", "repos_url": "https://api.github.com/users/rdhara/repos", "events_url": "https://api.github.com/users/rdhara/events{/privacy}", "received_events_url": "https://api.github.com/users/rdhara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-19T20:07:54Z", "updated_at": "2018-12-12T13:38:41Z", "closed_at": "2017-12-14T09:22:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI've been struggling with this issue for weeks. It seems the driver keeps resetting connections to my web app. I keep getting this error seemingly randomly when I try to make requests using the driver from a Flask app using UWSGI and NGINX:\r\n```\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]: Exception ignored in: 'neo4j.bolt._io.ChunkedInputBuffer.receive'\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]: Traceback (most recent call last):\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]:   File \"/usr/lib/python3.5/ssl.py\", line 929, in recv_into\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]:     return self.read(nbytes, buffer)\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]:   File \"/usr/lib/python3.5/ssl.py\", line 791, in read\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]:     return self._sslobj.read(len, buffer)\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]:   File \"/usr/lib/python3.5/ssl.py\", line 575, in read\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]:     v = self._sslobj.read(len, buffer)\r\nNov 19 13:08:44 ip-172-31-15-241 uwsgi[22867]: ConnectionResetError: [Errno 104] Connection reset by peer\r\n```\r\n\r\nThis causes the whole application to hang but will clear itself up after some time. I can post additional logs from NGINX if it will be helpful in solving the issue. Please let me know if you have any ideas!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/195", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/195/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/195/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/195", "id": 271670624, "node_id": "MDU6SXNzdWUyNzE2NzA2MjQ=", "number": 195, "title": "Session.run() method DOES NOT run a cypher statement within an auto-commit transaction.", "user": {"login": "erikyao", "id": 4813680, "node_id": "MDQ6VXNlcjQ4MTM2ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4813680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikyao", "html_url": "https://github.com/erikyao", "followers_url": "https://api.github.com/users/erikyao/followers", "following_url": "https://api.github.com/users/erikyao/following{/other_user}", "gists_url": "https://api.github.com/users/erikyao/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikyao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikyao/subscriptions", "organizations_url": "https://api.github.com/users/erikyao/orgs", "repos_url": "https://api.github.com/users/erikyao/repos", "events_url": "https://api.github.com/users/erikyao/events{/privacy}", "received_events_url": "https://api.github.com/users/erikyao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-07T00:37:38Z", "updated_at": "2017-11-07T18:31:39Z", "closed_at": "2017-11-07T18:31:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi neo4j-python-driver developers, \r\n\r\nI was using `BoltSession` and found that its `run()` method just posts two messages, `RUN` and `PULL-ALL`, to its connection message queue, not exactly functioning as [your document](https://neo4j.com/docs/api/python-driver/current/session.html#neo4j.v1.Session.run) says:\r\n\r\n> Run a Cypher statement within an auto-commit transaction.\r\n\r\nThis is really misleading since I have a long query which may not finish before my script quits. It's better to revise your document and recommend other users to use the following practice:\r\n\r\n```python\r\nwith session.begin_transaction():\r\n    tx.run(\"query\")\r\n```\r\n\r\nThanks!\r\nYao", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/193", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/193/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/193/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/193", "id": 268908562, "node_id": "MDU6SXNzdWUyNjg5MDg1NjI=", "number": 193, "title": "Write transaction hangs program when invalid value is passed as parameter without error", "user": {"login": "mjmare", "id": 1711378, "node_id": "MDQ6VXNlcjE3MTEzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1711378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmare", "html_url": "https://github.com/mjmare", "followers_url": "https://api.github.com/users/mjmare/followers", "following_url": "https://api.github.com/users/mjmare/following{/other_user}", "gists_url": "https://api.github.com/users/mjmare/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmare/subscriptions", "organizations_url": "https://api.github.com/users/mjmare/orgs", "repos_url": "https://api.github.com/users/mjmare/repos", "events_url": "https://api.github.com/users/mjmare/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmare/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 207837127, "node_id": "MDU6TGFiZWwyMDc4MzcxMjc=", "url": "https://api.github.com/repos/neo4j/neo4j-python-driver/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "zhenlineo", "id": 4190164, "node_id": "MDQ6VXNlcjQxOTAxNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4190164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhenlineo", "html_url": "https://github.com/zhenlineo", "followers_url": "https://api.github.com/users/zhenlineo/followers", "following_url": "https://api.github.com/users/zhenlineo/following{/other_user}", "gists_url": "https://api.github.com/users/zhenlineo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhenlineo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhenlineo/subscriptions", "organizations_url": "https://api.github.com/users/zhenlineo/orgs", "repos_url": "https://api.github.com/users/zhenlineo/repos", "events_url": "https://api.github.com/users/zhenlineo/events{/privacy}", "received_events_url": "https://api.github.com/users/zhenlineo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zhenlineo", "id": 4190164, "node_id": "MDQ6VXNlcjQxOTAxNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4190164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhenlineo", "html_url": "https://github.com/zhenlineo", "followers_url": "https://api.github.com/users/zhenlineo/followers", "following_url": "https://api.github.com/users/zhenlineo/following{/other_user}", "gists_url": "https://api.github.com/users/zhenlineo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhenlineo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhenlineo/subscriptions", "organizations_url": "https://api.github.com/users/zhenlineo/orgs", "repos_url": "https://api.github.com/users/zhenlineo/repos", "events_url": "https://api.github.com/users/zhenlineo/events{/privacy}", "received_events_url": "https://api.github.com/users/zhenlineo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-10-26T20:57:09Z", "updated_at": "2017-12-01T11:33:33Z", "closed_at": "2017-12-01T10:36:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this function that is called in a write transaction:\r\n```\r\nfrom uuid import uuid4\r\n\r\n:\r\n    def add_technique(tx, title, topic):\r\n        tx.run(\"MERGE (t:Technique {title: $title, uuid: $uuid}) \"\r\n               \"MERGE (topic:Topic {name: $topic}) \"\r\n               \"MERGE (t)-[:BELONGS_TO]->(topic)\",\r\n               topic=topic, title=title, uuid=uuid4())\r\n\r\n:\r\n    with driver.session() as session:\r\n        for s in sections:\r\n                session.write_transaction(add_technique, s['title'], s['topic'])\r\n:\r\n```\r\nPlease note that the third parameter *uuid* of the cypher statement is passed an incorrect type because uuid4() returns a uuid.UUID instance, not a string as I thought. \r\nWhen running the program it hangs on the first call to tx.run. No exceptions or messages. The only option is to kill the program.\r\nWhen the paramater value is corrected to str(uuid4()) everything is fine. \r\n\r\nUsing Neo4j community v3.2\r\nPython driver 1.5.0\r\nPython 3.6.3 on OSX", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/191", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/191/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/191/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/191", "id": 266337631, "node_id": "MDU6SXNzdWUyNjYzMzc2MzE=", "number": 191, "title": "Changelog update to reflect encryption to be enabled by default", "user": {"login": "john-bodley", "id": 4567245, "node_id": "MDQ6VXNlcjQ1NjcyNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4567245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john-bodley", "html_url": "https://github.com/john-bodley", "followers_url": "https://api.github.com/users/john-bodley/followers", "following_url": "https://api.github.com/users/john-bodley/following{/other_user}", "gists_url": "https://api.github.com/users/john-bodley/gists{/gist_id}", "starred_url": "https://api.github.com/users/john-bodley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john-bodley/subscriptions", "organizations_url": "https://api.github.com/users/john-bodley/orgs", "repos_url": "https://api.github.com/users/john-bodley/repos", "events_url": "https://api.github.com/users/john-bodley/events{/privacy}", "received_events_url": "https://api.github.com/users/john-bodley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-18T02:10:30Z", "updated_at": "2017-11-24T12:55:38Z", "closed_at": "2017-11-24T12:55:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems in the `1.5.0` release the default config has encryption enabled (https://github.com/neo4j/neo4j-python-driver/blob/1.5/neo4j/v1/security.py#L52) which causes an exception to thrown if the Python version is less than  2.7.9. \r\n\r\nI was wondering whether this Changelog should be updated to reflect this? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/190", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/190/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/190/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/190", "id": 266070607, "node_id": "MDU6SXNzdWUyNjYwNzA2MDc=", "number": 190, "title": "Logger should not log credentials", "user": {"login": "gingerjoos", "id": 1086018, "node_id": "MDQ6VXNlcjEwODYwMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1086018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingerjoos", "html_url": "https://github.com/gingerjoos", "followers_url": "https://api.github.com/users/gingerjoos/followers", "following_url": "https://api.github.com/users/gingerjoos/following{/other_user}", "gists_url": "https://api.github.com/users/gingerjoos/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingerjoos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingerjoos/subscriptions", "organizations_url": "https://api.github.com/users/gingerjoos/orgs", "repos_url": "https://api.github.com/users/gingerjoos/repos", "events_url": "https://api.github.com/users/gingerjoos/events{/privacy}", "received_events_url": "https://api.github.com/users/gingerjoos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-17T10:20:40Z", "updated_at": "2017-10-17T11:13:56Z", "closed_at": "2017-10-17T11:13:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Connection class logs the neo4j password\r\n\r\n```\r\n[2017-10-17 09:58:40,703: INFO/ForkPoolWorker-2] C: INIT (u'neo4j-python/1.2.1', {'credentials': 'PASSWORD', 'scheme': 'basic', 'principal': 'neo4j'})\r\n```\r\nThe best practice in this case is to hide the credentials. For eg., celery does this -\r\n```\r\n[2017-10-17 10:19:04,333: INFO/MainProcess] Connected to amqp://guest:**@127.0.0.1:5672//\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/189", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/189/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/189/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/189", "id": 265653522, "node_id": "MDU6SXNzdWUyNjU2NTM1MjI=", "number": 189, "title": "Neo4j Django Connection  Security error Security error while connecting to database Failed to establish secure connection to '[SSL:UNKNOWN_PROTCOL(_ssl.c:600)", "user": {"login": "sskadit", "id": 24460900, "node_id": "MDQ6VXNlcjI0NDYwOTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/24460900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sskadit", "html_url": "https://github.com/sskadit", "followers_url": "https://api.github.com/users/sskadit/followers", "following_url": "https://api.github.com/users/sskadit/following{/other_user}", "gists_url": "https://api.github.com/users/sskadit/gists{/gist_id}", "starred_url": "https://api.github.com/users/sskadit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sskadit/subscriptions", "organizations_url": "https://api.github.com/users/sskadit/orgs", "repos_url": "https://api.github.com/users/sskadit/repos", "events_url": "https://api.github.com/users/sskadit/events{/privacy}", "received_events_url": "https://api.github.com/users/sskadit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T05:51:09Z", "updated_at": "2017-10-16T06:39:32Z", "closed_at": "2017-10-16T06:39:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im trying to connect the Django to Neo4j using neo4j-driver but I'm getting Security error.\r\n\r\nError is :- neo4j.exceptions.SecurityError: Failed to establish secure connection to '[SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:600)'\r\n\r\n\r\n`Python Version 3.4.3 MAC OSX`\r\n\r\nMy Dependencies\r\n```\r\n\r\ndjango1.9 \r\nneo4j-driver==1.4.0\r\n\r\n```\r\n\r\n\r\nCODE Views.py\r\n\r\n```\r\nfrom django.shortcuts import render\r\n# Create your views here.\r\nfrom neo4j.v1 import GraphDatabase,basic_auth\r\nfrom django.conf import settings\r\nfrom django.db import IntegrityError\r\nfrom django.views.decorators.cache import cache_page\r\nfrom django.http import HttpResponse\r\nfrom django.contrib import messages\r\nfrom django.http import HttpResponse, HttpResponseRedirect, JsonResponse,Http404\r\nfrom django.http import StreamingHttpResponse\r\nfrom django.shortcuts import render_to_response\r\nfrom django.shortcuts import render\r\nfrom django.template import RequestContext\r\nfrom django.views.decorators.csrf import csrf_exempt\r\nfrom django import template\r\n\r\n\r\n\r\nuri = \"bolt://localhost:7474\"\r\ndriver = GraphDatabase.driver(uri, auth=(\"neo4j\", \"password\"))\r\n\r\n\r\ndef friends(request):\r\n    name = \"Cameron Crowe\"\r\n    with driver.session() as session:\r\n        with session.begin_transaction() as tx:\r\n            for record in tx.run(\"MATCH (a:Person)-[:PRODUCED]->(f) \"\r\n                                 \"WHERE a.name = {name} \"\r\n                                 \"RETURN f.title\", name=name):\r\n                print(record[\"f.title\"])\r\n\r\n    return render(request, \"friends.html\")\r\n```\r\n\r\n\r\nError\r\n\r\n```\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/utils/autoreload.py\", line 226, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/core/management/commands/runserver.py\", line 116, in inner_run\r\n    self.check(display_num_errors=True)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/core/management/base.py\", line 426, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/core/checks/registry.py\", line 75, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/core/checks/urls.py\", line 10, in check_url_config\r\n    return check_resolver(resolver)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/core/checks/urls.py\", line 19, in check_resolver\r\n    for pattern in resolver.url_patterns:\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/utils/functional.py\", line 33, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/core/urlresolvers.py\", line 417, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/utils/functional.py\", line 33, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/django/core/urlresolvers.py\", line 410, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/importlib/__init__.py\", line 109, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\r\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\r\n  File \"/Users/sskadit/Desktop/graphdb/src/neo4/neo4/urls.py\", line 19, in <module>\r\n    from graphdb.views import friends\r\n  File \"/Users/sskadit/Desktop/graphdb/src/neo4/graphdb/views.py\", line 20, in <module>\r\n    driver = GraphDatabase.driver(\"bolt://127.0.0.1:7474\", auth= basic_auth(\"neo4j\", \"aditya369\")).session()\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/neo4j/v1/api.py\", line 124, in driver\r\n    return driver_class(uri, **config)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/neo4j/v1/direct.py\", line 65, in __init__\r\n    pool.release(pool.acquire())\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/neo4j/v1/direct.py\", line 39, in acquire\r\n    connection = self.acquire_direct(address)  # should always be a resolved address\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/neo4j/bolt/connection.py\", line 398, in acquire_direct\r\n    connection = self.connector(address)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/neo4j/v1/direct.py\", line 64, in <lambda>\r\n    pool = DirectConnectionPool(lambda a: connect(a, security_plan.ssl_context, **config), self.address)\r\n  File \"/Users/sskadit/Desktop/graphdb/src/lib/python3.4/site-packages/neo4j/bolt/connection.py\", line 501, in connect\r\n    raise error\r\nneo4j.exceptions.SecurityError: Failed to establish secure connection to '[SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:600)'\r\n```\r\n\r\nI have asked in stackoverflow  \r\n[https://stackoverflow.com/questions/46763462/python-neo4j-security-error-while-connecting-to-database-failed-to-establish-sec](url)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/187", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/187/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/187/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/187", "id": 263900574, "node_id": "MDU6SXNzdWUyNjM5MDA1NzQ=", "number": 187, "title": "Cannot run LOAD CSV query across multiple sessions in the same application.", "user": {"login": "scottmunday84", "id": 925641, "node_id": "MDQ6VXNlcjkyNTY0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/925641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmunday84", "html_url": "https://github.com/scottmunday84", "followers_url": "https://api.github.com/users/scottmunday84/followers", "following_url": "https://api.github.com/users/scottmunday84/following{/other_user}", "gists_url": "https://api.github.com/users/scottmunday84/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmunday84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmunday84/subscriptions", "organizations_url": "https://api.github.com/users/scottmunday84/orgs", "repos_url": "https://api.github.com/users/scottmunday84/repos", "events_url": "https://api.github.com/users/scottmunday84/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmunday84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-10-09T13:45:05Z", "updated_at": "2017-10-10T07:58:26Z", "closed_at": "2017-10-09T20:42:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Neo4j 3.0.7.\r\n\r\nI'm having trouble with LOAD CSV queries and multiple session in the same application. It looks like if you run a LOAD CSV query through a driver session, the connection locks the entire Neo4j import folder, not just the files you are loading. This becomes problematic when I want to bulk load data with multiple requests in my Python application. I've tried closing the driver's pool of sessions manually, but to no avail. My process will still hang on the second session that attempts to load CSV files.\r\n\r\nAs an aside, I believe this problem occurs primarily because of the connection not completely being closed on deletion or garbage collection, but on a complete break of the application.\r\n\r\nIs there an \"easy fix\" that I can implement to resolve this issue without upgrading the Neo4j server?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/184", "repository_url": "https://api.github.com/repos/neo4j/neo4j-python-driver", "labels_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/184/comments", "events_url": "https://api.github.com/repos/neo4j/neo4j-python-driver/issues/184/events", "html_url": "https://github.com/neo4j/neo4j-python-driver/issues/184", "id": 259759941, "node_id": "MDU6SXNzdWUyNTk3NTk5NDE=", "number": 184, "title": "TypeError: '>=' not supported between instances of 'int' and 'NoneType' when running the gc", "user": {"login": "tardyp", "id": 109859, "node_id": "MDQ6VXNlcjEwOTg1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/109859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tardyp", "html_url": "https://github.com/tardyp", "followers_url": "https://api.github.com/users/tardyp/followers", "following_url": "https://api.github.com/users/tardyp/following{/other_user}", "gists_url": "https://api.github.com/users/tardyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tardyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tardyp/subscriptions", "organizations_url": "https://api.github.com/users/tardyp/orgs", "repos_url": "https://api.github.com/users/tardyp/repos", "events_url": "https://api.github.com/users/tardyp/events{/privacy}", "received_events_url": "https://api.github.com/users/tardyp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-22T09:43:28Z", "updated_at": "2018-06-19T01:05:54Z", "closed_at": "2017-11-24T14:38:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to reproduce easily\r\n\r\npip install pytest neo4j-driver\r\n\r\nwrite a file 'test_neo.py' :\r\n```python\r\nfrom neo4j.v1 import GraphDatabase, basic_auth\r\nimport os\r\n\r\nurl = os.environ[\"NEO4J_URL\"]\r\nauth = os.environ[\"NEO4J_AUTH\"].split(\":\")\r\nd = GraphDatabase.driver(url, auth=basic_auth(*auth), encrypted=False)\r\ns = d.session()\r\n\r\n\r\ndef test_neo():\r\n    with s.begin_transaction() as tx:\r\n        tx.run(\"MATCH (n) RETURN n LIMIT 1\")\r\n```\r\n\r\n```\r\n0 % pytest testneo.py\r\n============================================================================================================================ test session starts =============================================================================================================================\r\nplatform darwin -- Python 3.6.2, pytest-3.2.2, py-1.4.34, pluggy-0.4.0\r\nrootdir: /Users/az02096/dev/nestor/gitlab-celery, inifile:\r\nplugins: celery-4.1.0\r\ncollected 1 item\r\n\r\ntestneo.py .\r\n\r\n========================================================================================================================== 1 passed in 0.13 seconds ==========================================================================================================================\r\nException ignored in: <bound method Driver.__del__ of <neo4j.v1.direct.DirectDriver object at 0x1088400f0>>\r\nTraceback (most recent call last):\r\n  File \"[..].venv/lib/python3.6/site-packages/neo4j/v1/api.py\", line 151, in __del__\r\n  File \"[..].venv/lib/python3.6/site-packages/neo4j/v1/api.py\", line 193, in close\r\n  File \"[..].venv/lib/python3.6/site-packages/neo4j/bolt/connection.py\", line 439, in close\r\n  File \"[..].venv/lib/python3.6/site-packages/neo4j/bolt/connection.py\", line 428, in remove\r\n  File \"[..].venv/lib/python3.6/site-packages/neo4j/bolt/connection.py\", line 346, in close\r\n  File \"/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/logging/__init__.py\", line 1305, in info\r\n  File \"/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/logging/__init__.py\", line 1546, in isEnabledFor\r\nTypeError: '>=' not supported between instances of 'int' and 'NoneType'\r\nException ignored in: <bound method Connection.__del__ of <neo4j.bolt.connection.Connection object at 0x1099fb9e8>>\r\nTraceback (most recent call last):\r\n  File \"[..].venv/lib/python3.6/site-packages/neo4j/bolt/connection.py\", line 190, in __del__\r\n  File \"[..].venv/lib/python3.6/site-packages/neo4j/bolt/connection.py\", line 346, in close\r\n  File \"/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/logging/__init__.py\", line 1305, in info\r\n  File \"/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/logging/__init__.py\", line 1546, in isEnabledFor\r\nTypeError: '>=' not supported between instances of 'int' and 'NoneType'\r\n```\r\n\r\nLooks like similar issue here:\r\nhttps://github.com/johanlundberg/neo4j-django-tutorial/issues/10\r\n\r\nI am not sire exactly, but it looks like somehow the INFO variable is reset to None at some point. I am not sure if this is because of neo4j-driver or because of pytest\r\n", "performed_via_github_app": null, "score": 1.0}]}