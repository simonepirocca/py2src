{"total_count": 101, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jd/tenacity/issues/245", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/245/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/245/events", "html_url": "https://github.com/jd/tenacity/issues/245", "id": 676127134, "node_id": "MDU6SXNzdWU2NzYxMjcxMzQ=", "number": 245, "title": "Error Error", "user": {"login": "Harshil783", "id": 52579448, "node_id": "MDQ6VXNlcjUyNTc5NDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/52579448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harshil783", "html_url": "https://github.com/Harshil783", "followers_url": "https://api.github.com/users/Harshil783/followers", "following_url": "https://api.github.com/users/Harshil783/following{/other_user}", "gists_url": "https://api.github.com/users/Harshil783/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harshil783/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harshil783/subscriptions", "organizations_url": "https://api.github.com/users/Harshil783/orgs", "repos_url": "https://api.github.com/users/Harshil783/repos", "events_url": "https://api.github.com/users/Harshil783/events{/privacy}", "received_events_url": "https://api.github.com/users/Harshil783/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-10T13:14:45Z", "updated_at": "2020-08-11T13:12:43Z", "closed_at": "2020-08-11T13:12:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### **_I Don't Know If I Am Doing Something Wrong!_**\r\nHere Is the Code:\r\nimport secrets \r\nimport sys\r\nimport string\r\nfrom tenacity import (retry , stop_after_attempt)\r\n#Required Defs\r\ndef get_random_string(length):\r\n    letters = string.ascii_lowercase\r\n    num = string.ascii_uppercase\r\n    punc = string.punctuation\r\n    spec = string.hexdigits\r\n    one = letters + str(num) + str(punc) + str(spec)\r\n    result_str = ''.join(secrets.choice(one) for i in range(length))\r\n    print(\"Random string of length\", length, \"is:\", result_str)\r\n#CLosing All Defs Here\r\n@retry(stop=stop_after_attempt(2))\r\ndef start():\r\n    pasw = input(\"Do YOu Want A Random Password: y/n: \")\r\n    if pasw == 'y':\r\n        leng = input(\"Please Type The Length Of The Password You Want: \")\r\n        try:\r\n            len1 = int(leng)\r\n        except ValueError:\r\n            print(\"Only Numbers Accepted\")\r\n        get_random_string(len1)\r\n    elif pasw != 'n':\r\n        raise Exception(\"Choose Only From 'y' or 'n'\")\r\n    else:\r\n        sys.exit(\"You Don't Want TO Run The Program\")\r\nfor i in range(0, 3):\r\n    start()\r\n### **_ERROR IS_**:\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\Users\\DELL\\Desktop\\Python Projects\\Personal Projects\\Password Generator\\Main.py\", line 30, in <module>\r\n    start()\r\n  File \"C:\\Users\\DELL\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\tenacity\\__init__.py\", line 329, in wrapped_f\r\n    return self.call(f, *args, **kw)\r\n  File \"C:\\Users\\DELL\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\tenacity\\__init__.py\", line 409, in call\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"C:\\Users\\DELL\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\tenacity\\__init__.py\", line 369, in iter\r\n    six.raise_from(retry_exc, fut.exception())\r\n  File \"<string>\", line 3, in raise_from\r\ntenacity.RetryError: RetryError[<Future at 0x1e1b778 state=finished raised Exception>]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/244", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/244/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/244/events", "html_url": "https://github.com/jd/tenacity/issues/244", "id": 675985416, "node_id": "MDU6SXNzdWU2NzU5ODU0MTY=", "number": 244, "title": "Sys.Exit()", "user": {"login": "Harshil783", "id": 52579448, "node_id": "MDQ6VXNlcjUyNTc5NDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/52579448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harshil783", "html_url": "https://github.com/Harshil783", "followers_url": "https://api.github.com/users/Harshil783/followers", "following_url": "https://api.github.com/users/Harshil783/following{/other_user}", "gists_url": "https://api.github.com/users/Harshil783/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harshil783/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harshil783/subscriptions", "organizations_url": "https://api.github.com/users/Harshil783/orgs", "repos_url": "https://api.github.com/users/Harshil783/repos", "events_url": "https://api.github.com/users/Harshil783/events{/privacy}", "received_events_url": "https://api.github.com/users/Harshil783/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-10T09:10:32Z", "updated_at": "2020-08-10T12:26:59Z", "closed_at": "2020-08-10T12:26:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! The `Sys.Exit()` Does Not Works Why?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/242", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/242/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/242/events", "html_url": "https://github.com/jd/tenacity/issues/242", "id": 675562798, "node_id": "MDU6SXNzdWU2NzU1NjI3OTg=", "number": 242, "title": "Support For Custom Exception", "user": {"login": "Harshil783", "id": 52579448, "node_id": "MDQ6VXNlcjUyNTc5NDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/52579448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harshil783", "html_url": "https://github.com/Harshil783", "followers_url": "https://api.github.com/users/Harshil783/followers", "following_url": "https://api.github.com/users/Harshil783/following{/other_user}", "gists_url": "https://api.github.com/users/Harshil783/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harshil783/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harshil783/subscriptions", "organizations_url": "https://api.github.com/users/Harshil783/orgs", "repos_url": "https://api.github.com/users/Harshil783/repos", "events_url": "https://api.github.com/users/Harshil783/events{/privacy}", "received_events_url": "https://api.github.com/users/Harshil783/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-08T17:52:00Z", "updated_at": "2020-08-09T12:15:40Z", "closed_at": "2020-08-09T12:15:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "**_Is There Any Support For Custom Exception_**\r\nIf It is Please Tell Me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/237", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/237/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/237/events", "html_url": "https://github.com/jd/tenacity/issues/237", "id": 636758249, "node_id": "MDU6SXNzdWU2MzY3NTgyNDk=", "number": 237, "title": "After callback only invoked by failed attempt?", "user": {"login": "occoder", "id": 1981057, "node_id": "MDQ6VXNlcjE5ODEwNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1981057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/occoder", "html_url": "https://github.com/occoder", "followers_url": "https://api.github.com/users/occoder/followers", "following_url": "https://api.github.com/users/occoder/following{/other_user}", "gists_url": "https://api.github.com/users/occoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/occoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/occoder/subscriptions", "organizations_url": "https://api.github.com/users/occoder/orgs", "repos_url": "https://api.github.com/users/occoder/repos", "events_url": "https://api.github.com/users/occoder/events{/privacy}", "received_events_url": "https://api.github.com/users/occoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-11T06:37:43Z", "updated_at": "2020-06-12T03:20:30Z", "closed_at": "2020-06-12T03:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "The doc says:\r\n\r\n> It's possible to execute an action before any attempt of calling the function by using the before callback function:\r\n> In the same spirit, It's possible to execute after a call that failed:\r\n\r\nBut in fact, they are not in the same spirit.\r\nThe \"before\" callback is invoked unconditionally whereas \"after\" callback is only invoked in case current attempt fails.\r\nI'm wondering what is the real counterpart to the \"before\" callback?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/229", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/229/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/229/events", "html_url": "https://github.com/jd/tenacity/issues/229", "id": 609761580, "node_id": "MDU6SXNzdWU2MDk3NjE1ODA=", "number": 229, "title": "AsyncRetrying does not work in the latest release on PyPI", "user": {"login": "espdev", "id": 1299189, "node_id": "MDQ6VXNlcjEyOTkxODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1299189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/espdev", "html_url": "https://github.com/espdev", "followers_url": "https://api.github.com/users/espdev/followers", "following_url": "https://api.github.com/users/espdev/following{/other_user}", "gists_url": "https://api.github.com/users/espdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/espdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/espdev/subscriptions", "organizations_url": "https://api.github.com/users/espdev/orgs", "repos_url": "https://api.github.com/users/espdev/repos", "events_url": "https://api.github.com/users/espdev/events{/privacy}", "received_events_url": "https://api.github.com/users/espdev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198546, "node_id": "MDU6TGFiZWw0MjMxOTg1NDY=", "url": "https://api.github.com/repos/jd/tenacity/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T09:36:58Z", "updated_at": "2020-04-30T10:50:52Z", "closed_at": "2020-04-30T10:01:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "tenacity v6.1.0 from PyPI, Python 3.7\r\n\r\nI try to use `AsyncRetrying` in my async code, but I get an error: `TypeError: 'async for' requires an object with __aiter__ method, got AsyncRetrying`.\r\n\r\nThe example [from doc](https://tenacity.readthedocs.io/en/latest/#retrying-code-block):\r\n\r\n```python\r\nimport asyncio\r\nfrom tenacity import AsyncRetrying, RetryError, stop_after_attempt\r\n\r\nasync def main():\r\n    try:\r\n        async for attempt in AsyncRetrying(stop=stop_after_attempt(3)):\r\n            with attempt:\r\n                raise Exception('My code is failing!')\r\n    except RetryError:\r\n        print('foo')\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main())\r\n    loop.close()\r\n```\r\n\r\nI looked at the source code and I do not understand how it should work without `__aiter__` method.\r\n\r\nAlso, I see the following code in master:\r\nhttps://github.com/jd/tenacity/blob/c5a8abb404c50bddd9881c69b995c343ab7b4991/tenacity/_asyncio.py#L57-L73\r\n\r\nIt seems, it should work right. When do you plan to new release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/220", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/220/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/220/events", "html_url": "https://github.com/jd/tenacity/issues/220", "id": 587840760, "node_id": "MDU6SXNzdWU1ODc4NDA3NjA=", "number": 220, "title": "'Retrying' object is not iterable", "user": {"login": "mulawamichal", "id": 44225214, "node_id": "MDQ6VXNlcjQ0MjI1MjE0", "avatar_url": "https://avatars2.githubusercontent.com/u/44225214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mulawamichal", "html_url": "https://github.com/mulawamichal", "followers_url": "https://api.github.com/users/mulawamichal/followers", "following_url": "https://api.github.com/users/mulawamichal/following{/other_user}", "gists_url": "https://api.github.com/users/mulawamichal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mulawamichal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mulawamichal/subscriptions", "organizations_url": "https://api.github.com/users/mulawamichal/orgs", "repos_url": "https://api.github.com/users/mulawamichal/repos", "events_url": "https://api.github.com/users/mulawamichal/events{/privacy}", "received_events_url": "https://api.github.com/users/mulawamichal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-25T16:51:12Z", "updated_at": "2020-03-26T10:39:26Z", "closed_at": "2020-03-26T10:39:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "executing the code from documentation:\r\n```\r\nfrom tenacity import Retrying, RetryError, stop_after_attempt\r\n\r\ntry:\r\n    for attempt in Retrying(stop=stop_after_attempt(3)):\r\n        with attempt:\r\n            raise Exception('My code is failing!')\r\nexcept RetryError:\r\n    pass\r\n```\r\nresults in:\r\n`E   TypeError: 'Retrying' object is not iterable`\r\n\r\nChecked on python3.6 and python3.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/210", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/210/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/210/events", "html_url": "https://github.com/jd/tenacity/issues/210", "id": 546711981, "node_id": "MDU6SXNzdWU1NDY3MTE5ODE=", "number": 210, "title": "Allow configurable defaults", "user": {"login": "afischer-opentext-com", "id": 37439392, "node_id": "MDQ6VXNlcjM3NDM5Mzky", "avatar_url": "https://avatars2.githubusercontent.com/u/37439392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afischer-opentext-com", "html_url": "https://github.com/afischer-opentext-com", "followers_url": "https://api.github.com/users/afischer-opentext-com/followers", "following_url": "https://api.github.com/users/afischer-opentext-com/following{/other_user}", "gists_url": "https://api.github.com/users/afischer-opentext-com/gists{/gist_id}", "starred_url": "https://api.github.com/users/afischer-opentext-com/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afischer-opentext-com/subscriptions", "organizations_url": "https://api.github.com/users/afischer-opentext-com/orgs", "repos_url": "https://api.github.com/users/afischer-opentext-com/repos", "events_url": "https://api.github.com/users/afischer-opentext-com/events{/privacy}", "received_events_url": "https://api.github.com/users/afischer-opentext-com/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-08T08:23:41Z", "updated_at": "2020-01-20T11:04:17Z", "closed_at": "2020-01-20T11:04:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nis there a way to re-configure the default configuration? I crawled the code base but failed to find something. \r\n\r\nIn the code base I am maintaining the retry annotation is heavily used (more than 200 times). The vast majority of the calls looks equal, e.q.\r\n\r\n```python\r\nimport logging\r\n\r\nfrom tenacity import (before_sleep_log, retry, stop_after_attempt,\r\n                      wait_exponential)\r\n\r\nlog = logging.getLogger(__name__)\r\n\r\n@retry(before_sleep=before_sleep_log(log, logging.INFO), reraise=True, stop=stop_after_attempt(15), wait=wait_exponential(multiplier=1, min=1, max=10))\r\ndef something():\r\n    pass\r\n```\r\n\r\nIt would be great to have the ability to configure some kind of configuration group, something like the following as it help to reduce duplicate code.\r\n\r\n```python\r\ntenacity.config_group('foo', reraise=True, stop=stop_after_attempt(15), wait=wait_exponential(multiplier=1, min=1, max=10))\r\n\r\n# and later\r\n\r\n@retry(config_group='foo', before_sleep=before_sleep_log(log, logging.INFO))\r\ndef something():\r\n    pass\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/207", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/207/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/207/events", "html_url": "https://github.com/jd/tenacity/issues/207", "id": 529598344, "node_id": "MDU6SXNzdWU1Mjk1OTgzNDQ=", "number": 207, "title": "API reference documentation is broken", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-27T22:23:10Z", "updated_at": "2019-12-16T10:35:08Z", "closed_at": "2019-12-16T09:49:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm writing a blog post about tenacity, and I'd like to include some reference links that explain how to use it (for example, the different functions you can pass to `wait`).\r\n\r\nThere is API reference documentation, but there's nothing there: https://tenacity.readthedocs.io/en/latest/api.html\r\n\r\nHard to show people the module if there aren't any API docs!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/204", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/204/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/204/events", "html_url": "https://github.com/jd/tenacity/issues/204", "id": 523504554, "node_id": "MDU6SXNzdWU1MjM1MDQ1NTQ=", "number": 204, "title": "DeprecationWarning re: async def in Python 3.8", "user": {"login": "hjwp", "id": 769730, "node_id": "MDQ6VXNlcjc2OTczMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/769730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjwp", "html_url": "https://github.com/hjwp", "followers_url": "https://api.github.com/users/hjwp/followers", "following_url": "https://api.github.com/users/hjwp/following{/other_user}", "gists_url": "https://api.github.com/users/hjwp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjwp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjwp/subscriptions", "organizations_url": "https://api.github.com/users/hjwp/orgs", "repos_url": "https://api.github.com/users/hjwp/repos", "events_url": "https://api.github.com/users/hjwp/events{/privacy}", "received_events_url": "https://api.github.com/users/hjwp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-15T14:35:05Z", "updated_at": "2020-02-26T10:37:10Z", "closed_at": "2020-02-26T10:37:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "silly little thing really.  Not sure if 3.8 is officially supported yet, if i get a mo i'll open a PR.\r\n\r\n```\r\n.venv/lib/python3.8/site-packages/tenacity/_asyncio.py:48\r\n  /home/harry/workspace/cosmicpython/book/code/.venv/lib/python3.8/site-packages/tenacity/_asyncio.py:48: \r\n    DeprecationWarning: \"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead\r\n    def call(self, fn, *args, **kwargs):\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/197", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/197/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/197/events", "html_url": "https://github.com/jd/tenacity/issues/197", "id": 514323295, "node_id": "MDU6SXNzdWU1MTQzMjMyOTU=", "number": 197, "title": "Missing kwargs in retry helper in __init__.py", "user": {"login": "thehesiod", "id": 4001789, "node_id": "MDQ6VXNlcjQwMDE3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4001789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thehesiod", "html_url": "https://github.com/thehesiod", "followers_url": "https://api.github.com/users/thehesiod/followers", "following_url": "https://api.github.com/users/thehesiod/following{/other_user}", "gists_url": "https://api.github.com/users/thehesiod/gists{/gist_id}", "starred_url": "https://api.github.com/users/thehesiod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thehesiod/subscriptions", "organizations_url": "https://api.github.com/users/thehesiod/orgs", "repos_url": "https://api.github.com/users/thehesiod/repos", "events_url": "https://api.github.com/users/thehesiod/events{/privacy}", "received_events_url": "https://api.github.com/users/thehesiod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-30T00:52:06Z", "updated_at": "2019-11-08T03:23:06Z", "closed_at": "2019-10-31T08:39:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "on this section:\r\n```python\r\n    if len(dargs) == 1 and callable(dargs[0]):\r\n        return retry()(dargs[0])\r\n```\r\nit should be:\r\n```python\r\n    if len(dargs) == 1 and callable(dargs[0]):\r\n        return retry(**dkw)(dargs[0])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/196", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/196/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/196/events", "html_url": "https://github.com/jd/tenacity/issues/196", "id": 513324374, "node_id": "MDU6SXNzdWU1MTMzMjQzNzQ=", "number": 196, "title": "Release notes for 5.1.3 and 5.1.4", "user": {"login": "OskarPersson", "id": 935414, "node_id": "MDQ6VXNlcjkzNTQxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/935414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OskarPersson", "html_url": "https://github.com/OskarPersson", "followers_url": "https://api.github.com/users/OskarPersson/followers", "following_url": "https://api.github.com/users/OskarPersson/following{/other_user}", "gists_url": "https://api.github.com/users/OskarPersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/OskarPersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OskarPersson/subscriptions", "organizations_url": "https://api.github.com/users/OskarPersson/orgs", "repos_url": "https://api.github.com/users/OskarPersson/repos", "events_url": "https://api.github.com/users/OskarPersson/events{/privacy}", "received_events_url": "https://api.github.com/users/OskarPersson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T14:03:06Z", "updated_at": "2019-10-28T14:37:06Z", "closed_at": "2019-10-28T14:37:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any release notes for 5.1.3 (missing on PyPi) and 5.1.4 (missing in Github releases)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/195", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/195/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/195/events", "html_url": "https://github.com/jd/tenacity/issues/195", "id": 513324178, "node_id": "MDU6SXNzdWU1MTMzMjQxNzg=", "number": 195, "title": "local release was 5.1.3 but pypi release was 5.1.4", "user": {"login": "xylar", "id": 4179064, "node_id": "MDQ6VXNlcjQxNzkwNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4179064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xylar", "html_url": "https://github.com/xylar", "followers_url": "https://api.github.com/users/xylar/followers", "following_url": "https://api.github.com/users/xylar/following{/other_user}", "gists_url": "https://api.github.com/users/xylar/gists{/gist_id}", "starred_url": "https://api.github.com/users/xylar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xylar/subscriptions", "organizations_url": "https://api.github.com/users/xylar/orgs", "repos_url": "https://api.github.com/users/xylar/repos", "events_url": "https://api.github.com/users/xylar/events{/privacy}", "received_events_url": "https://api.github.com/users/xylar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T14:02:47Z", "updated_at": "2019-10-28T14:36:23Z", "closed_at": "2019-10-28T14:36:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is likely to cause some confusion.  It might be good to do a local 5.1.4 release that is the same as 5.1.3 to avoid any future issues.  A 5.1.4 conda-forge package has already been built so it won't be easy to go back to 5.1.3 at this point.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/190", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/190/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/190/events", "html_url": "https://github.com/jd/tenacity/issues/190", "id": 481496590, "node_id": "MDU6SXNzdWU0ODE0OTY1OTA=", "number": 190, "title": "Wheel for 5.1.0 is broken at pypi", "user": {"login": "vhaldemar", "id": 2813303, "node_id": "MDQ6VXNlcjI4MTMzMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2813303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhaldemar", "html_url": "https://github.com/vhaldemar", "followers_url": "https://api.github.com/users/vhaldemar/followers", "following_url": "https://api.github.com/users/vhaldemar/following{/other_user}", "gists_url": "https://api.github.com/users/vhaldemar/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhaldemar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhaldemar/subscriptions", "organizations_url": "https://api.github.com/users/vhaldemar/orgs", "repos_url": "https://api.github.com/users/vhaldemar/repos", "events_url": "https://api.github.com/users/vhaldemar/events{/privacy}", "received_events_url": "https://api.github.com/users/vhaldemar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-16T08:14:33Z", "updated_at": "2019-08-16T08:45:47Z", "closed_at": "2019-08-16T08:45:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nWheel file at pypi (https://pypi.org/project/tenacity/5.1.0/) does not contain source code, only metadata.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/188", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/188/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/188/events", "html_url": "https://github.com/jd/tenacity/issues/188", "id": 479445161, "node_id": "MDU6SXNzdWU0Nzk0NDUxNjE=", "number": 188, "title": "How to use two retry?", "user": {"login": "Gatsby-Lee", "id": 22950880, "node_id": "MDQ6VXNlcjIyOTUwODgw", "avatar_url": "https://avatars1.githubusercontent.com/u/22950880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gatsby-Lee", "html_url": "https://github.com/Gatsby-Lee", "followers_url": "https://api.github.com/users/Gatsby-Lee/followers", "following_url": "https://api.github.com/users/Gatsby-Lee/following{/other_user}", "gists_url": "https://api.github.com/users/Gatsby-Lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gatsby-Lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gatsby-Lee/subscriptions", "organizations_url": "https://api.github.com/users/Gatsby-Lee/orgs", "repos_url": "https://api.github.com/users/Gatsby-Lee/repos", "events_url": "https://api.github.com/users/Gatsby-Lee/events{/privacy}", "received_events_url": "https://api.github.com/users/Gatsby-Lee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-12T02:24:23Z", "updated_at": "2019-08-13T16:28:20Z", "closed_at": "2019-08-13T08:12:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHi I have question.\r\n\r\nWhat if I'd like to wrap a function with different retry with different wait time?\r\n\r\nFor example,\r\nLet's assume there is a function which raises `ConnectionException`, `TimeoutException`.\r\nI'd like to retry with exponential_wait for `TimeoutExceptoin`, but I'd like retry without any sleep for `ConnectionException`\r\n\r\nCan you tell me how I can handle this case?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/185", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/185/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/185/events", "html_url": "https://github.com/jd/tenacity/issues/185", "id": 471175859, "node_id": "MDU6SXNzdWU0NzExNzU4NTk=", "number": 185, "title": "Question: how to get actual Exception?", "user": {"login": "Gatsby-Lee", "id": 22950880, "node_id": "MDQ6VXNlcjIyOTUwODgw", "avatar_url": "https://avatars1.githubusercontent.com/u/22950880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gatsby-Lee", "html_url": "https://github.com/Gatsby-Lee", "followers_url": "https://api.github.com/users/Gatsby-Lee/followers", "following_url": "https://api.github.com/users/Gatsby-Lee/following{/other_user}", "gists_url": "https://api.github.com/users/Gatsby-Lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gatsby-Lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gatsby-Lee/subscriptions", "organizations_url": "https://api.github.com/users/Gatsby-Lee/orgs", "repos_url": "https://api.github.com/users/Gatsby-Lee/repos", "events_url": "https://api.github.com/users/Gatsby-Lee/events{/privacy}", "received_events_url": "https://api.github.com/users/Gatsby-Lee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-22T16:26:22Z", "updated_at": "2019-07-24T08:28:14Z", "closed_at": "2019-07-24T08:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nCan you help me find a way to get actual exception instance when fully retried?\r\nI tried multiple ways, but haven't figured it out.\r\n\r\nFor example, this code raises exception.\r\n```\r\nprint(1/0)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test1.py\", line 6, in <module>\r\n    print(1/0)\r\nZeroDivisionError: division by zero\r\n```\r\n\r\nIf I wrap divisionByZero function below, how can I get the actual Exception instance?\r\n```python\r\nfrom tenacity import (\r\n    retry,\r\n    stop_after_attempt\r\n) \r\n\r\n@retry(stop=stop_after_attempt(1))\r\ndef divisionByZero():\r\n   print(1/0)\r\n\r\ntry:\r\n    divisionByZero()\r\nexcept Exception as e: \r\n    print(e)\r\n    # how can I get `ZeroDivisionError` instance here?\r\n```\r\n\r\nP.S. I tried to label it with `Question`, but couldn't find the way.\r\n\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/184", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/184/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/184/events", "html_url": "https://github.com/jd/tenacity/issues/184", "id": 471052888, "node_id": "MDU6SXNzdWU0NzEwNTI4ODg=", "number": 184, "title": "Retrying not working without decorators ", "user": {"login": "muhammadhamzakhan", "id": 19928007, "node_id": "MDQ6VXNlcjE5OTI4MDA3", "avatar_url": "https://avatars3.githubusercontent.com/u/19928007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muhammadhamzakhan", "html_url": "https://github.com/muhammadhamzakhan", "followers_url": "https://api.github.com/users/muhammadhamzakhan/followers", "following_url": "https://api.github.com/users/muhammadhamzakhan/following{/other_user}", "gists_url": "https://api.github.com/users/muhammadhamzakhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/muhammadhamzakhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muhammadhamzakhan/subscriptions", "organizations_url": "https://api.github.com/users/muhammadhamzakhan/orgs", "repos_url": "https://api.github.com/users/muhammadhamzakhan/repos", "events_url": "https://api.github.com/users/muhammadhamzakhan/events{/privacy}", "received_events_url": "https://api.github.com/users/muhammadhamzakhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-22T11:54:51Z", "updated_at": "2019-07-26T08:33:12Z", "closed_at": "2019-07-26T08:32:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "My following code seems to be throwing a `TypeError: request() got an unexpected keyword argument 'kwargs'`, even though the underlying function does expect those arguments:\r\n\r\n```\r\nretrying = tenacity.Retrying(stop=tenacity.stop_after_attempt(config.retry_count),\r\n                             wait=tenacity.wait_random_exponential(multiplier=config.back_off,\r\n                                                                   max=config.retry_max_delay,\r\n                                                                   min=config.retry_delay),\r\n                             retry=tenacity.retry_if_exception_type(Exception))\r\n\r\nresponse_data = retrying.call(fn=self.request, args=[method, url], kwargs={\"query_params\": query_params,\r\n                                                                           \"headers\": header_params,\r\n                                                                           \"post_params\": post_params,\r\n                                                                           \"body\": body,\r\n                                                                           \"_preload_content\": _preload_content,\r\n                                                                           \"_request_timeout\": _request_timeout})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/182", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/182/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/182/events", "html_url": "https://github.com/jd/tenacity/issues/182", "id": 469558780, "node_id": "MDU6SXNzdWU0Njk1NTg3ODA=", "number": 182, "title": "RetryError cannot be serialized with pickle", "user": {"login": "mezgerj", "id": 6477684, "node_id": "MDQ6VXNlcjY0Nzc2ODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6477684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mezgerj", "html_url": "https://github.com/mezgerj", "followers_url": "https://api.github.com/users/mezgerj/followers", "following_url": "https://api.github.com/users/mezgerj/following{/other_user}", "gists_url": "https://api.github.com/users/mezgerj/gists{/gist_id}", "starred_url": "https://api.github.com/users/mezgerj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mezgerj/subscriptions", "organizations_url": "https://api.github.com/users/mezgerj/orgs", "repos_url": "https://api.github.com/users/mezgerj/repos", "events_url": "https://api.github.com/users/mezgerj/events{/privacy}", "received_events_url": "https://api.github.com/users/mezgerj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-18T03:55:12Z", "updated_at": "2019-10-28T11:04:25Z", "closed_at": "2019-10-28T11:04:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, RetryError is unpickleable. To ensure that exceptions raised from the tenacity library are pickle-able they should provide the original arguments it was instantiated with in its .args attribute.This affects the ability to use tenacity inside of a celery task for example. I am working on a PR for this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/181", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/181/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/181/events", "html_url": "https://github.com/jd/tenacity/issues/181", "id": 469246236, "node_id": "MDU6SXNzdWU0NjkyNDYyMzY=", "number": 181, "title": "Asyncio: iscoroutinefunction does not work with tenacity", "user": {"login": "sbrandtb", "id": 1580789, "node_id": "MDQ6VXNlcjE1ODA3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1580789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrandtb", "html_url": "https://github.com/sbrandtb", "followers_url": "https://api.github.com/users/sbrandtb/followers", "following_url": "https://api.github.com/users/sbrandtb/following{/other_user}", "gists_url": "https://api.github.com/users/sbrandtb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrandtb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrandtb/subscriptions", "organizations_url": "https://api.github.com/users/sbrandtb/orgs", "repos_url": "https://api.github.com/users/sbrandtb/repos", "events_url": "https://api.github.com/users/sbrandtb/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrandtb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198545, "node_id": "MDU6TGFiZWw0MjMxOTg1NDU=", "url": "https://api.github.com/repos/jd/tenacity/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-17T14:23:29Z", "updated_at": "2019-11-05T16:18:50Z", "closed_at": "2019-11-05T14:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "When decorating an `async` function with `@retry`, `asyncio.iscoroutinefunction(f)` unexpectedly returns `False`, because the wrapping function, in fact, is no coroutine.\r\n\r\nThis is a problem in some libraries that are using this way of determining if they are handling an async function or not (in my case: trafaret).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/175", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/175/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/175/events", "html_url": "https://github.com/jd/tenacity/issues/175", "id": 457018914, "node_id": "MDU6SXNzdWU0NTcwMTg5MTQ=", "number": 175, "title": "wait_exponential has unexpected first delay", "user": {"login": "cyounkins", "id": 346185, "node_id": "MDQ6VXNlcjM0NjE4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/346185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyounkins", "html_url": "https://github.com/cyounkins", "followers_url": "https://api.github.com/users/cyounkins/followers", "following_url": "https://api.github.com/users/cyounkins/following{/other_user}", "gists_url": "https://api.github.com/users/cyounkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyounkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyounkins/subscriptions", "organizations_url": "https://api.github.com/users/cyounkins/orgs", "repos_url": "https://api.github.com/users/cyounkins/repos", "events_url": "https://api.github.com/users/cyounkins/events{/privacy}", "received_events_url": "https://api.github.com/users/cyounkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-17T16:05:58Z", "updated_at": "2019-06-21T04:50:45Z", "closed_at": "2019-06-21T04:50:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there! Thank you for `tenacity`!\r\n\r\nThe first delay for `wait_exponential` is `2 * multiplier`, and to me that is unexpected. In version `5.0.4`:\r\n\r\n```\r\nIn [14]: t0 = time.time()\r\n    ...: t_last = t0\r\n    ...: @retry(wait=wait_exponential(multiplier=0.2), stop=stop_after_attempt(5))\r\n    ...: def wait():\r\n    ...:     current_time = time.time()\r\n    ...:     global t_last\r\n    ...:     print(\"%.2f - %.2f\" % (current_time - t0, current_time - t_last))\r\n    ...:     t_last = current_time\r\n    ...:     raise Exception\r\n    ...: print(\"total - delta\")\r\n    ...: wait()\r\ntotal - delta\r\n0.00 - 0.00\r\n0.40 - 0.40\r\n1.21 - 0.80\r\n2.81 - 1.60\r\n6.01 - 3.20\r\n```\r\n\r\nTo me it would make more sense for the first delay to be `1 * multiplier`. Others may expect the first retry to occur immediately with no delay, or maybe they want the sequence to be 0.1, 0.2, 0.4, 0.8, etc. which doesn't seem possible with just `wait_exponential`.\r\n\r\nCan this be considered a bug? Is this unexpected to others, or do others want to be able to create the sequence above?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/174", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/174/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/174/events", "html_url": "https://github.com/jd/tenacity/issues/174", "id": 455050116, "node_id": "MDU6SXNzdWU0NTUwNTAxMTY=", "number": 174, "title": "Different wait strategy for different exceptions", "user": {"login": "panthony", "id": 230462, "node_id": "MDQ6VXNlcjIzMDQ2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/230462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panthony", "html_url": "https://github.com/panthony", "followers_url": "https://api.github.com/users/panthony/followers", "following_url": "https://api.github.com/users/panthony/following{/other_user}", "gists_url": "https://api.github.com/users/panthony/gists{/gist_id}", "starred_url": "https://api.github.com/users/panthony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panthony/subscriptions", "organizations_url": "https://api.github.com/users/panthony/orgs", "repos_url": "https://api.github.com/users/panthony/repos", "events_url": "https://api.github.com/users/panthony/events{/privacy}", "received_events_url": "https://api.github.com/users/panthony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-12T07:19:15Z", "updated_at": "2019-06-12T12:43:20Z", "closed_at": "2019-06-12T12:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\n\r\nIs there a way to have a different wait strategy depending on the raised exception ?\r\n\r\nSome exceptions would require a backoff whereas others would require to keep the pressure.\r\n\r\nOr for this particular case I should use nested method with different `@Retry` annotation ?\r\n\r\nThanks for this awesome library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/173", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/173/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/173/events", "html_url": "https://github.com/jd/tenacity/issues/173", "id": 455045359, "node_id": "MDU6SXNzdWU0NTUwNDUzNTk=", "number": 173, "title": "Callback after an attempt (successful or not)", "user": {"login": "panthony", "id": 230462, "node_id": "MDQ6VXNlcjIzMDQ2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/230462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panthony", "html_url": "https://github.com/panthony", "followers_url": "https://api.github.com/users/panthony/followers", "following_url": "https://api.github.com/users/panthony/following{/other_user}", "gists_url": "https://api.github.com/users/panthony/gists{/gist_id}", "starred_url": "https://api.github.com/users/panthony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panthony/subscriptions", "organizations_url": "https://api.github.com/users/panthony/orgs", "repos_url": "https://api.github.com/users/panthony/repos", "events_url": "https://api.github.com/users/panthony/events{/privacy}", "received_events_url": "https://api.github.com/users/panthony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-12T07:05:33Z", "updated_at": "2019-06-12T12:36:46Z", "closed_at": "2019-06-12T12:36:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\n\r\nI'd like to log something if a method successfully executed but after N attempts.\r\n\r\nIs there a way to do this using only `@retry`, without boilerplate code that would read the `statistics` afterward?\r\n\r\nI could not find a way.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/172", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/172/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/172/events", "html_url": "https://github.com/jd/tenacity/issues/172", "id": 449513750, "node_id": "MDU6SXNzdWU0NDk1MTM3NTA=", "number": 172, "title": "<class 'RuntimeError'>: generator raised StopIteration", "user": {"login": "GratefulDave", "id": 10969727, "node_id": "MDQ6VXNlcjEwOTY5NzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/10969727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GratefulDave", "html_url": "https://github.com/GratefulDave", "followers_url": "https://api.github.com/users/GratefulDave/followers", "following_url": "https://api.github.com/users/GratefulDave/following{/other_user}", "gists_url": "https://api.github.com/users/GratefulDave/gists{/gist_id}", "starred_url": "https://api.github.com/users/GratefulDave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GratefulDave/subscriptions", "organizations_url": "https://api.github.com/users/GratefulDave/orgs", "repos_url": "https://api.github.com/users/GratefulDave/repos", "events_url": "https://api.github.com/users/GratefulDave/events{/privacy}", "received_events_url": "https://api.github.com/users/GratefulDave/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-28T22:58:39Z", "updated_at": "2019-05-31T08:44:20Z", "closed_at": "2019-05-31T08:44:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting `<class 'RuntimeError'>: generator raised StopIteration` when I use the following decorator `@retry(stop=stop_after_attempt(5), wait=wait_random_exponential(multiplier=0.15, max=60))` on a function.  When, I remove the decorator the error goes away. \r\n\r\nI am importing the libraries like this:\r\n`from tenacity import retry, stop_after_attempt, wait_random_exponential`.\r\n\r\nAny suggestions would be greatly appreciated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/171", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/171/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/171/events", "html_url": "https://github.com/jd/tenacity/issues/171", "id": 445901946, "node_id": "MDU6SXNzdWU0NDU5MDE5NDY=", "number": 171, "title": "Decorators should be higher order functions", "user": {"login": "CMCDragonkai", "id": 640797, "node_id": "MDQ6VXNlcjY0MDc5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/640797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CMCDragonkai", "html_url": "https://github.com/CMCDragonkai", "followers_url": "https://api.github.com/users/CMCDragonkai/followers", "following_url": "https://api.github.com/users/CMCDragonkai/following{/other_user}", "gists_url": "https://api.github.com/users/CMCDragonkai/gists{/gist_id}", "starred_url": "https://api.github.com/users/CMCDragonkai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CMCDragonkai/subscriptions", "organizations_url": "https://api.github.com/users/CMCDragonkai/orgs", "repos_url": "https://api.github.com/users/CMCDragonkai/repos", "events_url": "https://api.github.com/users/CMCDragonkai/events{/privacy}", "received_events_url": "https://api.github.com/users/CMCDragonkai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-20T02:50:47Z", "updated_at": "2019-05-20T07:47:45Z", "closed_at": "2019-05-20T07:03:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I expected decorators to be higher order functions, so I'm curious why this is not working:\r\n\r\n```py\r\nimport tenacity\r\n\r\nclass MyError(Exception):\r\n  pass\r\n\r\ndef f():\r\n  raise MyError()\r\n\r\nf_ = tenacity.retry(f, stop=tenacity.stop_after_attempt(3))\r\n\r\nf_()\r\n```\r\n\r\nThe `stop` condition is not being understood. I understand that there's `tenacity.Retrying` but still most decorators I use can be used in this way. So I think this is strange that this doesn't work. Also this is needed when you need to use decorators in a dynamic way. Such as when the retry conditions are not static parameters, but dynamically injected from other code.\r\n\r\nRelated: https://github.com/jd/tenacity/issues/155", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/166", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/166/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/166/events", "html_url": "https://github.com/jd/tenacity/issues/166", "id": 434234773, "node_id": "MDU6SXNzdWU0MzQyMzQ3NzM=", "number": 166, "title": "Error importing tenacity on python 3.7.3", "user": {"login": "anudeepsamaiya", "id": 3428221, "node_id": "MDQ6VXNlcjM0MjgyMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3428221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anudeepsamaiya", "html_url": "https://github.com/anudeepsamaiya", "followers_url": "https://api.github.com/users/anudeepsamaiya/followers", "following_url": "https://api.github.com/users/anudeepsamaiya/following{/other_user}", "gists_url": "https://api.github.com/users/anudeepsamaiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/anudeepsamaiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anudeepsamaiya/subscriptions", "organizations_url": "https://api.github.com/users/anudeepsamaiya/orgs", "repos_url": "https://api.github.com/users/anudeepsamaiya/repos", "events_url": "https://api.github.com/users/anudeepsamaiya/events{/privacy}", "received_events_url": "https://api.github.com/users/anudeepsamaiya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-17T11:36:04Z", "updated_at": "2019-04-17T12:33:21Z", "closed_at": "2019-04-17T12:33:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> import tenacity\r\n        from tenacity.async import AsyncRetrying\r\n                      ^\r\nSyntaxError: invalid syntax\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/165", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/165/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/165/events", "html_url": "https://github.com/jd/tenacity/issues/165", "id": 433317375, "node_id": "MDU6SXNzdWU0MzMzMTczNzU=", "number": 165, "title": "Class-based API", "user": {"login": "gsakkis", "id": 291289, "node_id": "MDQ6VXNlcjI5MTI4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/291289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsakkis", "html_url": "https://github.com/gsakkis", "followers_url": "https://api.github.com/users/gsakkis/followers", "following_url": "https://api.github.com/users/gsakkis/following{/other_user}", "gists_url": "https://api.github.com/users/gsakkis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsakkis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsakkis/subscriptions", "organizations_url": "https://api.github.com/users/gsakkis/orgs", "repos_url": "https://api.github.com/users/gsakkis/repos", "events_url": "https://api.github.com/users/gsakkis/events{/privacy}", "received_events_url": "https://api.github.com/users/gsakkis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198552, "node_id": "MDU6TGFiZWw0MjMxOTg1NTI=", "url": "https://api.github.com/repos/jd/tenacity/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-15T14:35:30Z", "updated_at": "2020-06-23T13:26:37Z", "closed_at": "2020-06-23T13:26:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently `tenacity` exposes quite a few names, which leads to either a lot of `tenacity.FOO` module attribute access or `from tenacity import *`. How about adding a class-based api that exposes the same names as attributes of a `Retry` object? Something like:\r\n```\r\n(tenacity.Retry()\r\n .retry_if_exception_type(IOError)\r\n .stop_after_attempt(5)\r\n .wait_exponential(multiplier=1, min=4, max=10)\r\n .before_log(logger, logging.DEBUG)\r\n .before_sleep_log(logger, logging.DEBUG)\r\n .reraise(True)\r\n)\r\n``` \r\nas equivalent of\r\n ```\r\ntenacity.retry(\r\n    retry=tenacity.retry_if_exception_type(IOError),\r\n    stop=tenacity.stop_after_attempt(5),\r\n    wait=tenacity.wait_exponential(multiplier=1, min=4, max=10),\r\n    before=tenacity.before_log(logger, logging.DEBUG),\r\n    before_sleep=tenacity.before_sleep_log(logger, logging.DEBUG),\r\n    reraise=True)\r\n```\r\nSadly the former cannot be used directly as decorator due to syntax limitations of  `@` expressions so it would need to be assigned to a name first. Anyhow, just a suggestion.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/163", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/163/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/163/events", "html_url": "https://github.com/jd/tenacity/issues/163", "id": 430070205, "node_id": "MDU6SXNzdWU0MzAwNzAyMDU=", "number": 163, "title": "retry doesn't pass retry_state to method", "user": {"login": "rafalkrupinski", "id": 3732079, "node_id": "MDQ6VXNlcjM3MzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3732079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafalkrupinski", "html_url": "https://github.com/rafalkrupinski", "followers_url": "https://api.github.com/users/rafalkrupinski/followers", "following_url": "https://api.github.com/users/rafalkrupinski/following{/other_user}", "gists_url": "https://api.github.com/users/rafalkrupinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafalkrupinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafalkrupinski/subscriptions", "organizations_url": "https://api.github.com/users/rafalkrupinski/orgs", "repos_url": "https://api.github.com/users/rafalkrupinski/repos", "events_url": "https://api.github.com/users/rafalkrupinski/events{/privacy}", "received_events_url": "https://api.github.com/users/rafalkrupinski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198545, "node_id": "MDU6TGFiZWw0MjMxOTg1NDU=", "url": "https://api.github.com/repos/jd/tenacity/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-06T19:51:03Z", "updated_at": "2019-04-08T15:16:23Z", "closed_at": "2019-04-08T15:16:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a bound method as a 'before' function (possibly others) that takes retry_state causes an error:\r\n\r\n\r\n```    @_utils.wraps(fn)\r\n    def wrapped_before_func(retry_state):\r\n        # func, trial_number, trial_time_taken\r\n        warn_about_non_retry_state_deprecation('before', fn, stacklevel=4)\r\n        return fn(\r\n            retry_state.fn,\r\n>           retry_state.attempt_number,\r\n        )\r\nE       TypeError: _retry_refresh_token() takes 2 positional arguments but 3 were given\r\n```\r\n\r\n2 positional arguments above are self, retry_state\r\n\r\ncalling ```inspect.isfunction()``` on a bound method returns false, but then the code assumes it's a callable object. In result the compatibility wrapper is used which tries to call the method with parameters for the old-style before function.\r\n\r\nhttps://github.com/jd/tenacity/blob/5f3d822c22ef435a57081a314bcb61b1c9f7b326/tenacity/compat.py#L29\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/162", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/162/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/162/events", "html_url": "https://github.com/jd/tenacity/issues/162", "id": 429775262, "node_id": "MDU6SXNzdWU0Mjk3NzUyNjI=", "number": 162, "title": "`wait_random_exponential(min)`: unexpected behavior ", "user": {"login": "thomas-riccardi", "id": 1730297, "node_id": "MDQ6VXNlcjE3MzAyOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1730297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomas-riccardi", "html_url": "https://github.com/thomas-riccardi", "followers_url": "https://api.github.com/users/thomas-riccardi/followers", "following_url": "https://api.github.com/users/thomas-riccardi/following{/other_user}", "gists_url": "https://api.github.com/users/thomas-riccardi/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomas-riccardi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomas-riccardi/subscriptions", "organizations_url": "https://api.github.com/users/thomas-riccardi/orgs", "repos_url": "https://api.github.com/users/thomas-riccardi/repos", "events_url": "https://api.github.com/users/thomas-riccardi/events{/privacy}", "received_events_url": "https://api.github.com/users/thomas-riccardi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-05T14:10:42Z", "updated_at": "2019-04-08T11:38:14Z", "closed_at": "2019-04-08T11:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since #135 `wait_exponential()` accepts a `min` parameter: the wait will *never* be lower than `min`.\r\n\r\nHowever, `wait_exponential()` is the base class of `wait_random_exponential()`, and this results in an unexpected semantic for `min` for `wait_random_exponential()`:\r\nI would have expected that it would *also* mean here that the wait *never* be lower than `min`.\r\nBut it's not the case: the `min` capping is only done in `wait_exponential()`: the random is still applied on the range `[0, parent]`.\r\n\r\nI would thus expect that `wait_random_exponential(min)` does a random on the range `[min, parent(min=0)]` (which is in fact the same as the simpler to implement `[min, parent]`).\r\n\r\nOr maybe we need 2 `min`: the parent min to compute the random upper bound, and a new min for the random lower bound ? It would avoid having the same value `min` multiple times until the exponential exceeds it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/160", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/160/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/160/events", "html_url": "https://github.com/jd/tenacity/issues/160", "id": 406950493, "node_id": "MDU6SXNzdWU0MDY5NTA0OTM=", "number": 160, "title": "stop retrying when a custom exception is raised", "user": {"login": "robroc", "id": 1219001, "node_id": "MDQ6VXNlcjEyMTkwMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1219001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robroc", "html_url": "https://github.com/robroc", "followers_url": "https://api.github.com/users/robroc/followers", "following_url": "https://api.github.com/users/robroc/following{/other_user}", "gists_url": "https://api.github.com/users/robroc/gists{/gist_id}", "starred_url": "https://api.github.com/users/robroc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robroc/subscriptions", "organizations_url": "https://api.github.com/users/robroc/orgs", "repos_url": "https://api.github.com/users/robroc/repos", "events_url": "https://api.github.com/users/robroc/events{/privacy}", "received_events_url": "https://api.github.com/users/robroc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-05T19:59:48Z", "updated_at": "2019-02-14T07:39:08Z", "closed_at": "2019-02-14T07:39:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using tenacity on a script that taps in to the Twitter API. I only want to retry if `TwitterHTTPError` is raised and the error message has the words 'status 401'.\r\n\r\nHowever, the function below keeps retrying even when a custom exception is raised. Even when I add `retry_unless_exception_type` it keeps retrying.\r\n\r\n```\r\nfrom twitter import TwitterHTTPError\r\n\r\nclass PrivateTwitterError(Exception):\r\n    pass\r\n\r\n@retry(reraise = True,\r\n       wait = wait_random(min=2, max=4),\r\n        retry =retry_unless_exception_type(PrivateTwitterError))        \r\ndef get_last_200_tweets(user_id):\r\n    try:\r\n        return twitter_api.statuses.user_timeline(user_id = user_id,\r\n                                              count = 200,\r\n                                              include_rts = 'true')\r\n\r\n    except TwitterHTTPError as e:\r\n        if 'status 401' in str(e):\r\n            # Stop retrying if the exception is raised\r\n            raise PrivateTwitterError('Twitter error 401: unautorized.')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/159", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/159/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/159/events", "html_url": "https://github.com/jd/tenacity/issues/159", "id": 404076256, "node_id": "MDU6SXNzdWU0MDQwNzYyNTY=", "number": 159, "title": "getargspec deprecated in python 3.0", "user": {"login": "sethwoodworth", "id": 123998, "node_id": "MDQ6VXNlcjEyMzk5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethwoodworth", "html_url": "https://github.com/sethwoodworth", "followers_url": "https://api.github.com/users/sethwoodworth/followers", "following_url": "https://api.github.com/users/sethwoodworth/following{/other_user}", "gists_url": "https://api.github.com/users/sethwoodworth/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethwoodworth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethwoodworth/subscriptions", "organizations_url": "https://api.github.com/users/sethwoodworth/orgs", "repos_url": "https://api.github.com/users/sethwoodworth/repos", "events_url": "https://api.github.com/users/sethwoodworth/events{/privacy}", "received_events_url": "https://api.github.com/users/sethwoodworth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-29T01:04:22Z", "updated_at": "2019-01-29T01:11:38Z", "closed_at": "2019-01-29T01:11:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using your wonderful library with `pytest` I get a deprecation warning:\r\n```\r\nvenv/lib/python3.6/site-packages/tenacity/__init__.py:167\r\n...venv/lib/python3.6/site-packages/tenacity/__init__.py:167: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n    waiter_spec = inspect.getargspec(waiter)\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```\r\n`inspect.getargspec` as been deprecated in favor of `inspect.getfullargspec` [source](https://docs.python.org/3/library/inspect.html#inspect.getargspec).  I'll take a crack at switching to `getfullargspec` tonight!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/158", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/158/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/158/events", "html_url": "https://github.com/jd/tenacity/issues/158", "id": 396222181, "node_id": "MDU6SXNzdWUzOTYyMjIxODE=", "number": 158, "title": "I am using Python 3.7.1 and successfully installed tenacity with pip.", "user": {"login": "GratefulDave", "id": 10969727, "node_id": "MDQ6VXNlcjEwOTY5NzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/10969727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GratefulDave", "html_url": "https://github.com/GratefulDave", "followers_url": "https://api.github.com/users/GratefulDave/followers", "following_url": "https://api.github.com/users/GratefulDave/following{/other_user}", "gists_url": "https://api.github.com/users/GratefulDave/gists{/gist_id}", "starred_url": "https://api.github.com/users/GratefulDave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GratefulDave/subscriptions", "organizations_url": "https://api.github.com/users/GratefulDave/orgs", "repos_url": "https://api.github.com/users/GratefulDave/repos", "events_url": "https://api.github.com/users/GratefulDave/events{/privacy}", "received_events_url": "https://api.github.com/users/GratefulDave/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-06T02:44:23Z", "updated_at": "2019-01-15T20:02:35Z", "closed_at": "2019-01-15T20:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using Python 3.7.1 and successfully installed tenacity with pip.\r\n```\r\nimport logging\r\nfrom tenacity import *\r\n\r\nclass MyException(Exception):\r\n    pass\r\n\r\n@retry(stop=stop_after_attempt(7))\r\ndef stop_after_7_attempts():\r\n    print(\"Stopping after 7 attempts\")\r\n    raise Exception\r\n\r\n`NameError: name 'retry' is not defined`\r\n```\r\n\r\n_Originally posted by @GratefulDave in https://github.com/jd/tenacity/issue_comments#issuecomment-451710319_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/157", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/157/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/157/events", "html_url": "https://github.com/jd/tenacity/issues/157", "id": 394461049, "node_id": "MDU6SXNzdWUzOTQ0NjEwNDk=", "number": 157, "title": "NameError", "user": {"login": "GratefulDave", "id": 10969727, "node_id": "MDQ6VXNlcjEwOTY5NzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/10969727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GratefulDave", "html_url": "https://github.com/GratefulDave", "followers_url": "https://api.github.com/users/GratefulDave/followers", "following_url": "https://api.github.com/users/GratefulDave/following{/other_user}", "gists_url": "https://api.github.com/users/GratefulDave/gists{/gist_id}", "starred_url": "https://api.github.com/users/GratefulDave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GratefulDave/subscriptions", "organizations_url": "https://api.github.com/users/GratefulDave/orgs", "repos_url": "https://api.github.com/users/GratefulDave/repos", "events_url": "https://api.github.com/users/GratefulDave/events{/privacy}", "received_events_url": "https://api.github.com/users/GratefulDave/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 426175559, "node_id": "MDU6TGFiZWw0MjYxNzU1NTk=", "url": "https://api.github.com/repos/jd/tenacity/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}, {"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-27T18:31:49Z", "updated_at": "2019-06-01T01:39:08Z", "closed_at": "2019-05-02T15:56:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to Python and may be making a beginner's mistake. I am using Python 3.7.1 in an Anaconda virtual environment and installed tenacity with PIP am using the following code:\r\n\r\n```\r\nfrom tenacity import retry\r\n\r\n@retry(stop=stop_after_attempt(7))\r\ndef stop_after_7_attempts():\r\n    print(\"Stopping after 7 attempts\")\r\n    raise Exception\r\n```\r\nand receiving the following error:\r\n`NameError: name 'stop_after_attempt' is not defined`. \r\n\r\nWhat am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/156", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/156/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/156/events", "html_url": "https://github.com/jd/tenacity/issues/156", "id": 393239892, "node_id": "MDU6SXNzdWUzOTMyMzk4OTI=", "number": 156, "title": "Retry and unit tests", "user": {"login": "kryptek", "id": 838894, "node_id": "MDQ6VXNlcjgzODg5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/838894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kryptek", "html_url": "https://github.com/kryptek", "followers_url": "https://api.github.com/users/kryptek/followers", "following_url": "https://api.github.com/users/kryptek/following{/other_user}", "gists_url": "https://api.github.com/users/kryptek/gists{/gist_id}", "starred_url": "https://api.github.com/users/kryptek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kryptek/subscriptions", "organizations_url": "https://api.github.com/users/kryptek/orgs", "repos_url": "https://api.github.com/users/kryptek/repos", "events_url": "https://api.github.com/users/kryptek/events{/privacy}", "received_events_url": "https://api.github.com/users/kryptek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-20T22:48:44Z", "updated_at": "2019-01-15T00:46:50Z", "closed_at": "2019-01-15T00:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The exponential wait and multiple retries is making my unit tests take forever! Any way to fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/155", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/155/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/155/events", "html_url": "https://github.com/jd/tenacity/issues/155", "id": 384045722, "node_id": "MDU6SXNzdWUzODQwNDU3MjI=", "number": 155, "title": "Retry is not working without decorator", "user": {"login": "debraj-manna", "id": 8141860, "node_id": "MDQ6VXNlcjgxNDE4NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8141860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debraj-manna", "html_url": "https://github.com/debraj-manna", "followers_url": "https://api.github.com/users/debraj-manna/followers", "following_url": "https://api.github.com/users/debraj-manna/following{/other_user}", "gists_url": "https://api.github.com/users/debraj-manna/gists{/gist_id}", "starred_url": "https://api.github.com/users/debraj-manna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debraj-manna/subscriptions", "organizations_url": "https://api.github.com/users/debraj-manna/orgs", "repos_url": "https://api.github.com/users/debraj-manna/repos", "events_url": "https://api.github.com/users/debraj-manna/events{/privacy}", "received_events_url": "https://api.github.com/users/debraj-manna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-25T04:10:08Z", "updated_at": "2018-11-26T12:08:24Z", "closed_at": "2018-11-26T12:08:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cross-posting from [stackoverflow](https://stackoverflow.com/questions/53461533/python-retry-using-tenacity-without-decorator)\r\n\r\nI am trying to do a retry using tenacity (without decorator). My code looks like as explained [here](https://julien.danjou.info/python-tenacity/#standaloneusage). It is a part of bigger code. I am putting a toy version here so that it can be reproducible\r\n\r\n```\r\nimport logging\r\nfrom tenacity import retry\r\nimport tenacity\r\n\r\n\r\ndef print_msg():\r\n    try:\r\n        logging.info('Hello')\r\n        logging.info(\"World\")\r\n        raise Exception('Test error')\r\n    except Exception as e:\r\n        logging.error('caught error')\r\n        raise e\r\n\r\n\r\nif __name__ == '__main__':\r\n    logging.basicConfig(\r\n        format='%(asctime)s,%(msecs)d %(levelname)-8s [%(filename)s:%(lineno)d] %(message)s',\r\n        datefmt='%d-%m-%Y:%H:%M:%S',\r\n        level=logging.INFO)\r\n    logging.info('Starting')\r\n    try:\r\n        r = tenacity.Retrying(\r\n            tenacity.stop_after_attempt(2),\r\n            tenacity.wait_incrementing(start=10, increment=100, max=1000),\r\n            reraise=True\r\n        )\r\n        try:\r\n            r.call(print_msg)\r\n        except Exception:\r\n            logging.error('Test error 2')\r\n    except Exception:\r\n        logging.error('Received Exception')\r\n```\r\n\r\nOn executing the above code. The output looks like below with no retry\r\n\r\n```\r\n/Users/dmanna/PycharmProjects/demo/venv/bin/python /Users/dmanna/PycharmProjects/demo/retrier.py\r\n25-11-2018:00:29:47,140 INFO     [retrier.py:21] Starting\r\n25-11-2018:00:29:47,140 INFO     [retrier.py:8] Hello\r\n25-11-2018:00:29:47,140 INFO     [retrier.py:9] World\r\n25-11-2018:00:29:47,140 ERROR    [retrier.py:12] caught error\r\n25-11-2018:00:29:47,141 ERROR    [retrier.py:31] Test error 2\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\nCan someone let me know what is going wrong as I am not seeing any retry in the above code?\r\n\r\nVersions\r\n\r\n- Python - 2.7\r\n- Tenacity - 5.0.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/154", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/154/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/154/events", "html_url": "https://github.com/jd/tenacity/issues/154", "id": 381706901, "node_id": "MDU6SXNzdWUzODE3MDY5MDE=", "number": 154, "title": "Documentation example code doesn't work", "user": {"login": "turing4ever", "id": 41319, "node_id": "MDQ6VXNlcjQxMzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/41319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/turing4ever", "html_url": "https://github.com/turing4ever", "followers_url": "https://api.github.com/users/turing4ever/followers", "following_url": "https://api.github.com/users/turing4ever/following{/other_user}", "gists_url": "https://api.github.com/users/turing4ever/gists{/gist_id}", "starred_url": "https://api.github.com/users/turing4ever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/turing4ever/subscriptions", "organizations_url": "https://api.github.com/users/turing4ever/orgs", "repos_url": "https://api.github.com/users/turing4ever/repos", "events_url": "https://api.github.com/users/turing4ever/events{/privacy}", "received_events_url": "https://api.github.com/users/turing4ever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-16T18:13:45Z", "updated_at": "2019-04-09T08:10:46Z", "closed_at": "2019-04-09T08:10:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the section of **Before and After Retry, and Logging** on the page https://tenacity.readthedocs.io/en/latest/, the example code about `logger` doesn't  work. \r\n\r\nNeed to add a handler into the logger or use the basicConfig. \r\nAdding one line to solve the problem: \r\n```\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\r\nlogger = logging.getLogger(__name__)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/150", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/150/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/150/events", "html_url": "https://github.com/jd/tenacity/issues/150", "id": 375388465, "node_id": "MDU6SXNzdWUzNzUzODg0NjU=", "number": 150, "title": "Access object that contains the retrying function", "user": {"login": "girstenbrei", "id": 22026499, "node_id": "MDQ6VXNlcjIyMDI2NDk5", "avatar_url": "https://avatars1.githubusercontent.com/u/22026499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girstenbrei", "html_url": "https://github.com/girstenbrei", "followers_url": "https://api.github.com/users/girstenbrei/followers", "following_url": "https://api.github.com/users/girstenbrei/following{/other_user}", "gists_url": "https://api.github.com/users/girstenbrei/gists{/gist_id}", "starred_url": "https://api.github.com/users/girstenbrei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girstenbrei/subscriptions", "organizations_url": "https://api.github.com/users/girstenbrei/orgs", "repos_url": "https://api.github.com/users/girstenbrei/repos", "events_url": "https://api.github.com/users/girstenbrei/events{/privacy}", "received_events_url": "https://api.github.com/users/girstenbrei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-30T09:16:30Z", "updated_at": "2018-11-02T10:39:16Z", "closed_at": "2018-11-02T10:39:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, I actually don't know if this is possible or if I just don't know enough about decorators. Here's what I would like to do:\r\n\r\n```python\r\nimport some_db_module\r\nfrom tenacity import wait_fixed, retry\r\n\r\nclass DBConnection:\r\n  def __init__(self, settings):\r\n    self.settings = settings\r\n    self.connection = some_db_module.connect(settings)\r\n\r\n  def reopen_connection(self):\r\n    self.connection = some_db_module.connect(self.settings)\r\n\r\n  @retry(wait=wait_fixed(3), after=self.reopen_connection)\r\n  def send(self):\r\n    self.connection.execute_query('SELECT * FROM this_may_fail')\r\n\r\n\r\nc = DBConnection('db-settings')\r\nc.send()\r\n```\r\n\r\nThis does not work, as the send function decorator cannot access self. If I change it to `@retry(wait=wait_fixed(3), after=reopen_connection)`, the reopen_connection function is called but with self being the function itself, not the object.\r\n\r\nIs there a way to set a function in the retry argument and access the objects variables the function belongs to when it is called? This would enable me to use all the awesome retry features of tenacity, they would be perfect: try to reconnect, but do exponential backoff and stop after a certain time etcetera ...\r\n\r\nThank you for your amazing work!\r\nChris", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/148", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/148/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/148/events", "html_url": "https://github.com/jd/tenacity/issues/148", "id": 374053250, "node_id": "MDU6SXNzdWUzNzQwNTMyNTA=", "number": 148, "title": "How to set default @retry parameters", "user": {"login": "chrigrahcisco", "id": 7501032, "node_id": "MDQ6VXNlcjc1MDEwMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7501032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrigrahcisco", "html_url": "https://github.com/chrigrahcisco", "followers_url": "https://api.github.com/users/chrigrahcisco/followers", "following_url": "https://api.github.com/users/chrigrahcisco/following{/other_user}", "gists_url": "https://api.github.com/users/chrigrahcisco/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrigrahcisco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrigrahcisco/subscriptions", "organizations_url": "https://api.github.com/users/chrigrahcisco/orgs", "repos_url": "https://api.github.com/users/chrigrahcisco/repos", "events_url": "https://api.github.com/users/chrigrahcisco/events{/privacy}", "received_events_url": "https://api.github.com/users/chrigrahcisco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-25T17:30:29Z", "updated_at": "2018-10-29T21:51:07Z", "closed_at": "2018-10-29T21:51:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there as way to set the default @retry parameters while still allowing the clean-and-easy use of the @retry decorator?\r\n\r\nFor example, I have a module that provides database methods. I really just want to use @retry with the same exact parameters for all instances. I'd love to define those once and have them simply apply @retry to all the individual methods vs having to specify the parameters with each @retry lines like this.\r\n\r\n```\r\n@retry(stop=stop_after_attempt(5), wait=wait_fixed(1), reraise=True, before_sleep=before_sleep_log(logger, logging.DEBUG))\r\ndef my_function()\r\n```\r\n\r\nOr is the only option to set a retryer? Then call my functions with .call() like:\r\n\r\n```\r\nr = tenacity.Retrying(\r\n            wait=tenacity.wait_fixed(1),\r\n            stop=tenacity.stop_after_attempt(5),\r\n            reraise=True,\r\n            before_sleep=before_sleep_log(logger, logging.DEBUG,\r\n        )\r\nr.call(my_function)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/142", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/142/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/142/events", "html_url": "https://github.com/jd/tenacity/issues/142", "id": 352396142, "node_id": "MDU6SXNzdWUzNTIzOTYxNDI=", "number": 142, "title": "What's new in 5.x?", "user": {"login": "adamrothman", "id": 662688, "node_id": "MDQ6VXNlcjY2MjY4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/662688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrothman", "html_url": "https://github.com/adamrothman", "followers_url": "https://api.github.com/users/adamrothman/followers", "following_url": "https://api.github.com/users/adamrothman/following{/other_user}", "gists_url": "https://api.github.com/users/adamrothman/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrothman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrothman/subscriptions", "organizations_url": "https://api.github.com/users/adamrothman/orgs", "repos_url": "https://api.github.com/users/adamrothman/repos", "events_url": "https://api.github.com/users/adamrothman/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrothman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198546, "node_id": "MDU6TGFiZWw0MjMxOTg1NDY=", "url": "https://api.github.com/repos/jd/tenacity/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-21T06:00:01Z", "updated_at": "2018-10-27T04:00:32Z", "closed_at": "2018-08-27T11:22:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "New features, backwards-incompatible changes? It would be really great for this project to have a changelog or at the very least, notes with each release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/141", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/141/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/141/events", "html_url": "https://github.com/jd/tenacity/issues/141", "id": 352115750, "node_id": "MDU6SXNzdWUzNTIxMTU3NTA=", "number": 141, "title": "Add support for Python 3.7", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-20T12:36:37Z", "updated_at": "2018-09-10T07:03:25Z", "closed_at": "2018-09-10T07:03:25Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This should be added and tested on Travis.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/139", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/139/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/139/events", "html_url": "https://github.com/jd/tenacity/issues/139", "id": 351646092, "node_id": "MDU6SXNzdWUzNTE2NDYwOTI=", "number": 139, "title": "tenacity 5.0.0 breaks compat", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198545, "node_id": "MDU6TGFiZWw0MjMxOTg1NDU=", "url": "https://api.github.com/repos/jd/tenacity/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-17T15:49:16Z", "updated_at": "2018-08-20T13:35:15Z", "closed_at": "2018-08-20T13:35:15Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\ngabbi.suitemaker.test_gabbi_resource_create_archive_policy.test_request\r\n-----------------------------------------------------------------------\r\nCaptured traceback:\r\n~~~~~~~~~~~~~~~~~~~\r\n    Traceback (most recent call last):\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/gabbi/suite.py\", line 52, in run\r\n        with fixture.nest([fix() for fix in fixtures]):\r\n      File \"/usr/lib/python2.7/contextlib.py\", line 17, in __enter__\r\n        return self.gen.next()\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/gabbi/fixture.py\", line 100, in nest\r\n        six.reraise(exc[0], exc[1], exc[2])\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/gabbi/fixture.py\", line 86, in nest\r\n        contexts.append(enter_func())\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/gabbi/fixture.py\", line 45, in __enter__\r\n        self.start_fixture()\r\n      File \"gnocchi/tests/functional/fixtures.py\", line 168, in start_fixture\r\n        index = indexer.get_driver(conf)\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/tenacity/__init__.py\", line 292, in wrapped_f\r\n        return self.call(f, *args, **kw)\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/tenacity/__init__.py\", line 358, in call\r\n        do = self.iter(retry_state=retry_state)\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/tenacity/__init__.py\", line 318, in iter\r\n        if not (is_explicit_retry or self.retry(retry_state)):\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/tenacity/compat.py\", line 161, in wrapped_retry_func\r\n        return retry_func(retry_state.outcome)\r\n      File \"gnocchi/utils.py\", line 354, in __call__\r\n        return super(_retry_on_exception_and_log, self).__call__(attempt)\r\n      File \"/home/tester/src/.tox/py27-mysql/local/lib/python2.7/site-packages/tenacity/retry.py\", line 67, in __call__\r\n        if retry_state.outcome.failed:\r\n    AttributeError: 'Future' object has no attribute 'outcome'\r\n```\r\n\r\nI've deleted the release from PyPI for the time being", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/137", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/137/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/137/events", "html_url": "https://github.com/jd/tenacity/issues/137", "id": 349518950, "node_id": "MDU6SXNzdWUzNDk1MTg5NTA=", "number": 137, "title": "Retry being called despite successful execution of function", "user": {"login": "chetnaB", "id": 20295179, "node_id": "MDQ6VXNlcjIwMjk1MTc5", "avatar_url": "https://avatars0.githubusercontent.com/u/20295179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chetnaB", "html_url": "https://github.com/chetnaB", "followers_url": "https://api.github.com/users/chetnaB/followers", "following_url": "https://api.github.com/users/chetnaB/following{/other_user}", "gists_url": "https://api.github.com/users/chetnaB/gists{/gist_id}", "starred_url": "https://api.github.com/users/chetnaB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chetnaB/subscriptions", "organizations_url": "https://api.github.com/users/chetnaB/orgs", "repos_url": "https://api.github.com/users/chetnaB/repos", "events_url": "https://api.github.com/users/chetnaB/events{/privacy}", "received_events_url": "https://api.github.com/users/chetnaB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-10T13:37:51Z", "updated_at": "2018-08-17T12:51:55Z", "closed_at": "2018-08-17T12:51:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "On using `retry_unless_exception_type` , retry is always called (despite a successful run) until the exception(s) is(are) encountered. However, correct behavior with this condition should be to retry **only if a function has failed due to some exception other than the ones mentioned** in the retry condition.\r\ne.g. This is the function definition, wherein I want to retry the function only if the exception is **not** among `psycopg2.ProgrammingError` and `NameError` and either the time since last retrial is less than 1 min, or the attempt count is less than 3:\r\n```\r\n@retry(stop=(stop_after_delay(60) | stop_after_attempt(2)),\r\n        reraise=True,\r\n        retry=retry_unless_exception_type((psycopg2.ProgrammingError, NameError)))\r\ndef run_query(query_variable):\r\n    cursor.execute(query_variable)\r\n    print cursor.rowcount\r\n    print \"Done\"\r\n```\r\n\r\nand here's the execution log, which shows that function was retried twice despite successful runs:\r\n```\r\n53059\r\nDone\r\n53059\r\nDone\r\nTraceback (most recent call last):\r\n  File \"update_offer_base_item_mapping.py\", line 22, in <module>\r\n    run_query(a)\r\n  File \"/Users/grofers/Documents/cb/py2venv/lib/python2.7/site-packages/tenacity/__init__.py\", line 241, in wrapped_f\r\n    return self.call(f, *args, **kw)\r\n  File \"/Users/grofers/Documents/cb/py2venv/lib/python2.7/site-packages/tenacity/__init__.py\", line 330, in call\r\n    start_time=start_time)\r\n  File \"/Users/grofers/Documents/cb/py2venv/lib/python2.7/site-packages/tenacity/__init__.py\", line 297, in iter\r\n    raise retry_exc.reraise()\r\n  File \"/Users/grofers/Documents/cb/py2venv/lib/python2.7/site-packages/tenacity/__init__.py\", line 137, in reraise\r\n    raise self\r\ntenacity.RetryError: RetryError[<Future at 0x109cf4190 state=finished returned NoneType>]\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/136", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/136/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/136/events", "html_url": "https://github.com/jd/tenacity/issues/136", "id": 348941806, "node_id": "MDU6SXNzdWUzNDg5NDE4MDY=", "number": 136, "title": "Feature suggestion: `after_sleep` keyword argument", "user": {"login": "JoshPaterson", "id": 20689997, "node_id": "MDQ6VXNlcjIwNjg5OTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/20689997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshPaterson", "html_url": "https://github.com/JoshPaterson", "followers_url": "https://api.github.com/users/JoshPaterson/followers", "following_url": "https://api.github.com/users/JoshPaterson/following{/other_user}", "gists_url": "https://api.github.com/users/JoshPaterson/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshPaterson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshPaterson/subscriptions", "organizations_url": "https://api.github.com/users/JoshPaterson/orgs", "repos_url": "https://api.github.com/users/JoshPaterson/repos", "events_url": "https://api.github.com/users/JoshPaterson/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshPaterson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-09T00:58:04Z", "updated_at": "2018-08-17T12:47:32Z", "closed_at": "2018-08-17T12:47:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm sorry if I'm overlooking an obvious way of doing this, but I'm looking for a way to specify a function to be run before the decorated function is retried, but only on the retries, not the first attempt.\r\n\r\nMy suggestion is to have a keyword argument `after_sleep` that is similar to the already existing keyword arguments `before`, `after`, and `before_sleep`.\r\n\r\nThanks for your work on this package, it is very useful!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/134", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/134/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/134/events", "html_url": "https://github.com/jd/tenacity/issues/134", "id": 348800618, "node_id": "MDU6SXNzdWUzNDg4MDA2MTg=", "number": 134, "title": "Add min wait for exponential backoff", "user": {"login": "MikeWooster", "id": 15776765, "node_id": "MDQ6VXNlcjE1Nzc2NzY1", "avatar_url": "https://avatars1.githubusercontent.com/u/15776765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikeWooster", "html_url": "https://github.com/MikeWooster", "followers_url": "https://api.github.com/users/MikeWooster/followers", "following_url": "https://api.github.com/users/MikeWooster/following{/other_user}", "gists_url": "https://api.github.com/users/MikeWooster/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikeWooster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikeWooster/subscriptions", "organizations_url": "https://api.github.com/users/MikeWooster/orgs", "repos_url": "https://api.github.com/users/MikeWooster/repos", "events_url": "https://api.github.com/users/MikeWooster/events{/privacy}", "received_events_url": "https://api.github.com/users/MikeWooster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-08T16:28:30Z", "updated_at": "2018-08-27T11:22:07Z", "closed_at": "2018-08-27T11:22:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have just came across the use case where I need to add a min wait with an exponential backoff.  We already have a `max` argument, would it be possible to add `min`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/128", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/128/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/128/events", "html_url": "https://github.com/jd/tenacity/issues/128", "id": 343122356, "node_id": "MDU6SXNzdWUzNDMxMjIzNTY=", "number": 128, "title": "SyntaxError for Python 2.7", "user": {"login": "erny", "id": 77168, "node_id": "MDQ6VXNlcjc3MTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/77168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erny", "html_url": "https://github.com/erny", "followers_url": "https://api.github.com/users/erny/followers", "following_url": "https://api.github.com/users/erny/following{/other_user}", "gists_url": "https://api.github.com/users/erny/gists{/gist_id}", "starred_url": "https://api.github.com/users/erny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erny/subscriptions", "organizations_url": "https://api.github.com/users/erny/orgs", "repos_url": "https://api.github.com/users/erny/repos", "events_url": "https://api.github.com/users/erny/events{/privacy}", "received_events_url": "https://api.github.com/users/erny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198546, "node_id": "MDU6TGFiZWw0MjMxOTg1NDY=", "url": "https://api.github.com/repos/jd/tenacity/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-20T14:10:15Z", "updated_at": "2018-07-20T15:53:42Z", "closed_at": "2018-07-20T15:53:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running buildout with this requirement I get SyntaxErrors:\r\n\r\n    yield from ...\r\n\r\nMay be this could be converted to:\r\n\r\n    for bar in foo:\r\n        yield bar\r\n\r\n?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/123", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/123/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/123/events", "html_url": "https://github.com/jd/tenacity/issues/123", "id": 333008986, "node_id": "MDU6SXNzdWUzMzMwMDg5ODY=", "number": 123, "title": "Issue with retry_if_exception_type(AssertionError) with python3.6.5", "user": {"login": "jcdevil", "id": 2634872, "node_id": "MDQ6VXNlcjI2MzQ4NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2634872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcdevil", "html_url": "https://github.com/jcdevil", "followers_url": "https://api.github.com/users/jcdevil/followers", "following_url": "https://api.github.com/users/jcdevil/following{/other_user}", "gists_url": "https://api.github.com/users/jcdevil/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcdevil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcdevil/subscriptions", "organizations_url": "https://api.github.com/users/jcdevil/orgs", "repos_url": "https://api.github.com/users/jcdevil/repos", "events_url": "https://api.github.com/users/jcdevil/events{/privacy}", "received_events_url": "https://api.github.com/users/jcdevil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-16T19:17:58Z", "updated_at": "2018-06-19T09:39:13Z", "closed_at": "2018-06-19T09:39:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, issue encountered with Python 3.6.5 and tenacity 4.12.0 (anyway : thx for that nice lib !)\r\n\r\nHere is the decorator on my method :\r\n```\r\n    @retry(wait=wait_fixed(2), stop=stop_after_attempt(5), retry=retry_if_exception_type(AssertionError))\r\n```\r\n\r\nand when the AssertionError is raised more than supported, I finally get this error :\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jcdevil/Dev/DownloadClientHandler.py\", line 100, in test_teardown_when_2Gb\r\n    self.wait_for_error_in_logs()\r\n  File \"/Users/dependencies/lib/python/site-packages/tenacity/__init__.py\", line 241, in wrapped_f\r\n    return self.call(f, *args, **kw)\r\n  File \"/Users/dependencies/lib/python/site-packages/tenacity/__init__.py\", line 330, in call\r\n    start_time=start_time)\r\n  File \"/Users/dependencies/lib/python/site-packages/tenacity/__init__.py\", line 298, in iter\r\n    six.raise_from(retry_exc, fut.exception())\r\n  File \"<string>\", line 3, in raise_from\r\n```\r\n\r\nThx for help !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/120", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/120/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/120/events", "html_url": "https://github.com/jd/tenacity/issues/120", "id": 321677389, "node_id": "MDU6SXNzdWUzMjE2NzczODk=", "number": 120, "title": "How to catch RetryError?", "user": {"login": "RobertAtomic", "id": 7660163, "node_id": "MDQ6VXNlcjc2NjAxNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7660163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobertAtomic", "html_url": "https://github.com/RobertAtomic", "followers_url": "https://api.github.com/users/RobertAtomic/followers", "following_url": "https://api.github.com/users/RobertAtomic/following{/other_user}", "gists_url": "https://api.github.com/users/RobertAtomic/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobertAtomic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobertAtomic/subscriptions", "organizations_url": "https://api.github.com/users/RobertAtomic/orgs", "repos_url": "https://api.github.com/users/RobertAtomic/repos", "events_url": "https://api.github.com/users/RobertAtomic/events{/privacy}", "received_events_url": "https://api.github.com/users/RobertAtomic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T18:28:21Z", "updated_at": "2018-05-21T13:20:47Z", "closed_at": "2018-05-21T13:20:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not clear on how to deal with exceptions raised after all retries have been exhausted:\r\n```\r\nimport tenacity\r\n@tenacity.retry(stop=tenacity.stop_after_attempt(5))\r\ndef foo():\r\n    try:\r\n        raise RuntimeError\r\n    except tenacity.RetryError:\r\n        logging.exception('Retries exhausted')\r\n\r\nfoo()\r\n\r\n---------------------------------------------------------------------------\r\nRetryError                                Traceback (most recent call last)\r\n<ipython-input-3-c19b6d9633cf> in <module>()\r\n----> 1 foo()\r\n\r\n/Users/rjordan/.virtualenvs/conductor-syncworker/lib/python2.7/site-packages/tenacity/__init__.pyc in wrapped_f(*args, **kw)\r\n    239         @six.wraps(f)\r\n    240         def wrapped_f(*args, **kw):\r\n--> 241             return self.call(f, *args, **kw)\r\n    242\r\n    243         def retry_with(*args, **kwargs):\r\n\r\n/Users/rjordan/.virtualenvs/conductor-syncworker/lib/python2.7/site-packages/tenacity/__init__.pyc in call(self, fn, *args, **kwargs)\r\n    328         while True:\r\n    329             do = self.iter(result=result, exc_info=exc_info,\r\n--> 330                            start_time=start_time)\r\n    331             if isinstance(do, DoAttempt):\r\n    332                 try:\r\n\r\n/Users/rjordan/.virtualenvs/conductor-syncworker/lib/python2.7/site-packages/tenacity/__init__.pyc in iter(self, result, exc_info, start_time)\r\n    296             if self.reraise:\r\n    297                 raise retry_exc.reraise()\r\n--> 298             six.raise_from(retry_exc, fut.exception())\r\n    299\r\n    300         if self.wait:\r\n\r\n/Users/rjordan/.virtualenvs/conductor-syncworker/lib/python2.7/site-packages/six.pyc in raise_from(value, from_value)\r\n    735 else:\r\n    736     def raise_from(value, from_value):\r\n--> 737         raise value\r\n    738\r\n    739\r\n\r\nRetryError: RetryError[<Future at 0x10879cd90 state=finished raised RuntimeError>]\r\n```\r\nHow should RetryError be caught?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/117", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/117/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/117/events", "html_url": "https://github.com/jd/tenacity/issues/117", "id": 314328345, "node_id": "MDU6SXNzdWUzMTQzMjgzNDU=", "number": 117, "title": "syntax error when importing tenacity at python 3.7", "user": {"login": "b1f6c1c4", "id": 9152961, "node_id": "MDQ6VXNlcjkxNTI5NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9152961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b1f6c1c4", "html_url": "https://github.com/b1f6c1c4", "followers_url": "https://api.github.com/users/b1f6c1c4/followers", "following_url": "https://api.github.com/users/b1f6c1c4/following{/other_user}", "gists_url": "https://api.github.com/users/b1f6c1c4/gists{/gist_id}", "starred_url": "https://api.github.com/users/b1f6c1c4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b1f6c1c4/subscriptions", "organizations_url": "https://api.github.com/users/b1f6c1c4/orgs", "repos_url": "https://api.github.com/users/b1f6c1c4/repos", "events_url": "https://api.github.com/users/b1f6c1c4/events{/privacy}", "received_events_url": "https://api.github.com/users/b1f6c1c4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-14T13:17:18Z", "updated_at": "2018-04-16T12:05:45Z", "closed_at": "2018-04-16T12:05:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "`async` becomes keyword since python 3.7, see https://docs.python.org/3.7/whatsnew/changelog.html#changelog and https://bugs.python.org/issue30406\r\n\r\nso `from tenacity.async import AsyncRetrying` fails because of syntax error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/116", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/116/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/116/events", "html_url": "https://github.com/jd/tenacity/issues/116", "id": 310532622, "node_id": "MDU6SXNzdWUzMTA1MzI2MjI=", "number": 116, "title": "Cannot run in GAE standard", "user": {"login": "johnstill", "id": 31938607, "node_id": "MDQ6VXNlcjMxOTM4NjA3", "avatar_url": "https://avatars0.githubusercontent.com/u/31938607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnstill", "html_url": "https://github.com/johnstill", "followers_url": "https://api.github.com/users/johnstill/followers", "following_url": "https://api.github.com/users/johnstill/following{/other_user}", "gists_url": "https://api.github.com/users/johnstill/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnstill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnstill/subscriptions", "organizations_url": "https://api.github.com/users/johnstill/orgs", "repos_url": "https://api.github.com/users/johnstill/repos", "events_url": "https://api.github.com/users/johnstill/events{/privacy}", "received_events_url": "https://api.github.com/users/johnstill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-02T16:31:06Z", "updated_at": "2018-04-09T14:46:24Z", "closed_at": "2018-04-09T14:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Google App Engine's \"standard\" environment blacklists the `ctypes` module, which `monotonic` uses fairly heavily.  As a result, we cannot use `tenacity` on gae standard either b/c the import fails.  Is `monotonic` a hard requirement of this lib, or would it be possible to degrade from `monotonic` to a function from `time` or another stdlib module on ImportError rather than fail?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/115", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/115/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/115/events", "html_url": "https://github.com/jd/tenacity/issues/115", "id": 309957596, "node_id": "MDU6SXNzdWUzMDk5NTc1OTY=", "number": 115, "title": "concurrent asyncio retry does not work.", "user": {"login": "bt-wil", "id": 25714883, "node_id": "MDQ6VXNlcjI1NzE0ODgz", "avatar_url": "https://avatars3.githubusercontent.com/u/25714883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bt-wil", "html_url": "https://github.com/bt-wil", "followers_url": "https://api.github.com/users/bt-wil/followers", "following_url": "https://api.github.com/users/bt-wil/following{/other_user}", "gists_url": "https://api.github.com/users/bt-wil/gists{/gist_id}", "starred_url": "https://api.github.com/users/bt-wil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bt-wil/subscriptions", "organizations_url": "https://api.github.com/users/bt-wil/orgs", "repos_url": "https://api.github.com/users/bt-wil/repos", "events_url": "https://api.github.com/users/bt-wil/events{/privacy}", "received_events_url": "https://api.github.com/users/bt-wil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-30T02:22:28Z", "updated_at": "2018-03-30T02:23:48Z", "closed_at": "2018-03-30T02:23:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "oops; https://github.com/jd/tenacity/issues/93", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/111", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/111/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/111/events", "html_url": "https://github.com/jd/tenacity/issues/111", "id": 306237868, "node_id": "MDU6SXNzdWUzMDYyMzc4Njg=", "number": 111, "title": "Last build on TravisCI failed (version 4.9.0)", "user": {"login": "serge-m", "id": 4344566, "node_id": "MDQ6VXNlcjQzNDQ1NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4344566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serge-m", "html_url": "https://github.com/serge-m", "followers_url": "https://api.github.com/users/serge-m/followers", "following_url": "https://api.github.com/users/serge-m/following{/other_user}", "gists_url": "https://api.github.com/users/serge-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/serge-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serge-m/subscriptions", "organizations_url": "https://api.github.com/users/serge-m/orgs", "repos_url": "https://api.github.com/users/serge-m/repos", "events_url": "https://api.github.com/users/serge-m/events{/privacy}", "received_events_url": "https://api.github.com/users/serge-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-18T12:55:24Z", "updated_at": "2018-03-22T15:09:44Z", "closed_at": "2018-03-22T15:09:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Last [build](https://travis-ci.org/jd/tenacity/builds) on Travis CI is marked as failed: [link](https://travis-ci.org/jd/tenacity/jobs/349181461)\r\n\r\nOutput:\r\n```\r\nThe command \"tox\" exited with 0.\r\ndpl.0\r\n1.60s$ rvm $(travis_internal_ruby) --fuzzy do ruby -S gem install dpl\r\nFetching: dpl-1.8.47.gem (100%)\r\nSuccessfully installed dpl-1.8.47\r\n1 gem installed\r\ndpl.1\r\nInstalling deploy dependencies\r\n--2018-03-05 08:24:09--  https://bootstrap.pypa.io/get-pip.py\r\nResolving bootstrap.pypa.io (bootstrap.pypa.io)... 151.101.32.175\r\nConnecting to bootstrap.pypa.io (bootstrap.pypa.io)|151.101.32.175|:443... connected.\r\nHTTP request sent, awaiting response... 200 OK\r\nLength: 1595408 (1.5M) [text/x-python]\r\nSaving to: \u2018STDOUT\u2019\r\n100%[======================================>] 1,595,408   --.-K/s   in 0.02s   \r\n2018-03-05 08:24:10 (86.5 MB/s) - written to stdout [1595408/1595408]\r\nRequirement already up-to-date: pip in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages\r\nCollecting setuptools\r\n  Using cached setuptools-38.5.1-py2.py3-none-any.whl\r\nCollecting twine\r\n  Downloading twine-1.9.1-py2.py3-none-any.whl\r\nRequirement already up-to-date: wheel in /home/travis/virtualenv/python2.7.14/lib/python2.7/site-packages\r\nCollecting requests-toolbelt>=0.8.0 (from twine)\r\n  Downloading requests_toolbelt-0.8.0-py2.py3-none-any.whl (54kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 5.4MB/s \r\nCollecting tqdm>=4.11 (from twine)\r\n  Downloading tqdm-4.19.6-py2.py3-none-any.whl (52kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 11.7MB/s \r\nCollecting requests!=2.15,!=2.16,>=2.5.0 (from twine)\r\n  Using cached requests-2.18.4-py2.py3-none-any.whl\r\nCollecting pkginfo>=1.0 (from twine)\r\n  Downloading pkginfo-1.4.1-py2.py3-none-any.whl\r\nCollecting certifi>=2017.4.17 (from requests!=2.15,!=2.16,>=2.5.0->twine)\r\n  Using cached certifi-2018.1.18-py2.py3-none-any.whl\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests!=2.15,!=2.16,>=2.5.0->twine)\r\n  Using cached chardet-3.0.4-py2.py3-none-any.whl\r\nCollecting idna<2.7,>=2.5 (from requests!=2.15,!=2.16,>=2.5.0->twine)\r\n  Using cached idna-2.6-py2.py3-none-any.whl\r\nCollecting urllib3<1.23,>=1.21.1 (from requests!=2.15,!=2.16,>=2.5.0->twine)\r\n  Using cached urllib3-1.22-py2.py3-none-any.whl\r\nInstalling collected packages: setuptools, certifi, chardet, idna, urllib3, requests, requests-toolbelt, tqdm, pkginfo, twine\r\n  Found existing installation: setuptools 38.2.4\r\n    Uninstalling setuptools-38.2.4:\r\n      Successfully uninstalled setuptools-38.2.4\r\nSuccessfully installed certifi-2018.1.18 chardet-3.0.4 idna-2.6 pkginfo-1.4.1 requests-2.18.4 requests-toolbelt-0.8.0 setuptools-38.5.1 tqdm-4.19.6 twine-1.9.1 urllib3-1.22\r\ndpl.2\r\nPreparing deploy\r\nAuthenticated as jd\r\nCleaning up git repository with `git stash --all`. If you need build artifacts for deployment, set `deploy.skip_cleanup: true`. See https://docs.travis-ci.com/user/deployment/#Uploading-Files.\r\nSaved working directory and index state WIP on (no branch): e71f5c8 Avoid inspect.getargspec deprecation warning\r\ndpl.3\r\nDeploying application\r\nrunning sdist\r\n[pbr] Writing ChangeLog\r\n[pbr] Generating ChangeLog\r\n[pbr] ChangeLog complete (0.0s)\r\n[pbr] Generating AUTHORS\r\n[pbr] AUTHORS complete (0.0s)\r\nrunning egg_info\r\ncreating tenacity.egg-info\r\nwriting requirements to tenacity.egg-info/requires.txt\r\nwriting tenacity.egg-info/PKG-INFO\r\nwriting top-level names to tenacity.egg-info/top_level.txt\r\nwriting dependency_links to tenacity.egg-info/dependency_links.txt\r\nwriting pbr to tenacity.egg-info/pbr.json\r\n[pbr] Processing SOURCES.txt\r\nwriting manifest file 'tenacity.egg-info/SOURCES.txt'\r\n[pbr] In git context, generating filelist from git\r\nwarning: no previously-included files found matching '.gitreview'\r\nwarning: no previously-included files matching '*.pyc' found anywhere in distribution\r\nwriting manifest file 'tenacity.egg-info/SOURCES.txt'\r\nrunning check\r\ncreating tenacity-4.9.0\r\ncreating tenacity-4.9.0/doc\r\ncreating tenacity-4.9.0/doc/source\r\ncreating tenacity-4.9.0/tenacity\r\ncreating tenacity-4.9.0/tenacity.egg-info\r\ncreating tenacity-4.9.0/tenacity/tests\r\ncopying files to tenacity-4.9.0...\r\ncopying .travis.yml -> tenacity-4.9.0\r\ncopying AUTHORS -> tenacity-4.9.0\r\ncopying ChangeLog -> tenacity-4.9.0\r\ncopying LICENSE -> tenacity-4.9.0\r\ncopying README.rst -> tenacity-4.9.0\r\ncopying requirements.txt -> tenacity-4.9.0\r\ncopying setup.cfg -> tenacity-4.9.0\r\ncopying setup.py -> tenacity-4.9.0\r\ncopying tox.ini -> tenacity-4.9.0\r\ncopying doc/source/conf.py -> tenacity-4.9.0/doc/source\r\ncopying doc/source/index.rst -> tenacity-4.9.0/doc/source\r\ncopying tenacity/__init__.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/_utils.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/after.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/async.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/before.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/nap.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/retry.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/stop.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/tornadoweb.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity/wait.py -> tenacity-4.9.0/tenacity\r\ncopying tenacity.egg-info/PKG-INFO -> tenacity-4.9.0/tenacity.egg-info\r\ncopying tenacity.egg-info/SOURCES.txt -> tenacity-4.9.0/tenacity.egg-info\r\ncopying tenacity.egg-info/dependency_links.txt -> tenacity-4.9.0/tenacity.egg-info\r\ncopying tenacity.egg-info/not-zip-safe -> tenacity-4.9.0/tenacity.egg-info\r\ncopying tenacity.egg-info/pbr.json -> tenacity-4.9.0/tenacity.egg-info\r\ncopying tenacity.egg-info/requires.txt -> tenacity-4.9.0/tenacity.egg-info\r\ncopying tenacity.egg-info/top_level.txt -> tenacity-4.9.0/tenacity.egg-info\r\ncopying tenacity/tests/__init__.py -> tenacity-4.9.0/tenacity/tests\r\ncopying tenacity/tests/test_async.py -> tenacity-4.9.0/tenacity/tests\r\ncopying tenacity/tests/test_tenacity.py -> tenacity-4.9.0/tenacity/tests\r\ncopying tenacity/tests/test_tornado.py -> tenacity-4.9.0/tenacity/tests\r\nWriting tenacity-4.9.0/setup.cfg\r\ncreating dist\r\nCreating tar archive\r\nremoving 'tenacity-4.9.0' (and everything under it)\r\nrunning bdist_wheel\r\nrunning build\r\nrunning build_py\r\ncreating build\r\ncreating build/lib\r\ncreating build/lib/tenacity\r\ncreating build/lib/tenacity/tests\r\ncopying tenacity/tests/__init__.py -> build/lib/tenacity/tests\r\ncopying tenacity/tests/test_async.py -> build/lib/tenacity/tests\r\ncopying tenacity/tests/test_tenacity.py -> build/lib/tenacity/tests\r\ncopying tenacity/tests/test_tornado.py -> build/lib/tenacity/tests\r\ncopying tenacity/__init__.py -> build/lib/tenacity\r\ncopying tenacity/_utils.py -> build/lib/tenacity\r\ncopying tenacity/after.py -> build/lib/tenacity\r\ncopying tenacity/async.py -> build/lib/tenacity\r\ncopying tenacity/before.py -> build/lib/tenacity\r\ncopying tenacity/nap.py -> build/lib/tenacity\r\ncopying tenacity/retry.py -> build/lib/tenacity\r\ncopying tenacity/stop.py -> build/lib/tenacity\r\ncopying tenacity/tornadoweb.py -> build/lib/tenacity\r\ncopying tenacity/wait.py -> build/lib/tenacity\r\ninstalling to build/bdist.linux-x86_64/wheel\r\nrunning install\r\n[pbr] Writing ChangeLog\r\n[pbr] Generating ChangeLog\r\n[pbr] ChangeLog complete (0.0s)\r\n[pbr] Generating AUTHORS\r\n[pbr] AUTHORS complete (0.0s)\r\nrunning install_lib\r\ncreating build/bdist.linux-x86_64\r\ncreating build/bdist.linux-x86_64/wheel\r\ncreating build/bdist.linux-x86_64/wheel/tenacity\r\ncreating build/bdist.linux-x86_64/wheel/tenacity/tests\r\ncopying build/lib/tenacity/tests/__init__.py -> build/bdist.linux-x86_64/wheel/tenacity/tests\r\ncopying build/lib/tenacity/tests/test_async.py -> build/bdist.linux-x86_64/wheel/tenacity/tests\r\ncopying build/lib/tenacity/tests/test_tenacity.py -> build/bdist.linux-x86_64/wheel/tenacity/tests\r\ncopying build/lib/tenacity/tests/test_tornado.py -> build/bdist.linux-x86_64/wheel/tenacity/tests\r\ncopying build/lib/tenacity/__init__.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/_utils.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/after.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/async.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/before.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/nap.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/retry.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/stop.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/tornadoweb.py -> build/bdist.linux-x86_64/wheel/tenacity\r\ncopying build/lib/tenacity/wait.py -> build/bdist.linux-x86_64/wheel/tenacity\r\nrunning install_egg_info\r\nCopying tenacity.egg-info to build/bdist.linux-x86_64/wheel/tenacity-4.9.0-py2.7.egg-info\r\nrunning install_scripts\r\ncreating build/bdist.linux-x86_64/wheel/tenacity-4.9.0.dist-info/WHEEL\r\ncreating '/home/travis/build/jd/tenacity/dist/tenacity-4.9.0-py2.py3-none-any.whl' and adding '.' to it\r\nadding 'tenacity/__init__.py'\r\nadding 'tenacity/_utils.py'\r\nadding 'tenacity/after.py'\r\nadding 'tenacity/async.py'\r\nadding 'tenacity/before.py'\r\nadding 'tenacity/nap.py'\r\nadding 'tenacity/retry.py'\r\nadding 'tenacity/stop.py'\r\nadding 'tenacity/tornadoweb.py'\r\nadding 'tenacity/wait.py'\r\nadding 'tenacity/tests/__init__.py'\r\nadding 'tenacity/tests/test_async.py'\r\nadding 'tenacity/tests/test_tenacity.py'\r\nadding 'tenacity/tests/test_tornado.py'\r\nadding 'tenacity-4.9.0.dist-info/DESCRIPTION.rst'\r\nadding 'tenacity-4.9.0.dist-info/metadata.json'\r\nadding 'tenacity-4.9.0.dist-info/pbr.json'\r\nadding 'tenacity-4.9.0.dist-info/top_level.txt'\r\nadding 'tenacity-4.9.0.dist-info/WHEEL'\r\nadding 'tenacity-4.9.0.dist-info/METADATA'\r\nadding 'tenacity-4.9.0.dist-info/RECORD'\r\nUploading distributions to https://upload.pypi.org/legacy/\r\nUploading tenacity-4.9.0-py2.py3-none-any.whl\r\nHTTPError: 400 Client Error: File already exists. See https://upload.pypi.org/help/#file-name-reuse for url: https://upload.pypi.org/legacy/\r\nAUTHORS already exists, no checkout\r\nChangeLog already exists, no checkout\r\ntenacity.egg-info/PKG-INFO already exists, no checkout\r\ntenacity.egg-info/SOURCES.txt already exists, no checkout\r\ntenacity.egg-info/dependency_links.txt already exists, no checkout\r\ntenacity.egg-info/not-zip-safe already exists, no checkout\r\ntenacity.egg-info/pbr.json already exists, no checkout\r\ntenacity.egg-info/requires.txt already exists, no checkout\r\ntenacity.egg-info/top_level.txt already exists, no checkout\r\nCould not restore untracked files from stash entry\r\nPyPI upload failed.\r\nfailed to deploy\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/105", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/105/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/105/events", "html_url": "https://github.com/jd/tenacity/issues/105", "id": 281967055, "node_id": "MDU6SXNzdWUyODE5NjcwNTU=", "number": 105, "title": "New release with new waiter feature :)", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-14T03:05:04Z", "updated_at": "2017-12-16T17:36:15Z", "closed_at": "2017-12-14T08:52:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/104", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/104/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/104/events", "html_url": "https://github.com/jd/tenacity/issues/104", "id": 281621974, "node_id": "MDU6SXNzdWUyODE2MjE5NzQ=", "number": 104, "title": "Accept or explicitly reject classes derived from BaseException for retrying and py27 compatibility?", "user": {"login": "nanflasted", "id": 7097490, "node_id": "MDQ6VXNlcjcwOTc0OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7097490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nanflasted", "html_url": "https://github.com/nanflasted", "followers_url": "https://api.github.com/users/nanflasted/followers", "following_url": "https://api.github.com/users/nanflasted/following{/other_user}", "gists_url": "https://api.github.com/users/nanflasted/gists{/gist_id}", "starred_url": "https://api.github.com/users/nanflasted/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nanflasted/subscriptions", "organizations_url": "https://api.github.com/users/nanflasted/orgs", "repos_url": "https://api.github.com/users/nanflasted/repos", "events_url": "https://api.github.com/users/nanflasted/events{/privacy}", "received_events_url": "https://api.github.com/users/nanflasted/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-13T04:30:10Z", "updated_at": "2018-04-09T14:45:41Z", "closed_at": "2018-04-09T14:45:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thank you @jd and other contributors for maintaining tenacity, and making retrying easy.\r\n\r\nSince the `tenacity` is the fork of `retrying`, a lot of code bases would want to upgrade/port from `retrying`, aside from a few common issues such as the ones pointed out in [this report](https://bugs.launchpad.net/python-oneviewclient/+bug/1635401), I ran into some compatibility issues:\r\n\r\nhttps://github.com/jd/tenacity/blob/69cf4a74549b0820e6baaa188d0e72ced5ed58ad/tenacity/__init__.py#L297-L302\r\n\r\nIf I'm not mistaken, this part catches the exception thrown by the retrying function; `except Exception` is normally fine with catching all exceptions; however, when the retrying function uses a custom exception that inherits anything that's part of the `BaseException` (e.g., `SystemExit`, or just a class that inherits `BaseException`), `tenacity` will ignore any and all retrying settings and break: even if it is a bare `@retry` decorator without any arguments. This behaviour is introduced only in `tenacity`, because `retrying` library uses a bare `except:`, which catches *all* exceptions, and continues to retry.\r\n\r\nMaybe consider adding a `except BaseException:` clause underneath the `except Exception` clause, and in that block, either accept or explicitly reject BaseException(s)? To the very least, documenting and warning about this issue seems worthy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/103", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/103/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/103/events", "html_url": "https://github.com/jd/tenacity/issues/103", "id": 281529969, "node_id": "MDU6SXNzdWUyODE1Mjk5Njk=", "number": 103, "title": "'function' object has no attribute 'retry_with'", "user": {"login": "koug44", "id": 4643678, "node_id": "MDQ6VXNlcjQ2NDM2Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4643678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koug44", "html_url": "https://github.com/koug44", "followers_url": "https://api.github.com/users/koug44/followers", "following_url": "https://api.github.com/users/koug44/following{/other_user}", "gists_url": "https://api.github.com/users/koug44/gists{/gist_id}", "starred_url": "https://api.github.com/users/koug44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koug44/subscriptions", "organizations_url": "https://api.github.com/users/koug44/orgs", "repos_url": "https://api.github.com/users/koug44/repos", "events_url": "https://api.github.com/users/koug44/events{/privacy}", "received_events_url": "https://api.github.com/users/koug44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-12T20:40:47Z", "updated_at": "2017-12-12T21:14:48Z", "closed_at": "2017-12-12T21:14:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the documentation\r\n\r\n`@retry(stop=stop_after_attempt(3))\r\ndef raise_my_exception():\r\nraise MyException(\"Fail\")\r\ntry:\r\nraise_my_exception.retry_with(stop=stop_after_attempt(4))()\r\nexcept Exception:\r\npass\r\n`\r\nFrom my code\r\n\r\n`@retry(reraise=True, stop=tenacity.stop_after_attempt(5), wait=tenacity.wait_exponential(multiplier=2,max=120))\r\ndef httpGet( fileName, httpUrl, httpParams, checkSum = None):`\r\n\r\n[\u2026]\r\n\r\n`size = httpGet.retry_with(stop=tenacity.stop_after_attempt(retry_attempt))( fullPath, httpUrl, httpParams)`\r\n\r\nError:\r\n\r\n> 'function' object has no attribute 'retry_with'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/101", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/101/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/101/events", "html_url": "https://github.com/jd/tenacity/issues/101", "id": 278317324, "node_id": "MDU6SXNzdWUyNzgzMTczMjQ=", "number": 101, "title": "Ability to have waiters know about prior runs result", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-01T00:24:49Z", "updated_at": "2018-01-13T22:48:08Z", "closed_at": "2018-01-13T22:48:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using tenacity in a slack bot that is being used; and I'm using it around the code that sends all the things to slack apis; those apis sometimes report back issues that should be retried (as would be expected).\r\n\r\nOne of the interesting ones is when they send back the response 'rate_limited' :\r\n\r\n*   https://api.slack.com/docs/rate-limits\r\n\r\nWhen they do this they will send back a `Retry-After` header (which there python client now includes in there custom exception class) so it would be nice to have a waiter class that can be given the prior result (or exception) and adjust the amount of time waited based on that result.\r\n\r\nRight now it seems that waiters just get a `previous_attempt_number, delay_since_first_attempt` which isn't quite enough to extract the suggested  `Retry-After` header from. \ud83d\ude22 \r\n\r\nSo might need a new waiter base class that actually gets the prior result...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/99", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/99/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/99/events", "html_url": "https://github.com/jd/tenacity/issues/99", "id": 274879406, "node_id": "MDU6SXNzdWUyNzQ4Nzk0MDY=", "number": 99, "title": "Tenacity only works with Tornado 4.5 or above", "user": {"login": "jslvtr", "id": 3788301, "node_id": "MDQ6VXNlcjM3ODgzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3788301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jslvtr", "html_url": "https://github.com/jslvtr", "followers_url": "https://api.github.com/users/jslvtr/followers", "following_url": "https://api.github.com/users/jslvtr/following{/other_user}", "gists_url": "https://api.github.com/users/jslvtr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jslvtr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jslvtr/subscriptions", "organizations_url": "https://api.github.com/users/jslvtr/orgs", "repos_url": "https://api.github.com/users/jslvtr/repos", "events_url": "https://api.github.com/users/jslvtr/events{/privacy}", "received_events_url": "https://api.github.com/users/jslvtr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-17T14:20:37Z", "updated_at": "2018-04-09T14:20:31Z", "closed_at": "2018-04-09T14:20:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I'm running on Tornado 4.4.3, but my tests fail with the following:\r\n\r\n```\r\n../app/thunderflock.py:58: in <module>\r\n    wait=wait_fixed(DatabaseRetryConfig['retry_wait_seconds']))\r\n../.venv/lib/python3.6/site-packages/tenacity/__init__.py:95: in wrap\r\n    elif tornado and tornado.gen.is_coroutine_function(f):\r\nE   AttributeError: module 'tornado.gen' has no attribute 'is_coroutine_function'\r\n```\r\n\r\n`tornado.gen.is_coroutine_function` was added in Tornado 4.5. Would be great to display this in the README (or add support for Tornado 4.4, ideally!).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/98", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/98/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/98/events", "html_url": "https://github.com/jd/tenacity/issues/98", "id": 273948575, "node_id": "MDU6SXNzdWUyNzM5NDg1NzU=", "number": 98, "title": "Catch specific exception", "user": {"login": "wontonst", "id": 2030556, "node_id": "MDQ6VXNlcjIwMzA1NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2030556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wontonst", "html_url": "https://github.com/wontonst", "followers_url": "https://api.github.com/users/wontonst/followers", "following_url": "https://api.github.com/users/wontonst/following{/other_user}", "gists_url": "https://api.github.com/users/wontonst/gists{/gist_id}", "starred_url": "https://api.github.com/users/wontonst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wontonst/subscriptions", "organizations_url": "https://api.github.com/users/wontonst/orgs", "repos_url": "https://api.github.com/users/wontonst/repos", "events_url": "https://api.github.com/users/wontonst/events{/privacy}", "received_events_url": "https://api.github.com/users/wontonst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-14T21:26:05Z", "updated_at": "2017-11-14T22:08:51Z", "closed_at": "2017-11-14T22:08:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems odd to me that tenacity tries to catch Exception. What if an exception that I don't want caught is thrown? e.g. some code used to grab an API hits a MemoryError from OOM. I want the OOM to propagate up rather than get caught by tenacity and then start another retry.\r\n\r\nTLDR something like\r\n\r\n`@retry(exception_type=MyCustomException)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/95", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/95/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/95/events", "html_url": "https://github.com/jd/tenacity/issues/95", "id": 273141344, "node_id": "MDU6SXNzdWUyNzMxNDEzNDQ=", "number": 95, "title": "Add Tornado support", "user": {"login": "31z4", "id": 3657959, "node_id": "MDQ6VXNlcjM2NTc5NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3657959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/31z4", "html_url": "https://github.com/31z4", "followers_url": "https://api.github.com/users/31z4/followers", "following_url": "https://api.github.com/users/31z4/following{/other_user}", "gists_url": "https://api.github.com/users/31z4/gists{/gist_id}", "starred_url": "https://api.github.com/users/31z4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/31z4/subscriptions", "organizations_url": "https://api.github.com/users/31z4/orgs", "repos_url": "https://api.github.com/users/31z4/repos", "events_url": "https://api.github.com/users/31z4/events{/privacy}", "received_events_url": "https://api.github.com/users/31z4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-11T12:13:10Z", "updated_at": "2017-11-12T13:31:06Z", "closed_at": "2017-11-12T13:31:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would really love to see [Tornado](http://www.tornadoweb.org) support \ud83d\ude4f ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/94", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/94/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/94/events", "html_url": "https://github.com/jd/tenacity/issues/94", "id": 272907341, "node_id": "MDU6SXNzdWUyNzI5MDczNDE=", "number": 94, "title": "retry_on_no_exception", "user": {"login": "mwichtlh", "id": 7008941, "node_id": "MDQ6VXNlcjcwMDg5NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7008941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwichtlh", "html_url": "https://github.com/mwichtlh", "followers_url": "https://api.github.com/users/mwichtlh/followers", "following_url": "https://api.github.com/users/mwichtlh/following{/other_user}", "gists_url": "https://api.github.com/users/mwichtlh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwichtlh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwichtlh/subscriptions", "organizations_url": "https://api.github.com/users/mwichtlh/orgs", "repos_url": "https://api.github.com/users/mwichtlh/repos", "events_url": "https://api.github.com/users/mwichtlh/events{/privacy}", "received_events_url": "https://api.github.com/users/mwichtlh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-10T11:47:24Z", "updated_at": "2017-11-17T14:42:26Z", "closed_at": "2017-11-17T14:42:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using tenacity for integration testing of networking code.\r\n\r\nQuite frequently I have to retry on a condition n times within m seconds, where the condition may not fail a single time within that time frame.\r\n\r\nThus, it would helpful to have a \"retry_on_no_exception\" option similar to the \"retry_on_exception\" option.\r\n\r\nThe expected behavior of the \"retry_on_no_exception\" option is to ...\r\n- ... retry if no exception occurs.\r\n- ... stop retrying and raising whichever exception has occurred, if an exception occurred.\r\n\r\nPS: I also posted this issue for the retrying package. I have closed the issue there as the retrying repos seems to be unmaintained.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/93", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/93/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/93/events", "html_url": "https://github.com/jd/tenacity/issues/93", "id": 272437206, "node_id": "MDU6SXNzdWUyNzI0MzcyMDY=", "number": 93, "title": "trial number bug when running async function concurrently with retry", "user": {"login": "bokhi", "id": 850744, "node_id": "MDQ6VXNlcjg1MDc0NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/850744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bokhi", "html_url": "https://github.com/bokhi", "followers_url": "https://api.github.com/users/bokhi/followers", "following_url": "https://api.github.com/users/bokhi/following{/other_user}", "gists_url": "https://api.github.com/users/bokhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bokhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bokhi/subscriptions", "organizations_url": "https://api.github.com/users/bokhi/orgs", "repos_url": "https://api.github.com/users/bokhi/repos", "events_url": "https://api.github.com/users/bokhi/events{/privacy}", "received_events_url": "https://api.github.com/users/bokhi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-09T04:27:58Z", "updated_at": "2018-08-27T11:21:49Z", "closed_at": "2018-08-27T11:21:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nThanks a lot for the library, we plan on using it to retry our async connections to redis when a failover happens.\r\n\r\nI noticed that when running the same async function decorated with retry concurrently, it seems that after the first retry all the functions share the same `trial_number` somewhat. \r\n\r\nThe problem is that the functions are not going run for the expected number of trials, as for every try of any concurrent function, the trial_number is increment for all functions.\r\n\r\nFor instance, with two functions run concurrently:\r\n\r\n```\r\nINFO:root:Finished call to '__main__.async_raise' after 0.000(s), this was the 1st time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.000(s), this was the 1st time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.101(s), this was the 2nd time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.101(s), this was the 3rd time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.201(s), this was the 4th time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.201(s), this was the 5th time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.302(s), this was the 6th time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.302(s), this was the 7th time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.402(s), this was the 8th time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.402(s), this was the 9th time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.503(s), this was the 10th time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.503(s), this was the 10th time calling it.\r\n```\r\n\r\ninstead of the expected:\r\n```\r\nINFO:root:Finished call to '__main__.async_raise' after 0.000(s), this was the 1st time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.000(s), this was the 1st time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.101(s), this was the 2nd time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.101(s), this was the 2nd time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.201(s), this was the 3rd time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.201(s), this was the 3rd time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.301(s), this was the 4th time calling it.\r\nINFO:root:Finished call to '__main__.async_raise' after 0.301(s), this was the 4th time calling it.\r\n...\r\n```\r\n\r\nHere's the code I used to reproduce it\r\n\r\n```python\r\nimport asyncio\r\nimport logging\r\nimport sys\r\n\r\nfrom tenacity import after_log, retry, stop_after_attempt, wait_fixed\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\r\nlog = logging.getLogger()\r\n\r\ntries = 10\r\ndelay = 0.1\r\nconcurrent = 2\r\n\r\n\r\n@retry(\r\n    stop=stop_after_attempt(tries),\r\n    wait=wait_fixed(delay),\r\n    reraise=True,\r\n    after=after_log(log, logging.INFO))\r\nasync def async_raise():\r\n    raise Exception\r\n\r\ntasks = [async_raise() for _ in range(concurrent)]\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\ntry:\r\n    print('first')\r\n    loop.run_until_complete(\r\n        asyncio.wait(tasks))\r\nexcept Exception:\r\n    pass\r\nloop.close()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/92", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/92/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/92/events", "html_url": "https://github.com/jd/tenacity/issues/92", "id": 267475589, "node_id": "MDU6SXNzdWUyNjc0NzU1ODk=", "number": 92, "title": "\"KeyError: sleep\" in repr(BaseRetrying) and repr(AsyncRetrying)", "user": {"login": "mikek", "id": 88083, "node_id": "MDQ6VXNlcjg4MDgz", "avatar_url": "https://avatars2.githubusercontent.com/u/88083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikek", "html_url": "https://github.com/mikek", "followers_url": "https://api.github.com/users/mikek/followers", "following_url": "https://api.github.com/users/mikek/following{/other_user}", "gists_url": "https://api.github.com/users/mikek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikek/subscriptions", "organizations_url": "https://api.github.com/users/mikek/orgs", "repos_url": "https://api.github.com/users/mikek/repos", "events_url": "https://api.github.com/users/mikek/events{/privacy}", "received_events_url": "https://api.github.com/users/mikek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-22T15:50:39Z", "updated_at": "2017-10-24T08:13:53Z", "closed_at": "2017-10-24T08:13:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "There would a `KeyError: sleep` if anyone tries to call `repr(BaseRetrying)` or `repr(AsyncRetrying)` because `sleep` is not part of the context for them: https://github.com/jd/tenacity/blob/73ff6ec7b9412e0c7dd8df339f3dcd482cbf9eb0/tenacity/__init__.py#L133\r\nI've came up with an ugly fix: https://gist.github.com/mikek/68ad4d5c79ba60f6ddffeb600884881d\r\nIs this something I should make into a PR?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/90", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/90/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/90/events", "html_url": "https://github.com/jd/tenacity/issues/90", "id": 261448861, "node_id": "MDU6SXNzdWUyNjE0NDg4NjE=", "number": 90, "title": "Broken install:  \"ImportError: No module named 'tasks'\"", "user": {"login": "mixmastamyk", "id": 767039, "node_id": "MDQ6VXNlcjc2NzAzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/767039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mixmastamyk", "html_url": "https://github.com/mixmastamyk", "followers_url": "https://api.github.com/users/mixmastamyk/followers", "following_url": "https://api.github.com/users/mixmastamyk/following{/other_user}", "gists_url": "https://api.github.com/users/mixmastamyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mixmastamyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mixmastamyk/subscriptions", "organizations_url": "https://api.github.com/users/mixmastamyk/orgs", "repos_url": "https://api.github.com/users/mixmastamyk/repos", "events_url": "https://api.github.com/users/mixmastamyk/events{/privacy}", "received_events_url": "https://api.github.com/users/mixmastamyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-28T20:22:24Z", "updated_at": "2017-09-28T21:47:20Z", "closed_at": "2017-09-28T21:47:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Py 3.5\r\n- Ubuntu Zesty\r\n\r\n```\r\n\u23f5 sudo -H pip3 install --upgrade tenacity\r\nCollecting tenacity\r\n  Using cached tenacity-4.4.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    ERROR:root:Error parsing\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/lib/python3.5/dist-packages/pbr/core.py\", line 111, in pbr\r\n        attrs = util.cfg_to_args(path, dist.script_args)\r\n      File \"/usr/local/lib/python3.5/dist-packages/pbr/util.py\", line 267, in cfg_to_args\r\n        wrap_commands(kwargs)\r\n      File \"/usr/local/lib/python3.5/dist-packages/pbr/util.py\", line 569, in wrap_commands\r\n        cmdclass = ep.resolve()\r\n      File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 2322, in resolve\r\n        module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n    ImportError: No module named 'tasks'\r\n    error in setup command: Error parsing /tmp/pip-build-_zmuo5av/tenacity/setup.cfg: ImportError: No module named 'tasks'\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-_zmuo5av/tenacity/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/88", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/88/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/88/events", "html_url": "https://github.com/jd/tenacity/issues/88", "id": 256002581, "node_id": "MDU6SXNzdWUyNTYwMDI1ODE=", "number": 88, "title": "Trouble building rpms on Centos 7.3", "user": {"login": "jnaulty", "id": 6826729, "node_id": "MDQ6VXNlcjY4MjY3Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6826729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnaulty", "html_url": "https://github.com/jnaulty", "followers_url": "https://api.github.com/users/jnaulty/followers", "following_url": "https://api.github.com/users/jnaulty/following{/other_user}", "gists_url": "https://api.github.com/users/jnaulty/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnaulty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnaulty/subscriptions", "organizations_url": "https://api.github.com/users/jnaulty/orgs", "repos_url": "https://api.github.com/users/jnaulty/repos", "events_url": "https://api.github.com/users/jnaulty/events{/privacy}", "received_events_url": "https://api.github.com/users/jnaulty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198548, "node_id": "MDU6TGFiZWw0MjMxOTg1NDg=", "url": "https://api.github.com/repos/jd/tenacity/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-09-07T16:48:22Z", "updated_at": "2019-10-30T12:24:02Z", "closed_at": "2019-10-30T12:24:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to build the rpm for this project for python 2.7\r\nwhen running command:\r\n`python setup.py bdist_rpm --python /usr/bin/python`\r\n\r\nI receive the error\r\n```\r\n+ cd tenacity-4.4.1.dev1\r\n+ /usr/bin/python setup.py install --single-version-externally-managed -O1 --root=/home/jnaulty/workspace/tenacity/build/bdist.linux-x86_64/rpm/BUILDROOT/tenacity-4.4.1.dev1-1.x86_64 --record=INSTALLED_FILES\r\n  File \"/usr/lib/python2.7/site-packages/tenacity/tests/test_async.py\", line 39\r\n    yield from asyncio.sleep(0.00001)\r\n             ^\r\nSyntaxError: invalid syntax\r\n\r\n  File \"/usr/lib/python2.7/site-packages/tenacity/async.py\", line 44\r\n    result = yield from fn(*args, **kwargs)\r\n                      ^\r\nSyntaxError: invalid syntax\r\n\r\n  File \"/usr/lib/python2.7/site-packages/tenacity/tests/test_async.py\", line 39\r\n    yield from asyncio.sleep(0.00001)\r\n             ^\r\nSyntaxError: invalid syntax\r\n\r\n  File \"/usr/lib/python2.7/site-packages/tenacity/async.py\", line 44\r\n    result = yield from fn(*args, **kwargs)\r\n                      ^\r\nSyntaxError: invalid syntax\r\n\r\n+ /usr/lib/rpm/find-debuginfo.sh --strict-build-id -m --run-dwz --dwz-low-mem-die-limit 10000000 --dwz-max-die-limit 110000000 /home/jnaulty/workspace/tenacity/build/bdist.linux-x86_64/rpm/BUILD/tenacity-4.4.1.dev1\r\nfind: 'debug': No such file or directory\r\n+ /usr/lib/rpm/check-buildroot\r\n+ /usr/lib/rpm/redhat/brp-compress\r\n+ /usr/lib/rpm/redhat/brp-strip-static-archive /usr/bin/strip\r\n+ /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1\r\nerror: Bad exit status from /var/tmp/rpm-tmp.8cn8w2 (%install)\r\n    Bad exit status from /var/tmp/rpm-tmp.8cn8w2 (%install)\r\nerror: command 'rpmbuild' failed with exit status 1\r\n\r\n```\r\nWhat is the workaround for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/87", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/87/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/87/events", "html_url": "https://github.com/jd/tenacity/issues/87", "id": 254017398, "node_id": "MDU6SXNzdWUyNTQwMTczOTg=", "number": 87, "title": "Can't install Win7 python 2.7.13", "user": {"login": "bmeredyk", "id": 3621861, "node_id": "MDQ6VXNlcjM2MjE4NjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3621861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmeredyk", "html_url": "https://github.com/bmeredyk", "followers_url": "https://api.github.com/users/bmeredyk/followers", "following_url": "https://api.github.com/users/bmeredyk/following{/other_user}", "gists_url": "https://api.github.com/users/bmeredyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmeredyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmeredyk/subscriptions", "organizations_url": "https://api.github.com/users/bmeredyk/orgs", "repos_url": "https://api.github.com/users/bmeredyk/repos", "events_url": "https://api.github.com/users/bmeredyk/events{/privacy}", "received_events_url": "https://api.github.com/users/bmeredyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T14:21:42Z", "updated_at": "2017-09-08T08:26:16Z", "closed_at": "2017-09-08T08:26:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unable to install via pip or setup.py due to dependency issues with altgraph.compat. Looking at [altgraph's change history](https://pypi.python.org/pypi/altgraph/) it would seem that compat was removed a while ago v0.71.\r\n\r\n\r\n\r\n```\r\n>python setup.py install\r\n> ERROR:root:Error parsing\r\n> Traceback (most recent call last):\r\n>   File \"C:\\Python27\\lib\\site-packages\\pbr\\core.py\", line 111, in pbr\r\n>     attrs = util.cfg_to_args(path, dist.script_args)\r\n>   File \"C:\\Python27\\lib\\site-packages\\pbr\\util.py\", line 267, in cfg_to_args\r\n>     wrap_commands(kwargs)\r\n>   File \"C:\\Python27\\lib\\site-packages\\pbr\\util.py\", line 569, in wrap_commands\r\n>     cmdclass = ep.resolve()\r\n>   File \"C:\\Python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2297, in\r\n> resolve\r\n>     module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n>   File \"C:\\Python27\\lib\\site-packages\\bbfreeze\\__init__.py\", line 8, in <module>\r\n> \r\n>     from bbfreeze.freezer import Freezer\r\n>   File \"C:\\Python27\\lib\\site-packages\\bbfreeze\\freezer.py\", line 13, in <module>\r\n> \r\n>     from modulegraph import modulegraph\r\n>   File \"C:\\Python27\\lib\\site-packages\\bbfreeze\\modulegraph\\modulegraph.py\", line\r\n>  24, in <module>\r\n>     from altgraph.compat import *\r\n> ImportError: No module named compat\r\n> error in setup command: Error parsing C:\\Users\\bmeredyk\\Downloads\\Python\\tenacit\r\n> y\\tenacity-4.4.0\\setup.cfg: ImportError: No module named compat\r\n```\r\n\r\n\r\nInstalling with pip also errors due to altgraph.compat\r\n```\r\n>>pip install tenacity\r\n> Collecting tenacity\r\n>   Using cached tenacity-4.4.0.tar.gz\r\n>     Complete output from command python setup.py egg_info:\r\n>     ERROR:root:Error parsing\r\n>     Traceback (most recent call last):\r\n>       File \"c:\\python27\\lib\\site-packages\\pbr\\core.py\", line 111, in pbr\r\n>         attrs = util.cfg_to_args(path, dist.script_args)\r\n>       File \"c:\\python27\\lib\\site-packages\\pbr\\util.py\", line 267, in cfg_to_args\r\n> \r\n>         wrap_commands(kwargs)\r\n>       File \"c:\\python27\\lib\\site-packages\\pbr\\util.py\", line 569, in wrap_comman\r\n> ds\r\n>         cmdclass = ep.resolve()\r\n>       File \"c:\\python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2297,\r\n>  in resolve\r\n>         module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n>       File \"c:\\python27\\lib\\site-packages\\bbfreeze\\__init__.py\", line 8, in <mod\r\n> ule>\r\n>         from bbfreeze.freezer import Freezer\r\n>       File \"c:\\python27\\lib\\site-packages\\bbfreeze\\freezer.py\", line 13, in <mod\r\n> ule>\r\n>         from modulegraph import modulegraph\r\n>       File \"c:\\python27\\lib\\site-packages\\bbfreeze\\modulegraph\\modulegraph.py\",\r\n> line 24, in <module>\r\n>         from altgraph.compat import *\r\n>     ImportError: No module named compat\r\n>     error in setup command: Error parsing c:\\users\\bmeredyk\\appdata\\local\\temp\\p\r\n> ip-build-8hde6b\\tenacity\\setup.cfg: ImportError: No module named compat\r\n> \r\n>     ----------------------------------------\r\n> Command \"python setup.py egg_info\" failed with error code 1 in c:\\users\\bmeredyk\r\n> \\appdata\\local\\temp\\pip-build-8hde6b\\tenacity\\\r\n> \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/86", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/86/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/86/events", "html_url": "https://github.com/jd/tenacity/issues/86", "id": 250552054, "node_id": "MDU6SXNzdWUyNTA1NTIwNTQ=", "number": 86, "title": "Installation issue on macOS-10.12.6 (version 4.4.0)", "user": {"login": "jcdevil", "id": 2634872, "node_id": "MDQ6VXNlcjI2MzQ4NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2634872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcdevil", "html_url": "https://github.com/jcdevil", "followers_url": "https://api.github.com/users/jcdevil/followers", "following_url": "https://api.github.com/users/jcdevil/following{/other_user}", "gists_url": "https://api.github.com/users/jcdevil/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcdevil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcdevil/subscriptions", "organizations_url": "https://api.github.com/users/jcdevil/orgs", "repos_url": "https://api.github.com/users/jcdevil/repos", "events_url": "https://api.github.com/users/jcdevil/events{/privacy}", "received_events_url": "https://api.github.com/users/jcdevil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198550, "node_id": "MDU6TGFiZWw0MjMxOTg1NTA=", "url": "https://api.github.com/repos/jd/tenacity/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-16T08:40:02Z", "updated_at": "2017-08-16T13:06:53Z", "closed_at": "2017-08-16T13:06:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I intended to use this pretty cool library but I encountered the following error while installing it on my Mac (Python 2.7.13)\r\nAny help would be much appreciated ! Thx ;)\r\n```\r\npip install tenacity --user\r\nCollecting tenacity\r\n  Using cached tenacity-4.4.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    ERROR:root:Error parsing\r\n    Traceback (most recent call last):\r\n      File \"/Users/jcdevil/Dev/Forgerock/Stash/PyForge/archives/third_party/lib/python/site-packages/pbr/core.py\", line 111, in pbr\r\n        attrs = util.cfg_to_args(path, dist.script_args)\r\n      File \"/Users/jcdevil/Dev/Forgerock/Stash/PyForge/archives/third_party/lib/python/site-packages/pbr/util.py\", line 267, in cfg_to_args\r\n        wrap_commands(kwargs)\r\n      File \"/Users/jcdevil/Dev/Forgerock/Stash/PyForge/archives/third_party/lib/python/site-packages/pbr/util.py\", line 569, in wrap_commands\r\n        cmdclass = ep.resolve()\r\n      File \"/usr/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2297, in resolve\r\n        module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n      File \"/usr/local/lib/python2.7/site-packages/sphinx/setup_command.py\", line 23, in <module>\r\n        from sphinx.application import Sphinx\r\n      File \"/usr/local/lib/python2.7/site-packages/sphinx/application.py\", line 25, in <module>\r\n        from docutils import nodes\r\n    ImportError: No module named docutils\r\n    error in setup command: Error parsing /private/var/folders/fs/b8r0x9ts6pq9nm_b50rzvwh00000gn/T/pip-build-MtmpTa/tenacity/setup.cfg: ImportError: No module named docutils\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/fs/b8r0x9ts6pq9nm_b50rzvwh00000gn/T/pip-build-MtmpTa/tenacity/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/85", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/85/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/85/events", "html_url": "https://github.com/jd/tenacity/issues/85", "id": 249089710, "node_id": "MDU6SXNzdWUyNDkwODk3MTA=", "number": 85, "title": "ImportError: No module named 'tasks'", "user": {"login": "gabfl", "id": 8358050, "node_id": "MDQ6VXNlcjgzNTgwNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8358050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabfl", "html_url": "https://github.com/gabfl", "followers_url": "https://api.github.com/users/gabfl/followers", "following_url": "https://api.github.com/users/gabfl/following{/other_user}", "gists_url": "https://api.github.com/users/gabfl/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabfl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabfl/subscriptions", "organizations_url": "https://api.github.com/users/gabfl/orgs", "repos_url": "https://api.github.com/users/gabfl/repos", "events_url": "https://api.github.com/users/gabfl/events{/privacy}", "received_events_url": "https://api.github.com/users/gabfl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-09T16:33:17Z", "updated_at": "2017-09-28T23:13:43Z", "closed_at": "2017-08-09T20:15:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the following error while installing tenacity 4.4.0. I did not have this error with the previous versions:\r\n\r\n## pip install\r\n\r\n```\r\nroot@2b8b4fe6b21d:~# pip3 install tenacity==4.4.0\r\nCollecting tenacity==4.4.0\r\n  Using cached tenacity-4.4.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 154, in save_modules\r\n        yield saved\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 195, in setup_context\r\n        yield\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 243, in run_setup\r\n        DirectorySandbox(setup_dir).run(runner)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 273, in run\r\n        return func()\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 242, in runner\r\n        _execfile(setup_script, ns)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 46, in _execfile\r\n        exec(code, globals, locals)\r\n      File \"/tmp/easy_install-6dm2lcpa/pbr-3.1.1/setup.py\", line 22, in <module>\r\n      File \"/tmp/easy_install-6dm2lcpa/pbr-3.1.1/pbr/util.py\", line 267, in cfg_to_args\r\n      File \"/tmp/easy_install-6dm2lcpa/pbr-3.1.1/pbr/util.py\", line 569, in wrap_commands\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2235, in resolve\r\n        module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n    ImportError: No module named 'tasks'\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-2wkcdafj/tenacity/setup.py\", line 20, in <module>\r\n        pbr=True)\r\n      File \"/usr/lib/python3.5/distutils/core.py\", line 108, in setup\r\n        _setup_distribution = dist = klass(attrs)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 269, in __init__\r\n        self.fetch_build_eggs(attrs['setup_requires'])\r\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 313, in fetch_build_eggs\r\n        replace_conflicting=True,\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 826, in resolve\r\n        dist = best[req.key] = env.best_match(req, ws, installer)\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 1092, in best_match\r\n        return self.obtain(req, installer)\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 1104, in obtain\r\n        return installer(requirement)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 380, in fetch_build_egg\r\n        return cmd.easy_install(req)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 663, in easy_install\r\n        return self.install_item(spec, dist.location, tmpdir, deps)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 693, in install_item\r\n        dists = self.install_eggs(spec, download, tmpdir)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 873, in install_eggs\r\n        return self.build_and_install(setup_script, setup_base)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 1101, in build_and_install\r\n        self.run_setup(setup_script, setup_base, args)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/command/easy_install.py\", line 1087, in run_setup\r\n        run_setup(setup_script, args)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 246, in run_setup\r\n        raise\r\n      File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n        self.gen.throw(type, value, traceback)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 195, in setup_context\r\n        yield\r\n      File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n        self.gen.throw(type, value, traceback)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 166, in save_modules\r\n        saved_exc.resume()\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 141, in resume\r\n        six.reraise(type, exc, self._tb)\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/_vendor/six.py\", line 685, in reraise\r\n        raise value.with_traceback(tb)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 154, in save_modules\r\n        yield saved\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 195, in setup_context\r\n        yield\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 243, in run_setup\r\n        DirectorySandbox(setup_dir).run(runner)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 273, in run\r\n        return func()\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 242, in runner\r\n        _execfile(setup_script, ns)\r\n      File \"/usr/lib/python3/dist-packages/setuptools/sandbox.py\", line 46, in _execfile\r\n        exec(code, globals, locals)\r\n      File \"/tmp/easy_install-6dm2lcpa/pbr-3.1.1/setup.py\", line 22, in <module>\r\n      File \"/tmp/easy_install-6dm2lcpa/pbr-3.1.1/pbr/util.py\", line 267, in cfg_to_args\r\n      File \"/tmp/easy_install-6dm2lcpa/pbr-3.1.1/pbr/util.py\", line 569, in wrap_commands\r\n      File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2235, in resolve\r\n        module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n    ImportError: No module named 'tasks'\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-2wkcdafj/tenacity/\r\n```\r\n\r\n## Python version\r\n\r\n```\r\nroot@2b8b4fe6b21d:~# python3 --version\r\nPython 3.5.2\r\n```\r\n\r\n## pip list\r\n\r\n```\r\nroot@2b8b4fe6b21d:~# pip3 list\r\nDEPRECATION: The default format will switch to columns in the future. You can use --format=(legacy|columns) (or define a format=(legacy|columns) in your pip.conf under the [list] section) to disable this warning.\r\nasn1crypto (0.22.0)\r\nbackports.csv (1.0.5)\r\ncffi (1.10.0)\r\nchardet (2.3.0)\r\ncli-helpers (0.2.3)\r\nclick (6.7)\r\nconfigobj (5.0.6)\r\ncryptography (2.0.3)\r\ndbschema (1.1.1)\r\nhumanize (0.5.1)\r\nidna (2.6)\r\nmycli (1.12.0)\r\npgcli (1.7.0)\r\npgspecial (1.8.0)\r\npip (9.0.1)\r\nprettytable (0.7.2)\r\nprompt-toolkit (1.0.15)\r\npsycopg2 (2.7.3)\r\npycparser (2.18)\r\npycurl (7.43.0)\r\nPygments (2.2.0)\r\npygobject (3.20.0)\r\nPyMySQL (0.7.11)\r\npython-apt (1.1.0b1)\r\nPyYAML (3.12)\r\nredis (2.10.5)\r\nrequests (2.9.1)\r\nrpq (2.0)\r\nsetproctitle (1.1.10)\r\nsetuptools (20.7.0)\r\nsix (1.10.0)\r\nsqlparse (0.2.3)\r\nssh-import-id (5.5)\r\nterminaltables (3.1.0)\r\nunattended-upgrades (0.1)\r\nurllib3 (1.13.1)\r\nvirtualenv (15.1.0)\r\nwcwidth (0.1.7)\r\nwheel (0.29.0)\r\nroot@2b8b4fe6b21d:~# \r\n```\r\n\r\n## Distribution used\r\n\r\n```\r\nroot@2b8b4fe6b21d:~# lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.2 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/83", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/83/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/83/events", "html_url": "https://github.com/jd/tenacity/issues/83", "id": 246425692, "node_id": "MDU6SXNzdWUyNDY0MjU2OTI=", "number": 83, "title": "Changelog?", "user": {"login": "adamrothman", "id": 662688, "node_id": "MDQ6VXNlcjY2MjY4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/662688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrothman", "html_url": "https://github.com/adamrothman", "followers_url": "https://api.github.com/users/adamrothman/followers", "following_url": "https://api.github.com/users/adamrothman/following{/other_user}", "gists_url": "https://api.github.com/users/adamrothman/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrothman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrothman/subscriptions", "organizations_url": "https://api.github.com/users/adamrothman/orgs", "repos_url": "https://api.github.com/users/adamrothman/repos", "events_url": "https://api.github.com/users/adamrothman/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrothman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 426175559, "node_id": "MDU6TGFiZWw0MjYxNzU1NTk=", "url": "https://api.github.com/repos/jd/tenacity/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}, {"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-28T18:32:21Z", "updated_at": "2019-04-08T15:27:53Z", "closed_at": "2019-04-08T15:27:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please excuse me if this exists and I just couldn't find it \u2013 but is there a changelog available somewhere? The releases at https://github.com/jd/tenacity/releases are not annotated and I couldn't find anything like a changelog in the documentation (http://tenacity.readthedocs.io/).\r\n\r\nA number of tools exist that can automatically generate changelog entries from commit history \u2013 at a minimum it would be helpful to have something like this so that consumers of tenacity can understand what we're getting when we upgrade from one version to another.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/81", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/81/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/81/events", "html_url": "https://github.com/jd/tenacity/issues/81", "id": 244105185, "node_id": "MDU6SXNzdWUyNDQxMDUxODU=", "number": 81, "title": "Upload wheels to PyPI", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-19T16:47:20Z", "updated_at": "2017-08-16T14:08:09Z", "closed_at": "2017-08-16T14:08:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "tenacity can build as a universal wheel, but it seems like these wheels aren't being upload to PyPI. Pretty please upload wheels? :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/77", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/77/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/77/events", "html_url": "https://github.com/jd/tenacity/issues/77", "id": 237822114, "node_id": "MDU6SXNzdWUyMzc4MjIxMTQ=", "number": 77, "title": "Improve on-retry logging", "user": {"login": "immerrr", "id": 579798, "node_id": "MDQ6VXNlcjU3OTc5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/immerrr", "html_url": "https://github.com/immerrr", "followers_url": "https://api.github.com/users/immerrr/followers", "following_url": "https://api.github.com/users/immerrr/following{/other_user}", "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions", "organizations_url": "https://api.github.com/users/immerrr/orgs", "repos_url": "https://api.github.com/users/immerrr/repos", "events_url": "https://api.github.com/users/immerrr/events{/privacy}", "received_events_url": "https://api.github.com/users/immerrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-22T11:59:34Z", "updated_at": "2018-07-25T12:28:35Z", "closed_at": "2018-07-25T12:28:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nAnd thank you for forking the one and only library for better retries in Python. Tenacity API looks better, although I'm still to find an opportunity to use it in my projects.\r\n\r\nI'd like to propose an improvement. More often than not, if there's a retry, I'd like it logged somewhere. With `retrying` I found myself using `retry_on_exception` functions that contained log messages with smth like\r\n```\r\nX failed, retrying (maybe): <error message>\r\n```\r\nbecause `retry_on_exception` function doesn't know whether or not there will be another retry attempt.\r\n\r\ntenacity makes a step in the right direction with `after=after_log` function, but it's kind of lacking because different bits of information that can be useful to log are available in different places, such as:\r\n- first attempt start time or total time elapsed since then: available to `stop` functions\r\n- next attempt delay: available as a return value of  `wait` functions\r\n- attempt number: available to all (?) but `retry` functions\r\n- invalid value returned or exception raised: available to `retry` functions\r\n\r\nProviding just one logger/level/msgformat combination might not be enough as the user could want more flexibility, like\r\n- reporting retried attempts as WARNING and the last one as ERROR\r\n- using different loglevels for different errors\r\n- provide more information about the error in the log where possible\r\n\r\nSo I presume it should be another kwarg that accepts a function, e.g. `log_retry=` or `on_retry=`. And that function could accept an `attempt` with all interesting metadata attached (right now only `attempt_number` is attached to the `Future` instance), so as to avoid function signature issues when available metadata is altered.\r\n\r\nIf it sounds interesting, I can put together a POC.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/76", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/76/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/76/events", "html_url": "https://github.com/jd/tenacity/issues/76", "id": 236701295, "node_id": "MDU6SXNzdWUyMzY3MDEyOTU=", "number": 76, "title": "Reset stop conditions", "user": {"login": "cher-nov", "id": 2927132, "node_id": "MDQ6VXNlcjI5MjcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2927132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cher-nov", "html_url": "https://github.com/cher-nov", "followers_url": "https://api.github.com/users/cher-nov/followers", "following_url": "https://api.github.com/users/cher-nov/following{/other_user}", "gists_url": "https://api.github.com/users/cher-nov/gists{/gist_id}", "starred_url": "https://api.github.com/users/cher-nov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cher-nov/subscriptions", "organizations_url": "https://api.github.com/users/cher-nov/orgs", "repos_url": "https://api.github.com/users/cher-nov/repos", "events_url": "https://api.github.com/users/cher-nov/events{/privacy}", "received_events_url": "https://api.github.com/users/cher-nov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-06-18T05:23:09Z", "updated_at": "2017-06-21T10:23:14Z", "closed_at": "2017-06-21T10:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Assume we have next function:\r\n\r\n```python\r\n@retry(stop=stop_after_attempt(3))\r\ndef test_function():\r\n    # while loop that does jobs\r\n    # every successful iteration is a completed job\r\n    while not stop_event.is_set():\r\n        # some code that can raise exception\r\n```\r\n\r\nHere we have counter that decreases on every failed job. But due to the while loop, it becomes a counter of failed jobs instead of attempt counter.\r\nAlthough I could separate the job completion code into another function, there's another problem: every next job needs data from some previous jobs. So I will need to use outer data, what is slightly non-pythonic, I believe.\r\n\r\nProposal is to add functions to reset stop conditions (all and/or specific).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/75", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/75/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/75/events", "html_url": "https://github.com/jd/tenacity/issues/75", "id": 236700889, "node_id": "MDU6SXNzdWUyMzY3MDA4ODk=", "number": 75, "title": "Usage with threaded functions?", "user": {"login": "cher-nov", "id": 2927132, "node_id": "MDQ6VXNlcjI5MjcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2927132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cher-nov", "html_url": "https://github.com/cher-nov", "followers_url": "https://api.github.com/users/cher-nov/followers", "following_url": "https://api.github.com/users/cher-nov/following{/other_user}", "gists_url": "https://api.github.com/users/cher-nov/gists{/gist_id}", "starred_url": "https://api.github.com/users/cher-nov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cher-nov/subscriptions", "organizations_url": "https://api.github.com/users/cher-nov/orgs", "repos_url": "https://api.github.com/users/cher-nov/repos", "events_url": "https://api.github.com/users/cher-nov/events{/privacy}", "received_events_url": "https://api.github.com/users/cher-nov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-18T05:10:12Z", "updated_at": "2017-06-21T10:17:08Z", "closed_at": "2017-06-21T10:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible? Threading isn't mentioned ever in manual.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/74", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/74/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/74/events", "html_url": "https://github.com/jd/tenacity/issues/74", "id": 236700757, "node_id": "MDU6SXNzdWUyMzY3MDA3NTc=", "number": 74, "title": "Multiple \"stop\" conditions", "user": {"login": "cher-nov", "id": 2927132, "node_id": "MDQ6VXNlcjI5MjcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2927132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cher-nov", "html_url": "https://github.com/cher-nov", "followers_url": "https://api.github.com/users/cher-nov/followers", "following_url": "https://api.github.com/users/cher-nov/following{/other_user}", "gists_url": "https://api.github.com/users/cher-nov/gists{/gist_id}", "starred_url": "https://api.github.com/users/cher-nov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cher-nov/subscriptions", "organizations_url": "https://api.github.com/users/cher-nov/orgs", "repos_url": "https://api.github.com/users/cher-nov/repos", "events_url": "https://api.github.com/users/cher-nov/events{/privacy}", "received_events_url": "https://api.github.com/users/cher-nov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-18T05:05:15Z", "updated_at": "2018-03-22T20:25:07Z", "closed_at": "2017-06-20T14:45:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this possible? For example, 7 attempts with 10 seconds timeout each.\r\nThe documentation is unclear of it. :c", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/73", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/73/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/73/events", "html_url": "https://github.com/jd/tenacity/issues/73", "id": 235939184, "node_id": "MDU6SXNzdWUyMzU5MzkxODQ=", "number": 73, "title": "How is this package different from retrying?", "user": {"login": "mmautner", "id": 1419652, "node_id": "MDQ6VXNlcjE0MTk2NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1419652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmautner", "html_url": "https://github.com/mmautner", "followers_url": "https://api.github.com/users/mmautner/followers", "following_url": "https://api.github.com/users/mmautner/following{/other_user}", "gists_url": "https://api.github.com/users/mmautner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmautner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmautner/subscriptions", "organizations_url": "https://api.github.com/users/mmautner/orgs", "repos_url": "https://api.github.com/users/mmautner/repos", "events_url": "https://api.github.com/users/mmautner/events{/privacy}", "received_events_url": "https://api.github.com/users/mmautner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T16:34:13Z", "updated_at": "2017-06-16T10:03:33Z", "closed_at": "2017-06-16T10:03:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "What was the purpose of forking the [retrying repo](https://github.com/rholder/retrying)? This project's README is identical besides mentioning:\r\n\r\n> It originates from a fork of Retrying\r\n\r\nIt might be helpful to add more documentation + a changelog that makes it easier for new users to decide whether to use this package vs. `retrying`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/72", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/72/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/72/events", "html_url": "https://github.com/jd/tenacity/issues/72", "id": 235934578, "node_id": "MDU6SXNzdWUyMzU5MzQ1Nzg=", "number": 72, "title": "dead code reported by vulture", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-14T16:17:39Z", "updated_at": "2017-06-15T11:31:21Z", "closed_at": "2017-06-15T11:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "We used vulture (https://github.com/jendrikseipp/vulture) to search for unused code in your project. You can find the report below. It would be great if you could give us feedback about which items are actually used or unused. This would allow us to improve vulture and ideally it also helps you to remove obsolete code or even find typos and bugs.\r\n\r\nCommand:\r\n```\r\nvulture tenacity\r\n```\r\n\r\nRaw Results:\r\n```\r\ntenacity/doc/source/conf.py:1: Unused variable 'master_doc'\r\ntenacity/doc/source/conf.py:2: Unused variable 'project'\r\ntenacity/tenacity/__init__.py:34: Unused import 'retry_always'\r\ntenacity/tenacity/__init__.py:38: Unused import 'retry_if_not_result'\r\ntenacity/tenacity/__init__.py:39: Unused import 'retry_if_result'\r\ntenacity/tenacity/__init__.py:40: Unused import 'retry_never'\r\ntenacity/tenacity/__init__.py:43: Unused import 'stop_after_attempt'\r\ntenacity/tenacity/__init__.py:44: Unused import 'stop_after_delay'\r\ntenacity/tenacity/__init__.py:50: Unused import 'wait_chain'\r\ntenacity/tenacity/__init__.py:52: Unused import 'wait_exponential'\r\ntenacity/tenacity/__init__.py:54: Unused import 'wait_incrementing'\r\ntenacity/tenacity/__init__.py:56: Unused import 'wait_random'\r\ntenacity/tenacity/__init__.py:59: Unused import 'before_log'\r\ntenacity/tenacity/__init__.py:63: Unused import 'after_log'\r\ntenacity/tenacity/after.py:24: Unused function 'after_log'\r\ntenacity/tenacity/before.py:24: Unused function 'before_log'\r\ntenacity/tenacity/retry.py:52: Unused variable 'retry_always'\r\ntenacity/tenacity/tests/test_tenacity.py:429: Unused function '_retryable_test_with_exception_type_io_attempt_limit'\r\ntenacity/tenacity/tests/test_tenacity.py:451: Unused function '_retryable_test_with_exception_type_custom_attempt_limit'\r\ntenacity/tenacity/tests/test_tenacity.py:536: Unused variable 'trial_time_taken_ms'\r\n```\r\n\r\nObvious False positives:\r\n```\r\ntenacity/tenacity/__init__.py:34: Unused import 'retry_always'\r\ntenacity/tenacity/__init__.py:38: Unused import 'retry_if_not_result'\r\ntenacity/tenacity/__init__.py:39: Unused import 'retry_if_result'\r\ntenacity/tenacity/__init__.py:40: Unused import 'retry_never'\r\ntenacity/tenacity/__init__.py:43: Unused import 'stop_after_attempt'\r\ntenacity/tenacity/__init__.py:44: Unused import 'stop_after_delay'\r\ntenacity/tenacity/__init__.py:50: Unused import 'wait_chain'\r\ntenacity/tenacity/__init__.py:52: Unused import 'wait_exponential'\r\ntenacity/tenacity/__init__.py:54: Unused import 'wait_incrementing'\r\ntenacity/tenacity/__init__.py:56: Unused import 'wait_random'\r\ntenacity/tenacity/__init__.py:59: Unused import 'before_log'\r\ntenacity/tenacity/__init__.py:63: Unused import 'after_log'\r\n```\r\n\r\nUnused code or False positive:\r\n```\r\ntenacity/doc/source/conf.py:1: Unused variable 'master_doc'\r\ntenacity/doc/source/conf.py:2: Unused variable 'project'\r\ntenacity/tenacity/retry.py:52: Unused variable 'retry_always'\r\ntenacity/tenacity/tests/test_tenacity.py:429: Unused function '_retryable_test_with_exception_type_io_attempt_limit'\r\ntenacity/tenacity/tests/test_tenacity.py:451: Unused function '_retryable_test_with_exception_type_custom_attempt_limit'\r\ntenacity/tenacity/tests/test_tenacity.py:536: Unused variable 'trial_time_taken_ms'\r\n```\r\n\r\nThere might be false positives, which can be prevented by adding them to a\r\nwhitelist file. You may find more info [here](https://github.com/jendrikseipp/vulture#usage)\r\n\r\nRegards,\r\nvulture team", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/58", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/58/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/58/events", "html_url": "https://github.com/jd/tenacity/issues/58", "id": 221905358, "node_id": "MDU6SXNzdWUyMjE5MDUzNTg=", "number": 58, "title": "Provide a generator decorator", "user": {"login": "proppy", "id": 5268, "node_id": "MDQ6VXNlcjUyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/proppy", "html_url": "https://github.com/proppy", "followers_url": "https://api.github.com/users/proppy/followers", "following_url": "https://api.github.com/users/proppy/following{/other_user}", "gists_url": "https://api.github.com/users/proppy/gists{/gist_id}", "starred_url": "https://api.github.com/users/proppy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/proppy/subscriptions", "organizations_url": "https://api.github.com/users/proppy/orgs", "repos_url": "https://api.github.com/users/proppy/repos", "events_url": "https://api.github.com/users/proppy/events{/privacy}", "received_events_url": "https://api.github.com/users/proppy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-14T22:46:19Z", "updated_at": "2017-04-16T17:40:30Z", "closed_at": "2017-04-16T17:40:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it make sense to have a `@retry` variant that better support generator functions?\r\n\r\nSomething like:\r\n```\r\ndef retry_generator(max_retries, exc_type=Exception, exc_check=None):\r\n    def wrap(gen):\r\n        def wrapped(*args, **kwargs):\r\n            retry = 0\r\n            rpc_error = None\r\n            while retry <= max_retries:\r\n                try:\r\n                    for i in gen(*args, **kwargs):\r\n                        yield i\r\n                    return\r\n                except exc_type as e:\r\n                    if exc_check and exc_check(e):\r\n                        retry += 1\r\n                        rpc_error = e\r\n                        continue\r\n                    raise\r\n            raise rpc_error\r\n        return wrapped\r\n    return wrap\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/57", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/57/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/57/events", "html_url": "https://github.com/jd/tenacity/issues/57", "id": 219305926, "node_id": "MDU6SXNzdWUyMTkzMDU5MjY=", "number": 57, "title": "Documentation examples don't work", "user": {"login": "shaytidhar", "id": 5457783, "node_id": "MDQ6VXNlcjU0NTc3ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5457783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaytidhar", "html_url": "https://github.com/shaytidhar", "followers_url": "https://api.github.com/users/shaytidhar/followers", "following_url": "https://api.github.com/users/shaytidhar/following{/other_user}", "gists_url": "https://api.github.com/users/shaytidhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaytidhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaytidhar/subscriptions", "organizations_url": "https://api.github.com/users/shaytidhar/orgs", "repos_url": "https://api.github.com/users/shaytidhar/repos", "events_url": "https://api.github.com/users/shaytidhar/events{/privacy}", "received_events_url": "https://api.github.com/users/shaytidhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-04T16:18:16Z", "updated_at": "2017-04-13T13:00:17Z", "closed_at": "2017-04-13T13:00:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When only mentioning @retry decorator, the function retry only when exception raises.\r\nBoth of the first two examples (never_give_up_never_surrender and stop_after_7_attempts) suppose to run forever but run only once.\r\n\r\nWhat is the definition for failure? exception only?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/56", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/56/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/56/events", "html_url": "https://github.com/jd/tenacity/issues/56", "id": 219232415, "node_id": "MDU6SXNzdWUyMTkyMzI0MTU=", "number": 56, "title": "add to docs how to retrieve the actual function Exception", "user": {"login": "asafcombo", "id": 12124039, "node_id": "MDQ6VXNlcjEyMTI0MDM5", "avatar_url": "https://avatars3.githubusercontent.com/u/12124039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asafcombo", "html_url": "https://github.com/asafcombo", "followers_url": "https://api.github.com/users/asafcombo/followers", "following_url": "https://api.github.com/users/asafcombo/following{/other_user}", "gists_url": "https://api.github.com/users/asafcombo/gists{/gist_id}", "starred_url": "https://api.github.com/users/asafcombo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asafcombo/subscriptions", "organizations_url": "https://api.github.com/users/asafcombo/orgs", "repos_url": "https://api.github.com/users/asafcombo/repos", "events_url": "https://api.github.com/users/asafcombo/events{/privacy}", "received_events_url": "https://api.github.com/users/asafcombo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-04T12:22:18Z", "updated_at": "2017-04-13T13:24:49Z", "closed_at": "2017-04-13T13:24:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "example:\r\n```\r\n@retry(stop=stop_after_attempt(1))\r\ndef divisionByZero():\r\n   print 1/0\r\n\r\ntry:\r\n    divisionByZero\r\nexcept:\r\n    except Exception as e: \r\n        print e.last_attempt.exception()\r\n       ### or  e.reraise\r\n```\r\n\r\nAlso would be nice if it could be added a functionality that catches the last exception so We won't have to add try/except controls. What I mean is:\r\n\r\n```\r\n@retry(onFiinalException=userFunction)\r\n\r\ndef userFunction(Exception):\r\n   #gets the final exception and does something \r\n   logger.error(Exception)\r\n    logger.error(e.reraise)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/54", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/54/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/54/events", "html_url": "https://github.com/jd/tenacity/issues/54", "id": 216514441, "node_id": "MDU6SXNzdWUyMTY1MTQ0NDE=", "number": 54, "title": "Required version of Six incorrect", "user": {"login": "killian441", "id": 18402136, "node_id": "MDQ6VXNlcjE4NDAyMTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/18402136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killian441", "html_url": "https://github.com/killian441", "followers_url": "https://api.github.com/users/killian441/followers", "following_url": "https://api.github.com/users/killian441/following{/other_user}", "gists_url": "https://api.github.com/users/killian441/gists{/gist_id}", "starred_url": "https://api.github.com/users/killian441/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killian441/subscriptions", "organizations_url": "https://api.github.com/users/killian441/orgs", "repos_url": "https://api.github.com/users/killian441/repos", "events_url": "https://api.github.com/users/killian441/events{/privacy}", "received_events_url": "https://api.github.com/users/killian441/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-23T17:41:53Z", "updated_at": "2017-03-24T09:03:08Z", "closed_at": "2017-03-24T09:03:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, requirements.txt says it needs Six version 1.7 or greater, but it looks like you are using the raise_from() method which, as far as I can tell, wasn't introduced until Six version 1.9.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/53", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/53/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/53/events", "html_url": "https://github.com/jd/tenacity/issues/53", "id": 215543000, "node_id": "MDU6SXNzdWUyMTU1NDMwMDA=", "number": 53, "title": "`before` callback on first success", "user": {"login": "JasonTam", "id": 1779417, "node_id": "MDQ6VXNlcjE3Nzk0MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1779417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JasonTam", "html_url": "https://github.com/JasonTam", "followers_url": "https://api.github.com/users/JasonTam/followers", "following_url": "https://api.github.com/users/JasonTam/following{/other_user}", "gists_url": "https://api.github.com/users/JasonTam/gists{/gist_id}", "starred_url": "https://api.github.com/users/JasonTam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JasonTam/subscriptions", "organizations_url": "https://api.github.com/users/JasonTam/orgs", "repos_url": "https://api.github.com/users/JasonTam/repos", "events_url": "https://api.github.com/users/JasonTam/events{/privacy}", "received_events_url": "https://api.github.com/users/JasonTam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-20T20:19:47Z", "updated_at": "2017-03-21T09:43:59Z", "closed_at": "2017-03-21T09:43:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n@retry(before=lambda *args: print('This should only occur on retries(?)'))\r\ndef unstable():\r\n    return\r\n```\r\nThis prints out `This should only occur on retries(?)`\r\n\r\nIs this intended? I thought the callback should only be invoked on retries of the method `unstable` -- not if it succeeds on the first try.\r\n\r\nI've been using `after` instead. But I was just unsure of the intentions here...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/52", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/52/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/52/events", "html_url": "https://github.com/jd/tenacity/issues/52", "id": 212053326, "node_id": "MDU6SXNzdWUyMTIwNTMzMjY=", "number": 52, "title": "any plan to support python 2.7?", "user": {"login": "alburthoffman", "id": 863684, "node_id": "MDQ6VXNlcjg2MzY4NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/863684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alburthoffman", "html_url": "https://github.com/alburthoffman", "followers_url": "https://api.github.com/users/alburthoffman/followers", "following_url": "https://api.github.com/users/alburthoffman/following{/other_user}", "gists_url": "https://api.github.com/users/alburthoffman/gists{/gist_id}", "starred_url": "https://api.github.com/users/alburthoffman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alburthoffman/subscriptions", "organizations_url": "https://api.github.com/users/alburthoffman/orgs", "repos_url": "https://api.github.com/users/alburthoffman/repos", "events_url": "https://api.github.com/users/alburthoffman/events{/privacy}", "received_events_url": "https://api.github.com/users/alburthoffman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-06T08:27:57Z", "updated_at": "2017-03-06T10:52:13Z", "closed_at": "2017-03-06T09:19:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nur module tenacity is quite useful actually. but noticed it depends on concurrent module in python 3.\r\nso I wonder if any plan to support python 2.7? that would help for old systems.\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/51", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/51/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/51/events", "html_url": "https://github.com/jd/tenacity/issues/51", "id": 211640824, "node_id": "MDU6SXNzdWUyMTE2NDA4MjQ=", "number": 51, "title": "add opt in logging", "user": {"login": "RonnyPfannschmidt", "id": 156838, "node_id": "MDQ6VXNlcjE1NjgzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RonnyPfannschmidt", "html_url": "https://github.com/RonnyPfannschmidt", "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers", "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}", "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}", "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions", "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs", "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos", "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}", "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-03T09:47:11Z", "updated_at": "2017-03-03T11:27:07Z", "closed_at": "2017-03-03T10:42:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "while retrying, i'd like some automated logging to happen, a way to provide a logger for stop conditions/retries/waits would be nice\r\n\r\nim not sure about a good api yet\r\n\r\nim predisposed to the wait_for lib", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/50", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/50/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/50/events", "html_url": "https://github.com/jd/tenacity/issues/50", "id": 211383721, "node_id": "MDU6SXNzdWUyMTEzODM3MjE=", "number": 50, "title": "End without exception", "user": {"login": "xoac", "id": 1863020, "node_id": "MDQ6VXNlcjE4NjMwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1863020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xoac", "html_url": "https://github.com/xoac", "followers_url": "https://api.github.com/users/xoac/followers", "following_url": "https://api.github.com/users/xoac/following{/other_user}", "gists_url": "https://api.github.com/users/xoac/gists{/gist_id}", "starred_url": "https://api.github.com/users/xoac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xoac/subscriptions", "organizations_url": "https://api.github.com/users/xoac/orgs", "repos_url": "https://api.github.com/users/xoac/repos", "events_url": "https://api.github.com/users/xoac/events{/privacy}", "received_events_url": "https://api.github.com/users/xoac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-02T12:57:58Z", "updated_at": "2017-03-02T13:06:48Z", "closed_at": "2017-03-02T13:06:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n @tenacity.retry(retry=tenacity.retry_if_result(Common.IsNonePtr), stop=tenacity.stop_after_attempt(7), reraise=False)\r\n    def get_net_addr(self, uid):\r\n             return None\r\n```\r\nIs it possible to end this without RetryError? After 7 attpemts it's fine to return None. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/49", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/49/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/49/events", "html_url": "https://github.com/jd/tenacity/issues/49", "id": 201145742, "node_id": "MDU6SXNzdWUyMDExNDU3NDI=", "number": 49, "title": "weird installation error with 2.7.1: tenacity-3.7.1/setup.cfg: TypeError: dist must be a Distribution instance',)", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-17T00:12:49Z", "updated_at": "2017-03-03T10:42:56Z", "closed_at": "2017-03-03T10:42:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this weird error [here](https://circleci.com/gh/pycontribs/jira/5?utm_campaign=build-failed&utm_medium=email&utm_source=notification):\r\n```\r\nFile \"/home/ubuntu/virtualenvs/venv-system/lib/python2.7/site-packages/pbr/core.py\", line 119, in pbr\r\n    'Error parsing %s: %s: %s' % (path, e.__class__.__name__, e))\r\nsetuptools.sandbox.UnpickleableException: DistutilsSetupError('Error parsing /tmp/easy_install-81hJTS/tenacity-3.7.1/setup.cfg: TypeError: dist must be a Distribution instance',)\r\n```\r\n\r\ntenacity is only listed as a dependency so I am not sure what causes it but I suspect that its setup.cfg may be more than distutils can handle.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/47", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/47/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/47/events", "html_url": "https://github.com/jd/tenacity/issues/47", "id": 200202476, "node_id": "MDU6SXNzdWUyMDAyMDI0NzY=", "number": 47, "title": "implement @retry_once and @retry_twice", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-11T20:45:15Z", "updated_at": "2017-01-12T11:38:34Z", "closed_at": "2017-01-12T11:33:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because the default behaviour is to retry forever I would like to suggest implementing  `@retry_once` and `@retry_twice` as much easier to use alternatives.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/46", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/46/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/46/events", "html_url": "https://github.com/jd/tenacity/issues/46", "id": 199843513, "node_id": "MDU6SXNzdWUxOTk4NDM1MTM=", "number": 46, "title": "Do not use debtcollector", "user": {"login": "xmedeko", "id": 1101801, "node_id": "MDQ6VXNlcjExMDE4MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1101801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xmedeko", "html_url": "https://github.com/xmedeko", "followers_url": "https://api.github.com/users/xmedeko/followers", "following_url": "https://api.github.com/users/xmedeko/following{/other_user}", "gists_url": "https://api.github.com/users/xmedeko/gists{/gist_id}", "starred_url": "https://api.github.com/users/xmedeko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xmedeko/subscriptions", "organizations_url": "https://api.github.com/users/xmedeko/orgs", "repos_url": "https://api.github.com/users/xmedeko/repos", "events_url": "https://api.github.com/users/xmedeko/events{/privacy}", "received_events_url": "https://api.github.com/users/xmedeko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-10T14:59:16Z", "updated_at": "2017-01-10T15:18:25Z", "closed_at": "2017-01-10T15:18:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "`debtcollector` is used for just one warning, and it requires to install 2 more packages `pbr`, `wrapt`. It's useful for large projects, but for such small library, like `tenacity`, it's IMHO better to keep it's dependencies small and write the `DeprecationWarning` programatically.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/45", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/45/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/45/events", "html_url": "https://github.com/jd/tenacity/issues/45", "id": 198699414, "node_id": "MDU6SXNzdWUxOTg2OTk0MTQ=", "number": 45, "title": "raising TryAgain when the retrying should be stopped causes deadlock", "user": {"login": "davidt99", "id": 8295100, "node_id": "MDQ6VXNlcjgyOTUxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidt99", "html_url": "https://github.com/davidt99", "followers_url": "https://api.github.com/users/davidt99/followers", "following_url": "https://api.github.com/users/davidt99/following{/other_user}", "gists_url": "https://api.github.com/users/davidt99/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidt99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidt99/subscriptions", "organizations_url": "https://api.github.com/users/davidt99/orgs", "repos_url": "https://api.github.com/users/davidt99/repos", "events_url": "https://api.github.com/users/davidt99/events{/privacy}", "received_events_url": "https://api.github.com/users/davidt99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198545, "node_id": "MDU6TGFiZWw0MjMxOTg1NDU=", "url": "https://api.github.com/repos/jd/tenacity/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-04T12:44:28Z", "updated_at": "2017-01-04T15:27:43Z", "closed_at": "2017-01-04T15:26:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a simple function - it checks if a request result is a certain value and if not raises `TryAgain` to try again.\r\nI'm not sure why, but after the function should stop retrying, it enters a deadlock when `TryAgain` is raised - no new attempts are made and function doesn't return.\r\nThis simple example demonstrate it:\r\n```python\r\n@tenacity.retry(stop=stop_after_delay(10),wait=wait_fixed(1))\r\ndef some_function():\r\n    raise tenacity.TryAgain()\r\n```\r\nI'm using python 3.5.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/44", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/44/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/44/events", "html_url": "https://github.com/jd/tenacity/issues/44", "id": 196062322, "node_id": "MDU6SXNzdWUxOTYwNjIzMjI=", "number": 44, "title": "Catch exception after retries", "user": {"login": "gustavoip", "id": 4015583, "node_id": "MDQ6VXNlcjQwMTU1ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4015583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gustavoip", "html_url": "https://github.com/gustavoip", "followers_url": "https://api.github.com/users/gustavoip/followers", "following_url": "https://api.github.com/users/gustavoip/following{/other_user}", "gists_url": "https://api.github.com/users/gustavoip/gists{/gist_id}", "starred_url": "https://api.github.com/users/gustavoip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gustavoip/subscriptions", "organizations_url": "https://api.github.com/users/gustavoip/orgs", "repos_url": "https://api.github.com/users/gustavoip/repos", "events_url": "https://api.github.com/users/gustavoip/events{/privacy}", "received_events_url": "https://api.github.com/users/gustavoip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-16T13:44:33Z", "updated_at": "2016-12-17T10:57:25Z", "closed_at": "2016-12-17T10:57:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nHow can I catch the exception after some unsuccessful tries?\r\n\r\n\r\nFor example:\r\n\r\n```\r\nfrom tenacity import retry, wait_fixed, stop_after_attempt\r\n\r\n>>> @retry(stop=stop_after_attempt(5), wait=wait_fixed(1))\r\n... def test():\r\n...     return 1/0\r\n... \r\n>>> \r\n>>> try:\r\n...     test()\r\n... except ZeroDivisionError:\r\n...     print(\"ok\")\r\n... \r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tenacity/__init__.py\", line 242, in call\r\n    result = fn(*args, **kwargs)\r\n  File \"<stdin>\", line 3, in test\r\nZeroDivisionError: division by zero\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/tenacity/__init__.py\", line 87, in wrapped_f\r\n    return r.call(f, *args, **kw)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tenacity/__init__.py\", line 239, in call\r\n    do = self.iter(result=result, exc_info=exc_info)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tenacity/__init__.py\", line 210, in iter\r\n    six.raise_from(RetryError(fut), fut.exception())\r\n  File \"<string>\", line 2, in raise_from\r\ntenacity.RetryError: RetryError[<Future at 0x7f2e0f95c940 state=finished raised ZeroDivisionError>]\r\n\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/41", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/41/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/41/events", "html_url": "https://github.com/jd/tenacity/issues/41", "id": 193608168, "node_id": "MDU6SXNzdWUxOTM2MDgxNjg=", "number": 41, "title": "Optionally calling sleep/after on no retry", "user": {"login": "bodenr", "id": 2048526, "node_id": "MDQ6VXNlcjIwNDg1MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2048526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodenr", "html_url": "https://github.com/bodenr", "followers_url": "https://api.github.com/users/bodenr/followers", "following_url": "https://api.github.com/users/bodenr/following{/other_user}", "gists_url": "https://api.github.com/users/bodenr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodenr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodenr/subscriptions", "organizations_url": "https://api.github.com/users/bodenr/orgs", "repos_url": "https://api.github.com/users/bodenr/repos", "events_url": "https://api.github.com/users/bodenr/events{/privacy}", "received_events_url": "https://api.github.com/users/bodenr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-05T20:58:02Z", "updated_at": "2016-12-06T10:03:49Z", "closed_at": "2016-12-06T10:03:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Today tenacity only invokes```sleep``` or ```after``` if a called function will retry [1].\r\n\r\nWhat are your thoughts on making these configurable to run even if there's no retry?\r\n\r\n\r\nPotential use cases might be introducing delay on certain conditions and/or invoking after hooks. For example [2].\r\n\r\nOr even something as simple as:\r\n```py\r\n# introduce a random sleep when a timeout occurs and log it\r\n@retry(retry= retry_if_exception_type(TimeoutErr),  wait= wait_random(), retry=retry_none(), after=log_timeout)\r\ndef might_raise_timeout(...):\r\n```\r\n\r\nWhile this usage may teeter the definition of retrying, it does provide some additional use cases.\r\n\r\n\r\n[1] https://github.com/jd/tenacity/blob/master/tenacity/__init__.py#L187\r\n[2] https://github.com/openstack/neutron/blob/master/neutron/common/rpc.py#L128", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/39", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/39/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/39/events", "html_url": "https://github.com/jd/tenacity/issues/39", "id": 192312412, "node_id": "MDU6SXNzdWUxOTIzMTI0MTI=", "number": 39, "title": "Allow to raise custom Exception on failure", "user": {"login": "omeranson", "id": 6899356, "node_id": "MDQ6VXNlcjY4OTkzNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6899356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omeranson", "html_url": "https://github.com/omeranson", "followers_url": "https://api.github.com/users/omeranson/followers", "following_url": "https://api.github.com/users/omeranson/following{/other_user}", "gists_url": "https://api.github.com/users/omeranson/gists{/gist_id}", "starred_url": "https://api.github.com/users/omeranson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omeranson/subscriptions", "organizations_url": "https://api.github.com/users/omeranson/orgs", "repos_url": "https://api.github.com/users/omeranson/repos", "events_url": "https://api.github.com/users/omeranson/events{/privacy}", "received_events_url": "https://api.github.com/users/omeranson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-29T15:28:15Z", "updated_at": "2016-11-30T11:31:15Z", "closed_at": "2016-11-30T11:31:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Request to support raising a custom Exception on failure.\r\n\r\ne.g.\r\n\r\n~~~ python\r\n@retry(stop=stop_after_attempt(7), raise=Exception(\"Retry failed\"))\r\ndef stop_after_7_attempts():\r\n    print(\"Stopping after 7 attempts\")\r\n    raise Exception(\"Error\")\r\n\r\nstop_after_7_attempts()\r\n~~~\r\n\r\nWith output:\r\nStopping after 7 attempts\r\nStopping after 7 attempts\r\nStopping after 7 attempts\r\nStopping after 7 attempts\r\nStopping after 7 attempts\r\nStopping after 7 attempts\r\nStopping after 7 attempts\r\nException: Retry failed\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/26", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/26/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/26/events", "html_url": "https://github.com/jd/tenacity/issues/26", "id": 176876588, "node_id": "MDU6SXNzdWUxNzY4NzY1ODg=", "number": 26, "title": "Implement operator to mimic wait_combine", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-14T10:55:53Z", "updated_at": "2016-10-22T16:59:11Z", "closed_at": "2016-10-22T16:59:11Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Using `wait_jitter(10) + wait_fixed(3)` instead of `wait_combine(wait_jitter(10), wait_fixed(3))`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/25", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/25/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/25/events", "html_url": "https://github.com/jd/tenacity/issues/25", "id": 176505370, "node_id": "MDU6SXNzdWUxNzY1MDUzNzA=", "number": 25, "title": "Discussion: Test util for mocking time.sleep()", "user": {"login": "bodenr", "id": 2048526, "node_id": "MDQ6VXNlcjIwNDg1MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2048526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodenr", "html_url": "https://github.com/bodenr", "followers_url": "https://api.github.com/users/bodenr/followers", "following_url": "https://api.github.com/users/bodenr/following{/other_user}", "gists_url": "https://api.github.com/users/bodenr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodenr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodenr/subscriptions", "organizations_url": "https://api.github.com/users/bodenr/orgs", "repos_url": "https://api.github.com/users/bodenr/repos", "events_url": "https://api.github.com/users/bodenr/events{/privacy}", "received_events_url": "https://api.github.com/users/bodenr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2016-09-12T22:53:11Z", "updated_at": "2020-06-07T15:55:39Z", "closed_at": "2016-09-14T08:10:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The way retrying is written and captures time.sleep() in a closure within Retrying.**init**(), consumers cannot patch time.sleep() in their UT code.\n\nTo get around this I've been doing some ad-hoc mocking like [1]. While this works I have to replicate it in each openstack project.\n\nIs there some way to can devise for consumers to more easily mockout time.sleep() for their UTs? Maybe there's an easy way to do it as-is and I'm missing it.\n\n[1] https://review.openstack.org/#/c/368235/2/cinder/tests/unit/test_utils.py@38\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/24", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/24/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/24/events", "html_url": "https://github.com/jd/tenacity/issues/24", "id": 176504221, "node_id": "MDU6SXNzdWUxNzY1MDQyMjE=", "number": 24, "title": "Raise last exception vs always raise RetryError", "user": {"login": "bodenr", "id": 2048526, "node_id": "MDQ6VXNlcjIwNDg1MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2048526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodenr", "html_url": "https://github.com/bodenr", "followers_url": "https://api.github.com/users/bodenr/followers", "following_url": "https://api.github.com/users/bodenr/following{/other_user}", "gists_url": "https://api.github.com/users/bodenr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodenr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodenr/subscriptions", "organizations_url": "https://api.github.com/users/bodenr/orgs", "repos_url": "https://api.github.com/users/bodenr/repos", "events_url": "https://api.github.com/users/bodenr/events{/privacy}", "received_events_url": "https://api.github.com/users/bodenr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-09-12T22:46:08Z", "updated_at": "2016-09-16T13:52:08Z", "closed_at": "2016-09-16T13:24:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Today, tenacity will always raise a RetryError if the callable times out in terms of its retries. This behavior is different from retrying that always raised the last raise exception.\n\nWhile I agree that the behavior taken by default in tenacity is a good choice, porting code from retrying to tenacity becomes error prone with this change in behavior as any callers in the chain must now expect a RetryError.\n\nYes callers can access the last exception and reraise it with something like:\n\n``` py\n        try:\n            my_retried_fn()\n        except tenacity.RetryError as retry_err:\n            ex, tr = retry_err.last_attempt.exception_info()\n            six.reraise(type(ex), ex, tr)\n```\n\nBut this will become tedious to replicate across openstack projects where it's \"risky\" to now raise the RetryError.\n\nWhat do you guys think about adding some way to toggle on reraising the last exception in tenacity (a backwards compat flag if you will)?\n\nOr if you want to get crazy, perhaps even a pluggable raise.. e.g.\n\n``` py\n@retry(raise=raise_last_exception()|raise_first_exception()|raise_exception(my_raise_fn)...)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/23", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/23/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/23/events", "html_url": "https://github.com/jd/tenacity/issues/23", "id": 176497202, "node_id": "MDU6SXNzdWUxNzY0OTcyMDI=", "number": 23, "title": "retry_if_result fails on any error", "user": {"login": "bodenr", "id": 2048526, "node_id": "MDQ6VXNlcjIwNDg1MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2048526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodenr", "html_url": "https://github.com/bodenr", "followers_url": "https://api.github.com/users/bodenr/followers", "following_url": "https://api.github.com/users/bodenr/following{/other_user}", "gists_url": "https://api.github.com/users/bodenr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodenr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodenr/subscriptions", "organizations_url": "https://api.github.com/users/bodenr/orgs", "repos_url": "https://api.github.com/users/bodenr/repos", "events_url": "https://api.github.com/users/bodenr/events{/privacy}", "received_events_url": "https://api.github.com/users/bodenr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-12T22:05:40Z", "updated_at": "2016-09-13T09:52:11Z", "closed_at": "2016-09-13T09:52:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to the docs on tenacity, retry_if_result should \"Retry forever ignoring Exceptions...\".\nHowever today it appears to bail on the first exception [1].\n\nThis can be overcome by using something like:\n\n``` py\nretry_any(retry_if_exception_type(Exception), retry_if_result(my_checker))\n```\n\nHowever it seems either we have a bug, or the doc needs to be updated.\n\n[1] https://github.com/jd/tenacity/blob/master/tenacity/retry.py#L55\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/22", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/22/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/22/events", "html_url": "https://github.com/jd/tenacity/issues/22", "id": 174577114, "node_id": "MDU6SXNzdWUxNzQ1NzcxMTQ=", "number": 22, "title": "Retrying compatibility: seconds vs. ms", "user": {"login": "bodenr", "id": 2048526, "node_id": "MDQ6VXNlcjIwNDg1MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2048526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodenr", "html_url": "https://github.com/bodenr", "followers_url": "https://api.github.com/users/bodenr/followers", "following_url": "https://api.github.com/users/bodenr/following{/other_user}", "gists_url": "https://api.github.com/users/bodenr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodenr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodenr/subscriptions", "organizations_url": "https://api.github.com/users/bodenr/orgs", "repos_url": "https://api.github.com/users/bodenr/repos", "events_url": "https://api.github.com/users/bodenr/events{/privacy}", "received_events_url": "https://api.github.com/users/bodenr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-01T17:10:22Z", "updated_at": "2016-09-01T17:44:20Z", "closed_at": "2016-09-01T17:44:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "By default seconds are used for most stop/retry predicates in tenacity right now. However in retrying ms was the default.\n\nWhile I don't disagree with seconds being the base of choice here, it causes more work for anyone migrating from retrying -> tenacity.\n\nFor example migrating retrying code like [1] to tenacity requires the measurements parameters passed to be changed to account for the fact that tenacity uses seconds.\n\nI assume this is intended correct, and folks migrating just have to deal with it?\n\n[1] https://github.com/openstack/neutron/blob/master/neutron/agent/common/ovs_lib.py#L80\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/19", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/19/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/19/events", "html_url": "https://github.com/jd/tenacity/issues/19", "id": 173615479, "node_id": "MDU6SXNzdWUxNzM2MTU0Nzk=", "number": 19, "title": "Tests take forever", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-27T21:05:53Z", "updated_at": "2016-08-29T01:28:21Z", "closed_at": "2016-08-29T01:28:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think some of the time changes may not have been reflected in tests (I didnt wait for the below to finish, cause that might have meant a few days, haha): thus the tests take long like:\n\n```\n$ /usr/bin/time -v nosetests -x -v -s\ntest_after_attempts (tenacity.tests.test_tenacity.TestBeforeAfterAttempts) ... ok\ntest_before_attempts (tenacity.tests.test_tenacity.TestBeforeAfterAttempts) ... ok\ntest_defaults (tenacity.tests.test_tenacity.TestDecoratorWrapper) ... ok\ntest_retry_if_exception_of_type (tenacity.tests.test_tenacity.TestDecoratorWrapper) ... Hi there, I'm a NameError\nHi there, I'm a NameError\nok\ntest_with_stop_on_exception (tenacity.tests.test_tenacity.TestDecoratorWrapper) ... Hi there, I'm an IOError\nok\ntest_with_stop_on_return_value (tenacity.tests.test_tenacity.TestDecoratorWrapper) ... RetryError[<Future at 0x7f8c6a0bfe10 state=finished returned NoneType>]\nok\ntest_with_wait (tenacity.tests.test_tenacity.TestDecoratorWrapper) ... ok\ntest_retry_any (tenacity.tests.test_tenacity.TestRetryConditions) ... ok\ntest_retry_try_again (tenacity.tests.test_tenacity.TestRetryConditions) ... ok\ntest_legacy_explicit_stop_type (tenacity.tests.test_tenacity.TestStopConditions) ... ok\ntest_never_stop (tenacity.tests.test_tenacity.TestStopConditions) ... ok\ntest_stop_after_attempt (tenacity.tests.test_tenacity.TestStopConditions) ... ok\ntest_stop_after_delay (tenacity.tests.test_tenacity.TestStopConditions) ... ok\ntest_stop_func (tenacity.tests.test_tenacity.TestStopConditions) ... ok\ntest_exponential (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_exponential_with_max_wait (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_exponential_with_max_wait_and_multiplier (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_fixed_sleep (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_incrementing_sleep (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_legacy_explicit_wait_type (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_no_sleep (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_random_sleep (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_random_sleep_without_min (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_wait_chain (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_wait_combine (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_wait_func (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\ntest_wait_jitter (tenacity.tests.test_tenacity.TestWaitConditions) ... ok\n^C\n----------------------------------------------------------------------\nRan 27 tests in 142.524s\n\nOK\n        Command being timed: \"nosetests -x -v -s\"\n        User time (seconds): 1.18\n        System time (seconds): 0.04\n        Percent of CPU this job got: 0%\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 2:22.81\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/17", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/17/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/17/events", "html_url": "https://github.com/jd/tenacity/issues/17", "id": 172274817, "node_id": "MDU6SXNzdWUxNzIyNzQ4MTc=", "number": 17, "title": "Get away from using milliseconds everywhere", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jd/tenacity/milestones/1", "html_url": "https://github.com/jd/tenacity/milestone/1", "labels_url": "https://api.github.com/repos/jd/tenacity/milestones/1/labels", "id": 1945589, "node_id": "MDk6TWlsZXN0b25lMTk0NTU4OQ==", "number": 1, "title": "2.0.0", "description": null, "creator": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2016-08-16T18:08:52Z", "updated_at": "2016-09-13T12:55:30Z", "due_on": null, "closed_at": "2016-09-13T12:55:30Z"}, "comments": 3, "created_at": "2016-08-20T14:59:49Z", "updated_at": "2016-08-26T04:47:58Z", "closed_at": "2016-08-25T15:38:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The usage of milliseconds never quite seemed to make sense (all time routines in python take floating point numbers) to myself, so I\"m not really such a big fan of keeping with that. Thoughts about moving away from that model and just using the normal floating point numbers to do time tracking and such (not forcing everything into milliseconds?); perhaps if really needed we can make it configurable (although I'd rather not).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/11", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/11/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/11/events", "html_url": "https://github.com/jd/tenacity/issues/11", "id": 171757047, "node_id": "MDU6SXNzdWUxNzE3NTcwNDc=", "number": 11, "title": "Discussion: Retry hook for logging or other", "user": {"login": "bodenr", "id": 2048526, "node_id": "MDQ6VXNlcjIwNDg1MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2048526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodenr", "html_url": "https://github.com/bodenr", "followers_url": "https://api.github.com/users/bodenr/followers", "following_url": "https://api.github.com/users/bodenr/following{/other_user}", "gists_url": "https://api.github.com/users/bodenr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodenr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodenr/subscriptions", "organizations_url": "https://api.github.com/users/bodenr/orgs", "repos_url": "https://api.github.com/users/bodenr/repos", "events_url": "https://api.github.com/users/bodenr/events{/privacy}", "received_events_url": "https://api.github.com/users/bodenr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-17T20:50:31Z", "updated_at": "2016-08-17T21:07:41Z", "closed_at": "2016-08-17T21:07:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "One of the PRs I had on retrying [1] was to support a generic wait hook, suitable for logging or other per-retry operations.\n\nI was looking at tenacity and wanted to confirm how I'd do this:\n\n``` py\ndef logged_wait(*args, **kwargs):\n    # no-op wait just to log on each attempt\n    print(\"Yet another logged attempt\")\n    return 0\n\n\n@retry(wait=wait_combine(logged_wait, wait_fixed(1000)), ...)\ndef my_retried_func():\n    # interesting retryable stuff here\n```\n\nIs this about right?\n\n[1] https://github.com/rholder/retrying/pull/50\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/9", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/9/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/9/events", "html_url": "https://github.com/jd/tenacity/issues/9", "id": 171691533, "node_id": "MDU6SXNzdWUxNzE2OTE1MzM=", "number": 9, "title": "Take over any of the 'intersting' functionality of oslo.service.loopingcall", "user": {"login": "harlowja", "id": 970458, "node_id": "MDQ6VXNlcjk3MDQ1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/970458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harlowja", "html_url": "https://github.com/harlowja", "followers_url": "https://api.github.com/users/harlowja/followers", "following_url": "https://api.github.com/users/harlowja/following{/other_user}", "gists_url": "https://api.github.com/users/harlowja/gists{/gist_id}", "starred_url": "https://api.github.com/users/harlowja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harlowja/subscriptions", "organizations_url": "https://api.github.com/users/harlowja/orgs", "repos_url": "https://api.github.com/users/harlowja/repos", "events_url": "https://api.github.com/users/harlowja/events{/privacy}", "received_events_url": "https://api.github.com/users/harlowja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-17T15:43:36Z", "updated_at": "2016-08-26T07:25:42Z", "closed_at": "2016-08-26T07:25:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It'd be nice to extract anything useful from:\n\nhttps://github.com/openstack/oslo.service/blob/master/oslo_service/loopingcall.py\n\nSo that we (oslo/openstack) can eventually remove that code (since it is really the same stuff at its core as this library).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/8", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/8/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/8/events", "html_url": "https://github.com/jd/tenacity/issues/8", "id": 171603585, "node_id": "MDU6SXNzdWUxNzE2MDM1ODU=", "number": 8, "title": "Make sure doc examples run", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 426175559, "node_id": "MDU6TGFiZWw0MjYxNzU1NTk=", "url": "https://api.github.com/repos/jd/tenacity/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}, {"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-17T08:37:55Z", "updated_at": "2017-09-23T13:16:08Z", "closed_at": "2017-09-23T13:16:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We have a similar things in tooz, where we make sure examples work. We might be able to use `doctest` for this via Sphinx, I don't know.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/7", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/7/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/7/events", "html_url": "https://github.com/jd/tenacity/issues/7", "id": 171603461, "node_id": "MDU6SXNzdWUxNzE2MDM0NjE=", "number": 7, "title": "Generate complete documentation of API", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 426175559, "node_id": "MDU6TGFiZWw0MjYxNzU1NTk=", "url": "https://api.github.com/repos/jd/tenacity/labels/documentation", "name": "documentation", "color": "fbca04", "default": true, "description": null}, {"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-17T08:37:10Z", "updated_at": "2019-04-18T08:24:38Z", "closed_at": "2019-04-18T08:24:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The doc is online at http://tenacity.readthedocs.io/ but it does not include the full API, just the examples.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/6", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/6/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/6/events", "html_url": "https://github.com/jd/tenacity/issues/6", "id": 171603265, "node_id": "MDU6SXNzdWUxNzE2MDMyNjU=", "number": 6, "title": "Provide statistics on the number of retry attempts", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jd/tenacity/milestones/1", "html_url": "https://github.com/jd/tenacity/milestone/1", "labels_url": "https://api.github.com/repos/jd/tenacity/milestones/1/labels", "id": 1945589, "node_id": "MDk6TWlsZXN0b25lMTk0NTU4OQ==", "number": 1, "title": "2.0.0", "description": null, "creator": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2016-08-16T18:08:52Z", "updated_at": "2016-09-13T12:55:30Z", "due_on": null, "closed_at": "2016-09-13T12:55:30Z"}, "comments": 1, "created_at": "2016-08-17T08:36:04Z", "updated_at": "2016-08-25T15:31:01Z", "closed_at": "2016-08-25T15:31:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "That could be useful to be able to trace things, etc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jd/tenacity/issues/5", "repository_url": "https://api.github.com/repos/jd/tenacity", "labels_url": "https://api.github.com/repos/jd/tenacity/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/jd/tenacity/issues/5/comments", "events_url": "https://api.github.com/repos/jd/tenacity/issues/5/events", "html_url": "https://github.com/jd/tenacity/issues/5", "id": 171481095, "node_id": "MDU6SXNzdWUxNzE0ODEwOTU=", "number": 5, "title": "Support for explicit retry using \"raise Retry\"", "user": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423198547, "node_id": "MDU6TGFiZWw0MjMxOTg1NDc=", "url": "https://api.github.com/repos/jd/tenacity/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/jd/tenacity/milestones/1", "html_url": "https://github.com/jd/tenacity/milestone/1", "labels_url": "https://api.github.com/repos/jd/tenacity/milestones/1/labels", "id": 1945589, "node_id": "MDk6TWlsZXN0b25lMTk0NTU4OQ==", "number": 1, "title": "2.0.0", "description": null, "creator": {"login": "jd", "id": 2644, "node_id": "MDQ6VXNlcjI2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jd", "html_url": "https://github.com/jd", "followers_url": "https://api.github.com/users/jd/followers", "following_url": "https://api.github.com/users/jd/following{/other_user}", "gists_url": "https://api.github.com/users/jd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jd/subscriptions", "organizations_url": "https://api.github.com/users/jd/orgs", "repos_url": "https://api.github.com/users/jd/repos", "events_url": "https://api.github.com/users/jd/events{/privacy}", "received_events_url": "https://api.github.com/users/jd/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2016-08-16T18:08:52Z", "updated_at": "2016-09-13T12:55:30Z", "due_on": null, "closed_at": "2016-09-13T12:55:30Z"}, "comments": 1, "created_at": "2016-08-16T18:08:47Z", "updated_at": "2016-08-17T08:35:31Z", "closed_at": "2016-08-17T08:35:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This is very useful to provide a default exception that can be raised voluntarily by any code to force a retry.\n", "performed_via_github_app": null, "score": 1.0}]}