{"total_count": 127, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/adrienverge/yamllint/issues/295", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/295/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/295/events", "html_url": "https://github.com/adrienverge/yamllint/issues/295", "id": 676693071, "node_id": "MDU6SXNzdWU2NzY2OTMwNzE=", "number": 295, "title": "Yamllint cannot work with yaml file language japanese on Window OS", "user": {"login": "tinhhandsome", "id": 43327850, "node_id": "MDQ6VXNlcjQzMzI3ODUw", "avatar_url": "https://avatars2.githubusercontent.com/u/43327850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinhhandsome", "html_url": "https://github.com/tinhhandsome", "followers_url": "https://api.github.com/users/tinhhandsome/followers", "following_url": "https://api.github.com/users/tinhhandsome/following{/other_user}", "gists_url": "https://api.github.com/users/tinhhandsome/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinhhandsome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinhhandsome/subscriptions", "organizations_url": "https://api.github.com/users/tinhhandsome/orgs", "repos_url": "https://api.github.com/users/tinhhandsome/repos", "events_url": "https://api.github.com/users/tinhhandsome/events{/privacy}", "received_events_url": "https://api.github.com/users/tinhhandsome/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T08:40:57Z", "updated_at": "2020-08-17T04:18:24Z", "closed_at": "2020-08-17T04:18:24Z", "author_association": "NONE", "active_lock_reason": null, "body": ".\\test\\jsonforms_data.yml\r\n'charmap' codec can't decode byte 0x81 in position 83: character \r\nmaps to <undefined>\r\nYou can fix it according to this link:\r\nhttps://github.com/tinhhandsome/yamllint/commit/6d1e49dac3ae345ec4b029bd72fea9cf22421cfe", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/294", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/294/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/294/events", "html_url": "https://github.com/adrienverge/yamllint/issues/294", "id": 674561481, "node_id": "MDU6SXNzdWU2NzQ1NjE0ODE=", "number": 294, "title": "Global lint rules", "user": {"login": "jwerre", "id": 747587, "node_id": "MDQ6VXNlcjc0NzU4Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/747587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwerre", "html_url": "https://github.com/jwerre", "followers_url": "https://api.github.com/users/jwerre/followers", "following_url": "https://api.github.com/users/jwerre/following{/other_user}", "gists_url": "https://api.github.com/users/jwerre/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwerre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwerre/subscriptions", "organizations_url": "https://api.github.com/users/jwerre/orgs", "repos_url": "https://api.github.com/users/jwerre/repos", "events_url": "https://api.github.com/users/jwerre/events{/privacy}", "received_events_url": "https://api.github.com/users/jwerre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-06T19:51:00Z", "updated_at": "2020-08-07T08:52:40Z", "closed_at": "2020-08-06T19:52:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like all my project to have the same yamllint rule without explicitly setting them up for each individual project. I didn't see anything on how to do this. Is this possible? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/293", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/293/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/293/events", "html_url": "https://github.com/adrienverge/yamllint/issues/293", "id": 669549562, "node_id": "MDU6SXNzdWU2Njk1NDk1NjI=", "number": 293, "title": "max line-length from custom conf file not being applied", "user": {"login": "MMollyy", "id": 30715392, "node_id": "MDQ6VXNlcjMwNzE1Mzky", "avatar_url": "https://avatars3.githubusercontent.com/u/30715392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MMollyy", "html_url": "https://github.com/MMollyy", "followers_url": "https://api.github.com/users/MMollyy/followers", "following_url": "https://api.github.com/users/MMollyy/following{/other_user}", "gists_url": "https://api.github.com/users/MMollyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/MMollyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MMollyy/subscriptions", "organizations_url": "https://api.github.com/users/MMollyy/orgs", "repos_url": "https://api.github.com/users/MMollyy/repos", "events_url": "https://api.github.com/users/MMollyy/events{/privacy}", "received_events_url": "https://api.github.com/users/MMollyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T08:16:35Z", "updated_at": "2020-08-01T13:40:15Z", "closed_at": "2020-08-01T13:39:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI've got a custom conf file from which I am extending onto the default:\r\n```\r\n---\r\n\r\n# This is my first, very own configuration file for yamllint!\r\n# It extends the default conf by adjusting some options.\r\n\r\nextends: default\r\nrules:\r\n  braces:\r\n    min-spaces-inside: 0\r\n    max-spaces-inside: 1\r\n    min-spaces-inside-empty: -1\r\n    max-spaces-inside-empty: -1\r\n  brackets:\r\n    min-spaces-inside: 0\r\n    max-spaces-inside: 0\r\n    min-spaces-inside-empty: -1\r\n    max-spaces-inside-empty: -1\r\n  colons:\r\n  min-spaces-after: 0\r\n    max-spaces-before: 0\r\n    max-spaces-after: 1\r\n  commas:\r\n    max-spaces-before: 0\r\n    min-spaces-after: 0\r\n    max-spaces-after: 0\r\n  comments:\r\n    require-starting-space: true\r\n    min-spaces-from-content: 2\r\n  document-start:\r\n    present: true\r\n  empty-lines:\r\n    max: 2\r\n    max-start: 0\r\n    max-end: 0\r\n  empty-values: enable\r\n    forbid-in-block-mappings: false\r\n    forbid-in-flow-mappings: false\r\n  hyphens:\r\n    max-spaces-after: 1\r\n  indentation:\r\n    spaces: consistent\r\n    indent-sequences: true\r\n    check-multi-line-strings: false\r\n  key-duplicates: enable\r\n  key-ordering: disable\r\n  line-length:\r\n    max: 150\r\n    allow-non-breakable-words: true\r\n    allow-non-breakable-inline-mappings: true\r\n  new-lines:\r\n    type: unix\r\n  octal-values: enable\r\n    forbid-implicit-octal: false\r\n    forbid-explicit-octal: false\r\n  key-duplicates: enable\r\n```\r\n\r\nAll of the rules are being accepted and being applied onto the yaml-files that I am verifying onto. Except, the line-length isn't being applied.\r\nIt keeps popping up with errors that line-length cannot be longer than 80 characters, example:\r\n```\r\n477:81    error    line too long (145 > 80 characters)  (line-length)\r\n  482:81    error    line too long (90 > 80 characters)  (line-length)\r\n```\r\n\r\npython --version\r\nPython 3.7.3\r\n\r\nI've got no clue what else to look at what could be the issue that this single rule would not be applied. Anyone got an idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/290", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/290/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/290/events", "html_url": "https://github.com/adrienverge/yamllint/issues/290", "id": 661357242, "node_id": "MDU6SXNzdWU2NjEzNTcyNDI=", "number": 290, "title": "Add default options to documentation?", "user": {"login": "bewuethr", "id": 8521043, "node_id": "MDQ6VXNlcjg1MjEwNDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8521043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bewuethr", "html_url": "https://github.com/bewuethr", "followers_url": "https://api.github.com/users/bewuethr/followers", "following_url": "https://api.github.com/users/bewuethr/following{/other_user}", "gists_url": "https://api.github.com/users/bewuethr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bewuethr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bewuethr/subscriptions", "organizations_url": "https://api.github.com/users/bewuethr/orgs", "repos_url": "https://api.github.com/users/bewuethr/repos", "events_url": "https://api.github.com/users/bewuethr/events{/privacy}", "received_events_url": "https://api.github.com/users/bewuethr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T04:33:12Z", "updated_at": "2020-07-22T09:54:06Z", "closed_at": "2020-07-22T09:54:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the docs, the [default configuration](https://yamllint.readthedocs.io/en/stable/configuration.html#default-configuration) shows which rules are enabled, and under [Rules](https://yamllint.readthedocs.io/en/stable/rules.html), I can look up the rules and their options.\r\n\r\nHowever, unless I've just not seen it, there doesn't seem to be documentation for the default options. For example, for [indentation](https://yamllint.readthedocs.io/en/stable/rules.html#module-yamllint.rules.indentation), the default can be seen in the source:\r\n\r\nhttps://github.com/adrienverge/yamllint/blob/8b758d4e7e1bb4cf32bb5c181cefa48247e2d1c3/yamllint/rules/indentation.py#L204-L206\r\n\r\nWouldn't it be useful to make these part of the documentation? Would a PR for this be welcome? I'm thinking something like\r\n\r\n---\r\n\r\n## indentation\r\n\r\nUse this rule to control the indentation.\r\n\r\n### Options\r\n\r\n- `spaces` defines the indentation width, in spaces. Set either to an integer (e.g. `2` or `4`, representing the number of spaces in an indentation level) or to `consistent` to allow any number, as long as it remains the same within the file.\r\n- `indent-sequences` defines whether block sequences should be indented or not [...]\r\n- `check-multi-line-strings` defines whether to lint indentation [...]\r\n\r\n### Default values\r\n\r\n```yaml\r\nindentation:\r\n  spaces: consistent\r\n  indent-sequences: true\r\n  check-multi-line-strings: false\r\n```\r\n\r\n### Examples\r\n\r\n1. `With indentation: {spaces: 1}`\r\n\r\n   the following code snippet [...]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/286", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/286/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/286/events", "html_url": "https://github.com/adrienverge/yamllint/issues/286", "id": 657262019, "node_id": "MDU6SXNzdWU2NTcyNjIwMTk=", "number": 286, "title": "locale.Error: unsupported locale setting", "user": {"login": "madrover", "id": 4009248, "node_id": "MDQ6VXNlcjQwMDkyNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4009248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madrover", "html_url": "https://github.com/madrover", "followers_url": "https://api.github.com/users/madrover/followers", "following_url": "https://api.github.com/users/madrover/following{/other_user}", "gists_url": "https://api.github.com/users/madrover/gists{/gist_id}", "starred_url": "https://api.github.com/users/madrover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madrover/subscriptions", "organizations_url": "https://api.github.com/users/madrover/orgs", "repos_url": "https://api.github.com/users/madrover/repos", "events_url": "https://api.github.com/users/madrover/events{/privacy}", "received_events_url": "https://api.github.com/users/madrover/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T11:01:59Z", "updated_at": "2020-07-15T11:08:02Z", "closed_at": "2020-07-15T11:08:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nThere is some locale related issue with the just released 1.24.0 version see:\r\n\r\n```\r\n$ uname -a\r\nDarwin miquel-mac.binihome.local 19.5.0 Darwin Kernel Version 19.5.0: Tue May 26 20:41:44 PDT 2020; root:xnu-6153.121.2~2/RELEASE_X86_64 x86_64\r\n$ python3 --version\r\nPython 3.8.3\r\n$ export | grep LC_\r\nLC_ALL=en_US.UTF-8\r\nLC_CTYPE=en_US.UTF-8\r\n$ pip3 install yamllint==1.23.0\r\nRequirement already satisfied: yamllint==1.23.0 in /usr/local/lib/python3.8/site-packages (1.23.0)\r\nRequirement already satisfied: pyyaml in /usr/local/lib/python3.8/site-packages (from yamllint==1.23.0) (5.3.1)\r\nRequirement already satisfied: pathspec>=0.5.3 in /usr/local/lib/python3.8/site-packages (from yamllint==1.23.0) (0.8.0)\r\n$ yamllint .\r\n$ pip3 install yamllint==1.24.0\r\nCollecting yamllint==1.24.0\r\n  Using cached yamllint-1.24.0-py2.py3-none-any.whl (59 kB)\r\nRequirement already satisfied: pathspec>=0.5.3 in /usr/local/lib/python3.8/site-packages (from yamllint==1.24.0) (0.8.0)\r\nRequirement already satisfied: pyyaml in /usr/local/lib/python3.8/site-packages (from yamllint==1.24.0) (5.3.1)\r\nInstalling collected packages: yamllint\r\n  Attempting uninstall: yamllint\r\n    Found existing installation: yamllint 1.23.0\r\n    Uninstalling yamllint-1.23.0:\r\n      Successfully uninstalled yamllint-1.23.0\r\nSuccessfully installed yamllint-1.24.0\r\n$ yamllint .\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/yamllint\", line 8, in <module>\r\n    sys.exit(run())\r\n  File \"/usr/local/lib/python3.8/site-packages/yamllint/cli.py\", line 179, in run\r\n    locale.setlocale(locale.LC_ALL, conf.locale)\r\n  File \"/usr/local/Cellar/python@3.8/3.8.3_2/Frameworks/Python.framework/Versions/3.8/lib/python3.8/locale.py\", line 608, in setlocale\r\n    return _setlocale(category, locale)\r\nlocale.Error: unsupported locale setting\r\n```\r\n\r\nI'll revert to 1.23.0 for now...\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/284", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/284/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/284/events", "html_url": "https://github.com/adrienverge/yamllint/issues/284", "id": 655933196, "node_id": "MDU6SXNzdWU2NTU5MzMxOTY=", "number": 284, "title": "BUG: Don't assume that every `#` is a comment", "user": {"login": "curusarn", "id": 10132717, "node_id": "MDQ6VXNlcjEwMTMyNzE3", "avatar_url": "https://avatars2.githubusercontent.com/u/10132717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/curusarn", "html_url": "https://github.com/curusarn", "followers_url": "https://api.github.com/users/curusarn/followers", "following_url": "https://api.github.com/users/curusarn/following{/other_user}", "gists_url": "https://api.github.com/users/curusarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/curusarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/curusarn/subscriptions", "organizations_url": "https://api.github.com/users/curusarn/orgs", "repos_url": "https://api.github.com/users/curusarn/repos", "events_url": "https://api.github.com/users/curusarn/events{/privacy}", "received_events_url": "https://api.github.com/users/curusarn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T15:16:19Z", "updated_at": "2020-07-13T19:03:01Z", "closed_at": "2020-07-13T19:03:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Yaml spec](https://yaml.org/spec/1.2/spec.html#id2780069):\r\n> Comments must be separated from other tokens by white space characters.\r\n\r\nPound signs (`#`) that are is not separated by white space shouldn't be interpreted as a comments. Here I have a file that uses `#` inside of a sequence:\r\n```\r\n\u276f cat comment.yaml            \r\n---\r\n\r\nabc: [#this is not a comment]\r\ndef: value  # this is a comment\r\n```\r\nHere is the `yamllint` output for the file above:\r\n```\r\n\u276f cat comment.yaml | yamllint -\r\nstdin\r\n  5:1       error    syntax error: expected ',' or ']', but got '<stream end>' (syntax)\r\n```\r\nThe output above was produced using this config:\r\n```\r\n\u276f cat .yamllint               \r\n---\r\n\r\nextends: default\r\n\r\nrules:\r\n    comments:\r\n        require-starting-space: false\r\n        min-spaces-from-content: 0\r\n```\r\n`yamllint` version:\r\n```\r\n\u276f yamllint --version\r\nyamllint 1.23.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/279", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/279/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/279/events", "html_url": "https://github.com/adrienverge/yamllint/issues/279", "id": 647500060, "node_id": "MDU6SXNzdWU2NDc1MDAwNjA=", "number": 279, "title": "Bug: a directory with name *.yml makes yamllint to lint all containing files despite their type", "user": {"login": "liopic", "id": 594458, "node_id": "MDQ6VXNlcjU5NDQ1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/594458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liopic", "html_url": "https://github.com/liopic", "followers_url": "https://api.github.com/users/liopic/followers", "following_url": "https://api.github.com/users/liopic/following{/other_user}", "gists_url": "https://api.github.com/users/liopic/gists{/gist_id}", "starred_url": "https://api.github.com/users/liopic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liopic/subscriptions", "organizations_url": "https://api.github.com/users/liopic/orgs", "repos_url": "https://api.github.com/users/liopic/repos", "events_url": "https://api.github.com/users/liopic/events{/privacy}", "received_events_url": "https://api.github.com/users/liopic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T16:11:11Z", "updated_at": "2020-07-10T07:27:35Z", "closed_at": "2020-07-10T07:27:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Give the following tree structure:\r\n/test.yml\r\n/generated/products.yml/products.sql\r\n\r\nWhen executing yamllint, it scans the file products.sql, which is not yaml, raising an error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/273", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/273/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/273/events", "html_url": "https://github.com/adrienverge/yamllint/issues/273", "id": 624171018, "node_id": "MDU6SXNzdWU2MjQxNzEwMTg=", "number": 273, "title": "No vscode extensions supporting yamllint", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-25T09:26:30Z", "updated_at": "2020-05-26T11:23:54Z", "closed_at": "2020-05-26T07:00:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sadly there is no vscode extension available for using yamllint, which is quite sad as vscode become most popular non-terminal editor.\r\n\r\nWe should either do one of these:\r\n\r\n- add yamllint support for another linting extension\r\n- write an extension (easier that it appears)\r\n- document a way to enable support for it", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/270", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/270/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/270/events", "html_url": "https://github.com/adrienverge/yamllint/issues/270", "id": 620560498, "node_id": "MDU6SXNzdWU2MjA1NjA0OTg=", "number": 270, "title": "Unacceptable character #x1f44b: special characters are not allowed in \"<unicode string>\"", "user": {"login": "butaca", "id": 5452926, "node_id": "MDQ6VXNlcjU0NTI5MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5452926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/butaca", "html_url": "https://github.com/butaca", "followers_url": "https://api.github.com/users/butaca/followers", "following_url": "https://api.github.com/users/butaca/following{/other_user}", "gists_url": "https://api.github.com/users/butaca/gists{/gist_id}", "starred_url": "https://api.github.com/users/butaca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/butaca/subscriptions", "organizations_url": "https://api.github.com/users/butaca/orgs", "repos_url": "https://api.github.com/users/butaca/repos", "events_url": "https://api.github.com/users/butaca/events{/privacy}", "received_events_url": "https://api.github.com/users/butaca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-18T23:11:18Z", "updated_at": "2020-05-27T02:06:22Z", "closed_at": "2020-05-27T02:06:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "yamllint 1.23.0\r\nPython 3.5.3\r\nRaspbian GNU/Linux 9 (stretch)\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/yamllint\", line 10, in <module>\r\n    sys.exit(run())\r\n  File \"/usr/local/lib/python3.5/dist-packages/yamllint/cli.py\", line 186, in run\r\n    no_warn=args.no_warnings)\r\n  File \"/usr/local/lib/python3.5/dist-packages/yamllint/cli.py\", line 92, in show_problems\r\n    for problem in problems:\r\n  File \"/usr/local/lib/python3.5/dist-packages/yamllint/linter.py\", line 198, in _run\r\n    syntax_error = get_syntax_error(buffer)\r\n  File \"/usr/local/lib/python3.5/dist-packages/yamllint/linter.py\", line 179, in get_syntax_error\r\n    list(yaml.parse(buffer, Loader=yaml.BaseLoader))\r\n  File \"/usr/local/lib/python3.5/dist-packages/yaml/__init__.py\", line 35, in parse\r\n    loader = Loader(stream)\r\n  File \"/usr/local/lib/python3.5/dist-packages/yaml/loader.py\", line 14, in __init__\r\n    Reader.__init__(self, stream)\r\n  File \"/usr/local/lib/python3.5/dist-packages/yaml/reader.py\", line 74, in __init__\r\n    self.check_printable(stream)\r\n  File \"/usr/local/lib/python3.5/dist-packages/yaml/reader.py\", line 144, in check_printable\r\n    'unicode', \"special characters are not allowed\")\r\nyaml.reader.ReaderError: unacceptable character #x1f44b: special characters are not allowed\r\n  in \"<unicode string>\", position 7\r\n```\r\n\r\nExample file (utf-8)\r\n\r\n```\r\n---\r\nm: \ud83d\udc4b\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/268", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/268/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/268/events", "html_url": "https://github.com/adrienverge/yamllint/issues/268", "id": 613808686, "node_id": "MDU6SXNzdWU2MTM4MDg2ODY=", "number": 268, "title": "Indentation of lists", "user": {"login": "mboehm21", "id": 45824024, "node_id": "MDQ6VXNlcjQ1ODI0MDI0", "avatar_url": "https://avatars2.githubusercontent.com/u/45824024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mboehm21", "html_url": "https://github.com/mboehm21", "followers_url": "https://api.github.com/users/mboehm21/followers", "following_url": "https://api.github.com/users/mboehm21/following{/other_user}", "gists_url": "https://api.github.com/users/mboehm21/gists{/gist_id}", "starred_url": "https://api.github.com/users/mboehm21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mboehm21/subscriptions", "organizations_url": "https://api.github.com/users/mboehm21/orgs", "repos_url": "https://api.github.com/users/mboehm21/repos", "events_url": "https://api.github.com/users/mboehm21/events{/privacy}", "received_events_url": "https://api.github.com/users/mboehm21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-07T06:34:20Z", "updated_at": "2020-05-07T10:57:40Z", "closed_at": "2020-05-07T10:57:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nin an Ansible-training they told me to use the following indentation for lists:\r\n\r\n```\r\njust_a_dict:\r\n  whatever: false\r\njust_a_list:\r\n - element_1\r\n - element_2\r\n```\r\n\r\nI used this syntax in many roles and would like to keep it that way. How can I tell yamllint to accept ` - ` without switching the identation-check off entirely?\r\n\r\nThanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/263", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/263/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/263/events", "html_url": "https://github.com/adrienverge/yamllint/issues/263", "id": 611186464, "node_id": "MDU6SXNzdWU2MTExODY0NjQ=", "number": 263, "title": "add contribution instructions", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T13:12:32Z", "updated_at": "2020-05-03T14:51:23Z", "closed_at": "2020-05-03T14:51:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apparently there is no documentation about how to contribute to the project, chat or mailing list and maybe more important about how to perform testing.\r\n\r\nFor a Python project I was surprised not to see a tox file, which could have addressed the lack of testing information quite well.\r\n\r\nUsers can guess some stuff by looking at the travis config but that gives very poor reproducibility, for example running `flake8` locally gives very different results than on travis, same applies to running tests (huge number of `W504 line break after binary operator` errors)\r\n\r\nI think that using tox would be highly desirable for easing the contributions, and also very easy to add.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/260", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/260/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/260/events", "html_url": "https://github.com/adrienverge/yamllint/issues/260", "id": 610269248, "node_id": "MDU6SXNzdWU2MTAyNjkyNDg=", "number": 260, "title": "[question] Where is yamllint installed?", "user": {"login": "rockerdaddy", "id": 3934331, "node_id": "MDQ6VXNlcjM5MzQzMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3934331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rockerdaddy", "html_url": "https://github.com/rockerdaddy", "followers_url": "https://api.github.com/users/rockerdaddy/followers", "following_url": "https://api.github.com/users/rockerdaddy/following{/other_user}", "gists_url": "https://api.github.com/users/rockerdaddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/rockerdaddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rockerdaddy/subscriptions", "organizations_url": "https://api.github.com/users/rockerdaddy/orgs", "repos_url": "https://api.github.com/users/rockerdaddy/repos", "events_url": "https://api.github.com/users/rockerdaddy/events{/privacy}", "received_events_url": "https://api.github.com/users/rockerdaddy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T17:47:09Z", "updated_at": "2020-04-30T20:25:37Z", "closed_at": "2020-04-30T18:21:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following the documentation, I installed via pip, and then attempted to run it as suggested under 'basic usage':\r\n\r\n> $ yamllint\r\n> -bash: yamllint: command not found\r\n> \r\n\r\nObviously this command is not in my path. But searching my system, I do not find the command anywhere. site-packages has a yamllint subdir, but that also does not have this command.\r\n\r\n Where is the 'yamllint' command located?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/256", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/256/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/256/events", "html_url": "https://github.com/adrienverge/yamllint/issues/256", "id": 606959328, "node_id": "MDU6SXNzdWU2MDY5NTkzMjg=", "number": 256, "title": "non-yaml files claimed to be correct", "user": {"login": "pputnik", "id": 10958522, "node_id": "MDQ6VXNlcjEwOTU4NTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/10958522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pputnik", "html_url": "https://github.com/pputnik", "followers_url": "https://api.github.com/users/pputnik/followers", "following_url": "https://api.github.com/users/pputnik/following{/other_user}", "gists_url": "https://api.github.com/users/pputnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/pputnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pputnik/subscriptions", "organizations_url": "https://api.github.com/users/pputnik/orgs", "repos_url": "https://api.github.com/users/pputnik/repos", "events_url": "https://api.github.com/users/pputnik/events{/privacy}", "received_events_url": "https://api.github.com/users/pputnik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-26T08:55:54Z", "updated_at": "2020-04-27T06:49:42Z", "closed_at": "2020-04-27T06:49:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I test just random text file the only message I get is warning and exit code=0\r\n```\r\n$ yamllint tmp.txt\r\ntmp.txt\r\n  1:1       warning  missing document start \"---\"  (document-start)\r\n$ echo $?\r\n0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/243", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/243/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/243/events", "html_url": "https://github.com/adrienverge/yamllint/issues/243", "id": 590556565, "node_id": "MDU6SXNzdWU1OTA1NTY1NjU=", "number": 243, "title": "Json-Output", "user": {"login": "strowi", "id": 589662, "node_id": "MDQ6VXNlcjU4OTY2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/589662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strowi", "html_url": "https://github.com/strowi", "followers_url": "https://api.github.com/users/strowi/followers", "following_url": "https://api.github.com/users/strowi/following{/other_user}", "gists_url": "https://api.github.com/users/strowi/gists{/gist_id}", "starred_url": "https://api.github.com/users/strowi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strowi/subscriptions", "organizations_url": "https://api.github.com/users/strowi/orgs", "repos_url": "https://api.github.com/users/strowi/repos", "events_url": "https://api.github.com/users/strowi/events{/privacy}", "received_events_url": "https://api.github.com/users/strowi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T20:04:06Z", "updated_at": "2020-03-31T08:13:51Z", "closed_at": "2020-03-31T08:13:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nsince we are using gitlab and its codeclimate integration, we really would like json-formatted output.\r\nWould you be willing to accept an MR adding json-output adhering to the codeclimate spec ?\r\n\r\n-> https://github.com/codeclimate/platform/blob/master/spec/analyzers/SPEC.md#output\r\n\r\n```json\r\n{\r\n  \"type\": \"issue\",\r\n  \"check_name\": \"yamllint\",\r\n  \"description\": \"wrong indentation: expected 2 but found 4 (indentation)\",\r\n  \"categories\": \"Complexity\",\r\n  \"severity\": \"critical\",\r\n  \"location\": {\r\n    \"path\": \"/home/x/y/z/test.yml\",\r\n    \"positions\": {\r\n      \"begin\": {\r\n        \"lines\": \"12\",\r\n        \"column\": \"5\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nIdeally this would include the severity:\r\n```\r\nseverity -- Optional. A Severity string (info, minor, major, critical, or blocker) describing the potential impact of the issue found.\r\n```\r\nBut this would be a breaking change i guess? Since it's optional it could be left out..\r\n\r\nregards,\r\nstrowi", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/242", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/242/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/242/events", "html_url": "https://github.com/adrienverge/yamllint/issues/242", "id": 590503562, "node_id": "MDU6SXNzdWU1OTA1MDM1NjI=", "number": 242, "title": "`quoted-strings` only-when-needed incorrectly detecting strings with redundant quotes", "user": {"login": "RealOrangeOne", "id": 6527489, "node_id": "MDQ6VXNlcjY1Mjc0ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6527489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RealOrangeOne", "html_url": "https://github.com/RealOrangeOne", "followers_url": "https://api.github.com/users/RealOrangeOne/followers", "following_url": "https://api.github.com/users/RealOrangeOne/following{/other_user}", "gists_url": "https://api.github.com/users/RealOrangeOne/gists{/gist_id}", "starred_url": "https://api.github.com/users/RealOrangeOne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RealOrangeOne/subscriptions", "organizations_url": "https://api.github.com/users/RealOrangeOne/orgs", "repos_url": "https://api.github.com/users/RealOrangeOne/repos", "events_url": "https://api.github.com/users/RealOrangeOne/events{/privacy}", "received_events_url": "https://api.github.com/users/RealOrangeOne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T18:34:59Z", "updated_at": "2020-04-15T05:49:00Z", "closed_at": "2020-04-15T05:49:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since upgrading to 1.21.0, I enabled the following config:\r\n\r\n```yaml\r\n  quoted-strings:\r\n    quote-type: double\r\n    required: only-when-needed\r\n```\r\n\r\nUnfortunately, seems there's some strings which it believes don't need quoting, when in fact they do:\r\n\r\n- `aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman`\r\n- `%H:%M:%S`\r\n- `'Mac' in ansible_facts.product_name`\r\n\r\nIt seems to be something around when a string either contains or starts with a special character, but isn't entirely a special character?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/237", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/237/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/237/events", "html_url": "https://github.com/adrienverge/yamllint/issues/237", "id": 584225629, "node_id": "MDU6SXNzdWU1ODQyMjU2Mjk=", "number": 237, "title": "No changes are reflected in yaml file even after running yamllint", "user": {"login": "BharthishAthreya", "id": 15611058, "node_id": "MDQ6VXNlcjE1NjExMDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/15611058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BharthishAthreya", "html_url": "https://github.com/BharthishAthreya", "followers_url": "https://api.github.com/users/BharthishAthreya/followers", "following_url": "https://api.github.com/users/BharthishAthreya/following{/other_user}", "gists_url": "https://api.github.com/users/BharthishAthreya/gists{/gist_id}", "starred_url": "https://api.github.com/users/BharthishAthreya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BharthishAthreya/subscriptions", "organizations_url": "https://api.github.com/users/BharthishAthreya/orgs", "repos_url": "https://api.github.com/users/BharthishAthreya/repos", "events_url": "https://api.github.com/users/BharthishAthreya/events{/privacy}", "received_events_url": "https://api.github.com/users/BharthishAthreya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-19T07:50:43Z", "updated_at": "2020-03-21T07:57:08Z", "closed_at": "2020-03-19T10:30:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nIm trying to run yamllint for yaml files to make it look more readable and tidy. \r\nI did pip install yamllint and then try to run something like \r\n**yamllint filename.yaml**\r\nBut that doesn't seem to work. No changes are done to yaml even after running lint. \r\nPlease let me know where am i going wrong or is there any other step which i have missed.\r\n\r\nAttaching screenshots for more info\r\n![running_lint](https://user-images.githubusercontent.com/15611058/77043864-63708580-69e4-11ea-98f6-2ac45cb93788.PNG)\r\n![before_lint](https://user-images.githubusercontent.com/15611058/77043867-653a4900-69e4-11ea-8a36-64845dde2b68.PNG)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/233", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/233/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/233/events", "html_url": "https://github.com/adrienverge/yamllint/issues/233", "id": 577508928, "node_id": "MDU6SXNzdWU1Nzc1MDg5Mjg=", "number": 233, "title": "Bug: quoted-strings rule not working for strings with values matching boolean or number scalars", "user": {"login": "ruipinge", "id": 4807579, "node_id": "MDQ6VXNlcjQ4MDc1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4807579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruipinge", "html_url": "https://github.com/ruipinge", "followers_url": "https://api.github.com/users/ruipinge/followers", "following_url": "https://api.github.com/users/ruipinge/following{/other_user}", "gists_url": "https://api.github.com/users/ruipinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruipinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruipinge/subscriptions", "organizations_url": "https://api.github.com/users/ruipinge/orgs", "repos_url": "https://api.github.com/users/ruipinge/repos", "events_url": "https://api.github.com/users/ruipinge/events{/privacy}", "received_events_url": "https://api.github.com/users/ruipinge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-08T14:26:57Z", "updated_at": "2020-03-24T07:02:32Z", "closed_at": "2020-03-24T07:02:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nGiven the following `.yamllint` config:\r\n\r\n```\r\nextends: default\r\nrules:\r\n    quoted-strings:\r\n        quote-type: single\r\n```\r\n\r\nand the yaml file:\r\n```\r\n---\r\nstring0: \"true\"\r\nstring1: 'false'\r\nboolean0: true\r\n```\r\n\r\nthe rule `quoted-strings` should fail on line 2. It doesn't because the string value matches a boolean scalar (although it's actually a string). It also happens for numbers, nulls, and any scalar values.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/232", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/232/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/232/events", "html_url": "https://github.com/adrienverge/yamllint/issues/232", "id": 575809847, "node_id": "MDU6SXNzdWU1NzU4MDk4NDc=", "number": 232, "title": "'truthy' rule throws false positives on keys named `on`.", "user": {"login": "Ferroin", "id": 905151, "node_id": "MDQ6VXNlcjkwNTE1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/905151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ferroin", "html_url": "https://github.com/Ferroin", "followers_url": "https://api.github.com/users/Ferroin/followers", "following_url": "https://api.github.com/users/Ferroin/following{/other_user}", "gists_url": "https://api.github.com/users/Ferroin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ferroin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ferroin/subscriptions", "organizations_url": "https://api.github.com/users/Ferroin/orgs", "repos_url": "https://api.github.com/users/Ferroin/repos", "events_url": "https://api.github.com/users/Ferroin/events{/privacy}", "received_events_url": "https://api.github.com/users/Ferroin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T21:53:09Z", "updated_at": "2020-03-05T07:03:05Z", "closed_at": "2020-03-05T07:03:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I suspect it will do the same for keys with other names that it would normally warn for if they were values, but `on` is the issue here as it's actually used as a key name in a number of common tools that use keys with the name `on` (notably, GitHub Actions use this key to control when a workflow runs).\r\n\r\nIdeally, yamllint should only be looking at the values and not the names of keys for this check.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/231", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/231/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/231/events", "html_url": "https://github.com/adrienverge/yamllint/issues/231", "id": 575474628, "node_id": "MDU6SXNzdWU1NzU0NzQ2Mjg=", "number": 231, "title": "Write file formatted like yamlfmt", "user": {"login": "jomach", "id": 4804546, "node_id": "MDQ6VXNlcjQ4MDQ1NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4804546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jomach", "html_url": "https://github.com/jomach", "followers_url": "https://api.github.com/users/jomach/followers", "following_url": "https://api.github.com/users/jomach/following{/other_user}", "gists_url": "https://api.github.com/users/jomach/gists{/gist_id}", "starred_url": "https://api.github.com/users/jomach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jomach/subscriptions", "organizations_url": "https://api.github.com/users/jomach/orgs", "repos_url": "https://api.github.com/users/jomach/repos", "events_url": "https://api.github.com/users/jomach/events{/privacy}", "received_events_url": "https://api.github.com/users/jomach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-04T15:00:27Z", "updated_at": "2020-03-04T15:29:53Z", "closed_at": "2020-03-04T15:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a tool yamlfmt which seems to be pretty old (https://pypi.org/project/yamlfmt/) \r\nThe yamllint discovers more rules then the yamlfmt but it does not allow to fix the file. \r\n\r\nWe should add a flag --w for overwriting the file with a proper formatting. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/230", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/230/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/230/events", "html_url": "https://github.com/adrienverge/yamllint/issues/230", "id": 575362283, "node_id": "MDU6SXNzdWU1NzUzNjIyODM=", "number": 230, "title": "Write file formatted", "user": {"login": "jomach", "id": 4804546, "node_id": "MDQ6VXNlcjQ4MDQ1NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4804546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jomach", "html_url": "https://github.com/jomach", "followers_url": "https://api.github.com/users/jomach/followers", "following_url": "https://api.github.com/users/jomach/following{/other_user}", "gists_url": "https://api.github.com/users/jomach/gists{/gist_id}", "starred_url": "https://api.github.com/users/jomach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jomach/subscriptions", "organizations_url": "https://api.github.com/users/jomach/orgs", "repos_url": "https://api.github.com/users/jomach/repos", "events_url": "https://api.github.com/users/jomach/events{/privacy}", "received_events_url": "https://api.github.com/users/jomach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T12:28:37Z", "updated_at": "2020-03-04T14:57:03Z", "closed_at": "2020-03-04T14:57:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "It should be possible to lint and to write the file proper formatted", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/228", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/228/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/228/events", "html_url": "https://github.com/adrienverge/yamllint/issues/228", "id": 564090544, "node_id": "MDU6SXNzdWU1NjQwOTA1NDQ=", "number": 228, "title": "Rule new-lines incorrect on Python 3", "user": {"login": "bz2", "id": 1188565, "node_id": "MDQ6VXNlcjExODg1NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1188565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bz2", "html_url": "https://github.com/bz2", "followers_url": "https://api.github.com/users/bz2/followers", "following_url": "https://api.github.com/users/bz2/following{/other_user}", "gists_url": "https://api.github.com/users/bz2/gists{/gist_id}", "starred_url": "https://api.github.com/users/bz2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bz2/subscriptions", "organizations_url": "https://api.github.com/users/bz2/orgs", "repos_url": "https://api.github.com/users/bz2/repos", "events_url": "https://api.github.com/users/bz2/events{/privacy}", "received_events_url": "https://api.github.com/users/bz2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-12T15:49:22Z", "updated_at": "2020-02-13T11:02:48Z", "closed_at": "2020-02-13T11:02:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the yamllint command is run using Python 3, the `new-lines` rule will always pass when set to 'unix' and always fail when set to 'dos'. This is because the builtin `open()` for Python 3 includes universal newline handling, so translates the line endings at file read time.\r\n\r\n### Steps to reproduce\r\n\r\n```sh\r\n$ echo ---^M > test.yaml\r\n$ echo \"---                 \r\nrules:\r\n new-lines:\r\n  type: dos\r\n\" > typedos.yaml\r\n$ echo \"---\r\nrules:\r\n new-lines:\r\n  type: unix\r\n\" > typeunix.yaml\r\n$ python2 -m yamllint -c typeunix.yaml test.yaml\r\ntest.yaml\r\n  1:4       error    wrong new line character: expected \\n  (new-lines)\r\n\r\n$ python2 -m yamllint -c typedos.yaml test.yaml\r\n$ python3 -m yamllint -c typeunix.yaml test.yaml\r\n$ python3 -m yamllint -c typedos.yaml test.yaml\r\ntest.yaml\r\n  1:4       error    wrong new line character: expected \\r\\n  (new-lines)\r\n\r\n```\r\n\r\nNote behaviour is as expected on Python 2 but incorrect on Python 3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/227", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/227/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/227/events", "html_url": "https://github.com/adrienverge/yamllint/issues/227", "id": 561278841, "node_id": "MDU6SXNzdWU1NjEyNzg4NDE=", "number": 227, "title": "Ignore doesn't work on 1.18", "user": {"login": "penguin02007", "id": 3166772, "node_id": "MDQ6VXNlcjMxNjY3NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3166772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/penguin02007", "html_url": "https://github.com/penguin02007", "followers_url": "https://api.github.com/users/penguin02007/followers", "following_url": "https://api.github.com/users/penguin02007/following{/other_user}", "gists_url": "https://api.github.com/users/penguin02007/gists{/gist_id}", "starred_url": "https://api.github.com/users/penguin02007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/penguin02007/subscriptions", "organizations_url": "https://api.github.com/users/penguin02007/orgs", "repos_url": "https://api.github.com/users/penguin02007/repos", "events_url": "https://api.github.com/users/penguin02007/events{/privacy}", "received_events_url": "https://api.github.com/users/penguin02007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T21:25:39Z", "updated_at": "2020-03-24T07:04:25Z", "closed_at": "2020-03-24T07:04:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a repo with a mix of yml and non yml files. When I tried to use yamllink in the githook to check all files, it seems to ignore yaml-files unless I put ignore in the config.\r\n\r\nIs this the expected behavior?\r\n\r\n```\r\n# .yamllint.yml\r\nyaml-files:\r\n  - '*.yaml'\r\n  - '*.yml'\r\n  - '.yamllint'\r\nignore: |\r\n  .githooks/*\r\n  inventory/*\r\n  *.j2\r\n```\r\n\r\n```\r\nyamllint -c .yamllint.yml roles/cumulus/files/cumulus-ztp.sh\r\nroles/cumulus/files/cumulus-ztp.sh\r\n  7:81      warning  line too long (91 > 80 characters)  (line-length)\r\n  28:25     error    syntax error: mapping values are not allowed here\r\n  28:81     warning  line too long (139 > 80 characters)  (line-length)\r\n  33:81     warning  line too long (124 > 80 characters)  (line-length)\r\n  42:81     warning  line too long (380 > 80 characters)  (line-length)\r\n  47:81     warning  line too long (98 > 80 characters)  (line-length)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/225", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/225/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/225/events", "html_url": "https://github.com/adrienverge/yamllint/issues/225", "id": 556354732, "node_id": "MDU6SXNzdWU1NTYzNTQ3MzI=", "number": 225, "title": "key-duplicates across files", "user": {"login": "patrickberkeley", "id": 8364, "node_id": "MDQ6VXNlcjgzNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrickberkeley", "html_url": "https://github.com/patrickberkeley", "followers_url": "https://api.github.com/users/patrickberkeley/followers", "following_url": "https://api.github.com/users/patrickberkeley/following{/other_user}", "gists_url": "https://api.github.com/users/patrickberkeley/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrickberkeley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrickberkeley/subscriptions", "organizations_url": "https://api.github.com/users/patrickberkeley/orgs", "repos_url": "https://api.github.com/users/patrickberkeley/repos", "events_url": "https://api.github.com/users/patrickberkeley/events{/privacy}", "received_events_url": "https://api.github.com/users/patrickberkeley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-28T17:19:57Z", "updated_at": "2020-01-29T15:35:05Z", "closed_at": "2020-01-29T15:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to check for duplicate keys across files? E.g.,\r\n\r\nRun: `yamllint **/*.yml`\r\n\r\nFile 1:\r\n\r\n```yml\r\nkey_1: 'val'\r\n```\r\nFile 2 has the same key:\r\n\r\n```yml\r\nkey_1: 'val'\r\n```\r\n\r\nThe linter would fail in this case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/223", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/223/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/223/events", "html_url": "https://github.com/adrienverge/yamllint/issues/223", "id": 548417664, "node_id": "MDU6SXNzdWU1NDg0MTc2NjQ=", "number": 223, "title": "Write errors to standard error instead of standard output", "user": {"login": "kai687", "id": 17420240, "node_id": "MDQ6VXNlcjE3NDIwMjQw", "avatar_url": "https://avatars3.githubusercontent.com/u/17420240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kai687", "html_url": "https://github.com/kai687", "followers_url": "https://api.github.com/users/kai687/followers", "following_url": "https://api.github.com/users/kai687/following{/other_user}", "gists_url": "https://api.github.com/users/kai687/gists{/gist_id}", "starred_url": "https://api.github.com/users/kai687/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kai687/subscriptions", "organizations_url": "https://api.github.com/users/kai687/orgs", "repos_url": "https://api.github.com/users/kai687/repos", "events_url": "https://api.github.com/users/kai687/events{/privacy}", "received_events_url": "https://api.github.com/users/kai687/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-11T11:20:25Z", "updated_at": "2020-01-13T17:28:14Z", "closed_at": "2020-01-13T17:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to have errors written to `stderr` instead of `stdout`? I was surprised to find that although my test YAML file had errors (which were reported by `yamllint`), `stderr` was empty.\r\n\r\nAs it is now, I can include an extra check to make sure the return code is non-zero, and then print both `stdout` and `stderr`, but it would be nice to print errors where they belong, which in my experience is `stderr`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/222", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/222/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/222/events", "html_url": "https://github.com/adrienverge/yamllint/issues/222", "id": 546780716, "node_id": "MDU6SXNzdWU1NDY3ODA3MTY=", "number": 222, "title": "Only first indentation error in block mapping is shown", "user": {"login": "Kotarski", "id": 17129407, "node_id": "MDQ6VXNlcjE3MTI5NDA3", "avatar_url": "https://avatars0.githubusercontent.com/u/17129407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kotarski", "html_url": "https://github.com/Kotarski", "followers_url": "https://api.github.com/users/Kotarski/followers", "following_url": "https://api.github.com/users/Kotarski/following{/other_user}", "gists_url": "https://api.github.com/users/Kotarski/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kotarski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kotarski/subscriptions", "organizations_url": "https://api.github.com/users/Kotarski/orgs", "repos_url": "https://api.github.com/users/Kotarski/repos", "events_url": "https://api.github.com/users/Kotarski/events{/privacy}", "received_events_url": "https://api.github.com/users/Kotarski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-08T10:43:12Z", "updated_at": "2020-03-24T07:06:00Z", "closed_at": "2020-03-24T07:06:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "With config:\r\n```\r\nindentation: { spaces: 2, indent-sequences: true }\r\n```\r\n\r\n```\r\nblah:\r\n   - one\r\n   - two\r\n```\r\n\r\nExpected:\r\n```\r\n  2:4       error    wrong indentation: expected 2 but found 3 (indentation)\r\n  3:4       error    wrong indentation: expected 2 but found 3 (indentation)\r\n```\r\n\r\nGot:\r\n```\r\n  2:4       error    wrong indentation: expected 2 but found 3  (indentation)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/216", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/216/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/216/events", "html_url": "https://github.com/adrienverge/yamllint/issues/216", "id": 534374519, "node_id": "MDU6SXNzdWU1MzQzNzQ1MTk=", "number": 216, "title": "UnicodeEncodeError on 1.19.0", "user": {"login": "fengzixu", "id": 9636615, "node_id": "MDQ6VXNlcjk2MzY2MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9636615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fengzixu", "html_url": "https://github.com/fengzixu", "followers_url": "https://api.github.com/users/fengzixu/followers", "following_url": "https://api.github.com/users/fengzixu/following{/other_user}", "gists_url": "https://api.github.com/users/fengzixu/gists{/gist_id}", "starred_url": "https://api.github.com/users/fengzixu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fengzixu/subscriptions", "organizations_url": "https://api.github.com/users/fengzixu/orgs", "repos_url": "https://api.github.com/users/fengzixu/repos", "events_url": "https://api.github.com/users/fengzixu/events{/privacy}", "received_events_url": "https://api.github.com/users/fengzixu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-07T08:46:12Z", "updated_at": "2019-12-07T18:11:27Z", "closed_at": "2019-12-07T10:07:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"/usr/local/bin/yamllint\", line 11, in <module>\r\n    sys.exit(run())\r\n  File \"/usr/local/lib/python3.5/dist-packages/yamllint/cli.py\", line 175, in run\r\n    problems = linter.run(f, conf, filepath)\r\n  File \"/usr/local/lib/python3.5/dist-packages/yamllint/linter.py\", line 237, in run\r\n    content = input.read()\r\n  File \"/usr/lib/python3.5/encodings/ascii.py\", line 26, in decode\r\n    return codecs.ascii_decode(input, self.errors)[0]\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe3 in position 346: ordinal not in range(128)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/214", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/214/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/214/events", "html_url": "https://github.com/adrienverge/yamllint/issues/214", "id": 527761266, "node_id": "MDU6SXNzdWU1Mjc3NjEyNjY=", "number": 214, "title": "Disable in comment - trouble in GitHub Action", "user": {"login": "JonGilmore", "id": 7232986, "node_id": "MDQ6VXNlcjcyMzI5ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7232986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonGilmore", "html_url": "https://github.com/JonGilmore", "followers_url": "https://api.github.com/users/JonGilmore/followers", "following_url": "https://api.github.com/users/JonGilmore/following{/other_user}", "gists_url": "https://api.github.com/users/JonGilmore/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonGilmore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonGilmore/subscriptions", "organizations_url": "https://api.github.com/users/JonGilmore/orgs", "repos_url": "https://api.github.com/users/JonGilmore/repos", "events_url": "https://api.github.com/users/JonGilmore/events{/privacy}", "received_events_url": "https://api.github.com/users/JonGilmore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-24T21:40:27Z", "updated_at": "2019-11-24T21:46:17Z", "closed_at": "2019-11-24T21:46:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm attempting to disable line-length in a comment in a GitHub action, but I don't seem to be having any luck with it. Is there something obvious that I'm missing here? I've seen others use this in their examples, but I can't seem to get it to work as expected.\r\n```\r\n---\r\nname: CI\r\n# yamllint disable-line rule:line-length\r\non:\r\n  push:\r\n\r\njobs:\r\n  yamllint:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - name: Getting your configuration from GitHub\r\n        uses: actions/checkout@v1\r\n      - name: Running YAMLlint\r\n        uses: \"docker://pipelinecomponents/yamllint:latest\"\r\n        with:\r\n          args: yamllint .\r\n```\r\n\r\nResults:\r\n![image](https://user-images.githubusercontent.com/7232986/69502058-97251e00-0ed0-11ea-9358-bf3197e568b6.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/211", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/211/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/211/events", "html_url": "https://github.com/adrienverge/yamllint/issues/211", "id": 523910374, "node_id": "MDU6SXNzdWU1MjM5MTAzNzQ=", "number": 211, "title": "How can I shorten too long command in yml file?", "user": {"login": "nuhkoca", "id": 5719389, "node_id": "MDQ6VXNlcjU3MTkzODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5719389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuhkoca", "html_url": "https://github.com/nuhkoca", "followers_url": "https://api.github.com/users/nuhkoca/followers", "following_url": "https://api.github.com/users/nuhkoca/following{/other_user}", "gists_url": "https://api.github.com/users/nuhkoca/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuhkoca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuhkoca/subscriptions", "organizations_url": "https://api.github.com/users/nuhkoca/orgs", "repos_url": "https://api.github.com/users/nuhkoca/repos", "events_url": "https://api.github.com/users/nuhkoca/events{/privacy}", "received_events_url": "https://api.github.com/users/nuhkoca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-16T23:35:38Z", "updated_at": "2019-11-28T23:20:51Z", "closed_at": "2019-11-17T22:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThanks for such a great tool, it helps me a lot. I am a newbie to YML and YAML. I have below command in my file\r\n\r\n```\r\ncommand: |\r\n      mkdir -p ~/junit/\r\n      find . -type f -regex \".*/build/test-results/.*xml\" -exec cp {} ~/junit/ \\;\r\n```\r\n\r\nYamllint throws:\r\n\r\n> error    line too long (87 > 80 characters)  (line-length)\r\n\r\nOkay, I can shorten this in a valid format but and now my CI tool throws an error:\r\n\r\n```\r\nmkdir: invalid option -- 't'\r\nTry 'mkdir --help' for more information.\r\n```\r\n\r\nWhat is the most efficient way to shorten such command in a yml file? Thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/209", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/209/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/209/events", "html_url": "https://github.com/adrienverge/yamllint/issues/209", "id": 522080844, "node_id": "MDU6SXNzdWU1MjIwODA4NDQ=", "number": 209, "title": "Feature request: auto-fix issue on parsable YAML files", "user": {"login": "nmiculinic", "id": 3183610, "node_id": "MDQ6VXNlcjMxODM2MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3183610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmiculinic", "html_url": "https://github.com/nmiculinic", "followers_url": "https://api.github.com/users/nmiculinic/followers", "following_url": "https://api.github.com/users/nmiculinic/following{/other_user}", "gists_url": "https://api.github.com/users/nmiculinic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmiculinic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmiculinic/subscriptions", "organizations_url": "https://api.github.com/users/nmiculinic/orgs", "repos_url": "https://api.github.com/users/nmiculinic/repos", "events_url": "https://api.github.com/users/nmiculinic/events{/privacy}", "received_events_url": "https://api.github.com/users/nmiculinic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-13T09:46:42Z", "updated_at": "2019-11-13T10:16:15Z", "closed_at": "2019-11-13T10:16:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've searching online for yaml formatters, but couldn't find any whose output satisfy the yamllint. Thus it would be great that yamllint also offers fix option for parsable YAML files, at least where it's easy doing so. For example:\r\n\r\n```\r\n  1:1       warning  missing document start \"---\"  (document-start)\r\n```\r\n\r\nquite easy to fix. Just add the `---` \r\n\r\n```\r\n  25:1      error    wrong indentation: expected 2 but found 0  (indentation)\r\n```\r\n\r\nif the document is parsable, then fixing indentation is easy as well. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/208", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/208/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/208/events", "html_url": "https://github.com/adrienverge/yamllint/issues/208", "id": 521031077, "node_id": "MDU6SXNzdWU1MjEwMzEwNzc=", "number": 208, "title": "Bug: Quoted strings rule doesn't detect unquoted strings in array", "user": {"login": "mmerfort", "id": 395822, "node_id": "MDQ6VXNlcjM5NTgyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/395822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerfort", "html_url": "https://github.com/mmerfort", "followers_url": "https://api.github.com/users/mmerfort/followers", "following_url": "https://api.github.com/users/mmerfort/following{/other_user}", "gists_url": "https://api.github.com/users/mmerfort/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerfort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerfort/subscriptions", "organizations_url": "https://api.github.com/users/mmerfort/orgs", "repos_url": "https://api.github.com/users/mmerfort/repos", "events_url": "https://api.github.com/users/mmerfort/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerfort/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T15:33:19Z", "updated_at": "2020-04-13T12:15:31Z", "closed_at": "2020-04-13T12:15:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI noticed that yamllint does not detect unquoted strings in an array even though this rule has been enabled:\r\n\r\n## Example\r\n### testfile.yaml\r\n```yaml\r\n---\r\nbla:\r\n  - FOO\r\n  - BAR\r\n  - BAZ\r\n```\r\n### configuration.yaml\r\n```yaml\r\n---\r\nextends: 'default'\r\n\r\nrules:\r\n  quoted-strings:\r\n    quote-type: 'single'\r\n```\r\n\r\nI tried using different quote-types but none of them seem to work.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/207", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/207/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/207/events", "html_url": "https://github.com/adrienverge/yamllint/issues/207", "id": 515301868, "node_id": "MDU6SXNzdWU1MTUzMDE4Njg=", "number": 207, "title": "Disabling a rule with a comment has no effect", "user": {"login": "durgaswaroop", "id": 8543652, "node_id": "MDQ6VXNlcjg1NDM2NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8543652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durgaswaroop", "html_url": "https://github.com/durgaswaroop", "followers_url": "https://api.github.com/users/durgaswaroop/followers", "following_url": "https://api.github.com/users/durgaswaroop/following{/other_user}", "gists_url": "https://api.github.com/users/durgaswaroop/gists{/gist_id}", "starred_url": "https://api.github.com/users/durgaswaroop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durgaswaroop/subscriptions", "organizations_url": "https://api.github.com/users/durgaswaroop/orgs", "repos_url": "https://api.github.com/users/durgaswaroop/repos", "events_url": "https://api.github.com/users/durgaswaroop/events{/privacy}", "received_events_url": "https://api.github.com/users/durgaswaroop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-31T09:58:12Z", "updated_at": "2019-11-04T09:46:21Z", "closed_at": "2019-11-04T09:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a long line in my yaml file that is 110 characters long.  I have disabled the line-length check for that line with `# yamllint disable-line rule:line-length` at the end of the line.\r\nBut when I run the yaml lint, it still comes up as an error. \r\nHow can I remove it just for that line?\r\n\r\n```\r\n % yamllint .gitlab-ci.yml\r\n.gitlab-ci.yml\r\n  1:1       warning  missing document start \"---\"  (document-start)\r\n  4:1       warning  comment not indented like content  (comments-indentation)\r\n  11:111    warning  too few spaces before comment  (comments)\r\n  47:81     error    line too long (91 > 80 characters)  (line-length)\r\n  75:119    warning  too few spaces before comment  (comments)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/204", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/204/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/204/events", "html_url": "https://github.com/adrienverge/yamllint/issues/204", "id": 503542684, "node_id": "MDU6SXNzdWU1MDM1NDI2ODQ=", "number": 204, "title": "[BUG] Default setting (`enable`) of `empty-values` & `octal-values` does nothing", "user": {"login": "myii", "id": 10231489, "node_id": "MDQ6VXNlcjEwMjMxNDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/10231489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myii", "html_url": "https://github.com/myii", "followers_url": "https://api.github.com/users/myii/followers", "following_url": "https://api.github.com/users/myii/following{/other_user}", "gists_url": "https://api.github.com/users/myii/gists{/gist_id}", "starred_url": "https://api.github.com/users/myii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myii/subscriptions", "organizations_url": "https://api.github.com/users/myii/orgs", "repos_url": "https://api.github.com/users/myii/repos", "events_url": "https://api.github.com/users/myii/events{/privacy}", "received_events_url": "https://api.github.com/users/myii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-10-07T15:55:29Z", "updated_at": "2019-10-15T15:13:33Z", "closed_at": "2019-10-15T07:41:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There appears to be a contradiction between the meaning of `enable` in the default settings and the actual end result.\r\n\r\n#### `empty-values`\r\n\r\nhttps://github.com/adrienverge/yamllint/blob/b62b424dd43acd4b0e08f46f49d88bc15461384e/yamllint/conf/default.yaml#L21\r\n\r\nhttps://github.com/adrienverge/yamllint/blob/0f073f7a09d29ceb85a1aaf388bdbe5f4145f869/yamllint/rules/empty_values.py#L78-L79\r\n\r\n#### `octal-values`\r\n\r\nhttps://github.com/adrienverge/yamllint/blob/b62b424dd43acd4b0e08f46f49d88bc15461384e/yamllint/conf/default.yaml#L29\r\n\r\nhttps://github.com/adrienverge/yamllint/blob/0f073f7a09d29ceb85a1aaf388bdbe5f4145f869/yamllint/rules/octal_values.py#L69-L70\r\n\r\n---\r\n\r\nIn both cases, the only way to get these working is to specify them in the `.yamllint` file:\r\n\r\n```yaml\r\nrules:\r\n  empty-values:\r\n    forbid-in-block-mappings: true\r\n    forbid-in-flow-mappings: true\r\n  octal-values:\r\n    forbid-implicit-octal: true\r\n    forbid-explicit-octal: true\r\n```\r\n\r\nWhat is `enable` supposed to do?  Otherwise, isn't the default actually `disable` in both cases, with `default.yaml` needing updating (with the knock-on affect to the documentation)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/201", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/201/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/201/events", "html_url": "https://github.com/adrienverge/yamllint/issues/201", "id": 487791158, "node_id": "MDU6SXNzdWU0ODc3OTExNTg=", "number": 201, "title": "`invalid config: not a dict` What should I do?", "user": {"login": "anishmittal2020", "id": 42092626, "node_id": "MDQ6VXNlcjQyMDkyNjI2", "avatar_url": "https://avatars1.githubusercontent.com/u/42092626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anishmittal2020", "html_url": "https://github.com/anishmittal2020", "followers_url": "https://api.github.com/users/anishmittal2020/followers", "following_url": "https://api.github.com/users/anishmittal2020/following{/other_user}", "gists_url": "https://api.github.com/users/anishmittal2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/anishmittal2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anishmittal2020/subscriptions", "organizations_url": "https://api.github.com/users/anishmittal2020/orgs", "repos_url": "https://api.github.com/users/anishmittal2020/repos", "events_url": "https://api.github.com/users/anishmittal2020/events{/privacy}", "received_events_url": "https://api.github.com/users/anishmittal2020/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-31T17:12:10Z", "updated_at": "2019-09-02T12:57:43Z", "closed_at": "2019-09-02T12:57:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "- My Yamllint config is blank.\r\n\r\n```bash\r\ncat ~/.config/yamllint/config\r\n\r\n```\r\n\r\n- Input File: `.gitlab-ci.yml`\r\n\r\n```yaml\r\n# This file is a template, and might need editing before it works on your project.\r\n# Full project: https://gitlab.com/pages/plain-html\r\npages:\r\n  stage: deploy\r\n  script:\r\n    - mkdir .public\r\n    - cp -r * .public\r\n    - mv .public public\r\n  artifacts:\r\n    paths:\r\n      - public\r\n  only:\r\n    - master\r\n```\r\n\r\n```bash\r\n$ yamllint .gitlab-ci.yml \r\ninvalid config: not a dict\r\n```\r\n\r\nWhat should I do? What is dict?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/200", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/200/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/200/events", "html_url": "https://github.com/adrienverge/yamllint/issues/200", "id": 487550327, "node_id": "MDU6SXNzdWU0ODc1NTAzMjc=", "number": 200, "title": "False positive for quote-type on range values", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-30T15:40:58Z", "updated_at": "2019-08-30T15:54:13Z", "closed_at": "2019-08-30T15:54:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When `rules.quoted-strings.quote-type`, e.g. `\"double\"`, is applied to some custom types such as `!ruby/range 1..10`, then yamllint prints a spurious warning.\r\n\r\nHow should yamllint treat values of custom type? One way is to go ahead and learn more of these custom types, such as `!fd` (string), `!ruby/range` (numerical range), etc. Another way is to ignore quote-type for all custom types. What should we do, in order to be consistent?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/197", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/197/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/197/events", "html_url": "https://github.com/adrienverge/yamllint/issues/197", "id": 483065749, "node_id": "MDU6SXNzdWU0ODMwNjU3NDk=", "number": 197, "title": "Feature Request:  min-spaces-after check for hyphens", "user": {"login": "Pahanda", "id": 39745451, "node_id": "MDQ6VXNlcjM5NzQ1NDUx", "avatar_url": "https://avatars0.githubusercontent.com/u/39745451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pahanda", "html_url": "https://github.com/Pahanda", "followers_url": "https://api.github.com/users/Pahanda/followers", "following_url": "https://api.github.com/users/Pahanda/following{/other_user}", "gists_url": "https://api.github.com/users/Pahanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pahanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pahanda/subscriptions", "organizations_url": "https://api.github.com/users/Pahanda/orgs", "repos_url": "https://api.github.com/users/Pahanda/repos", "events_url": "https://api.github.com/users/Pahanda/events{/privacy}", "received_events_url": "https://api.github.com/users/Pahanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-20T20:26:52Z", "updated_at": "2019-08-20T21:59:15Z", "closed_at": "2019-08-20T21:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to lint an AWS configmap, and it's super strict (even more than `--strict`).\r\n\r\nFor example, this is considered invalid:\r\n```\r\n     -userarn: arn:aws:iam::1234567890123:user/WinstonSmith\r\n       username: WinstonSmith\r\n       groups:\r\n        - system:clusterRW\r\n```\r\nIt actually wants this:\r\n```\r\n     - userarn: arn:aws:iam::1234567890123:user/WinstonSmith\r\n       username: WinstonSmith\r\n       groups:\r\n        - system:clusterRW\r\n```\r\nThis was the result of a typo on the part of one of our admins, but because it passed linting, it ended up clobbering our config, requiring the cluster owner to fix things.\r\n\r\nI'm familiar with the `max-spaces-after` value for `hyphens`.  I'd love to be able to have a `min-spaces-after` value, to catch things like this.  Or maybe a `spaces-after` value that would be enforced by the linter.\r\n\r\nI'm going to try adding this myself (just for fun), but it would be nice to have an official one.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/195", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/195/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/195/events", "html_url": "https://github.com/adrienverge/yamllint/issues/195", "id": 477153636, "node_id": "MDU6SXNzdWU0NzcxNTM2MzY=", "number": 195, "title": "Long strings and comments trigger 'line too long' warnings", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-06T03:43:22Z", "updated_at": "2019-08-27T20:35:44Z", "closed_at": "2019-08-27T20:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n  20:81     error    line too long (82 > 80 characters)  (line-length)\r\n```\r\n\r\nThese shouldn't really be errors. Some strings are more readable when long.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/192", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/192/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/192/events", "html_url": "https://github.com/adrienverge/yamllint/issues/192", "id": 467981761, "node_id": "MDU6SXNzdWU0Njc5ODE3NjE=", "number": 192, "title": "Add support for custom file extensions", "user": {"login": "grzesuav", "id": 9568421, "node_id": "MDQ6VXNlcjk1Njg0MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9568421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grzesuav", "html_url": "https://github.com/grzesuav", "followers_url": "https://api.github.com/users/grzesuav/followers", "following_url": "https://api.github.com/users/grzesuav/following{/other_user}", "gists_url": "https://api.github.com/users/grzesuav/gists{/gist_id}", "starred_url": "https://api.github.com/users/grzesuav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grzesuav/subscriptions", "organizations_url": "https://api.github.com/users/grzesuav/orgs", "repos_url": "https://api.github.com/users/grzesuav/repos", "events_url": "https://api.github.com/users/grzesuav/events{/privacy}", "received_events_url": "https://api.github.com/users/grzesuav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-15T07:39:30Z", "updated_at": "2019-07-15T08:33:08Z", "closed_at": "2019-07-15T08:33:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently when running with `.` (current directory) only `.yml` and `.yaml` files are checked. Would like to have an option to configure file extensions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/190", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/190/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/190/events", "html_url": "https://github.com/adrienverge/yamllint/issues/190", "id": 467076210, "node_id": "MDU6SXNzdWU0NjcwNzYyMTA=", "number": 190, "title": ".yamllint.yml", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-11T19:51:14Z", "updated_at": "2019-08-27T07:49:11Z", "closed_at": "2019-08-27T07:49:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, can we support the configuration filename `.yamllint.yml`? This helps text editors to syntax highlight better, and ensures that we are using properly linted configuration files as well!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/186", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/186/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/186/events", "html_url": "https://github.com/adrienverge/yamllint/issues/186", "id": 464175455, "node_id": "MDU6SXNzdWU0NjQxNzU0NTU=", "number": 186, "title": "How to lint \"JSON with comments\"", "user": {"login": "eyalev", "id": 117240, "node_id": "MDQ6VXNlcjExNzI0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/117240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eyalev", "html_url": "https://github.com/eyalev", "followers_url": "https://api.github.com/users/eyalev/followers", "following_url": "https://api.github.com/users/eyalev/following{/other_user}", "gists_url": "https://api.github.com/users/eyalev/gists{/gist_id}", "starred_url": "https://api.github.com/users/eyalev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eyalev/subscriptions", "organizations_url": "https://api.github.com/users/eyalev/orgs", "repos_url": "https://api.github.com/users/eyalev/repos", "events_url": "https://api.github.com/users/eyalev/events{/privacy}", "received_events_url": "https://api.github.com/users/eyalev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-04T09:53:53Z", "updated_at": "2019-07-04T11:55:20Z", "closed_at": "2019-07-04T11:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to achieve linting for YAML that will look like \"JSON with comments\".\r\n\r\nExample:\r\n\r\n```\r\n# First comment\r\n{\r\n  # Second comment\r\n  key1: \"value1\",\r\n  key2: \"value2\",\r\n  object1: {\r\n    object1_key1: \"value1\", # Inline comment\r\n    object1_list1: [\"one\", \"two\", \"three\"],\r\n    object1_key2: \"value1\"\r\n  },\r\n  list2: [\r\n    # Another comment\r\n    \"one\",\r\n    \"two\",\r\n    43,\r\n    \"three\",\r\n    true\r\n  ],\r\n  key3: \"value3\"\r\n}\r\n```\r\n\r\nMy current issue is to require using braces and brackets for \"objects\" and \"lists\".\r\n\r\nIs there a way to enforce this?\r\n\r\nThanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/185", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/185/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/185/events", "html_url": "https://github.com/adrienverge/yamllint/issues/185", "id": 459082725, "node_id": "MDU6SXNzdWU0NTkwODI3MjU=", "number": 185, "title": "ingore path not works for yamlint 1.15", "user": {"login": "irisdingbj", "id": 8347164, "node_id": "MDQ6VXNlcjgzNDcxNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8347164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irisdingbj", "html_url": "https://github.com/irisdingbj", "followers_url": "https://api.github.com/users/irisdingbj/followers", "following_url": "https://api.github.com/users/irisdingbj/following{/other_user}", "gists_url": "https://api.github.com/users/irisdingbj/gists{/gist_id}", "starred_url": "https://api.github.com/users/irisdingbj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irisdingbj/subscriptions", "organizations_url": "https://api.github.com/users/irisdingbj/orgs", "repos_url": "https://api.github.com/users/irisdingbj/repos", "events_url": "https://api.github.com/users/irisdingbj/events{/privacy}", "received_events_url": "https://api.github.com/users/irisdingbj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-21T08:41:48Z", "updated_at": "2019-06-27T01:37:50Z", "closed_at": "2019-06-27T01:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have installed yamllint via below steps in my ubuntu:xenial as the default yamllint version too low.\r\n\r\n```\r\nYAMLLINTL_BASE_URL='http://launchpadlibrarian.net/411563953/yamllint_1.15.0-1_all.deb'\r\nYAMLLINTL_DEB=\"yamllint_1.15.0-1_all.deb\"\r\n\r\nwget -q -nc \"${YAMLLINTL_BASE_URL}\"\r\nchmod +x \"${YAMLLINTL_DEB}\"\r\napt-get update\r\napt-get -qqy install python3-pkg-resources python3-yaml python3-pathspec \r\ndpkg -i \"${YAMLLINTL_DEB}\"\r\n```\r\nand my yamllint config is as below\r\n```\r\n---\r\nignore: |\r\n  /tests/e2e/tests/rule-c.yaml\r\n  /tests/e2e/tests/ule-c.yaml\r\n  /tests/e2e/tests/set.yaml\r\n\r\nrules:\r\n  braces: disable\r\n  brackets: disable\r\n  colons:\r\n    ignore: |\r\n      /gaes/ge/metadata.yaml\r\n  commas: disable\r\n  comments:\r\n    level: warning\r\n  comments-indentation:\r\n    level: warning\r\n  document-end: disable\r\n  document-start:\r\n    level: warning\r\n  empty-lines: disable\r\n  empty-values: enable\r\n  hyphens: enable\r\n  indentation: disable\r\n  key-duplicates: enable\r\n  key-ordering: disable\r\n  line-length: disable\r\n  new-line-at-end-of-file: disable\r\n  new-lines: enable\r\n  octal-values: enable\r\n  quoted-strings: disable\r\n  trailing-spaces: disable\r\n  truthy:\r\n    level: warning\r\n```\r\nWhen I run `yamllint -c yamllintrule test.yaml` it fails  for parsing the yamllintrules:\r\n```\r\nFile \"/usr/bin/yamllint\", line 11, in <module>\r\n    load_entry_point('yamllint==1.15.0', 'console_scripts', 'yamllint')()\r\n  File \"/usr/lib/python3/dist-packages/yamllint/cli.py\", line 153, in run\r\n    conf = YamlLintConfig(file=args.config_file)\r\n  File \"/usr/lib/python3/dist-packages/yamllint/config.py\", line 39, in __init__\r\n    self.parse(content)\r\n  File \"/usr/lib/python3/dist-packages/yamllint/config.py\", line 97, in parse\r\n    'gitwildmatch', conf['ignore'].splitlines())\r\n  File \"/usr/lib/python3/dist-packages/pathspec/pathspec.py\", line 59, in from_lines\r\n    pattern_factory = util.lookup_pattern(pattern_factory)\r\n  File \"/usr/lib/python3/dist-packages/pathspec/util.py\", line 95, in lookup_pattern\r\n    return _registered_patterns[name]\r\nKeyError: 'gitwildmatch'\r\n```\r\n\r\nmy yamllint version is as below:\r\n```\r\nyamllint -v\r\nyamllint 1.15.0\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/184", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/184/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/184/events", "html_url": "https://github.com/adrienverge/yamllint/issues/184", "id": 458366456, "node_id": "MDU6SXNzdWU0NTgzNjY0NTY=", "number": 184, "title": "line-length default severity level too high", "user": {"login": "direvus", "id": 312229, "node_id": "MDQ6VXNlcjMxMjIyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/312229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/direvus", "html_url": "https://github.com/direvus", "followers_url": "https://api.github.com/users/direvus/followers", "following_url": "https://api.github.com/users/direvus/following{/other_user}", "gists_url": "https://api.github.com/users/direvus/gists{/gist_id}", "starred_url": "https://api.github.com/users/direvus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/direvus/subscriptions", "organizations_url": "https://api.github.com/users/direvus/orgs", "repos_url": "https://api.github.com/users/direvus/repos", "events_url": "https://api.github.com/users/direvus/events{/privacy}", "received_events_url": "https://api.github.com/users/direvus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-20T06:11:28Z", "updated_at": "2019-06-20T10:22:31Z", "closed_at": "2019-06-20T10:22:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the default configuration, the 80 character line-length rule reports at the 'error' level.\r\n\r\nThe line-length rule is a highly subjective style preference.  Some people care about this a lot, others not at all.  It might be important in some files but not in others.  I think that the 'error' level is too severe for a default setting.  Lines longer than 80 characters are not forbidden, or even recommended against, by the YAML specification.  AFAICT, the YAML spec doesn't say anything at all about line length.\r\n\r\nIncluding this style preference at the same severity level as genuine structural errors like key-duplicates by default is weird.\r\n\r\nI realise that I can disable this rule, or downgrade it to a warning, in my own configuration but I think the default config could really be improved by making line-length into a warning, and letting people opt-in to having it at the error level if they want to be dogmatic about line length.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/176", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/176/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/176/events", "html_url": "https://github.com/adrienverge/yamllint/issues/176", "id": 436947998, "node_id": "MDU6SXNzdWU0MzY5NDc5OTg=", "number": 176, "title": "Rule: Consistent string value style", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-24T23:26:30Z", "updated_at": "2020-03-24T07:19:00Z", "closed_at": "2020-03-24T07:18:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "YAML offers three different syntaxes for string values: raw literals without any quotes, single quotes, and double quotes. Each has advantages and disadvantages.\r\n\r\nFor example, raw strings often accidentally resolve to nonstring types, when they happen to match certain patterns. This can happen with strings comprised of digits, a decimal point, and further digits. For humans reading a YAML file, that wouldn\u2019t matter much. Or for weakly typed languages. However, strongly typed programming languages tend to generate type errors with these raw strings, once the intermediate structure presents type mismatches with the final marshaling structure. So raw string values in YAML are best avoided. Perhaps a new rule for yamllint could allow for any string syntax / be disabled by default.\r\n\r\nSingle quoted strings in YAML unfortunately use an obtuse escape notation. This involves using multiple consecutive quotes as opposed to C style backslash notation. More experienced programmers are actually more likely to make a mistake here, as they will be used to backslash escapes, which resolve in surprising ways with this single quoted string syntax for YAML files. On the other hand, single quotes don\u2019t require a Shift modifier (at least on US keyboards) and so are easier on fingers. Anyone who really prefers YAML single quotes, could configure this rule to prefer that all their strings be single quoted.\r\n\r\nFinally, double quoted strings in YAML are processed with backslash semantics similar to C, and so are both protected from mistyped interpretation as well as accidental unescaped content. I would propose that string values in YAML always be double quoted, for safety and consistency.\r\n\r\nI think YAML also allows for different types as keys, so the same kind of rule for value style could be applied to keys as well. Ideally, these could be configured as matching or even divergent policies.\r\n\r\nRegardless of your personal favorite, I think it would improve readability for our users to have a customizable, consistent style to their YAML strings. So.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/173", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/173/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/173/events", "html_url": "https://github.com/adrienverge/yamllint/issues/173", "id": 425017616, "node_id": "MDU6SXNzdWU0MjUwMTc2MTY=", "number": 173, "title": "creating new rules", "user": {"login": "toffiecoffie", "id": 18489883, "node_id": "MDQ6VXNlcjE4NDg5ODgz", "avatar_url": "https://avatars1.githubusercontent.com/u/18489883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toffiecoffie", "html_url": "https://github.com/toffiecoffie", "followers_url": "https://api.github.com/users/toffiecoffie/followers", "following_url": "https://api.github.com/users/toffiecoffie/following{/other_user}", "gists_url": "https://api.github.com/users/toffiecoffie/gists{/gist_id}", "starred_url": "https://api.github.com/users/toffiecoffie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toffiecoffie/subscriptions", "organizations_url": "https://api.github.com/users/toffiecoffie/orgs", "repos_url": "https://api.github.com/users/toffiecoffie/repos", "events_url": "https://api.github.com/users/toffiecoffie/events{/privacy}", "received_events_url": "https://api.github.com/users/toffiecoffie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-25T17:08:47Z", "updated_at": "2019-03-25T17:56:29Z", "closed_at": "2019-03-25T17:56:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to extend yamllint and create a custom rule. The rule was added to the rules.rst file. The rule is included in the rules directory. Under the config.py It's throwing an exception at this line:    rule = yamllint.rules.get(id). It says invalid config: no such rule: \"myrule\". How can I add a custom rule to this framework?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/172", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/172/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/172/events", "html_url": "https://github.com/adrienverge/yamllint/issues/172", "id": 425017604, "node_id": "MDU6SXNzdWU0MjUwMTc2MDQ=", "number": 172, "title": "creating new rules", "user": {"login": "toffiecoffie", "id": 18489883, "node_id": "MDQ6VXNlcjE4NDg5ODgz", "avatar_url": "https://avatars1.githubusercontent.com/u/18489883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toffiecoffie", "html_url": "https://github.com/toffiecoffie", "followers_url": "https://api.github.com/users/toffiecoffie/followers", "following_url": "https://api.github.com/users/toffiecoffie/following{/other_user}", "gists_url": "https://api.github.com/users/toffiecoffie/gists{/gist_id}", "starred_url": "https://api.github.com/users/toffiecoffie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toffiecoffie/subscriptions", "organizations_url": "https://api.github.com/users/toffiecoffie/orgs", "repos_url": "https://api.github.com/users/toffiecoffie/repos", "events_url": "https://api.github.com/users/toffiecoffie/events{/privacy}", "received_events_url": "https://api.github.com/users/toffiecoffie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-25T17:08:45Z", "updated_at": "2019-03-25T17:56:31Z", "closed_at": "2019-03-25T17:56:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to extend yamllint and create a custom rule. The rule was added to the rules.rst file. The rule is included in the rules directory. Under the config.py It's throwing an exception at this line:    rule = yamllint.rules.get(id). It says invalid config: no such rule: \"myrule\". How can I add a custom rule to this framework?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/171", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/171/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/171/events", "html_url": "https://github.com/adrienverge/yamllint/issues/171", "id": 424898283, "node_id": "MDU6SXNzdWU0MjQ4OTgyODM=", "number": 171, "title": "Empty lines in comments not handled sensibly by require-starting-space", "user": {"login": "g1ps", "id": 5502582, "node_id": "MDQ6VXNlcjU1MDI1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5502582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g1ps", "html_url": "https://github.com/g1ps", "followers_url": "https://api.github.com/users/g1ps/followers", "following_url": "https://api.github.com/users/g1ps/following{/other_user}", "gists_url": "https://api.github.com/users/g1ps/gists{/gist_id}", "starred_url": "https://api.github.com/users/g1ps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g1ps/subscriptions", "organizations_url": "https://api.github.com/users/g1ps/orgs", "repos_url": "https://api.github.com/users/g1ps/repos", "events_url": "https://api.github.com/users/g1ps/events{/privacy}", "received_events_url": "https://api.github.com/users/g1ps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-03-25T13:20:57Z", "updated_at": "2020-05-01T10:19:50Z", "closed_at": "2020-04-30T17:57:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Problem**\r\nComments like this:\r\n```\r\n[Line 32 of yml file]\r\n      # - name: some task\r\n      #   import_role:\r\n      #     name: some-role\r\n      #\r\n      # - name: some task\r\n      #   import_role:\r\n      #     name: some-role\r\n      #\r\n      # - name: some task\r\n      #   import_role:\r\n      #     name: some-role\r\n      #\r\n      # - name: some task\r\n      #   import_role:\r\n      #     name: some-role\r\n```\r\nare flagged as needing a leading space after the hash.\r\n\r\n```\r\n$ yamllint ./zz.yml\r\n./zz.yml\r\n  36:8      warning  missing starting space in comment  (comments)\r\n  40:8      warning  missing starting space in comment  (comments)\r\n  44:8      warning  missing starting space in comment  (comments)\r\n```\r\n\r\n**Request**\r\nThat makes no sense as it's likely to flag various valid comments. The rule should only be applied to lines with text following the hash. It should not be applied to cases where a newline follows the hash.\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/170", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/170/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/170/events", "html_url": "https://github.com/adrienverge/yamllint/issues/170", "id": 424886804, "node_id": "MDU6SXNzdWU0MjQ4ODY4MDQ=", "number": 170, "title": "Block indentation not handled correctly", "user": {"login": "g1ps", "id": 5502582, "node_id": "MDQ6VXNlcjU1MDI1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5502582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g1ps", "html_url": "https://github.com/g1ps", "followers_url": "https://api.github.com/users/g1ps/followers", "following_url": "https://api.github.com/users/g1ps/following{/other_user}", "gists_url": "https://api.github.com/users/g1ps/gists{/gist_id}", "starred_url": "https://api.github.com/users/g1ps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g1ps/subscriptions", "organizations_url": "https://api.github.com/users/g1ps/orgs", "repos_url": "https://api.github.com/users/g1ps/repos", "events_url": "https://api.github.com/users/g1ps/events{/privacy}", "received_events_url": "https://api.github.com/users/g1ps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-25T12:55:36Z", "updated_at": "2020-03-24T07:21:57Z", "closed_at": "2020-03-24T07:21:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Environment**\r\nCygwin on Win 7 Pro\r\n```\r\n$ yamllint -v\r\nyamllint 1.15.0\r\n```\r\n\r\n**zz.yml**\r\n```\r\n---\r\n- hosts: xyz\r\n\r\n  tasks:\r\n  - name: block 1\r\n    block:\r\n    - name: set facts 1\r\n      set_fact:\r\n        fact_1: 'something'\r\n      when: var1 is undefined or var2 == ''\r\n\r\n    - name: set facts 2\r\n      set_fact:\r\n        fac2: '{{ j1 }}'\r\n      when: var1 is defined and var1 != ''\r\n```\r\n\r\n.yamlint\r\n```\r\n\r\nextends: default\r\n\r\nrules:\r\n  empty-lines:\r\n    max: 0\r\n    max-end: 1\r\n    max-start: 0\r\n  line-length:\r\n    max: 250\r\n  new-lines: disable  # Newlines might be either depending on the OS perforce checks out to.\r\n  truthy: disable     # Ansible seems to have standardised on yes/no.\r\n```\r\n\r\n**Output**\r\n$ yamllint ./zz.yml\r\n./zz.yml\r\n  6:12      error    syntax error: mapping values are not allowed here\r\n\r\n**Expected Output**\r\nyamllint should flag the block as needing to be indented, not outdented. Moving the block's contents either way removes the warning but the report is wrong. I also tried:\r\n```\r\n  indentation:\r\n    indent-sequences: true\r\n```\r\nbut that doesn't change the results. The docs are unclear as to the default state of params like this. They say only that the default is `enabled` but not what that means for the parameters to `indentation`.\r\n\r\nAs a side note, `yamllint` also doesn't pick up indentation in `tasks` when it's used like this. It seems only to detect it when I use the hyphen before `tasks` or in some inconsistent way which I can't quite pin down.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/169", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/169/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/169/events", "html_url": "https://github.com/adrienverge/yamllint/issues/169", "id": 424865071, "node_id": "MDU6SXNzdWU0MjQ4NjUwNzE=", "number": 169, "title": "empty-lines rule parameters are ignored", "user": {"login": "g1ps", "id": 5502582, "node_id": "MDQ6VXNlcjU1MDI1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5502582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g1ps", "html_url": "https://github.com/g1ps", "followers_url": "https://api.github.com/users/g1ps/followers", "following_url": "https://api.github.com/users/g1ps/following{/other_user}", "gists_url": "https://api.github.com/users/g1ps/gists{/gist_id}", "starred_url": "https://api.github.com/users/g1ps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g1ps/subscriptions", "organizations_url": "https://api.github.com/users/g1ps/orgs", "repos_url": "https://api.github.com/users/g1ps/repos", "events_url": "https://api.github.com/users/g1ps/events{/privacy}", "received_events_url": "https://api.github.com/users/g1ps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-03-25T12:01:55Z", "updated_at": "2020-08-11T15:14:27Z", "closed_at": "2019-08-27T20:37:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Environment**\r\nCygwin on Win 7 Pro\r\n```\r\n$ yamllint -v\r\nyamllint 1.15.0\r\n```\r\n\r\n**YAML**\r\n```\r\n\r\n---\r\n\r\n- hosts: some-hosts\r\n\r\n\r\n\r\n  tasks:\r\n  - name: some task\r\n    import_role:\r\n      name: some-role\r\n\r\n\r\n\r\n````\r\n\r\n**.yamllint**\r\n```\r\nextends: default\r\n\r\nrules:\r\n  empty-lines:\r\n    max: 0\r\n    max-end: 1\r\n    max-start: 0\r\n```\r\n\r\n**Output**\r\nNil.\r\n\r\n**Expected behaviour**\r\nThis should flag several places where multiple lines exist.\r\n\r\nN.B The docs are inconsistent as to whether this format is correct/preferred or `empty-lines: {max: 0, max-end: 1, max-start: 0}. I tried both.\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/168", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/168/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/168/events", "html_url": "https://github.com/adrienverge/yamllint/issues/168", "id": 424644177, "node_id": "MDU6SXNzdWU0MjQ2NDQxNzc=", "number": 168, "title": "Read list of rules directly from disk", "user": {"login": "ChristianWeissCG", "id": 38951887, "node_id": "MDQ6VXNlcjM4OTUxODg3", "avatar_url": "https://avatars0.githubusercontent.com/u/38951887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristianWeissCG", "html_url": "https://github.com/ChristianWeissCG", "followers_url": "https://api.github.com/users/ChristianWeissCG/followers", "following_url": "https://api.github.com/users/ChristianWeissCG/following{/other_user}", "gists_url": "https://api.github.com/users/ChristianWeissCG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristianWeissCG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristianWeissCG/subscriptions", "organizations_url": "https://api.github.com/users/ChristianWeissCG/orgs", "repos_url": "https://api.github.com/users/ChristianWeissCG/repos", "events_url": "https://api.github.com/users/ChristianWeissCG/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristianWeissCG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-24T18:25:19Z", "updated_at": "2019-03-25T11:18:57Z", "closed_at": "2019-03-24T23:46:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing new rules for yamllint at the moment.\r\nInstead of a static definition in rules/__init_.py it would be cool if you can import dynamically from disk, and also read rule ID from rule file dynamically.\r\n\r\nA command line option to point yamllint to custom rule dir to import additional rules and rulesets (e.g. similar to 'relaxed') would make it easyer to have different rulesets for different projects (e.g im my CI/CD server).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/166", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/166/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/166/events", "html_url": "https://github.com/adrienverge/yamllint/issues/166", "id": 421078831, "node_id": "MDU6SXNzdWU0MjEwNzg4MzE=", "number": 166, "title": "Please help me with correct ruleset", "user": {"login": "gakhrejah", "id": 23295257, "node_id": "MDQ6VXNlcjIzMjk1MjU3", "avatar_url": "https://avatars2.githubusercontent.com/u/23295257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gakhrejah", "html_url": "https://github.com/gakhrejah", "followers_url": "https://api.github.com/users/gakhrejah/followers", "following_url": "https://api.github.com/users/gakhrejah/following{/other_user}", "gists_url": "https://api.github.com/users/gakhrejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/gakhrejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gakhrejah/subscriptions", "organizations_url": "https://api.github.com/users/gakhrejah/orgs", "repos_url": "https://api.github.com/users/gakhrejah/repos", "events_url": "https://api.github.com/users/gakhrejah/events{/privacy}", "received_events_url": "https://api.github.com/users/gakhrejah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-14T15:14:25Z", "updated_at": "2020-03-24T07:20:03Z", "closed_at": "2020-03-24T07:19:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nYamllint is a great utility.\r\nI need to lint my yaml files but i am getting the error of indentation .\r\nPlease find my rules set and yaml file attached.\r\nI need to keep indentation of my yaml file as \"2\" and it its there it should give me exit code as zero.\r\nIf the indentation of my yaml file is not \"2\" then it should give non zero exit code .\r\n\r\nPlease help me with the correct rule set. Please let me know if its possible or `not`\r\n\r\nThanks \r\n[yaml.zip](https://github.com/adrienverge/yamllint/files/2967080/yaml.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/165", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/165/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/165/events", "html_url": "https://github.com/adrienverge/yamllint/issues/165", "id": 409613797, "node_id": "MDU6SXNzdWU0MDk2MTM3OTc=", "number": 165, "title": "Python 3.7 deprecation warning causes failure in test_run_auto_output_without_tty_output", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-13T03:52:58Z", "updated_at": "2019-07-12T04:09:13Z", "closed_at": "2019-07-12T04:09:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a flaky error, occurring occasionally when I do builds on openSUSE build service, Tumbleweed rolling release.\r\n\r\n```\r\n[  139s] ======================================================================\r\n[  139s] FAIL: test_run_auto_output_without_tty_output (tests.test_cli.CommandLineTestCase)\r\n[  139s] ----------------------------------------------------------------------\r\n[  139s] Traceback (most recent call last):\r\n[  139s]   File \"/home/abuild/rpmbuild/BUILD/yamllint-1.14.0/tests/test_cli.py\", line 416, in test_run_auto_output_without_tty_output\r\n[  139s]     self.assertEqual(err, '')\r\n[  139s] AssertionError: \"/usr/lib64/python3.7/site-packages/yaml/[214 chars]):\\n\" != ''\r\n[  139s] - /usr/lib64/python3.7/site-packages/yaml/constructor.py:126: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n[  139s] -   if not isinstance(key, collections.Hashable):\r\n[  139s] \r\n```\r\n\r\nIt can be seen currently on https://build.opensuse.org/package/show/home:jayvdb:coala:python3-bears/python-yamllint , but OBS doesnt keep old logs so it may turn green on the next build.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/162", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/162/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/162/events", "html_url": "https://github.com/adrienverge/yamllint/issues/162", "id": 405658122, "node_id": "MDU6SXNzdWU0MDU2NTgxMjI=", "number": 162, "title": "Feature request: Add only configuration option", "user": {"login": "legendetm", "id": 1165749, "node_id": "MDQ6VXNlcjExNjU3NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1165749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/legendetm", "html_url": "https://github.com/legendetm", "followers_url": "https://api.github.com/users/legendetm/followers", "following_url": "https://api.github.com/users/legendetm/following{/other_user}", "gists_url": "https://api.github.com/users/legendetm/gists{/gist_id}", "starred_url": "https://api.github.com/users/legendetm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/legendetm/subscriptions", "organizations_url": "https://api.github.com/users/legendetm/orgs", "repos_url": "https://api.github.com/users/legendetm/repos", "events_url": "https://api.github.com/users/legendetm/events{/privacy}", "received_events_url": "https://api.github.com/users/legendetm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-01T11:16:14Z", "updated_at": "2019-11-05T14:42:41Z", "closed_at": "2019-11-05T14:42:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add option **only** similarly to **ignore** so we can list files or directories where the rule should be forced.\r\n\r\nWe are forcing key-ordering to only subset of YAML files, for this we have to *ignore* all other files/directories, to force key-ordering, for these YAML files.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/161", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/161/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/161/events", "html_url": "https://github.com/adrienverge/yamllint/issues/161", "id": 404461119, "node_id": "MDU6SXNzdWU0MDQ0NjExMTk=", "number": 161, "title": "Support YAML front-matter in markdown files", "user": {"login": "Mr0grog", "id": 74178, "node_id": "MDQ6VXNlcjc0MTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/74178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mr0grog", "html_url": "https://github.com/Mr0grog", "followers_url": "https://api.github.com/users/Mr0grog/followers", "following_url": "https://api.github.com/users/Mr0grog/following{/other_user}", "gists_url": "https://api.github.com/users/Mr0grog/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mr0grog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mr0grog/subscriptions", "organizations_url": "https://api.github.com/users/Mr0grog/orgs", "repos_url": "https://api.github.com/users/Mr0grog/repos", "events_url": "https://api.github.com/users/Mr0grog/events{/privacy}", "received_events_url": "https://api.github.com/users/Mr0grog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-29T19:57:00Z", "updated_at": "2019-01-29T21:41:23Z", "closed_at": "2019-01-29T21:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "A lot of static site generators use Markdown files, but add a YAML block at the top with metadata. Do you have any interest in having built-in support for linting those metadata blocks when `*.md` files are encountered? (I know I can do this manually by parsing the file myself and calling `yamllint.linter.run()`, but it\u2019d be nice if the CLI supported it.)\r\n\r\nI\u2019d be happy to work on a PR adding this to the `cli` module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/159", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/159/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/159/events", "html_url": "https://github.com/adrienverge/yamllint/issues/159", "id": 399890010, "node_id": "MDU6SXNzdWUzOTk4OTAwMTA=", "number": 159, "title": "Feature request: read from standard input", "user": {"login": "miguelbarao", "id": 6104818, "node_id": "MDQ6VXNlcjYxMDQ4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6104818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelbarao", "html_url": "https://github.com/miguelbarao", "followers_url": "https://api.github.com/users/miguelbarao/followers", "following_url": "https://api.github.com/users/miguelbarao/following{/other_user}", "gists_url": "https://api.github.com/users/miguelbarao/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelbarao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelbarao/subscriptions", "organizations_url": "https://api.github.com/users/miguelbarao/orgs", "repos_url": "https://api.github.com/users/miguelbarao/repos", "events_url": "https://api.github.com/users/miguelbarao/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelbarao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T16:26:52Z", "updated_at": "2019-01-16T16:38:07Z", "closed_at": "2019-01-16T16:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nI'm checking yaml files generated on the fly by other programs that print yaml to the standard output.\r\n\r\nIt would be awesome if I could pipe the other programs to yamllint, something like\r\n\r\n```bash\r\nprints_yaml_to_stdout | yamllint --\r\n```\r\n\r\nCurrently I have to save the outputs to a file to be able to check them.\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/158", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/158/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/158/events", "html_url": "https://github.com/adrienverge/yamllint/issues/158", "id": 399086605, "node_id": "MDU6SXNzdWUzOTkwODY2MDU=", "number": 158, "title": "false positive truthy failure on travis files", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-01-14T21:44:30Z", "updated_at": "2020-04-08T10:26:22Z", "closed_at": "2020-04-08T10:26:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that yamllint chokes complaining about not using truthy values for travis **keys**.\r\n\r\nJust to be clear: this is about **keys not values with name \"on\".**. When used as a key, on have a total different sense than the \"on\" as a value, which I find acceptable to trigger a warning.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/155", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/155/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/155/events", "html_url": "https://github.com/adrienverge/yamllint/issues/155", "id": 396271734, "node_id": "MDU6SXNzdWUzOTYyNzE3MzQ=", "number": 155, "title": "Encourage double quotes", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-06T16:18:13Z", "updated_at": "2019-08-27T20:40:53Z", "closed_at": "2019-08-27T20:40:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When quotes are used in YAML files, it is better to use double than single. Because double escape syntax matches industry conventions (backslash), while single surprisingly does not.\r\n\r\nSo single quoting can lead to downstream problems when the author is not being exceptionally careful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/150", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/150/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/150/events", "html_url": "https://github.com/adrienverge/yamllint/issues/150", "id": 385443444, "node_id": "MDU6SXNzdWUzODU0NDM0NDQ=", "number": 150, "title": "Feature suggestion: allow other truthy convention", "user": {"login": "roperto", "id": 3672494, "node_id": "MDQ6VXNlcjM2NzI0OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3672494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roperto", "html_url": "https://github.com/roperto", "followers_url": "https://api.github.com/users/roperto/followers", "following_url": "https://api.github.com/users/roperto/following{/other_user}", "gists_url": "https://api.github.com/users/roperto/gists{/gist_id}", "starred_url": "https://api.github.com/users/roperto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roperto/subscriptions", "organizations_url": "https://api.github.com/users/roperto/orgs", "repos_url": "https://api.github.com/users/roperto/repos", "events_url": "https://api.github.com/users/roperto/events{/privacy}", "received_events_url": "https://api.github.com/users/roperto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-11-28T20:28:17Z", "updated_at": "2019-06-06T07:59:56Z", "closed_at": "2019-06-06T07:59:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to use yes/no instead of true/false as this seem to be used more often in Ansible.\r\n\r\nI can try to make a PR if the maintainer thinks it could be a nice addition and can review the code.\r\n\r\nAny thoughs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/146", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/146/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/146/events", "html_url": "https://github.com/adrienverge/yamllint/issues/146", "id": 383714853, "node_id": "MDU6SXNzdWUzODM3MTQ4NTM=", "number": 146, "title": "line-length does not work with Unicode characters", "user": {"login": "yggi49", "id": 540704, "node_id": "MDQ6VXNlcjU0MDcwNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/540704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yggi49", "html_url": "https://github.com/yggi49", "followers_url": "https://api.github.com/users/yggi49/followers", "following_url": "https://api.github.com/users/yggi49/following{/other_user}", "gists_url": "https://api.github.com/users/yggi49/gists{/gist_id}", "starred_url": "https://api.github.com/users/yggi49/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yggi49/subscriptions", "organizations_url": "https://api.github.com/users/yggi49/orgs", "repos_url": "https://api.github.com/users/yggi49/repos", "events_url": "https://api.github.com/users/yggi49/events{/privacy}", "received_events_url": "https://api.github.com/users/yggi49/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-23T06:30:18Z", "updated_at": "2018-11-23T14:17:27Z", "closed_at": "2018-11-23T13:19:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following UTF-8-encoded document:\r\n\r\n```yaml\r\n---\r\n# This is a test to check if \u201cline-length\u201d works nice with unicode characters\r\ncheck: 1\r\nfoo: 'This is another quick test to check behavior with \u201cunicode characters\u201d'\r\n```\r\n\r\nNote that the comment in line two as well as the string in line four both contain a Unicode left double quotation mark (U+201C) and a Unicode right double quotation mark (U+201D).  Both lines are 77\u00a0characters long, yet yamllint reports \u201cline too long\u201d errors:\r\n\r\n```console\r\n% yamllint test.yml\r\ntest.yml\r\n  2:81      error    line too long (81 > 80 characters)  (line-length)\r\n  4:81      error    line too long (81 > 80 characters)  (line-length)\r\n% yamllint --version\r\nyamllint 1.13.0\r\n```\r\n\r\nIt seems as if yamllint counts bytes, not characters, as each Unicode quotation character takes up three bytes when UTF-8 encoded.\r\n\r\n_Note: this occurs when running yamllint in a Python\u00a02 environment.  I have not tested it with Python\u00a03, which for my specific use case is not an option yet._", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/143", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/143/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/143/events", "html_url": "https://github.com/adrienverge/yamllint/issues/143", "id": 380800056, "node_id": "MDU6SXNzdWUzODA4MDAwNTY=", "number": 143, "title": "Respect PY_COLORS variable", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-14T17:10:44Z", "updated_at": "2020-03-24T07:23:45Z", "closed_at": "2020-03-24T07:23:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Multiple python tools do rely on PY_COLORS variable to decide if they should enable coloring or not.\r\n\r\nWhen not defined tools would assume its current behaviour (likely auto-detection of interactive tty).\r\nWhen set to \"1\" it would act as force colors (ignores detections)\r\nWhen set to \"0\" it would force not to use colors.\r\n\r\nAlso, please make a new release as is impossible to make the last release colored on CI due to the wrong conditions: cannot bypass tty detection, and CI does not have an interactive tty.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/142", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/142/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/142/events", "html_url": "https://github.com/adrienverge/yamllint/issues/142", "id": 379562183, "node_id": "MDU6SXNzdWUzNzk1NjIxODM=", "number": 142, "title": "issue after os upgrade - truthy.py\", line 88, - AttributeError: module 'yaml' has no attribute 'tokens'", "user": {"login": "slieberth", "id": 8720524, "node_id": "MDQ6VXNlcjg3MjA1MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8720524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slieberth", "html_url": "https://github.com/slieberth", "followers_url": "https://api.github.com/users/slieberth/followers", "following_url": "https://api.github.com/users/slieberth/following{/other_user}", "gists_url": "https://api.github.com/users/slieberth/gists{/gist_id}", "starred_url": "https://api.github.com/users/slieberth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slieberth/subscriptions", "organizations_url": "https://api.github.com/users/slieberth/orgs", "repos_url": "https://api.github.com/users/slieberth/repos", "events_url": "https://api.github.com/users/slieberth/events{/privacy}", "received_events_url": "https://api.github.com/users/slieberth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-11T20:54:04Z", "updated_at": "2018-11-13T12:46:05Z", "closed_at": "2018-11-13T12:46:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nthanks for providing yamllint, great tool!\r\n\r\nI have integrated yamllint into a webtool, which verifies yaml runbooks. I have a working code, which I am using on multiple hosts (MAC, Ubuntu) ... \r\n\r\nNow ... after upgrade to ubuntu 18.4 on one server I get now an error ... after elaborating for two hours by myself, I dare to ask for support here in this forum:\r\n\r\nerror message:\r\n  File \"/teHttpServer.py\", line 1013, in checkYamlFile\r\n    yamlErrors = list(gen)\r\n  File \"/usr/local/lib/python3.6/dist-packages/yamllint/linter.py\", line 196, in _run\r\n    for problem in get_cosmetic_problems(buffer, conf, filepath):\r\n  File \"/usr/local/lib/python3.6/dist-packages/yamllint/linter.py\", line 140, in get_cosmetic_problems\r\n    context[rule.ID]):\r\n  File \"/usr/local/lib/python3.6/dist-packages/yamllint/rules/truthy.py\", line 88, in check\r\n    if isinstance(token, yaml.tokens.ScalarToken):\r\nAttributeError: module 'yaml' has no attribute 'tokens'\r\n\r\ncode is pretty following the example (it has worked ... ):\r\n \r\n                    conf = YamlLintConfig('extends: default')\r\n                    f = open(preProcessorResultFilename)\r\n                    gen = linter.run(f, conf)    <--- this line is triggering the error\r\n\r\nI think this is a ubuntu18.4/python3.6 module compatibility issue, do you have an idea, what the problem could be?\r\n\r\nthanks Stefan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/137", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/137/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/137/events", "html_url": "https://github.com/adrienverge/yamllint/issues/137", "id": 370090611, "node_id": "MDU6SXNzdWUzNzAwOTA2MTE=", "number": 137, "title": "Docs for quoted-string missing", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-15T10:08:57Z", "updated_at": "2018-10-15T12:24:28Z", "closed_at": "2018-10-15T12:06:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Upgrading to version 1.12.0, I see there's a new rule `quoted-string` in the changelog, but it doesn't appear in the docs at: https://yamllint.readthedocs.io/en/stable/rules.html . Perhaps the docs build is broken - I've experienced docs builds failing silently on readthedocs before.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/136", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/136/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/136/events", "html_url": "https://github.com/adrienverge/yamllint/issues/136", "id": 370018209, "node_id": "MDU6SXNzdWUzNzAwMTgyMDk=", "number": 136, "title": "\"quote-type: any\" does not allow numbers or booleans", "user": {"login": "thorstenkampe", "id": 475462, "node_id": "MDQ6VXNlcjQ3NTQ2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/475462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thorstenkampe", "html_url": "https://github.com/thorstenkampe", "followers_url": "https://api.github.com/users/thorstenkampe/followers", "following_url": "https://api.github.com/users/thorstenkampe/following{/other_user}", "gists_url": "https://api.github.com/users/thorstenkampe/gists{/gist_id}", "starred_url": "https://api.github.com/users/thorstenkampe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thorstenkampe/subscriptions", "organizations_url": "https://api.github.com/users/thorstenkampe/orgs", "repos_url": "https://api.github.com/users/thorstenkampe/repos", "events_url": "https://api.github.com/users/thorstenkampe/events{/privacy}", "received_events_url": "https://api.github.com/users/thorstenkampe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-15T06:35:22Z", "updated_at": "2018-10-18T12:03:33Z", "closed_at": "2018-10-17T08:18:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the documentation:\r\n> Examples\r\n>  With quoted-strings: {quote-type: any}\r\n>  the following code snippet would PASS:\r\n>\r\n>  foo: \"bar\"\r\n>  bar: 'foo'\r\n>  number: 123\r\n>  boolean: true\r\n\r\nBut in reality:\r\n```\r\n3:9       error    string value is not quoted with any quotes  (quoted-strings)\r\n4:10      error    string value is not quoted with any quotes  (quoted-strings)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/135", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/135/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/135/events", "html_url": "https://github.com/adrienverge/yamllint/issues/135", "id": 370013600, "node_id": "MDU6SXNzdWUzNzAwMTM2MDA=", "number": 135, "title": "make document-start and document-end markers optional", "user": {"login": "thorstenkampe", "id": 475462, "node_id": "MDQ6VXNlcjQ3NTQ2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/475462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thorstenkampe", "html_url": "https://github.com/thorstenkampe", "followers_url": "https://api.github.com/users/thorstenkampe/followers", "following_url": "https://api.github.com/users/thorstenkampe/following{/other_user}", "gists_url": "https://api.github.com/users/thorstenkampe/gists{/gist_id}", "starred_url": "https://api.github.com/users/thorstenkampe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thorstenkampe/subscriptions", "organizations_url": "https://api.github.com/users/thorstenkampe/orgs", "repos_url": "https://api.github.com/users/thorstenkampe/repos", "events_url": "https://api.github.com/users/thorstenkampe/events{/privacy}", "received_events_url": "https://api.github.com/users/thorstenkampe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-15T06:16:12Z", "updated_at": "2018-10-15T06:23:32Z", "closed_at": "2018-10-15T06:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment document-start and document-end checking is not flexible: either there has to be a start or end marker or it is not allowed at all. In my opinion the standard case is: document start indicator is allowed but if there is none it's also fine. There is no way to set this in the configuration file at the moment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/134", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/134/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/134/events", "html_url": "https://github.com/adrienverge/yamllint/issues/134", "id": 369892965, "node_id": "MDU6SXNzdWUzNjk4OTI5NjU=", "number": 134, "title": "Invalid duplicate key << error", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-14T11:24:30Z", "updated_at": "2018-10-14T11:25:31Z", "closed_at": "2018-10-14T11:25:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the following yaml (.gitlab-ci.yml), `<<` is not a duplicate key.  It merges the mappings.\r\n\r\n```yaml\r\n.test_env: &test_env\r\n  stage: test\r\n  cache:\r\n    key: test\r\n    paths:\r\n      - .cache/pip\r\n\r\n.collect_artifacts: &collect_artifacts\r\n  artifacts:\r\n    name: \"$CI_JOB_NAME-$CI_COMMIT_REF_SLUG\"\r\n    paths:\r\n      - public\r\n\r\nbuild:\r\n  <<: *test_env\r\n  <<: *collect_artifacts\r\n  stage: build\r\n  before_script:\r\n    - pip install -r requirements.txt\r\n  script:\r\n    - ./.ci/build.sh\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/133", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/133/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/133/events", "html_url": "https://github.com/adrienverge/yamllint/issues/133", "id": 369103999, "node_id": "MDU6SXNzdWUzNjkxMDM5OTk=", "number": 133, "title": "The rule for using quotes only when they are really needed", "user": {"login": "scherebedov", "id": 10794912, "node_id": "MDQ6VXNlcjEwNzk0OTEy", "avatar_url": "https://avatars1.githubusercontent.com/u/10794912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scherebedov", "html_url": "https://github.com/scherebedov", "followers_url": "https://api.github.com/users/scherebedov/followers", "following_url": "https://api.github.com/users/scherebedov/following{/other_user}", "gists_url": "https://api.github.com/users/scherebedov/gists{/gist_id}", "starred_url": "https://api.github.com/users/scherebedov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scherebedov/subscriptions", "organizations_url": "https://api.github.com/users/scherebedov/orgs", "repos_url": "https://api.github.com/users/scherebedov/repos", "events_url": "https://api.github.com/users/scherebedov/events{/privacy}", "received_events_url": "https://api.github.com/users/scherebedov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-10-11T12:45:41Z", "updated_at": "2020-03-24T07:07:02Z", "closed_at": "2020-03-24T07:07:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to make a rule to use quotes only when they are really needed?\r\nLike a [this](https://stackoverflow.com/questions/19109912/do-i-need-quotes-for-strings-in-yaml?answertab=votes#tab-top) in answer.\r\nThank's.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/132", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/132/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/132/events", "html_url": "https://github.com/adrienverge/yamllint/issues/132", "id": 367613232, "node_id": "MDU6SXNzdWUzNjc2MTMyMzI=", "number": 132, "title": "Support for yaml files with multiple \"documents\"", "user": {"login": "dims", "id": 23304, "node_id": "MDQ6VXNlcjIzMzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/23304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dims", "html_url": "https://github.com/dims", "followers_url": "https://api.github.com/users/dims/followers", "following_url": "https://api.github.com/users/dims/following{/other_user}", "gists_url": "https://api.github.com/users/dims/gists{/gist_id}", "starred_url": "https://api.github.com/users/dims/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dims/subscriptions", "organizations_url": "https://api.github.com/users/dims/orgs", "repos_url": "https://api.github.com/users/dims/repos", "events_url": "https://api.github.com/users/dims/events{/privacy}", "received_events_url": "https://api.github.com/users/dims/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-08T01:06:47Z", "updated_at": "2019-09-05T09:30:06Z", "closed_at": "2018-10-08T07:55:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Kubernetes uses yaml files with multiple documents using the `---` as a separator. Looks like this is supported by the spec too [1]. Please see examples in [2].\r\n\r\nAny chance we can enhance yamllint to work with such files?\r\n\r\n[1] http://yaml.org/spec/1.2/spec.html#id2800132\r\n[2] https://cs.k8s.io/?q=%5E---&i=nope&files=.*%5C.yaml&repos=kubernetes/kubernetes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/128", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/128/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/128/events", "html_url": "https://github.com/adrienverge/yamllint/issues/128", "id": 355528511, "node_id": "MDU6SXNzdWUzNTU1Mjg1MTE=", "number": 128, "title": "Can't ignore \"syntax error\" with disable (jinja in yaml files) ", "user": {"login": "arthurlogilab", "id": 445200, "node_id": "MDQ6VXNlcjQ0NTIwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/445200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurlogilab", "html_url": "https://github.com/arthurlogilab", "followers_url": "https://api.github.com/users/arthurlogilab/followers", "following_url": "https://api.github.com/users/arthurlogilab/following{/other_user}", "gists_url": "https://api.github.com/users/arthurlogilab/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurlogilab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurlogilab/subscriptions", "organizations_url": "https://api.github.com/users/arthurlogilab/orgs", "repos_url": "https://api.github.com/users/arthurlogilab/repos", "events_url": "https://api.github.com/users/arthurlogilab/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurlogilab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-30T10:44:33Z", "updated_at": "2018-08-30T11:58:23Z", "closed_at": "2018-08-30T11:58:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "On a yaml file that contains a tiny bit of jinja2, I would like to use yamllint but disable some lines \r\n \r\ntest.yml \r\n```\r\n{% set var = 'test' %}\r\n- just: write some\r\n- yaml:\r\n  - [here, and]\r\n  - {it: updates, in: real-time}\r\n```\r\n\r\nI get : \r\n\r\n```\r\ntest.yml:1:2: [error] syntax error: found character '%' that cannot start any token\r\n```\r\n\r\nI've tried various combinations of https://yamllint.readthedocs.io/en/stable/disable_with_comments.html without success. \r\n\r\nOne thing that suprises me is that on some files, when I get this error on the first line, yamllint manages to find errors or warnings on other lines. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/127", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/127/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/127/events", "html_url": "https://github.com/adrienverge/yamllint/issues/127", "id": 350264440, "node_id": "MDU6SXNzdWUzNTAyNjQ0NDA=", "number": 127, "title": "Difficulty installing yamllint in Python 3", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-14T03:03:38Z", "updated_at": "2018-08-14T07:47:43Z", "closed_at": "2018-08-14T07:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I have Python 3 installed, pip3 has trouble finding yamllint v1.11.1 in PyPI:\r\n\r\n```console\r\n$ pip3 install -r requirements.txt \r\nCollecting yamllint==1.11.1 (from -r requirements.txt (line 1))\r\n  Could not find any downloads that satisfy the requirement yamllint==1.11.1 (from -r requirements.txt (line 1))\r\n  No distributions at all found for yamllint==1.11.1 (from -r requirements.txt (line 1))\r\n```\r\n\r\nWhat can we do to fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/126", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/126/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/126/events", "html_url": "https://github.com/adrienverge/yamllint/issues/126", "id": 350259162, "node_id": "MDU6SXNzdWUzNTAyNTkxNjI=", "number": 126, "title": "`yamllint .` not recursive", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-14T02:31:22Z", "updated_at": "2018-10-17T08:30:37Z", "closed_at": "2018-10-17T08:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running `yamllint .` fails to find and lint file paths like `./examples/fewer/tonixxx.yaml`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/125", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/125/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/125/events", "html_url": "https://github.com/adrienverge/yamllint/issues/125", "id": 349889475, "node_id": "MDU6SXNzdWUzNDk4ODk0NzU=", "number": 125, "title": "Integrate with .gitignore's", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-13T05:09:57Z", "updated_at": "2019-08-29T15:11:15Z", "closed_at": "2019-08-27T20:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Automatically exclude file paths ignored in version control, eg .gitignore", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/124", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/124/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/124/events", "html_url": "https://github.com/adrienverge/yamllint/issues/124", "id": 349887018, "node_id": "MDU6SXNzdWUzNDk4ODcwMTg=", "number": 124, "title": "Lint .yamllint", "user": {"login": "mcandre", "id": 5316, "node_id": "MDQ6VXNlcjUzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcandre", "html_url": "https://github.com/mcandre", "followers_url": "https://api.github.com/users/mcandre/followers", "following_url": "https://api.github.com/users/mcandre/following{/other_user}", "gists_url": "https://api.github.com/users/mcandre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcandre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcandre/subscriptions", "organizations_url": "https://api.github.com/users/mcandre/orgs", "repos_url": "https://api.github.com/users/mcandre/repos", "events_url": "https://api.github.com/users/mcandre/events{/privacy}", "received_events_url": "https://api.github.com/users/mcandre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-13T04:51:44Z", "updated_at": "2019-08-27T20:42:44Z", "closed_at": "2019-08-27T20:42:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Include any `.yamllint` children in results when yamllint'ing file paths.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/122", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/122/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/122/events", "html_url": "https://github.com/adrienverge/yamllint/issues/122", "id": 342735682, "node_id": "MDU6SXNzdWUzNDI3MzU2ODI=", "number": 122, "title": "`find_files_recursively` is not recursive at all", "user": {"login": "lwille", "id": 175639, "node_id": "MDQ6VXNlcjE3NTYzOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/175639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwille", "html_url": "https://github.com/lwille", "followers_url": "https://api.github.com/users/lwille/followers", "following_url": "https://api.github.com/users/lwille/following{/other_user}", "gists_url": "https://api.github.com/users/lwille/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwille/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwille/subscriptions", "organizations_url": "https://api.github.com/users/lwille/orgs", "repos_url": "https://api.github.com/users/lwille/repos", "events_url": "https://api.github.com/users/lwille/events{/privacy}", "received_events_url": "https://api.github.com/users/lwille/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-19T13:47:43Z", "updated_at": "2018-07-19T14:15:44Z", "closed_at": "2018-07-19T14:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "From all I understand about programming, the `find_files_recursively` is not recursive: It's not calling itself. It only goes through a list of paths and, if there is a directory, uses `os.walk` to read it. It does not call itself with the list of directories returned by `os.walk`.\r\n\r\nhttps://github.com/adrienverge/yamllint/blob/e4e99f0aba5bc894712a720d8516db556e48acf1/yamllint/cli.py#L30-L38\r\n\r\nThis might also be a reason for #111.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/120", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/120/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/120/events", "html_url": "https://github.com/adrienverge/yamllint/issues/120", "id": 338170944, "node_id": "MDU6SXNzdWUzMzgxNzA5NDQ=", "number": 120, "title": "Yamllint install error (docker)", "user": {"login": "PaulSka", "id": 1415425, "node_id": "MDQ6VXNlcjE0MTU0MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1415425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulSka", "html_url": "https://github.com/PaulSka", "followers_url": "https://api.github.com/users/PaulSka/followers", "following_url": "https://api.github.com/users/PaulSka/following{/other_user}", "gists_url": "https://api.github.com/users/PaulSka/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulSka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulSka/subscriptions", "organizations_url": "https://api.github.com/users/PaulSka/orgs", "repos_url": "https://api.github.com/users/PaulSka/repos", "events_url": "https://api.github.com/users/PaulSka/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulSka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-04T08:05:37Z", "updated_at": "2019-04-25T13:07:12Z", "closed_at": "2019-04-25T13:07:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWith latest python image, yamllint return error on install.\r\n\r\nStep for reproduce\r\n\r\n```\r\ndocker run --rm -it python:latest /bin/bash\r\npip install yamllint\r\n```\r\n\r\nError logs\r\n\r\n```\r\nCollecting yamllint\r\n  Using cached https://files.pythonhosted.org/packages/87/ca/9866f1c49301efb1f9c3b03eb879a95611e71dd56f73d2d45d537a5e1518/yamllint-1.11.1-py2.py3-none-any.whl\r\nRequirement already satisfied: pathspec>=0.5.3 in /usr/local/lib/python3.7/site-packages (from yamllint) (0.5.6)\r\nCollecting pyyaml (from yamllint)\r\n  Using cached https://files.pythonhosted.org/packages/4a/85/db5a2df477072b2902b0eb892feb37d88ac635d36245a72a6a69b23b383a/PyYAML-3.12.tar.gz\r\nBuilding wheels for collected packages: pyyaml\r\n  Running setup.py bdist_wheel for pyyaml ... error\r\n  Complete output from command /usr/local/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-caj7yl66/pyyaml/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /tmp/pip-wheel-yeuqblbm --python-tag cp37:\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-3.7\r\n  creating build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/serializer.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/error.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/__init__.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/resolver.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/reader.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/events.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/representer.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/composer.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/cyaml.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/constructor.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/tokens.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/nodes.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/emitter.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/loader.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/dumper.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/parser.py -> build/lib.linux-x86_64-3.7/yaml\r\n  copying lib3/yaml/scanner.py -> build/lib.linux-x86_64-3.7/yaml\r\n  running build_ext\r\n  creating build/temp.linux-x86_64-3.7\r\n  checking if libyaml is compilable\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/usr/local/include/python3.7m -c build/temp.linux-x86_64-3.7/check_libyaml.c -o build/temp.linux-x86_64-3.7/check_libyaml.o\r\n  checking if libyaml is linkable\r\n  gcc -pthread build/temp.linux-x86_64-3.7/check_libyaml.o -L/usr/local/lib -lyaml -o build/temp.linux-x86_64-3.7/check_libyaml\r\n  building '_yaml' extension\r\n  creating build/temp.linux-x86_64-3.7/ext\r\n  gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/usr/local/include/python3.7m -c ext/_yaml.c -o build/temp.linux-x86_64-3.7/ext/_yaml.o\r\n  In file included from ext/_yaml.c:271:0:\r\n  ext/_yaml.h:10:0: warning: \"PyString_CheckExact\" redefined\r\n   #define PyString_CheckExact PyBytes_CheckExact\r\n  \r\n  ext/_yaml.c:139:0: note: this is the location of the previous definition\r\n     #define PyString_CheckExact          PyUnicode_CheckExact\r\n  \r\n  ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_get_version_string\u2019:\r\n  ext/_yaml.c:1410:17: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n     __pyx_v_value = yaml_get_version_string();\r\n                   ^\r\n  ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_7CParser___init__\u2019:\r\n  ext/_yaml.c:2577:52: warning: passing argument 2 of \u2018yaml_parser_set_input\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\r\n       yaml_parser_set_input((&__pyx_v_self->parser), __pyx_f_5_yaml_input_handler, ((void *)__pyx_v_self));\r\n                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:1367:1: note: expected \u2018int (*)(void *, unsigned char *, size_t,  size_t *) {aka int (*)(void *, unsigned char *, long unsigned int,  long unsigned int *)}\u2019 but argument is of type \u2018int (*)(void *, char *, size_t,  size_t *) {aka int (*)(void *, char *, long unsigned int,  long unsigned int *)}\u2019\r\n   yaml_parser_set_input(yaml_parser_t *parser,\r\n   ^~~~~~~~~~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:79:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/bytesobject.h:87:31: warning: pointer targets in passing argument 2 of \u2018yaml_parser_set_input_string\u2019 differ in signedness [-Wpointer-sign]\r\n   #define PyBytes_AS_STRING(op) (assert(PyBytes_Check(op)), \\\r\n                                 ^\r\n  ext/_yaml.h:11:29: note: in expansion of macro \u2018PyBytes_AS_STRING\u2019\r\n   #define PyString_AS_STRING  PyBytes_AS_STRING\r\n                               ^~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:2818:59: note: in expansion of macro \u2018PyString_AS_STRING\u2019\r\n       yaml_parser_set_input_string((&__pyx_v_self->parser), PyString_AS_STRING(__pyx_v_stream), PyString_GET_SIZE(__pyx_v_stream));\r\n                                                             ^~~~~~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:1341:1: note: expected \u2018const unsigned char *\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_parser_set_input_string(yaml_parser_t *parser,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__token_to_object\u2019:\r\n  ext/_yaml.c:4572:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.tag_directive.handle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 417, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:4584:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.tag_directive.prefix); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 418, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:5444:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.alias.value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:5518:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.anchor.value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 451, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:5592:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.tag.handle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 454, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:5604:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.tag.suffix); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 455, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:5716:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_DecodeUTF8(__pyx_v_token->data.scalar.value, __pyx_v_token->data.scalar.length, ((char *)\"strict\")); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 460, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:1298:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF8(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__event_to_object\u2019:\r\n  ext/_yaml.c:7424:42: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_4 = PyUnicode_FromString(__pyx_v_tag_directive->handle); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 574, __pyx_L1_error)\r\n                                            ^~~~~~~~~~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:7436:42: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_4 = PyUnicode_FromString(__pyx_v_tag_directive->prefix); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 575, __pyx_L1_error)\r\n                                            ^~~~~~~~~~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:7655:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.alias.anchor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 586, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:7749:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.scalar.anchor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:7790:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.scalar.tag); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 594, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:7811:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_4 = PyUnicode_DecodeUTF8(__pyx_v_event->data.scalar.value, __pyx_v_event->data.scalar.length, ((char *)\"strict\")); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 595, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:1298:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF8(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:8179:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.sequence_start.anchor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 620, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:8220:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.sequence_start.tag); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 623, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:8449:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.mapping_start.anchor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 637, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:8490:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.mapping_start.tag); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 640, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_node\u2019:\r\n  ext/_yaml.c:10094:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_3 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.alias.anchor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 734, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:10378:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_6 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.scalar.anchor); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 750, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:10434:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_6 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.sequence_start.anchor); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 753, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:10490:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_6 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.mapping_start.anchor); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 756, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_scalar_node\u2019:\r\n  ext/_yaml.c:11109:36: warning: pointer targets in passing argument 1 of \u2018PyUnicode_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\r\n     __pyx_t_2 = PyUnicode_DecodeUTF8(__pyx_v_self->parsed_event.data.scalar.value, __pyx_v_self->parsed_event.data.scalar.length, ((char *)\"strict\")); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 791, __pyx_L1_error)\r\n                                      ^~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:1298:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF8(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:11310:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.scalar.tag); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 804, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_sequence_node\u2019:\r\n  ext/_yaml.c:11841:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_3 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.sequence_start.tag); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 837, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_mapping_node\u2019:\r\n  ext/_yaml.c:12435:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_3 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.mapping_start.tag); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~\r\n  In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                   from ext/_yaml.c:4:\r\n  /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n   PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                         ^~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_input_handler\u2019:\r\n  ext/_yaml.c:13141:87: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     __pyx_t_3 = (((__pyx_v_parser->stream_cache_len - __pyx_v_parser->stream_cache_pos) < __pyx_v_size) != 0);\r\n                                                                                         ^\r\n  ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_8CEmitter___init__\u2019:\r\n  ext/_yaml.c:13630:53: warning: passing argument 2 of \u2018yaml_emitter_set_output\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\r\n     yaml_emitter_set_output((&__pyx_v_self->emitter), __pyx_f_5_yaml_output_handler, ((void *)__pyx_v_self));\r\n                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:1829:1: note: expected \u2018int (*)(void *, unsigned char *, size_t) {aka int (*)(void *, unsigned char *, long unsigned int)}\u2019 but argument is of type \u2018int (*)(void *, char *, size_t) {aka int (*)(void *, char *, long unsigned int)}\u2019\r\n   yaml_emitter_set_output(yaml_emitter_t *emitter,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_8CEmitter__object_to_event\u2019:\r\n  ext/_yaml.c:15002:44: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\r\n           __pyx_v_tag_directives_end->handle = PyString_AS_STRING(__pyx_v_handle);\r\n                                              ^\r\n  ext/_yaml.c:15117:44: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\r\n           __pyx_v_tag_directives_end->prefix = PyString_AS_STRING(__pyx_v_prefix);\r\n                                              ^\r\n  ext/_yaml.c:15454:62: warning: pointer targets in passing argument 2 of \u2018yaml_alias_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = ((yaml_alias_event_initialize(__pyx_v_event, __pyx_v_anchor) == 0) != 0);\r\n                                                                ^~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:553:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_alias_event_initialize(yaml_event_t *event, yaml_char_t *anchor);\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:16169:63: warning: pointer targets in passing argument 2 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = ((yaml_scalar_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                 ^~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_scalar_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:16169:79: warning: pointer targets in passing argument 3 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = ((yaml_scalar_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                                 ^~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_scalar_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:16169:92: warning: pointer targets in passing argument 4 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = ((yaml_scalar_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                                              ^~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_scalar_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:16603:71: warning: pointer targets in passing argument 2 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_3 = ((yaml_sequence_start_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_sequence_style) == 0) != 0);\r\n                                                                         ^~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_sequence_start_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:16603:87: warning: pointer targets in passing argument 3 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_3 = ((yaml_sequence_start_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_sequence_style) == 0) != 0);\r\n                                                                                         ^~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_sequence_start_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:17037:70: warning: pointer targets in passing argument 2 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = ((yaml_mapping_start_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_mapping_style) == 0) != 0);\r\n                                                                        ^~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_mapping_start_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:17037:86: warning: pointer targets in passing argument 3 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = ((yaml_mapping_start_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_mapping_style) == 0) != 0);\r\n                                                                                        ^~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_mapping_start_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_8CEmitter_12serialize\u2019:\r\n  ext/_yaml.c:18516:42: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\r\n         __pyx_v_tag_directives_end->handle = PyString_AS_STRING(__pyx_v_handle);\r\n                                            ^\r\n  ext/_yaml.c:18631:42: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\r\n         __pyx_v_tag_directives_end->prefix = PyString_AS_STRING(__pyx_v_prefix);\r\n                                            ^\r\n  ext/_yaml.c: In function \u2018__pyx_f_5_yaml_8CEmitter__serialize_node\u2019:\r\n  ext/_yaml.c:19491:65: warning: pointer targets in passing argument 2 of \u2018yaml_alias_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = ((yaml_alias_event_initialize((&__pyx_v_event), __pyx_v_anchor) == 0) != 0);\r\n                                                                   ^~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:553:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_alias_event_initialize(yaml_event_t *event, yaml_char_t *anchor);\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:20240:68: warning: pointer targets in passing argument 2 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_scalar_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                      ^~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_scalar_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:20240:84: warning: pointer targets in passing argument 3 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_scalar_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                                      ^~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_scalar_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:20240:97: warning: pointer targets in passing argument 4 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_scalar_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                                                   ^~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_scalar_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:20605:76: warning: pointer targets in passing argument 2 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_sequence_start_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_sequence_style) == 0) != 0);\r\n                                                                              ^~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_sequence_start_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:20605:92: warning: pointer targets in passing argument 3 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_sequence_start_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_sequence_style) == 0) != 0);\r\n                                                                                              ^~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_sequence_start_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:21113:75: warning: pointer targets in passing argument 2 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_mapping_start_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_mapping_style) == 0) != 0);\r\n                                                                             ^~~~~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_mapping_start_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c:21113:91: warning: pointer targets in passing argument 3 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_mapping_start_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_mapping_style) == 0) != 0);\r\n                                                                                             ^~~~~~~~~~~\r\n  In file included from ext/_yaml.h:2:0,\r\n                   from ext/_yaml.c:271:\r\n  /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n   yaml_mapping_start_event_initialize(yaml_event_t *event,\r\n   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  ext/_yaml.c: In function \u2018__Pyx__ExceptionSave\u2019:\r\n  ext/_yaml.c:24143:19: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n       *type = tstate->exc_type;\r\n                     ^~\r\n  ext/_yaml.c:24144:20: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n       *value = tstate->exc_value;\r\n                      ^~\r\n  ext/_yaml.c:24145:17: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n       *tb = tstate->exc_traceback;\r\n                   ^~\r\n  ext/_yaml.c: In function \u2018__Pyx__ExceptionReset\u2019:\r\n  ext/_yaml.c:24152:22: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n       tmp_type = tstate->exc_type;\r\n                        ^~\r\n  ext/_yaml.c:24153:23: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n       tmp_value = tstate->exc_value;\r\n                         ^~\r\n  ext/_yaml.c:24154:20: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n       tmp_tb = tstate->exc_traceback;\r\n                      ^~\r\n  ext/_yaml.c:24155:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n       tstate->exc_type = type;\r\n             ^~\r\n  ext/_yaml.c:24156:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n       tstate->exc_value = value;\r\n             ^~\r\n  ext/_yaml.c:24157:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n       tstate->exc_traceback = tb;\r\n             ^~\r\n  ext/_yaml.c: In function \u2018__Pyx__GetException\u2019:\r\n  ext/_yaml.c:24212:22: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n       tmp_type = tstate->exc_type;\r\n                        ^~\r\n  ext/_yaml.c:24213:23: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n       tmp_value = tstate->exc_value;\r\n                         ^~\r\n  ext/_yaml.c:24214:20: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n       tmp_tb = tstate->exc_traceback;\r\n                      ^~\r\n  ext/_yaml.c:24215:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n       tstate->exc_type = local_type;\r\n             ^~\r\n  ext/_yaml.c:24216:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n       tstate->exc_value = local_value;\r\n             ^~\r\n  ext/_yaml.c:24217:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n       tstate->exc_traceback = local_tb;\r\n             ^~\r\n  error: command 'gcc' failed with exit status 1\r\n  \r\n  ----------------------------------------\r\n  Failed building wheel for pyyaml\r\n  Running setup.py clean for pyyaml\r\nFailed to build pyyaml\r\nInstalling collected packages: pyyaml, yamllint\r\n  Running setup.py install for pyyaml ... error\r\n    Complete output from command /usr/local/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-caj7yl66/pyyaml/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-zwolby9m/install-record.txt --single-version-externally-managed --compile:\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.linux-x86_64-3.7\r\n    creating build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/serializer.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/error.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/__init__.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/resolver.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/reader.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/events.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/representer.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/composer.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/cyaml.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/constructor.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/tokens.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/nodes.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/emitter.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/loader.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/dumper.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/parser.py -> build/lib.linux-x86_64-3.7/yaml\r\n    copying lib3/yaml/scanner.py -> build/lib.linux-x86_64-3.7/yaml\r\n    running build_ext\r\n    creating build/temp.linux-x86_64-3.7\r\n    checking if libyaml is compilable\r\n    gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/usr/local/include/python3.7m -c build/temp.linux-x86_64-3.7/check_libyaml.c -o build/temp.linux-x86_64-3.7/check_libyaml.o\r\n    checking if libyaml is linkable\r\n    gcc -pthread build/temp.linux-x86_64-3.7/check_libyaml.o -L/usr/local/lib -lyaml -o build/temp.linux-x86_64-3.7/check_libyaml\r\n    building '_yaml' extension\r\n    creating build/temp.linux-x86_64-3.7/ext\r\n    gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/usr/local/include/python3.7m -c ext/_yaml.c -o build/temp.linux-x86_64-3.7/ext/_yaml.o\r\n    In file included from ext/_yaml.c:271:0:\r\n    ext/_yaml.h:10:0: warning: \"PyString_CheckExact\" redefined\r\n     #define PyString_CheckExact PyBytes_CheckExact\r\n    \r\n    ext/_yaml.c:139:0: note: this is the location of the previous definition\r\n       #define PyString_CheckExact          PyUnicode_CheckExact\r\n    \r\n    ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_get_version_string\u2019:\r\n    ext/_yaml.c:1410:17: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n       __pyx_v_value = yaml_get_version_string();\r\n                     ^\r\n    ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_7CParser___init__\u2019:\r\n    ext/_yaml.c:2577:52: warning: passing argument 2 of \u2018yaml_parser_set_input\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\r\n         yaml_parser_set_input((&__pyx_v_self->parser), __pyx_f_5_yaml_input_handler, ((void *)__pyx_v_self));\r\n                                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:1367:1: note: expected \u2018int (*)(void *, unsigned char *, size_t,  size_t *) {aka int (*)(void *, unsigned char *, long unsigned int,  long unsigned int *)}\u2019 but argument is of type \u2018int (*)(void *, char *, size_t,  size_t *) {aka int (*)(void *, char *, long unsigned int,  long unsigned int *)}\u2019\r\n     yaml_parser_set_input(yaml_parser_t *parser,\r\n     ^~~~~~~~~~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:79:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/bytesobject.h:87:31: warning: pointer targets in passing argument 2 of \u2018yaml_parser_set_input_string\u2019 differ in signedness [-Wpointer-sign]\r\n     #define PyBytes_AS_STRING(op) (assert(PyBytes_Check(op)), \\\r\n                                   ^\r\n    ext/_yaml.h:11:29: note: in expansion of macro \u2018PyBytes_AS_STRING\u2019\r\n     #define PyString_AS_STRING  PyBytes_AS_STRING\r\n                                 ^~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:2818:59: note: in expansion of macro \u2018PyString_AS_STRING\u2019\r\n         yaml_parser_set_input_string((&__pyx_v_self->parser), PyString_AS_STRING(__pyx_v_stream), PyString_GET_SIZE(__pyx_v_stream));\r\n                                                               ^~~~~~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:1341:1: note: expected \u2018const unsigned char *\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_parser_set_input_string(yaml_parser_t *parser,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__token_to_object\u2019:\r\n    ext/_yaml.c:4572:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.tag_directive.handle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 417, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:4584:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.tag_directive.prefix); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 418, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:5444:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.alias.value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:5518:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.anchor.value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 451, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:5592:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.tag.handle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 454, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:5604:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = PyUnicode_FromString(__pyx_v_token->data.tag.suffix); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 455, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:5716:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = PyUnicode_DecodeUTF8(__pyx_v_token->data.scalar.value, __pyx_v_token->data.scalar.length, ((char *)\"strict\")); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 460, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:1298:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF8(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__event_to_object\u2019:\r\n    ext/_yaml.c:7424:42: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n             __pyx_t_4 = PyUnicode_FromString(__pyx_v_tag_directive->handle); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 574, __pyx_L1_error)\r\n                                              ^~~~~~~~~~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:7436:42: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n             __pyx_t_4 = PyUnicode_FromString(__pyx_v_tag_directive->prefix); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 575, __pyx_L1_error)\r\n                                              ^~~~~~~~~~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:7655:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.alias.anchor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 586, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:7749:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.scalar.anchor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L1_error)\r\n                                            ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:7790:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.scalar.tag); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 594, __pyx_L1_error)\r\n                                            ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:7811:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_4 = PyUnicode_DecodeUTF8(__pyx_v_event->data.scalar.value, __pyx_v_event->data.scalar.length, ((char *)\"strict\")); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 595, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:1298:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF8(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:8179:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.sequence_start.anchor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 620, __pyx_L1_error)\r\n                                            ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:8220:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.sequence_start.tag); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 623, __pyx_L1_error)\r\n                                            ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:8449:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.mapping_start.anchor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 637, __pyx_L1_error)\r\n                                            ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:8490:40: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_4 = PyUnicode_FromString(__pyx_v_event->data.mapping_start.tag); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 640, __pyx_L1_error)\r\n                                            ^~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_node\u2019:\r\n    ext/_yaml.c:10094:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_3 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.alias.anchor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 734, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:10378:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_6 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.scalar.anchor); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 750, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:10434:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_6 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.sequence_start.anchor); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 753, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:10490:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_6 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.mapping_start.anchor); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 756, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_scalar_node\u2019:\r\n    ext/_yaml.c:11109:36: warning: pointer targets in passing argument 1 of \u2018PyUnicode_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\r\n       __pyx_t_2 = PyUnicode_DecodeUTF8(__pyx_v_self->parsed_event.data.scalar.value, __pyx_v_self->parsed_event.data.scalar.length, ((char *)\"strict\")); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 791, __pyx_L1_error)\r\n                                        ^~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:1298:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF8(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:11310:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.scalar.tag); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 804, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_sequence_node\u2019:\r\n    ext/_yaml.c:11841:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_3 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.sequence_start.tag); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 837, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_mapping_node\u2019:\r\n    ext/_yaml.c:12435:38: warning: pointer targets in passing argument 1 of \u2018PyUnicode_FromString\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_3 = PyUnicode_FromString(__pyx_v_self->parsed_event.data.mapping_start.tag); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)\r\n                                          ^~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.7m/Python.h:80:0,\r\n                     from ext/_yaml.c:4:\r\n    /usr/local/include/python3.7m/unicodeobject.h:702:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t * {aka unsigned char *}\u2019\r\n     PyAPI_FUNC(PyObject*) PyUnicode_FromString(\r\n                           ^~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_input_handler\u2019:\r\n    ext/_yaml.c:13141:87: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n       __pyx_t_3 = (((__pyx_v_parser->stream_cache_len - __pyx_v_parser->stream_cache_pos) < __pyx_v_size) != 0);\r\n                                                                                           ^\r\n    ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_8CEmitter___init__\u2019:\r\n    ext/_yaml.c:13630:53: warning: passing argument 2 of \u2018yaml_emitter_set_output\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\r\n       yaml_emitter_set_output((&__pyx_v_self->emitter), __pyx_f_5_yaml_output_handler, ((void *)__pyx_v_self));\r\n                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:1829:1: note: expected \u2018int (*)(void *, unsigned char *, size_t) {aka int (*)(void *, unsigned char *, long unsigned int)}\u2019 but argument is of type \u2018int (*)(void *, char *, size_t) {aka int (*)(void *, char *, long unsigned int)}\u2019\r\n     yaml_emitter_set_output(yaml_emitter_t *emitter,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_8CEmitter__object_to_event\u2019:\r\n    ext/_yaml.c:15002:44: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\r\n             __pyx_v_tag_directives_end->handle = PyString_AS_STRING(__pyx_v_handle);\r\n                                                ^\r\n    ext/_yaml.c:15117:44: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\r\n             __pyx_v_tag_directives_end->prefix = PyString_AS_STRING(__pyx_v_prefix);\r\n                                                ^\r\n    ext/_yaml.c:15454:62: warning: pointer targets in passing argument 2 of \u2018yaml_alias_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_alias_event_initialize(__pyx_v_event, __pyx_v_anchor) == 0) != 0);\r\n                                                                  ^~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:553:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_alias_event_initialize(yaml_event_t *event, yaml_char_t *anchor);\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:16169:63: warning: pointer targets in passing argument 2 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_scalar_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                   ^~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_scalar_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:16169:79: warning: pointer targets in passing argument 3 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_scalar_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                                   ^~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_scalar_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:16169:92: warning: pointer targets in passing argument 4 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_scalar_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                                                ^~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_scalar_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:16603:71: warning: pointer targets in passing argument 2 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_3 = ((yaml_sequence_start_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_sequence_style) == 0) != 0);\r\n                                                                           ^~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_sequence_start_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:16603:87: warning: pointer targets in passing argument 3 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_3 = ((yaml_sequence_start_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_sequence_style) == 0) != 0);\r\n                                                                                           ^~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_sequence_start_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:17037:70: warning: pointer targets in passing argument 2 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_mapping_start_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_mapping_style) == 0) != 0);\r\n                                                                          ^~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_mapping_start_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:17037:86: warning: pointer targets in passing argument 3 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_mapping_start_event_initialize(__pyx_v_event, __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_mapping_style) == 0) != 0);\r\n                                                                                          ^~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_mapping_start_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_8CEmitter_12serialize\u2019:\r\n    ext/_yaml.c:18516:42: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\r\n           __pyx_v_tag_directives_end->handle = PyString_AS_STRING(__pyx_v_handle);\r\n                                              ^\r\n    ext/_yaml.c:18631:42: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\r\n           __pyx_v_tag_directives_end->prefix = PyString_AS_STRING(__pyx_v_prefix);\r\n                                              ^\r\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_8CEmitter__serialize_node\u2019:\r\n    ext/_yaml.c:19491:65: warning: pointer targets in passing argument 2 of \u2018yaml_alias_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n         __pyx_t_2 = ((yaml_alias_event_initialize((&__pyx_v_event), __pyx_v_anchor) == 0) != 0);\r\n                                                                     ^~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:553:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_alias_event_initialize(yaml_event_t *event, yaml_char_t *anchor);\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:20240:68: warning: pointer targets in passing argument 2 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_2 = ((yaml_scalar_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                        ^~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_scalar_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:20240:84: warning: pointer targets in passing argument 3 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_2 = ((yaml_scalar_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                                        ^~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_scalar_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:20240:97: warning: pointer targets in passing argument 4 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_2 = ((yaml_scalar_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_value, __pyx_v_length, __pyx_v_plain_implicit, __pyx_v_quoted_implicit, __pyx_v_scalar_style) == 0) != 0);\r\n                                                                                                     ^~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_scalar_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:20605:76: warning: pointer targets in passing argument 2 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_2 = ((yaml_sequence_start_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_sequence_style) == 0) != 0);\r\n                                                                                ^~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_sequence_start_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:20605:92: warning: pointer targets in passing argument 3 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_2 = ((yaml_sequence_start_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_sequence_style) == 0) != 0);\r\n                                                                                                ^~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_sequence_start_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:21113:75: warning: pointer targets in passing argument 2 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_2 = ((yaml_mapping_start_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_mapping_style) == 0) != 0);\r\n                                                                               ^~~~~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_mapping_start_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c:21113:91: warning: pointer targets in passing argument 3 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\r\n           __pyx_t_2 = ((yaml_mapping_start_event_initialize((&__pyx_v_event), __pyx_v_anchor, __pyx_v_tag, __pyx_v_implicit, __pyx_v_mapping_style) == 0) != 0);\r\n                                                                                               ^~~~~~~~~~~\r\n    In file included from ext/_yaml.h:2:0,\r\n                     from ext/_yaml.c:271:\r\n    /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t * {aka unsigned char *}\u2019 but argument is of type \u2018char *\u2019\r\n     yaml_mapping_start_event_initialize(yaml_event_t *event,\r\n     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    ext/_yaml.c: In function \u2018__Pyx__ExceptionSave\u2019:\r\n    ext/_yaml.c:24143:19: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n         *type = tstate->exc_type;\r\n                       ^~\r\n    ext/_yaml.c:24144:20: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n         *value = tstate->exc_value;\r\n                        ^~\r\n    ext/_yaml.c:24145:17: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n         *tb = tstate->exc_traceback;\r\n                     ^~\r\n    ext/_yaml.c: In function \u2018__Pyx__ExceptionReset\u2019:\r\n    ext/_yaml.c:24152:22: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n         tmp_type = tstate->exc_type;\r\n                          ^~\r\n    ext/_yaml.c:24153:23: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n         tmp_value = tstate->exc_value;\r\n                           ^~\r\n    ext/_yaml.c:24154:20: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n         tmp_tb = tstate->exc_traceback;\r\n                        ^~\r\n    ext/_yaml.c:24155:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n         tstate->exc_type = type;\r\n               ^~\r\n    ext/_yaml.c:24156:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n         tstate->exc_value = value;\r\n               ^~\r\n    ext/_yaml.c:24157:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n         tstate->exc_traceback = tb;\r\n               ^~\r\n    ext/_yaml.c: In function \u2018__Pyx__GetException\u2019:\r\n    ext/_yaml.c:24212:22: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n         tmp_type = tstate->exc_type;\r\n                          ^~\r\n    ext/_yaml.c:24213:23: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n         tmp_value = tstate->exc_value;\r\n                           ^~\r\n    ext/_yaml.c:24214:20: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n         tmp_tb = tstate->exc_traceback;\r\n                        ^~\r\n    ext/_yaml.c:24215:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_type\u2019; did you mean \u2018curexc_type\u2019?\r\n         tstate->exc_type = local_type;\r\n               ^~\r\n    ext/_yaml.c:24216:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_value\u2019; did you mean \u2018curexc_value\u2019?\r\n         tstate->exc_value = local_value;\r\n               ^~\r\n    ext/_yaml.c:24217:11: error: \u2018PyThreadState {aka struct _ts}\u2019 has no member named \u2018exc_traceback\u2019; did you mean \u2018curexc_traceback\u2019?\r\n         tstate->exc_traceback = local_tb;\r\n               ^~\r\n    error: command 'gcc' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\nCommand \"/usr/local/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-caj7yl66/pyyaml/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-zwolby9m/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-install-caj7yl66/pyyaml/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/116", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/116/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/116/events", "html_url": "https://github.com/adrienverge/yamllint/issues/116", "id": 326799967, "node_id": "MDU6SXNzdWUzMjY3OTk5Njc=", "number": 116, "title": "comments rule with require-starting-space: true should special case shebang", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-27T09:01:48Z", "updated_at": "2019-01-14T08:40:32Z", "closed_at": "2019-01-14T08:40:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some yaml files might start with a shebang on their first line, e.g. ansible playbooks with `#!/usr/bin/env ansible-playbook`. The `require-starting-space` option currently complains about such lines, asking you to break them by inserting a space between `#` and `!`, it could special case them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/113", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/113/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/113/events", "html_url": "https://github.com/adrienverge/yamllint/issues/113", "id": 321570332, "node_id": "MDU6SXNzdWUzMjE1NzAzMzI=", "number": 113, "title": "pre-commit: yamllint configuration itself isn't checked", "user": {"login": "Lin-Buo-Ren", "id": 13408130, "node_id": "MDQ6VXNlcjEzNDA4MTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/13408130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lin-Buo-Ren", "html_url": "https://github.com/Lin-Buo-Ren", "followers_url": "https://api.github.com/users/Lin-Buo-Ren/followers", "following_url": "https://api.github.com/users/Lin-Buo-Ren/following{/other_user}", "gists_url": "https://api.github.com/users/Lin-Buo-Ren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lin-Buo-Ren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lin-Buo-Ren/subscriptions", "organizations_url": "https://api.github.com/users/Lin-Buo-Ren/orgs", "repos_url": "https://api.github.com/users/Lin-Buo-Ren/repos", "events_url": "https://api.github.com/users/Lin-Buo-Ren/events{/privacy}", "received_events_url": "https://api.github.com/users/Lin-Buo-Ren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-09T13:28:21Z", "updated_at": "2018-05-09T15:15:32Z", "closed_at": "2018-05-09T13:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, yamllint configuration isn't checked by the yamllint pre-commit hook as it doesn't have the `yaml` tag identified.  [The PR of adding it has been merged to the identify library](https://github.com/chriskuehl/identify/commit/0e675775d40cf7d4914100a77f9263910c0657a7#diff-ee09a186de2e9e07dbcbad2aac80cc79), until it becomes effective one can use the following pre-commit config to make it check yamllint configurations.\r\n\r\n```yaml\r\n%YAML 1.1\r\n---\r\n# pre-commit Framework Configuration\r\n# https://pre-commit.com/\r\nrepos:\r\n  - repo: https://github.com/adrienverge/yamllint.git\r\n    rev: master\r\n    hooks:\r\n      - id: yamllint\r\n        files: \\.(yaml|yml|yamllint)$\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/111", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/111/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/111/events", "html_url": "https://github.com/adrienverge/yamllint/issues/111", "id": 314406854, "node_id": "MDU6SXNzdWUzMTQ0MDY4NTQ=", "number": 111, "title": "\"$ yamllint .\" inside root doesn't operate recursively", "user": {"login": "JohnVonNeumann", "id": 18162779, "node_id": "MDQ6VXNlcjE4MTYyNzc5", "avatar_url": "https://avatars0.githubusercontent.com/u/18162779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnVonNeumann", "html_url": "https://github.com/JohnVonNeumann", "followers_url": "https://api.github.com/users/JohnVonNeumann/followers", "following_url": "https://api.github.com/users/JohnVonNeumann/following{/other_user}", "gists_url": "https://api.github.com/users/JohnVonNeumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnVonNeumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnVonNeumann/subscriptions", "organizations_url": "https://api.github.com/users/JohnVonNeumann/orgs", "repos_url": "https://api.github.com/users/JohnVonNeumann/repos", "events_url": "https://api.github.com/users/JohnVonNeumann/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnVonNeumann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-15T11:20:08Z", "updated_at": "2018-08-14T07:31:37Z", "closed_at": "2018-08-14T07:31:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there, so I've scratched my head with this one a bit, I'm really confused. So I have a directory structure like this:\r\n\r\n```\r\nappname Pipfile  Pipfile.lock  README.md  sceptre\r\n```\r\n\r\nYet when I run this, even though my `sceptre dir` contains another `dir` named `templates`, which contains a lot of yaml files that have errors. I get no response, it runs that is, to completion, with no errors.\r\n\r\nYet when I jump back one level and run `yamllint directoryname`, it goes into the sceptre dir and all that, finds the yaml files and outputs errors. It's really quite strange. \r\n\r\nyamllint version: yamllint==1.11.1\r\n\r\nInstalled using `pipenv install yamllint`\r\n\r\nUbuntu16.04", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/105", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/105/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/105/events", "html_url": "https://github.com/adrienverge/yamllint/issues/105", "id": 311472138, "node_id": "MDU6SXNzdWUzMTE0NzIxMzg=", "number": 105, "title": "yamllint not compatible with a change to come in PyYAML", "user": {"login": "sbaudoin", "id": 11422850, "node_id": "MDQ6VXNlcjExNDIyODUw", "avatar_url": "https://avatars2.githubusercontent.com/u/11422850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbaudoin", "html_url": "https://github.com/sbaudoin", "followers_url": "https://api.github.com/users/sbaudoin/followers", "following_url": "https://api.github.com/users/sbaudoin/following{/other_user}", "gists_url": "https://api.github.com/users/sbaudoin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbaudoin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbaudoin/subscriptions", "organizations_url": "https://api.github.com/users/sbaudoin/orgs", "repos_url": "https://api.github.com/users/sbaudoin/repos", "events_url": "https://api.github.com/users/sbaudoin/events{/privacy}", "received_events_url": "https://api.github.com/users/sbaudoin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-05T04:52:19Z", "updated_at": "2018-04-06T09:15:00Z", "closed_at": "2018-04-06T09:07:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nCan you check out the following PR, please? https://github.com/yaml/pyyaml/pull/150 It introduces a change in the behavior of peek_token() that make yamllint to crash (I copied a stack trace in the PR discussion). In this PR, the last comment is for you: it is a matter of knowing if you can change the code of yamllint to have compatible with the new behavior (I'll check that on my side) or if this is a showstopper and PyYAML must make sure, via a test case, that the behavior does not change.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/102", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/102/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/102/events", "html_url": "https://github.com/adrienverge/yamllint/issues/102", "id": 309693275, "node_id": "MDU6SXNzdWUzMDk2OTMyNzU=", "number": 102, "title": "YAML files with Mac and Windows line break sequences not supported", "user": {"login": "sbaudoin", "id": 11422850, "node_id": "MDQ6VXNlcjExNDIyODUw", "avatar_url": "https://avatars2.githubusercontent.com/u/11422850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbaudoin", "html_url": "https://github.com/sbaudoin", "followers_url": "https://api.github.com/users/sbaudoin/followers", "following_url": "https://api.github.com/users/sbaudoin/following{/other_user}", "gists_url": "https://api.github.com/users/sbaudoin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbaudoin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbaudoin/subscriptions", "organizations_url": "https://api.github.com/users/sbaudoin/orgs", "repos_url": "https://api.github.com/users/sbaudoin/repos", "events_url": "https://api.github.com/users/sbaudoin/events{/privacy}", "received_events_url": "https://api.github.com/users/sbaudoin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-29T09:59:15Z", "updated_at": "2019-12-18T08:50:18Z", "closed_at": "2019-12-18T08:50:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Although YAML 1.1 says that the Mac, Windows and Unicode line breaks are valid end of line markers, yamllint does not support that. Example with a simple version 1.11.0 of yamllint:\r\n\r\n**test.yml**\r\n\r\n    ---\r\n    key: value\r\n\r\nIf you encode this file with Unix-style line breaks, yamllint just ends nicely:\r\n\r\n    bash-4.2$ yamllint test.yml\r\n    bash-4.2$ echo $?\r\n    0\r\n\r\nIf you encode this file with Windows-style line breaks, yamllint complains:\r\n\r\n    bash-4.2$ yamllint test.yml\r\n    test2.yml\r\n      1:4       error    wrong new line character: expected \\n  (new-lines)\r\n\r\nIt is even worth with Mac-style line breaks:\r\n\r\n    bash-4.2$ yamllint test.yml\r\n    test2.yml\r\n      1:16      error    no new line character at the end of file  (new-line-at-end-of-file)\r\n\r\nSo please, can you support all \"official\" YAML line breaks, please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/97", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/97/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/97/events", "html_url": "https://github.com/adrienverge/yamllint/issues/97", "id": 299725949, "node_id": "MDU6SXNzdWUyOTk3MjU5NDk=", "number": 97, "title": "Indentation error: List in a map in a list", "user": {"login": "vrivellino", "id": 1489368, "node_id": "MDQ6VXNlcjE0ODkzNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1489368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrivellino", "html_url": "https://github.com/vrivellino", "followers_url": "https://api.github.com/users/vrivellino/followers", "following_url": "https://api.github.com/users/vrivellino/following{/other_user}", "gists_url": "https://api.github.com/users/vrivellino/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrivellino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrivellino/subscriptions", "organizations_url": "https://api.github.com/users/vrivellino/orgs", "repos_url": "https://api.github.com/users/vrivellino/repos", "events_url": "https://api.github.com/users/vrivellino/events{/privacy}", "received_events_url": "https://api.github.com/users/vrivellino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-23T14:19:20Z", "updated_at": "2018-03-19T18:23:13Z", "closed_at": "2018-03-19T18:23:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this a duplicate of #80, but I'm seeing what looks like a spurious error.\r\n\r\nTest file:\r\n```yaml\r\n---\r\n\r\nLevel1:\r\n  Level2:\r\n    Type: test object\r\n    Properties:\r\n      prop1: one\r\n      prop2: two\r\n      prop3:\r\n        list1:\r\n          - itemA\r\n          - [sublist1_itemA, sublist1_itemB]\r\n          - list2:\r\n            - itemB\r\n            - [sublist2_itemA, sublist2_itemB]\r\n            - [sublist3_itemA, sublist3_itemB]\r\n```\r\n\r\nyamllint output:\r\n```\r\n$ yamllint test.\r\nyml \r\ntest.yml\r\n  14:13     error    wrong indentation: expected 14 but found 12  (indentation)\r\n```\r\n\r\nThat error is due to the indentation of `itemB`.\r\n\r\nIs that not valid?\r\n\r\nIf one were to convert it json, this is the object I'd need to produce:\r\n\r\n```json\r\n{\r\n  \"Level1\": {\r\n    \"Level2\": {\r\n      \"Type\": \"test object\",\r\n      \"Properties\": {\r\n        \"prop1\": \"one\",\r\n        \"prop2\": \"two\",\r\n        \"prop3\": {\r\n          \"list1\": [\r\n            \"itemA\",\r\n            [ \"sublist1_itemA\", \"sublist1_itemB\" ],\r\n            { \"list2\": [\r\n              \"itemB\",\r\n              [ \"sublist2_itemA\", \"sublist2_itemB\" ],\r\n              [ \"sublist3_itemA\", \"sublist3_itemB\" ]\r\n            ]}\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/94", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/94/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/94/events", "html_url": "https://github.com/adrienverge/yamllint/issues/94", "id": 298660023, "node_id": "MDU6SXNzdWUyOTg2NjAwMjM=", "number": 94, "title": "Change default documentation on Readthedocs", "user": {"login": "adius", "id": 969983, "node_id": "MDQ6VXNlcjk2OTk4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/969983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adius", "html_url": "https://github.com/adius", "followers_url": "https://api.github.com/users/adius/followers", "following_url": "https://api.github.com/users/adius/following{/other_user}", "gists_url": "https://api.github.com/users/adius/gists{/gist_id}", "starred_url": "https://api.github.com/users/adius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adius/subscriptions", "organizations_url": "https://api.github.com/users/adius/orgs", "repos_url": "https://api.github.com/users/adius/repos", "events_url": "https://api.github.com/users/adius/events{/privacy}", "received_events_url": "https://api.github.com/users/adius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-20T16:29:04Z", "updated_at": "2018-02-21T10:58:09Z", "closed_at": "2018-02-21T10:58:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think the default documentation should be \"stable\", and not \"latest\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/93", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/93/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/93/events", "html_url": "https://github.com/adrienverge/yamllint/issues/93", "id": 298659570, "node_id": "MDU6SXNzdWUyOTg2NTk1NzA=", "number": 93, "title": "New release", "user": {"login": "adius", "id": 969983, "node_id": "MDQ6VXNlcjk2OTk4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/969983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adius", "html_url": "https://github.com/adius", "followers_url": "https://api.github.com/users/adius/followers", "following_url": "https://api.github.com/users/adius/following{/other_user}", "gists_url": "https://api.github.com/users/adius/gists{/gist_id}", "starred_url": "https://api.github.com/users/adius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adius/subscriptions", "organizations_url": "https://api.github.com/users/adius/orgs", "repos_url": "https://api.github.com/users/adius/repos", "events_url": "https://api.github.com/users/adius/events{/privacy}", "received_events_url": "https://api.github.com/users/adius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-20T16:27:54Z", "updated_at": "2018-02-21T13:02:49Z", "closed_at": "2018-02-21T13:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "How about a new release? I'd really love to use the octal feature", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/92", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/92/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/92/events", "html_url": "https://github.com/adrienverge/yamllint/issues/92", "id": 288870023, "node_id": "MDU6SXNzdWUyODg4NzAwMjM=", "number": 92, "title": "Disable document start checking", "user": {"login": "waghanza", "id": 1440729, "node_id": "MDQ6VXNlcjE0NDA3Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1440729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waghanza", "html_url": "https://github.com/waghanza", "followers_url": "https://api.github.com/users/waghanza/followers", "following_url": "https://api.github.com/users/waghanza/following{/other_user}", "gists_url": "https://api.github.com/users/waghanza/gists{/gist_id}", "starred_url": "https://api.github.com/users/waghanza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waghanza/subscriptions", "organizations_url": "https://api.github.com/users/waghanza/orgs", "repos_url": "https://api.github.com/users/waghanza/repos", "events_url": "https://api.github.com/users/waghanza/events{/privacy}", "received_events_url": "https://api.github.com/users/waghanza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-16T11:15:36Z", "updated_at": "2018-01-16T11:17:46Z", "closed_at": "2018-01-16T11:17:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have some hand-written `yaml ` files. I have not put the `---` on each files.\r\n\r\nIs there a way to disable document start rule ?\r\n\r\n~~~\r\nwarning  missing document start \"---\"  (document-start)\r\n~~~\r\n\r\nRegards,\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/91", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/91/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/91/events", "html_url": "https://github.com/adrienverge/yamllint/issues/91", "id": 280478163, "node_id": "MDU6SXNzdWUyODA0NzgxNjM=", "number": 91, "title": "brew install yamllint", "user": {"login": "yvele", "id": 4225430, "node_id": "MDQ6VXNlcjQyMjU0MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4225430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yvele", "html_url": "https://github.com/yvele", "followers_url": "https://api.github.com/users/yvele/followers", "following_url": "https://api.github.com/users/yvele/following{/other_user}", "gists_url": "https://api.github.com/users/yvele/gists{/gist_id}", "starred_url": "https://api.github.com/users/yvele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yvele/subscriptions", "organizations_url": "https://api.github.com/users/yvele/orgs", "repos_url": "https://api.github.com/users/yvele/repos", "events_url": "https://api.github.com/users/yvele/events{/privacy}", "received_events_url": "https://api.github.com/users/yvele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-08T12:45:09Z", "updated_at": "2018-05-09T18:14:18Z", "closed_at": "2018-05-09T18:12:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "would be nice for Max OSX users \ud83d\ude09 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/88", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/88/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/88/events", "html_url": "https://github.com/adrienverge/yamllint/issues/88", "id": 278243592, "node_id": "MDU6SXNzdWUyNzgyNDM1OTI=", "number": 88, "title": "anchor references seen as duplicate key", "user": {"login": "neekz0r", "id": 7443593, "node_id": "MDQ6VXNlcjc0NDM1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7443593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neekz0r", "html_url": "https://github.com/neekz0r", "followers_url": "https://api.github.com/users/neekz0r/followers", "following_url": "https://api.github.com/users/neekz0r/following{/other_user}", "gists_url": "https://api.github.com/users/neekz0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/neekz0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neekz0r/subscriptions", "organizations_url": "https://api.github.com/users/neekz0r/orgs", "repos_url": "https://api.github.com/users/neekz0r/repos", "events_url": "https://api.github.com/users/neekz0r/events{/privacy}", "received_events_url": "https://api.github.com/users/neekz0r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-30T19:37:19Z", "updated_at": "2020-01-29T21:34:58Z", "closed_at": "2018-02-28T22:12:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure if this is a feature or a bug! :-)\r\n\r\nWhen running yamllint on a yaml file with multiple anchors referenced, you get a duplicate key error. \r\n\r\nEG:\r\n\r\nGiven the following file:\r\n```yaml\r\n---\r\nanchor_one: &anchor_one\r\n  sequence_one:\r\n    - sequence_one\r\n    - sequence_two\r\n\r\nanchor_two: &anchor_two\r\n  sequence_two:\r\n    - sequence_three\r\n    - sequence_four\r\n\r\nmain:\r\n  <<: *anchor_one\r\n  <<: *anchor_two\r\n  unicorn_settings:\r\n    - non-sequence-sequence\r\n```\r\n\r\nUpon running yamllint you get the following error:\r\n```bash\r\ntest.yml\r\n  14:3      error    duplication of key \"<<\" in mapping  (key-duplicates)\r\n```\r\n\r\nPython thinks it's \"valid\" and has the desired data structure:\r\n\r\n```python\r\n>>> import yaml, pprint\r\n>>> pp = pprint.PrettyPrinter(indent=2)\r\n>>> file = open(\"test.yml\", \"r\")\r\n>>> yaml_dump = yaml.load(file)\r\n>>> pp.pprint(yaml_dump)\r\n{ 'anchor_one': { 'sequence_one': ['sequence_one', 'sequence_two']},\r\n  'anchor_two': { 'sequence_two': ['sequence_three', 'sequence_four']},\r\n  'main': { 'sequence_one': ['sequence_one', 'sequence_two'],\r\n            'sequence_two': ['sequence_three', 'sequence_four'],\r\n            'unicorn_settings': ['non-sequence-sequence']}}\r\n```\r\n\r\n[As near as I can tell, it seems to be supported by the YAML spec:](http://www.yaml.org/spec/1.2/spec.html#id2765878):\r\n\r\n*When composing a representation graph from serialized events, an alias node refers to the most recent node in the serialization having the specified anchor. Therefore, anchors need not be unique within a serialization.*\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/87", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/87/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/87/events", "html_url": "https://github.com/adrienverge/yamllint/issues/87", "id": 274446452, "node_id": "MDU6SXNzdWUyNzQ0NDY0NTI=", "number": 87, "title": "Ignoring certain tags?", "user": {"login": "soostdijck", "id": 8544319, "node_id": "MDQ6VXNlcjg1NDQzMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8544319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soostdijck", "html_url": "https://github.com/soostdijck", "followers_url": "https://api.github.com/users/soostdijck/followers", "following_url": "https://api.github.com/users/soostdijck/following{/other_user}", "gists_url": "https://api.github.com/users/soostdijck/gists{/gist_id}", "starred_url": "https://api.github.com/users/soostdijck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soostdijck/subscriptions", "organizations_url": "https://api.github.com/users/soostdijck/orgs", "repos_url": "https://api.github.com/users/soostdijck/repos", "events_url": "https://api.github.com/users/soostdijck/events{/privacy}", "received_events_url": "https://api.github.com/users/soostdijck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-16T09:24:57Z", "updated_at": "2017-11-16T11:12:25Z", "closed_at": "2017-11-16T11:12:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'd like to use yamllint to check my saltstack state files. However these can also contain jinja2 templating language that I want to be ignored by yamllint. Is there any way to configure certain tags to be ignored? For example anything encased in curly brackets { ... }\r\n\r\np.s this would be similarly useful for ansible, puppet and probably many more configs.\r\n\r\nThanks,\r\nSjoerd.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/85", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/85/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/85/events", "html_url": "https://github.com/adrienverge/yamllint/issues/85", "id": 270461858, "node_id": "MDU6SXNzdWUyNzA0NjE4NTg=", "number": 85, "title": "Make YAML files extensions configurable", "user": {"login": "gdubicki", "id": 566632, "node_id": "MDQ6VXNlcjU2NjYzMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/566632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdubicki", "html_url": "https://github.com/gdubicki", "followers_url": "https://api.github.com/users/gdubicki/followers", "following_url": "https://api.github.com/users/gdubicki/following{/other_user}", "gists_url": "https://api.github.com/users/gdubicki/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdubicki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdubicki/subscriptions", "organizations_url": "https://api.github.com/users/gdubicki/orgs", "repos_url": "https://api.github.com/users/gdubicki/repos", "events_url": "https://api.github.com/users/gdubicki/events{/privacy}", "received_events_url": "https://api.github.com/users/gdubicki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-01T21:39:40Z", "updated_at": "2019-11-13T10:06:13Z", "closed_at": "2019-11-13T10:06:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In some solutions YAML files use different extensions than `.yml` or `.yaml`.\r\n\r\nFor example Puppet software configuration management tool can use YAML files as a source of configuration. When using solution called hiera-eyaml (https://github.com/voxpupuli/hiera-eyaml) to keep some of the configuration values (such as passwords) encrypted those YAML files have `.eyaml` extension.\r\n\r\nIt would be then nice to make the extensions used by `yamllint .` configurable, while keeping the default as `.yml` and `.yaml`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/82", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/82/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/82/events", "html_url": "https://github.com/adrienverge/yamllint/issues/82", "id": 269969926, "node_id": "MDU6SXNzdWUyNjk5Njk5MjY=", "number": 82, "title": "Add rule for detecting empty (null) values", "user": {"login": "gdubicki", "id": 566632, "node_id": "MDQ6VXNlcjU2NjYzMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/566632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdubicki", "html_url": "https://github.com/gdubicki", "followers_url": "https://api.github.com/users/gdubicki/followers", "following_url": "https://api.github.com/users/gdubicki/following{/other_user}", "gists_url": "https://api.github.com/users/gdubicki/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdubicki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdubicki/subscriptions", "organizations_url": "https://api.github.com/users/gdubicki/orgs", "repos_url": "https://api.github.com/users/gdubicki/repos", "events_url": "https://api.github.com/users/gdubicki/events{/privacy}", "received_events_url": "https://api.github.com/users/gdubicki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-31T14:03:35Z", "updated_at": "2019-03-24T23:42:43Z", "closed_at": "2019-03-24T23:42:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Recently we run into an issue with a file that was supposed to have this:\r\n\r\n```\r\nfoo::bar:\r\n  something:\r\n    aaa: bbb\r\n```\r\n\r\n...but instead it had this:\r\n\r\n```\r\nfoo::bar:\r\nsomething:\r\n  aaa: bbb\r\n```\r\n\r\nI was a bit surprised to find out on this occasion that the latter is a correct syntax too and it means that \"foo::bar\" is set to empty (null) value.\r\n\r\nBut this doesn't make sense for us and I guess that for many other users. Therefore it would be nice to have a rule that would treat setting keys to empty (null) values as errors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/79", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/79/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/79/events", "html_url": "https://github.com/adrienverge/yamllint/issues/79", "id": 268803720, "node_id": "MDU6SXNzdWUyNjg4MDM3MjA=", "number": 79, "title": "Output is ugly on Windows", "user": {"login": "waylan", "id": 78846, "node_id": "MDQ6VXNlcjc4ODQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/78846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waylan", "html_url": "https://github.com/waylan", "followers_url": "https://api.github.com/users/waylan/followers", "following_url": "https://api.github.com/users/waylan/following{/other_user}", "gists_url": "https://api.github.com/users/waylan/gists{/gist_id}", "starred_url": "https://api.github.com/users/waylan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waylan/subscriptions", "organizations_url": "https://api.github.com/users/waylan/orgs", "repos_url": "https://api.github.com/users/waylan/repos", "events_url": "https://api.github.com/users/waylan/events{/privacy}", "received_events_url": "https://api.github.com/users/waylan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-26T15:21:04Z", "updated_at": "2017-10-27T18:06:36Z", "closed_at": "2017-10-27T18:06:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The console formatting stuff in the output should be excluded when on Windows. The output looks like this:\r\n\r\n```\r\nC:\\Users\\waylan\\Desktop>yamllint sample.yml\r\n\u2190[4msample.yml\u2190[0m\r\n  \u2190[2m1:1\u2190[0m       \u2190[33mwarning\u2190[0m  missing document start \"---\"  \u2190[2m(document-start)\u2190[0m\r\n  \u2190[2m4:9\u2190[0m       \u2190[31merror\u2190[0m    wrong indentation: expected 10 but found 8  \u2190[2m(indentation)\u2190[0m\r\n```\r\n\r\n... which is pretty hard to read.\r\n\r\nOf course the `-f parsable` format works okay as a work-around, but that shouldn't be necessary.\r\n\r\n```\r\nC:\\Users\\waylan\\Desktop>yamllint -f parsable sample.yml\r\nsample.yml:1:1: [warning] missing document start \"---\" (document-start)\r\nsample.yml:4:9: [error] wrong indentation: expected 10 but found 8 (indentation)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/75", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/75/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/75/events", "html_url": "https://github.com/adrienverge/yamllint/issues/75", "id": 263876863, "node_id": "MDU6SXNzdWUyNjM4NzY4NjM=", "number": 75, "title": "Release to handle the right pre-commit file", "user": {"login": "blackillzone", "id": 2394200, "node_id": "MDQ6VXNlcjIzOTQyMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2394200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackillzone", "html_url": "https://github.com/blackillzone", "followers_url": "https://api.github.com/users/blackillzone/followers", "following_url": "https://api.github.com/users/blackillzone/following{/other_user}", "gists_url": "https://api.github.com/users/blackillzone/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackillzone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackillzone/subscriptions", "organizations_url": "https://api.github.com/users/blackillzone/orgs", "repos_url": "https://api.github.com/users/blackillzone/repos", "events_url": "https://api.github.com/users/blackillzone/events{/privacy}", "received_events_url": "https://api.github.com/users/blackillzone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-09T12:25:55Z", "updated_at": "2017-10-10T10:31:41Z", "closed_at": "2017-10-10T10:31:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, using pre-commit, it only works using the master branch, because the last released version don't contain the right `.pre-commit-hooks.yaml` file.\r\n\r\nWhen doing an auto-update with pre-commit:\r\n\r\n```\r\nUpdating https://github.com/adrienverge/yamllint.git...An error has occurred: InvalidManifestError: \r\n=====> /home/fdhaussy/.cache/pre-commit/repoPsMzo4/.pre-commit-hooks.yaml does not exist\r\n```\r\n\r\nAnd it only works by setting master in our pre-commit files. Do you know when the next release, that will include the new pre-commit, will be out ?\r\n\r\nThanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/74", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/74/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/74/events", "html_url": "https://github.com/adrienverge/yamllint/issues/74", "id": 261033688, "node_id": "MDU6SXNzdWUyNjEwMzM2ODg=", "number": 74, "title": "missing starting space in comment (comments) inconsistent on Linux", "user": {"login": "debarnard", "id": 31453185, "node_id": "MDQ6VXNlcjMxNDUzMTg1", "avatar_url": "https://avatars3.githubusercontent.com/u/31453185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debarnard", "html_url": "https://github.com/debarnard", "followers_url": "https://api.github.com/users/debarnard/followers", "following_url": "https://api.github.com/users/debarnard/following{/other_user}", "gists_url": "https://api.github.com/users/debarnard/gists{/gist_id}", "starred_url": "https://api.github.com/users/debarnard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debarnard/subscriptions", "organizations_url": "https://api.github.com/users/debarnard/orgs", "repos_url": "https://api.github.com/users/debarnard/repos", "events_url": "https://api.github.com/users/debarnard/events{/privacy}", "received_events_url": "https://api.github.com/users/debarnard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-27T16:13:12Z", "updated_at": "2019-03-25T16:34:49Z", "closed_at": "2019-03-25T16:34:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error on some lines in files being checked on Linux system. The files pass on Windows. The error is on a line with only comment chars, ex: \r\n#################################################\r\nIt doesn't fail all lines, like this just in some files.  It may have something to do with line-endings. I'm using Jenkins to execute a CI yamllint check and it is running on  Linux and pulls source using Git.  I am also seeing line-endings errors on the same files.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/70", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/70/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/70/events", "html_url": "https://github.com/adrienverge/yamllint/issues/70", "id": 256599444, "node_id": "MDU6SXNzdWUyNTY1OTk0NDQ=", "number": 70, "title": "Bad indentation in haml does not trigger error", "user": {"login": "tongrhj", "id": 914591, "node_id": "MDQ6VXNlcjkxNDU5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/914591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongrhj", "html_url": "https://github.com/tongrhj", "followers_url": "https://api.github.com/users/tongrhj/followers", "following_url": "https://api.github.com/users/tongrhj/following{/other_user}", "gists_url": "https://api.github.com/users/tongrhj/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongrhj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongrhj/subscriptions", "organizations_url": "https://api.github.com/users/tongrhj/orgs", "repos_url": "https://api.github.com/users/tongrhj/repos", "events_url": "https://api.github.com/users/tongrhj/events{/privacy}", "received_events_url": "https://api.github.com/users/tongrhj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-11T06:56:56Z", "updated_at": "2017-09-11T08:28:14Z", "closed_at": "2017-09-11T08:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "`sample.yml`:\r\n```\r\npt-BR:\r\n  emails:\r\n    verification:\r\n      body:         |\r\n        :plain\r\n          Oi #{contact.first_name},\r\n\r\n         This line should give an error #{variable_name}.\r\n\r\n          Clique no link abaixo para ativar sua conta.\r\n```\r\n\r\nExpected: `error indentation expected 10 got 9`\r\n\r\nInstead: no error, running yamllint v1.8.1 on default configuration", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/69", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/69/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/69/events", "html_url": "https://github.com/adrienverge/yamllint/issues/69", "id": 256334470, "node_id": "MDU6SXNzdWUyNTYzMzQ0NzA=", "number": 69, "title": "disable-line works for rules, but not syntax errors.", "user": {"login": "wpdrush21", "id": 30598879, "node_id": "MDQ6VXNlcjMwNTk4ODc5", "avatar_url": "https://avatars0.githubusercontent.com/u/30598879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wpdrush21", "html_url": "https://github.com/wpdrush21", "followers_url": "https://api.github.com/users/wpdrush21/followers", "following_url": "https://api.github.com/users/wpdrush21/following{/other_user}", "gists_url": "https://api.github.com/users/wpdrush21/gists{/gist_id}", "starred_url": "https://api.github.com/users/wpdrush21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wpdrush21/subscriptions", "organizations_url": "https://api.github.com/users/wpdrush21/orgs", "repos_url": "https://api.github.com/users/wpdrush21/repos", "events_url": "https://api.github.com/users/wpdrush21/events{/privacy}", "received_events_url": "https://api.github.com/users/wpdrush21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-08T18:24:18Z", "updated_at": "2017-09-11T08:20:08Z", "closed_at": "2017-09-11T08:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using yamllint on files that will be used as helm charts, where syntax such as\r\n\r\n`value: {{ .Values.service.name }}{{ if eq .Values.environment \"staging\" }} (staging){{ end }}`\r\n\r\nis completely valid. Ideally we would be able to skip this line from running yamllint, but since it is a syntax-error, and not an issue with a given rule, the disable-line functionality `# yamllint disable-line` doesn't work.\r\n\r\nIdeally disable-line would either skip syntax-errors as well as rules, or there could be a separate rule `ignore-line` for this case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/67", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/67/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/67/events", "html_url": "https://github.com/adrienverge/yamllint/issues/67", "id": 254245751, "node_id": "MDU6SXNzdWUyNTQyNDU3NTE=", "number": 67, "title": "[Proposal] Key ordering rule", "user": {"login": "JohannesFKnauf", "id": 8118077, "node_id": "MDQ6VXNlcjgxMTgwNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8118077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohannesFKnauf", "html_url": "https://github.com/JohannesFKnauf", "followers_url": "https://api.github.com/users/JohannesFKnauf/followers", "following_url": "https://api.github.com/users/JohannesFKnauf/following{/other_user}", "gists_url": "https://api.github.com/users/JohannesFKnauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohannesFKnauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohannesFKnauf/subscriptions", "organizations_url": "https://api.github.com/users/JohannesFKnauf/orgs", "repos_url": "https://api.github.com/users/JohannesFKnauf/repos", "events_url": "https://api.github.com/users/JohannesFKnauf/events{/privacy}", "received_events_url": "https://api.github.com/users/JohannesFKnauf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-31T07:48:17Z", "updated_at": "2017-10-16T20:49:40Z", "closed_at": "2017-10-16T20:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "In order to enforce uniform key ordering in a mapping I want to have a rule for checking lexicographical sorting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/66", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/66/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/66/events", "html_url": "https://github.com/adrienverge/yamllint/issues/66", "id": 253779139, "node_id": "MDU6SXNzdWUyNTM3NzkxMzk=", "number": 66, "title": "Rules details not functioning correctly on docs page", "user": {"login": "debarnard", "id": 31453185, "node_id": "MDQ6VXNlcjMxNDUzMTg1", "avatar_url": "https://avatars3.githubusercontent.com/u/31453185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debarnard", "html_url": "https://github.com/debarnard", "followers_url": "https://api.github.com/users/debarnard/followers", "following_url": "https://api.github.com/users/debarnard/following{/other_user}", "gists_url": "https://api.github.com/users/debarnard/gists{/gist_id}", "starred_url": "https://api.github.com/users/debarnard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debarnard/subscriptions", "organizations_url": "https://api.github.com/users/debarnard/orgs", "repos_url": "https://api.github.com/users/debarnard/repos", "events_url": "https://api.github.com/users/debarnard/events{/privacy}", "received_events_url": "https://api.github.com/users/debarnard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-29T19:36:55Z", "updated_at": "2017-09-03T14:09:17Z", "closed_at": "2017-09-03T14:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "clicking any bold rule heading on this page  http://yamllint.readthedocs.io/en/latest/rules.html#id1\r\njust sends you back to the rules list. The details for each rule are no longer visible.  I tried with chrome and IExplorer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/65", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/65/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/65/events", "html_url": "https://github.com/adrienverge/yamllint/issues/65", "id": 253191332, "node_id": "MDU6SXNzdWUyNTMxOTEzMzI=", "number": 65, "title": "Disabling rules with comments not working", "user": {"login": "djrut", "id": 13618091, "node_id": "MDQ6VXNlcjEzNjE4MDkx", "avatar_url": "https://avatars3.githubusercontent.com/u/13618091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djrut", "html_url": "https://github.com/djrut", "followers_url": "https://api.github.com/users/djrut/followers", "following_url": "https://api.github.com/users/djrut/following{/other_user}", "gists_url": "https://api.github.com/users/djrut/gists{/gist_id}", "starred_url": "https://api.github.com/users/djrut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djrut/subscriptions", "organizations_url": "https://api.github.com/users/djrut/orgs", "repos_url": "https://api.github.com/users/djrut/repos", "events_url": "https://api.github.com/users/djrut/events{/privacy}", "received_events_url": "https://api.github.com/users/djrut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-27T21:31:38Z", "updated_at": "2017-08-28T06:43:30Z", "closed_at": "2017-08-28T06:43:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: yamllint 1.8.1\r\n\r\nBehavior observed: Following the examples in documentation to disable certain checks via in-line comments, however the rules are not being disabled. The target file is a Jinja2 template. \r\n\r\nI added \"# yamllint disable\" and \"# yamllint enable\" around a block of Jinja directives, and a more specific \"# yamllint disable rule:line-length\" rule.  However these rules appear not to be disabled, as evidenced by the following output from yamllint:\r\n\r\n~~~bash\r\n$ yamllint gluster.jinja\r\ngluster.jinja\r\n  16:2      error    syntax error: found character '%' that cannot start any token\r\n  37:81     error    line too long (83 > 80 characters)  (line-length)\r\n  73:81     error    line too long (139 > 80 characters)  (line-length)\r\n  81:81     error    line too long (141 > 80 characters)  (line-length)\r\n  88:81     error    line too long (106 > 80 characters)  (line-length)\r\n  101:81    error    line too long (100 > 80 characters)  (line-length)\r\n  112:81    error    line too long (94 > 80 characters)  (line-length)\r\n  122:81    error    line too long (116 > 80 characters)  (line-length)\r\n  123:81    error    line too long (93 > 80 characters)  (line-length)\r\n  131:81    error    line too long (151 > 80 characters)  (line-length)\r\n  135:81    error    line too long (91 > 80 characters)  (line-length)\r\n  136:81    error    line too long (94 > 80 characters)  (line-length)\r\n  141:81    error    line too long (92 > 80 characters)  (line-length)\r\n~~~\r\n\r\nsnippets from gluster.jinja:\r\n~~~yaml\r\n<...>\r\n# yamllint disable\r\n{% set zones         = properties[\"zones\"] %}\r\n{% set num_nodes     = properties[\"nodes\"] %}\r\n<...>\r\n# yamllint enable\r\n\r\n# yamllint disable rule:line-length\r\nresources:\r\n- name: {{ startup_cfg }}\r\n  type: runtimeconfig.v1beta1.config\r\n  properties:\r\n    config: {{ startup_cfg }}\r\n    description: \"Runtime resources for coordination of GlusterFS cluster creation\"  \r\n<...>\r\n~~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/62", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/62/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/62/events", "html_url": "https://github.com/adrienverge/yamllint/issues/62", "id": 249309813, "node_id": "MDU6SXNzdWUyNDkzMDk4MTM=", "number": 62, "title": "automatic format", "user": {"login": "Huarong", "id": 1487879, "node_id": "MDQ6VXNlcjE0ODc4Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1487879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Huarong", "html_url": "https://github.com/Huarong", "followers_url": "https://api.github.com/users/Huarong/followers", "following_url": "https://api.github.com/users/Huarong/following{/other_user}", "gists_url": "https://api.github.com/users/Huarong/gists{/gist_id}", "starred_url": "https://api.github.com/users/Huarong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Huarong/subscriptions", "organizations_url": "https://api.github.com/users/Huarong/orgs", "repos_url": "https://api.github.com/users/Huarong/repos", "events_url": "https://api.github.com/users/Huarong/events{/privacy}", "received_events_url": "https://api.github.com/users/Huarong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-10T10:59:51Z", "updated_at": "2020-08-13T16:32:16Z", "closed_at": "2017-08-15T07:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hope this tool can format the code automatic, just like `yapf -i` for Python.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/61", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/61/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/61/events", "html_url": "https://github.com/adrienverge/yamllint/issues/61", "id": 246281745, "node_id": "MDU6SXNzdWUyNDYyODE3NDU=", "number": 61, "title": "can't disable syntax from a comment?", "user": {"login": "tedder", "id": 97914, "node_id": "MDQ6VXNlcjk3OTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/97914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedder", "html_url": "https://github.com/tedder", "followers_url": "https://api.github.com/users/tedder/followers", "following_url": "https://api.github.com/users/tedder/following{/other_user}", "gists_url": "https://api.github.com/users/tedder/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedder/subscriptions", "organizations_url": "https://api.github.com/users/tedder/orgs", "repos_url": "https://api.github.com/users/tedder/repos", "events_url": "https://api.github.com/users/tedder/events{/privacy}", "received_events_url": "https://api.github.com/users/tedder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-28T08:32:20Z", "updated_at": "2017-07-28T15:27:09Z", "closed_at": "2017-07-28T15:27:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some jinja2 that does simple templating of an otherwise-valid yaml file, so I'd like to yamllint the file in my automation workflow. I can't ignore the jinja2 lines though. Here are the two things I've tried.\r\n\r\n```# yamllint disable\r\n{% if transport == 'tls' %}\r\n# yamllint enable```\r\n\r\n```# yamllint disable-line\r\n{% if transport == 'tls' %}\r\n```\r\n\r\n\r\nAnd here's the error, even with the 'disable'.\r\n\r\n```  17:2      error    syntax error: found character '%' that cannot start any token```\r\n\r\nIs there a way to do this? Should there be?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/58", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/58/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/58/events", "html_url": "https://github.com/adrienverge/yamllint/issues/58", "id": 243636910, "node_id": "MDU6SXNzdWUyNDM2MzY5MTA=", "number": 58, "title": "Warning instead of error for variable indentation between siblings", "user": {"login": "synergiator", "id": 1834666, "node_id": "MDQ6VXNlcjE4MzQ2NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1834666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synergiator", "html_url": "https://github.com/synergiator", "followers_url": "https://api.github.com/users/synergiator/followers", "following_url": "https://api.github.com/users/synergiator/following{/other_user}", "gists_url": "https://api.github.com/users/synergiator/gists{/gist_id}", "starred_url": "https://api.github.com/users/synergiator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synergiator/subscriptions", "organizations_url": "https://api.github.com/users/synergiator/orgs", "repos_url": "https://api.github.com/users/synergiator/repos", "events_url": "https://api.github.com/users/synergiator/events{/privacy}", "received_events_url": "https://api.github.com/users/synergiator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-18T08:23:15Z", "updated_at": "2017-07-19T07:25:36Z", "closed_at": "2017-07-19T07:25:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to [specs](http://yaml.org/spec/1.2/2009-07-21/spec.html#id2576668), \" the content of each sibling node may be further indented independently\".\r\n\r\nIn such cases, this yamllint currently outputs an error. Maybe it should be a warning?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/57", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/57/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/57/events", "html_url": "https://github.com/adrienverge/yamllint/issues/57", "id": 240167185, "node_id": "MDU6SXNzdWUyNDAxNjcxODU=", "number": 57, "title": "Add a changelog", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-03T13:06:30Z", "updated_at": "2017-07-04T21:07:37Z", "closed_at": "2017-07-04T20:23:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Upgrading from 1.7.0 to 1.8.0 and I have no idea what changed, which means I just have to yamllint all my files again and hope \ud83d\ude22  Can you add changelog/history file and keep track of what changes between releases? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/56", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/56/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/56/events", "html_url": "https://github.com/adrienverge/yamllint/issues/56", "id": 239428384, "node_id": "MDU6SXNzdWUyMzk0MjgzODQ=", "number": 56, "title": "Not available in apt-get repositories?", "user": {"login": "hobti01", "id": 4631304, "node_id": "MDQ6VXNlcjQ2MzEzMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4631304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hobti01", "html_url": "https://github.com/hobti01", "followers_url": "https://api.github.com/users/hobti01/followers", "following_url": "https://api.github.com/users/hobti01/following{/other_user}", "gists_url": "https://api.github.com/users/hobti01/gists{/gist_id}", "starred_url": "https://api.github.com/users/hobti01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hobti01/subscriptions", "organizations_url": "https://api.github.com/users/hobti01/orgs", "repos_url": "https://api.github.com/users/hobti01/repos", "events_url": "https://api.github.com/users/hobti01/events{/privacy}", "received_events_url": "https://api.github.com/users/hobti01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-29T10:06:36Z", "updated_at": "2017-07-03T20:20:15Z", "closed_at": "2017-07-03T20:20:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has the package been removed from the apt-get repos?\r\n```\r\nroot@185cd0d5dccb:/# cat /etc/debian_version\r\n8.8\r\nroot@185cd0d5dccb:/# apt-get -qq update && apt-get -qq install -y yamllint\r\nE: Unable to locate package yamllint\r\n```\r\n\r\nTrying the \"old version\" approach also fails:\r\n```\r\nroot@185cd0d5dccb:/# apt-get -qq install -y software-properties-common\r\nroot@185cd0d5dccb:/# add-apt-repository -y ppa:adrienverge/ppa\r\ngpg: keyring `/tmp/tmp7819p0qh/secring.gpg' created\r\ngpg: keyring `/tmp/tmp7819p0qh/pubring.gpg' created\r\ngpg: requesting key 7EB83022 from hkp server keyserver.ubuntu.com\r\ngpg: /tmp/tmp7819p0qh/trustdb.gpg: trustdb created\r\ngpg: key 7EB83022: public key \"Launchpad PPA for Adrien Verg\ufffd\" imported\r\ngpg: Total number processed: 1\r\ngpg:               imported: 1  (RSA: 1)\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.4/threading.py\", line 920, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python3/dist-packages/softwareproperties/ppa.py\", line 153, in run\r\n    self.add_ppa_signing_key(self.ppa_path)\r\n  File \"/usr/lib/python3/dist-packages/softwareproperties/ppa.py\", line 250, in add_ppa_signing_key\r\n    tmp_export_keyring, signing_key_fingerprint, tmp_keyring_dir):\r\n  File \"/usr/lib/python3/dist-packages/softwareproperties/ppa.py\", line 202, in _verify_fingerprint\r\n    got_fingerprints = self._get_fingerprints(keyring, keyring_dir)\r\n  File \"/usr/lib/python3/dist-packages/softwareproperties/ppa.py\", line 194, in _get_fingerprints\r\n    output = subprocess.check_output(cmd, universal_newlines=True)\r\n  File \"/usr/lib/python3.4/subprocess.py\", line 609, in check_output\r\n    output, unused_err = process.communicate(inputdata, timeout=timeout)\r\n  File \"/usr/lib/python3.4/subprocess.py\", line 947, in communicate\r\n    stdout = _eintr_retry_call(self.stdout.read)\r\n  File \"/usr/lib/python3.4/subprocess.py\", line 491, in _eintr_retry_call\r\n    return func(*args)\r\n  File \"/usr/lib/python3.4/encodings/ascii.py\", line 26, in decode\r\n    return codecs.ascii_decode(input, self.errors)[0]\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 100: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/adrienverge/yamllint/issues/55", "repository_url": "https://api.github.com/repos/adrienverge/yamllint", "labels_url": "https://api.github.com/repos/adrienverge/yamllint/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/adrienverge/yamllint/issues/55/comments", "events_url": "https://api.github.com/repos/adrienverge/yamllint/issues/55/events", "html_url": "https://github.com/adrienverge/yamllint/issues/55", "id": 239190584, "node_id": "MDU6SXNzdWUyMzkxOTA1ODQ=", "number": 55, "title": "yamllint 1.8.0 no longer works with python 2.6", "user": {"login": "mattclay", "id": 806360, "node_id": "MDQ6VXNlcjgwNjM2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/806360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattclay", "html_url": "https://github.com/mattclay", "followers_url": "https://api.github.com/users/mattclay/followers", "following_url": "https://api.github.com/users/mattclay/following{/other_user}", "gists_url": "https://api.github.com/users/mattclay/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattclay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattclay/subscriptions", "organizations_url": "https://api.github.com/users/mattclay/orgs", "repos_url": "https://api.github.com/users/mattclay/repos", "events_url": "https://api.github.com/users/mattclay/events{/privacy}", "received_events_url": "https://api.github.com/users/mattclay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-28T14:50:27Z", "updated_at": "2017-07-04T20:34:17Z", "closed_at": "2017-07-04T20:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now that `yamllint` requires `pathspec` as of version 1.8.0, it no longer works on python 2.6.\r\n\r\nHere's the failure from `pip install yamllint` on python 2.6:\r\n\r\n```\r\nCollecting pathspec (from yamllint)\r\n  Downloading pathspec-0.5.2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/ly/g7l5bx455cq2c_r6z1ky8j1m0000gn/T/pip-build-y3oUIf/pathspec/setup.py\", line 6, in <module>\r\n        from pathspec import __author__, __email__, __license__, __project__, __version__\r\n      File \"pathspec/__init__.py\", line 33, in <module>\r\n        from .pathspec import PathSpec\r\n      File \"pathspec/pathspec.py\", line 9, in <module>\r\n        from . import util\r\n      File \"pathspec/util.py\", line 167\r\n        return {normalize_file(path, separators=separators): path for path in files}\r\n                                                                    ^\r\n    SyntaxError: invalid syntax\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}]}