{"total_count": 41, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/106", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/106/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/106/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/106", "id": 527368582, "node_id": "MDU6SXNzdWU1MjczNjg1ODI=", "number": 106, "title": "add support to Django 3.0", "user": {"login": "domdinicola", "id": 2621572, "node_id": "MDQ6VXNlcjI2MjE1NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2621572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domdinicola", "html_url": "https://github.com/domdinicola", "followers_url": "https://api.github.com/users/domdinicola/followers", "following_url": "https://api.github.com/users/domdinicola/following{/other_user}", "gists_url": "https://api.github.com/users/domdinicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/domdinicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domdinicola/subscriptions", "organizations_url": "https://api.github.com/users/domdinicola/orgs", "repos_url": "https://api.github.com/users/domdinicola/repos", "events_url": "https://api.github.com/users/domdinicola/events{/privacy}", "received_events_url": "https://api.github.com/users/domdinicola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-22T19:14:09Z", "updated_at": "2019-12-10T17:50:23Z", "closed_at": "2019-12-10T17:50:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/102", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/102/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/102/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/102", "id": 462634135, "node_id": "MDU6SXNzdWU0NjI2MzQxMzU=", "number": 102, "title": "It seems impossible to override HTTP_HOST", "user": {"login": "bdauvergne", "id": 15842, "node_id": "MDQ6VXNlcjE1ODQy", "avatar_url": "https://avatars0.githubusercontent.com/u/15842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdauvergne", "html_url": "https://github.com/bdauvergne", "followers_url": "https://api.github.com/users/bdauvergne/followers", "following_url": "https://api.github.com/users/bdauvergne/following{/other_user}", "gists_url": "https://api.github.com/users/bdauvergne/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdauvergne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdauvergne/subscriptions", "organizations_url": "https://api.github.com/users/bdauvergne/orgs", "repos_url": "https://api.github.com/users/bdauvergne/repos", "events_url": "https://api.github.com/users/bdauvergne/events{/privacy}", "received_events_url": "https://api.github.com/users/bdauvergne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-01T10:23:43Z", "updated_at": "2019-07-05T15:49:10Z", "closed_at": "2019-07-05T15:49:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The way extra_environ is initialized in get/post/etc.. forbid any customization of the hostname with \r\n\r\n       DjangoTestApp(extra_environ={'HTTP_HOST': 'mydomain.com'})\r\n\r\nthe HTTP_HOST set in app.extra_environ is always override by the default set in get/post/etc..\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/99", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/99/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/99/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/99", "id": 451674569, "node_id": "MDU6SXNzdWU0NTE2NzQ1Njk=", "number": 99, "title": "Error on WebTestMixin initialisation if `DEFAULT_AUTHENTICATION_CLASSES` is missing", "user": {"login": "hugorodgerbrown", "id": 200944, "node_id": "MDQ6VXNlcjIwMDk0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/200944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugorodgerbrown", "html_url": "https://github.com/hugorodgerbrown", "followers_url": "https://api.github.com/users/hugorodgerbrown/followers", "following_url": "https://api.github.com/users/hugorodgerbrown/following{/other_user}", "gists_url": "https://api.github.com/users/hugorodgerbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugorodgerbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugorodgerbrown/subscriptions", "organizations_url": "https://api.github.com/users/hugorodgerbrown/orgs", "repos_url": "https://api.github.com/users/hugorodgerbrown/repos", "events_url": "https://api.github.com/users/hugorodgerbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/hugorodgerbrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-03T20:28:39Z", "updated_at": "2019-06-24T11:52:57Z", "closed_at": "2019-06-24T11:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently upgraded from 1.9.4 to 1.9.5, and our tests are now failing:\r\n\r\n```\r\ndef _setup_auth_class(self):\r\n    class_name = 'django_webtest.rest_framework.WebtestAuthentication'\r\n>   auth_classes = settings.REST_FRAMEWORK['DEFAULT_AUTHENTICATION_CLASSES']\r\n\r\nE   KeyError: 'DEFAULT_AUTHENTICATION_CLASSES'\r\n```\r\n\r\nIt looks like the issue is from this PR (https://github.com/django-webtest/django-webtest/pull/92), where `_setup_auth_class` assumes that the key `DEFAULT_AUTHENTICATION_CLASSES` exists in the `REST_FRAMEWORK` settings dictionary. This dict is set if `REST_FRAMEWORK` doesn't exist in the settings (see https://github.com/django-webtest/django-webtest/blob/master/django_webtest/__init__.py#L236-L237), but if the settings **do** exist, but do **not** contain `DEFAULT_AUTHENTICATION_CLASSES`, then this error will occur.\r\n\r\nOur settings:\r\n\r\n```python\r\nREST_FRAMEWORK = {\r\n    # Any authenticated user can access the API (overridable per-view)\r\n    \"DEFAULT_PERMISSION_CLASSES\": [\"rest_framework.permissions.IsAuthenticated\"],\r\n    \"DATETIME_FORMAT\": \"%Y-%m-%d %H:%M:%S%z\",\r\n    \"JSON_UNDERSCOREIZE\": {\"no_underscore_before_number\": True},\r\n    \"DEFAULT_RENDERER_CLASSES\": (\r\n        \"djangorestframework_camel_case.render.CamelCaseJSONRenderer\",\r\n    ),\r\n    \"DEFAULT_PARSER_CLASSES\": (\r\n        \"djangorestframework_camel_case.parser.CamelCaseJSONParser\",\r\n        \"rest_framework.parsers.JSONParser\",\r\n        \"rest_framework.parsers.FormParser\",\r\n        \"rest_framework.parsers.MultiPartParser\",\r\n        \"rest_framework.parsers.FileUploadParser\",\r\n    ),\r\n}\r\n```\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/98", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/98/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/98/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/98", "id": 451499613, "node_id": "MDU6SXNzdWU0NTE0OTk2MTM=", "number": 98, "title": "django_webtest.rest_framework is broken on python2", "user": {"login": "bdauvergne", "id": 15842, "node_id": "MDQ6VXNlcjE1ODQy", "avatar_url": "https://avatars0.githubusercontent.com/u/15842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdauvergne", "html_url": "https://github.com/bdauvergne", "followers_url": "https://api.github.com/users/bdauvergne/followers", "following_url": "https://api.github.com/users/bdauvergne/following{/other_user}", "gists_url": "https://api.github.com/users/bdauvergne/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdauvergne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdauvergne/subscriptions", "organizations_url": "https://api.github.com/users/bdauvergne/orgs", "repos_url": "https://api.github.com/users/bdauvergne/repos", "events_url": "https://api.github.com/users/bdauvergne/events{/privacy}", "received_events_url": "https://api.github.com/users/bdauvergne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-03T13:58:22Z", "updated_at": "2019-06-08T10:44:27Z", "closed_at": "2019-06-08T10:44:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On a django project using DRF it breaks with\r\n\r\n`E           ImportError: Could not import 'django_webtest.rest_framework.WebtestAuthentication' for API setting 'DEFAULT_AUTHENTICATION_CLASSES'. ImportError: cannot import name authentication.\r\n`\r\n\r\nBecause you cannot import rest_framework from a module named rest_framework (it's resolved in local directory).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/94", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/94/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/94/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/94", "id": 395345901, "node_id": "MDU6SXNzdWUzOTUzNDU5MDE=", "number": 94, "title": "extra_environ defaults not added to request", "user": {"login": "jon-armstrong", "id": 419279, "node_id": "MDQ6VXNlcjQxOTI3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/419279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-armstrong", "html_url": "https://github.com/jon-armstrong", "followers_url": "https://api.github.com/users/jon-armstrong/followers", "following_url": "https://api.github.com/users/jon-armstrong/following{/other_user}", "gists_url": "https://api.github.com/users/jon-armstrong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-armstrong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-armstrong/subscriptions", "organizations_url": "https://api.github.com/users/jon-armstrong/orgs", "repos_url": "https://api.github.com/users/jon-armstrong/repos", "events_url": "https://api.github.com/users/jon-armstrong/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-armstrong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-02T19:02:37Z", "updated_at": "2019-01-23T20:09:34Z", "closed_at": "2019-01-23T20:09:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried following the example from the Usage section but when I add header values to the `extra_environ` dictionary, they don't seem to be added to subsequent requests as the documentation suggests.\r\n\r\n```\r\nclass MyTest(django_webtest.WebTest):\r\n    extra_environ = {\r\n        'HTTP_HOST': 'api',\r\n        'HTTP_USER_AGENT': 'test'\r\n    }\r\n```\r\n\r\nI've also tried reinitializing the test app in my test's setup method:\r\n```\r\n    def setUp(self):\r\n        self.app = django_webtest.DjangoTestApp(\r\n            extra_environ={'HTTP_HOST': 'api', 'HTTP_USER_AGENT': 'test'}\r\n        )\r\n```\r\n\r\nHowever, it does work when passing `extra_environ` to `get()` etc, though this gets repetitive with a large number of tests. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/90", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/90/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/90/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/90", "id": 378679736, "node_id": "MDU6SXNzdWUzNzg2Nzk3MzY=", "number": 90, "title": "request.data is a dict instance when using django_webtests app.post(), but a QueryDict instance when using curl", "user": {"login": "schumannd", "id": 5385472, "node_id": "MDQ6VXNlcjUzODU0NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5385472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schumannd", "html_url": "https://github.com/schumannd", "followers_url": "https://api.github.com/users/schumannd/followers", "following_url": "https://api.github.com/users/schumannd/following{/other_user}", "gists_url": "https://api.github.com/users/schumannd/gists{/gist_id}", "starred_url": "https://api.github.com/users/schumannd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schumannd/subscriptions", "organizations_url": "https://api.github.com/users/schumannd/orgs", "repos_url": "https://api.github.com/users/schumannd/repos", "events_url": "https://api.github.com/users/schumannd/events{/privacy}", "received_events_url": "https://api.github.com/users/schumannd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-08T10:57:44Z", "updated_at": "2018-11-08T12:52:28Z", "closed_at": "2018-11-08T12:52:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have explained the issue [on SO](https://stackoverflow.com/questions/53206284/django-views-when-is-request-data-a-dict-vs-a-querydict)\r\n\r\nIs this an issue that should be fixed by django-webtest?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/89", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/89/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/89/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/89", "id": 354763149, "node_id": "MDU6SXNzdWUzNTQ3NjMxNDk=", "number": 89, "title": "Return back support for webtest positional args", "user": {"login": "sirex", "id": 297583, "node_id": "MDQ6VXNlcjI5NzU4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/297583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirex", "html_url": "https://github.com/sirex", "followers_url": "https://api.github.com/users/sirex/followers", "following_url": "https://api.github.com/users/sirex/following{/other_user}", "gists_url": "https://api.github.com/users/sirex/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirex/subscriptions", "organizations_url": "https://api.github.com/users/sirex/orgs", "repos_url": "https://api.github.com/users/sirex/repos", "events_url": "https://api.github.com/users/sirex/events{/privacy}", "received_events_url": "https://api.github.com/users/sirex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-28T14:40:53Z", "updated_at": "2018-10-27T08:01:31Z", "closed_at": "2018-10-27T08:01:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Positional arguments were removed in #48 PR.\r\n\r\nWebtest documentation uses `params` positional argument, for example:\r\n\r\n```python\r\n>>> resp = app.post_json('/resource/', dict(id=1, value='value'))\r\n```\r\nhttps://docs.pylonsproject.org/projects/webtest/en/latest/testapp.html#making-json-requests\r\n\r\nBut this does not work with django-webtest.\r\n\r\nI'd suggest, to add `*args`, in order to return positional arguments back and make method signatures exactly as they are in webtest.\r\n\r\nAnd anyway changes in #48 are backwards incompatible without any good reason.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/88", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/88/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/88/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/88", "id": 347296537, "node_id": "MDU6SXNzdWUzNDcyOTY1Mzc=", "number": 88, "title": "remove pytest yield_fixture functions", "user": {"login": "jnoortheen", "id": 6702219, "node_id": "MDQ6VXNlcjY3MDIyMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6702219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnoortheen", "html_url": "https://github.com/jnoortheen", "followers_url": "https://api.github.com/users/jnoortheen/followers", "following_url": "https://api.github.com/users/jnoortheen/following{/other_user}", "gists_url": "https://api.github.com/users/jnoortheen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnoortheen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnoortheen/subscriptions", "organizations_url": "https://api.github.com/users/jnoortheen/orgs", "repos_url": "https://api.github.com/users/jnoortheen/repos", "events_url": "https://api.github.com/users/jnoortheen/events{/privacy}", "received_events_url": "https://api.github.com/users/jnoortheen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gawel", "id": 118673, "node_id": "MDQ6VXNlcjExODY3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/118673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gawel", "html_url": "https://github.com/gawel", "followers_url": "https://api.github.com/users/gawel/followers", "following_url": "https://api.github.com/users/gawel/following{/other_user}", "gists_url": "https://api.github.com/users/gawel/gists{/gist_id}", "starred_url": "https://api.github.com/users/gawel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gawel/subscriptions", "organizations_url": "https://api.github.com/users/gawel/orgs", "repos_url": "https://api.github.com/users/gawel/repos", "events_url": "https://api.github.com/users/gawel/events{/privacy}", "received_events_url": "https://api.github.com/users/gawel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gawel", "id": 118673, "node_id": "MDQ6VXNlcjExODY3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/118673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gawel", "html_url": "https://github.com/gawel", "followers_url": "https://api.github.com/users/gawel/followers", "following_url": "https://api.github.com/users/gawel/following{/other_user}", "gists_url": "https://api.github.com/users/gawel/gists{/gist_id}", "starred_url": "https://api.github.com/users/gawel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gawel/subscriptions", "organizations_url": "https://api.github.com/users/gawel/orgs", "repos_url": "https://api.github.com/users/gawel/repos", "events_url": "https://api.github.com/users/gawel/events{/privacy}", "received_events_url": "https://api.github.com/users/gawel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-03T07:55:33Z", "updated_at": "2018-10-27T07:55:56Z", "closed_at": "2018-10-27T07:55:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since [yield_fixture](https://docs.pytest.org/en/latest/yieldfixture.html) is deprecated and normal fixture function supports yield now, we should update the pytest plugin.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/86", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/86/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/86/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/86", "id": 331031180, "node_id": "MDU6SXNzdWUzMzEwMzExODA=", "number": 86, "title": " Specify parameters with `__init__` of WebTest.TestApp", "user": {"login": "mtb-beta", "id": 1449264, "node_id": "MDQ6VXNlcjE0NDkyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1449264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtb-beta", "html_url": "https://github.com/mtb-beta", "followers_url": "https://api.github.com/users/mtb-beta/followers", "following_url": "https://api.github.com/users/mtb-beta/following{/other_user}", "gists_url": "https://api.github.com/users/mtb-beta/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtb-beta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtb-beta/subscriptions", "organizations_url": "https://api.github.com/users/mtb-beta/orgs", "repos_url": "https://api.github.com/users/mtb-beta/repos", "events_url": "https://api.github.com/users/mtb-beta/events{/privacy}", "received_events_url": "https://api.github.com/users/mtb-beta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-11T02:59:54Z", "updated_at": "2018-12-11T17:52:37Z", "closed_at": "2018-12-11T17:52:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nCurrently, extra_environ and relative_to are specified in `__init__` of TestApp.\r\n\r\nwebtest can also specify the following parameters:\r\n\r\nuse_unicode, cookiejar, parser_features,\u3000json_encoder, lint\r\n\r\n```\r\n    def __init__(self, app, extra_environ=None, relative_to=None,\r\n                 use_unicode=True, cookiejar=None, parser_features=None,\r\n                 json_encoder=None, lint=True):\r\n```\r\nhttps://github.com/Pylons/webtest/blob/master/webtest/app.py#L145-L147\r\n\r\nI want to specify these.\r\n\r\n# reason\r\n\r\nIn django_webtest 1.9 and later, HTTP_HOST is forcibly rewritten to testserver.\r\n\r\nWebTest's default cookie policy does not accept cookies from testserver.\r\n\r\nTherefore, django_webtest can not test functions using cookies.\r\n\r\nIf django_webtest can set cookiejear in TestApp, this problem will be solved.\r\n\r\nSince it is expected that there are other problems that can not pass parameters to `__init__` of TestApp, it is better that django_webtest can set it in the same way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/84", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/84/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/84/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/84", "id": 320220390, "node_id": "MDU6SXNzdWUzMjAyMjAzOTA=", "number": 84, "title": "1.9.3 middleware error", "user": {"login": "cazino", "id": 287542, "node_id": "MDQ6VXNlcjI4NzU0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/287542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cazino", "html_url": "https://github.com/cazino", "followers_url": "https://api.github.com/users/cazino/followers", "following_url": "https://api.github.com/users/cazino/following{/other_user}", "gists_url": "https://api.github.com/users/cazino/gists{/gist_id}", "starred_url": "https://api.github.com/users/cazino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cazino/subscriptions", "organizations_url": "https://api.github.com/users/cazino/orgs", "repos_url": "https://api.github.com/users/cazino/repos", "events_url": "https://api.github.com/users/cazino/events{/privacy}", "received_events_url": "https://api.github.com/users/cazino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-04T10:11:42Z", "updated_at": "2018-10-27T08:02:31Z", "closed_at": "2018-10-27T08:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since 1.9.3 was relased some test can break in django 1.11:\r\n \r\n```python\r\ndef _patch_settings(self):\r\n        '''\r\n            Patches settings to add support for django-webtest authorization\r\n            and (optional) to disable CSRF checks.\r\n            '''\r\n        self._DEBUG_PROPAGATE_EXCEPTIONS = settings.DEBUG_PROPAGATE_EXCEPTIONS\r\n>       self._MIDDLEWARE = self.settings_middleware[:]\r\nE       TypeError: 'NoneType' object has no attribute '__getitem__'\r\n```\r\n\r\nThe context is a django application compatible with 1.11 but whose settings still uses the MIDDLEWARE_CLASSES setting.\r\n\r\nThis commit broke it : https://github.com/django-webtest/django-webtest/pull/82/commits/7c8b821c135281cf76020e9ab1455b460516bb3b\r\n\r\nI don't fully understand the purpose of this commit since by default, whatever the settings are,\r\nhasattr(settings, 'MIDDLEWARE') will return True.\r\n\r\nIt's seems to me that this commit basically dropped the  MIDDLEWARE_CLASSES support.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/81", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/81/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/81/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/81", "id": 303872356, "node_id": "MDU6SXNzdWUzMDM4NzIzNTY=", "number": 81, "title": "AttributtError if MIDDLEWARE is empty", "user": {"login": "bmihelac", "id": 13813, "node_id": "MDQ6VXNlcjEzODEz", "avatar_url": "https://avatars0.githubusercontent.com/u/13813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmihelac", "html_url": "https://github.com/bmihelac", "followers_url": "https://api.github.com/users/bmihelac/followers", "following_url": "https://api.github.com/users/bmihelac/following{/other_user}", "gists_url": "https://api.github.com/users/bmihelac/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmihelac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmihelac/subscriptions", "organizations_url": "https://api.github.com/users/bmihelac/orgs", "repos_url": "https://api.github.com/users/bmihelac/repos", "events_url": "https://api.github.com/users/bmihelac/events{/privacy}", "received_events_url": "https://api.github.com/users/bmihelac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-09T15:09:51Z", "updated_at": "2018-03-13T20:13:54Z", "closed_at": "2018-03-13T20:13:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`middleware_setting_name` [method](https://github.com/django-webtest/django-webtest/blob/master/django_webtest/__init__.py#L283-L293) checks if attribute `MIDDLEWARE` exists in settings and that it is truthy. \r\n\r\n Empty list or None (which is default) `MIDDLEWARE` would not pass meaning middleware name would be from there `MIDDLEWARE_CLASSES` . This raises `AttributeError: 'Settings' object has no attribute 'MIDDLEWARE_CLASSES'`. \r\n\r\nLet me know if PR or test case is needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/75", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/75/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/75/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/75", "id": 277910738, "node_id": "MDU6SXNzdWUyNzc5MTA3Mzg=", "number": 75, "title": "Calling a get/put/etc method with user=None is not equivalent to set_user=None", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-29T21:20:09Z", "updated_at": "2017-12-08T16:45:41Z", "closed_at": "2017-12-08T16:45:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!  I found a small inconsistency that\u2019s mildly inconvenient.\r\n\r\nContext: In a project where 90% of the views require authentication, I define a simple `app` fixture that calls `django_app.set_user('bill@example.ca')` and returns that testapp object.  For tests that check that the open views are indeed open, or that a specific view is indeed restricted (which is needed to make sure custom permissions work as intended with rest-framework for example), I can either use the base `django_app` fixture, or use my `app` and start the test with `app.set_user(None)` to remove `WEBTEST_USER` from the WSGI environment.\r\n\r\nI found myself changing some tests to use a consistent style (pass `user=user2` or `user=None` everywhere instead of calling set_user in a few cases), and that did not reset the user.\r\n\r\nProposed fix: in `_update_environ`, use a sentinel object instead of None to determine if the `user` parameter was given or not; if it is None, remove `WEBTEST_USER`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/74", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/74/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/74/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/74", "id": 234930854, "node_id": "MDU6SXNzdWUyMzQ5MzA4NTQ=", "number": 74, "title": "Support authentication for django-rest-framework", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-06-09T20:27:35Z", "updated_at": "2018-12-17T14:58:34Z", "closed_at": "2018-12-17T08:43:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!  django-rest-framework uses its own authentication system, so calling `set_user` or `get(url, user=...)` has no effect for drf views that need authentication.\r\n\r\nI am writing a custom drf auth backend that will work with the WEBTEST_USER header, and configure my settings manually to have it used.  Would you be interested in that class + an option to make WebTestMixin patch it in automatically?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/70", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/70/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/70/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/70", "id": 215521015, "node_id": "MDU6SXNzdWUyMTU1MjEwMTU=", "number": 70, "title": "API changes not in CHANGES", "user": {"login": "karyon", "id": 1891915, "node_id": "MDQ6VXNlcjE4OTE5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1891915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karyon", "html_url": "https://github.com/karyon", "followers_url": "https://api.github.com/users/karyon/followers", "following_url": "https://api.github.com/users/karyon/following{/other_user}", "gists_url": "https://api.github.com/users/karyon/gists{/gist_id}", "starred_url": "https://api.github.com/users/karyon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karyon/subscriptions", "organizations_url": "https://api.github.com/users/karyon/orgs", "repos_url": "https://api.github.com/users/karyon/repos", "events_url": "https://api.github.com/users/karyon/events{/privacy}", "received_events_url": "https://api.github.com/users/karyon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-20T18:54:17Z", "updated_at": "2017-05-17T10:28:23Z", "closed_at": "2017-05-17T08:52:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/django-webtest/django-webtest/commit/c47176dd0f86dc28684003323f09d7277a8affbc changed the API of `get`, `post`, `put` etc. We had to change our tests because of these changes, and i found nothing in the release notes and manually searched for the corresponding commit.\r\n\r\nso yeah, i'd suggest adding these changes to the 1.9.0 release notes retroactively.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/69", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/69/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/69/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/69", "id": 214233070, "node_id": "MDU6SXNzdWUyMTQyMzMwNzA=", "number": 69, "title": "Cookies broken after 1.9.0", "user": {"login": "lsgunth", "id": 6739835, "node_id": "MDQ6VXNlcjY3Mzk4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6739835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsgunth", "html_url": "https://github.com/lsgunth", "followers_url": "https://api.github.com/users/lsgunth/followers", "following_url": "https://api.github.com/users/lsgunth/following{/other_user}", "gists_url": "https://api.github.com/users/lsgunth/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsgunth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsgunth/subscriptions", "organizations_url": "https://api.github.com/users/lsgunth/orgs", "repos_url": "https://api.github.com/users/lsgunth/repos", "events_url": "https://api.github.com/users/lsgunth/events{/privacy}", "received_events_url": "https://api.github.com/users/lsgunth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-14T23:05:32Z", "updated_at": "2017-05-08T21:00:03Z", "closed_at": "2017-05-08T21:00:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \r\n\r\nAfter attempting to upgrade to 1.9.1 I found my tests that use app.set_cookie no longer work. The exact same code worked in 1.8.0 and earlier. I narrowed down the problem to commit 9eb0fef9. It seems setting HTTP_HOST means none of my cookies get forwarded to Django proper (this is Django 1.9.12) . Commenting out that line, or even changing it to HTTPS_HOST seems to fix the issue.\r\n\r\nThanks,\r\n\r\nLogan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/65", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/65/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/65/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/65", "id": 210602967, "node_id": "MDU6SXNzdWUyMTA2MDI5Njc=", "number": 65, "title": "Better error reporting for unexpected 400 status", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-27T20:52:18Z", "updated_at": "2017-02-28T16:46:52Z", "closed_at": "2017-02-28T16:46:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "During development, tests will fail when the app returns Bad Request instead of the expected 200 or 201 code.  The error message from webtest only shows that 400 != 200, but with django forms or django-rest-framework validators, there is more information in the response body, but it\u2019s not displayed.\r\n\r\nCurrent workflow: change the test to have status=400 and print response.body.\r\n\r\nDesired change: Define DjangoTestApp._check_status:\r\n\r\n```python\r\n\r\n    def _check_status(self, status, res):\r\n        if status is not None and status != res.status_int:\r\n            msg = 'Bad response: {} (not {})\\n{}'.format(res.status, status, res.body)\r\n            raise webtest.AppError(msg)\r\n        super(DjangoTestApp, self)._check_status(status, res)\r\n```\r\n\r\n(Code adapted from https://stackoverflow.com/questions/13505778/finding-the-real-error-in-a-webtest-test-failure ; res.body shows all headers and response bytes, which always works compared to res.json for example)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/64", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/64/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/64/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/64", "id": 209923751, "node_id": "MDU6SXNzdWUyMDk5MjM3NTE=", "number": 64, "title": "Importing django_webtest should not cause access of django.conf.settings", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-24T00:14:12Z", "updated_at": "2017-03-07T16:59:49Z", "closed_at": "2017-03-07T09:16:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!  In my config, a pytest_configure hook defines environment variables (for database URL, secret key, etc.) before calling django.setup (which imports my settings module).\r\n\r\nThe body of WebTestMixin accesses settings.MIDDLEWARE, which raises ImproperlyConfigured('Requested setting MIDDLEWARE, but settings are not configured. [etc]',)\r\nI work around by importing WebTestMixin inside a pytest session-scoped fixture (see #60 ). \r\n\r\nCan you use other code to detect whether MIDDLEWARE or MIDDLEWARE_CLASSES is the right thing to use?  Or move the existing code into a (cached) property?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/63", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/63/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/63/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/63", "id": 209919471, "node_id": "MDU6SXNzdWUyMDk5MTk0NzE=", "number": 63, "title": "Update link to webtest in github repo description", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-23T23:48:05Z", "updated_at": "2017-03-07T09:04:41Z", "closed_at": "2017-03-07T09:04:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://pythonpaste.org/webtest/ is a 404\r\n\r\nhttp://docs.pylonsproject.org/projects/webtest/ works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/61", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/61/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/61/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/61", "id": 192180806, "node_id": "MDU6SXNzdWUxOTIxODA4MDY=", "number": 61, "title": "Unable to login to Django admin", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-11-29T03:45:46Z", "updated_at": "2016-12-02T11:31:10Z", "closed_at": "2016-12-01T20:25:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should this work with Django's admin?\r\n\r\nI tried to use your login example with my '/admin/', but even though the form submit appears to succeed and returns a 200 response, all subsequent GET requests still return the login page, implying I failed to login.\r\n\r\nMy test looks like:\r\n\r\n    def test_login(self):\r\n\r\n        username = 'test@mydomain.com'\r\n        password = 'password'\r\n        user, _ = User.objects.get_or_create(\r\n            username=username,\r\n            defaults=dict(\r\n                email=username,\r\n                is_superuser=True,\r\n                is_staff=True,\r\n                is_active=True,\r\n            )\r\n        )\r\n        user.is_superuser = True\r\n        user.set_password(password)\r\n        user.save()\r\n\r\n        form = self.app.get('/admin/myapp/').form\r\n        form['username'] = user.username\r\n        form['password'] = password\r\n        response = form.submit().follow()\r\n        print('response', response)\r\n        self.assertEqual(response.status_int, 200)\r\n\r\nI'm running my test via Django test runner management command like:\r\n\r\n    python manage.py test myapp.WebTests.test_login\r\n\r\nAlso, is there anything like Django's builtin unittest Client.login() method to handle low-hanging-fruit operations like this, so it's not something I need to repeat all the time?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/60", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/60/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/60/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/60", "id": 190655576, "node_id": "MDU6SXNzdWUxOTA2NTU1NzY=", "number": 60, "title": "[proposition] pytest fixture", "user": {"login": "dszmaj", "id": 3924928, "node_id": "MDQ6VXNlcjM5MjQ5Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3924928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dszmaj", "html_url": "https://github.com/dszmaj", "followers_url": "https://api.github.com/users/dszmaj/followers", "following_url": "https://api.github.com/users/dszmaj/following{/other_user}", "gists_url": "https://api.github.com/users/dszmaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/dszmaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dszmaj/subscriptions", "organizations_url": "https://api.github.com/users/dszmaj/orgs", "repos_url": "https://api.github.com/users/dszmaj/repos", "events_url": "https://api.github.com/users/dszmaj/events{/privacy}", "received_events_url": "https://api.github.com/users/dszmaj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2016-11-21T09:03:17Z", "updated_at": "2017-03-11T12:31:09Z", "closed_at": "2017-03-11T12:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have you thought about making a fixture for pytest?\r\n\r\nit would be extremely great to be able to use webtest like this\r\n```python\r\n@pytest.mark.django_db\r\ndef test_django(app):\r\n    resp = app.get('/smth/', user='smone')\r\n    form = resp.forms['main']\r\n    form['some_field'] = 'smth'\r\n    submitted = form.submit()\r\n    assert submitted.status_int == 200\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/58", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/58/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/58/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/58", "id": 176230490, "node_id": "MDU6SXNzdWUxNzYyMzA0OTA=", "number": 58, "title": "Logging in doesn't work ", "user": {"login": "hujosh", "id": 17036601, "node_id": "MDQ6VXNlcjE3MDM2NjAx", "avatar_url": "https://avatars0.githubusercontent.com/u/17036601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hujosh", "html_url": "https://github.com/hujosh", "followers_url": "https://api.github.com/users/hujosh/followers", "following_url": "https://api.github.com/users/hujosh/following{/other_user}", "gists_url": "https://api.github.com/users/hujosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/hujosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hujosh/subscriptions", "organizations_url": "https://api.github.com/users/hujosh/orgs", "repos_url": "https://api.github.com/users/hujosh/repos", "events_url": "https://api.github.com/users/hujosh/events{/privacy}", "received_events_url": "https://api.github.com/users/hujosh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-11T08:28:06Z", "updated_at": "2016-10-17T02:20:17Z", "closed_at": "2016-10-17T02:20:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apparently, webtest can handle logging a user into the app. OK, does it...?\n\n```\n\nclass IndexPage(WebTest):\n    def setUp(self):\n        User.objects.create_user(\n            username='danu',\n            password='test123',\n        )\n   def test_index_page_clicking_on_general_feedback(self):\n        # The user goes to the index page...\n        index = self.app.get('/', user='danu')\n        self.assertTemplateUsed(index, \"feedback/index.html\")\n```\n\nBut i'm not being logged in. I'm being redirected to the login page instead. What is happening? I know I have installed django webtest because my webtest tests worked before i added authentication to my application. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/55", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/55/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/55/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/55", "id": 170819341, "node_id": "MDU6SXNzdWUxNzA4MTkzNDE=", "number": 55, "title": "Drop old Django version support", "user": {"login": "sergei-maertens", "id": 5518550, "node_id": "MDQ6VXNlcjU1MTg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5518550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergei-maertens", "html_url": "https://github.com/sergei-maertens", "followers_url": "https://api.github.com/users/sergei-maertens/followers", "following_url": "https://api.github.com/users/sergei-maertens/following{/other_user}", "gists_url": "https://api.github.com/users/sergei-maertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergei-maertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergei-maertens/subscriptions", "organizations_url": "https://api.github.com/users/sergei-maertens/orgs", "repos_url": "https://api.github.com/users/sergei-maertens/repos", "events_url": "https://api.github.com/users/sergei-maertens/events{/privacy}", "received_events_url": "https://api.github.com/users/sergei-maertens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-12T08:06:44Z", "updated_at": "2017-02-21T21:03:55Z", "closed_at": "2017-02-21T21:03:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "From #54 it's clear that maintaining compatibility with ancient versions of Django provides a burden and demotivates people to submit/fix PR's/tests.\n\nI suggest dropping support for Django versions < 1.8, and following Django's support scheme. People stuck on old versions of Django can use older django-webtest versions that are compatible.\n\nThis would require shim code to be cleaned up, build config to be updated and a proper document that states wich version of django-webtest supports which Django versions.\n\nThis, in turn, would make it easier to add support for new Django versions (like in #54).\n\nI'm willing to draw up a PR after work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/54", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/54/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/54/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/54", "id": 169750424, "node_id": "MDU6SXNzdWUxNjk3NTA0MjQ=", "number": 54, "title": "Incompatible with django 1.10 MIDDLEWARE setting", "user": {"login": "karyon", "id": 1891915, "node_id": "MDQ6VXNlcjE4OTE5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1891915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karyon", "html_url": "https://github.com/karyon", "followers_url": "https://api.github.com/users/karyon/followers", "following_url": "https://api.github.com/users/karyon/following{/other_user}", "gists_url": "https://api.github.com/users/karyon/gists{/gist_id}", "starred_url": "https://api.github.com/users/karyon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karyon/subscriptions", "organizations_url": "https://api.github.com/users/karyon/orgs", "repos_url": "https://api.github.com/users/karyon/repos", "events_url": "https://api.github.com/users/karyon/events{/privacy}", "received_events_url": "https://api.github.com/users/karyon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-06T15:07:44Z", "updated_at": "2016-09-14T17:52:07Z", "closed_at": "2016-09-14T17:52:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "django-webtest seems to be incompatible with the MIDDLEWARE setting in django 1.10, authentication does not work in most of my tests.\n\nThe problem is most likely that the middlewares in django_webtest/middleware.py are not in the new middleware format. it's probably enough to make the middlewares inherit from the new mixin, see https://docs.djangoproject.com/en/1.10/topics/http/middleware/#upgrading-pre-django-1-10-style-middleware.\n\nmy workaround is to use the old MIDDLEWARE_CLASSES setting for now.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/49", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/49/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/49/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/49", "id": 150125919, "node_id": "MDU6SXNzdWUxNTAxMjU5MTk=", "number": 49, "title": "Authentication is not working with admin and postgres", "user": {"login": "eviltnan", "id": 3502492, "node_id": "MDQ6VXNlcjM1MDI0OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3502492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eviltnan", "html_url": "https://github.com/eviltnan", "followers_url": "https://api.github.com/users/eviltnan/followers", "following_url": "https://api.github.com/users/eviltnan/following{/other_user}", "gists_url": "https://api.github.com/users/eviltnan/gists{/gist_id}", "starred_url": "https://api.github.com/users/eviltnan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eviltnan/subscriptions", "organizations_url": "https://api.github.com/users/eviltnan/orgs", "repos_url": "https://api.github.com/users/eviltnan/repos", "events_url": "https://api.github.com/users/eviltnan/events{/privacy}", "received_events_url": "https://api.github.com/users/eviltnan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-04-21T16:33:40Z", "updated_at": "2017-11-08T22:13:20Z", "closed_at": "2017-11-08T22:13:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to test django admin interface with django-webtest. My tests are okay under sqlite, but when i change the database to postgres, I get 302 redirect to a login page of admin.\n\ntest:\n\n```\nclass TestInstrumentAdmin(MongoengineTestMixin, TransactionWebTest):\n    def setUp(self):\n        self.instrument = InstrumentFactory()\n        self.user = SuperUserFactory()\n\n    def test_change_instrument(self):\n        url = reverse('admin:stock_instrument_change', args=(self.instrument.id,))\n        response = self.app.get(url, user=self.user)\n        self.assertEqual(response.status_code, 200, response)\n```\n\nfactory:\n\n```\nclass SuperUserFactory(UserFactory):\n    username = factory.Sequence(lambda n: 'user%d' % n)\n    email = factory.LazyAttribute(lambda x: faker.email())\n    is_superuser = True\n    is_staff = True\n\n    @classmethod\n    def _create(cls, model_class, *args, **kwargs):\n        manager = cls._get_manager(model_class)\n        result = manager.create(*args, **kwargs)\n        result.set_password(\"test\")\n        result.save()\n        return result\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/47", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/47/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/47/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/47", "id": 127768114, "node_id": "MDU6SXNzdWUxMjc3NjgxMTQ=", "number": 47, "title": "Options method uses wrong signature in calling `super()`", "user": {"login": "carljm", "id": 61586, "node_id": "MDQ6VXNlcjYxNTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/61586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carljm", "html_url": "https://github.com/carljm", "followers_url": "https://api.github.com/users/carljm/followers", "following_url": "https://api.github.com/users/carljm/following{/other_user}", "gists_url": "https://api.github.com/users/carljm/gists{/gist_id}", "starred_url": "https://api.github.com/users/carljm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carljm/subscriptions", "organizations_url": "https://api.github.com/users/carljm/orgs", "repos_url": "https://api.github.com/users/carljm/repos", "events_url": "https://api.github.com/users/carljm/events{/privacy}", "received_events_url": "https://api.github.com/users/carljm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-20T19:45:15Z", "updated_at": "2017-03-13T07:43:41Z", "closed_at": "2017-03-13T07:43:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`DjangoTestApp.options` calls its `super` method with `(url, params, headers, extra_environ, status, **kwargs)`, but the actual signature of `TestApp.options` in webtest is `def options(self, url, headers=None, extra_environ=None, status=None, expect_errors=False, xhr=False):` -- note that there is no `params` in the signature.\n\nThis can cause a variety of problems when calling `options`, since due to the misalignment of the arguments none of `headers`, `extra_environ`, or `status` are passed correctly.\n\nWhile fixing this, it may be reasonable to switch to using keyword arguments for all these `super` calls, to catch positional mismatch problems more quickly in the future.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/43", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/43/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/43/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/43", "id": 121309503, "node_id": "MDU6SXNzdWUxMjEzMDk1MDM=", "number": 43, "title": "Use tox on travis", "user": {"login": "gawel", "id": 118673, "node_id": "MDQ6VXNlcjExODY3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/118673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gawel", "html_url": "https://github.com/gawel", "followers_url": "https://api.github.com/users/gawel/followers", "following_url": "https://api.github.com/users/gawel/following{/other_user}", "gists_url": "https://api.github.com/users/gawel/gists{/gist_id}", "starred_url": "https://api.github.com/users/gawel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gawel/subscriptions", "organizations_url": "https://api.github.com/users/gawel/orgs", "repos_url": "https://api.github.com/users/gawel/repos", "events_url": "https://api.github.com/users/gawel/events{/privacy}", "received_events_url": "https://api.github.com/users/gawel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-09T18:27:46Z", "updated_at": "2015-12-11T13:04:25Z", "closed_at": "2015-12-11T13:04:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think we should use tox to run test locally and on travis.\n\nI have an example on how to do that here:\n\nhttps://github.com/gawel/irc3/blob/master/.travis.yml\n\nI'll provide a PR for that\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/41", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/41/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/41/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/41", "id": 115869205, "node_id": "MDU6SXNzdWUxMTU4NjkyMDU=", "number": 41, "title": "Can't POST/PUT json", "user": {"login": "gawel", "id": 118673, "node_id": "MDQ6VXNlcjExODY3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/118673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gawel", "html_url": "https://github.com/gawel", "followers_url": "https://api.github.com/users/gawel/followers", "following_url": "https://api.github.com/users/gawel/following{/other_user}", "gists_url": "https://api.github.com/users/gawel/gists{/gist_id}", "starred_url": "https://api.github.com/users/gawel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gawel/subscriptions", "organizations_url": "https://api.github.com/users/gawel/orgs", "repos_url": "https://api.github.com/users/gawel/repos", "events_url": "https://api.github.com/users/gawel/events{/privacy}", "received_events_url": "https://api.github.com/users/gawel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-09T12:40:26Z", "updated_at": "2015-12-09T17:45:09Z", "closed_at": "2015-12-09T17:45:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "webtest allow to (post/put)_json but this is not implemented in django_webtest so you can't use the user=auser keyword argument\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/39", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/39/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/39/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/39", "id": 103661147, "node_id": "MDU6SXNzdWUxMDM2NjExNDc=", "number": 39, "title": "charset not set properly in TestResponse.goto", "user": {"login": "shiftycow", "id": 237453, "node_id": "MDQ6VXNlcjIzNzQ1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/237453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shiftycow", "html_url": "https://github.com/shiftycow", "followers_url": "https://api.github.com/users/shiftycow/followers", "following_url": "https://api.github.com/users/shiftycow/following{/other_user}", "gists_url": "https://api.github.com/users/shiftycow/gists{/gist_id}", "starred_url": "https://api.github.com/users/shiftycow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shiftycow/subscriptions", "organizations_url": "https://api.github.com/users/shiftycow/orgs", "repos_url": "https://api.github.com/users/shiftycow/repos", "events_url": "https://api.github.com/users/shiftycow/events{/privacy}", "received_events_url": "https://api.github.com/users/shiftycow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-28T07:13:01Z", "updated_at": "2015-08-28T07:16:06Z", "closed_at": "2015-08-28T07:16:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "In response.py, line 274 (TestResponse.goto), self.charset can be None, which causes encode() to throw an exception. A patched snippet is below:\n\n```\n# encode unicode strings for the outside world\nif not PY3 and getattr(self, '_use_unicode', False):\n    def to_str(s):\n        if isinstance(s, text_type):\n            if self.charset is None:\n                self.charset = 'utf-8'\n            return s.encode(self.charset)\n        return s\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/36", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/36/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/36/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/36", "id": 89384762, "node_id": "MDU6SXNzdWU4OTM4NDc2Mg==", "number": 36, "title": "MAINTAINERS WANTED", "user": {"login": "kmike", "id": 107893, "node_id": "MDQ6VXNlcjEwNzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmike", "html_url": "https://github.com/kmike", "followers_url": "https://api.github.com/users/kmike/followers", "following_url": "https://api.github.com/users/kmike/following{/other_user}", "gists_url": "https://api.github.com/users/kmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmike/subscriptions", "organizations_url": "https://api.github.com/users/kmike/orgs", "repos_url": "https://api.github.com/users/kmike/repos", "events_url": "https://api.github.com/users/kmike/events{/privacy}", "received_events_url": "https://api.github.com/users/kmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-18T20:05:16Z", "updated_at": "2015-12-09T19:36:35Z", "closed_at": "2015-12-09T19:15:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hey all,\n\nI like this project and want it to live, but unfortunately I don't have enough bandwidth to support django-webtest well. Please drop me (kmike84@gmail.com) an email if you want to help and step up as a maintainer.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/30", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/30/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/30/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/30", "id": 59230154, "node_id": "MDU6SXNzdWU1OTIzMDE1NA==", "number": 30, "title": "Ability to test for missing pages", "user": {"login": "gergelypolonkai", "id": 264485, "node_id": "MDQ6VXNlcjI2NDQ4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/264485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergelypolonkai", "html_url": "https://github.com/gergelypolonkai", "followers_url": "https://api.github.com/users/gergelypolonkai/followers", "following_url": "https://api.github.com/users/gergelypolonkai/following{/other_user}", "gists_url": "https://api.github.com/users/gergelypolonkai/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergelypolonkai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergelypolonkai/subscriptions", "organizations_url": "https://api.github.com/users/gergelypolonkai/orgs", "repos_url": "https://api.github.com/users/gergelypolonkai/repos", "events_url": "https://api.github.com/users/gergelypolonkai/events{/privacy}", "received_events_url": "https://api.github.com/users/gergelypolonkai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-27T12:27:56Z", "updated_at": "2015-06-23T19:34:19Z", "closed_at": "2015-06-23T19:34:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019d like to test for 404 errors (e.g. to simulate when a user tries to fetch a missing product entry); in this case, I get an AppError exception. With Django test client I can check response.status_code. Is it possible to do the same with WebTest?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/28", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/28/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/28/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/28", "id": 49829179, "node_id": "MDU6SXNzdWU0OTgyOTE3OQ==", "number": 28, "title": "Dependencies are not installed automatically", "user": {"login": "sirex", "id": 297583, "node_id": "MDQ6VXNlcjI5NzU4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/297583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirex", "html_url": "https://github.com/sirex", "followers_url": "https://api.github.com/users/sirex/followers", "following_url": "https://api.github.com/users/sirex/following{/other_user}", "gists_url": "https://api.github.com/users/sirex/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirex/subscriptions", "organizations_url": "https://api.github.com/users/sirex/orgs", "repos_url": "https://api.github.com/users/sirex/repos", "events_url": "https://api.github.com/users/sirex/events{/privacy}", "received_events_url": "https://api.github.com/users/sirex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-23T15:54:42Z", "updated_at": "2015-06-23T16:54:40Z", "closed_at": "2015-06-23T16:54:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently `setup.py` uses distutils, distutils donsn't automatically install dependencies, dependencies are installed only if you use setuptools.\n\nhttps://github.com/kmike/django-webtest/commit/ae7641bccada4dfd9b02df2c9cba6c2f57f626f9#commitcomment-8688136\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/25", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/25/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/25/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/25", "id": 33930806, "node_id": "MDU6SXNzdWUzMzkzMDgwNg==", "number": 25, "title": "Help needed while setting cookie for DjangoTestApp", "user": {"login": "rajalokan", "id": 1624307, "node_id": "MDQ6VXNlcjE2MjQzMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1624307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajalokan", "html_url": "https://github.com/rajalokan", "followers_url": "https://api.github.com/users/rajalokan/followers", "following_url": "https://api.github.com/users/rajalokan/following{/other_user}", "gists_url": "https://api.github.com/users/rajalokan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajalokan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajalokan/subscriptions", "organizations_url": "https://api.github.com/users/rajalokan/orgs", "repos_url": "https://api.github.com/users/rajalokan/repos", "events_url": "https://api.github.com/users/rajalokan/events{/privacy}", "received_events_url": "https://api.github.com/users/rajalokan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-20T21:26:22Z", "updated_at": "2017-05-18T00:32:42Z", "closed_at": "2017-05-18T00:32:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "To get through authentication while writing testcases, I'm trying to set cookies for a webtest request. All I want is in my application I can get request.COOKIES.get(settings.settings.SESSION_COOKIE_NAME) i.e. cookies need to be passed.\n\nHere is what I've done:\n\n```\ncj = cookielib.CookieJar(cookielib.DefaultCookiePolicy())\ncj.set_cookie(cookielib.Cookie(\n            version=1,\n            name=settings.SESSION_COOKIE_NAME, value=\"yzvqlvqcr2fiy6nfgaeczsqbhyr77363\",\n            port='80', port_specified=True, domain=\"localhost\", domain_specified=True,\n            domain_initial_dot=True, path=\"/\", path_specified=True, secure=True,\n            expires=True, discard=True, comment=None, comment_url=None, rest=None\n ))\napp = DjangoTestApp()\napp.cookiejar = cj\napp.get(\"/\")\n```\n\nCan anyone please help in this. I can't use other auth backends as we use LDAP for authentication.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/24", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/24/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/24/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/24", "id": 29990051, "node_id": "MDU6SXNzdWUyOTk5MDA1MQ==", "number": 24, "title": "Can't install using Python3", "user": {"login": "katomaso", "id": 1155974, "node_id": "MDQ6VXNlcjExNTU5NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1155974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/katomaso", "html_url": "https://github.com/katomaso", "followers_url": "https://api.github.com/users/katomaso/followers", "following_url": "https://api.github.com/users/katomaso/following{/other_user}", "gists_url": "https://api.github.com/users/katomaso/gists{/gist_id}", "starred_url": "https://api.github.com/users/katomaso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/katomaso/subscriptions", "organizations_url": "https://api.github.com/users/katomaso/orgs", "repos_url": "https://api.github.com/users/katomaso/repos", "events_url": "https://api.github.com/users/katomaso/events{/privacy}", "received_events_url": "https://api.github.com/users/katomaso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-23T15:56:45Z", "updated_at": "2014-03-26T01:50:55Z", "closed_at": "2014-03-26T01:50:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem is in setup.py at line\n\n```\nlong_description = open('README.rst').read() + \"\\n\\n\" + open('CHANGES.txt').read()\n```\n\nPlease make sure that both files do not include ani non-ASCI characters like \"Bruno Reni\u00e9\" in CHANGES.txt.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/18", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/18/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/18/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/18", "id": 17920445, "node_id": "MDU6SXNzdWUxNzkyMDQ0NQ==", "number": 18, "title": "int & files in a form", "user": {"login": "FrancoisConstant", "id": 218764, "node_id": "MDQ6VXNlcjIxODc2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/218764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancoisConstant", "html_url": "https://github.com/FrancoisConstant", "followers_url": "https://api.github.com/users/FrancoisConstant/followers", "following_url": "https://api.github.com/users/FrancoisConstant/following{/other_user}", "gists_url": "https://api.github.com/users/FrancoisConstant/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancoisConstant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancoisConstant/subscriptions", "organizations_url": "https://api.github.com/users/FrancoisConstant/orgs", "repos_url": "https://api.github.com/users/FrancoisConstant/repos", "events_url": "https://api.github.com/users/FrancoisConstant/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancoisConstant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-12T00:33:26Z", "updated_at": "2013-08-15T03:25:19Z", "closed_at": "2013-08-15T03:22:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nfirst of all, thanks a lot for that project, it does help a lot with writing great tests in Django.\n\nI'm using the latest stable version of webtest (1.7.5)\n\nI used to have a form like this with the test passing:\nform = response.form\nform['structure-total_number_of_employees'] = 50\n...\nresponse = form.submit()\n\nThen when I've added a file to that and updated my code:\nform = response.form\nform['logo'] = ...\nform['structure-total_number_of_employees'] = 50\n...\nresponse = form.submit()\n\nIt crashed with the following error:\nvirtual_env/dev_env/lib/python2.7/site-packages/webtest/app.py\", line 382, in encode_multipart\n    body = b'\\r\\n'.join(lines)\nTypeError: sequence item 12: expected string, int found\n\nTo get it to work, I've replaced 50 by \"50\":\nform = response.form\nform['logo'] = ...\nform['structure-total_number_of_employees'] = \"50\"\n...\nresponse = form.submit()\n\nI reckon that the encode multipart should be updated to handle integers.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/16", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/16/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/16/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/16", "id": 16732292, "node_id": "MDU6SXNzdWUxNjczMjI5Mg==", "number": 16, "title": "Ability for disable csrf_check for concrete test", "user": {"login": "kharandziuk", "id": 3404755, "node_id": "MDQ6VXNlcjM0MDQ3NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3404755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kharandziuk", "html_url": "https://github.com/kharandziuk", "followers_url": "https://api.github.com/users/kharandziuk/followers", "following_url": "https://api.github.com/users/kharandziuk/following{/other_user}", "gists_url": "https://api.github.com/users/kharandziuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kharandziuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kharandziuk/subscriptions", "organizations_url": "https://api.github.com/users/kharandziuk/orgs", "repos_url": "https://api.github.com/users/kharandziuk/repos", "events_url": "https://api.github.com/users/kharandziuk/events{/privacy}", "received_events_url": "https://api.github.com/users/kharandziuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-14T19:43:26Z", "updated_at": "2017-11-08T22:13:41Z", "closed_at": "2017-11-08T22:13:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a user I want to have the ability to disable csrf protection for concrete test via attribute or another handy method\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/15", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/15/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/15/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/15", "id": 16731672, "node_id": "MDU6SXNzdWUxNjczMTY3Mg==", "number": 15, "title": "Shortcut for POST and GET request via ajax", "user": {"login": "kharandziuk", "id": 3404755, "node_id": "MDQ6VXNlcjM0MDQ3NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3404755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kharandziuk", "html_url": "https://github.com/kharandziuk", "followers_url": "https://api.github.com/users/kharandziuk/followers", "following_url": "https://api.github.com/users/kharandziuk/following{/other_user}", "gists_url": "https://api.github.com/users/kharandziuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kharandziuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kharandziuk/subscriptions", "organizations_url": "https://api.github.com/users/kharandziuk/orgs", "repos_url": "https://api.github.com/users/kharandziuk/repos", "events_url": "https://api.github.com/users/kharandziuk/events{/privacy}", "received_events_url": "https://api.github.com/users/kharandziuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-07-14T18:54:44Z", "updated_at": "2014-11-16T17:28:51Z", "closed_at": "2014-11-16T17:28:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think this is messy to add every time this line:\n<code>headers={'X-REQUESTED-WITH': 'XMLHttpRequest'}</code>\nwhen I want to test an ajax request.\nCan I add shortcuts like post_ajax and get_ajax?\nOr should I address this issue to the original webtest project?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/11", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/11/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/11/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/11", "id": 16422888, "node_id": "MDU6SXNzdWUxNjQyMjg4OA==", "number": 11, "title": "PATCH support", "user": {"login": "wbbradley", "id": 3030224, "node_id": "MDQ6VXNlcjMwMzAyMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3030224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbbradley", "html_url": "https://github.com/wbbradley", "followers_url": "https://api.github.com/users/wbbradley/followers", "following_url": "https://api.github.com/users/wbbradley/following{/other_user}", "gists_url": "https://api.github.com/users/wbbradley/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbbradley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbbradley/subscriptions", "organizations_url": "https://api.github.com/users/wbbradley/orgs", "repos_url": "https://api.github.com/users/wbbradley/repos", "events_url": "https://api.github.com/users/wbbradley/events{/privacy}", "received_events_url": "https://api.github.com/users/wbbradley/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-05T23:36:56Z", "updated_at": "2013-07-16T19:45:20Z", "closed_at": "2013-07-16T19:45:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm thinking about adding support for PATCH. Any reason that's a bad idea?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/9", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/9/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/9/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/9", "id": 15747889, "node_id": "MDU6SXNzdWUxNTc0Nzg4OQ==", "number": 9, "title": "response._charset is not set, so breaks assertContains", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-19T14:35:41Z", "updated_at": "2013-06-19T14:43:31Z", "closed_at": "2013-06-19T14:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Inspecting response._charset (having done a post to an endpoint that returns application/json) - there is no _charset, so assertContains fails:\n\n```\nipdb> response._charset\n...\nTraceback (most recent call last):\n  File \"/blah/tests.py\", line 58, in test_something\n    self.assertContains(response, 'OK')\n  File \"/blah/.virtualenvs/blah/lib/python2.7/site-packages/django/test/testcases.py\", line 641, in assertContains\n    text = force_text(text, encoding=response._charset)\n  File \"/blah/.virtualenvs/blah/lib/python2.7/site-packages/django/utils/encoding.py\", line 112, in force_text\n    s = s.decode(encoding, errors)\nTypeError: decode() argument 1 must be string, not None\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/8", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/8/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/8/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/8", "id": 15304361, "node_id": "MDU6SXNzdWUxNTMwNDM2MQ==", "number": 8, "title": "Handling of non-ascii usernames", "user": {"login": "brutasse", "id": 31269, "node_id": "MDQ6VXNlcjMxMjY5", "avatar_url": "https://avatars0.githubusercontent.com/u/31269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brutasse", "html_url": "https://github.com/brutasse", "followers_url": "https://api.github.com/users/brutasse/followers", "following_url": "https://api.github.com/users/brutasse/following{/other_user}", "gists_url": "https://api.github.com/users/brutasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/brutasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brutasse/subscriptions", "organizations_url": "https://api.github.com/users/brutasse/orgs", "repos_url": "https://api.github.com/users/brutasse/repos", "events_url": "https://api.github.com/users/brutasse/events{/privacy}", "received_events_url": "https://api.github.com/users/brutasse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-06-08T12:41:01Z", "updated_at": "2013-06-11T07:31:01Z", "closed_at": "2013-06-11T00:54:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "tl;dr: replace `'foo'` with `'fo\u00f2'` in the test suite and watch things break.\n\nNon-ascii usernames seems a bit broken at the moment, at least on python2. Since `to_string` (from compat.py) calls `str()` on the value if it's unicode, this fails with an encoding error when the given value is not plain ascii.\n\n`self.app.get(url, user=u'fo\u00f2')` breaks completely on python 2. The workaround is to pass a native string instead of a unicode string with `self.app.get(url, user=force_bytes(username))` everywhere. This somewhat works but the test output ends up with lots `UnicodeWarnings` and the client code isn't very friendly. This also prevents using a user instance as `user=` kwarg since `get_username()` returns a unicode string instead of a native string.\n\nThe WSGI pep says native strings must be used but they're not the same thing in py2 and py3.\n\nI've tried to come up with an implementation that doesn't break on unicode based on what [webtest does](https://github.com/Pylons/webtest/blob/master/webtest/lint.py#L140-L144) data but failed so far.\n\nIdeas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/6", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/6/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/6/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/6", "id": 13884457, "node_id": "MDU6SXNzdWUxMzg4NDQ1Nw==", "number": 6, "title": "django 1.5 textarea widget renders \\r\\n and django-webtest save this value but browsers not (eat first empty line).", "user": {"login": "suvit", "id": 344584, "node_id": "MDQ6VXNlcjM0NDU4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/344584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suvit", "html_url": "https://github.com/suvit", "followers_url": "https://api.github.com/users/suvit/followers", "following_url": "https://api.github.com/users/suvit/following{/other_user}", "gists_url": "https://api.github.com/users/suvit/gists{/gist_id}", "starred_url": "https://api.github.com/users/suvit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suvit/subscriptions", "organizations_url": "https://api.github.com/users/suvit/orgs", "repos_url": "https://api.github.com/users/suvit/repos", "events_url": "https://api.github.com/users/suvit/events{/privacy}", "received_events_url": "https://api.github.com/users/suvit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-05-02T10:05:13Z", "updated_at": "2013-05-04T13:01:05Z", "closed_at": "2013-05-02T20:43:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u041f\u043e\u0441\u043b\u0435 django/django@78f66691ee7974e0ca546f09573394395a68b443 \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 textarea \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \\r\\n. \u0411\u0440\u0430\u0443\u0437\u0435\u0440\u044b \u0435\u0433\u043e \u043d\u0435 \u043f\u043e\u0441\u044b\u043b\u0430\u044e\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. \u041d\u043e webtest.form \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u0442 \u043f\u0440\u0438 form.submit(). \u0418\u0437-\u0437\u0430 \u044d\u0442\u043e\u0433\u043e \u0432 \u0444\u043e\u0440\u043c\u0441\u0435\u0442\u0430\u0445 extra-\u0444\u043e\u0440\u043c\u044b \u0441 textarea \u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0442\u0441\u044f \u043d\u0435 \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u043c\u0438 \u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0435\u0441\u0442\u044b \u0432\u0430\u043b\u044f\u0442\u0441\u044f.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-webtest/django-webtest/issues/5", "repository_url": "https://api.github.com/repos/django-webtest/django-webtest", "labels_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/5/comments", "events_url": "https://api.github.com/repos/django-webtest/django-webtest/issues/5/events", "html_url": "https://github.com/django-webtest/django-webtest/issues/5", "id": 12734550, "node_id": "MDU6SXNzdWUxMjczNDU1MA==", "number": 5, "title": "Factory method to get a new `app` object", "user": {"login": "poswald", "id": 49721, "node_id": "MDQ6VXNlcjQ5NzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/49721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poswald", "html_url": "https://github.com/poswald", "followers_url": "https://api.github.com/users/poswald/followers", "following_url": "https://api.github.com/users/poswald/following{/other_user}", "gists_url": "https://api.github.com/users/poswald/gists{/gist_id}", "starred_url": "https://api.github.com/users/poswald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poswald/subscriptions", "organizations_url": "https://api.github.com/users/poswald/orgs", "repos_url": "https://api.github.com/users/poswald/repos", "events_url": "https://api.github.com/users/poswald/events{/privacy}", "received_events_url": "https://api.github.com/users/poswald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-04-03T02:20:35Z", "updated_at": "2017-03-13T07:44:28Z", "closed_at": "2017-03-13T07:44:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the project! I have a quick feature request. Perhaps there is a way to do it already... It would be nice to have a factory method to get a new `app` object that is set up the same way as the `self.app` object.\n\nI often have to check that two users can interact in a sane way (user A creates an object, user B can view it) and my functional test would need two logged in users. In these cases I use `self.app` for one of them, and would need to set up a second one because the session is tied to `self.app.session` but I want them to be set up identically (and with all of the nice things) django-webtest provides.\n\nWhat would be the best way to go about doing that? Let me know what you think. Thanks!\n", "performed_via_github_app": null, "score": 1.0}]}