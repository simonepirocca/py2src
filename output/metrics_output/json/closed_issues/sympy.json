{"total_count": 528, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/547", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/547/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/547/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/547", "id": 664491548, "node_id": "MDU6SXNzdWU2NjQ0OTE1NDg=", "number": 547, "title": "old warnings, release?", "user": {"login": "nschloe", "id": 181628, "node_id": "MDQ6VXNlcjE4MTYyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/181628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nschloe", "html_url": "https://github.com/nschloe", "followers_url": "https://api.github.com/users/nschloe/followers", "following_url": "https://api.github.com/users/nschloe/following{/other_user}", "gists_url": "https://api.github.com/users/nschloe/gists{/gist_id}", "starred_url": "https://api.github.com/users/nschloe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nschloe/subscriptions", "organizations_url": "https://api.github.com/users/nschloe/orgs", "repos_url": "https://api.github.com/users/nschloe/repos", "events_url": "https://api.github.com/users/nschloe/events{/privacy}", "received_events_url": "https://api.github.com/users/nschloe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T13:51:37Z", "updated_at": "2020-07-23T14:29:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting warnings concerning fixes that are 16 months old:\r\n\r\nhttps://github.com/fredrik-johansson/mpmath/commit/4990fb5cf3447b956e87bf060420a296b13cedb1#diff-550b6d03e9982886a0afe0a8e1e4010d\r\n\r\nPerhaps a release is in order?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/546", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/546/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/546/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/546", "id": 656434438, "node_id": "MDU6SXNzdWU2NTY0MzQ0Mzg=", "number": 546, "title": "Issue in Converting scientific notation to equivalent decimal ", "user": {"login": "shubhamkumarpanday", "id": 51882926, "node_id": "MDQ6VXNlcjUxODgyOTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/51882926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shubhamkumarpanday", "html_url": "https://github.com/shubhamkumarpanday", "followers_url": "https://api.github.com/users/shubhamkumarpanday/followers", "following_url": "https://api.github.com/users/shubhamkumarpanday/following{/other_user}", "gists_url": "https://api.github.com/users/shubhamkumarpanday/gists{/gist_id}", "starred_url": "https://api.github.com/users/shubhamkumarpanday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shubhamkumarpanday/subscriptions", "organizations_url": "https://api.github.com/users/shubhamkumarpanday/orgs", "repos_url": "https://api.github.com/users/shubhamkumarpanday/repos", "events_url": "https://api.github.com/users/shubhamkumarpanday/events{/privacy}", "received_events_url": "https://api.github.com/users/shubhamkumarpanday/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-14T08:34:36Z", "updated_at": "2020-07-28T08:52:34Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "http://mpmath.org/doc/1.1.0/general.html#conversion-and-printing\r\n\r\nHello mpmath team, \r\nmpmath library is awesome. I am using mpmath library in my  project. got stuck while converting \r\nx = '2.74650025508198e+107310'\r\ny = mpmath.mpmathify(x)\r\nhere I am unable to convert scientifc notatioin to  actual number. (It is generating nearest number)\r\ncan you please help me out how to resolve the issue.\r\n\r\nhere is my sample test code.\r\n```python\r\nfrom mpmath import *\r\nimport random\r\n\r\ndef test(num):\r\n  print(num)\r\n  num_mpf = mpmathify(num)\r\n  num_nstr = nstr(num_mpf, len(str(num)))\r\n  #removing .0 from num_nstr\r\n  without_zero = num_nstr[slice(len(num_nstr)-2)]\r\n  print(without_zero)\r\n  if str(num) == without_zero:\r\n    #print('In this scenario bigint is converting into scientific notation')\r\n    # print('its working fine, when i am passing the num_mpf object to nstr')\r\n    print(True)\r\n  else:\r\n    print(False)\r\n\r\n  print('---------------------')\r\n  #case two \r\n  num_nstr_two =  nstr(mpmathify(str(num_mpf)), len(str(num)))\r\n  print(str(num_mpf))\r\n  print(num_nstr_two)\r\n  without_zero_two = num_nstr_two[slice(len(num_nstr_two)-2)]\r\n  print(without_zero_two)\r\n  if str(num) == without_zero_two:\r\n    print(True)\r\n  else:\r\n    print('Failing in this scenario when Iam converting scientifc string to its equivalent decimal')\r\n    print(False)\r\n\r\ndef check(x):\r\n  for i in range(x):\r\n    y = random.randint(9**19, 10**19)\r\n    test(y)\r\n    print('$$$$$$$$$$$$$$$$')\r\n\r\ncheck(1)\r\n```\r\nhow to overcome this problem?\r\n\r\nRecently I did testing for scientific notation to equivalent decimal. I found that It's working till this 999999999999999 correctly\r\nafter that it's not converting correctly string scientific notation number to equivalent decimal\r\n\r\nmpmath.nstr(mpf('2.74650025508198e+107310'), 107311) isn't converting to correct number.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/545", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/545/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/545/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/545", "id": 646788787, "node_id": "MDU6SXNzdWU2NDY3ODg3ODc=", "number": 545, "title": "Imaginary parts of error functions are incorrect", "user": {"login": "paulmasson", "id": 3289562, "node_id": "MDQ6VXNlcjMyODk1NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3289562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulmasson", "html_url": "https://github.com/paulmasson", "followers_url": "https://api.github.com/users/paulmasson/followers", "following_url": "https://api.github.com/users/paulmasson/following{/other_user}", "gists_url": "https://api.github.com/users/paulmasson/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulmasson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulmasson/subscriptions", "organizations_url": "https://api.github.com/users/paulmasson/orgs", "repos_url": "https://api.github.com/users/paulmasson/repos", "events_url": "https://api.github.com/users/paulmasson/events{/privacy}", "received_events_url": "https://api.github.com/users/paulmasson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-27T23:22:51Z", "updated_at": "2020-06-27T23:22:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The error function is odd in its argument, so that comparing values of the complementary error function on either side of the complex plane should merely have a change of sign. Instead:\r\n\r\n```\r\n>>> x=100+j\r\n>>> erfc(x)\r\nmpc(real='8.634691205220881e-4346', imag='1.5120569745187501e-4345')\r\n>>> erfc(-x)\r\nmpc(real='2.0', imag='-3.75294172883895e-25')\r\n```\r\n\r\nAs you can see there is a major difference in magnitude between the two complex parts. This appears to be because in the left-hand plane the evaluation of `erfc` is processed through `erf`, so the problem must be there.\r\n\r\nIndeed, Mathematica 10 gives\r\n\r\n```\r\nErf[100. + I] \r\n1. - 1.512056974518836*10^-4345 I\r\n```\r\n\r\nwhose complex part mostly matches that above, while mpmath has\r\n\r\n```\r\n>>> erf(100+j)\r\nmpc(real='1.0', imag='-7.6847485642570108e-23')\r\n```\r\nSomething is amiss in the error function...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/544", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/544/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/544/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/544", "id": 643317480, "node_id": "MDU6SXNzdWU2NDMzMTc0ODA=", "number": 544, "title": "AssertionError on mpmath.runtests()", "user": {"login": "Keneth-Garcia", "id": 67290517, "node_id": "MDQ6VXNlcjY3MjkwNTE3", "avatar_url": "https://avatars3.githubusercontent.com/u/67290517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keneth-Garcia", "html_url": "https://github.com/Keneth-Garcia", "followers_url": "https://api.github.com/users/Keneth-Garcia/followers", "following_url": "https://api.github.com/users/Keneth-Garcia/following{/other_user}", "gists_url": "https://api.github.com/users/Keneth-Garcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keneth-Garcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keneth-Garcia/subscriptions", "organizations_url": "https://api.github.com/users/Keneth-Garcia/orgs", "repos_url": "https://api.github.com/users/Keneth-Garcia/repos", "events_url": "https://api.github.com/users/Keneth-Garcia/events{/privacy}", "received_events_url": "https://api.github.com/users/Keneth-Garcia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-22T19:44:38Z", "updated_at": "2020-06-22T19:44:38Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I recently installed Mpmath 1.1.0 on Python 3.8.3. I follow the instructions and run the mpmath.runtests() and all work fine except for testquad, the problem is:\r\n\r\n> test_quad\r\n    basic_integrals           ok        0.6461758 s\r\n    complex_integration       ok        0.0013039 s\r\n    double_1                  ok        0.1096764 s\r\n    double_2                  ok        0.2130465 s\r\n    double_3                  ok        0.2557877 s\r\n    double_4                  ok        0.1146773 s\r\n    double_5                  ok        0.0830822 s\r\n    double_6                  ok        0.4477933 s\r\n    double_7                  ok        2.1835598 s\r\n    double_trivial            ok        0.0166782 s\r\n    expmath_fail              \r\nTEST FAILED!\r\nok        0.0133552 s\r\nexpmath_integrals         Traceback (most recent call last):\r\n  File \"C:\\Users\\<name>\\AppData\\Roaming\\Python\\Python38\\site-packages\\mpmath\\tests\\runtests.py\", line 118, in testit\r\n    module.__dict__[f]()\r\n  File \"C:\\Users\\<name>\\AppData\\Roaming\\Python\\Python38\\site-packages\\mpmath\\tests\\test_quad.py\", line 88, in test_expmath_fail\r\n    assert ae(quadts(lambda x: sqrt(tan(x)), [0, pi/2]),          pi*sqrt(2)/2)\r\nAssertionError\r\nok        0.4116084 s\r\n    quad_infinite_mirror      ok        0.0145721 s\r\n    quad_symmetry             ok        0.0005973 s\r\n    quadgl_linear             ok        0.0000974 s\r\n    quadosc                   ok        0.2591071 s\r\n\r\nWhat do i need to do for solve this problem? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/543", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/543/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/543/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/543", "id": 642631840, "node_id": "MDExOlB1bGxSZXF1ZXN0NDM3NTk0MDEx", "number": 543, "title": "fixing issue: Determinant function raises TypeError on simple matrix #542", "user": {"login": "sonntagsgesicht", "id": 7409785, "node_id": "MDQ6VXNlcjc0MDk3ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7409785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonntagsgesicht", "html_url": "https://github.com/sonntagsgesicht", "followers_url": "https://api.github.com/users/sonntagsgesicht/followers", "following_url": "https://api.github.com/users/sonntagsgesicht/following{/other_user}", "gists_url": "https://api.github.com/users/sonntagsgesicht/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonntagsgesicht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonntagsgesicht/subscriptions", "organizations_url": "https://api.github.com/users/sonntagsgesicht/orgs", "repos_url": "https://api.github.com/users/sonntagsgesicht/repos", "events_url": "https://api.github.com/users/sonntagsgesicht/events{/privacy}", "received_events_url": "https://api.github.com/users/sonntagsgesicht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-21T20:05:07Z", "updated_at": "2020-06-30T15:48:09Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/543", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/543", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/543.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/543.patch"}, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/542", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/542/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/542/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/542", "id": 642630312, "node_id": "MDU6SXNzdWU2NDI2MzAzMTI=", "number": 542, "title": "Determinant function raises TypeError on simple matrix", "user": {"login": "sonntagsgesicht", "id": 7409785, "node_id": "MDQ6VXNlcjc0MDk3ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7409785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonntagsgesicht", "html_url": "https://github.com/sonntagsgesicht", "followers_url": "https://api.github.com/users/sonntagsgesicht/followers", "following_url": "https://api.github.com/users/sonntagsgesicht/following{/other_user}", "gists_url": "https://api.github.com/users/sonntagsgesicht/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonntagsgesicht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonntagsgesicht/subscriptions", "organizations_url": "https://api.github.com/users/sonntagsgesicht/orgs", "repos_url": "https://api.github.com/users/sonntagsgesicht/repos", "events_url": "https://api.github.com/users/sonntagsgesicht/events{/privacy}", "received_events_url": "https://api.github.com/users/sonntagsgesicht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-21T19:54:55Z", "updated_at": "2020-06-21T19:54:55Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "determinant function `det(A)` on matrix `A = matrix([[0, 0, 4], [2, 0, 3], [0, 0, -3]])` raises \r\n`TypeError: '>=' not supported between instances of 'NoneType' and 'int'`.\r\n\r\nDue to issue in `LU_decomp` line `143` at `ctx.swap_row(A, j, p[j])` according `p[j]`being none, since `A` has a zero column.\r\n\r\nMany be `det` should check first if there is any zero column. If so `det` is zero and `LU_decomp` is not required any more.\r\n\r\n```\r\n   if any(all(almosteq(0,x) for x in A[:,c]) for c in range(A.cols)):\r\n       return 0*A[0,0]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/541", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/541/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/541/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/541", "id": 638444825, "node_id": "MDU6SXNzdWU2Mzg0NDQ4MjU=", "number": 541, "title": "\"TypeError: data type not understood\" when using mpmath splot in Python 3.8.3", "user": {"login": "vochong", "id": 24501410, "node_id": "MDQ6VXNlcjI0NTAxNDEw", "avatar_url": "https://avatars1.githubusercontent.com/u/24501410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vochong", "html_url": "https://github.com/vochong", "followers_url": "https://api.github.com/users/vochong/followers", "following_url": "https://api.github.com/users/vochong/following{/other_user}", "gists_url": "https://api.github.com/users/vochong/gists{/gist_id}", "starred_url": "https://api.github.com/users/vochong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vochong/subscriptions", "organizations_url": "https://api.github.com/users/vochong/orgs", "repos_url": "https://api.github.com/users/vochong/repos", "events_url": "https://api.github.com/users/vochong/events{/privacy}", "received_events_url": "https://api.github.com/users/vochong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-14T22:39:14Z", "updated_at": "2020-06-14T22:39:14Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "\r\npython\r\nPython 3.8.3 (default, May 17 2020, 18:15:42) \r\n\r\n>>> from mpmath import *\r\n>>> f = lambda x, y: sin(x+y)*cos(y)\r\n>>> splot(f, [-pi,pi], [-pi,pi]) \r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/python/Pyvenv/lib/python3.8/site-packages/mpmath/visualization.py\", line 267, in splot\r\n    u = pylab.linspace(ua, ub, M)\r\n  File \"<__array_function__ internals>\", line 5, in linspace\r\n  File \"/home/python/Pyvenv/lib/python3.8/site-packages/numpy/core/function_base.py\", line 132, in linspace\r\n    dt = result_type(start, stop, float(num))\r\n  File \"<__array_function__ internals>\", line 5, in result_type\r\nTypeError: data type not understood\r\n>>> \r\n>>> \r\n>>> matplotlib.__version__\r\n'3.2.1'\r\n>>> mpmath.__version__\r\n'1.1.0'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/540", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/540/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/540/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/540", "id": 637054206, "node_id": "MDU6SXNzdWU2MzcwNTQyMDY=", "number": 540, "title": "Multivariate tanh-sinh quadrature ?", "user": {"login": "lrnv", "id": 15571061, "node_id": "MDQ6VXNlcjE1NTcxMDYx", "avatar_url": "https://avatars3.githubusercontent.com/u/15571061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lrnv", "html_url": "https://github.com/lrnv", "followers_url": "https://api.github.com/users/lrnv/followers", "following_url": "https://api.github.com/users/lrnv/following{/other_user}", "gists_url": "https://api.github.com/users/lrnv/gists{/gist_id}", "starred_url": "https://api.github.com/users/lrnv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lrnv/subscriptions", "organizations_url": "https://api.github.com/users/lrnv/orgs", "repos_url": "https://api.github.com/users/lrnv/repos", "events_url": "https://api.github.com/users/lrnv/events{/privacy}", "received_events_url": "https://api.github.com/users/lrnv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-11T14:16:45Z", "updated_at": "2020-06-11T14:32:13Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Could you explain to me why the tanh-sinh quadrature in bounded to 3-dimensional problems ? Would it be very hard to code it for general dimensions $d > 3$ ? (true question -- i really dont know)\r\n\r\nIf you think it's doable, maybe i'll take the time to do it myself: In that case, could you point me to the portion of the code that might need edition ? I guess the `quad` wrapper might need some modifications too.\r\n\r\nEDIT : After reading the code a little, i think things happend there : https://github.com/fredrik-johansson/mpmath/blob/6a675bf08ef285e8b8ec956bcfd03a425b2b6ded/mpmath/calculus/quadrature.py#L744t748\r\n\r\nWould it be enough to add more cases to this if / elif / else statement, constructed as it is for 2dim and 3dim, to add more dimensions ? Are there other pieces of the code that i should change ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/539", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/539/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/539/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/539", "id": 628676550, "node_id": "MDU6SXNzdWU2Mjg2NzY1NTA=", "number": 539, "title": "mpmath.mpf fails converting numpy.int64", "user": {"login": "Iamsoto", "id": 13967954, "node_id": "MDQ6VXNlcjEzOTY3OTU0", "avatar_url": "https://avatars3.githubusercontent.com/u/13967954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Iamsoto", "html_url": "https://github.com/Iamsoto", "followers_url": "https://api.github.com/users/Iamsoto/followers", "following_url": "https://api.github.com/users/Iamsoto/following{/other_user}", "gists_url": "https://api.github.com/users/Iamsoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/Iamsoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Iamsoto/subscriptions", "organizations_url": "https://api.github.com/users/Iamsoto/orgs", "repos_url": "https://api.github.com/users/Iamsoto/repos", "events_url": "https://api.github.com/users/Iamsoto/events{/privacy}", "received_events_url": "https://api.github.com/users/Iamsoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-01T19:37:29Z", "updated_at": "2020-06-01T19:37:29Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\n\r\nI understand there was a very similar issue #382 that is closed, but it appears I'm getting the same issue again.\r\n\r\n\r\n```\r\n>>from mpmath import mpf\r\n>>import numpy\r\n\r\n>>my_mpf = mpf(numpy.int64(1))\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"...site-packages/mpmath/ctx_mp_python.py\", line 77, in __new__\r\n    v._mpf_ = mpf_pos(cls.mpf_convert_arg(val, prec, rounding), prec, rounding)\r\n  File \"...site-packages/mpmath/ctx_mp_python.py\", line 96, in mpf_convert_arg\r\n    raise TypeError(\"cannot create mpf from \" + repr(x))\r\nTypeError: cannot create mpf from 1\r\n\r\n```\r\n\r\nTo my understanding, I'm using the latest version of mpmath \r\n```\r\n>> import mpmath\r\n>> mpmath.__version__\r\n1.1.0\r\n```\r\npython --version \r\n3.7.6\r\n\r\nThanks!\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/538", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/538/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/538/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/538", "id": 622849572, "node_id": "MDU6SXNzdWU2MjI4NDk1NzI=", "number": 538, "title": "Add IntervalUnion to mpmath", "user": {"login": "oscarbenjamin", "id": 1159732, "node_id": "MDQ6VXNlcjExNTk3MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1159732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oscarbenjamin", "html_url": "https://github.com/oscarbenjamin", "followers_url": "https://api.github.com/users/oscarbenjamin/followers", "following_url": "https://api.github.com/users/oscarbenjamin/following{/other_user}", "gists_url": "https://api.github.com/users/oscarbenjamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/oscarbenjamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oscarbenjamin/subscriptions", "organizations_url": "https://api.github.com/users/oscarbenjamin/orgs", "repos_url": "https://api.github.com/users/oscarbenjamin/repos", "events_url": "https://api.github.com/users/oscarbenjamin/events{/privacy}", "received_events_url": "https://api.github.com/users/oscarbenjamin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-21T23:25:58Z", "updated_at": "2020-06-10T17:37:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I want to use mpmath's interval arithmetic to implement a global numerical equation solver based in the interval Newton method. I have a proof of concept implementation here:\r\nhttps://github.com/sympy/sympy/issues/19164\r\n\r\nThe bulk of the implementation is actually not the interval Newton algorithm itself (although that needs to be extended substantially) but actually just implementing a class that represents unions of intervals rather than individual intervals. This is needed even just to come up with a satisfactory representation of the division of two intervals where the divisor contains zero.\r\n\r\nWe definitely want to add this solver in sympy but I'm wondering if it makes sense for some part of the implementation (e.g. the IntervalUnion class) to live in mpmath so it can be used by other downstream projects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/537", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/537/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/537/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/537", "id": 621696566, "node_id": "MDExOlB1bGxSZXF1ZXN0NDIwNjk3OTk0", "number": 537, "title": "QuadratureRule.summation adds the error across intervals", "user": {"login": "tminka", "id": 8955276, "node_id": "MDQ6VXNlcjg5NTUyNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8955276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tminka", "html_url": "https://github.com/tminka", "followers_url": "https://api.github.com/users/tminka/followers", "following_url": "https://api.github.com/users/tminka/following{/other_user}", "gists_url": "https://api.github.com/users/tminka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tminka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tminka/subscriptions", "organizations_url": "https://api.github.com/users/tminka/orgs", "repos_url": "https://api.github.com/users/tminka/repos", "events_url": "https://api.github.com/users/tminka/events{/privacy}", "received_events_url": "https://api.github.com/users/tminka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-20T11:47:35Z", "updated_at": "2020-06-08T18:52:21Z", "closed_at": "2020-06-08T07:29:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/537", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/537", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/537.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/537.patch"}, "body": "Fixes #535 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/536", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/536/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/536/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/536", "id": 619089454, "node_id": "MDU6SXNzdWU2MTkwODk0NTQ=", "number": 536, "title": "ncdf crashes on extreme negative input", "user": {"login": "tminka", "id": 8955276, "node_id": "MDQ6VXNlcjg5NTUyNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8955276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tminka", "html_url": "https://github.com/tminka", "followers_url": "https://api.github.com/users/tminka/followers", "following_url": "https://api.github.com/users/tminka/following{/other_user}", "gists_url": "https://api.github.com/users/tminka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tminka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tminka/subscriptions", "organizations_url": "https://api.github.com/users/tminka/orgs", "repos_url": "https://api.github.com/users/tminka/repos", "events_url": "https://api.github.com/users/tminka/events{/privacy}", "received_events_url": "https://api.github.com/users/tminka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-15T16:16:33Z", "updated_at": "2020-05-15T16:16:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This happens regardless of how I set `mp.dps`:\r\n```\r\n>>> ncdf(mpf('-1e155'))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\minka\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath-1.1.1.dev79+gffec62b-py3.8.egg\\mpmath\\ctx_mp_python.py\", line 1021, in f_wrapped\r\n    retval = f(ctx, *args, **kwargs)\r\n  File \"C:\\Users\\minka\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath-1.1.1.dev79+gffec62b-py3.8.egg\\mpmath\\functions\\expintegrals.py\", line 104, in ncdf\r\n    return ctx.erfc(-a)/2\r\n  File \"C:\\Users\\minka\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath-1.1.1.dev79+gffec62b-py3.8.egg\\mpmath\\functions\\expintegrals.py\", line 44, in erfc\r\n    return ctx._erfc(z)\r\n  File \"C:\\Users\\minka\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath-1.1.1.dev79+gffec62b-py3.8.egg\\mpmath\\ctx_mp_python.py\", line 998, in f\r\n    return ctx.make_mpf(mpf_f(x._mpf_, prec, rounding))\r\n  File \"C:\\Users\\minka\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath-1.1.1.dev79+gffec62b-py3.8.egg\\mpmath\\libmp\\libhyper.py\", line 398, in mpf_erfc\r\n    if regular_erf or not erfc_check_series(x, wp):\r\n  File \"C:\\Users\\minka\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath-1.1.1.dev79+gffec62b-py3.8.egg\\mpmath\\libmp\\libhyper.py\", line 382, in erfc_check_series\r\n    if n**2 * 1.44 > prec:\r\nOverflowError: int too large to convert to float\r\n```\r\nNote that the same input can be passed to `gammainc` to compute the right answer:\r\n```\r\n>>> x = mpf('-1e155')\r\n>>> 0.5 * gammainc(0.5, x * x / 2, inf) / gamma(0.5)\r\nmpf('2.8906871993620541e-2171472409516259162096378348236416386950173120994437064050179809277218150069317714056427630444102865724348157440221394668942788034574566328286989268632797830157561357746621945862917952194280746407840643371251469933846770116885272075938621496386476456858678592635795651089884010832663736366312054719930568518707')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/535", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/535/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/535/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/535", "id": 619029334, "node_id": "MDU6SXNzdWU2MTkwMjkzMzQ=", "number": 535, "title": "quad returns wrong error estimate over multiple intervals", "user": {"login": "tminka", "id": 8955276, "node_id": "MDQ6VXNlcjg5NTUyNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8955276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tminka", "html_url": "https://github.com/tminka", "followers_url": "https://api.github.com/users/tminka/followers", "following_url": "https://api.github.com/users/tminka/following{/other_user}", "gists_url": "https://api.github.com/users/tminka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tminka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tminka/subscriptions", "organizations_url": "https://api.github.com/users/tminka/orgs", "repos_url": "https://api.github.com/users/tminka/repos", "events_url": "https://api.github.com/users/tminka/events{/privacy}", "received_events_url": "https://api.github.com/users/tminka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-15T14:50:13Z", "updated_at": "2020-06-08T07:29:40Z", "closed_at": "2020-06-08T07:29:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`mpmath.quad` allows the integration to be split into multiple subintervals.  However, it then returns an incorrect error estimate.  For example:\r\n```\r\n>>> y,err = quad(lambda x: sign(x), [-0.5, 0.9, 1], maxdegree=2, verbose=True, error=True)\r\nIntegrating from -0.5 to 0.9 (degree 1 of 2)\r\nIntegrating from -0.5 to 0.9 (degree 2 of 2)\r\nEstimated error: 0.274889\r\nIntegrating from 0.9 to 1 (degree 1 of 2)\r\nIntegrating from 0.9 to 1 (degree 2 of 2)\r\nEstimated error: 3.35957e-7\r\nFailed to reach full accuracy. Estimated error: 3.35957e-7\r\n>>> err\r\nmpf('3.3595707746405553e-7')\r\n```\r\nThe error estimate returned is always that of the last subinterval.  It should be the total error of all subintervals.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/534", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/534/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/534/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/534", "id": 611164482, "node_id": "MDU6SXNzdWU2MTExNjQ0ODI=", "number": 534, "title": "Digamma function of certain complex values does not converge", "user": {"login": "ribault", "id": 4943993, "node_id": "MDQ6VXNlcjQ5NDM5OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4943993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ribault", "html_url": "https://github.com/ribault", "followers_url": "https://api.github.com/users/ribault/followers", "following_url": "https://api.github.com/users/ribault/following{/other_user}", "gists_url": "https://api.github.com/users/ribault/gists{/gist_id}", "starred_url": "https://api.github.com/users/ribault/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ribault/subscriptions", "organizations_url": "https://api.github.com/users/ribault/orgs", "repos_url": "https://api.github.com/users/ribault/repos", "events_url": "https://api.github.com/users/ribault/events{/privacy}", "received_events_url": "https://api.github.com/users/ribault/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-02T11:26:48Z", "updated_at": "2020-06-28T21:13:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The function digamma(z) = psi(0, z) does not seem to converge if the real part of z is less than -1/2: the calculation keeps running without giving an answer. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/533", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/533/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/533/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/533", "id": 587064237, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkzMDc2OTYy", "number": 533, "title": "Fix scalar-matrix-multiplication for mpi * iv.matrix", "user": {"login": "MaxGaukler", "id": 21340673, "node_id": "MDQ6VXNlcjIxMzQwNjcz", "avatar_url": "https://avatars2.githubusercontent.com/u/21340673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxGaukler", "html_url": "https://github.com/MaxGaukler", "followers_url": "https://api.github.com/users/MaxGaukler/followers", "following_url": "https://api.github.com/users/MaxGaukler/following{/other_user}", "gists_url": "https://api.github.com/users/MaxGaukler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxGaukler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxGaukler/subscriptions", "organizations_url": "https://api.github.com/users/MaxGaukler/orgs", "repos_url": "https://api.github.com/users/MaxGaukler/repos", "events_url": "https://api.github.com/users/MaxGaukler/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxGaukler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-24T15:50:06Z", "updated_at": "2020-07-22T08:37:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/533", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/533", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/533.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/533.patch"}, "body": "Fixes this error:\r\n```\r\n>>> mpmath.mpi(1,2) * mpmath.iv.eye(1)\r\n...\r\nTypeError: cannot unpack non-iterable NoneType object\r\n```\r\n\r\nAnd adds a test for the currently failing case of `mpmath.mp.matrix * mpmath.iv.matrix`. That test is marked as expected failure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/532", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/532/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/532/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/532", "id": 586680827, "node_id": "MDU6SXNzdWU1ODY2ODA4Mjc=", "number": 532, "title": "Metaclassing causes different classes for custom contexts", "user": {"login": "sylee957", "id": 34944973, "node_id": "MDQ6VXNlcjM0OTQ0OTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/34944973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylee957", "html_url": "https://github.com/sylee957", "followers_url": "https://api.github.com/users/sylee957/followers", "following_url": "https://api.github.com/users/sylee957/following{/other_user}", "gists_url": "https://api.github.com/users/sylee957/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylee957/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylee957/subscriptions", "organizations_url": "https://api.github.com/users/sylee957/orgs", "repos_url": "https://api.github.com/users/sylee957/repos", "events_url": "https://api.github.com/users/sylee957/events{/privacy}", "received_events_url": "https://api.github.com/users/sylee957/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-24T04:20:41Z", "updated_at": "2020-03-24T04:20:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python3\r\nimport mpmath\r\nfrom mpmath import MPContext\r\n\r\nmp = mpmath.mp\r\nmp0 = MPContext()\r\n\r\nprint(isinstance(mp.matrix([[1, 2], [3, 4]]), mp.matrix))\r\nprint(isinstance(mp.matrix([[1, 2], [3, 4]]), mp0.matrix))\r\nprint(isinstance(mp0.matrix([[1, 2], [3, 4]]), mp.matrix))\r\nprint(isinstance(mp0.matrix([[1, 2], [3, 4]]), mp0.matrix))\r\n\r\nprint(isinstance(mp.mpf(1), mp.mpf))\r\nprint(isinstance(mp.mpf(1), mp0.mpf))\r\nprint(isinstance(mp0.mpf(1), mp.mpf))\r\nprint(isinstance(mp0.mpf(1), mp0.mpf))\r\n\r\nprint(isinstance(mp.mpq(1), mp.mpq))\r\nprint(isinstance(mp.mpq(1), mp0.mpq))\r\nprint(isinstance(mp0.mpq(1), mp.mpq))\r\nprint(isinstance(mp0.mpq(1), mp0.mpq))\r\n```\r\n\r\nI see mp contexts are creating different classes on fly, but only `mpq` is hardcoded to a single class.\r\nHow should I check if a class is generally an instance of mpf or matrix across every contexts? Were those metaclsses necessary for mpf and matrix?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/531", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/531/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/531/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/531", "id": 586280767, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkyNDQzNTE1", "number": 531, "title": "Fix initialization of iv.matrix from non-interval matrix", "user": {"login": "MaxGaukler", "id": 21340673, "node_id": "MDQ6VXNlcjIxMzQwNjcz", "avatar_url": "https://avatars2.githubusercontent.com/u/21340673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxGaukler", "html_url": "https://github.com/MaxGaukler", "followers_url": "https://api.github.com/users/MaxGaukler/followers", "following_url": "https://api.github.com/users/MaxGaukler/following{/other_user}", "gists_url": "https://api.github.com/users/MaxGaukler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxGaukler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxGaukler/subscriptions", "organizations_url": "https://api.github.com/users/MaxGaukler/orgs", "repos_url": "https://api.github.com/users/MaxGaukler/repos", "events_url": "https://api.github.com/users/MaxGaukler/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxGaukler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-23T15:07:13Z", "updated_at": "2020-03-23T15:07:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/531", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/531", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/531.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/531.patch"}, "body": "Non-interval datatypes were not converted to intervals, resulting in unexpected behavior. For example, `M[i, j]` from `mpmath.iv.matrix` didn't return `mpi` interval objects, but `mpf` floats, so `M[i, j] * M[k, l]` and, under certain conditions, `M * M`, was not performed as interval multiplication.\r\n\r\nBefore going into details, I'd like to ask a related question: How is the `force_type` argument supposed to work: Is this the expected result?\r\n```\r\n>>> M = mpmath.matrix(mpmath.matrix([[0,1,2]]), force_type=bool)\r\n>>> M\r\nmatrix(\r\n[['0.0', '1.0', '1.0']])\r\n>>> type(M[0,0])\r\n<class 'mpmath.ctx_mp_python.mpf'>\r\n>>> M._matrix__data\r\n{(0, 1): mpf('1.0'), (0, 2): mpf('1.0')}\r\n```\r\nThe documentation states that the type is preserved, so I would expect `bool`, not `mpf`: (quote from the docs)\r\n```\r\n  If you want to preserve the type of the elements you can use\r\n    ``force_type=None``:\r\n\r\n        >>> matrix([[1, 2.5], [1j, mpf(2)]], force_type=None)\r\n        matrix(\r\n        [['1.0', '2.5'],\r\n         [mpc(real='0.0', imag='1.0'), '2.0']])\r\n```\r\nHowever, even this documentation example shows that the type of matrix[0,0] is not preserved (int -> mpf), because setitem always calls ctx.convert(). In fact, the output doesn't change if `force_type=None` is omitted. The other doctest for `force_type` is skipped and would actually fail. (It seems these doctests were \"disabled\" in d29966edb887cc6246713ce78d6fa99f6eb16ff6 and were probably broken before).\r\n\r\nI'd suggest removing `force_type` entirely because even if it worked, the resulting behavior could be rather unintuitive.\r\n\r\n\r\nTo come back to the original problem: The old behavior could have unexpected consequences, as outlined below.\r\n\r\n\"Exact\" computation for reference:\r\n```\r\n>>> import mpmath\r\n>>> x = mpmath.convert('1.00000000000001') # 1.0000...001 rounded to the next mpf floating point value\r\n>>> mpmath.mp.dps=1000\r\n>>> x*x # Good approximation of x*x\r\nmpf('1.00000000000001998401444325291756783368705994138804689654360263219301518944348572404123842716217041015625')\r\n```\r\n\r\nInterval arithmetic should return an interval containing that value, with some uncertainty.\r\n\r\nRestart python to reset mp.dps.\r\nBefore this commit, the following occurs:\r\n```\r\n>>> import mpmath\r\n>>> x = mpmath.convert('1.00000000000001')\r\n>>> x\r\nmpf('1.00000000000001')\r\n>>> A = mpmath.matrix([[x]])\r\n>>> B = mpmath.iv.matrix(A)\r\n>>> C = mpmath.iv.matrix([[x]])\r\n>>> A*A\r\nmatrix(\r\n[['1.00000000000002']])\r\n>>> B*B\r\nmatrix(\r\n[['[1.000000000000019984, 1.000000000000019984]']])\r\n>>> (B*B)[0,0].delta\r\nmpi('0.0', '0.0')\r\n>>> C*C\r\nmatrix(\r\n[['[1.000000000000019984, 1.0000000000000202061]']])\r\n```\r\n\r\n`B*B` is wrong, the interval width must be nonzero at the default precision of 15 digits.\r\n`B*B != C*C`, although both were initialized from the same numerical value and computed the same way.\r\n\r\nAfter this commit, the result is valid:\r\n```\r\n>>> B*B\r\nmatrix(\r\n[['[1.000000000000019984, 1.0000000000000202061]']])\r\n>>> (B*B)[0,0].delta\r\nmpi('2.2204460492503131e-16', '2.2204460492503131e-16')\r\n```\r\nSome more insight:\r\n\r\nOld incorrect behavior:\r\n```\r\n>>> mpmath.iv.matrix(mpmath.eye(1))[0,0]\r\nmpf('1.0')\r\n```\r\n\r\nNew correct behavior:\r\n```\r\n>>> mpmath.iv.matrix(mpmath.eye(1))\r\nmatrix(\r\n[['[1.0, 1.0]']])\r\n>>> mpmath.iv.matrix(mpmath.eye(1))[0,0]\r\nmpi('1.0', '1.0')\r\n>>> mpmath.fp.matrix(mpmath.eye(1))[0,0]\r\n1.0\r\n>>> mpmath.matrix(mpmath.eye(1))[0,0]\r\nmpf('1.0')\r\n```\r\n\r\nThe type now exactly matches the type returned by the context's matrix functions such as eye():\r\n```\r\n>>> mpmath.matrix(mpmath.eye(1))[0,0]\r\nmpf('1.0')\r\n>>> mpmath.eye(1)[0,0]\r\nmpf('1.0')\r\n>>> mpmath.iv.matrix(mpmath.eye(1))[0,0]\r\nmpi('1.0', '1.0')\r\n>>> mpmath.iv.eye(1)[0,0]\r\nmpi('1.0', '1.0')\r\n>>> mpmath.fp.matrix(mpmath.eye(1))[0,0]\r\n1.0\r\n>>> mpmath.fp.eye(1)[0,0]\r\n1.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/530", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/530/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/530/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/530", "id": 586202122, "node_id": "MDU6SXNzdWU1ODYyMDIxMjI=", "number": 530, "title": "codecov.io shows strange coverage", "user": {"login": "MaxGaukler", "id": 21340673, "node_id": "MDQ6VXNlcjIxMzQwNjcz", "avatar_url": "https://avatars2.githubusercontent.com/u/21340673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxGaukler", "html_url": "https://github.com/MaxGaukler", "followers_url": "https://api.github.com/users/MaxGaukler/followers", "following_url": "https://api.github.com/users/MaxGaukler/following{/other_user}", "gists_url": "https://api.github.com/users/MaxGaukler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxGaukler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxGaukler/subscriptions", "organizations_url": "https://api.github.com/users/MaxGaukler/orgs", "repos_url": "https://api.github.com/users/MaxGaukler/repos", "events_url": "https://api.github.com/users/MaxGaukler/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxGaukler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-23T13:18:57Z", "updated_at": "2020-03-23T13:18:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This screenshot from https://codecov.io/gh/fredrik-johansson/mpmath/src/8eae5da064603f1f871bb8c33eb2bba22b3f5b19/mpmath/matrices/matrices.py#L946\r\nshows weird coverage annotations that make no sense:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/21340673/77320422-d5acd700-6d10-11ea-824d-6ce1137b38ed.png)\r\n\r\nSomething may be wrong with the collection or parsing of coverage data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/529", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/529/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/529/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/529", "id": 585740310, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkyMDIxMTM1", "number": 529, "title": "fixed indexing errors in inverse laplace transform algorithm, as pointed out by Mark Bakker", "user": {"login": "klkuhlm", "id": 1680533, "node_id": "MDQ6VXNlcjE2ODA1MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1680533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klkuhlm", "html_url": "https://github.com/klkuhlm", "followers_url": "https://api.github.com/users/klkuhlm/followers", "following_url": "https://api.github.com/users/klkuhlm/following{/other_user}", "gists_url": "https://api.github.com/users/klkuhlm/gists{/gist_id}", "starred_url": "https://api.github.com/users/klkuhlm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klkuhlm/subscriptions", "organizations_url": "https://api.github.com/users/klkuhlm/orgs", "repos_url": "https://api.github.com/users/klkuhlm/repos", "events_url": "https://api.github.com/users/klkuhlm/events{/privacy}", "received_events_url": "https://api.github.com/users/klkuhlm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-22T15:10:24Z", "updated_at": "2020-03-22T17:01:03Z", "closed_at": "2020-03-22T17:01:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/529", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/529", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/529.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/529.patch"}, "body": "The fix made a tiny change to the near-zero imaginary results in a couple doctests, so I updated those too.\r\n\r\nThere appear to be some other failing doctests (e.g., missing \"xrange\"), but they have nothing to do with inverselaplace.py, so I left them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/528", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/528/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/528/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/528", "id": 585107438, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkxNTYyNzU1", "number": 528, "title": "Matrix equality: Implement M == None, raise exception for unknown types", "user": {"login": "MaxGaukler", "id": 21340673, "node_id": "MDQ6VXNlcjIxMzQwNjcz", "avatar_url": "https://avatars2.githubusercontent.com/u/21340673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxGaukler", "html_url": "https://github.com/MaxGaukler", "followers_url": "https://api.github.com/users/MaxGaukler/followers", "following_url": "https://api.github.com/users/MaxGaukler/following{/other_user}", "gists_url": "https://api.github.com/users/MaxGaukler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxGaukler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxGaukler/subscriptions", "organizations_url": "https://api.github.com/users/MaxGaukler/orgs", "repos_url": "https://api.github.com/users/MaxGaukler/repos", "events_url": "https://api.github.com/users/MaxGaukler/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxGaukler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-20T14:30:00Z", "updated_at": "2020-04-27T08:52:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/528", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/528", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/528.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/528.patch"}, "body": "The following statements now no longer give a cryptic error message:\r\n```\r\n>>> import mpmath, numpy\r\n>>> mpmath.eye(2) == None\r\nFalse\r\n>>> mpmath.eye(2) == numpy.eye(2)   \r\n...\r\nNotImplementedError: Unsupported type for testing equality: mpmath.matrix == <type 'numpy.ndarray'>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/527", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/527/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/527/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/527", "id": 585099994, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkxNTU2NzMx", "number": 527, "title": "Support randmatrix() for mp.iv and mp contexts", "user": {"login": "MaxGaukler", "id": 21340673, "node_id": "MDQ6VXNlcjIxMzQwNjcz", "avatar_url": "https://avatars2.githubusercontent.com/u/21340673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxGaukler", "html_url": "https://github.com/MaxGaukler", "followers_url": "https://api.github.com/users/MaxGaukler/followers", "following_url": "https://api.github.com/users/MaxGaukler/following{/other_user}", "gists_url": "https://api.github.com/users/MaxGaukler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxGaukler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxGaukler/subscriptions", "organizations_url": "https://api.github.com/users/MaxGaukler/orgs", "repos_url": "https://api.github.com/users/MaxGaukler/repos", "events_url": "https://api.github.com/users/MaxGaukler/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxGaukler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-20T14:18:06Z", "updated_at": "2020-04-24T13:14:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/527", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/527", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/527.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/527.patch"}, "body": "Before, `mpmath.iv.randmatrix()` caused an error. Now it works correctly:\r\n\r\n```\r\n>>> import mpmath\r\n>>> mpmath.iv.randmatrix(3)\r\nmatrix(\r\n[['[0.66382280562735496154, 0.66382280562735496154]', '[0.016861908353603016764, 0.016861908353603016764]', '[0.73734056129022396142, 0.73734056129022396142]'],\r\n ['[0.36647301100616180847, 0.36647301100616180847]', '[0.62220372249504873885, 0.62220372249504873885]', '[0.48761902415903068952, 0.48761902415903068952]'],\r\n ['[0.81322606973113087392, 0.81322606973113087392]', '[0.15903271707414323721, 0.15903271707414323721]', '[0.090983058161586249923, 0.090983058161586249923]']])\r\n>>> type(mpmath.fp.randmatrix(3)[0,0])\r\n<type 'float'>\r\n>>> type(mpmath.mp.randmatrix(3)[0,0])\r\n<class 'mpmath.ctx_mp_python.mpf'>\r\n>>> type(mpmath.iv.randmatrix(3)[0,0])\r\n<class 'mpmath.ctx_iv.ivmpf'>\r\n```\r\n\r\n- [ ] Is it okay that I moved `import random` to the top level? AFAIK it should even be faster this way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/526", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/526/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/526/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/526", "id": 585090215, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkxNTQ4NzY4", "number": 526, "title": "Implement unary plus for matrices (+M == M)", "user": {"login": "MaxGaukler", "id": 21340673, "node_id": "MDQ6VXNlcjIxMzQwNjcz", "avatar_url": "https://avatars2.githubusercontent.com/u/21340673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxGaukler", "html_url": "https://github.com/MaxGaukler", "followers_url": "https://api.github.com/users/MaxGaukler/followers", "following_url": "https://api.github.com/users/MaxGaukler/following{/other_user}", "gists_url": "https://api.github.com/users/MaxGaukler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxGaukler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxGaukler/subscriptions", "organizations_url": "https://api.github.com/users/MaxGaukler/orgs", "repos_url": "https://api.github.com/users/MaxGaukler/repos", "events_url": "https://api.github.com/users/MaxGaukler/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxGaukler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-20T14:02:22Z", "updated_at": "2020-06-08T07:28:00Z", "closed_at": "2020-06-08T07:27:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/526", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/526", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/526.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/526.patch"}, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/525", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/525/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/525/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/525", "id": 584996431, "node_id": "MDExOlB1bGxSZXF1ZXN0MzkxNDczNjUy", "number": 525, "title": "Support @ for matrix multiplication", "user": {"login": "MaxGaukler", "id": 21340673, "node_id": "MDQ6VXNlcjIxMzQwNjcz", "avatar_url": "https://avatars2.githubusercontent.com/u/21340673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxGaukler", "html_url": "https://github.com/MaxGaukler", "followers_url": "https://api.github.com/users/MaxGaukler/followers", "following_url": "https://api.github.com/users/MaxGaukler/following{/other_user}", "gists_url": "https://api.github.com/users/MaxGaukler/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxGaukler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxGaukler/subscriptions", "organizations_url": "https://api.github.com/users/MaxGaukler/orgs", "repos_url": "https://api.github.com/users/MaxGaukler/repos", "events_url": "https://api.github.com/users/MaxGaukler/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxGaukler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T11:09:28Z", "updated_at": "2020-03-22T16:56:04Z", "closed_at": "2020-03-22T16:55:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/525", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/525", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/525.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/525.patch"}, "body": "The meaning of ``*`` is ambiguous: Some libraries such as NumPy use it for elementwise multiplication, others for matrix multiplication. Since Python3 and [PEP465](https://www.python.org/dev/peps/pep-0465/), there is a new operator ``@`` for matrix multiplication. \r\n\r\nThis pull request adds ``@`` as an alias for ``*`` and includes some workarounds so that the tests using ``@`` can be skipped under ~~Python 2~~ Python <= 3.4, where it is a syntax error. (Not sure how long you plan to support Python 2, which has reached its end-of-life, see https://python3statement.org/ ).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/524", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/524/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/524/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/524", "id": 584355117, "node_id": "MDU6SXNzdWU1ODQzNTUxMTc=", "number": 524, "title": "Deprecation warning from six.py", "user": {"login": "rikardn", "id": 12795317, "node_id": "MDQ6VXNlcjEyNzk1MzE3", "avatar_url": "https://avatars0.githubusercontent.com/u/12795317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rikardn", "html_url": "https://github.com/rikardn", "followers_url": "https://api.github.com/users/rikardn/followers", "following_url": "https://api.github.com/users/rikardn/following{/other_user}", "gists_url": "https://api.github.com/users/rikardn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rikardn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rikardn/subscriptions", "organizations_url": "https://api.github.com/users/rikardn/orgs", "repos_url": "https://api.github.com/users/rikardn/repos", "events_url": "https://api.github.com/users/rikardn/events{/privacy}", "received_events_url": "https://api.github.com/users/rikardn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T11:47:34Z", "updated_at": "2020-07-23T09:02:40Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I get the following warning from mpmath (when using it via sympy):\r\n\r\n```\r\n.tox/py37/lib/python3.7/site-packages/mpmath/libmp/six.py:74\r\n  /home/user/devel/myproj/.tox/py37/lib/python3.7/site-packages/mpmath/libmp/six.py:74: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n    __import__(name)\r\n```\r\n\r\nI'm using mpmath 1.1.0 from PyPI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/523", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/523/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/523/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/523", "id": 584131481, "node_id": "MDU6SXNzdWU1ODQxMzE0ODE=", "number": 523, "title": "Unexpected return from mp.hermite when evaluating limit", "user": {"login": "jacksonvanover", "id": 31899319, "node_id": "MDQ6VXNlcjMxODk5MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/31899319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacksonvanover", "html_url": "https://github.com/jacksonvanover", "followers_url": "https://api.github.com/users/jacksonvanover/followers", "following_url": "https://api.github.com/users/jacksonvanover/following{/other_user}", "gists_url": "https://api.github.com/users/jacksonvanover/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacksonvanover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacksonvanover/subscriptions", "organizations_url": "https://api.github.com/users/jacksonvanover/orgs", "repos_url": "https://api.github.com/users/jacksonvanover/repos", "events_url": "https://api.github.com/users/jacksonvanover/events{/privacy}", "received_events_url": "https://api.github.com/users/jacksonvanover/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-19T03:09:54Z", "updated_at": "2020-03-19T03:09:54Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When evaluating the limit approaching infinity of the hermite polynomial of degree zero, SciPy, GSL, and even the fp version of mpmath function agree that the output should be 1. However, `mp.hermite(0, inf)` evaluates to NaN.\r\n\r\n```\r\n>>> fp.hermite(0, np.inf)\r\n1.0\r\n>>> special.eval_hermite(0, np.inf) \r\n1.0\r\n>>> mp.hermite(0, np.inf)\r\nmpf('nan')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/522", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/522/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/522/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/522", "id": 584126377, "node_id": "MDU6SXNzdWU1ODQxMjYzNzc=", "number": 522, "title": "Unexpected return from hyp1f1 when evaluating limit at negative infinity", "user": {"login": "jacksonvanover", "id": 31899319, "node_id": "MDQ6VXNlcjMxODk5MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/31899319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacksonvanover", "html_url": "https://github.com/jacksonvanover", "followers_url": "https://api.github.com/users/jacksonvanover/followers", "following_url": "https://api.github.com/users/jacksonvanover/following{/other_user}", "gists_url": "https://api.github.com/users/jacksonvanover/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacksonvanover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacksonvanover/subscriptions", "organizations_url": "https://api.github.com/users/jacksonvanover/orgs", "repos_url": "https://api.github.com/users/jacksonvanover/repos", "events_url": "https://api.github.com/users/jacksonvanover/events{/privacy}", "received_events_url": "https://api.github.com/users/jacksonvanover/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-19T02:51:39Z", "updated_at": "2020-03-19T02:51:39Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Though mpmath appears to support evaluating limits approaching positive infinity, matching the results returned by SciPy and GSL, and jmat, it diverges from those three libraries when evaluating the limit at negative infinity with the first argument as 1; `mp.hyp1f1` returns NaN when the other libraries agree on zero.\r\n\r\n```\r\n>>> special.hyp1f1(0, 1, np.inf)\r\n1.0\r\n>>> mp.hyp1f1(0, 1, np.inf)\r\nmpf('1.0')\r\n>>> special.hyp1f1(0, 1, np.NINF)\r\n1.0\r\n>>> mp.hyp1f1(0, 1, np.NINF)\r\nmpf('1.0')\r\n>>> special.hyp1f1(1, 2, np.NINF)\r\n0.0\r\n>>> mp.hyp1f1(1, 2, np.NINF)\r\nmpf('nan')\r\n>>> special.hyp1f1(2, 2, np.NINF)\r\n0.0\r\n>>> mp.hyp1f1(2, 2, np.NINF)\r\nmpf('0.0')\r\n>>> mp.hyp1f1(1, 5, np.NINF)\r\nmpf('nan')\r\n>>> \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/521", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/521/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/521/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/521", "id": 584118986, "node_id": "MDU6SXNzdWU1ODQxMTg5ODY=", "number": 521, "title": "unexpected return from falling factorial function", "user": {"login": "jacksonvanover", "id": 31899319, "node_id": "MDQ6VXNlcjMxODk5MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/31899319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacksonvanover", "html_url": "https://github.com/jacksonvanover", "followers_url": "https://api.github.com/users/jacksonvanover/followers", "following_url": "https://api.github.com/users/jacksonvanover/following{/other_user}", "gists_url": "https://api.github.com/users/jacksonvanover/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacksonvanover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacksonvanover/subscriptions", "organizations_url": "https://api.github.com/users/jacksonvanover/orgs", "repos_url": "https://api.github.com/users/jacksonvanover/repos", "events_url": "https://api.github.com/users/jacksonvanover/events{/privacy}", "received_events_url": "https://api.github.com/users/jacksonvanover/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-19T02:25:47Z", "updated_at": "2020-03-19T02:25:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When the second argument is negative infinity, `ff` returns a zero regardless of the first argument. When the second argument is a positive infinity, `ff` returns a NaN which seems more appropriate; I don't believe the falling factorial function is well-defined with infinite second arguments. The fp namespace appears to behave in a more expected manner, throwing an error. \r\n\r\n```\r\n>>> mp.ff(1, -inf)\r\nmpf('0.0')\r\n>>> fp.ff(1, -inf)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/factorials.py\", line 77, in ff\r\n    return ctx.gammaprod([x1], [xn1])\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/factorials.py\", line 36, in gammaprod\r\n    for x in regular_den: p /= ctx.gamma(x)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/math2.py\", line 30, in f\r\n    return f_real(x)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/math2.py\", line 199, in _gamma_real\r\n    _intx = int(x)\r\nOverflowError: cannot convert float infinity to integer\r\n>>> mp.ff(1, inf)\r\nmpf('nan')\r\n>>> fp.ff(1, inf)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/factorials.py\", line 77, in ff\r\n    return ctx.gammaprod([x1], [xn1])\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/factorials.py\", line 13, in gammaprod\r\n    for x in b: [regular_den, poles_den][ctx.isnpint(x)].append(x)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_fp.py\", line 105, in isnpint\r\n    return x <= 0.0 and round(x) == x\r\nOverflowError: cannot convert float infinity to integer\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/520", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/520/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/520/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/520", "id": 584114799, "node_id": "MDU6SXNzdWU1ODQxMTQ3OTk=", "number": 520, "title": "besselk function doesn't support limit approaching infinity", "user": {"login": "jacksonvanover", "id": 31899319, "node_id": "MDQ6VXNlcjMxODk5MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/31899319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacksonvanover", "html_url": "https://github.com/jacksonvanover", "followers_url": "https://api.github.com/users/jacksonvanover/followers", "following_url": "https://api.github.com/users/jacksonvanover/following{/other_user}", "gists_url": "https://api.github.com/users/jacksonvanover/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacksonvanover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacksonvanover/subscriptions", "organizations_url": "https://api.github.com/users/jacksonvanover/orgs", "repos_url": "https://api.github.com/users/jacksonvanover/repos", "events_url": "https://api.github.com/users/jacksonvanover/events{/privacy}", "received_events_url": "https://api.github.com/users/jacksonvanover/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-19T02:14:13Z", "updated_at": "2020-03-24T15:15:44Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "SciPy, GSL, and jmat all support evaluating the limit of the besselk function as it approaches infinity, returning zero. However, neither the fp nor the mp contexts for mpmath do so even though limits are in other functions.\r\n\r\n```\r\n>>> mp.besselk(0, inf)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_mp_python.py\", line 1035, in f_wrapped\r\n    retval = f(ctx, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/bessel.py\", line 169, in besselk\r\n    ctx.prec += M\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_mp_python.py\", line 611, in _set_prec\r\n    ctx._prec = ctx._prec_rounding[0] = max(1, int(n))\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_mp_python.py\", line 141, in __int__\r\n    def __int__(s): return int(to_int(s._mpf_))\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/libmp/libmpf.py\", line 351, in to_int\r\n    raise ValueError(\"cannot convert inf or nan to int\")\r\nValueError: cannot convert inf or nan to int\r\n>>> mp.besselk(1, inf)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_mp_python.py\", line 1035, in f_wrapped\r\n    retval = f(ctx, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/bessel.py\", line 169, in besselk\r\n    ctx.prec += M\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_mp_python.py\", line 611, in _set_prec\r\n    ctx._prec = ctx._prec_rounding[0] = max(1, int(n))\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_mp_python.py\", line 141, in __int__\r\n    def __int__(s): return int(to_int(s._mpf_))\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/libmp/libmpf.py\", line 351, in to_int\r\n    raise ValueError(\"cannot convert inf or nan to int\")\r\nValueError: cannot convert inf or nan to int\r\n>>> fp.besselk(1, inf)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_fp.py\", line 57, in f_wrapped\r\n    return f(ctx, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/bessel.py\", line 173, in besselk\r\n    return ctx.hypercomb(h, [n], **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/hypergeometric.py\", line 127, in hypercomb\r\n    [ctx.rgamma(b) for b in beta_s] + \\\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/hypergeometric.py\", line 219, in hyper\r\n    if   q == 1: return ctx._hyp0f1(b_s, z, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/functions/hypergeometric.py\", line 307, in _hyp0f1\r\n    return ctx.hypsum(0, 1, (btype,), [b], z, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_fp.py\", line 213, in hypsum\r\n    raise ctx.NoConvergence\r\nmpmath.libmp.libhyper.NoConvergence\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/519", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/519/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/519/events", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/519", "id": 580226169, "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg3NDc3Nzc1", "number": 519, "title": "elliprc has incorrect imaginary part for negative y-axis", "user": {"login": "paulmasson", "id": 3289562, "node_id": "MDQ6VXNlcjMyODk1NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3289562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulmasson", "html_url": "https://github.com/paulmasson", "followers_url": "https://api.github.com/users/paulmasson/followers", "following_url": "https://api.github.com/users/paulmasson/following{/other_user}", "gists_url": "https://api.github.com/users/paulmasson/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulmasson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulmasson/subscriptions", "organizations_url": "https://api.github.com/users/paulmasson/orgs", "repos_url": "https://api.github.com/users/paulmasson/repos", "events_url": "https://api.github.com/users/paulmasson/events{/privacy}", "received_events_url": "https://api.github.com/users/paulmasson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-12T21:13:32Z", "updated_at": "2020-06-27T23:12:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/pulls/519", "html_url": "https://github.com/fredrik-johansson/mpmath/pull/519", "diff_url": "https://github.com/fredrik-johansson/mpmath/pull/519.diff", "patch_url": "https://github.com/fredrik-johansson/mpmath/pull/519.patch"}, "body": "Comparing values above and below the negative y-axis,\r\n\r\n>>> elliprc(-1,-2+.001j,pv=False)\r\nmpc(real='0.00014269906542846742', imag='-0.78539811887314348')\r\n>>> elliprc(-1,-2,pv=False)\r\nmpc(real='0.0', imag='0.78539816339744828')\r\n>>> elliprc(-1,-2-.001j,pv=False)\r\nmpc(real='0.0014280962796194981', imag='2.3561933566202637')\r\n\r\nthe imaginary part on the axis has the wrong sign. This pull request should fix that along with minor cleanup.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/518", "repository_url": "https://api.github.com/repos/fredrik-johansson/mpmath", "labels_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/518/comments", "events_url": "https://api.github.com/repos/fredrik-johansson/mpmath/issues/518/events", "html_url": "https://github.com/fredrik-johansson/mpmath/issues/518", "id": 575611420, "node_id": "MDU6SXNzdWU1NzU2MTE0MjA=", "number": 518, "title": "Observing very different behaviors between mp.psi and fp.psi", "user": {"login": "jacksonvanover", "id": 31899319, "node_id": "MDQ6VXNlcjMxODk5MzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/31899319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacksonvanover", "html_url": "https://github.com/jacksonvanover", "followers_url": "https://api.github.com/users/jacksonvanover/followers", "following_url": "https://api.github.com/users/jacksonvanover/following{/other_user}", "gists_url": "https://api.github.com/users/jacksonvanover/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacksonvanover/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacksonvanover/subscriptions", "organizations_url": "https://api.github.com/users/jacksonvanover/orgs", "repos_url": "https://api.github.com/users/jacksonvanover/repos", "events_url": "https://api.github.com/users/jacksonvanover/events{/privacy}", "received_events_url": "https://api.github.com/users/jacksonvanover/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-04T17:40:31Z", "updated_at": "2020-03-04T17:40:31Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The mp and fp versions of the psi function differ greatly for certain\r\ninputs. Here are a few examples that I found of their divergence (starting with one example that behaves as expected but then quickly diverges):\r\n\r\n```\r\n>>> fp.psi(1,-28.3)\r\n15.044694967630004\r\n>>> mp.psi(1,-28.3)\r\nmpf('15.044694967630006')\r\n>>> fp.psi(1,-28.4)\r\n(-0.03459862513722961+0j)\r\n>>> mp.psi(1,-28.4)\r\nmpf('10.876967636294758')\r\n>>> fp.psi(1,-74)\r\n(-0.013422617269905759+0j)\r\n>>> mp.psi(1,-74)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/ctx_mp.py\", line 267, in psi\r\n    return ctx.make_mpf(libmp.mpf_psi(m, z._mpf_, *ctx._prec_rounding))\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/libmp/gammazeta.py\", line 997, in mpf_psi\r\n    return mpc_psi(m, (x, fzero), prec, rnd)[0]\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/libmp/gammazeta.py\", line 1023, in mpc_psi\r\n    t = mpc_pow_int(z, -m-1, wp)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/libmp/libmpc.py\", line 258, in mpc_pow_int\r\n    return mpf_pow_int(a, n, prec, rnd), fzero\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/libmp/libmpf.py\", line 1073, in mpf_pow_int\r\n    return mpf_div(fone, inverse, prec, rnd)\r\n  File \"/usr/local/lib/python3.6/dist-packages/mpmath/libmp/libmpf.py\", line 960, in mpf_div\r\n    raise ZeroDivisionError\r\nZeroDivisionError\r\n>>> fp.psi(1,-74.1)\r\n(-0.013404625024515462+0j)\r\n>>> mp.psi(1,-74.1)\r\nmpf('103.3424344852568')\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}