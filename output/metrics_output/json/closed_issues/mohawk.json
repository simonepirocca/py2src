{"total_count": 21, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kumar303/mohawk/issues/56", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/56/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/56/events", "html_url": "https://github.com/kumar303/mohawk/issues/56", "id": 504075698, "node_id": "MDU6SXNzdWU1MDQwNzU2OTg=", "number": 56, "title": "Support file objects as content", "user": {"login": "catlee", "id": 54458, "node_id": "MDQ6VXNlcjU0NDU4", "avatar_url": "https://avatars2.githubusercontent.com/u/54458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catlee", "html_url": "https://github.com/catlee", "followers_url": "https://api.github.com/users/catlee/followers", "following_url": "https://api.github.com/users/catlee/following{/other_user}", "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}", "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catlee/subscriptions", "organizations_url": "https://api.github.com/users/catlee/orgs", "repos_url": "https://api.github.com/users/catlee/repos", "events_url": "https://api.github.com/users/catlee/events{/privacy}", "received_events_url": "https://api.github.com/users/catlee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-08T14:21:48Z", "updated_at": "2019-10-10T21:30:59Z", "closed_at": "2019-10-10T21:30:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We have some large files we need to send via an HTTP POST, and the API requires Hawk authentication. Currently this means the entire file has to be loaded into memory so that it can be passed as `content` to `mohawk.Sender`\r\n\r\nCan we instead pass an open file object, and then mohawk can read in smaller blocks of data from the file to create the payload hash?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/55", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/55/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/55/events", "html_url": "https://github.com/kumar303/mohawk/issues/55", "id": 475183998, "node_id": "MDU6SXNzdWU0NzUxODM5OTg=", "number": 55, "title": "MACs do not match", "user": {"login": "Cylkal", "id": 46983619, "node_id": "MDQ6VXNlcjQ2OTgzNjE5", "avatar_url": "https://avatars3.githubusercontent.com/u/46983619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cylkal", "html_url": "https://github.com/Cylkal", "followers_url": "https://api.github.com/users/Cylkal/followers", "following_url": "https://api.github.com/users/Cylkal/following{/other_user}", "gists_url": "https://api.github.com/users/Cylkal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cylkal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cylkal/subscriptions", "organizations_url": "https://api.github.com/users/Cylkal/orgs", "repos_url": "https://api.github.com/users/Cylkal/repos", "events_url": "https://api.github.com/users/Cylkal/events{/privacy}", "received_events_url": "https://api.github.com/users/Cylkal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-31T14:37:43Z", "updated_at": "2019-08-01T01:42:36Z", "closed_at": "2019-08-01T01:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Python 3.7 mohawk 1.0\r\nThis is my web server:\r\n\r\n```\r\n# -*- coding:utf-8 -*-\r\nimport falcon\r\nfrom mohawk import Receiver\r\n\r\nallowed_senders={\r\n    \"test\":{\r\n        'id': 'test',\r\n        'key': \"110\",\r\n        'algorithm': 'sha256'\r\n    }, \r\n    \"nmask\":{\r\n        'id': 'nmask',\r\n        'key': '112',\r\n        'algorithm': 'sha256'\r\n    },\r\n}\r\n\r\n\r\ndef lookup_credentials(sender_id):\r\n    if sender_id in allowed_senders:\r\n        return allowed_senders[sender_id]\r\n    else:\r\n        raise LookupError('unknown sender')\r\n\r\n\r\nclass Test(object):\r\n    def on_post(self, req, resp):\r\n        print(req.url)\r\n        try:\r\n            print(req.headers.get('AUTHORIZATION'))\r\n            Receiver(\r\n                lookup_credentials,\r\n                req.headers.get('AUTHORIZATION'),\r\n                req.url,\r\n                req.method,\r\n                content=req.stream.read(),\r\n                content_type=req.headers.get('CONTENT-TYPE')\r\n            )\r\n        except Exception as e:\r\n            print(e)\r\n            resp.status = falcon.HTTP_403  # This is the default status\r\n        else:\r\n            resp.status = falcon.HTTP_200  # This is the default status\r\n            resp.body = 'Hello World!'\r\n\r\n    def on_get(self, req, resp):\r\n        try:\r\n            print(type(req.headers.get('AUTHORIZATION')))\r\n            Receiver(\r\n                lookup_credentials,\r\n                req.headers.get('AUTHORIZATION'),\r\n                req.url,\r\n                req.method,\r\n                content=req.stream.read(),\r\n                content_type=req.headers.get('CONTENT-TYPE')\r\n            )\r\n        except Exception as e:\r\n            print(e)\r\n            resp.status = falcon.HTTP_403  # This is the default status\r\n            resp.body = 'authorization fail!'\r\n        else:\r\n            resp.status = falcon.HTTP_200  # This is the default status\r\n            resp.body = 'Hello World!'\r\n\r\napp = falcon.API()\r\ntest = Test()\r\napp.add_route('/', test)\r\n```\r\nThis is my sender:\r\n```\r\nimport json\r\nimport requests\r\nfrom mohawk import Sender \r\nurl = \"http://127.0.0.1:8080\"\r\npost_data = json.dumps(\"\").encode(\"utf8\")\r\ncontent_type = 'application/x-www-form-urlencoded'\r\ncredentials = {\r\n               'id': 'test',\r\n               'key': u\"110\",\r\n               'algorithm': 'sha256'\r\n           }\r\nsender = Sender(credentials,\r\n                url=url, \r\n                method='POST', \r\n                content=\"\", \r\n                content_type=content_type, \r\n                )\r\nprint(sender.request_header.encode('ascii'))\r\nres = requests.get(\r\n    url=url,\r\n    data=post_data,\r\n    headers={\r\n        'Authorization': sender.request_header.encode('utf8'),\r\n        'Content-Type': content_type\r\n    }\r\n)\r\nres.encoding = \"utf8\"\r\nprint(res.status_code)\r\nprint(res.text)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/53", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/53/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/53/events", "html_url": "https://github.com/kumar303/mohawk/issues/53", "id": 397494150, "node_id": "MDU6SXNzdWUzOTc0OTQxNTA=", "number": 53, "title": "Release of the latest changes", "user": {"login": "aj-sp", "id": 10817281, "node_id": "MDQ6VXNlcjEwODE3Mjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/10817281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aj-sp", "html_url": "https://github.com/aj-sp", "followers_url": "https://api.github.com/users/aj-sp/followers", "following_url": "https://api.github.com/users/aj-sp/following{/other_user}", "gists_url": "https://api.github.com/users/aj-sp/gists{/gist_id}", "starred_url": "https://api.github.com/users/aj-sp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aj-sp/subscriptions", "organizations_url": "https://api.github.com/users/aj-sp/orgs", "repos_url": "https://api.github.com/users/aj-sp/repos", "events_url": "https://api.github.com/users/aj-sp/events{/privacy}", "received_events_url": "https://api.github.com/users/aj-sp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-09T18:17:31Z", "updated_at": "2019-01-09T22:14:08Z", "closed_at": "2019-01-09T22:14:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for all the work that you do for mohawk. Is releasing the latest changes planned in the nearest future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/51", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/51/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/51/events", "html_url": "https://github.com/kumar303/mohawk/issues/51", "id": 397212307, "node_id": "MDU6SXNzdWUzOTcyMTIzMDc=", "number": 51, "title": "Allow unhashed payloads when content is empty", "user": {"login": "kumar303", "id": 55398, "node_id": "MDQ6VXNlcjU1Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/55398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumar303", "html_url": "https://github.com/kumar303", "followers_url": "https://api.github.com/users/kumar303/followers", "following_url": "https://api.github.com/users/kumar303/following{/other_user}", "gists_url": "https://api.github.com/users/kumar303/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumar303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumar303/subscriptions", "organizations_url": "https://api.github.com/users/kumar303/orgs", "repos_url": "https://api.github.com/users/kumar303/repos", "events_url": "https://api.github.com/users/kumar303/events{/privacy}", "received_events_url": "https://api.github.com/users/kumar303/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-09T04:58:51Z", "updated_at": "2019-01-09T04:59:16Z", "closed_at": "2019-01-09T04:59:16Z", "author_association": "OWNER", "active_lock_reason": null, "body": "A receiver should accept a request if it contains empty content, even if the sender did not provide a content hash. This will follow the Hawk JS implementation [here](https://github.com/hueniverse/hawk/blob/8c7cdbf33fb64652e9fa0a7cd5028a4d06d3a8a9/lib/client.js#L103) and [here](https://github.com/hueniverse/hawk/blob/8c7cdbf33fb64652e9fa0a7cd5028a4d06d3a8a9/lib/server.js#L169). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/43", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/43/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/43/events", "html_url": "https://github.com/kumar303/mohawk/issues/43", "id": 213825712, "node_id": "MDU6SXNzdWUyMTM4MjU3MTI=", "number": 43, "title": "ValueError with accept_untrusted_content=True and hash provided in header.", "user": {"login": "torotil", "id": 182122, "node_id": "MDQ6VXNlcjE4MjEyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/182122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/torotil", "html_url": "https://github.com/torotil", "followers_url": "https://api.github.com/users/torotil/followers", "following_url": "https://api.github.com/users/torotil/following{/other_user}", "gists_url": "https://api.github.com/users/torotil/gists{/gist_id}", "starred_url": "https://api.github.com/users/torotil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/torotil/subscriptions", "organizations_url": "https://api.github.com/users/torotil/orgs", "repos_url": "https://api.github.com/users/torotil/repos", "events_url": "https://api.github.com/users/torotil/events{/privacy}", "received_events_url": "https://api.github.com/users/torotil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-03-13T16:40:20Z", "updated_at": "2017-04-17T21:04:12Z", "closed_at": "2017-04-17T21:04:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With a `Receiver` configured to not validate the content-hash\r\n\r\n```python\r\nReceiver(lookup_hawk_credentials,\r\n         auth_header,\r\n         url,\r\n         env.get('REQUEST_METHOD'),\r\n         content=None\r\n         content_type=None,\r\n         accept_untrusted_content=True)\r\n```\r\n\r\nyou get a `ValueError: payload content and/or content_type cannot be empty without an explicit allowance` whenever a client *does* send a content-hash.\r\n\r\nThe reason is in `HawkAuthority._authorize()`:\r\n\r\n```python\r\n       if 'hash' not in parsed_header and accept_untrusted_content:\r\n            # The request did not hash its content.\r\n            log.debug('NOT calculating/verifiying payload hash '\r\n                      '(no hash in header)')\r\n            check_hash = False\r\n            content_hash = None\r\n        else:\r\n            check_hash = True\r\n            content_hash = resource.gen_content_hash()\r\n```\r\n\r\nHere the check for the hash supersedes `accept_untrusted_content`.\r\n\r\nAs stated in #24 I still think these flags add unneeded complexity.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/41", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/41/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/41/events", "html_url": "https://github.com/kumar303/mohawk/issues/41", "id": 211730827, "node_id": "MDU6SXNzdWUyMTE3MzA4Mjc=", "number": 41, "title": "Remove support for escape characters in bewit `ext`", "user": {"login": "kumar303", "id": 55398, "node_id": "MDQ6VXNlcjU1Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/55398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumar303", "html_url": "https://github.com/kumar303", "followers_url": "https://api.github.com/users/kumar303/followers", "following_url": "https://api.github.com/users/kumar303/following{/other_user}", "gists_url": "https://api.github.com/users/kumar303/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumar303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumar303/subscriptions", "organizations_url": "https://api.github.com/users/kumar303/orgs", "repos_url": "https://api.github.com/users/kumar303/repos", "events_url": "https://api.github.com/users/kumar303/events{/privacy}", "received_events_url": "https://api.github.com/users/kumar303/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-03T16:09:46Z", "updated_at": "2017-04-03T17:07:54Z", "closed_at": "2017-04-03T17:07:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "In order to [fix header parsing](https://github.com/kumar303/mohawk/issues/34) the `ext` value can no longer contain escape characters. However, this limitation was not imposed on `ext` values used by [bewit](https://github.com/kumar303/mohawk/blob/master/mohawk/bewit.py) (AKA signed URLs). Let's put the same limitations on `ext` values used by the bewit function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/40", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/40/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/40/events", "html_url": "https://github.com/kumar303/mohawk/issues/40", "id": 211728544, "node_id": "MDU6SXNzdWUyMTE3Mjg1NDQ=", "number": 40, "title": "Deprecate and rename the always_hash_content=False keyword", "user": {"login": "kumar303", "id": 55398, "node_id": "MDQ6VXNlcjU1Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/55398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumar303", "html_url": "https://github.com/kumar303", "followers_url": "https://api.github.com/users/kumar303/followers", "following_url": "https://api.github.com/users/kumar303/following{/other_user}", "gists_url": "https://api.github.com/users/kumar303/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumar303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumar303/subscriptions", "organizations_url": "https://api.github.com/users/kumar303/orgs", "repos_url": "https://api.github.com/users/kumar303/repos", "events_url": "https://api.github.com/users/kumar303/events{/privacy}", "received_events_url": "https://api.github.com/users/kumar303/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-03T16:01:29Z", "updated_at": "2017-04-07T00:27:18Z", "closed_at": "2017-04-06T23:03:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This is just a minor detail but the following keyword arg:\r\n````py\r\nsender = Sender(..., always_hash_content=False)\r\n````\r\nshould be renamed to:\r\n````py\r\nsender = Sender(..., always_sign_content=False)\r\n````\r\nbecause the \"hash\" is just an artifact of signing the content. We can deprecate the old keyword arg and still support it.\r\n\r\nDetails: http://mohawk.readthedocs.io/en/latest/usage.html#skipping-content-checks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/37", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/37/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/37/events", "html_url": "https://github.com/kumar303/mohawk/issues/37", "id": 207395066, "node_id": "MDU6SXNzdWUyMDczOTUwNjY=", "number": 37, "title": "Use of deprecated method logger.warn", "user": {"login": "thusoy", "id": 1466123, "node_id": "MDQ6VXNlcjE0NjYxMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1466123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thusoy", "html_url": "https://github.com/thusoy", "followers_url": "https://api.github.com/users/thusoy/followers", "following_url": "https://api.github.com/users/thusoy/following{/other_user}", "gists_url": "https://api.github.com/users/thusoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/thusoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thusoy/subscriptions", "organizations_url": "https://api.github.com/users/thusoy/orgs", "repos_url": "https://api.github.com/users/thusoy/repos", "events_url": "https://api.github.com/users/thusoy/events{/privacy}", "received_events_url": "https://api.github.com/users/thusoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-14T01:57:41Z", "updated_at": "2017-02-15T22:32:43Z", "closed_at": "2017-02-15T22:32:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`log.warn` should be changed to `log.warning` to prevent DeprecationWarnings.\r\n\r\nI suggest also at the same time switching on `import warnings; warnings.filterwarnings('error')` when running the test suite, so that you'll find deprecation warnings automatically in the future.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/34", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/34/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/34/events", "html_url": "https://github.com/kumar303/mohawk/issues/34", "id": 172555158, "node_id": "MDU6SXNzdWUxNzI1NTUxNTg=", "number": 34, "title": "Commas in header values break parsing", "user": {"login": "thusoy", "id": 1466123, "node_id": "MDQ6VXNlcjE0NjYxMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1466123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thusoy", "html_url": "https://github.com/thusoy", "followers_url": "https://api.github.com/users/thusoy/followers", "following_url": "https://api.github.com/users/thusoy/following{/other_user}", "gists_url": "https://api.github.com/users/thusoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/thusoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thusoy/subscriptions", "organizations_url": "https://api.github.com/users/thusoy/orgs", "repos_url": "https://api.github.com/users/thusoy/repos", "events_url": "https://api.github.com/users/thusoy/events{/privacy}", "received_events_url": "https://api.github.com/users/thusoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-22T21:07:05Z", "updated_at": "2017-04-03T15:20:55Z", "closed_at": "2017-04-03T15:20:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The parser tries to split the entire header `Hawk id=\"something\", key=\"value\"` on commas to separate the fields, thus any field with comma in it will cause breakage.\n\n``` python\ndef test_ext_with_all_valid_characters(self):\n    valid_characters = \"!#$%&'()*+,-./:;<=>?@[]^_`{|}~ azAZ09\"\n    sender = self.Sender(ext=valid_characters)\n    self.receive(sender.request_header)\n    parsed = parse_authorization_header(sender.request_header)\n    eq_(parsed['ext'], valid_characters)\n```\n\nDiscovered when working on #33 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/32", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/32/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/32/events", "html_url": "https://github.com/kumar303/mohawk/issues/32", "id": 171500038, "node_id": "MDU6SXNzdWUxNzE1MDAwMzg=", "number": 32, "title": "re.LOCALE with str pattern deprecated on python 3.5", "user": {"login": "thusoy", "id": 1466123, "node_id": "MDQ6VXNlcjE0NjYxMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1466123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thusoy", "html_url": "https://github.com/thusoy", "followers_url": "https://api.github.com/users/thusoy/followers", "following_url": "https://api.github.com/users/thusoy/following{/other_user}", "gists_url": "https://api.github.com/users/thusoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/thusoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thusoy/subscriptions", "organizations_url": "https://api.github.com/users/thusoy/orgs", "repos_url": "https://api.github.com/users/thusoy/repos", "events_url": "https://api.github.com/users/thusoy/events{/privacy}", "received_events_url": "https://api.github.com/users/thusoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-16T19:41:12Z", "updated_at": "2016-08-22T21:07:40Z", "closed_at": "2016-08-22T21:07:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Importing mohawk with warnings turned into exceptions exposes a deprecation warning:\n\n```\ntests/test_upload.py:5: in <module>\n    from mohawk import Sender\nvenv/lib/python3.5/site-packages/mohawk/__init__.py:1: in <module>\n    from .sender import *\nvenv/lib/python3.5/site-packages/mohawk/sender.py:3: in <module>\n    from .base import default_ts_skew_in_seconds, HawkAuthority, Resource\nvenv/lib/python3.5/site-packages/mohawk/base.py:12: in <module>\n    from .util import (calculate_mac,\nvenv/lib/python3.5/site-packages/mohawk/util.py:228: in <module>\n    re.LOCALE)\nvenv/lib/python3.5/re.py:224: in compile\n    return _compile(pattern, flags)\nvenv/lib/python3.5/re.py:293: in _compile\n    p = sre_compile.compile(pattern, flags)\nvenv/lib/python3.5/sre_compile.py:536: in compile\n    p = sre_parse.parse(p, flags)\nvenv/lib/python3.5/sre_parse.py:830: in parse\n    p.pattern.flags = fix_flags(str, p.pattern.flags)\nvenv/lib/python3.5/sre_parse.py:804: in fix_flags\n    DeprecationWarning, stacklevel=6)\nE   DeprecationWarning: LOCALE flag with a str pattern is deprecated. Will be an error in 3.6\n```\n\nI don't see why header verification should be dependent on the locale, I'm assuming the `\\w` can be replaced by a `a-zA-Z0-9` pattern to avoid any ambiguity, and the re.LOCALE flag removed?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/30", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/30/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/30/events", "html_url": "https://github.com/kumar303/mohawk/issues/30", "id": 165102820, "node_id": "MDU6SXNzdWUxNjUxMDI4MjA=", "number": 30, "title": "Update publishing a release docs with wheel instructions", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-12T15:02:00Z", "updated_at": "2016-07-12T21:00:12Z", "closed_at": "2016-07-12T20:39:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The docs here:\nhttps://mohawk.readthedocs.io/en/latest/developers.html#publish-a-release\n\nCould do with the changes that landed in hawkrest:\nhttps://hawkrest.readthedocs.io/en/latest/developers.html#publish-a-release\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/24", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/24/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/24/events", "html_url": "https://github.com/kumar303/mohawk/issues/24", "id": 131115854, "node_id": "MDU6SXNzdWUxMzExMTU4NTQ=", "number": 24, "title": "Requests with missing body or content type cause an unexpected ValueError", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-02-03T18:41:49Z", "updated_at": "2017-04-17T21:04:12Z", "closed_at": "2017-04-17T21:04:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**STR:**\nUsing something like this with web.py:\n\n``` python\n    try:\n        Receiver(lookup_hawk_credentials,\n                 auth_header,\n                 url,\n                 env.get('REQUEST_METHOD'),\n                 content=web.data(),\n                 content_type=env.get('CONTENT_TYPE'))\n    except HawkFail as e:\n        ...\n        raise web.Forbidden()\n```\n\n...attempt to POST to the API using httpie and requests-hawk:\n`http POST localhost:8080/api/saveclassification --auth-type=hawk --auth='treeherder:zz'`\n\n**Expected:**\nEither the request succeeds, or `Receiver` raises one of the `HawkFail` class of exceptions, such that `web.Forbidden()` is raised, resulting in an HTTP 403.\n\n**Actual:**\n\n```\nHTTP/1.1 500 Internal Server Error\nContent-Type: text/html\nDate: Wed, 03 Feb 2016 18:27:06 GMT\nServer: localhost\nTransfer-Encoding: chunked\n\ninternal server error\n```\n\nAnd in the server logs:\n\n```\nTraceback (most recent call last):\n  ...\n  File \"/home/Ed/src/orangefactor/server/handlers.py\", line 504, in ensure_authenticated\n    content_type=env.get('CONTENT_TYPE'))\n  File \"/home/Ed/.virtualenvs/of/lib/python2.7/site-packages/mohawk/receiver.py\", line 111, in __init__\n    **auth_kw)\n  File \"/home/Ed/.virtualenvs/of/lib/python2.7/site-packages/mohawk/base.py\", line 42, in _authorize\n    content_hash = resource.gen_content_hash()\n  File \"/home/Ed/.virtualenvs/of/lib/python2.7/site-packages/mohawk/base.py\", line 203, in gen_content_hash\n    'payload content and/or content_type cannot be '\nValueError: payload content and/or content_type cannot be empty without an explicit allowance\n\n127.0.0.1:50832 - - [03/Feb/2016 18:27:06] \"HTTP/1.1 POST /api/saveclassification\" - 500 Internal Server Error\n```\n\nI follow the motivation for trying to be strict about making people validate the content, however:\n(a) I'm not sure it's a correct assumption that `None` values means the developer has instantiated `Receiver` incorrectly. I would have thought it's more likely that the request just didn't contain a body or content type to start with.\n(b) It would be more consistent to raise a `HawkFail` (or subclass), since it's non-obvious that I should be catching `ValueError` too.\n\n(Using mohawk 0.3.1 with requests-hawk 1.0.0 and httpie 0.9.3 on Python 2.7.11)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/23", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/23/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/23/events", "html_url": "https://github.com/kumar303/mohawk/issues/23", "id": 131076732, "node_id": "MDU6SXNzdWUxMzEwNzY3MzI=", "number": 23, "title": "Handle non-string 'Authorization' header more gracefully", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-03T16:28:31Z", "updated_at": "2017-01-07T23:09:26Z", "closed_at": "2017-01-07T20:32:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm adding mohawk to a legacy web.py project, and was performing the http auth header lookup like so:\n\n``` python\nauth_header = web.ctx.environ.get('HTTP_AUTHORIZATION')\n...\nReceiver(lookup_hawk_credentials,\n         auth_header,\n         url,\n         ...)\n```\n\nHowever if the auth header isn't present, this results in a value of `None` being passed to the Receiver constructor, which results in:\n\n```\n  File \"/home/Ed/.virtualenvs/of/lib/python2.7/site-packages/mohawk/receiver.py\", line 82, in __init__\n    parsed_header = parse_authorization_header(request_header)\n  File \"/home/Ed/.virtualenvs/of/lib/python2.7/site-packages/mohawk/util.py\", line 158, in parse_authorization_header\n    parts = auth_header.split(',')\nAttributeError: 'NoneType' object has no attribute 'split'\n```\n\nWhilst the API docs do state that the auth header should be a string:\nhttp://mohawk.readthedocs.org/en/latest/api.html#receiver\n\n...they say the same for the others that default to `None`, so it's easy to think that a `None`-value will be handled.\n\nInstead perhaps it should raise either a generic `HawkFail` (like happens if the header doesn't start with 'hawk': [link](https://github.com/kumar303/mohawk/blob/0.3.1/mohawk/util.py#L160-L162)) or else a new exception for missing header?\nhttp://mohawk.readthedocs.org/en/latest/api.html#exceptions\n\n(Using mohawk 0.3.1)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/21", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/21/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/21/events", "html_url": "https://github.com/kumar303/mohawk/issues/21", "id": 125787566, "node_id": "MDU6SXNzdWUxMjU3ODc1NjY=", "number": 21, "title": "Please remove the `if not isinstance(creds, dict):`check", "user": {"login": "klahnakoski", "id": 2334429, "node_id": "MDQ6VXNlcjIzMzQ0Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2334429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klahnakoski", "html_url": "https://github.com/klahnakoski", "followers_url": "https://api.github.com/users/klahnakoski/followers", "following_url": "https://api.github.com/users/klahnakoski/following{/other_user}", "gists_url": "https://api.github.com/users/klahnakoski/gists{/gist_id}", "starred_url": "https://api.github.com/users/klahnakoski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klahnakoski/subscriptions", "organizations_url": "https://api.github.com/users/klahnakoski/orgs", "repos_url": "https://api.github.com/users/klahnakoski/repos", "events_url": "https://api.github.com/users/klahnakoski/events{/privacy}", "received_events_url": "https://api.github.com/users/klahnakoski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-09T23:14:51Z", "updated_at": "2016-01-10T03:40:54Z", "closed_at": "2016-01-10T03:40:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is interfering with other Mapping instances that I send to it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/19", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/19/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/19/events", "html_url": "https://github.com/kumar303/mohawk/issues/19", "id": 121552748, "node_id": "MDU6SXNzdWUxMjE1NTI3NDg=", "number": 19, "title": "Add expiration to bewits", "user": {"login": "jhford", "id": 607353, "node_id": "MDQ6VXNlcjYwNzM1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/607353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhford", "html_url": "https://github.com/jhford", "followers_url": "https://api.github.com/users/jhford/followers", "following_url": "https://api.github.com/users/jhford/following{/other_user}", "gists_url": "https://api.github.com/users/jhford/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhford/subscriptions", "organizations_url": "https://api.github.com/users/jhford/orgs", "repos_url": "https://api.github.com/users/jhford/repos", "events_url": "https://api.github.com/users/jhford/events{/privacy}", "received_events_url": "https://api.github.com/users/jhford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-10T18:51:31Z", "updated_at": "2015-12-10T18:56:35Z", "closed_at": "2015-12-10T18:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "We'd love to move to mohawk for the taskcluster python client library.  It's great that bewits have been added, but we need to have expiration support.  Is it possible to have expiring bewits?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/18", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/18/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/18/events", "html_url": "https://github.com/kumar303/mohawk/issues/18", "id": 116665612, "node_id": "MDU6SXNzdWUxMTY2NjU2MTI=", "number": 18, "title": "PyPI package includes the mohawk tests", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-12T23:28:40Z", "updated_at": "2015-11-16T12:42:00Z", "closed_at": "2015-11-16T12:42:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not urgent at all, but the package on PyPI includes `mohawk/tests.py`, presumably since setuptools is just collecting everything in the mohawk directory. It accounts for 20KB out of the uncompressed package size of 54KB.\n\nWould `tests/tests.py` be a better location? :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/15", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/15/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/15/events", "html_url": "https://github.com/kumar303/mohawk/issues/15", "id": 114916563, "node_id": "MDU6SXNzdWUxMTQ5MTY1NjM=", "number": 15, "title": "Provided payload hash should be used when validating MAC", "user": {"login": "gregarndt", "id": 2592630, "node_id": "MDQ6VXNlcjI1OTI2MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2592630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregarndt", "html_url": "https://github.com/gregarndt", "followers_url": "https://api.github.com/users/gregarndt/followers", "following_url": "https://api.github.com/users/gregarndt/following{/other_user}", "gists_url": "https://api.github.com/users/gregarndt/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregarndt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregarndt/subscriptions", "organizations_url": "https://api.github.com/users/gregarndt/orgs", "repos_url": "https://api.github.com/users/gregarndt/repos", "events_url": "https://api.github.com/users/gregarndt/events{/privacy}", "received_events_url": "https://api.github.com/users/gregarndt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-11-03T21:39:07Z", "updated_at": "2016-03-09T17:19:10Z", "closed_at": "2016-03-09T17:19:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that mohawk calculates [1] the content hash even when a hash was provided in the request, and uses that calculated hash for validating the MAC [2] .that the content hash is created by mohawk and used for validating the MAC when according to a statement [3,4] in the node hawk implementation the hash provided in the request should be used.\n\nOne of the issues that comes up when not calculating using the provided hash is that if there are encoding differences with the payload, this will result in a different payload hash.  However, the error that's returned is a mac mismatch when really the useful message about where to look is with a content mismatch, such as the one raised later on in base.py with the MisComputedContentHash exception.\n\nOne way to duplicate this is to use a different client for sending a hawk request that doesn't automatically encode the payload for you (such as the node hawk client).  mohawk utf8 encodes the payload and calculates the hash while the node client allows you to use whatever encoding you wish.\n\n[1] https://github.com/kumar303/mohawk/blob/master/mohawk/base.py#L42\n[2] https://github.com/kumar303/mohawk/blob/master/mohawk/base.py#L48\n[3] \"If the payload is available at the time of authentication, the server uses the hash value provided by the client to construct the normalized string and validates the MAC\"\n[4] https://github.com/hueniverse/hawk/blob/master/README.md#payload-validation\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/14", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/14/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/14/events", "html_url": "https://github.com/kumar303/mohawk/issues/14", "id": 114245115, "node_id": "MDU6SXNzdWUxMTQyNDUxMTU=", "number": 14, "title": "Provide wheel distribution on PyPI", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-30T10:44:31Z", "updated_at": "2016-07-12T21:02:39Z", "closed_at": "2016-07-12T21:02:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please could you provide a wheel archive on PyPI alongside the standard package? http://pythonwheels.com/\n\nMany thanks :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/11", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/11/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/11/events", "html_url": "https://github.com/kumar303/mohawk/issues/11", "id": 106366540, "node_id": "MDU6SXNzdWUxMDYzNjY1NDA=", "number": 11, "title": "Implement bewit (single URI authorization)", "user": {"login": "kumar303", "id": 55398, "node_id": "MDQ6VXNlcjU1Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/55398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumar303", "html_url": "https://github.com/kumar303", "followers_url": "https://api.github.com/users/kumar303/followers", "following_url": "https://api.github.com/users/kumar303/following{/other_user}", "gists_url": "https://api.github.com/users/kumar303/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumar303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumar303/subscriptions", "organizations_url": "https://api.github.com/users/kumar303/orgs", "repos_url": "https://api.github.com/users/kumar303/repos", "events_url": "https://api.github.com/users/kumar303/events{/privacy}", "received_events_url": "https://api.github.com/users/kumar303/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-14T15:26:27Z", "updated_at": "2016-07-07T18:21:40Z", "closed_at": "2016-07-07T18:21:40Z", "author_association": "OWNER", "active_lock_reason": null, "body": "To bring Mohawk in line with the Hawk spec, we need to implement single-use, expiring URLs (whimsically called _bewit_ in the spec): https://github.com/hueniverse/hawk#single-uri-authorization\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/4", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/4/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/4/events", "html_url": "https://github.com/kumar303/mohawk/issues/4", "id": 33920955, "node_id": "MDU6SXNzdWUzMzkyMDk1NQ==", "number": 4, "title": "test", "user": {"login": "andymckay", "id": 74699, "node_id": "MDQ6VXNlcjc0Njk5", "avatar_url": "https://avatars2.githubusercontent.com/u/74699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andymckay", "html_url": "https://github.com/andymckay", "followers_url": "https://api.github.com/users/andymckay/followers", "following_url": "https://api.github.com/users/andymckay/following{/other_user}", "gists_url": "https://api.github.com/users/andymckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/andymckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andymckay/subscriptions", "organizations_url": "https://api.github.com/users/andymckay/orgs", "repos_url": "https://api.github.com/users/andymckay/repos", "events_url": "https://api.github.com/users/andymckay/events{/privacy}", "received_events_url": "https://api.github.com/users/andymckay/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-05-20T19:27:34Z", "updated_at": "2014-05-20T19:29:02Z", "closed_at": "2014-05-20T19:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "this is a test\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kumar303/mohawk/issues/2", "repository_url": "https://api.github.com/repos/kumar303/mohawk", "labels_url": "https://api.github.com/repos/kumar303/mohawk/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/kumar303/mohawk/issues/2/comments", "events_url": "https://api.github.com/repos/kumar303/mohawk/issues/2/events", "html_url": "https://github.com/kumar303/mohawk/issues/2", "id": 29628010, "node_id": "MDU6SXNzdWUyOTYyODAxMA==", "number": 2, "title": "always_hash_content=False not respected for Receiver", "user": {"login": "jcwilson", "id": 629874, "node_id": "MDQ6VXNlcjYyOTg3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/629874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcwilson", "html_url": "https://github.com/jcwilson", "followers_url": "https://api.github.com/users/jcwilson/followers", "following_url": "https://api.github.com/users/jcwilson/following{/other_user}", "gists_url": "https://api.github.com/users/jcwilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcwilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcwilson/subscriptions", "organizations_url": "https://api.github.com/users/jcwilson/orgs", "repos_url": "https://api.github.com/users/jcwilson/repos", "events_url": "https://api.github.com/users/jcwilson/events{/privacy}", "received_events_url": "https://api.github.com/users/jcwilson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-18T08:46:39Z", "updated_at": "2015-01-05T23:42:54Z", "closed_at": "2015-01-05T23:42:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Receiver constructor should accept, extract and pass along _always_hash_content_ to the internal Resource constructor, shouldn't it? If it did, we wouldn't need the GET request hack of specifying _content_=\"\" and _content_type_=\"\" at both the Receiver and Sender ends. I think this will also engender a minor change to the behavior of _accept_untrusted_content_ since it doesn't seem to handle empty _content/content_type_ requests very well.\n\nJust my two cents :)\n", "performed_via_github_app": null, "score": 1.0}]}