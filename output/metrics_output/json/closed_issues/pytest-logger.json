{"total_count": 10, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/18", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/18/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/18/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/18", "id": 350630740, "node_id": "MDU6SXNzdWUzNTA2MzA3NDA=", "number": 18, "title": "Update setup.py", "user": {"login": "florczakraf", "id": 9034451, "node_id": "MDQ6VXNlcjkwMzQ0NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9034451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florczakraf", "html_url": "https://github.com/florczakraf", "followers_url": "https://api.github.com/users/florczakraf/followers", "following_url": "https://api.github.com/users/florczakraf/following{/other_user}", "gists_url": "https://api.github.com/users/florczakraf/gists{/gist_id}", "starred_url": "https://api.github.com/users/florczakraf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florczakraf/subscriptions", "organizations_url": "https://api.github.com/users/florczakraf/orgs", "repos_url": "https://api.github.com/users/florczakraf/repos", "events_url": "https://api.github.com/users/florczakraf/events{/privacy}", "received_events_url": "https://api.github.com/users/florczakraf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-14T23:20:04Z", "updated_at": "2018-08-15T21:07:28Z", "closed_at": "2018-08-15T21:07:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is some outdated information in the `setup.py` file:\r\n- author's mail\r\n- required pytest (I believe it should be at least 3.0 or the oldest one that's used in testing at the time of resolving this issue)\r\n- python versions (2.6 is dead, 3.6 and 3.7 are out)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/16", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/16/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/16/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/16", "id": 329928502, "node_id": "MDU6SXNzdWUzMjk5Mjg1MDI=", "number": 16, "title": "How to not write to log but append to the log file.", "user": {"login": "boonyao1122", "id": 19177931, "node_id": "MDQ6VXNlcjE5MTc3OTMx", "avatar_url": "https://avatars1.githubusercontent.com/u/19177931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boonyao1122", "html_url": "https://github.com/boonyao1122", "followers_url": "https://api.github.com/users/boonyao1122/followers", "following_url": "https://api.github.com/users/boonyao1122/following{/other_user}", "gists_url": "https://api.github.com/users/boonyao1122/gists{/gist_id}", "starred_url": "https://api.github.com/users/boonyao1122/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boonyao1122/subscriptions", "organizations_url": "https://api.github.com/users/boonyao1122/orgs", "repos_url": "https://api.github.com/users/boonyao1122/repos", "events_url": "https://api.github.com/users/boonyao1122/events{/privacy}", "received_events_url": "https://api.github.com/users/boonyao1122/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458263331, "node_id": "MDU6TGFiZWw0NTgyNjMzMzE=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-06T15:50:13Z", "updated_at": "2019-04-22T23:01:22Z", "closed_at": "2019-04-22T23:01:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i am new to pytest and also python. I am trying out the example you gave.\r\nExample which i following, [here](https://pypi.org/project/pytest-logger/)\r\n\r\nDuring run my test, logs are always write to my generated log files but not append to end of file. Any how to change to append instead of writing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/15", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/15/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/15/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/15", "id": 328244961, "node_id": "MDU6SXNzdWUzMjgyNDQ5NjE=", "number": 15, "title": "log into separate log files bases on log levels when logged into a single logger", "user": {"login": "Pranesh3944", "id": 27241574, "node_id": "MDQ6VXNlcjI3MjQxNTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/27241574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pranesh3944", "html_url": "https://github.com/Pranesh3944", "followers_url": "https://api.github.com/users/Pranesh3944/followers", "following_url": "https://api.github.com/users/Pranesh3944/following{/other_user}", "gists_url": "https://api.github.com/users/Pranesh3944/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pranesh3944/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pranesh3944/subscriptions", "organizations_url": "https://api.github.com/users/Pranesh3944/orgs", "repos_url": "https://api.github.com/users/Pranesh3944/repos", "events_url": "https://api.github.com/users/Pranesh3944/events{/privacy}", "received_events_url": "https://api.github.com/users/Pranesh3944/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458263328, "node_id": "MDU6TGFiZWw0NTgyNjMzMjg=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-31T18:17:46Z", "updated_at": "2019-04-22T23:01:34Z", "closed_at": "2019-04-22T23:01:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I would like to use a single logger which when used in the scripts should create 2 log files under the test case. For example :  1 log file with all log lines above debug level and one file with all log lines above info level. But, inside the scripts I should be logging only into one logger. Is that possible with the current code  ? Or is it a future enhancement ? Thanks for your help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/11", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/11/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/11/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/11", "id": 297962791, "node_id": "MDU6SXNzdWUyOTc5NjI3OTE=", "number": 11, "title": "Option --log error in pytest 3.4", "user": {"login": "aurzenligl", "id": 7809108, "node_id": "MDQ6VXNlcjc4MDkxMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7809108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aurzenligl", "html_url": "https://github.com/aurzenligl", "followers_url": "https://api.github.com/users/aurzenligl/followers", "following_url": "https://api.github.com/users/aurzenligl/following{/other_user}", "gists_url": "https://api.github.com/users/aurzenligl/gists{/gist_id}", "starred_url": "https://api.github.com/users/aurzenligl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aurzenligl/subscriptions", "organizations_url": "https://api.github.com/users/aurzenligl/orgs", "repos_url": "https://api.github.com/users/aurzenligl/repos", "events_url": "https://api.github.com/users/aurzenligl/events{/privacy}", "received_events_url": "https://api.github.com/users/aurzenligl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458263326, "node_id": "MDU6TGFiZWw0NTgyNjMzMjY=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-17T00:52:44Z", "updated_at": "2018-08-15T00:30:45Z", "closed_at": "2018-08-15T00:30:45Z", "author_association": "OWNER", "active_lock_reason": null, "body": "In pytest 3.4 `--log` option gets confused with `pytest-logging` options:\r\n\r\n```\r\n$ pytest -s --log 123\r\nusage: pytest [options] [file_or_dir] [file_or_dir] [...]\r\npytest: error: ambiguous option: --log could match --log-cli-format, --log-file-date-format, --log-file-level, --log-format, --log-file, --log-cli-level, --log-file-format, --log-level, --log-date-format, --log-cli-date-format\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/10", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/10/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/10/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/10", "id": 297962623, "node_id": "MDU6SXNzdWUyOTc5NjI2MjM=", "number": 10, "title": "Disabling root logger prematurely", "user": {"login": "aurzenligl", "id": 7809108, "node_id": "MDQ6VXNlcjc4MDkxMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7809108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aurzenligl", "html_url": "https://github.com/aurzenligl", "followers_url": "https://api.github.com/users/aurzenligl/followers", "following_url": "https://api.github.com/users/aurzenligl/following{/other_user}", "gists_url": "https://api.github.com/users/aurzenligl/gists{/gist_id}", "starred_url": "https://api.github.com/users/aurzenligl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aurzenligl/subscriptions", "organizations_url": "https://api.github.com/users/aurzenligl/orgs", "repos_url": "https://api.github.com/users/aurzenligl/repos", "events_url": "https://api.github.com/users/aurzenligl/events{/privacy}", "received_events_url": "https://api.github.com/users/aurzenligl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458263326, "node_id": "MDU6TGFiZWw0NTgyNjMzMjY=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-17T00:51:00Z", "updated_at": "2018-08-15T21:07:55Z", "closed_at": "2018-08-15T21:07:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "`self.root_enabler.disable` should be called on makereport rather than teardown.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/9", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/9/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/9/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/9", "id": 286714533, "node_id": "MDU6SXNzdWUyODY3MTQ1MzM=", "number": 9, "title": "Log redirect", "user": {"login": "rajivgup", "id": 32713717, "node_id": "MDQ6VXNlcjMyNzEzNzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/32713717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajivgup", "html_url": "https://github.com/rajivgup", "followers_url": "https://api.github.com/users/rajivgup/followers", "following_url": "https://api.github.com/users/rajivgup/following{/other_user}", "gists_url": "https://api.github.com/users/rajivgup/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajivgup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajivgup/subscriptions", "organizations_url": "https://api.github.com/users/rajivgup/orgs", "repos_url": "https://api.github.com/users/rajivgup/repos", "events_url": "https://api.github.com/users/rajivgup/events{/privacy}", "received_events_url": "https://api.github.com/users/rajivgup/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967504189, "node_id": "MDU6TGFiZWw5Njc1MDQxODk=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/limbo", "name": "limbo", "color": "bfdadc", "default": false, "description": "Original requestor seems not interested in given feature anymore"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-08T11:18:27Z", "updated_at": "2018-06-18T02:54:29Z", "closed_at": "2018-06-18T02:54:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nFirst I would like to appreciate your work on creating logger plugin that simplifies the logging job when running in a large test environment.\r\n \r\nI'm trying to use your plugin for my test cases logging. As per its design, it works perfectly so this is not a bug report. However, I have a use case that I would like to see if this plugin can support as a new feature. \r\n\r\nMy use case is for some of the testcase I want to redirect logs to the file other than what default, that is being created by this plugin. Let's take an example.\r\n\r\nI'm adding the file logging for \"app/testcases/test_app.py\", which has two test cases under a class MYTESTS,  test_foo and test_bar. Now as per existing plugin features the log files will get created like this.\r\n\r\n/tmp/pytest-of-rajiv/logs/app/testcases/test_app/MYTEST.test_foo/pytest_logger\r\nand\r\n/tmp/pytest-of-rajiv/logs/app/testcases/test_app/MYTEST.test_bar/pytest_logger\r\n\r\nHowever, for MYTEST.test_bar I want to redirect the log file to some other location with the different name like this.\r\n\r\n/tharnlog/custer1/20180106/test_app/MYTEST.test_bar.log\r\n\r\nThis something I should be able to control using pytest_test_setup hook based on certain markers.\r\n\r\nCurrently, the plugin uses nodeid to create the filehandler which will be the by default getting created using full file path from the root directory. There is no option to modify the file path except modifying the --logger-logsdir. Basically, redirect the log file to some other location other than default filehandler. \r\n\r\nAfter going through your code I feel that it is possible to do it by modifying the LoggerState object and pass it to make handler. \r\n```\r\n\r\nclass LoggerPlugin(object):\r\n    def __init__(self, config, logcfg):\r\n        self._config = config\r\n        self._logdirlinks = config.hook.pytest_logger_logdirlink(config=config)\r\n        self._loggers = _loggers_from_logcfg(logcfg, config.getoption('log')) if logcfg._enabled else None\r\n        self._formatter_class = logcfg._formatter_class or DefaultFormatter\r\n        self._logsdir = None\r\n        self._redirectpath = None\r\n\r\n```\r\nModify the state object by influencing this hook. I did the hookwrapper in my conftest to make sure my hook gets called first and I can influence the loggerstate. \r\n\r\n```\r\n    def pytest_runtest_setup(self, item):\r\n        loggers = _choose_loggers(self._loggers, _loggers_from_hooks(item))\r\n        formatter = self._formatter_class()\r\n        item._logger = state = LoggerState(item=item,\r\n                                           stdoutloggers=loggers.stdout,\r\n                                           fileloggers=loggers.file,\r\n                                           formatter=formatter,\r\n                                           redirectpath=self._redirectpath)\r\n        state.on_setup()\r\n```\r\n```\r\nclass LoggerState(object):\r\n    def __init__(self, item, stdoutloggers, fileloggers, formatter, redirectpath=None):\r\n        self._put_newlines = bool(item.config.option.capture == 'no' and stdoutloggers)\r\n        self.handlers = _make_handlers(stdoutloggers, fileloggers, item, formatter, redirectpath)\r\n        self.root_enabler = RootEnabler(bool(stdoutloggers and fileloggers))\r\n```\r\n```\r\ndef _make_logdir(item, redirectpath=None):\r\n    plugin = item.config.pluginmanager.getplugin('_logger')\r\n    if (redirectpath):\r\n        return plugin.logsdir().join(redirectpath).ensure(dir=1)\r\n    else:\r\n        return plugin.logsdir().join(_sanitize_nodeid(item.nodeid)).ensure(dir=1)\r\n\r\n```\r\n```\r\ndef _make_handlers(stdoutloggers, fileloggers, item, formatter, redirectpath=None):\r\n    handlers = []\r\n    if stdoutloggers:\r\n        handlers += _make_stdout_handlers(stdoutloggers, formatter)\r\n    if fileloggers:\r\n        logdir = _make_logdir(item, redirectpath)\r\n        handlers += _make_file_handlers(fileloggers, formatter, logdir)\r\n    return handlers\r\n\r\n```\r\n\r\nAnd this is how we can influence this hook from conftest \r\n\r\n```\r\n@pytest.hookimpl(hookwrapper=True)\r\ndef pytest_runtest_setup(item):\r\n\r\n    # Let's get the logger plugin\r\n    logger = item.config.pluginmanager.getplugin('_logger')\r\n\r\n    #add a File logger\r\n    testname, filename = get_test_file_name(item.nodeid)\r\n\r\n    filename = os.path.splitext(filename)[0]\r\n    testnames = (testname, logging.DEBUG)\r\n    logger._loggers.file = [(testnames)]\r\n    newpath = filename\r\n    logger._redirectpath = newpath\r\n\r\n    outcome = yield\r\n\r\n```\r\nI find this use case is very useful and generic because many of the times we want to record the logging to commonplace for specific reasons. For me, the log files are generated from various test systems in a huge test infrastructure setup. That setup is already generating log files with that naming convention. I can write something as post-test teardown that will copy the log file into that location but that will not be real time and slow down my testing.\r\n\r\nI would greatly appreciate your input. I'm also ready to contribute under your guidance.\r\n\r\nThanks,\r\nRajiv Gupta", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/7", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/7/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/7/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/7", "id": 267652209, "node_id": "MDU6SXNzdWUyNjc2NTIyMDk=", "number": 7, "title": "No way to modify formatter", "user": {"login": "farquet", "id": 2393555, "node_id": "MDQ6VXNlcjIzOTM1NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2393555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farquet", "html_url": "https://github.com/farquet", "followers_url": "https://api.github.com/users/farquet/followers", "following_url": "https://api.github.com/users/farquet/following{/other_user}", "gists_url": "https://api.github.com/users/farquet/gists{/gist_id}", "starred_url": "https://api.github.com/users/farquet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farquet/subscriptions", "organizations_url": "https://api.github.com/users/farquet/orgs", "repos_url": "https://api.github.com/users/farquet/repos", "events_url": "https://api.github.com/users/farquet/events{/privacy}", "received_events_url": "https://api.github.com/users/farquet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458263328, "node_id": "MDU6TGFiZWw0NTgyNjMzMjg=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-23T12:40:08Z", "updated_at": "2018-06-18T01:42:24Z", "closed_at": "2017-11-02T19:33:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nWould that be possible to add a way to modify the logging handler/formatter from the LoggerConfig object ?\r\nFrom the code, I see no way of modifying the formatter without hacking the private `self._loggers` in `LoggerConfig`.\r\nCool plugin by the way !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/3", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/3/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/3/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/3", "id": 209259311, "node_id": "MDU6SXNzdWUyMDkyNTkzMTE=", "number": 3, "title": "Option for root logs dir", "user": {"login": "skrchnavy", "id": 7057580, "node_id": "MDQ6VXNlcjcwNTc1ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7057580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skrchnavy", "html_url": "https://github.com/skrchnavy", "followers_url": "https://api.github.com/users/skrchnavy/followers", "following_url": "https://api.github.com/users/skrchnavy/following{/other_user}", "gists_url": "https://api.github.com/users/skrchnavy/gists{/gist_id}", "starred_url": "https://api.github.com/users/skrchnavy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skrchnavy/subscriptions", "organizations_url": "https://api.github.com/users/skrchnavy/orgs", "repos_url": "https://api.github.com/users/skrchnavy/repos", "events_url": "https://api.github.com/users/skrchnavy/events{/privacy}", "received_events_url": "https://api.github.com/users/skrchnavy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 458263328, "node_id": "MDU6TGFiZWw0NTgyNjMzMjg=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-21T20:12:15Z", "updated_at": "2018-06-18T01:42:24Z", "closed_at": "2017-02-27T10:00:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "currently log files are created in directory based on tmpdir fixture.\r\nIt would be nice to be able to define root dir, where it is created in command line / configuration file.\r\n\r\nworkaround is to use `--basetemp`, but it could influence other features.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/2", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/2/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/2/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/2", "id": 209256629, "node_id": "MDU6SXNzdWUyMDkyNTY2Mjk=", "number": 2, "title": "symlink on windows not supported", "user": {"login": "skrchnavy", "id": 7057580, "node_id": "MDQ6VXNlcjcwNTc1ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7057580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skrchnavy", "html_url": "https://github.com/skrchnavy", "followers_url": "https://api.github.com/users/skrchnavy/followers", "following_url": "https://api.github.com/users/skrchnavy/following{/other_user}", "gists_url": "https://api.github.com/users/skrchnavy/gists{/gist_id}", "starred_url": "https://api.github.com/users/skrchnavy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skrchnavy/subscriptions", "organizations_url": "https://api.github.com/users/skrchnavy/orgs", "repos_url": "https://api.github.com/users/skrchnavy/repos", "events_url": "https://api.github.com/users/skrchnavy/events{/privacy}", "received_events_url": "https://api.github.com/users/skrchnavy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967504189, "node_id": "MDU6TGFiZWw5Njc1MDQxODk=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/limbo", "name": "limbo", "color": "bfdadc", "default": false, "description": "Original requestor seems not interested in given feature anymore"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-21T20:01:11Z", "updated_at": "2018-06-18T02:54:28Z", "closed_at": "2018-06-18T02:54:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Small bug in implementation, os.symlink is not available on windows.\r\nUnfortunately common solution for all versions deesn't exist. but from vista, it is possible to implement if using ctypes.windll.kernel32.CreateSymbolicLinkW, example here:\r\nhttp://stackoverflow.com/questions/6260149/os-symlink-support-in-windows\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/1", "repository_url": "https://api.github.com/repos/aurzenligl/pytest-logger", "labels_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/1/comments", "events_url": "https://api.github.com/repos/aurzenligl/pytest-logger/issues/1/events", "html_url": "https://github.com/aurzenligl/pytest-logger/issues/1", "id": 209200844, "node_id": "MDU6SXNzdWUyMDkyMDA4NDQ=", "number": 1, "title": "Support for logbook", "user": {"login": "skrchnavy", "id": 7057580, "node_id": "MDQ6VXNlcjcwNTc1ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7057580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skrchnavy", "html_url": "https://github.com/skrchnavy", "followers_url": "https://api.github.com/users/skrchnavy/followers", "following_url": "https://api.github.com/users/skrchnavy/following{/other_user}", "gists_url": "https://api.github.com/users/skrchnavy/gists{/gist_id}", "starred_url": "https://api.github.com/users/skrchnavy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skrchnavy/subscriptions", "organizations_url": "https://api.github.com/users/skrchnavy/orgs", "repos_url": "https://api.github.com/users/skrchnavy/repos", "events_url": "https://api.github.com/users/skrchnavy/events{/privacy}", "received_events_url": "https://api.github.com/users/skrchnavy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967504189, "node_id": "MDU6TGFiZWw5Njc1MDQxODk=", "url": "https://api.github.com/repos/aurzenligl/pytest-logger/labels/limbo", "name": "limbo", "color": "bfdadc", "default": false, "description": "Original requestor seems not interested in given feature anymore"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-21T16:36:17Z", "updated_at": "2018-06-18T02:54:28Z", "closed_at": "2018-06-18T02:54:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "This extension works with python logging module.\r\nIs there a plan to support also logbook (https://logbook.readthedocs.io/en/stable/index.html) logging library?\r\n", "performed_via_github_app": null, "score": 1.0}]}