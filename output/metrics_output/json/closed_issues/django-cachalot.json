{"total_count": 96, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/162", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/162/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/162/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/162", "id": 673302389, "node_id": "MDU6SXNzdWU2NzMzMDIzODk=", "number": 162, "title": "Support for Django 3.1", "user": {"login": "cfobel", "id": 823355, "node_id": "MDQ6VXNlcjgyMzM1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/823355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cfobel", "html_url": "https://github.com/cfobel", "followers_url": "https://api.github.com/users/cfobel/followers", "following_url": "https://api.github.com/users/cfobel/following{/other_user}", "gists_url": "https://api.github.com/users/cfobel/gists{/gist_id}", "starred_url": "https://api.github.com/users/cfobel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cfobel/subscriptions", "organizations_url": "https://api.github.com/users/cfobel/orgs", "repos_url": "https://api.github.com/users/cfobel/repos", "events_url": "https://api.github.com/users/cfobel/events{/privacy}", "received_events_url": "https://api.github.com/users/cfobel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-05T06:57:13Z", "updated_at": "2020-08-13T04:10:49Z", "closed_at": "2020-08-10T21:18:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nAdd support for Django 3.1\r\n\r\n\r\n## Rationale\r\n\r\nDjango 3.1 adds new features, including:\r\n\r\n - [async views and middleware support][0]\r\n - cross-database [JSON field][1]\r\n\r\n[0]: https://docs.djangoproject.com/en/3.1/releases/3.1/#asynchronous-views-and-middleware-support\r\n[1]: https://docs.djangoproject.com/en/3.1/ref/models/fields/#django.db.models.JSONField\r\n\r\n## Known issues\r\n\r\nNot currently compatible with [Django 3.1][2] due to:\r\n\r\n> The compatibility imports of `django.core.exceptions.EmptyResultSet` in `django.db.models.query`, `django.db.models.sql`, and `django.db.models.sql.datastructures` are removed.\r\n\r\nAfter monkey-patching `django.db.models.query` to re-add `EmptyResultSet`, I encounter the following error:\r\n\r\n> ```\r\n>  SystemCheckError: System check identified some issues:\r\n> \r\n>  ERRORS:\r\n>  ?: (cachalot.E003) Django 3.1 is not compatible with this version of django-cachalot.\r\n>        HINT: Refer to the django-cachalot documentation to find which versions are compatible.\r\n> \r\n> ```\r\n\r\n[2]: https://docs.djangoproject.com/en/3.1/releases/3.1/#id1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/159", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/159/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/159/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/159", "id": 665713566, "node_id": "MDU6SXNzdWU2NjU3MTM1NjY=", "number": 159, "title": "Importing ABC directly from collections has been deprecated and will be removed in Python 3.10", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-26T05:40:14Z", "updated_at": "2020-07-26T17:30:48Z", "closed_at": "2020-07-26T17:30:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## What happened?\r\n\r\nImporting ABC directly from collections has been deprecated and will be removed in Python 3.10\r\n\r\n## What should've happened instead?\r\n\r\nUse collections.abc instead\r\n\r\n## Steps to reproduce\r\n\r\n```\r\ncachalot/monkey_patch.py\r\n1:from collections import Iterable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/152", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/152/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/152/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/152", "id": 611269794, "node_id": "MDU6SXNzdWU2MTEyNjk3OTQ=", "number": 152, "title": "Slack invite link expired", "user": {"login": "valentijnscholten", "id": 4426050, "node_id": "MDQ6VXNlcjQ0MjYwNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4426050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valentijnscholten", "html_url": "https://github.com/valentijnscholten", "followers_url": "https://api.github.com/users/valentijnscholten/followers", "following_url": "https://api.github.com/users/valentijnscholten/following{/other_user}", "gists_url": "https://api.github.com/users/valentijnscholten/gists{/gist_id}", "starred_url": "https://api.github.com/users/valentijnscholten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valentijnscholten/subscriptions", "organizations_url": "https://api.github.com/users/valentijnscholten/orgs", "repos_url": "https://api.github.com/users/valentijnscholten/repos", "events_url": "https://api.github.com/users/valentijnscholten/events{/privacy}", "received_events_url": "https://api.github.com/users/valentijnscholten/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-02T20:40:54Z", "updated_at": "2020-05-03T07:14:48Z", "closed_at": "2020-05-03T01:23:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Question\r\nIs there still a Cachalot Slack channel/workspace? If yes, the invite link in the README has expired :-)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/150", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/150/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/150/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/150", "id": 608510252, "node_id": "MDU6SXNzdWU2MDg1MTAyNTI=", "number": 150, "title": "Subquerys broken on django 3.0", "user": {"login": "benjfield", "id": 3340965, "node_id": "MDQ6VXNlcjMzNDA5NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3340965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjfield", "html_url": "https://github.com/benjfield", "followers_url": "https://api.github.com/users/benjfield/followers", "following_url": "https://api.github.com/users/benjfield/following{/other_user}", "gists_url": "https://api.github.com/users/benjfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjfield/subscriptions", "organizations_url": "https://api.github.com/users/benjfield/orgs", "repos_url": "https://api.github.com/users/benjfield/repos", "events_url": "https://api.github.com/users/benjfield/events{/privacy}", "received_events_url": "https://api.github.com/users/benjfield/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T18:04:41Z", "updated_at": "2020-04-28T20:33:39Z", "closed_at": "2020-04-28T20:33:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "File \"/usr/local/lib/python3.7/site-packages/django/db/models/query.py\", line 258, in __len__  \r\n    self._fetch_all()  \r\nFile \"/usr/local/lib/python3.7/site-packages/django/db/models/query.py\", line 1261, in _fetch_all  \r\n    self._result_cache = list(self._iterable_class(self))  \r\nFile \"/usr/local/lib/python3.7/site-packages/django/db/models/query.py\", line 57, in __iter__  \r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)  \r\nFile \"/usr/local/lib/python3.7/site-packages/cachalot/monkey_patch.py\", line 36, in inner  \r\n    return original(compiler, *args, **kwargs)  \r\nFile \"/usr/local/lib/python3.7/site-packages/cachalot/monkey_patch.py\", line 83, in inner  \r\n    table_cache_keys = _get_table_cache_keys(compiler)  \r\nFile \"/usr/local/lib/python3.7/site-packages/cachalot/utils.py\", line 196, in _get_table_cache_keys  \r\n    for t in _get_tables(db_alias, compiler.query)]  \r\nFile \"/usr/local/lib/python3.7/site-packages/cachalot/utils.py\", line 172, in _get_tables  \r\n    for subquery in _find_subqueries_in_where(query.where.children):  \r\nFile \"/usr/local/lib/python3.7/site-packages/cachalot/utils.py\", line 124, in _find_subqueries_in_where  \r\n    yield rhs.queryset.query  \r\nAttributeError: 'Subquery' object has no attribute 'queryset'\r\n\r\nPython 3.7\r\nDjango 3.0.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/148", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/148/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/148/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/148", "id": 583250351, "node_id": "MDU6SXNzdWU1ODMyNTAzNTE=", "number": 148, "title": "Slack invite link is not valid anymore + CACHALOT_ONLY_CACHABLE_TABLES seems to not work", "user": {"login": "faridelnasire", "id": 8388199, "node_id": "MDQ6VXNlcjgzODgxOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8388199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faridelnasire", "html_url": "https://github.com/faridelnasire", "followers_url": "https://api.github.com/users/faridelnasire/followers", "following_url": "https://api.github.com/users/faridelnasire/following{/other_user}", "gists_url": "https://api.github.com/users/faridelnasire/gists{/gist_id}", "starred_url": "https://api.github.com/users/faridelnasire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faridelnasire/subscriptions", "organizations_url": "https://api.github.com/users/faridelnasire/orgs", "repos_url": "https://api.github.com/users/faridelnasire/repos", "events_url": "https://api.github.com/users/faridelnasire/events{/privacy}", "received_events_url": "https://api.github.com/users/faridelnasire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-17T19:35:19Z", "updated_at": "2020-03-29T02:27:10Z", "closed_at": "2020-03-29T02:27:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried setting the CACHALOT_ONLY_CACHABLE_TABLES setting to this:\r\n```CACHALOT_ONLY_CACHABLE_TABLES = frozenset(('discussion_question',))```\r\nWhich ends up actually completely disabling caching. I've double-checked the table name, it is in fact `discussion_question`. Am I setting the wrong value?\r\n\r\nTried joining the Slack workspace, but it looks expired.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/145", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/145/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/145/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/145", "id": 562288537, "node_id": "MDU6SXNzdWU1NjIyODg1Mzc=", "number": 145, "title": "Repository and Local Testing", "user": {"login": "Andrew-Chen-Wang", "id": 60190294, "node_id": "MDQ6VXNlcjYwMTkwMjk0", "avatar_url": "https://avatars0.githubusercontent.com/u/60190294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andrew-Chen-Wang", "html_url": "https://github.com/Andrew-Chen-Wang", "followers_url": "https://api.github.com/users/Andrew-Chen-Wang/followers", "following_url": "https://api.github.com/users/Andrew-Chen-Wang/following{/other_user}", "gists_url": "https://api.github.com/users/Andrew-Chen-Wang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andrew-Chen-Wang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andrew-Chen-Wang/subscriptions", "organizations_url": "https://api.github.com/users/Andrew-Chen-Wang/orgs", "repos_url": "https://api.github.com/users/Andrew-Chen-Wang/repos", "events_url": "https://api.github.com/users/Andrew-Chen-Wang/events{/privacy}", "received_events_url": "https://api.github.com/users/Andrew-Chen-Wang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-10T02:24:21Z", "updated_at": "2020-02-12T05:52:13Z", "closed_at": "2020-02-12T05:52:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hey, new maintainer for this repository. Does anyone have a working Tox test for this yet? If not, we'll track it here.\r\n\r\nAdditionally, I'll start the merging process for #144 and #142 so that the package can update properly (especially with Django 3.0 asking everyone to use six instead of django.utils.six).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/141", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/141/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/141/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/141", "id": 539626757, "node_id": "MDU6SXNzdWU1Mzk2MjY3NTc=", "number": 141, "title": "Django 3.0 compatibility", "user": {"login": "PetrDlouhy", "id": 156755, "node_id": "MDQ6VXNlcjE1Njc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/156755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetrDlouhy", "html_url": "https://github.com/PetrDlouhy", "followers_url": "https://api.github.com/users/PetrDlouhy/followers", "following_url": "https://api.github.com/users/PetrDlouhy/following{/other_user}", "gists_url": "https://api.github.com/users/PetrDlouhy/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetrDlouhy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetrDlouhy/subscriptions", "organizations_url": "https://api.github.com/users/PetrDlouhy/orgs", "repos_url": "https://api.github.com/users/PetrDlouhy/repos", "events_url": "https://api.github.com/users/PetrDlouhy/events{/privacy}", "received_events_url": "https://api.github.com/users/PetrDlouhy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-18T11:35:39Z", "updated_at": "2020-02-10T04:05:07Z", "closed_at": "2020-02-10T04:05:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In Django 3.0 I end up with following error:\r\n\r\n```\r\n  File \"/home/petr/.local/share/virtualenvs/blenderhub_server-izvs0qj4/src/django-cachalot/cachalot/apps.py\", line 7, in <module>\r\n    from cachalot.utils import ITERABLES\r\n  File \"/home/petr/.local/share/virtualenvs/blenderhub_server-izvs0qj4/src/django-cachalot/cachalot/utils.py\", line 16, in <module>\r\n    from django.utils.six import text_type, binary_type, integer_types\r\nModuleNotFoundError: No module named 'django.utils.six'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/138", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/138/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/138/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/138", "id": 511668256, "node_id": "MDU6SXNzdWU1MTE2NjgyNTY=", "number": 138, "title": "Need help in CachalotPanel", "user": {"login": "ierosodin", "id": 20553624, "node_id": "MDQ6VXNlcjIwNTUzNjI0", "avatar_url": "https://avatars2.githubusercontent.com/u/20553624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ierosodin", "html_url": "https://github.com/ierosodin", "followers_url": "https://api.github.com/users/ierosodin/followers", "following_url": "https://api.github.com/users/ierosodin/following{/other_user}", "gists_url": "https://api.github.com/users/ierosodin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ierosodin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ierosodin/subscriptions", "organizations_url": "https://api.github.com/users/ierosodin/orgs", "repos_url": "https://api.github.com/users/ierosodin/repos", "events_url": "https://api.github.com/users/ierosodin/events{/privacy}", "received_events_url": "https://api.github.com/users/ierosodin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-24T02:39:54Z", "updated_at": "2020-02-12T06:55:56Z", "closed_at": "2020-02-12T05:52:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used MemcachedCache as my cached backend, and I also checked If it worked.\r\n(by using ```watch -td '(echo stats ; echo quit) | nc 127.0.0.1 11211 | grep get_hits '``` to check if cached hit and cached miss was happened)\r\n\r\nHowever, I doubted that most of the cache is caused by my site's content, not the hit of database, so I tried to use debug_toolbar to see whether if the cachalot was working.\r\n\r\nFor the cachalot part,\r\nI set ```'cachalot',``` in INSTALLED_APPS, and ```CACHALOT_TIMEOUT = 21600```.\r\n\r\nFor the debug part,\r\nI set ```DEBUG_TOOLBAR_PANELS = [\"debug_toolbar.panels.cache.CachePanel\", \"cachalot.panels.CachalotPanel\"]```.\r\n\r\nI found that cachalotpanel is totaly empty!\r\n\r\nCan you give me some advice how to make it work?\r\nThanks\r\n\r\nSincerely,\r\nTony", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/134", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/134/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/134/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/134", "id": 463145779, "node_id": "MDU6SXNzdWU0NjMxNDU3Nzk=", "number": 134, "title": "Running pip install the installed django version should not be modified.", "user": {"login": "fabiocaccamo", "id": 1035294, "node_id": "MDQ6VXNlcjEwMzUyOTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1035294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabiocaccamo", "html_url": "https://github.com/fabiocaccamo", "followers_url": "https://api.github.com/users/fabiocaccamo/followers", "following_url": "https://api.github.com/users/fabiocaccamo/following{/other_user}", "gists_url": "https://api.github.com/users/fabiocaccamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabiocaccamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabiocaccamo/subscriptions", "organizations_url": "https://api.github.com/users/fabiocaccamo/orgs", "repos_url": "https://api.github.com/users/fabiocaccamo/repos", "events_url": "https://api.github.com/users/fabiocaccamo/events{/privacy}", "received_events_url": "https://api.github.com/users/fabiocaccamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-02T10:20:02Z", "updated_at": "2020-02-12T06:58:12Z", "closed_at": "2020-02-12T06:58:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running `pip install django-cachalot` on a project with `django==2.2.3`, django is uninstalled and an older django version in installed (because `django-cachalot` doesn't support django 2.2 yet).\r\n\r\n**I think that the installed django version should no be modified by any 3rd party package.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/133", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/133/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/133/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/133", "id": 460748535, "node_id": "MDU6SXNzdWU0NjA3NDg1MzU=", "number": 133, "title": "Cache invalidation not working properly for multiple cache servers for the same database", "user": {"login": "vinodpandey", "id": 230595, "node_id": "MDQ6VXNlcjIzMDU5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/230595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinodpandey", "html_url": "https://github.com/vinodpandey", "followers_url": "https://api.github.com/users/vinodpandey/followers", "following_url": "https://api.github.com/users/vinodpandey/following{/other_user}", "gists_url": "https://api.github.com/users/vinodpandey/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinodpandey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinodpandey/subscriptions", "organizations_url": "https://api.github.com/users/vinodpandey/orgs", "repos_url": "https://api.github.com/users/vinodpandey/repos", "events_url": "https://api.github.com/users/vinodpandey/events{/privacy}", "received_events_url": "https://api.github.com/users/vinodpandey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-26T04:03:02Z", "updated_at": "2020-08-03T13:53:28Z", "closed_at": "2020-08-03T13:53:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Setup:\r\n```\r\nPython==3.6.0\r\nDjango==1.11.18\r\npython-memcached==1.59\r\ndjango-cachalot==2.1.0\r\n```\r\n\r\nArchitecture:\r\n```\r\n5 django servers with each having it's own cache (memcached)\r\nMySQL\r\n```\r\n\r\nBelow cache invalidation script is used to invalidate cache in all 5 servers\r\n```\r\nimport threading\r\n\r\nfrom cachalot.api import invalidate\r\nfrom cachalot.signals import post_invalidation\r\nfrom django.dispatch import receiver\r\nfrom django.conf import settings\r\n\r\nSIGNAL_INFO = threading.local()\r\n\r\n@receiver(post_invalidation)\r\ndef invalidate_other_caches(sender, **kwargs):\r\n    if getattr(SIGNAL_INFO, 'was_called', False):\r\n        return\r\n    db_alias = kwargs['db_alias']\r\n    for cache_alias in settings.CACHES:\r\n        if cache_alias == settings.CACHALOT_CACHE:\r\n            continue\r\n        SIGNAL_INFO.was_called = True\r\n        try:\r\n            invalidate(sender, db_alias=db_alias, cache_alias=cache_alias)\r\n        finally:\r\n            SIGNAL_INFO.was_called = False\r\n```\r\n\r\nOther settings\r\n```\r\nCACHALOT_CACHE = 'default'\r\nCACHES contains 'default' as localhost and rest 4 servers as 's1', 's2', 's3', 's4'\r\n```\r\n\r\nIssue:\r\nWhen a model is updated, the cache is not getting invalidated properly in rest of the servers. But when below command is run from django python shell from original server, the cache gets invalidated in all the servers. Although, in below command, we have specified only one server.\r\n\r\n```\r\ninvalidate('test_generator_header', db_alias='default', cache_alias='api1')\r\n```\r\n\r\nThe same setup is working fine in python 2.7 with below configuration with proper cache invalidation for all servers. \r\n\r\n```\r\nPython==2.7.16\r\nDjango==1.11.18\r\npython-memcached==1.57\r\ndjango-cachalot==1.3.0\r\n```\r\nCache invalidation script, CACHALOT_CACHE and CACHES field values are same.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/130", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/130/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/130/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/130", "id": 440582764, "node_id": "MDU6SXNzdWU0NDA1ODI3NjQ=", "number": 130, "title": "When to support django 2.2", "user": {"login": "rayer4u", "id": 5928318, "node_id": "MDQ6VXNlcjU5MjgzMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5928318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayer4u", "html_url": "https://github.com/rayer4u", "followers_url": "https://api.github.com/users/rayer4u/followers", "following_url": "https://api.github.com/users/rayer4u/following{/other_user}", "gists_url": "https://api.github.com/users/rayer4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayer4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayer4u/subscriptions", "organizations_url": "https://api.github.com/users/rayer4u/orgs", "repos_url": "https://api.github.com/users/rayer4u/repos", "events_url": "https://api.github.com/users/rayer4u/events{/privacy}", "received_events_url": "https://api.github.com/users/rayer4u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-06T07:57:16Z", "updated_at": "2020-02-12T07:13:07Z", "closed_at": "2019-05-10T09:10:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this project, I'am using it to simplify table cache. But when I using in django 2.2, error happened\r\n```\r\nERRORS:\r\n?: (cachalot.E003) Django 2.2.1 is not compatible with this version of django-cachalot.\r\n        HINT: Refer to the django-cachalot documentation to find which versions are compatible.\r\n```\r\nIs there any plan to support django 2.2? I think django 2.2 does not change a lot, the upgrade should be easy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/129", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/129/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/129/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/129", "id": 436563416, "node_id": "MDU6SXNzdWU0MzY1NjM0MTY=", "number": 129, "title": "TypeError when trying to invalidate a model", "user": {"login": "Silvester23", "id": 1843325, "node_id": "MDQ6VXNlcjE4NDMzMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1843325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Silvester23", "html_url": "https://github.com/Silvester23", "followers_url": "https://api.github.com/users/Silvester23/followers", "following_url": "https://api.github.com/users/Silvester23/following{/other_user}", "gists_url": "https://api.github.com/users/Silvester23/gists{/gist_id}", "starred_url": "https://api.github.com/users/Silvester23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Silvester23/subscriptions", "organizations_url": "https://api.github.com/users/Silvester23/orgs", "repos_url": "https://api.github.com/users/Silvester23/repos", "events_url": "https://api.github.com/users/Silvester23/events{/privacy}", "received_events_url": "https://api.github.com/users/Silvester23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-24T08:28:37Z", "updated_at": "2019-04-24T09:01:51Z", "closed_at": "2019-04-24T09:01:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to invalidate the cache for a model in the `__init__` of the corresponding ModelAdmin, using `invalidate(DummyModel)`.\r\n\r\nThis leads to the following error:\r\n\r\n`File \".../cachalottest/admin.py\", line 11, in __init__\r\n    invalidate(DummyModel)\r\n  File \".../lib/python3.6/site-packages/cachalot/api.py\", line 80, in invalidate\r\n    _invalidate_tables(cache, db_alias, tables)\r\n  File \".../lib/python3.6/site-packages/cachalot/utils.py\", line 197, in _invalidate_tables\r\n    {get_table_cache_key(db_alias, t): now for t in tables},\r\n  File \".../lib/python3.6/site-packages/cachalot/utils.py\", line 197, in <dictcomp>\r\n    {get_table_cache_key(db_alias, t): now for t in tables},\r\nTypeError: 'str' object is not callable\r\n`\r\n\r\nThe problem seems to be that the cachalot settings have not been loaded at that point and just return the string representation of `cachalot_settings.CACHALOT_TABLE_KEYGEN` instead of the function. Calling `cachalot_settings.load()` before `invalidate` fixes the issue but seems like an unnecessary workaround.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/124", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/124/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/124/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/124", "id": 395576578, "node_id": "MDU6SXNzdWUzOTU1NzY1Nzg=", "number": 124, "title": "Excluding certain queries", "user": {"login": "chubz", "id": 2011432, "node_id": "MDQ6VXNlcjIwMTE0MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2011432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chubz", "html_url": "https://github.com/chubz", "followers_url": "https://api.github.com/users/chubz/followers", "following_url": "https://api.github.com/users/chubz/following{/other_user}", "gists_url": "https://api.github.com/users/chubz/gists{/gist_id}", "starred_url": "https://api.github.com/users/chubz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chubz/subscriptions", "organizations_url": "https://api.github.com/users/chubz/orgs", "repos_url": "https://api.github.com/users/chubz/repos", "events_url": "https://api.github.com/users/chubz/events{/privacy}", "received_events_url": "https://api.github.com/users/chubz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-03T13:41:03Z", "updated_at": "2019-01-03T14:37:06Z", "closed_at": "2019-01-03T14:37:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs there a way to exclude certain queries from being affected by cachalot?\r\n\r\nCase example:\r\nWhile I do want queries relating to User model to be cached I would like to avoid queries regarding login or queries regarding user registration to be cached.\r\n\r\nThese happen rarely or happen often but have a no value being cached, and should hit the database, and will always hit the database so when I see that they run thorugh cache get and then cache set it seems like this should be avoided.\r\nAny way to mark a view or decorate a view to disable cachalot on it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/122", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/122/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/122/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/122", "id": 383529096, "node_id": "MDU6SXNzdWUzODM1MjkwOTY=", "number": 122, "title": "Raw queries may cause unintentional invalidations", "user": {"login": "jcass77", "id": 10268911, "node_id": "MDQ6VXNlcjEwMjY4OTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/10268911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcass77", "html_url": "https://github.com/jcass77", "followers_url": "https://api.github.com/users/jcass77/followers", "following_url": "https://api.github.com/users/jcass77/following{/other_user}", "gists_url": "https://api.github.com/users/jcass77/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcass77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcass77/subscriptions", "organizations_url": "https://api.github.com/users/jcass77/orgs", "repos_url": "https://api.github.com/users/jcass77/repos", "events_url": "https://api.github.com/users/jcass77/events{/privacy}", "received_events_url": "https://api.github.com/users/jcass77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752623, "node_id": "MDU6TGFiZWwxMzI3NTI2MjM=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-22T13:09:20Z", "updated_at": "2018-11-23T14:48:16Z", "closed_at": "2018-11-23T14:48:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have come across a few instances where tables would be invalidated unexpectedly.\r\n\r\nI don't understand the testing framework well enough to simulate the problem unfortunately, but think it is related to model fields that have similar names to SQL keywords.\r\n\r\nFor example, would this [invalidation logic](https://github.com/noripyt/django-cachalot/blob/f3f8773f853d4814ec801b8b7f8a6470781857c8/cachalot/monkey_patch.py#L131-L133) logic not cause a query that contains a field called `created` to trigger an validation?\r\n\r\ni.e. ``SELECT id, created, from table``...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/121", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/121/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/121/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/121", "id": 379825640, "node_id": "MDU6SXNzdWUzNzk4MjU2NDA=", "number": 121, "title": "AttributeError: 'ExtraJoinRestriction' object has no attribute 'rhs'", "user": {"login": "kennir", "id": 876410, "node_id": "MDQ6VXNlcjg3NjQxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/876410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennir", "html_url": "https://github.com/kennir", "followers_url": "https://api.github.com/users/kennir/followers", "following_url": "https://api.github.com/users/kennir/following{/other_user}", "gists_url": "https://api.github.com/users/kennir/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennir/subscriptions", "organizations_url": "https://api.github.com/users/kennir/orgs", "repos_url": "https://api.github.com/users/kennir/repos", "events_url": "https://api.github.com/users/kennir/events{/privacy}", "received_events_url": "https://api.github.com/users/kennir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-12T15:24:20Z", "updated_at": "2020-02-12T06:55:08Z", "closed_at": "2020-02-12T06:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\nI got error below:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/library/tests.py\", line 79, in test_smart_album\r\n    self.assertEqual(stories.count(), samples.count())\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/django/db/models/query.py\", line 387, in count\r\n    return self.query.get_count(using=self.db)\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/django/db/models/sql/query.py\", line 491, in get_count\r\n    number = obj.get_aggregation(using, ['__count'])['__count']\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/django/db/models/sql/query.py\", line 476, in get_aggregation\r\n    result = compiler.execute_sql(SINGLE)\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 32, in inner\r\n    return original(compiler, *args, **kwargs)\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 79, in inner\r\n    table_cache_keys = _get_table_cache_keys(compiler)\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/cachalot/utils.py\", line 187, in _get_table_cache_keys\r\n    for t in _get_tables(db_alias, compiler.query)]\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/cachalot/utils.py\", line 164, in _get_tables\r\n    tables.update(_get_tables(db_alias, subquery))\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/cachalot/utils.py\", line 163, in _get_tables\r\n    for subquery in _find_subqueries_in_where(query.where.children):\r\n  File \"/Users/ken/Developer/projects/2018/parenting-service/.direnv/python-3.6.1/lib/python3.6/site-packages/cachalot/utils.py\", line 112, in _find_subqueries_in_where\r\n    rhs = child.rhs\r\nAttributeError: 'ExtraJoinRestriction' object has no attribute 'rhs'\r\n```\r\n\r\nthe queryset sql is \r\n\r\n```\r\nSELECT \"library_story\".\"id\", \"library_story\".\"difficulty\", \"library_story\".\"title\", \"library_story\".\"album_id\", \"library_story\".\"position\", \"library_story\".\"author\", \"library_story\".\"media\", \"library_story\".\"cover\", \"library_story\".\"cover_cropping\", \"library_story\".\"updated_at\", \"library_story\".\"created_at\" FROM \"library_story\" WHERE NOT (\"library_story\".\"id\" IN (SELECT V1.\"object_id\" FROM \"taggit_taggeditem\" V1 WHERE (V1.\"tag_id\" IN (SELECT U0.\"id\" FROM \"taggit_tag\" U0 INNER JOIN \"library_smartalbumtagfilter_tags\" U1 ON (U0.\"id\" = U1.\"tag_id\") WHERE U1.\"smartalbumtagfilter_id\" = 2) AND V1.\"content_type_id\" = 26))) ORDER BY \"library_story\".\"created_at\" DESC\r\n```\r\n\r\nany idea ? \r\n\r\nI found ExtraJoinRestriction in the package [taggit](https://github.com/alex/django-taggit/blob/master/taggit/managers.py)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/118", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/118/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/118/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/118", "id": 360995297, "node_id": "MDU6SXNzdWUzNjA5OTUyOTc=", "number": 118, "title": "Bug introduced when added support for django 2.0", "user": {"login": "Ashish-Bansal", "id": 6122999, "node_id": "MDQ6VXNlcjYxMjI5OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6122999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ashish-Bansal", "html_url": "https://github.com/Ashish-Bansal", "followers_url": "https://api.github.com/users/Ashish-Bansal/followers", "following_url": "https://api.github.com/users/Ashish-Bansal/following{/other_user}", "gists_url": "https://api.github.com/users/Ashish-Bansal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ashish-Bansal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ashish-Bansal/subscriptions", "organizations_url": "https://api.github.com/users/Ashish-Bansal/orgs", "repos_url": "https://api.github.com/users/Ashish-Bansal/repos", "events_url": "https://api.github.com/users/Ashish-Bansal/events{/privacy}", "received_events_url": "https://api.github.com/users/Ashish-Bansal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-17T18:46:49Z", "updated_at": "2020-02-12T06:53:34Z", "closed_at": "2020-02-12T06:53:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhile trying to port our codebase to django 2.0, we found that django-cachalot has a bug causing our tests to fail. Here's the stacktrace: \r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/vagrant/foobar/foobar/foobar/tests/test_user_filter.py\", line 58, in test_get_users_returns_no_duplicates\r\n    self.assertEqual(len(list(users)), len(set(users)))\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/django/db/models/query.py\", line 250, in __iter__\r\n    self._fetch_all()\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/django/db/models/query.py\", line 1118, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/django/db/models/query.py\", line 53, in __iter__\r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch)\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 32, in inner\r\n    return original(compiler, *args, **kwargs)\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 79, in inner\r\n    table_cache_keys = _get_table_cache_keys(compiler)\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/cachalot/utils.py\", line 188, in _get_table_cache_keys\r\n    for t in _get_tables(db_alias, compiler.query)]\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/cachalot/utils.py\", line 165, in _get_tables\r\n    tables.update(_get_tables(db_alias, subquery))\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/cachalot/utils.py\", line 164, in _get_tables\r\n    for subquery in _find_subqueries_in_where(query.where.children):\r\n  File \"/home/vagrant/foobar/venv/lib/python3.6/site-packages/cachalot/utils.py\", line 113, in _find_subqueries_in_where\r\n    rhs = child.rhs\r\nAttributeError: 'NothingNode' object has no attribute 'rhs'\r\n```\r\n\r\nI checked the code and found that this change was made into it: \r\n\r\nhttps://github.com/noripyt/django-cachalot/commit/74e000b8e2b7f4cf9f31319a83d21620ea7b747d#diff-03ee708d723407a4885ffe5b0b8083b6L118\r\n\r\nI don't have much idea but it seems like `NothingNode` could be inserted by django in the where's children[0]. So, above line change should be reverted to handle this case.\r\n\r\nLooking forward to its fix.\r\n\r\nThanks!  \r\n\r\n\r\n[0] https://github.com/django/django/blob/6010da2fbda5eee76b6ec586112561dd26b650e8/django/db/models/sql/query.py#L1555", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/115", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/115/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/115/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/115", "id": 359178528, "node_id": "MDU6SXNzdWUzNTkxNzg1Mjg=", "number": 115, "title": "Can't pickle memoryview objects", "user": {"login": "mheppner", "id": 2390428, "node_id": "MDQ6VXNlcjIzOTA0Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2390428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mheppner", "html_url": "https://github.com/mheppner", "followers_url": "https://api.github.com/users/mheppner/followers", "following_url": "https://api.github.com/users/mheppner/following{/other_user}", "gists_url": "https://api.github.com/users/mheppner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mheppner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mheppner/subscriptions", "organizations_url": "https://api.github.com/users/mheppner/orgs", "repos_url": "https://api.github.com/users/mheppner/repos", "events_url": "https://api.github.com/users/mheppner/events{/privacy}", "received_events_url": "https://api.github.com/users/mheppner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-11T19:00:02Z", "updated_at": "2019-01-31T09:45:18Z", "closed_at": "2018-09-12T17:34:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting this error after updating from 1.50 to 2.1.0:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 35, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 128, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 126, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/viewsets.py\", line 95, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 494, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 454, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 491, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/mixins.py\", line 48, in list\r\n    return Response(serializer.data)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 742, in data\r\n    ret = super(ListSerializer, self).data\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 262, in data\r\n    self._data = self.to_representation(self.instance)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 660, in to_representation\r\n    self.child.to_representation(item) for item in iterable\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/query.py\", line 272, in __iter__\r\n    self._fetch_all()\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/query.py\", line 1179, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/query.py\", line 53, in __iter__\r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\r\n  File \"/usr/local/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 32, in inner\r\n    return original(compiler, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 86, in inner\r\n    cache_key, table_cache_keys)\r\n  File \"/usr/local/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 62, in _get_result_or_execute_query\r\n    cache.set_many(to_be_set, cachalot_settings.CACHALOT_TIMEOUT)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/cache/backends/base.py\", line 216, in set_many\r\n    self.set(key, value, timeout=timeout, version=version)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/cache/backends/filebased.py\", line 50, in set\r\n    f.write(zlib.compress(pickle.dumps(value, pickle.HIGHEST_PROTOCOL)))\r\nTypeError: can't pickle memoryview objects\r\n```\r\n\r\n- Python 3.6.5\r\n- Django 2.0.3\r\n- django-cachalot 2.1.0, file-based\r\n- djangorestframework 3.7.7\r\n- Postgres 9.6, PostGIS 2.4.4\r\n\r\nThe model it's getting this error on has a `django.contrib.postgres.fields.JSONField`. I know the docs mention the bug about using the file-based backend with Postgres range fields (which is now closed), but is this related? Are all Postgres fields unsupported?\r\n\r\nMy model also has a `django.contrib.gis.db.models.PolygonField`. I'm pretty sure we were using this field type, and the JSON field, without issues with django-cachalot 1.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/114", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/114/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/114/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/114", "id": 357815481, "node_id": "MDU6SXNzdWUzNTc4MTU0ODE=", "number": 114, "title": "MongoDB and Embedded Support?", "user": {"login": "lanespade", "id": 5313372, "node_id": "MDQ6VXNlcjUzMTMzNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5313372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lanespade", "html_url": "https://github.com/lanespade", "followers_url": "https://api.github.com/users/lanespade/followers", "following_url": "https://api.github.com/users/lanespade/following{/other_user}", "gists_url": "https://api.github.com/users/lanespade/gists{/gist_id}", "starred_url": "https://api.github.com/users/lanespade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lanespade/subscriptions", "organizations_url": "https://api.github.com/users/lanespade/orgs", "repos_url": "https://api.github.com/users/lanespade/repos", "events_url": "https://api.github.com/users/lanespade/events{/privacy}", "received_events_url": "https://api.github.com/users/lanespade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752623, "node_id": "MDU6TGFiZWwxMzI3NTI2MjM=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-06T20:31:13Z", "updated_at": "2018-09-06T21:29:27Z", "closed_at": "2018-09-06T21:29:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking at different django caching frameworks and this is really appealing except that it doesn't support Mongo... are there any plans to support mongoengine and its Embedded types (EmbeddedDocument, EmbeddedDocumentListField, etc.)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/112", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/112/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/112/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/112", "id": 345028721, "node_id": "MDU6SXNzdWUzNDUwMjg3MjE=", "number": 112, "title": "PicklingError: Can't pickle <class 'uuid.UUID'>: it's not the same object as uuid.UUID", "user": {"login": "ashrubyfish", "id": 19828679, "node_id": "MDQ6VXNlcjE5ODI4Njc5", "avatar_url": "https://avatars2.githubusercontent.com/u/19828679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashrubyfish", "html_url": "https://github.com/ashrubyfish", "followers_url": "https://api.github.com/users/ashrubyfish/followers", "following_url": "https://api.github.com/users/ashrubyfish/following{/other_user}", "gists_url": "https://api.github.com/users/ashrubyfish/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashrubyfish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashrubyfish/subscriptions", "organizations_url": "https://api.github.com/users/ashrubyfish/orgs", "repos_url": "https://api.github.com/users/ashrubyfish/repos", "events_url": "https://api.github.com/users/ashrubyfish/events{/privacy}", "received_events_url": "https://api.github.com/users/ashrubyfish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T22:34:25Z", "updated_at": "2018-07-27T10:06:51Z", "closed_at": "2018-07-27T10:06:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I've had an intermittent issue come up using Cachalot in our production environment (Apache, mod_wsgi, Python 2.7, Django 1.12)\r\n\r\nEvery few weeks we get this error \"Can't pickle <class 'uuid.UUID'>: it's not the same object as uuid.UUID\", from deep inside the monkey patch layer of Cachalot.  (Example sentry stack trace below).\r\n\r\nThe only thing that fixes it is restarting Apache. It'll then go away for a day or two, sometimes a week or two, then reoccur.\r\n\r\n`\r\nPicklingError\r\nCan't pickle <class 'uuid.UUID'>: it's not the same object as uuid.UUID\r\ncachalot/monkey_patch.py in _get_result_or_execute_query at line 59\r\n`\r\n\r\nResearching this, I've only found 1 other person with the same issue (unresolved) at https://github.com/niwinz/django-redis/issues/319.\r\n\r\nReading up on the pickling error, it seems that if you import a symbol in different ways (i.e. import x x.y versus from x import y) it results in this pickling error.\r\n\r\nI looked through all my code to ensure that UUID was being used and imported in a consistent way, checking also how the Django Postgresql code uses it (as I use models.UUIDField for primary keys). Everywhere uses it as such:\r\n\r\nimport uuid\r\n...\r\nuuid.UUID\r\n\r\nExcept for this place in Cachalot, utils.py\r\n\r\n\r\nfrom time import time\r\n**from uuid import UUID**\r\n\r\nfrom django import VERSION as django_version\r\nfrom django.db import connections\r\nfrom django.db.models import QuerySet\r\nfrom django.db.models.sql import Query\r\nfrom django.db.models.sql.where import (\r\n    ExtraWhere, SubqueryConstraint, WhereNode)\r\nfrom django.utils.six import text_type, binary_type, PY2\r\n\r\nfrom .settings import ITERABLES, cachalot_settings\r\nfrom .transaction import AtomicCache\r\n\r\n\r\nclass UncachableQuery(Exception):\r\n    pass\r\n\r\n\r\nclass IsRawQuery(Exception):\r\n    pass\r\n\r\n\r\nCACHABLE_PARAM_TYPES = {\r\n    bool, int, float, Decimal, bytearray, binary_type, text_type, type(None),\r\n    datetime.date, datetime.time, datetime.datetime, datetime.timedelta, **UUID**,\r\n}\r\n\r\n\r\nI suspect this is the source of the issue here. I'm going to try patching this on our project with the following changes to see if it solves the issue (may have to wait 3-4 weeks before declaring it solved given the mean-time between failures).\r\n\r\nsuggested change below:\r\n\r\n**import uuid**\r\n...\r\n\r\nCACHABLE_PARAM_TYPES = {\r\n    bool, int, float, Decimal, bytearray, binary_type, text_type, type(None),\r\n    datetime.date, datetime.time, datetime.datetime, datetime.timedelta, **uuid.UUID**,\r\n}\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/111", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/111/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/111/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/111", "id": 342611530, "node_id": "MDU6SXNzdWUzNDI2MTE1MzA=", "number": 111, "title": "max() arg is an empty sequence", "user": {"login": "quertenmont", "id": 4639944, "node_id": "MDQ6VXNlcjQ2Mzk5NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4639944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quertenmont", "html_url": "https://github.com/quertenmont", "followers_url": "https://api.github.com/users/quertenmont/followers", "following_url": "https://api.github.com/users/quertenmont/following{/other_user}", "gists_url": "https://api.github.com/users/quertenmont/gists{/gist_id}", "starred_url": "https://api.github.com/users/quertenmont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quertenmont/subscriptions", "organizations_url": "https://api.github.com/users/quertenmont/orgs", "repos_url": "https://api.github.com/users/quertenmont/repos", "events_url": "https://api.github.com/users/quertenmont/events{/privacy}", "received_events_url": "https://api.github.com/users/quertenmont/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-07-19T07:33:30Z", "updated_at": "2018-07-27T18:32:00Z", "closed_at": "2018-07-27T18:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am regularly getting the following error with django-cachalot version 2.0.1\r\n\r\n`\r\n\r\nRequest Method: | POST\r\n-- | --\r\n2.0.7\r\nValueError\r\nmax() arg is an empty sequence\r\n/usr/local/lib/python3.5/dist-packages/cachalot/monkey_patch.py in _get_result_or_execute_query, line 47\r\n/usr/bin/python3\r\n3.5.2\r\n['/home/root/project',  '/usr/local/bin',  '/usr/lib/python35.zip',  '/usr/lib/python3.5',  '/usr/lib/python3.5/plat-x86_64-linux-gnu',  '/usr/lib/python3.5/lib-dynload',  '/usr/local/lib/python3.5/dist-packages',  '/usr/lib/python3/dist-packages',  '/home/root/project']\r\nThu, 19 Jul 2018 07:19:59 +0000\r\n`\r\n\r\nThis comes from\r\n\r\n`\r\n/usr/local/lib/python3.5/dist-packages/cachalot/monkey_patch.py in _get_result_or_execute_query\r\n\r\n    data = cache.get_many(table_cache_keys + [cache_key])\r\n    new_table_cache_keys = set(table_cache_keys)\r\n    new_table_cache_keys.difference_update(data)\r\n    if not new_table_cache_keys and cache_key in data:\r\n        timestamp, result = data.pop(cache_key)\r\n        if timestamp >= max(data.values()): ...\r\n            return result\r\n    result = execute_query_func()\r\n    if result.__class__ not in ITERABLES and isinstance(result, Iterable):\r\n        result = list(result)\r\n`\r\n\r\nThe local variables are:\r\n`\r\nVariable | Value\r\n-- | --\r\ncache | {}\r\ncache_key | '75b3b54db423f451954a42ef4e9bc85b5271935e'\r\ndata | {}\r\nexecute_query_func | <function _patch_compiler.<locals>.inner.<locals>.<lambda> at 0x7fbcf30fd158>\r\nnew_table_cache_keys | set()\r\nresult | (1,)\r\ntable_cache_keys | []\r\ntimestamp | 1531727788.1209958\r\n\r\n`\r\n\r\nIs there any quick workaround ?\r\n\r\nThanks,\r\nLoic\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/110", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/110/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/110/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/110", "id": 336186749, "node_id": "MDU6SXNzdWUzMzYxODY3NDk=", "number": 110, "title": "Conflict with Django report builder", "user": {"login": "kunalgrover05", "id": 3676256, "node_id": "MDQ6VXNlcjM2NzYyNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3676256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunalgrover05", "html_url": "https://github.com/kunalgrover05", "followers_url": "https://api.github.com/users/kunalgrover05/followers", "following_url": "https://api.github.com/users/kunalgrover05/following{/other_user}", "gists_url": "https://api.github.com/users/kunalgrover05/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunalgrover05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunalgrover05/subscriptions", "organizations_url": "https://api.github.com/users/kunalgrover05/orgs", "repos_url": "https://api.github.com/users/kunalgrover05/repos", "events_url": "https://api.github.com/users/kunalgrover05/events{/privacy}", "received_events_url": "https://api.github.com/users/kunalgrover05/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-06-27T11:20:35Z", "updated_at": "2018-07-27T18:31:42Z", "closed_at": "2018-07-27T18:31:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cachalot seems to break [Django-report-builder's](https://github.com/burke-software/django-report-builder) functionality.\r\nAdding stack trace here:\r\n\r\n```\r\nInternal Server Error: /report_builder/api/report/2/generate/\r\nTraceback (most recent call last):\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/contrib/auth/decorators.py\", line 23, in _wrapped_view\r\n    return view_func(request, *args, **kwargs)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/rest_framework/views.py\", line 494, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/rest_framework/views.py\", line 454, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/rest_framework/views.py\", line 491, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/report_builder/api/views.py\", line 283, in get\r\n    return self.post(request, report_id=report_id)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/report_builder/api/views.py\", line 290, in post\r\n    preview=True,)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/report_builder/models.py\", line 244, in report_to_list\r\n    for obj in queryset:\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/db/models/query.py\", line 250, in __iter__\r\n    self._fetch_all()\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/db/models/query.py\", line 1118, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/django/db/models/query.py\", line 53, in __iter__\r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 32, in inner\r\n    return original(compiler, *args, **kwargs)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 81, in inner\r\n    cache_key, table_cache_keys)\r\n  File \"/home/kunal/leanagri/env3/lib/python3.6/site-packages/cachalot/monkey_patch.py\", line 46, in _get_result_or_execute_query\r\n    timestamp, result = data.pop(cache_key)\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\nAny suggestions on what might be the possible conflict to look into?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/109", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/109/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/109/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/109", "id": 335100449, "node_id": "MDU6SXNzdWUzMzUxMDA0NDk=", "number": 109, "title": "Enabling cachalot causes NoReverseMatch", "user": {"login": "andyhasit", "id": 2077696, "node_id": "MDQ6VXNlcjIwNzc2OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2077696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyhasit", "html_url": "https://github.com/andyhasit", "followers_url": "https://api.github.com/users/andyhasit/followers", "following_url": "https://api.github.com/users/andyhasit/following{/other_user}", "gists_url": "https://api.github.com/users/andyhasit/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyhasit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyhasit/subscriptions", "organizations_url": "https://api.github.com/users/andyhasit/orgs", "repos_url": "https://api.github.com/users/andyhasit/repos", "events_url": "https://api.github.com/users/andyhasit/events{/privacy}", "received_events_url": "https://api.github.com/users/andyhasit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-23T13:24:23Z", "updated_at": "2018-07-27T18:32:27Z", "closed_at": "2018-07-27T18:32:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had cachalot installed and added, with no errors, but it turns out it wasn't being applied, so I set this in the settings:\r\n\r\n```\r\nCACHALOT_DATABASES = ['default']\r\n```\r\nAnd now I'm getting NoReverseMatch in certain templates... Commenting that line out brings everything back to normal. How could this be?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/108", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/108/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/108/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/108", "id": 332819775, "node_id": "MDU6SXNzdWUzMzI4MTk3NzU=", "number": 108, "title": "Best way to handle sub-queries", "user": {"login": "kunalgrover05", "id": 3676256, "node_id": "MDQ6VXNlcjM2NzYyNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3676256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunalgrover05", "html_url": "https://github.com/kunalgrover05", "followers_url": "https://api.github.com/users/kunalgrover05/followers", "following_url": "https://api.github.com/users/kunalgrover05/following{/other_user}", "gists_url": "https://api.github.com/users/kunalgrover05/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunalgrover05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunalgrover05/subscriptions", "organizations_url": "https://api.github.com/users/kunalgrover05/orgs", "repos_url": "https://api.github.com/users/kunalgrover05/repos", "events_url": "https://api.github.com/users/kunalgrover05/events{/privacy}", "received_events_url": "https://api.github.com/users/kunalgrover05/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-15T15:30:04Z", "updated_at": "2018-06-16T19:10:01Z", "closed_at": "2018-06-16T19:10:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for the excellent documentation written in your project, it gave me an idea of different caching libraries, and how they differ.\r\n\r\nI have a use-case which might not really be common and I couldn't find anything relevant in docs, so I wanted to discuss it here. I am trying to understand what is the best way to handle sub-queries. (The documentation mentioned that cachalot handles sub-queries, but I couldn't find any in-depth information of whether the below case is handled)\r\n\r\nMy site has very few visitors, and both consistent Reads/Writes are important so I have never thought about adding Caching.\r\n- Now we are working to develop some tools which allow us to view some aggregate data from the site. These are not just aggregate SQL queries, but also joined data from different models, eg: Users with their profiles and all related information in one screen.  (These queries may be read inconsistent and there are no writes)\r\n- When the number of users grow a lot, these JOINs become very expensive(we need to access all data without pagination)\r\n- On top of these, from the frontend, there are filters which allow users to view only some part of the data which means that using View or Query based Caches are not going to work very well.\r\n\r\nI have the following thoughts ahead:\r\n- Cache the whole queryset manually(including prefetches). All filters are run using custom code in the whole queryset.\r\n- Create new tables containing JOINed data. The data will still be served from DB but much faster without JOINs. On top of this, \r\n\r\nWhat is your opinion here? I am completely off here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/106", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/106/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/106/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/106", "id": 332147288, "node_id": "MDU6SXNzdWUzMzIxNDcyODg=", "number": 106, "title": "Cachalot attempting to cache databases which are not supported and not present in CACHALOT_DATABASES", "user": {"login": "jjorissen52", "id": 12461302, "node_id": "MDQ6VXNlcjEyNDYxMzAy", "avatar_url": "https://avatars1.githubusercontent.com/u/12461302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjorissen52", "html_url": "https://github.com/jjorissen52", "followers_url": "https://api.github.com/users/jjorissen52/followers", "following_url": "https://api.github.com/users/jjorissen52/following{/other_user}", "gists_url": "https://api.github.com/users/jjorissen52/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjorissen52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjorissen52/subscriptions", "organizations_url": "https://api.github.com/users/jjorissen52/orgs", "repos_url": "https://api.github.com/users/jjorissen52/repos", "events_url": "https://api.github.com/users/jjorissen52/events{/privacy}", "received_events_url": "https://api.github.com/users/jjorissen52/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-13T20:16:06Z", "updated_at": "2018-06-15T01:48:05Z", "closed_at": "2018-06-14T13:58:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cachalot is attempting to cache databases which are not supported and not present in CACHALOT_DATABASES. I have to use `django-sqlserver` to connect to my company's database. I am sure that it is unsupported, and that is completely understandable. However, I am running into an issue where `cachalot` attempts to cache queries for the unsupported database, regardless of the content of my `CACHALOT_DATABASES` setting.\r\n\r\nAny help would be greatly appreciated!\r\n\r\n## settings.py\r\n```\r\nDATABASES =[\r\n    . . .\r\n    'mssql_db': {\r\n            'ENGINE': 'sqlserver',\r\n            'HOST': config.get(DB_REGION, 'ms_host'),\r\n            'NAME': MS_DB,\r\n            'USER': config.get(DB_REGION, 'ms_user'),\r\n            'PASSWORD': config.get(DB_REGION, 'ms_password'),\r\n    },\r\n]\r\nCACHALOT_DATABASES = ['default', ]\r\n```\r\n\r\n## models.py\r\n```\r\nclass DeficientChart(models.Model):\r\n\r\n    . . . \r\n\r\n    class Meta:\r\n        managed = True if settings.RUNNING_UNIT_TESTS else False\r\n        db_table = '[tmp].[DeficientChart]'\r\n\r\n```\r\n\r\n## Test Code\r\n```\r\ncurrent_chart_dict = current_chart.values()[0]\r\ncurrent_chart_dict['tmpStatus'] = update_list_data[0]['tmpStatus']\r\nprocessed_chart_dict = current_chart.values()[0]\r\nprocessed_chart_dict['Status'] = update_list_data[0]['tmpStatus']\r\n# DeficientChart constructor used so the model __init__ method will do validation for us\r\n# since django-sqlserver does not seem to support transactions...........\r\nvalidated_current_chart = DeficientChart(**current_chart_dict)\r\nnew_processed_chart = ProcessedChart(**processed_chart_dict)\r\n\r\nprint(settings.CACHALOT_DATABASES)\r\ncurrent_chart.update(tmpStatus=update_list_data[0]['tmpStatus'])\r\nnew_processed_chart.save(force_insert=True)\r\n```\r\n\r\n## Output/traceback\r\n```\r\n['default']\r\n\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/django/apps/registry.py in get_app_config(self, app_label)\r\n    148         try:\r\n--> 149             return self.app_configs[app_label]\r\n    150         except KeyError:\r\n\r\nKeyError: '[tmp]'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nLookupError                               Traceback (most recent call last)\r\n<ipython-input-5-cf8141da2b0b> in <module>()\r\n     17 \r\n     18 print(settings.CACHALOT_DATABASES)\r\n---> 19 current_chart.update(tmpStatus=update_list_data[0]['tmpStatus'])\r\n     20 new_processed_chart.save(force_insert=True)\r\n\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/django/db/models/query.py in update(self, **kwargs)\r\n    645         query._annotations = None\r\n    646         with transaction.atomic(using=self.db, savepoint=False):\r\n--> 647             rows = query.get_compiler(self.db).execute_sql(CURSOR)\r\n    648         self._result_cache = None\r\n    649         return rows\r\n\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/cachalot/monkey_patch.py in inner(compiler, *args, **kwargs)\r\n     30         compiler.connection.raw = False\r\n     31         try:\r\n---> 32             return original(compiler, *args, **kwargs)\r\n     33         finally:\r\n     34             compiler.connection.raw = True\r\n\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/cachalot/monkey_patch.py in inner(write_compiler, *args, **kwargs)\r\n     92         if is_cachable(table):\r\n     93             invalidate(table, db_alias=db_alias,\r\n---> 94                        cache_alias=cachalot_settings.CACHALOT_CACHE)\r\n     95         return original(write_compiler, *args, **kwargs)\r\n     96 \r\n\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/cachalot/api.py in invalidate(*tables_or_models, **kwargs)\r\n     69     invalidated = set()\r\n     70     for cache_alias, db_alias, tables in _cache_db_tables_iterator(\r\n---> 71             _get_tables(tables_or_models), cache_alias, db_alias):\r\n     72         cache = cachalot_caches.get_cache(cache_alias, db_alias)\r\n     73         if not isinstance(cache, AtomicCache):\r\n\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/cachalot/api.py in _get_tables(tables_or_models)\r\n     33     return [(apps.get_model(o)._meta.db_table if '.' in o else o)\r\n     34             if isinstance(o, string_types) else o._meta.db_table\r\n---> 35             for o in tables_or_models]\r\n     36 \r\n     37 \r\n\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/cachalot/api.py in <listcomp>(.0)\r\n     33     return [(apps.get_model(o)._meta.db_table if '.' in o else o)\r\n     34             if isinstance(o, string_types) else o._meta.db_table\r\n---> 35             for o in tables_or_models]\r\n     36 \r\n     37 \r\n\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/django/apps/registry.py in get_model(self, app_label, model_name, require_ready)\r\n    198             app_label, model_name = app_label.split('.')\r\n    199 \r\n--> 200         app_config = self.get_app_config(app_label)\r\n    201 \r\n    202         if not require_ready and app_config.models is None:\r\n\r\n~/Projects/my_app/venv/lib/python3.6/site-packages/django/apps/registry.py in get_app_config(self, app_label)\r\n    154                     message += \" Did you mean '%s'?\" % app_config.label\r\n    155                     break\r\n--> 156             raise LookupError(message)\r\n    157 \r\n    158     # This method is performance-critical at least for Django's test suite.\r\n\r\nLookupError: No installed app with label '[tmp]'.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/104", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/104/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/104/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/104", "id": 319100153, "node_id": "MDU6SXNzdWUzMTkxMDAxNTM=", "number": 104, "title": "Invalidation for Subquery doesn't work as expected", "user": {"login": "slurms", "id": 1132361, "node_id": "MDQ6VXNlcjExMzIzNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1132361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slurms", "html_url": "https://github.com/slurms", "followers_url": "https://api.github.com/users/slurms/followers", "following_url": "https://api.github.com/users/slurms/following{/other_user}", "gists_url": "https://api.github.com/users/slurms/gists{/gist_id}", "starred_url": "https://api.github.com/users/slurms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slurms/subscriptions", "organizations_url": "https://api.github.com/users/slurms/orgs", "repos_url": "https://api.github.com/users/slurms/repos", "events_url": "https://api.github.com/users/slurms/events{/privacy}", "received_events_url": "https://api.github.com/users/slurms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-01T02:44:31Z", "updated_at": "2018-05-08T23:37:33Z", "closed_at": "2018-05-01T04:08:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `django-activity-feed`'s `Follow` model, and a `Subquery`, when a user's followed objects changes, the content type query isn't invalidated correctly.\r\n\r\n```python\r\nfrom django.contrib.auth.models import User\r\nfrom django.contrib.contenttypes.models import ContentType\r\nfrom django.db.models import Subquery\r\nfrom actstream.actions import follow\r\nfrom actstream.models import Follow\r\n\r\nuser = User.objects.create(username='test', email='test@example.com')\r\nuser2 = User.objects.create(username='test2', email='test2@example.com')\r\n\r\nfollows = Follow.objects.filter(user=user)\r\ncontent_types = ContentType.objects.filter(pk__in=Subquery(follows.distinct().values('content_type_id')))\r\nprint(content_types.query)\r\n# SELECT \"django_content_type\".\"id\", \"django_content_type\".\"app_label\", \"django_content_type\".\"model\" FROM \"django_content_type\"\r\n# WHERE \"django_content_type\".\"id\" IN (\r\n#     SELECT DISTINCT U0.\"content_type_id\" FROM \"actstream_follow\" U0 WHERE U0.\"user_id\" = 1\r\n# )\r\nprint(len(content_types))\r\n# 0\r\n\r\nfollow(user, user2)  # creates a new follow object\r\n\r\ncontent_types = ContentType.objects.filter(pk__in=Subquery(follows.distinct().values('content_type_id')))\r\nprint(len(content_types))\r\n# 0 <- should be 1\r\n```\r\n\r\nI'll create a PR with a failing test as a start.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/101", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/101/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/101/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/101", "id": 295962677, "node_id": "MDU6SXNzdWUyOTU5NjI2Nzc=", "number": 101, "title": "Add linked tables", "user": {"login": "paddymul", "id": 40453, "node_id": "MDQ6VXNlcjQwNDUz", "avatar_url": "https://avatars2.githubusercontent.com/u/40453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paddymul", "html_url": "https://github.com/paddymul", "followers_url": "https://api.github.com/users/paddymul/followers", "following_url": "https://api.github.com/users/paddymul/following{/other_user}", "gists_url": "https://api.github.com/users/paddymul/gists{/gist_id}", "starred_url": "https://api.github.com/users/paddymul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paddymul/subscriptions", "organizations_url": "https://api.github.com/users/paddymul/orgs", "repos_url": "https://api.github.com/users/paddymul/repos", "events_url": "https://api.github.com/users/paddymul/events{/privacy}", "received_events_url": "https://api.github.com/users/paddymul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-09T18:16:38Z", "updated_at": "2018-05-05T00:28:45Z", "closed_at": "2018-02-14T11:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some django models that are backed by views.  Can you add something so that when the cache for table A is invalidated, table B's cache is also invalidated.  This could be specified in the Meta: section of the model.  Nice work on the module, it has been a really easy drop in speed up.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/100", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/100/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/100/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/100", "id": 291521762, "node_id": "MDU6SXNzdWUyOTE1MjE3NjI=", "number": 100, "title": "Support for python-diskcache", "user": {"login": "silentjay", "id": 3902481, "node_id": "MDQ6VXNlcjM5MDI0ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3902481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silentjay", "html_url": "https://github.com/silentjay", "followers_url": "https://api.github.com/users/silentjay/followers", "following_url": "https://api.github.com/users/silentjay/following{/other_user}", "gists_url": "https://api.github.com/users/silentjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/silentjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silentjay/subscriptions", "organizations_url": "https://api.github.com/users/silentjay/orgs", "repos_url": "https://api.github.com/users/silentjay/repos", "events_url": "https://api.github.com/users/silentjay/events{/privacy}", "received_events_url": "https://api.github.com/users/silentjay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752618, "node_id": "MDU6TGFiZWwxMzI3NTI2MTg=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T10:32:55Z", "updated_at": "2018-05-05T00:28:45Z", "closed_at": "2018-01-26T10:34:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Receive the warning:\r\n```\r\n?: (cachalot.W001) Cache backend 'diskcache.DjangoCache' is not supported by django-cachalot.\r\n\tHINT: Switch to a supported cache backend like Redis or Memcached.\r\n```\r\nAre there any plans or workarounds to implement support?\r\n\r\nhttps://github.com/grantjenks/python-diskcache", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/99", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/99/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/99/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/99", "id": 289985497, "node_id": "MDU6SXNzdWUyODk5ODU0OTc=", "number": 99, "title": "Invalidation doesn't succeed on save.", "user": {"login": "svemaraju", "id": 19570554, "node_id": "MDQ6VXNlcjE5NTcwNTU0", "avatar_url": "https://avatars3.githubusercontent.com/u/19570554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svemaraju", "html_url": "https://github.com/svemaraju", "followers_url": "https://api.github.com/users/svemaraju/followers", "following_url": "https://api.github.com/users/svemaraju/following{/other_user}", "gists_url": "https://api.github.com/users/svemaraju/gists{/gist_id}", "starred_url": "https://api.github.com/users/svemaraju/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svemaraju/subscriptions", "organizations_url": "https://api.github.com/users/svemaraju/orgs", "repos_url": "https://api.github.com/users/svemaraju/repos", "events_url": "https://api.github.com/users/svemaraju/events{/privacy}", "received_events_url": "https://api.github.com/users/svemaraju/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-19T14:03:47Z", "updated_at": "2018-05-05T00:28:45Z", "closed_at": "2018-05-04T18:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The settings.py has the basic configuration set, i.e. just 'cachalot' included in installed_apps.\r\n\r\n```\r\n>>> from cachalot.api import get_last_invalidation\r\n>>> import datetime\r\n>>> last_user = User.objects.last()\r\n\r\n>>> last_user.created_at\r\ndatetime.datetime(2018, 1, 19, 12, 54, 43, 685800, tzinfo=<UTC>)\r\n# 12:54:43\r\n>>> datetime.datetime.fromtimestamp(get_last_invalidation(User))\r\ndatetime.datetime(2018, 1, 19, 12, 35, 31, 785219)\r\n# 12:35:31\r\n```\r\n\r\nThe query `User.objects.last()` contains the latest record, but the result `get_last_invalidation` seems to show as if the cache is outdated. I am little confused by this.\r\nI suspect there is something wrong going on here. I welcome any suggestions. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/97", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/97/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/97/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/97", "id": 279341402, "node_id": "MDU6SXNzdWUyNzkzNDE0MDI=", "number": 97, "title": "Assignment_tag is not compatible with Django 2.0", "user": {"login": "pm13", "id": 6249977, "node_id": "MDQ6VXNlcjYyNDk5Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6249977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pm13", "html_url": "https://github.com/pm13", "followers_url": "https://api.github.com/users/pm13/followers", "following_url": "https://api.github.com/users/pm13/following{/other_user}", "gists_url": "https://api.github.com/users/pm13/gists{/gist_id}", "starred_url": "https://api.github.com/users/pm13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pm13/subscriptions", "organizations_url": "https://api.github.com/users/pm13/orgs", "repos_url": "https://api.github.com/users/pm13/repos", "events_url": "https://api.github.com/users/pm13/events{/privacy}", "received_events_url": "https://api.github.com/users/pm13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/noripyt/django-cachalot/milestones/3", "html_url": "https://github.com/noripyt/django-cachalot/milestone/3", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/milestones/3/labels", "id": 3065967, "node_id": "MDk6TWlsZXN0b25lMzA2NTk2Nw==", "number": 3, "title": "Django 2.0", "description": "", "creator": {"login": "BertrandBordage", "id": 1119169, "node_id": "MDQ6VXNlcjExMTkxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1119169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BertrandBordage", "html_url": "https://github.com/BertrandBordage", "followers_url": "https://api.github.com/users/BertrandBordage/followers", "following_url": "https://api.github.com/users/BertrandBordage/following{/other_user}", "gists_url": "https://api.github.com/users/BertrandBordage/gists{/gist_id}", "starred_url": "https://api.github.com/users/BertrandBordage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BertrandBordage/subscriptions", "organizations_url": "https://api.github.com/users/BertrandBordage/orgs", "repos_url": "https://api.github.com/users/BertrandBordage/repos", "events_url": "https://api.github.com/users/BertrandBordage/events{/privacy}", "received_events_url": "https://api.github.com/users/BertrandBordage/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2018-01-26T10:38:28Z", "updated_at": "2018-05-04T18:32:26Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2017-12-05T11:30:33Z", "updated_at": "2018-05-05T00:28:45Z", "closed_at": "2018-05-04T18:32:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 2.0 removed support for assignment_tag, simple_tag could be used as replacement from Django 1.9:\r\nhttps://docs.djangoproject.com/en/2.0/releases/1.9/#assignment-tag\r\n\r\nDjango-cachalot use assignment_tag:\r\nhttps://github.com/BertrandBordage/django-cachalot/blob/a279e38dfd6e6da317427901279ff2597c7e86fc/cachalot/templatetags/cachalot.py#L9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/92", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/92/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/92/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/92", "id": 266560224, "node_id": "MDU6SXNzdWUyNjY1NjAyMjQ=", "number": 92, "title": "Unicode characters breaks the `force_text` method", "user": {"login": "koleror", "id": 1033583, "node_id": "MDQ6VXNlcjEwMzM1ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1033583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koleror", "html_url": "https://github.com/koleror", "followers_url": "https://api.github.com/users/koleror/followers", "following_url": "https://api.github.com/users/koleror/following{/other_user}", "gists_url": "https://api.github.com/users/koleror/gists{/gist_id}", "starred_url": "https://api.github.com/users/koleror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koleror/subscriptions", "organizations_url": "https://api.github.com/users/koleror/orgs", "repos_url": "https://api.github.com/users/koleror/repos", "events_url": "https://api.github.com/users/koleror/events{/privacy}", "received_events_url": "https://api.github.com/users/koleror/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-18T16:36:01Z", "updated_at": "2018-05-05T00:28:45Z", "closed_at": "2018-05-04T18:31:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "To override it, we overrided the `CACHALOT_QUERY_KEYGEN` method with the following code:\r\n(we also catched all errors in non-debug mode to avoid breaking production queries if something fails)\r\n```\r\nimport logging\r\nfrom hashlib import sha1\r\n\r\nfrom cachalot.utils import UncachableQuery, check_parameter_types\r\nfrom django.conf import settings\r\nfrom django.utils.encoding import force_text\r\nfrom django.utils.six import text_type\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\nFAIL_SILENTLY = not settings.DEBUG\r\n\r\n\r\ndef get_query_cache_key(compiler):\r\n    \"\"\"\r\n    Generates a cache key from a SQLCompiler.\r\n    This cache key is specific to the SQL query and its context\r\n    (which database is used).  The same query in the same context\r\n    (= the same database) must generate the same cache key.\r\n    :arg compiler: A SQLCompiler that will generate the SQL query\r\n    :type compiler: django.db.models.sql.compiler.SQLCompiler\r\n    :return: A cache key\r\n    :rtype: int\r\n\r\n    NB: modified version of 'cachalot.utils.get_query_cache_key' to use\r\n    force_text instead of text_type + silent fail if FAIL_SILENTLY is True\r\n    as we never want the caching to break any SQL request in production\r\n    \"\"\"\r\n    try:\r\n        sql, params = compiler.as_sql()\r\n        check_parameter_types(params)\r\n        cache_key = text_type('%s:%s:%s') % (\r\n            compiler.using, sql, [force_text(p) for p in params]\r\n        )\r\n        return sha1(cache_key.encode('utf-8')).hexdigest()\r\n    except:\r\n        if FAIL_SILENTLY:\r\n            # declare as UncachableQuery (caught by cachalot)\r\n            logger.exception(\"in get_query_cache_key: \")\r\n            raise UncachableQuery\r\n        else:\r\n            raise\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/91", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/91/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/91/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/91", "id": 266558865, "node_id": "MDU6SXNzdWUyNjY1NTg4NjU=", "number": 91, "title": "Cachalot should raise UncachableQuery for queries with subqueries", "user": {"login": "koleror", "id": 1033583, "node_id": "MDQ6VXNlcjEwMzM1ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1033583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koleror", "html_url": "https://github.com/koleror", "followers_url": "https://api.github.com/users/koleror/followers", "following_url": "https://api.github.com/users/koleror/following{/other_user}", "gists_url": "https://api.github.com/users/koleror/gists{/gist_id}", "starred_url": "https://api.github.com/users/koleror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koleror/subscriptions", "organizations_url": "https://api.github.com/users/koleror/orgs", "repos_url": "https://api.github.com/users/koleror/repos", "events_url": "https://api.github.com/users/koleror/events{/privacy}", "received_events_url": "https://api.github.com/users/koleror/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-18T16:31:49Z", "updated_at": "2018-05-05T00:28:45Z", "closed_at": "2018-02-14T12:31:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When doing a query like this:\r\n`ModelA.objects.filter(id__in=self.modelbs.values_list(\"model_a\", flat=True))`\r\n\r\nThe result may be wrong if the queryset is cached and the subquery's queryset changes.\r\nIn our context, we had a different result between `len(queryset)` gave another result than `queryset.count()` (which we still don't understand)\r\nTo fix it, we added this:\r\n``` \r\nif \"in (select\" in sql.lower():\r\n   raise UncachableQuery\r\n```\r\nin the `CACHALOT_QUERY_KEYGEN` function that we overrided.\r\n\r\nDo you have a better way to handle this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/90", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/90/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/90/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/90", "id": 264374026, "node_id": "MDU6SXNzdWUyNjQzNzQwMjY=", "number": 90, "title": "Cache not used when accessing models", "user": {"login": "selimt", "id": 15021762, "node_id": "MDQ6VXNlcjE1MDIxNzYy", "avatar_url": "https://avatars2.githubusercontent.com/u/15021762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selimt", "html_url": "https://github.com/selimt", "followers_url": "https://api.github.com/users/selimt/followers", "following_url": "https://api.github.com/users/selimt/following{/other_user}", "gists_url": "https://api.github.com/users/selimt/gists{/gist_id}", "starred_url": "https://api.github.com/users/selimt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selimt/subscriptions", "organizations_url": "https://api.github.com/users/selimt/orgs", "repos_url": "https://api.github.com/users/selimt/repos", "events_url": "https://api.github.com/users/selimt/events{/privacy}", "received_events_url": "https://api.github.com/users/selimt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-10-10T20:59:08Z", "updated_at": "2018-05-05T00:28:45Z", "closed_at": "2018-05-04T18:38:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I am new to cachalot so I apologize in advanced if I've missed something. I set up our project with django-cachalot using the memcached backend. Django app runs in one docker container and memcached runs in another. When I patch a model entry and look at the SQL that was generated through the django-debug-toolbar I see this:\r\n\r\n```\r\nSELECT (1) AS \"a\" FROM \"transfer_studio\" WHERE \"transfer_studio\".\"studio_name\" = 'ilm-sing' LIMIT 1\r\n  Duplicated 3 times.\t\r\n24.44850667289745%\r\n4.24\t\r\n\ufffcSel \ufffcExpl\r\nConnection: mercury\r\n/usr/local/lib/python3.6/site-packages/rest_framework/viewsets.py in view(90)\r\n  return self.dispatch(request, *args, **kwargs)\r\n/usr/local/lib/python3.6/site-packages/rest_framework/views.py in dispatch(486)\r\n  response = handler(request, *args, **kwargs)\r\n/usr/local/lib/python3.6/site-packages/rest_framework/mixins.py in partial_update(84)\r\n  return self.update(request, *args, **kwargs)\r\n/usr/local/lib/python3.6/site-packages/rest_framework/mixins.py in update(70)\r\n  self.perform_update(serializer)\r\n/usr/local/lib/python3.6/site-packages/rest_framework/mixins.py in perform_update(80)\r\n  serializer.save()\r\n/usr/local/lib/python3.6/site-packages/rest_framework_extensions/serializers.py in save(27)\r\n  return super(PartialUpdateSerializerMixin, self).save(**kwargs)\r\n/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py in save(209)\r\n  self.instance = self.update(self.instance, validated_data)\r\n/usr/local/lib/python3.6/site-packages/rest_framework_extensions/serializers.py in update(37)\r\n  fields=self.fields.fields\r\n/opt/hgserver/python/hgserver/apiserver/models.py in save(284)\r\n  self.full_clean()\r\n/usr/local/lib/python3.6/site-packages/cachalot/monkey_patch.py in inner(32)\r\n  out = original(compiler, *args, **kwargs)\r\n/usr/local/lib/python3.6/site-packages/cachalot/monkey_patch.py in inner(84)\r\n  cache_key, table_cache_keys)\r\n/usr/local/lib/python3.6/site-packages/cachalot/monkey_patch.py in _get_result_or_execute_query(55)\r\n  result = execute_query_func()\r\n/usr/local/lib/python3.6/site-packages/cachalot/monkey_patch.py in <lambda>(68)\r\n  execute_query_func = lambda: original(compiler, *args, **kwargs)\r\n \t+\t\r\nSELECT \u2022\u2022\u2022 FROM \"transfer_studio\" WHERE \"transfer_studio\".\"studio_name\" = 'ilm-sf' LIMIT 1\r\n  Duplicated 3 times.\t\r\n3.4209766757837734%\r\n0.59\t\r\n\ufffcSel \ufffcExpl\r\n \t+\t\r\nSELECT \u2022\u2022\u2022 FROM \"transfer_studio\" WHERE \"transfer_studio\".\"studio_name\" = 'ilm-sf' LIMIT 1\r\n  Duplicated 3 times.\t\r\n3.398985664609591%\r\n0.59\t\r\n\ufffcSel \ufffcExpl\r\n \t+\t\r\nUPDATE \"transfer_request\" SET \"priority\" = 10 WHERE \"transfer_request\".\"guid\" = 'c17fa9f8-9737-4383-b2e4-a583348f8569'::uuid\r\n```\r\n\r\nSo I wouldn't expect repeated SQL queries to the transfer_studio model if the cache was effective (In fact I don't even know why that model is being accessed since they are foreign keys and they shouldn't be accessed during a partial_update.\r\n\r\nOur INSTALLED_APPS are as follows:\r\n\r\n```\r\n['debug_toolbar',\r\n 'apiserver.apps.ApiserverConfig',\r\n 'url_filter',\r\n 'rest_framework',\r\n 'django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'django_extensions',\r\n 'rest_framework_swagger',\r\n 'cachalot']\r\n```\r\nDATABASES:\r\n```\r\n{'default': {'ATOMIC_REQUESTS': False,\r\n             'AUTOCOMMIT': True,\r\n             'CONN_MAX_AGE': 0,\r\n             'ENGINE': 'django.db.backends.postgresql',\r\n             'HOST': 'mercury_db',\r\n             'NAME': 'postgres',\r\n             'OPTIONS': {},\r\n             'PASSWORD': '********************',\r\n             'PORT': '5432',\r\n             'TEST': {'CHARSET': None,\r\n                      'COLLATION': None,\r\n                      'MIRROR': None,\r\n                      'NAME': None},\r\n             'TIME_ZONE': None,\r\n             'USER': 'postgres'},\r\n 'mercury': {'ATOMIC_REQUESTS': False,\r\n             'AUTOCOMMIT': True,\r\n             'CONN_MAX_AGE': 0,\r\n             'ENGINE': 'django.db.backends.postgresql',\r\n             'HOST': 'mercury_db',\r\n             'NAME': 'mercury',\r\n             'OPTIONS': {},\r\n             'PASSWORD': '********************',\r\n             'PORT': '5432',\r\n             'TEST': {'CHARSET': None,\r\n                      'COLLATION': None,\r\n                      'MIRROR': None,\r\n                      'NAME': None},\r\n             'TIME_ZONE': None,\r\n             'USER': 'mercury'},\r\n 'mercury_admin': {'ATOMIC_REQUESTS': False,\r\n                   'AUTOCOMMIT': True,\r\n                   'CONN_MAX_AGE': 0,\r\n                   'ENGINE': 'django.db.backends.postgresql',\r\n                   'HOST': 'mercury_db',\r\n                   'NAME': 'mercury',\r\n                   'OPTIONS': {},\r\n                   'PASSWORD': '********************',\r\n                   'PORT': '5432',\r\n                   'TEST': {'CHARSET': None,\r\n                            'COLLATION': None,\r\n                            'MIRROR': None,\r\n                            'NAME': None},\r\n                   'TIME_ZONE': None,\r\n                   'USER': 'mercury_admin'}}\r\n```\r\n\r\nand CACHES setting is:\r\n```\r\nCACHES\t\r\n{'default': {'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\r\n             'LOCATION': 'cache:11211'}}\r\n```\r\n\r\nDEBUG is true.\r\n\r\nThanks for any light you can shed into this problem.\r\n\r\n-Selim\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/87", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/87/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/87/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/87", "id": 245054198, "node_id": "MDU6SXNzdWUyNDUwNTQxOTg=", "number": 87, "title": "Exception during atomic exit can result in broken cache and memory leak", "user": {"login": "frasern", "id": 891092, "node_id": "MDQ6VXNlcjg5MTA5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/891092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frasern", "html_url": "https://github.com/frasern", "followers_url": "https://api.github.com/users/frasern/followers", "following_url": "https://api.github.com/users/frasern/following{/other_user}", "gists_url": "https://api.github.com/users/frasern/gists{/gist_id}", "starred_url": "https://api.github.com/users/frasern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frasern/subscriptions", "organizations_url": "https://api.github.com/users/frasern/orgs", "repos_url": "https://api.github.com/users/frasern/repos", "events_url": "https://api.github.com/users/frasern/events{/privacy}", "received_events_url": "https://api.github.com/users/frasern/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/noripyt/django-cachalot/milestones/3", "html_url": "https://github.com/noripyt/django-cachalot/milestone/3", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/milestones/3/labels", "id": 3065967, "node_id": "MDk6TWlsZXN0b25lMzA2NTk2Nw==", "number": 3, "title": "Django 2.0", "description": "", "creator": {"login": "BertrandBordage", "id": 1119169, "node_id": "MDQ6VXNlcjExMTkxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1119169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BertrandBordage", "html_url": "https://github.com/BertrandBordage", "followers_url": "https://api.github.com/users/BertrandBordage/followers", "following_url": "https://api.github.com/users/BertrandBordage/following{/other_user}", "gists_url": "https://api.github.com/users/BertrandBordage/gists{/gist_id}", "starred_url": "https://api.github.com/users/BertrandBordage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BertrandBordage/subscriptions", "organizations_url": "https://api.github.com/users/BertrandBordage/orgs", "repos_url": "https://api.github.com/users/BertrandBordage/repos", "events_url": "https://api.github.com/users/BertrandBordage/events{/privacy}", "received_events_url": "https://api.github.com/users/BertrandBordage/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2018-01-26T10:38:28Z", "updated_at": "2018-05-04T18:32:26Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2017-07-24T11:45:23Z", "updated_at": "2018-05-05T00:28:45Z", "closed_at": "2018-05-04T14:24:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `__enter__` and `__exit__` method of Django's `transaction.Atomic` class are currently patched to ensure Cachalot plays nicely with database transactions.\r\n\r\nHowever, if an exception occurs within Django's original `__exit__` method, then Cachalot doesn't clean up the stack of `atomic_caches`. \r\n\r\nBecause the stack of `atomic_caches` is thread local, the non-empty stack will be reused, possibly by subsequent requests. This can lead to different users receiving different cached data.\r\n\r\n\r\n## Steps to reproduce\r\n\r\nStart with two empty PostgreSQL tables as follows:\r\n\r\n```sql\r\nCREATE TABLE foo (\r\n  id int,\r\n  CONSTRAINT foo_id UNIQUE (id)\r\n);\r\nCREATE TABLE bar (\r\n  foo_id int,\r\n  CONSTRAINT bar_foo_id FOREIGN KEY (foo_id)\r\n      REFERENCES foo (id) MATCH SIMPLE\r\n      ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED\r\n)\r\n```\r\n\r\nBecause the foreign key checks are set as deferred, the error database occurs when `connection.commit()` is run, rather than immediately upon `cursor.execute()`.\r\n\r\n```python\r\n>>> from cachalot.cache import cachalot_caches\r\n>>> from django.db import connection, transaction\r\n>>>\r\n>>> len(cachalot_caches.atomic_caches)  # Stack is empty, as expected\r\n0\r\n>>> @transaction.atomic\r\n... def test():\r\n...   c = connection.cursor()\r\n...   c.execute('INSERT INTO bar VALUES (1)')\r\n...\r\n>>> test()\r\nTraceback (most recent call last):\r\n  ...\r\nIntegrityError: insert or update on table \"bar\" violates foreign key constraint \"bar_foo_id\"\r\nDETAIL:  Key (foo_id)=(1) is not present in table \"foo\".\r\n```\r\nAt this point, we can see that the stack was not cleaned up:\r\n```python\r\n>>> len(cachalot_caches.atomic_caches)\r\n1\r\n```\r\nRepeated exceptions cause the stack to keep growing (i.e. a memory leak):\r\n```python\r\n>>> test()\r\nTraceback (most recent call last):\r\n  ...\r\nIntegrityError: insert or update on table \"bar\" violates foreign key constraint \"bar_foo_id\"\r\nDETAIL:  Key (foo_id)=(1) is not present in table \"foo\".\r\n\r\n>>> len(cachalot_caches.atomic_caches)\r\n2\r\n```\r\n\r\n## Proposed fix\r\nI think the fix for this is fairly simple and just involves wrapping the original exit function in a `try...finally` block. That is, changing this...\r\n```python\r\ndef patch_exit(original):\r\n    @wraps(original)\r\n    def inner(self, exc_type, exc_value, traceback):\r\n        needs_rollback = get_connection(self.using).needs_rollback\r\n        original(self, exc_type, exc_value, traceback)\r\n        cachalot_caches.exit_atomic(\r\n            self.using, exc_type is None and not needs_rollback)\r\n\r\n    return inner\r\n```\r\n...to this...\r\n```python\r\ndef patch_exit(original):\r\n    @wraps(original)\r\n    def inner(self, exc_type, exc_value, traceback):\r\n        needs_rollback = get_connection(self.using).needs_rollback\r\n        try:\r\n            original(self, exc_type, exc_value, traceback)\r\n        finally:\r\n            cachalot_caches.exit_atomic(\r\n                self.using, exc_type is None and not needs_rollback)\r\n\r\n    return inner\r\n```\r\n\r\nThis ensures `exit_atomic` always gets called, regardless of whether the original exit method succeeds or raises an exception.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/85", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/85/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/85/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/85", "id": 239137617, "node_id": "MDU6SXNzdWUyMzkxMzc2MTc=", "number": 85, "title": "Caching large querysets", "user": {"login": "farridav", "id": 2966253, "node_id": "MDQ6VXNlcjI5NjYyNTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2966253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farridav", "html_url": "https://github.com/farridav", "followers_url": "https://api.github.com/users/farridav/followers", "following_url": "https://api.github.com/users/farridav/following{/other_user}", "gists_url": "https://api.github.com/users/farridav/gists{/gist_id}", "starred_url": "https://api.github.com/users/farridav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farridav/subscriptions", "organizations_url": "https://api.github.com/users/farridav/orgs", "repos_url": "https://api.github.com/users/farridav/repos", "events_url": "https://api.github.com/users/farridav/events{/privacy}", "received_events_url": "https://api.github.com/users/farridav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-28T11:45:42Z", "updated_at": "2018-09-27T12:06:02Z", "closed_at": "2017-07-08T06:58:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using your library in an appengine project (Thanks for your contribution :)), and the memcache server has a fixed item limit of 1MB, when the queryset that cachalot returns is > 1MB, then it fails spectacularly, \r\n\r\nThis is not really the fault or responsibility of cachalot, but it got me thinking, wouldn't it be a small effort/big win to use `zlib` or `gzip` compression on the querysets before caching them? This wouldn't necessarily solve my problem, as a compressed queryset may still exceed 1MB, but it would improve efficiency all round.\r\n\r\nto solve my problem I'm guessing ill need to find a way to get my caching backend (memcache) to chunk large items before storing them, and when retrieving them. Happy to hear If you know of an existing solution to this, otherwise ill roll my own.\r\n\r\nHappy to hear thought/suggestions or if I've missed the mark somewhere.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/84", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/84/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/84/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/84", "id": 239117673, "node_id": "MDU6SXNzdWUyMzkxMTc2NzM=", "number": 84, "title": "returning stale data on every alternate api calls", "user": {"login": "uday12kumar", "id": 1519934, "node_id": "MDQ6VXNlcjE1MTk5MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1519934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uday12kumar", "html_url": "https://github.com/uday12kumar", "followers_url": "https://api.github.com/users/uday12kumar/followers", "following_url": "https://api.github.com/users/uday12kumar/following{/other_user}", "gists_url": "https://api.github.com/users/uday12kumar/gists{/gist_id}", "starred_url": "https://api.github.com/users/uday12kumar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uday12kumar/subscriptions", "organizations_url": "https://api.github.com/users/uday12kumar/orgs", "repos_url": "https://api.github.com/users/uday12kumar/repos", "events_url": "https://api.github.com/users/uday12kumar/events{/privacy}", "received_events_url": "https://api.github.com/users/uday12kumar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-28T10:18:10Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-07-08T07:00:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using django-cachalot==1.2.0 with Django==1.10.3 and I'm facing this problem where on every alternate api call I am receiving stale data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/83", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/83/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/83/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/83", "id": 238273729, "node_id": "MDU6SXNzdWUyMzgyNzM3Mjk=", "number": 83, "title": "Providing a way to disable caching for data imports", "user": {"login": "jayden-arrai", "id": 2152076, "node_id": "MDQ6VXNlcjIxNTIwNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2152076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayden-arrai", "html_url": "https://github.com/jayden-arrai", "followers_url": "https://api.github.com/users/jayden-arrai/followers", "following_url": "https://api.github.com/users/jayden-arrai/following{/other_user}", "gists_url": "https://api.github.com/users/jayden-arrai/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayden-arrai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayden-arrai/subscriptions", "organizations_url": "https://api.github.com/users/jayden-arrai/orgs", "repos_url": "https://api.github.com/users/jayden-arrai/repos", "events_url": "https://api.github.com/users/jayden-arrai/events{/privacy}", "received_events_url": "https://api.github.com/users/jayden-arrai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-23T23:15:20Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2018-05-04T23:56:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got code for this written but have a couple questions regarding the creation of tests which is the last thing I need before I do a pull request.\r\n\r\nFirstly there are 2 ways to use the new feature along with these 2 optional abilities:\r\n1.  You can customize the cache_alias and db_alias to use when invalidating\r\n2.  You can choose not to invalidate the cache when done.\r\n\r\nExample 1:\r\n```python\r\nfrom cachalot.monkey_patch import DISABLE_CACHING\r\n\r\nwith DISABLE_CACHING:\r\n    DISABLE_CACHING.do_not_invalidate()  # Optional Line, will not invalidate after the with\r\n\r\n    # Optional line that allows you to change the cache and db aliases used when invalidating.\r\n    DISABLE_CACHING.set_aliases(cache_alias='default', db_alias='default')\r\n\r\n    # Code to run while the cache is disabled\r\n```\r\n\r\nExample 2:\r\n```python\r\nfrom cachalot.monkey_patch import DISABLE_CACHING\r\n\r\ntry:\r\n    DISABLE_CACHING.enable()\r\n\r\n    # Code to run while the cache is disabled\r\n\r\nfinally:\r\n    # invalidate_cache is only needed if you do not want to invalidate the cache.\r\n    # Also allow you to change the cache and db aliases used when invalidating.\r\n    DISABLE_CACHING.disable(invalidate_cache=False, cache_alias='default', db_alias='default'):\r\n```\r\n\r\nQuestions:\r\n----\r\nI'm going to start with a copy of read.py.\r\n\r\nShould I keep each test like `test_empty` and expand it to include testing before caching is disabled, then with it, then after, and also test with invalidating after and not?\r\n\r\nOr should I create tests that actually test each situation like test reading then disabling caching using \"with\" then test that things are invalidated successfully after using some more selects.  Test selecting then disabling caching using \"with\" but not invalidating after, do another select and then test that it doesn't invalidate with a select after that.  Tests that actually test disabling caching.  The types of sql queries shouldn't affect whether disabling works or not because I have my code in front of the caching code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/82", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/82/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/82/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/82", "id": 237049690, "node_id": "MDU6SXNzdWUyMzcwNDk2OTA=", "number": 82, "title": "Forbid django_session by default?", "user": {"login": "m9psy", "id": 5925585, "node_id": "MDQ6VXNlcjU5MjU1ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5925585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m9psy", "html_url": "https://github.com/m9psy", "followers_url": "https://api.github.com/users/m9psy/followers", "following_url": "https://api.github.com/users/m9psy/following{/other_user}", "gists_url": "https://api.github.com/users/m9psy/gists{/gist_id}", "starred_url": "https://api.github.com/users/m9psy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m9psy/subscriptions", "organizations_url": "https://api.github.com/users/m9psy/orgs", "repos_url": "https://api.github.com/users/m9psy/repos", "events_url": "https://api.github.com/users/m9psy/events{/privacy}", "received_events_url": "https://api.github.com/users/m9psy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-19T23:15:29Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-20T09:39:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "User session checks are performed with similar requests (Django 1.8):\r\n<code>SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'blah-blah-blah-key' AND `django_session`.`expire_date` > '2017-06-20 02:03:19.382000')</code>\r\n\r\nThe main problem here is `expire_date` parameter, forcing to cache every such request, only with `date` difference. Such requests are being performed every visit and may cause unwanted \"cache pollution\". Of course it is easily cured by using something like `CACHALOT_UNCACHABLE_TABLES = frozenset(('django_migrations', 'django_session'))` in settings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/81", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/81/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/81/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/81", "id": 235320965, "node_id": "MDU6SXNzdWUyMzUzMjA5NjU=", "number": 81, "title": "Cachalot error", "user": {"login": "gokulrajridecell", "id": 28937774, "node_id": "MDQ6VXNlcjI4OTM3Nzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/28937774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gokulrajridecell", "html_url": "https://github.com/gokulrajridecell", "followers_url": "https://api.github.com/users/gokulrajridecell/followers", "following_url": "https://api.github.com/users/gokulrajridecell/following{/other_user}", "gists_url": "https://api.github.com/users/gokulrajridecell/gists{/gist_id}", "starred_url": "https://api.github.com/users/gokulrajridecell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gokulrajridecell/subscriptions", "organizations_url": "https://api.github.com/users/gokulrajridecell/orgs", "repos_url": "https://api.github.com/users/gokulrajridecell/repos", "events_url": "https://api.github.com/users/gokulrajridecell/events{/privacy}", "received_events_url": "https://api.github.com/users/gokulrajridecell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-06-12T18:21:37Z", "updated_at": "2019-02-28T09:22:08Z", "closed_at": "2018-05-04T18:33:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error , with cachalot enabled ., when running unit testcases.\r\nbackend cache is BACKEND': 'django_redis.cache.RedisCache'\r\n\r\n\r\n  File \"/home/ubuntu/virtualenvs/venv-system/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 198, in apply_migration\r\n    state = migration.apply(state, schema_editor)\r\n  File \"/home/ubuntu/virtualenvs/venv-system/lib/python2.7/site-packages/django/db/backends/base/schema.py\", line 92, in __exit__\r\n    self.atomic.__exit__(exc_type, exc_value, traceback)\r\n  File \"/home/ubuntu/virtualenvs/venv-system/lib/python2.7/site-packages/cachalot/monkey_patch.py\", line 146, in inner\r\n    self.using, exc_type is None and not needs_rollback)\r\n  File \"/home/ubuntu/virtualenvs/venv-system/lib/python2.7/site-packages/cachalot/cache.py\", line 47, in exit_atomic\r\n    atomic_caches = self.atomic_caches[db_alias].pop().values()\r\nIndexError: pop from empty list\r\n\r\ncan you please help with this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/79", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/79/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/79/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/79", "id": 229848673, "node_id": "MDU6SXNzdWUyMjk4NDg2NzM=", "number": 79, "title": "How to use cachalot with only postgresql db?", "user": {"login": "Bilyalov", "id": 25269937, "node_id": "MDQ6VXNlcjI1MjY5OTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/25269937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bilyalov", "html_url": "https://github.com/Bilyalov", "followers_url": "https://api.github.com/users/Bilyalov/followers", "following_url": "https://api.github.com/users/Bilyalov/following{/other_user}", "gists_url": "https://api.github.com/users/Bilyalov/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bilyalov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bilyalov/subscriptions", "organizations_url": "https://api.github.com/users/Bilyalov/orgs", "repos_url": "https://api.github.com/users/Bilyalov/repos", "events_url": "https://api.github.com/users/Bilyalov/events{/privacy}", "received_events_url": "https://api.github.com/users/Bilyalov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-19T01:44:50Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-02T21:40:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have 2 databases: postgresql and cassandra db. I want to use cachalot with postgresql, and ignore the cassandra db. How to do it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/78", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/78/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/78/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/78", "id": 227502298, "node_id": "MDU6SXNzdWUyMjc1MDIyOTg=", "number": 78, "title": "Disable during manage.py shell session", "user": {"login": "kevinmickey", "id": 6294082, "node_id": "MDQ6VXNlcjYyOTQwODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6294082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinmickey", "html_url": "https://github.com/kevinmickey", "followers_url": "https://api.github.com/users/kevinmickey/followers", "following_url": "https://api.github.com/users/kevinmickey/following{/other_user}", "gists_url": "https://api.github.com/users/kevinmickey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinmickey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinmickey/subscriptions", "organizations_url": "https://api.github.com/users/kevinmickey/orgs", "repos_url": "https://api.github.com/users/kevinmickey/repos", "events_url": "https://api.github.com/users/kevinmickey/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinmickey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T21:23:09Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-03T11:18:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to disable cachalot during a `manage.py shell` session?\r\n\r\nI suppose this might work:\r\n```\r\nsettings.CACHALOT_ENABLED = False\r\n....\r\nsettings.CACHALOT_ENABLED = True\r\n```\r\n\r\nIs there a way to have this happen automatically?  Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/77", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/77/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/77/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/77", "id": 227369884, "node_id": "MDU6SXNzdWUyMjczNjk4ODQ=", "number": 77, "title": "test against django 1.11", "user": {"login": "thenewguy", "id": 77731, "node_id": "MDQ6VXNlcjc3NzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/77731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thenewguy", "html_url": "https://github.com/thenewguy", "followers_url": "https://api.github.com/users/thenewguy/followers", "following_url": "https://api.github.com/users/thenewguy/following{/other_user}", "gists_url": "https://api.github.com/users/thenewguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/thenewguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thenewguy/subscriptions", "organizations_url": "https://api.github.com/users/thenewguy/orgs", "repos_url": "https://api.github.com/users/thenewguy/repos", "events_url": "https://api.github.com/users/thenewguy/events{/privacy}", "received_events_url": "https://api.github.com/users/thenewguy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T13:37:29Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-03T11:07:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "does not appear that tests are run against django 1.11", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/75", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/75/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/75/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/75", "id": 219537336, "node_id": "MDU6SXNzdWUyMTk1MzczMzY=", "number": 75, "title": "Is it possible to use cachalot only for specific apps?", "user": {"login": "fabiocaccamo", "id": 1035294, "node_id": "MDQ6VXNlcjEwMzUyOTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1035294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabiocaccamo", "html_url": "https://github.com/fabiocaccamo", "followers_url": "https://api.github.com/users/fabiocaccamo/followers", "following_url": "https://api.github.com/users/fabiocaccamo/following{/other_user}", "gists_url": "https://api.github.com/users/fabiocaccamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabiocaccamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabiocaccamo/subscriptions", "organizations_url": "https://api.github.com/users/fabiocaccamo/orgs", "repos_url": "https://api.github.com/users/fabiocaccamo/repos", "events_url": "https://api.github.com/users/fabiocaccamo/events{/privacy}", "received_events_url": "https://api.github.com/users/fabiocaccamo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-05T10:28:53Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-02T21:49:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very useful, especially for third parties apps that would use cachalot in existing projects where a caching layer is already present.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/74", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/74/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/74/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/74", "id": 203431937, "node_id": "MDU6SXNzdWUyMDM0MzE5Mzc=", "number": 74, "title": "Ignore incompatible backends", "user": {"login": "OmegaDroid", "id": 719375, "node_id": "MDQ6VXNlcjcxOTM3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/719375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OmegaDroid", "html_url": "https://github.com/OmegaDroid", "followers_url": "https://api.github.com/users/OmegaDroid/followers", "following_url": "https://api.github.com/users/OmegaDroid/following{/other_user}", "gists_url": "https://api.github.com/users/OmegaDroid/gists{/gist_id}", "starred_url": "https://api.github.com/users/OmegaDroid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OmegaDroid/subscriptions", "organizations_url": "https://api.github.com/users/OmegaDroid/orgs", "repos_url": "https://api.github.com/users/OmegaDroid/repos", "events_url": "https://api.github.com/users/OmegaDroid/events{/privacy}", "received_events_url": "https://api.github.com/users/OmegaDroid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-01-26T17:17:45Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-04T18:28:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nEarlier I ran into an issue with one of the databases in my system being incompatible with django-cachalot, however it would be nice to have caching across my other dbs.\r\n\r\nIt would be useful in this case if we would ignore incompatible databases, excluding them from caching, maybe giving a warning rather than an error from the integrity check or maybe having a setting to exclude database aliases.\r\n\r\nDo you see any reason why this wouldn't work?\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/73", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/73/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/73/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/73", "id": 202445345, "node_id": "MDU6SXNzdWUyMDI0NDUzNDU=", "number": 73, "title": "CachalotPanel shows nothing", "user": {"login": "tylerecouture", "id": 10604391, "node_id": "MDQ6VXNlcjEwNjA0Mzkx", "avatar_url": "https://avatars3.githubusercontent.com/u/10604391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerecouture", "html_url": "https://github.com/tylerecouture", "followers_url": "https://api.github.com/users/tylerecouture/followers", "following_url": "https://api.github.com/users/tylerecouture/following{/other_user}", "gists_url": "https://api.github.com/users/tylerecouture/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerecouture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerecouture/subscriptions", "organizations_url": "https://api.github.com/users/tylerecouture/orgs", "repos_url": "https://api.github.com/users/tylerecouture/repos", "events_url": "https://api.github.com/users/tylerecouture/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerecouture/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-23T04:47:26Z", "updated_at": "2019-09-29T09:01:12Z", "closed_at": "2017-06-04T20:19:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not having some difficulty determining if Cachelot is working for me, and the CachelotPanel for debug-toolbar isn't helping, as it's blank.\r\n\r\nUsing Django 1.9.7 and SQLite test db (I'm pretty much new to everything django)\r\n\r\nI have:\r\n```\r\nINSTALLED_APPS += ('cachalot',)\r\nDEBUG_TOOLBAR_PANELS += ['cachalot.panels.CachalotPanel', ]\r\nCACHES = {\r\n    'default': {\r\n        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\r\n        'LOCATION': 'unix:/tmp/memcached.sock',\r\n    }\r\n}\r\n```\r\nMy debug-toolbar's CACHE panel shows some big long entries:\r\n(dict_keys(['33cd0b10f8c2fd53802b0948820b8b58da6bb27c', .... ']),)\r\n\r\nBut the CACHELOT panel is blank:\r\n```\r\nDatabase 'default'\r\nApplication \tModel \tLast invalidation\r\n```\r\n\r\nAny ideas what I might be doing wrong?\r\n\r\nAnd there is no noticeable speed difference on a page that currently takes about 10 seconds to load (334 queries) =P\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/72", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/72/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/72/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/72", "id": 202444102, "node_id": "MDU6SXNzdWUyMDI0NDQxMDI=", "number": 72, "title": "Does cachelot require any middleware?", "user": {"login": "tylerecouture", "id": 10604391, "node_id": "MDQ6VXNlcjEwNjA0Mzkx", "avatar_url": "https://avatars3.githubusercontent.com/u/10604391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerecouture", "html_url": "https://github.com/tylerecouture", "followers_url": "https://api.github.com/users/tylerecouture/followers", "following_url": "https://api.github.com/users/tylerecouture/following{/other_user}", "gists_url": "https://api.github.com/users/tylerecouture/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerecouture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerecouture/subscriptions", "organizations_url": "https://api.github.com/users/tylerecouture/orgs", "repos_url": "https://api.github.com/users/tylerecouture/repos", "events_url": "https://api.github.com/users/tylerecouture/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerecouture/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-23T04:32:03Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-02T21:35:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Noob here, trying this out.  \r\n\r\nAre the django cache middleware required?\r\n\r\n```\r\n    'django.middleware.cache.UpdateCacheMiddleware',\r\n    'django.middleware.cache.FetchFromCacheMiddleware',\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/71", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/71/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/71/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/71", "id": 191266443, "node_id": "MDU6SXNzdWUxOTEyNjY0NDM=", "number": 71, "title": "Cache growth from queries with incrementing date/time/etc on infrequent invalidated tables", "user": {"login": "Bartvds", "id": 685984, "node_id": "MDQ6VXNlcjY4NTk4NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/685984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bartvds", "html_url": "https://github.com/Bartvds", "followers_url": "https://api.github.com/users/Bartvds/followers", "following_url": "https://api.github.com/users/Bartvds/following{/other_user}", "gists_url": "https://api.github.com/users/Bartvds/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bartvds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bartvds/subscriptions", "organizations_url": "https://api.github.com/users/Bartvds/orgs", "repos_url": "https://api.github.com/users/Bartvds/repos", "events_url": "https://api.github.com/users/Bartvds/events{/privacy}", "received_events_url": "https://api.github.com/users/Bartvds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-23T13:10:00Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2016-11-23T16:36:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this a problem, but we spotted an interesting situation when querying on date/datetimes:\r\n\r\nIf we query with `my_queryset.filter(my_date__lt=timezone.now())` I see in django-debug-toolbar that the value of a datetime is extremely detailed, so we get a ton of cached queries for all the microseconds (as expected). To improve caching we can round the date/time query to nearest X minutes/hours/days so we get more cache hits. \r\n\r\nBut combined with the lack of TTL on cached values (according to docs at least in redis) *and* a table that doesn't invalidate often we get a giant pileup of old cached queries. We can work around this by not caching these tables, disabling the cache on per-query basis, or periodically flushing them.\r\n\r\nWhat do you think? I'm still a bit unclear why the redis cache doesn't have a TTL at all? How does this situation work with memcached?\r\n\r\nWe use mixed persistent and ttl keys in redis using `volatile-lru` with other redis based apps and it works fine. Cachalot doesn't seem to mind if I randomly delete keys (docs even suggest `allkeys-lru`), so then why no TTL at all (not even optional?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/70", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/70/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/70/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/70", "id": 191190391, "node_id": "MDU6SXNzdWUxOTExOTAzOTE=", "number": 70, "title": "Don't cache any queries that use RawSQL", "user": {"login": "schinckel", "id": 23411, "node_id": "MDQ6VXNlcjIzNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/23411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schinckel", "html_url": "https://github.com/schinckel", "followers_url": "https://api.github.com/users/schinckel/followers", "following_url": "https://api.github.com/users/schinckel/following{/other_user}", "gists_url": "https://api.github.com/users/schinckel/gists{/gist_id}", "starred_url": "https://api.github.com/users/schinckel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schinckel/subscriptions", "organizations_url": "https://api.github.com/users/schinckel/orgs", "repos_url": "https://api.github.com/users/schinckel/repos", "events_url": "https://api.github.com/users/schinckel/events{/privacy}", "received_events_url": "https://api.github.com/users/schinckel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-23T05:12:50Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-03T16:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because of the nature of a ``RawSQL`` query, that may refer to any other tables, cachalot should not cache any queries that contain a ``RawSQL`` clause.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/69", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/69/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/69/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/69", "id": 191054383, "node_id": "MDU6SXNzdWUxOTEwNTQzODM=", "number": 69, "title": "Settings for (UN)CACHABLE_TABLES use SQL table names instead of app+model names?", "user": {"login": "Bartvds", "id": 685984, "node_id": "MDQ6VXNlcjY4NTk4NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/685984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bartvds", "html_url": "https://github.com/Bartvds", "followers_url": "https://api.github.com/users/Bartvds/followers", "following_url": "https://api.github.com/users/Bartvds/following{/other_user}", "gists_url": "https://api.github.com/users/Bartvds/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bartvds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bartvds/subscriptions", "organizations_url": "https://api.github.com/users/Bartvds/orgs", "repos_url": "https://api.github.com/users/Bartvds/repos", "events_url": "https://api.github.com/users/Bartvds/events{/privacy}", "received_events_url": "https://api.github.com/users/Bartvds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 132752623, "node_id": "MDU6TGFiZWwxMzI3NTI2MjM=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-22T16:26:10Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2016-11-22T18:04:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the docs the CACHABLE_TABLES and UNCACHABLE_TABLES settings need to be specified as the SQL table names, instead of a dotted appname.modelname (like cacheops). \r\n\r\nI think this is not really the Django way to do this, as it bypasses the abstraction Django puts over the database. So instead of working at the Django level (models) I now have to inspect the database and figure-out what Django does to turn model names into table names. It is not a huge deal but not something we should have to do when using an abstraction like Django.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/65", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/65/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/65/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/65", "id": 185127880, "node_id": "MDU6SXNzdWUxODUxMjc4ODA=", "number": 65, "title": "update PIP for 1.4.1", "user": {"login": "jankrnavek", "id": 13521021, "node_id": "MDQ6VXNlcjEzNTIxMDIx", "avatar_url": "https://avatars1.githubusercontent.com/u/13521021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jankrnavek", "html_url": "https://github.com/jankrnavek", "followers_url": "https://api.github.com/users/jankrnavek/followers", "following_url": "https://api.github.com/users/jankrnavek/following{/other_user}", "gists_url": "https://api.github.com/users/jankrnavek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jankrnavek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jankrnavek/subscriptions", "organizations_url": "https://api.github.com/users/jankrnavek/orgs", "repos_url": "https://api.github.com/users/jankrnavek/repos", "events_url": "https://api.github.com/users/jankrnavek/events{/privacy}", "received_events_url": "https://api.github.com/users/jankrnavek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-25T14:06:15Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2016-10-25T16:08:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nthere is not 1.4.1 on PIP. Can you update that?\nThank you in advance,\nHanz\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/64", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/64/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/64/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/64", "id": 185002922, "node_id": "MDU6SXNzdWUxODUwMDI5MjI=", "number": 64, "title": "CACHALOT_ENABLED=False doesn't seem to disable all aspects of the cache", "user": {"login": "rantecki", "id": 1551714, "node_id": "MDQ6VXNlcjE1NTE3MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1551714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rantecki", "html_url": "https://github.com/rantecki", "followers_url": "https://api.github.com/users/rantecki/followers", "following_url": "https://api.github.com/users/rantecki/following{/other_user}", "gists_url": "https://api.github.com/users/rantecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/rantecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rantecki/subscriptions", "organizations_url": "https://api.github.com/users/rantecki/orgs", "repos_url": "https://api.github.com/users/rantecki/repos", "events_url": "https://api.github.com/users/rantecki/events{/privacy}", "received_events_url": "https://api.github.com/users/rantecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-25T02:26:16Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2017-06-03T16:18:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a project using celery.  For local development I use `LocMemCache` and also disable cachalot via `CACHALOT_ENABLED = False`, as the docs say it won't work well in this scenario (plus I don't generally want it for development anyway).\n\nThe problem is, even with cachalot disabled I keep running into issues with stale data for models written to from celery tasks and read by the main process.  If I add the table to `CACHALOT_UNCACHABLE_TABLES` the issue disappears.\n\nSo it would seem that CACHALOT_ENABLED doesn't control all cache-related functions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/63", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/63/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/63/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/63", "id": 182798245, "node_id": "MDU6SXNzdWUxODI3OTgyNDU=", "number": 63, "title": "Cachalot is making too many calls to memcache server", "user": {"login": "debanshuk", "id": 2102907, "node_id": "MDQ6VXNlcjIxMDI5MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2102907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debanshuk", "html_url": "https://github.com/debanshuk", "followers_url": "https://api.github.com/users/debanshuk/followers", "following_url": "https://api.github.com/users/debanshuk/following{/other_user}", "gists_url": "https://api.github.com/users/debanshuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/debanshuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debanshuk/subscriptions", "organizations_url": "https://api.github.com/users/debanshuk/orgs", "repos_url": "https://api.github.com/users/debanshuk/repos", "events_url": "https://api.github.com/users/debanshuk/events{/privacy}", "received_events_url": "https://api.github.com/users/debanshuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-13T14:02:04Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2016-10-24T19:11:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using Cachalot in one of our projects and and we are observer too many get_multi calls to our memcache servers on all our environments. On my local environment when I run the same code with cachalot disabled number of hit to memcache reduces significantly. With Cachalot enabled the number of get_multi calls is in 100s even for opening a list page in Django admin.\n\nMost of the call retrieve keys which have some floating point values saved for them and these floating point values looks like to be epoch timestamps. Following are few example keys and their values retrieved from get_multi calls:\n\n```\nget_many ['f330760c95588f8c795d0df3f699f90ae143e26a', 'b5ac959681ff06eff632d25a5961a4d3cad09b42', '8c6f559b37d1caa6e3d892aa317eca64377a43af', '887f8247d0ff979264c73b069f790024b2aa98e1', '5c01fcd741777a41b0557cb7a62501de3a0b31d6'] {'5c01fcd741777a41b0557cb7a62501de3a0b31d6': (1476366950.845727, []), '8c6f559b37d1caa6e3d892aa317eca64377a43af': 1476366950.486771, 'f330760c95588f8c795d0df3f699f90ae143e26a': 1476340903.45008, '887f8247d0ff979264c73b069f790024b2aa98e1': 1476340903.45008, 'b5ac959681ff06eff632d25a5961a4d3cad09b42': 1476340903.45008}\n```\n\nAnd following is a set_multi call which sets one such key:\n\n```\nset_many {'8c6f559b37d1caa6e3d892aa317eca64377a43af': 1476366950.903075}\n```\n\nCould someone please tell me why Cachalot is caching these floating point numbers and why there are so many cache hits of these keys?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/62", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/62/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/62/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/62", "id": 180793009, "node_id": "MDU6SXNzdWUxODA3OTMwMDk=", "number": 62, "title": "CachalotPanel no longer works. Error importing  _invalidate_tables in transaction.py", "user": {"login": "AlJohri", "id": 2790092, "node_id": "MDQ6VXNlcjI3OTAwOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2790092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlJohri", "html_url": "https://github.com/AlJohri", "followers_url": "https://api.github.com/users/AlJohri/followers", "following_url": "https://api.github.com/users/AlJohri/following{/other_user}", "gists_url": "https://api.github.com/users/AlJohri/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlJohri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlJohri/subscriptions", "organizations_url": "https://api.github.com/users/AlJohri/orgs", "repos_url": "https://api.github.com/users/AlJohri/repos", "events_url": "https://api.github.com/users/AlJohri/events{/privacy}", "received_events_url": "https://api.github.com/users/AlJohri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-04T02:37:26Z", "updated_at": "2018-05-05T00:28:44Z", "closed_at": "2016-10-23T22:49:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "adding `cachalot.panels.CachalotPanel` to `DEBUG_TOOLBAR_PANELS` causes: `django.core.exceptions.ImproperlyConfigured: Error importing debug panel cachalot.panels: \"cannot import name '_invalidate_tables'\"`.\n\nFull traceback:\n\n```\nTraceback (most recent call last):\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/core/management/commands/runserver.py\", line 113, in inner_run\n    autoreload.raise_last_exception()\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/utils/autoreload.py\", line 249, in raise_last_exception\n    six.reraise(*_exception)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/utils/six.py\", line 685, in reraise\n    raise value.with_traceback(tb)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/__init__.py\", line 27, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/apps/registry.py\", line 85, in populate\n    app_config = AppConfig.create(entry)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/apps/config.py\", line 116, in create\n    mod = import_module(mod_path)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/importlib/__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/apps.py\", line 12, in <module>\n    from debug_toolbar.middleware import DebugToolbarMiddleware\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/middleware.py\", line 17, in <module>\n    from debug_toolbar.toolbar import DebugToolbar\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/toolbar.py\", line 151, in <module>\n    urlpatterns = DebugToolbar.get_urls()\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/toolbar.py\", line 145, in get_urls\n    for panel_class in cls.get_panel_classes():\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/toolbar.py\", line 122, in get_panel_classes\n    (panel_module, e))\ndjango.core.exceptions.ImproperlyConfigured: Error importing debug panel cachalot.panels: \"cannot import name '_invalidate_tables'\"\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x10d2cc158>\nTraceback (most recent call last):\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/toolbar.py\", line 118, in get_panel_classes\n    mod = import_module(panel_module)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/importlib/__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/cachalot/panels.py\", line 14, in <module>\n    from .utils import _get_table_cache_key\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/cachalot/utils.py\", line 18, in <module>\n    from .transaction import AtomicCache\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/cachalot/transaction.py\", line 40, in <module>\n    from .utils import _invalidate_tables\nImportError: cannot import name '_invalidate_tables'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/core/management/commands/runserver.py\", line 113, in inner_run\n    autoreload.raise_last_exception()\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/utils/autoreload.py\", line 249, in raise_last_exception\n    six.reraise(*_exception)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/utils/six.py\", line 685, in reraise\n    raise value.with_traceback(tb)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/__init__.py\", line 27, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/apps/registry.py\", line 85, in populate\n    app_config = AppConfig.create(entry)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/django/apps/config.py\", line 116, in create\n    mod = import_module(mod_path)\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/importlib/__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/apps.py\", line 12, in <module>\n    from debug_toolbar.middleware import DebugToolbarMiddleware\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/middleware.py\", line 17, in <module>\n    from debug_toolbar.toolbar import DebugToolbar\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/toolbar.py\", line 151, in <module>\n    urlpatterns = DebugToolbar.get_urls()\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/toolbar.py\", line 145, in get_urls\n    for panel_class in cls.get_panel_classes():\n  File \"/Users/myuser/.virtualenvs/myproj/lib/python3.5/site-packages/debug_toolbar/toolbar.py\", line 122, in get_panel_classes\n    (panel_module, e))\ndjango.core.exceptions.ImproperlyConfigured: Error importing debug panel cachalot.panels: \"cannot import name '_invalidate_tables'\"\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/61", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/61/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/61/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/61", "id": 179485884, "node_id": "MDU6SXNzdWUxNzk0ODU4ODQ=", "number": 61, "title": "SELECT FOR UPDATE should never be cached", "user": {"login": "jklardie", "id": 236199, "node_id": "MDQ6VXNlcjIzNjE5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/236199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklardie", "html_url": "https://github.com/jklardie", "followers_url": "https://api.github.com/users/jklardie/followers", "following_url": "https://api.github.com/users/jklardie/following{/other_user}", "gists_url": "https://api.github.com/users/jklardie/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklardie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklardie/subscriptions", "organizations_url": "https://api.github.com/users/jklardie/orgs", "repos_url": "https://api.github.com/users/jklardie/repos", "events_url": "https://api.github.com/users/jklardie/events{/privacy}", "received_events_url": "https://api.github.com/users/jklardie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-09-27T12:59:22Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-09-29T10:04:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The SELECT FOR UPDATE mechanism is negated by cachalot because it caches the results of queries that include SELECT FOR UPDATE. This results in unwanted concurrent behavior in systems that rely on the exclusive locking of rows. These bugs are very hard to reproduce but can and do occur.\n\nAccording to postgres documentation (https://www.postgresql.org/docs/9.3/static/explicit-locking.html):\n\n> To acquire an exclusive row-level lock on a row without actually modifying the row, select the row with SELECT FOR UPDATE. Note that once the row-level lock is acquired, the transaction can update the row multiple times without fear of conflicts.\n\nProper behaviour should be to let all SELECT FOR UPDATE queries through to the database. The testcase in the following link should fail (it should produce a single query, instead of using the cached result): \n\nhttps://github.com/BertrandBordage/django-cachalot/blob/7e3137eac7bc1b4f683a336579653623e71c991e/cachalot/tests/read.py#L539\n\nA temporary workaround for now is to set the CACHALOT_QUERY_KEYGEN method, and to ignore queries containing select for updates:\n\n```\ndef get_query_cache_key(compiler):\n    if compiler.query.select_for_update:\n        raise UncachableQuery\n    return original_query_keygen(compiler)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/60", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/60/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/60/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/60", "id": 175290568, "node_id": "MDU6SXNzdWUxNzUyOTA1Njg=", "number": 60, "title": "support for Django 1.10?", "user": {"login": "genxstylez", "id": 1086338, "node_id": "MDQ6VXNlcjEwODYzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1086338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/genxstylez", "html_url": "https://github.com/genxstylez", "followers_url": "https://api.github.com/users/genxstylez/followers", "following_url": "https://api.github.com/users/genxstylez/following{/other_user}", "gists_url": "https://api.github.com/users/genxstylez/gists{/gist_id}", "starred_url": "https://api.github.com/users/genxstylez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/genxstylez/subscriptions", "organizations_url": "https://api.github.com/users/genxstylez/orgs", "repos_url": "https://api.github.com/users/genxstylez/repos", "events_url": "https://api.github.com/users/genxstylez/events{/privacy}", "received_events_url": "https://api.github.com/users/genxstylez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-06T16:21:53Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-09-13T21:01:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "as titled\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/59", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/59/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/59/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/59", "id": 175136965, "node_id": "MDU6SXNzdWUxNzUxMzY5NjU=", "number": 59, "title": "invalidate_cachalot management command : BaseCommand.option_list is deprecated in Django 1.8 and removed in Django 1.10", "user": {"login": "ndanielsen", "id": 2944777, "node_id": "MDQ6VXNlcjI5NDQ3Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2944777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndanielsen", "html_url": "https://github.com/ndanielsen", "followers_url": "https://api.github.com/users/ndanielsen/followers", "following_url": "https://api.github.com/users/ndanielsen/following{/other_user}", "gists_url": "https://api.github.com/users/ndanielsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndanielsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndanielsen/subscriptions", "organizations_url": "https://api.github.com/users/ndanielsen/orgs", "repos_url": "https://api.github.com/users/ndanielsen/repos", "events_url": "https://api.github.com/users/ndanielsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ndanielsen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-05T23:40:24Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-09-06T09:13:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "> docker-compose -f dev.yml run django python manage.py invalidate_cachalot\n> Traceback (most recent call last):\n>   File \"manage.py\", line 18, in <module>\n>     execute_from_command_line(sys.argv)\n>   File \"/usr/local/lib/python3.5/site-packages/django/core/management/**init**.py\", line 367, in execute_from_command_line\n>     utility.execute()\n>   File \"/usr/local/lib/python3.5/site-packages/django/core/management/**init**.py\", line 359, in execute\n>     self.fetch_command(subcommand).run_from_argv(self.argv)\n>   File \"/usr/local/lib/python3.5/site-packages/django/core/management/**init**.py\", line 208, in fetch_command\n>     klass = load_command_class(app_name, subcommand)\n>   File \"/usr/local/lib/python3.5/site-packages/django/core/management/**init**.py\", line 40, in load_command_class\n>     module = import_module('%s.management.commands.%s' % (app_name, name))\n>   File \"/usr/local/lib/python3.5/importlib/**init**.py\", line 126, in import_module\n>     return _bootstrap._gcd_import(name[level:], package, level)\n>   File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\n>   File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\n>   File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\n>   File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\n>   File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\n>   File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\n>   File \"/usr/local/lib/python3.5/site-packages/cachalot/management/commands/invalidate_cachalot.py\", line 8, in <module>\n>     class Command(BaseCommand):\n>   File \"/usr/local/lib/python3.5/site-packages/cachalot/management/commands/invalidate_cachalot.py\", line 11, in Command\n>     option_list = BaseCommand.option_list + (\n> AttributeError: type object 'BaseCommand' has no attribute 'option_list'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/58", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/58/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/58/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/58", "id": 174541517, "node_id": "MDU6SXNzdWUxNzQ1NDE1MTc=", "number": 58, "title": "Cut a new version for postgres compatibility", "user": {"login": "schuyler1d", "id": 52117, "node_id": "MDQ6VXNlcjUyMTE3", "avatar_url": "https://avatars1.githubusercontent.com/u/52117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schuyler1d", "html_url": "https://github.com/schuyler1d", "followers_url": "https://api.github.com/users/schuyler1d/followers", "following_url": "https://api.github.com/users/schuyler1d/following{/other_user}", "gists_url": "https://api.github.com/users/schuyler1d/gists{/gist_id}", "starred_url": "https://api.github.com/users/schuyler1d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schuyler1d/subscriptions", "organizations_url": "https://api.github.com/users/schuyler1d/orgs", "repos_url": "https://api.github.com/users/schuyler1d/repos", "events_url": "https://api.github.com/users/schuyler1d/events{/privacy}", "received_events_url": "https://api.github.com/users/schuyler1d/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-01T14:40:38Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-09-06T23:07:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't suppose you could cut a new version with this fix:\nhttps://github.com/BertrandBordage/django-cachalot/commit/b9f84f8047414a280490518641bca25be10d258b\n\nWe're not able to use django 1.9.4 which prefers postgres without this.\n\nAwesome library!  The drop-in nature of it, has literally saved many projects!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/57", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/57/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/57/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/57", "id": 173821453, "node_id": "MDU6SXNzdWUxNzM4MjE0NTM=", "number": 57, "title": "DiskCache compatibility", "user": {"login": "mheppner", "id": 2390428, "node_id": "MDQ6VXNlcjIzOTA0Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2390428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mheppner", "html_url": "https://github.com/mheppner", "followers_url": "https://api.github.com/users/mheppner/followers", "following_url": "https://api.github.com/users/mheppner/following{/other_user}", "gists_url": "https://api.github.com/users/mheppner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mheppner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mheppner/subscriptions", "organizations_url": "https://api.github.com/users/mheppner/orgs", "repos_url": "https://api.github.com/users/mheppner/repos", "events_url": "https://api.github.com/users/mheppner/events{/privacy}", "received_events_url": "https://api.github.com/users/mheppner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-29T17:00:51Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-09-06T10:10:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any plans to support [DiskCache](https://github.com/grantjenks/python-diskcache)? I haven't tried it yet. The docs don't seem to mention if 3rd party caches are supported or what it would take implement.\n\nAlso, the docs mention going to the Google Groups page to ask questions, but I applied for membership over a week ago and it doesn't look like I have access. Are you open to switching to Gitter or Slack?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/56", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/56/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/56/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/56", "id": 170521658, "node_id": "MDU6SXNzdWUxNzA1MjE2NTg=", "number": 56, "title": "Using it with DatabaseCache", "user": {"login": "aericson", "id": 692542, "node_id": "MDQ6VXNlcjY5MjU0Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/692542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aericson", "html_url": "https://github.com/aericson", "followers_url": "https://api.github.com/users/aericson/followers", "following_url": "https://api.github.com/users/aericson/following{/other_user}", "gists_url": "https://api.github.com/users/aericson/gists{/gist_id}", "starred_url": "https://api.github.com/users/aericson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aericson/subscriptions", "organizations_url": "https://api.github.com/users/aericson/orgs", "repos_url": "https://api.github.com/users/aericson/repos", "events_url": "https://api.github.com/users/aericson/events{/privacy}", "received_events_url": "https://api.github.com/users/aericson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-10T21:19:58Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-09-06T23:05:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to use it with DatabaseCache?\n\nusing the following config:\n\n```\nCACHES['cachalot'] = {\n    'BACKEND': 'django.core.cache.backends.db.DatabaseCache',\n    'LOCATION': 'cachalot_cache_table',\n}\n\nCACHALOT_CACHE = 'cachalot'\n\nCACHALOT_UNCACHABLE_TABLES = frozenset(('django_migrations', 'cachalot_cache_table'))\n```\n\nbut I'm getting a maximum recursion depth.\n\n```\nTraceback:\nFile \"***/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  223.                 response = middleware_method(request, response)\nFile \"***/lib/python2.7/site-packages/django/contrib/sessions/middleware.py\" in process_response\n  50.                         request.session.save()\nFile \"***/lib/python2.7/site-packages/django/contrib/sessions/backends/db.py\" in save\n  56.             return self.create()\nFile \"***/lib/python2.7/site-packages/django/contrib/sessions/backends/db.py\" in create\n  41.                 self.save(must_create=True)\nFile \"***/lib/python2.7/site-packages/django/contrib/sessions/backends/db.py\" in save\n  65.                 obj.save(force_insert=must_create, using=using)\nFile \"***/lib/python2.7/site-packages/cachalot/monkey_patch.py\" in inner\n  136.                 self.using, exc_type is None and not needs_rollback)\nFile \"***/lib/python2.7/site-packages/cachalot/cache.py\" in exit_atomic\n  51.                 atomic_cache.commit()\nFile \"***/lib/python2.7/site-packages/cachalot/transaction.py\" in commit\n  27.         self.parent_cache.set_many(self, None)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/base.py\" in set_many\n  194.             self.set(key, value, timeout=timeout, version=version)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/db.py\" in set\n  89.         self._base_set('set', key, value, timeout)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/db.py\" in _base_set\n  143.                                        [key, b64encoded, exp])\nFile \"***/lib/python2.7/site-packages/cachalot/monkey_patch.py\" in inner\n  136.                 self.using, exc_type is None and not needs_rollback)\nFile \"***/lib/python2.7/site-packages/cachalot/cache.py\" in exit_atomic\n  51.                 atomic_cache.commit()\nFile \"***/lib/python2.7/site-packages/cachalot/transaction.py\" in commit\n  27.         self.parent_cache.set_many(self, None)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/base.py\" in set_many\n  194.             self.set(key, value, timeout=timeout, version=version)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/db.py\" in set\n  89.         self._base_set('set', key, value, timeout)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/db.py\" in _base_set\n  143.                                        [key, b64encoded, exp])\n...\nFile \"***/lib/python2.7/site-packages/cachalot/monkey_patch.py\" in inner\n  136.                 self.using, exc_type is None and not needs_rollback)\nFile \"***/lib/python2.7/site-packages/cachalot/cache.py\" in exit_atomic\n  51.                 atomic_cache.commit()\nFile \"***/lib/python2.7/site-packages/cachalot/transaction.py\" in commit\n  27.         self.parent_cache.set_many(self, None)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/base.py\" in set_many\n  194.             self.set(key, value, timeout=timeout, version=version)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/db.py\" in set\n  89.         self._base_set('set', key, value, timeout)\nFile \"***/lib/python2.7/site-packages/django/core/cache/backends/db.py\" in _base_set\n  139.                                        [b64encoded, exp, key])\nFile \"***/lib/python2.7/site-packages/django/db/backends/utils.py\" in execute\n  79.             return super(CursorDebugWrapper, self).execute(sql, params)\nFile \"***/lib/python2.7/site-packages/cachalot/monkey_patch.py\" in inner\n  112.                     invalidate(*tables, db_alias=cursor.db.alias)\nFile \"***/lib/python2.7/site-packages/cachalot/api.py\" in invalidate\n  65.             _get_tables(tables_or_models), cache_alias, db_alias):\nFile \"***/lib/python2.7/site-packages/cachalot/api.py\" in _cache_db_tables_iterator\n  23.             tables = connections[db_alias].introspection.table_names()\nFile \"***/lib/python2.7/site-packages/django/db/backends/base/introspection.py\" in table_names\n  56.             with self.connection.cursor() as cursor:\nFile \"***/lib/python2.7/site-packages/django/db/backends/base/base.py\" in cursor\n  161.         if self.queries_logged:\nFile \"***/lib/python2.7/site-packages/django/db/backends/base/base.py\" in queries_logged\n  76.         return self.force_debug_cursor or settings.DEBUG\n\nException Type: RuntimeError at /\nException Value: maximum recursion depth exceeded\n```\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/55", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/55/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/55/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/55", "id": 169004791, "node_id": "MDU6SXNzdWUxNjkwMDQ3OTE=", "number": 55, "title": "Deleting Cache Instead of Setting it to None", "user": {"login": "boxbeatsy", "id": 3383611, "node_id": "MDQ6VXNlcjMzODM2MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3383611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxbeatsy", "html_url": "https://github.com/boxbeatsy", "followers_url": "https://api.github.com/users/boxbeatsy/followers", "following_url": "https://api.github.com/users/boxbeatsy/following{/other_user}", "gists_url": "https://api.github.com/users/boxbeatsy/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxbeatsy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxbeatsy/subscriptions", "organizations_url": "https://api.github.com/users/boxbeatsy/orgs", "repos_url": "https://api.github.com/users/boxbeatsy/repos", "events_url": "https://api.github.com/users/boxbeatsy/events{/privacy}", "received_events_url": "https://api.github.com/users/boxbeatsy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-02T22:32:51Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-08-02T22:50:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\n\nI'm using Django 1.8 / Memcached / Cachalot.  After installing Cachalot, I noticed that the memory usage of memcached was ever-increasing.\n\nAfter looking into the source, I realized that Cachalot invalidates keys by setting the value to None instead of calling cache.delete().  However, because Memcached is content-agnostic, this doesn't actually free up the allocated memory.  Instead, the object sits in memcached until an eviction takes place.  This makes it really hard to determine how much space Django-Cachalot requires in production to operate at maximum efficiency.\n\nIs there a reason cache.delete() is not being used?  Could we at least use it for the Memcached Backend?  Happy to do a PR if you agree.\n\nBest.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/54", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/54/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/54/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/54", "id": 168775585, "node_id": "MDU6SXNzdWUxNjg3NzU1ODU=", "number": 54, "title": "Profiling Django-Cachalot", "user": {"login": "boxbeatsy", "id": 3383611, "node_id": "MDQ6VXNlcjMzODM2MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3383611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxbeatsy", "html_url": "https://github.com/boxbeatsy", "followers_url": "https://api.github.com/users/boxbeatsy/followers", "following_url": "https://api.github.com/users/boxbeatsy/following{/other_user}", "gists_url": "https://api.github.com/users/boxbeatsy/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxbeatsy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxbeatsy/subscriptions", "organizations_url": "https://api.github.com/users/boxbeatsy/orgs", "repos_url": "https://api.github.com/users/boxbeatsy/repos", "events_url": "https://api.github.com/users/boxbeatsy/events{/privacy}", "received_events_url": "https://api.github.com/users/boxbeatsy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 132752623, "node_id": "MDU6TGFiZWwxMzI3NTI2MjM=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T00:49:19Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-09-06T10:42:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just implemented Django-Cachalot for my Heroku production app, and everything has been running very smoothly.  Thank you for the great work!\n\nI recently took a look at our memcached metrics and noticed that the datastore size has been steadily growing since we launched the package (currently at 20GB, 3.5x the size our actual Postgres DB, with no signs of slowing down).\n\nGiven the cost of running a memcached server, we need a way to profile our app under Django-cachalot to determine whether the cost of keeping this data in cache is worth the gains in query speed.\n\nWe decided the important profiling metrics for our application were:\n- Total # of Cache Hits (both in aggregate and by model)\n- Total # of Cache Misses (both in aggregate and by model)\n- Average storage size of cached objects (both in aggregate and by model)\n\nHere is the first draft of our monkey patch of Django-Cachalot that we'll be temporarily deploying to profile the current cache's effectiveness: https://gist.github.com/boxbeatsy/87bdbc8f997872c77856c4d8cc8638f4\n\nHere is a reporting script: https://gist.github.com/boxbeatsy/fda5cfe1eb5af03d5289b63f0bd339fd\n\nDoes anyone have additional guidance on how to better profile our app?  Would this be something  worth adding to Django-Cachalot? (I imagine profiling would be an important operational question for anyone deploying this in production at scale).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/53", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/53/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/53/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/53", "id": 167513372, "node_id": "MDU6SXNzdWUxNjc1MTMzNzI=", "number": 53, "title": "Returning stale data after object reload", "user": {"login": "rantecki", "id": 1551714, "node_id": "MDQ6VXNlcjE1NTE3MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1551714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rantecki", "html_url": "https://github.com/rantecki", "followers_url": "https://api.github.com/users/rantecki/followers", "following_url": "https://api.github.com/users/rantecki/following{/other_user}", "gists_url": "https://api.github.com/users/rantecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/rantecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rantecki/subscriptions", "organizations_url": "https://api.github.com/users/rantecki/orgs", "repos_url": "https://api.github.com/users/rantecki/repos", "events_url": "https://api.github.com/users/rantecki/events{/privacy}", "received_events_url": "https://api.github.com/users/rantecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-26T03:25:38Z", "updated_at": "2018-05-05T00:28:43Z", "closed_at": "2016-09-29T18:44:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I seem to be running into a few cases where I'm getting stale data returned.  One is as follows:\n\nUsing Plata (an e-commerce module for Django), there's an OrderPayment model with an FK to the Order model.  There comes a time during payment processing when the following occurs:\n\n```\npayment.save()\norder = order.reload()\n```\n\norder.reload() reloads the object from the database using the existing id.\n\nThere seems to be quite frequent cases where the reloaded order does not acknowledge the newly created payment, and so thinks the order is not yet paid.  Disabling caching for these two tables seems to be solve the issue.\n\nIs there a known issue with invalidation in this kind of situation?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/50", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/50/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/50/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/50", "id": 165584156, "node_id": "MDU6SXNzdWUxNjU1ODQxNTY=", "number": 50, "title": "Monkey_patch.py ascii encoding of sql in python2.7", "user": {"login": "Ayzse", "id": 8205166, "node_id": "MDQ6VXNlcjgyMDUxNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8205166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ayzse", "html_url": "https://github.com/Ayzse", "followers_url": "https://api.github.com/users/Ayzse/followers", "following_url": "https://api.github.com/users/Ayzse/following{/other_user}", "gists_url": "https://api.github.com/users/Ayzse/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ayzse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ayzse/subscriptions", "organizations_url": "https://api.github.com/users/Ayzse/orgs", "repos_url": "https://api.github.com/users/Ayzse/repos", "events_url": "https://api.github.com/users/Ayzse/events{/privacy}", "received_events_url": "https://api.github.com/users/Ayzse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-14T15:05:14Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2016-07-21T22:07:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At monkey_patch.py:110 if `sql` is a `str` type, but the actual query contains unicode characters, an error is generated: \n\n`UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 26821804: ordinal not in range(128)`\n\nFixed if this code is inserted before line 110:\n\n``` python\nif not isinstance(sql, unicode):\n    sql = unicode(sql, 'utf-8')\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/49", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/49/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/49/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/49", "id": 157336414, "node_id": "MDU6SXNzdWUxNTczMzY0MTQ=", "number": 49, "title": "monkey_patch did not read current settings", "user": {"login": "arunaharsa", "id": 1835943, "node_id": "MDQ6VXNlcjE4MzU5NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1835943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arunaharsa", "html_url": "https://github.com/arunaharsa", "followers_url": "https://api.github.com/users/arunaharsa/followers", "following_url": "https://api.github.com/users/arunaharsa/following{/other_user}", "gists_url": "https://api.github.com/users/arunaharsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/arunaharsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arunaharsa/subscriptions", "organizations_url": "https://api.github.com/users/arunaharsa/orgs", "repos_url": "https://api.github.com/users/arunaharsa/repos", "events_url": "https://api.github.com/users/arunaharsa/events{/privacy}", "received_events_url": "https://api.github.com/users/arunaharsa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-28T12:26:26Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2016-09-13T10:06:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, can you help me with the following:\n- lets say I run migrate\n- django_cachalot monkey_patch will run, to invalidate cache\n- however i received `redis.exceptions.ConnectionError: Error 111 connecting to None:6379. Connection refused` --> it happened because django-cachalot still looking for redis at :6379, while my application used redis through different endpoint, lets say SOME_OTHER_REDIS_URL (stated in my app settings.py)\n\nHave been running over the place, but can't find out why the application setting did not apply (it used default settings). This behavior does not exist in normal caching operation, only when I run from management console, eg. manage.py migrate or manage.py invalidate_cachalot\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/48", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/48/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/48/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/48", "id": 145879011, "node_id": "MDU6SXNzdWUxNDU4NzkwMTE=", "number": 48, "title": "tiny documentation error", "user": {"login": "MattBroach", "id": 4779301, "node_id": "MDQ6VXNlcjQ3NzkzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4779301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattBroach", "html_url": "https://github.com/MattBroach", "followers_url": "https://api.github.com/users/MattBroach/followers", "following_url": "https://api.github.com/users/MattBroach/following{/other_user}", "gists_url": "https://api.github.com/users/MattBroach/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattBroach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattBroach/subscriptions", "organizations_url": "https://api.github.com/users/MattBroach/orgs", "repos_url": "https://api.github.com/users/MattBroach/repos", "events_url": "https://api.github.com/users/MattBroach/events{/privacy}", "received_events_url": "https://api.github.com/users/MattBroach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196505312, "node_id": "MDU6TGFiZWwxOTY1MDUzMTI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/documentation", "name": "documentation", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-05T03:53:51Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2016-05-31T12:03:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Only just because I literally **just** had to deal with this issue on my server, I thought I'd point out: in the part of your documentation about memcached size limit issues, the limit per cache key command actually requires a unit.  Setting the max cache size to 10MB would be `-I 10m`, not `-I 10`.  It's weirdly inconsistent, because the units are **not** used with the overall max memory (the `-m 1000` to set the overall max it 1GB is correct), but there you have it.\n\nThis seemed like too minor a thing to make a PR over, but I wanted to give you a heads up.  Otherwise, thanks for the great work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/47", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/47/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/47/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/47", "id": 144983396, "node_id": "MDU6SXNzdWUxNDQ5ODMzOTY=", "number": 47, "title": "Cache Invalidation Problem in DRF", "user": {"login": "lishenzhi", "id": 645091, "node_id": "MDQ6VXNlcjY0NTA5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/645091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lishenzhi", "html_url": "https://github.com/lishenzhi", "followers_url": "https://api.github.com/users/lishenzhi/followers", "following_url": "https://api.github.com/users/lishenzhi/following{/other_user}", "gists_url": "https://api.github.com/users/lishenzhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/lishenzhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lishenzhi/subscriptions", "organizations_url": "https://api.github.com/users/lishenzhi/orgs", "repos_url": "https://api.github.com/users/lishenzhi/repos", "events_url": "https://api.github.com/users/lishenzhi/events{/privacy}", "received_events_url": "https://api.github.com/users/lishenzhi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-31T18:38:33Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2016-07-21T20:06:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using cachalot with Django Rest Framework and redis. One viewset has a complicated queryset, with slecte_related and prefetch_related. post in this viewset did not invalidate the existing cached queries. I am using redis master/slave setup. Is this the problem?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/46", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/46/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/46/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/46", "id": 133274983, "node_id": "MDU6SXNzdWUxMzMyNzQ5ODM=", "number": 46, "title": "Cache invalidation problems with asynchronous tasks", "user": {"login": "rahulmuraliqllabscom", "id": 13839559, "node_id": "MDQ6VXNlcjEzODM5NTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/13839559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahulmuraliqllabscom", "html_url": "https://github.com/rahulmuraliqllabscom", "followers_url": "https://api.github.com/users/rahulmuraliqllabscom/followers", "following_url": "https://api.github.com/users/rahulmuraliqllabscom/following{/other_user}", "gists_url": "https://api.github.com/users/rahulmuraliqllabscom/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahulmuraliqllabscom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahulmuraliqllabscom/subscriptions", "organizations_url": "https://api.github.com/users/rahulmuraliqllabscom/orgs", "repos_url": "https://api.github.com/users/rahulmuraliqllabscom/repos", "events_url": "https://api.github.com/users/rahulmuraliqllabscom/events{/privacy}", "received_events_url": "https://api.github.com/users/rahulmuraliqllabscom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-02-12T15:53:32Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2016-02-19T07:11:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using celery with django for some asynchronous tasks but now I find that  when table row is updates by a  celery worker process  cachalot is not invalidating the cache\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/45", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/45/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/45/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/45", "id": 132912388, "node_id": "MDU6SXNzdWUxMzI5MTIzODg=", "number": 45, "title": "Cache not being invalidated under a specific server config", "user": {"login": "danielsamuels", "id": 1781176, "node_id": "MDQ6VXNlcjE3ODExNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1781176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielsamuels", "html_url": "https://github.com/danielsamuels", "followers_url": "https://api.github.com/users/danielsamuels/followers", "following_url": "https://api.github.com/users/danielsamuels/following{/other_user}", "gists_url": "https://api.github.com/users/danielsamuels/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielsamuels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielsamuels/subscriptions", "organizations_url": "https://api.github.com/users/danielsamuels/orgs", "repos_url": "https://api.github.com/users/danielsamuels/repos", "events_url": "https://api.github.com/users/danielsamuels/events{/privacy}", "received_events_url": "https://api.github.com/users/danielsamuels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-11T08:01:40Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2016-02-12T08:11:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two servers running, one is the main application server, the other is a task runner. Each server has it's own memcached instance for storing data related to it's own tasks, but both servers talk to the same database.\n\nIf I add data to the database in the task runner, it doesn't appear in the Django admin on the app server until the cache is cleared - I assume because the task runner is clearing it's own memcached data, not that of the application server.\n\nWhat's the best fix for this? I can't pool the memcache instances together, as the task runner is at 100% CPU, 100% of the time, so I don't want to risk slow gets on the application from it being in the pool.\n\nIs my best option for my task runner server to just use the memcached instance of the application and not maintain it's own?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/44", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/44/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/44/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/44", "id": 125964631, "node_id": "MDU6SXNzdWUxMjU5NjQ2MzE=", "number": 44, "title": "Python2.7 compatibility", "user": {"login": "MrChoclate", "id": 4561963, "node_id": "MDQ6VXNlcjQ1NjE5NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4561963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrChoclate", "html_url": "https://github.com/MrChoclate", "followers_url": "https://api.github.com/users/MrChoclate/followers", "following_url": "https://api.github.com/users/MrChoclate/following{/other_user}", "gists_url": "https://api.github.com/users/MrChoclate/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrChoclate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrChoclate/subscriptions", "organizations_url": "https://api.github.com/users/MrChoclate/orgs", "repos_url": "https://api.github.com/users/MrChoclate/repos", "events_url": "https://api.github.com/users/MrChoclate/events{/privacy}", "received_events_url": "https://api.github.com/users/MrChoclate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-11T15:08:16Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2016-01-18T18:28:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running a dummy test (django TestCase with just pass) with tox. It works on python34 but fails with python27.\n\nI got this error:\n\n```\nFile \"manage.py\", line 10, in <module>\n  execute_from_command_line(sys.argv)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n  utility.execute()\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/__init__.py\", line 330, in execute\n  self.fetch_command(subcommand).run_from_argv(self.argv)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/commands/test.py\", line 30, in run_from_argv\n  super(Command, self).run_from_argv(argv)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/base.py\", line 390, in run_from_argv\n  self.execute(*args, **cmd_options)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/commands/test.py\", line 74, in execute\n  super(Command, self).execute(*args, **options)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/base.py\", line 441, in execute\n  output = self.handle(*args, **options)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/commands/test.py\", line 90, in handle\n  failures = test_runner.run_tests(test_labels)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django_nose/runner.py\", line 403, in run_tests\n  result = self.run_suite(nose_argv)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django_nose/runner.py\", line 335, in run_suite\n  addplugins=plugins_to_add)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/nose/core.py\", line 121, in __init__\n  **extra_args)\nFile \"/usr/lib64/python2.7/unittest/main.py\", line 95, in __init__\n  self.runTests()\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/nose/core.py\", line 207, in runTests\n  result = self.testRunner.run(self.test)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/nose/core.py\", line 50, in run\n  wrapper = self.config.plugins.prepareTest(test)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/nose/plugins/manager.py\", line 99, in __call__\n  return self.call(*arg, **kw)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/nose/plugins/manager.py\", line 167, in simple\n  result = meth(*arg, **kw)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django_nose/plugin.py\", line 82, in prepareTest\n  self.old_names = self.runner.setup_databases()\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django_nose/runner.py\", line 590, in setup_databases\n  return super(NoseTestSuiteRunner, self).setup_databases()\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/test/runner.py\", line 166, in setup_databases\n  **kwargs\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/test/runner.py\", line 370, in setup_databases\n  serialize=connection.settings_dict.get(\"TEST\", {}).get(\"SERIALIZE\", True),\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/db/backends/base/creation.py\", line 368, in create_test_db\n  test_flush=not keepdb,\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/__init__.py\", line 120, in call_command\n  return command.execute(*args, **defaults)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/base.py\", line 441, in execute\n  output = self.handle(*args, **options)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 225, in handle\n  emit_post_migrate_signal(created_models, self.verbosity, self.interactive, connection.alias)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/core/management/sql.py\", line 280, in emit_post_migrate_signal\n  using=db)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/dispatch/dispatcher.py\", line 201, in send\n  response = receiver(signal=self, sender=sender, **named)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/contrib/auth/management/__init__.py\", line 82, in create_permissions\n  ctype = ContentType.objects.db_manager(using).get_for_model(klass)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/contrib/contenttypes/models.py\", line 65, in get_for_model\n  ct = self.get(app_label=opts.app_label, model=opts.model_name)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/db/models/manager.py\", line 127, in manager_method\n  return getattr(self.get_queryset(), name)(*args, **kwargs)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/db/models/query.py\", line 328, in get\n  num = len(clone)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/db/models/query.py\", line 144, in __len__\n  self._fetch_all()\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/db/models/query.py\", line 965, in _fetch_all\n  self._result_cache = list(self.iterator())\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/django/db/models/query.py\", line 238, in iterator\n  results = compiler.execute_sql()\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/cachalot/monkey_patch.py\", line 29, in inner\n  out = original(compiler, *args, **kwargs)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/cachalot/monkey_patch.py\", line 85, in inner\n  cache_key, table_cache_keys)\nFile \"/home/choclate/documents/projects/web/myproject/.tox/py27/lib/python2.7/site-packages/cachalot/monkey_patch.py\", line 53, in _get_result_or_execute_query\n  timestamp, result = data.pop(cache_key)\nTypeError: 'NoneType' object is not iterable\n```\n\nI use memcached. I think test is only setting up the database, so I don't understand why cachalot code is executed. `_get_result_or_execute_query` is not executed with python34.\n\nWithout setting cachalot in django app, test works with python27.\n\nAny ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/42", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/42/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/42/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/42", "id": 124362211, "node_id": "MDU6SXNzdWUxMjQzNjIyMTE=", "number": 42, "title": "Support for django_pylibmc (Heroku)?", "user": {"login": "lakshbhasin", "id": 1183879, "node_id": "MDQ6VXNlcjExODM4Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1183879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lakshbhasin", "html_url": "https://github.com/lakshbhasin", "followers_url": "https://api.github.com/users/lakshbhasin/followers", "following_url": "https://api.github.com/users/lakshbhasin/following{/other_user}", "gists_url": "https://api.github.com/users/lakshbhasin/gists{/gist_id}", "starred_url": "https://api.github.com/users/lakshbhasin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lakshbhasin/subscriptions", "organizations_url": "https://api.github.com/users/lakshbhasin/orgs", "repos_url": "https://api.github.com/users/lakshbhasin/repos", "events_url": "https://api.github.com/users/lakshbhasin/events{/privacy}", "received_events_url": "https://api.github.com/users/lakshbhasin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 132752623, "node_id": "MDU6TGFiZWwxMzI3NTI2MjM=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-12-30T15:34:30Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2016-01-12T11:33:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there. I was looking to use django-cachalot with a Django site I've deployed on Heroku. I'm using the third-party [django_pylibmc](https://github.com/django-pylibmc/django-pylibmc) package to make use of Heroku's Memcached addon, because Django's default pylibmc (i.e. `django.core.cache.backends.memcached.PyLibMCCache`) does not support the binary protocol (see [this StackOverflow post](http://stackoverflow.com/questions/17663169/configuring-django-cache-machine-on-heroku-memcachier) and [this DjangoProject ticket](https://code.djangoproject.com/ticket/15815)). With the django_pylibmc package, I am able to get my Heroku site working with Memcachier.\n\nUnfortunately, django_pylibmc does not work with django-cachalot. When I run `heroku run python manage.py migrate`, I get the following error message:\n\n```\n(cachalot.E001) `django_pylibmc.memcached.PyLibMCCache` is not compatible with django-cachalot.\n```\n\nAre there any plans for supporting django_pylibmc? I'd really love it if I could use django-cachalot on my Heroku site, since it seems to be a very robust and useful package.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/41", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/41/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/41/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/41", "id": 122843618, "node_id": "MDU6SXNzdWUxMjI4NDM2MTg=", "number": 41, "title": "Django 1.9 error", "user": {"login": "puterleat", "id": 368269, "node_id": "MDQ6VXNlcjM2ODI2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/368269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puterleat", "html_url": "https://github.com/puterleat", "followers_url": "https://api.github.com/users/puterleat/followers", "following_url": "https://api.github.com/users/puterleat/following{/other_user}", "gists_url": "https://api.github.com/users/puterleat/gists{/gist_id}", "starred_url": "https://api.github.com/users/puterleat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puterleat/subscriptions", "organizations_url": "https://api.github.com/users/puterleat/orgs", "repos_url": "https://api.github.com/users/puterleat/repos", "events_url": "https://api.github.com/users/puterleat/events{/privacy}", "received_events_url": "https://api.github.com/users/puterleat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-17T23:13:44Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2015-12-18T16:16:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I realise django 1.8 is only just supported, but wanted to give you a heads up on this error one gets when running cachalot 1.1 with django 1.9:\n\n```\n  Traceback (most recent call last):\n    File \"./manage.py\", line 12, in <module>\n      execute_from_command_line(sys.argv)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/__init__.py\", line 350, in execute_from_command_line\n      utility.execute()\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/__init__.py\", line 342, in execute\n      self.fetch_command(subcommand).run_from_argv(self.argv)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n      self.execute(*args, **cmd_options)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/base.py\", line 399, in execute\n      output = self.handle(*args, **options)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/commands/migrate.py\", line 83, in handle\n      verbosity=self.verbosity,\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/__init__.py\", line 119, in call_command\n      return command.execute(*args, **defaults)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/base.py\", line 399, in execute\n      output = self.handle(*args, **options)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/commands/showmigrations.py\", line 36, in handle\n      return self.show_list(connection, options['app_labels'])\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/core/management/commands/showmigrations.py\", line 44, in show_list\n      loader = MigrationLoader(connection, ignore_no_migrations=True)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/db/migrations/loader.py\", line 49, in __init__\n      self.build_graph()\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/db/migrations/loader.py\", line 176, in build_graph\n      self.applied_migrations = recorder.applied_migrations()\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/db/migrations/recorder.py\", line 66, in applied_migrations\n      return set(tuple(x) for x in self.migration_qs.values_list(\"app\", \"name\"))\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/db/models/query.py\", line 258, in __iter__\n      self._fetch_all()\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/db/models/query.py\", line 1074, in _fetch_all\n      self._result_cache = list(self.iterator())\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/db/models/query.py\", line 128, in __iter__\n      for row in compiler.results_iter():\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/django/db/models/sql/compiler.py\", line 806, in results_iter\n      results = self.execute_sql(MULTI)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/cachalot/monkey_patch.py\", line 29, in inner\n      out = original(compiler, *args, **kwargs)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/cachalot/monkey_patch.py\", line 77, in inner\n      table_cache_keys = _get_table_cache_keys(compiler)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/cachalot/utils.py\", line 147, in _get_table_cache_keys\n      tables = _get_tables(compiler.query, db_alias)\n    File \"/Users/foo/envs/sbox3000/lib/python3.4/site-packages/cachalot/utils.py\", line 128, in _get_tables\n      + query.having.children)\n  AttributeError: 'Query' object has no attribute 'having'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/39", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/39/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/39/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/39", "id": 121700803, "node_id": "MDU6SXNzdWUxMjE3MDA4MDM=", "number": 39, "title": "Unable to run the tests without pytz", "user": {"login": "xino12", "id": 1876430, "node_id": "MDQ6VXNlcjE4NzY0MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1876430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xino12", "html_url": "https://github.com/xino12", "followers_url": "https://api.github.com/users/xino12/followers", "following_url": "https://api.github.com/users/xino12/following{/other_user}", "gists_url": "https://api.github.com/users/xino12/gists{/gist_id}", "starred_url": "https://api.github.com/users/xino12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xino12/subscriptions", "organizations_url": "https://api.github.com/users/xino12/orgs", "repos_url": "https://api.github.com/users/xino12/repos", "events_url": "https://api.github.com/users/xino12/events{/privacy}", "received_events_url": "https://api.github.com/users/xino12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-11T12:37:09Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2015-12-18T11:38:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if you are aware and it's something done on purpose but if you clone the repository and try to run the tests you get a misleading error that says that cachalot has not module tests.\n\nThat's because when importint cachalot.tests there an error that the pytz packet is missing. It would be nice to have it in the file runtests_requirements_py2.txt.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/37", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/37/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/37/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/37", "id": 121494193, "node_id": "MDU6SXNzdWUxMjE0OTQxOTM=", "number": 37, "title": "Invalidation of data stored in a primary/replica configured DB invalidates only for primary instance", "user": {"login": "micku", "id": 159038, "node_id": "MDQ6VXNlcjE1OTAzOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micku", "html_url": "https://github.com/micku", "followers_url": "https://api.github.com/users/micku/followers", "following_url": "https://api.github.com/users/micku/following{/other_user}", "gists_url": "https://api.github.com/users/micku/gists{/gist_id}", "starred_url": "https://api.github.com/users/micku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micku/subscriptions", "organizations_url": "https://api.github.com/users/micku/orgs", "repos_url": "https://api.github.com/users/micku/repos", "events_url": "https://api.github.com/users/micku/events{/privacy}", "received_events_url": "https://api.github.com/users/micku/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196505312, "node_id": "MDU6TGFiZWwxOTY1MDUzMTI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/documentation", "name": "documentation", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-12-10T14:14:32Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2015-12-19T01:59:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Django app with two MariaDB databases configured as primary/replica with the following configuration:\n\n```\nDATABASE_ROUTERS = ['app.db_replica.PrimaryReplicaRouter', ]\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'app',\n        'USER': 'app',\n        'PASSWORD': '*******************',\n        'HOST': 'mysql-master',\n    },\n    'replica1': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'app',\n        'USER': 'app',\n        'PASSWORD': '*******************',\n        'HOST': 'mysql-slave',\n    },\n}\n```\n\nThe router is configured to write on primary and read on replica:\n\n```\nclass PrimaryReplicaRouter(object):\n    def db_for_read(self, model, **hints):\n        return 'replica1'\n\n    def db_for_write(self, model, **hints):\n        return 'default'\n\n    def allow_relation(self, obj1, obj2, **hints):\n        db_list = ('default', 'replica1')\n        if obj1._state.db in db_list and obj2._state.db in db_list:\n            return True\n        return None\n\n    def allow_migrate(self, db, app_label, model=None, **hints):\n        return True\n```\n\nWhen Django writes on a table, cache gets invalidated only on primary.\nYou can test this by configuring the router to randomly return the primary or the replica, you will see old and new value alternated refreshing the page.\n\nCalling `./manage.py invalidate_cachalot` works, I think because it invalidates all the cache ignoring the database instance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/34", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/34/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/34/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/34", "id": 118082134, "node_id": "MDU6SXNzdWUxMTgwODIxMzQ=", "number": 34, "title": "How to monitor requests?", "user": {"login": "softshape", "id": 107505, "node_id": "MDQ6VXNlcjEwNzUwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/107505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/softshape", "html_url": "https://github.com/softshape", "followers_url": "https://api.github.com/users/softshape/followers", "following_url": "https://api.github.com/users/softshape/following{/other_user}", "gists_url": "https://api.github.com/users/softshape/gists{/gist_id}", "starred_url": "https://api.github.com/users/softshape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/softshape/subscriptions", "organizations_url": "https://api.github.com/users/softshape/orgs", "repos_url": "https://api.github.com/users/softshape/repos", "events_url": "https://api.github.com/users/softshape/events{/privacy}", "received_events_url": "https://api.github.com/users/softshape/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-20T16:57:58Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2015-12-14T12:25:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to monitor how much requests django-cachalot reads from cache and how much passes to DB backend? I've just setup django-cachalot and can't really feel the difference, so I want to be sure it really works as supposed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/33", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/33/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/33/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/33", "id": 117734176, "node_id": "MDU6SXNzdWUxMTc3MzQxNzY=", "number": 33, "title": "django.db.models.loading.get_models will be removed in Django 1.9", "user": {"login": "jjmontalbo", "id": 251724, "node_id": "MDQ6VXNlcjI1MTcyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/251724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjmontalbo", "html_url": "https://github.com/jjmontalbo", "followers_url": "https://api.github.com/users/jjmontalbo/followers", "following_url": "https://api.github.com/users/jjmontalbo/following{/other_user}", "gists_url": "https://api.github.com/users/jjmontalbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjmontalbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjmontalbo/subscriptions", "organizations_url": "https://api.github.com/users/jjmontalbo/orgs", "repos_url": "https://api.github.com/users/jjmontalbo/repos", "events_url": "https://api.github.com/users/jjmontalbo/events{/privacy}", "received_events_url": "https://api.github.com/users/jjmontalbo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-19T03:34:35Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2015-12-15T09:37:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "`django.db.models.loading.get_models` will be removed in Django 1.9. In my Django 1.8.6 installation, the following warning is thrown:\n\n```\n/home/xxx/.virtualenvs/xxx/local/lib/python2.7/site-packages/cachalot/panels.py:10: RemovedInDjango19Warning: The utilities in django.db.models.loading are deprecated in favor of the new application loading system.\n  from django.db.models.loading import get_models\n```\n\n`django.apps.apps.get_models` is the equivalent function in Django 1.7+.\n\n```\n>> from django.db.models import loading\n>> from django.apps import apps\n>> apps.get_models() == loading.get_models()\nTrue\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/30", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/30/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/30/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/30", "id": 110159051, "node_id": "MDU6SXNzdWUxMTAxNTkwNTE=", "number": 30, "title": "Don't cache the admin UI queries?", "user": {"login": "lee-kagiso", "id": 11830393, "node_id": "MDQ6VXNlcjExODMwMzkz", "avatar_url": "https://avatars3.githubusercontent.com/u/11830393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lee-kagiso", "html_url": "https://github.com/lee-kagiso", "followers_url": "https://api.github.com/users/lee-kagiso/followers", "following_url": "https://api.github.com/users/lee-kagiso/following{/other_user}", "gists_url": "https://api.github.com/users/lee-kagiso/gists{/gist_id}", "starred_url": "https://api.github.com/users/lee-kagiso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lee-kagiso/subscriptions", "organizations_url": "https://api.github.com/users/lee-kagiso/orgs", "repos_url": "https://api.github.com/users/lee-kagiso/repos", "events_url": "https://api.github.com/users/lee-kagiso/events{/privacy}", "received_events_url": "https://api.github.com/users/lee-kagiso/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-07T06:14:50Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2015-10-16T20:16:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are noticing that our cache is 3 times the size of our database, and as it is on Heroku it is getting very expensive. \n\nCould this be due to caching admin UI queries? We only want to cache the user facing parts of our site (news articles/typical CMS stuff), and something is amiss...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/29", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/29/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/29/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/29", "id": 104883316, "node_id": "MDU6SXNzdWUxMDQ4ODMzMTY=", "number": 29, "title": "Add a whitelist", "user": {"login": "orf", "id": 1027207, "node_id": "MDQ6VXNlcjEwMjcyMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1027207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orf", "html_url": "https://github.com/orf", "followers_url": "https://api.github.com/users/orf/followers", "following_url": "https://api.github.com/users/orf/following{/other_user}", "gists_url": "https://api.github.com/users/orf/gists{/gist_id}", "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orf/subscriptions", "organizations_url": "https://api.github.com/users/orf/orgs", "repos_url": "https://api.github.com/users/orf/repos", "events_url": "https://api.github.com/users/orf/events{/privacy}", "received_events_url": "https://api.github.com/users/orf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-04T12:39:48Z", "updated_at": "2018-05-05T00:28:42Z", "closed_at": "2015-10-05T18:26:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a blacklist of tables that shouldn't be cached, can we get a whitelist as well?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/28", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/28/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/28/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/28", "id": 102030157, "node_id": "MDU6SXNzdWUxMDIwMzAxNTc=", "number": 28, "title": "\"wrong number of arguments for 'mset' command\" when using redis", "user": {"login": "nchampsavoir", "id": 1867462, "node_id": "MDQ6VXNlcjE4Njc0NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1867462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nchampsavoir", "html_url": "https://github.com/nchampsavoir", "followers_url": "https://api.github.com/users/nchampsavoir/followers", "following_url": "https://api.github.com/users/nchampsavoir/following{/other_user}", "gists_url": "https://api.github.com/users/nchampsavoir/gists{/gist_id}", "starred_url": "https://api.github.com/users/nchampsavoir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nchampsavoir/subscriptions", "organizations_url": "https://api.github.com/users/nchampsavoir/orgs", "repos_url": "https://api.github.com/users/nchampsavoir/repos", "events_url": "https://api.github.com/users/nchampsavoir/events{/privacy}", "received_events_url": "https://api.github.com/users/nchampsavoir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-08-20T00:27:57Z", "updated_at": "2019-08-12T08:11:14Z", "closed_at": "2015-10-04T21:11:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nWhen using redis and Dango 1.8, I've got the following exception : \"wrong number of arguments for 'mset' command\"\n\nThe stack trace shows that in cachalot/transaction.py line 34:\n\n> _invalidate_table_cache_keys(self.parent_cache, self.to_be_invalidated)\n\nself.to_be_invalidated is []\n\nwhich makes line 133 of cachalot/utils.py \n\n> cache.set_many(d, None)\n\nraise an exception because d is none and Redis does not support \"mset\" with no arguments.\n\nAny ideas before I try to investigate further ? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/27", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/27/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/27/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/27", "id": 99171769, "node_id": "MDU6SXNzdWU5OTE3MTc2OQ==", "number": 27, "title": "Django 1.8 support", "user": {"login": "maryokhin", "id": 4390231, "node_id": "MDQ6VXNlcjQzOTAyMzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4390231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maryokhin", "html_url": "https://github.com/maryokhin", "followers_url": "https://api.github.com/users/maryokhin/followers", "following_url": "https://api.github.com/users/maryokhin/following{/other_user}", "gists_url": "https://api.github.com/users/maryokhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/maryokhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maryokhin/subscriptions", "organizations_url": "https://api.github.com/users/maryokhin/orgs", "repos_url": "https://api.github.com/users/maryokhin/repos", "events_url": "https://api.github.com/users/maryokhin/events{/privacy}", "received_events_url": "https://api.github.com/users/maryokhin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/noripyt/django-cachalot/milestones/2", "html_url": "https://github.com/noripyt/django-cachalot/milestone/2", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/milestones/2/labels", "id": 1055341, "node_id": "MDk6TWlsZXN0b25lMTA1NTM0MQ==", "number": 2, "title": "Django 1.8 support", "description": "", "creator": {"login": "BertrandBordage", "id": 1119169, "node_id": "MDQ6VXNlcjExMTkxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1119169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BertrandBordage", "html_url": "https://github.com/BertrandBordage", "followers_url": "https://api.github.com/users/BertrandBordage/followers", "following_url": "https://api.github.com/users/BertrandBordage/following{/other_user}", "gists_url": "https://api.github.com/users/BertrandBordage/gists{/gist_id}", "starred_url": "https://api.github.com/users/BertrandBordage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BertrandBordage/subscriptions", "organizations_url": "https://api.github.com/users/BertrandBordage/orgs", "repos_url": "https://api.github.com/users/BertrandBordage/repos", "events_url": "https://api.github.com/users/BertrandBordage/events{/privacy}", "received_events_url": "https://api.github.com/users/BertrandBordage/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2015-04-06T23:40:46Z", "updated_at": "2018-01-26T10:38:10Z", "due_on": null, "closed_at": "2018-01-26T10:38:10Z"}, "comments": 38, "created_at": "2015-08-05T10:11:24Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-10-28T19:15:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just wanted to bring some clarity whether `django-cachalot` in it's current state supports Django 1.8 or not. I tried running the package on Django 1.8, and while it's not crashing anything, I see that `django1.8` branch hasn't been merged to master and is failing the [build](https://travis-ci.org/BertrandBordage/django-cachalot/builds/58034259). So maybe some update for the community about this would be good from you. Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/26", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/26/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/26/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/26", "id": 98849938, "node_id": "MDU6SXNzdWU5ODg0OTkzOA==", "number": 26, "title": "Exception, when app without models is migrated", "user": {"login": "devoto13", "id": 823594, "node_id": "MDQ6VXNlcjgyMzU5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/823594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devoto13", "html_url": "https://github.com/devoto13", "followers_url": "https://api.github.com/users/devoto13/followers", "following_url": "https://api.github.com/users/devoto13/following{/other_user}", "gists_url": "https://api.github.com/users/devoto13/gists{/gist_id}", "starred_url": "https://api.github.com/users/devoto13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devoto13/subscriptions", "organizations_url": "https://api.github.com/users/devoto13/orgs", "repos_url": "https://api.github.com/users/devoto13/repos", "events_url": "https://api.github.com/users/devoto13/events{/privacy}", "received_events_url": "https://api.github.com/users/devoto13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-03T22:27:57Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-10-04T20:28:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I get following exception, when try to run `./manage.py migrate`:\n\n```\nTraceback (most recent call last):\n  File \"/Applications/PyCharm.app/Contents/helpers/pydev/pydevd.py\", line 2358, in <module>\n    globals = debugger.run(setup['file'], None, None, is_module)\n  File \"/Applications/PyCharm.app/Contents/helpers/pydev/pydevd.py\", line 1778, in run\n    pydev_imports.execfile(file, globals, locals)  # execute the script\n  File \"/Applications/PyCharm.app/Contents/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc) \n  File \"manage.py\", line 17, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/django/core/management/__init__.py\", line 377, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/django/core/management/base.py\", line 338, in execute\n    output = self.handle(*args, **options)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/django/core/management/commands/migrate.py\", line 165, in handle\n    emit_post_migrate_signal(created_models, self.verbosity, self.interactive, connection.alias)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/django/core/management/sql.py\", line 268, in emit_post_migrate_signal\n    using=db)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/django/dispatch/dispatcher.py\", line 198, in send\n    response = receiver(signal=self, sender=sender, **named)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/cachalot/monkey_patch.py\", line 161, in _invalidate_on_migration\n    invalidate_models(sender.get_models(), db_alias=kwargs['using'])\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/cachalot/api.py\", line 66, in invalidate_models\n    cache_alias, db_alias)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/cachalot/api.py\", line 47, in invalidate_tables\n    _invalidate_table_cache_keys(cache, table_cache_keys)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/cachalot/utils.py\", line 133, in _invalidate_table_cache_keys\n    cache.set_many(d, None)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/redis_cache/backends/single.py\", line 67, in set_many\n    return self._set_many(self.master_client, new_data)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/redis_cache/backends/base.py\", line 315, in _set_many\n    return client.mset(data)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/redis/client.py\", line 940, in mset\n    return self.execute_command('MSET', *items)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/redis/client.py\", line 565, in execute_command\n    return self.parse_response(connection, command_name, **options)\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/redis/client.py\", line 577, in parse_response\n    response = connection.read_response()\n  File \"/Users/devoto13/.virtualenvs/backend/lib/python3.4/site-packages/redis/connection.py\", line 574, in read_response\n    raise response\nredis.exceptions.ResponseError: wrong number of arguments for 'mset' command\n```\n\nThe problems seems to be in the `_invalidate_table_cache_keys()`, when it receives empty sequence as a second argument. And issues exists for all apps without models.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/23", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/23/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/23/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/23", "id": 94320872, "node_id": "MDU6SXNzdWU5NDMyMDg3Mg==", "number": 23, "title": "Ability to set a prefix", "user": {"login": "karthikbgl", "id": 944553, "node_id": "MDQ6VXNlcjk0NDU1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/944553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karthikbgl", "html_url": "https://github.com/karthikbgl", "followers_url": "https://api.github.com/users/karthikbgl/followers", "following_url": "https://api.github.com/users/karthikbgl/following{/other_user}", "gists_url": "https://api.github.com/users/karthikbgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/karthikbgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karthikbgl/subscriptions", "organizations_url": "https://api.github.com/users/karthikbgl/orgs", "repos_url": "https://api.github.com/users/karthikbgl/repos", "events_url": "https://api.github.com/users/karthikbgl/events{/privacy}", "received_events_url": "https://api.github.com/users/karthikbgl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-10T14:45:02Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-07-10T16:14:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not an issue - but an enhancement request. \n\nWas wondering if there could a setting which allows to set a cache key prefix? It would help in debugging, etc..  (well to a certain extent at least)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/22", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/22/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/22/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/22", "id": 94095551, "node_id": "MDU6SXNzdWU5NDA5NTU1MQ==", "number": 22, "title": "Unable to disable cache on a per-database basis.", "user": {"login": "danielsamuels", "id": 1781176, "node_id": "MDQ6VXNlcjE3ODExNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1781176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielsamuels", "html_url": "https://github.com/danielsamuels", "followers_url": "https://api.github.com/users/danielsamuels/followers", "following_url": "https://api.github.com/users/danielsamuels/following{/other_user}", "gists_url": "https://api.github.com/users/danielsamuels/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielsamuels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielsamuels/subscriptions", "organizations_url": "https://api.github.com/users/danielsamuels/orgs", "repos_url": "https://api.github.com/users/danielsamuels/repos", "events_url": "https://api.github.com/users/danielsamuels/events{/privacy}", "received_events_url": "https://api.github.com/users/danielsamuels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752622, "node_id": "MDU6TGFiZWwxMzI3NTI2MjI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-09T16:33:06Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-07-09T17:52:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I currently have a project with two database connections; a PostgreSQL database for all the usual Django things and an external MySQL data we're using to pull data from.  If objects get deleted from the external MySQL database using that provider's tools (not though Django) django-cachalot (obviously) doesn't know that's happened and continues to return data which no longer exists (and messes up some of the Django logic).  What would be great is if we could disable cachalot on the MySQL database, but keep it on the Django one - is this possible?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/21", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/21/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/21/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/21", "id": 88785398, "node_id": "MDU6SXNzdWU4ODc4NTM5OA==", "number": 21, "title": "Potential bug when using django.contrib.gis", "user": {"login": "ebrelsford", "id": 375002, "node_id": "MDQ6VXNlcjM3NTAwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/375002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrelsford", "html_url": "https://github.com/ebrelsford", "followers_url": "https://api.github.com/users/ebrelsford/followers", "following_url": "https://api.github.com/users/ebrelsford/following{/other_user}", "gists_url": "https://api.github.com/users/ebrelsford/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrelsford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrelsford/subscriptions", "organizations_url": "https://api.github.com/users/ebrelsford/orgs", "repos_url": "https://api.github.com/users/ebrelsford/repos", "events_url": "https://api.github.com/users/ebrelsford/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrelsford/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-06-16T17:11:28Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-06-19T17:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apologies for the vagueness here, I've looked at this a bit and plan on coming back to it, but I thought I'd write this down in case you have any ideas.\n\n[These lines](https://github.com/596acres/nycdata/blob/master/nycdata/nycha/views.py#L33-L36) in my Django site return inconsistent and incorrect results. They count the number of model instances within a geometry represented in another instance. I'm relatively sure the issue has to do with `django-cachalot` since [invalidating the model cache before each query](https://github.com/596acres/nycdata/blob/master/nycdata/nycha/views.py#L22-L28) fixes the problem.\n\nEach time the sql is the same, and the parameters will be something like this:\n\n```\n('*', 41, True, True, 'private', True, 3, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x7fcd2a807790>, True)\n```\n\nMy hunch right now is that the `PostGISAdapter` gets SHAed to the same value sometimes as it is reused even for different geometries, so the cache key is the same for multiple queries that use different geometries.\n\nPlease let me know if there's more info I can provide, and what you might suggest I look at next.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/19", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/19/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/19/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/19", "id": 74144687, "node_id": "MDU6SXNzdWU3NDE0NDY4Nw==", "number": 19, "title": "Add documentation on time syncing", "user": {"login": "josephdrose", "id": 2589613, "node_id": "MDQ6VXNlcjI1ODk2MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2589613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephdrose", "html_url": "https://github.com/josephdrose", "followers_url": "https://api.github.com/users/josephdrose/followers", "following_url": "https://api.github.com/users/josephdrose/following{/other_user}", "gists_url": "https://api.github.com/users/josephdrose/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephdrose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephdrose/subscriptions", "organizations_url": "https://api.github.com/users/josephdrose/orgs", "repos_url": "https://api.github.com/users/josephdrose/repos", "events_url": "https://api.github.com/users/josephdrose/events{/privacy}", "received_events_url": "https://api.github.com/users/josephdrose/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196505312, "node_id": "MDU6TGFiZWwxOTY1MDUzMTI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/documentation", "name": "documentation", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-07T22:13:18Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-05-08T12:42:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since the current time is used to determine validity of table cache keys, it's important that when deploying against multiple application servers, they all have time synchronized.  I'd like to suggest adding this to the docs somewhere prominently.\n\nEven a few seconds difference was enough to cause issues for us in production.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/18", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/18/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/18/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/18", "id": 69321812, "node_id": "MDU6SXNzdWU2OTMyMTgxMg==", "number": 18, "title": "Add a template tag to get the last invalidation timestamp for given model(s)", "user": {"login": "BertrandBordage", "id": 1119169, "node_id": "MDQ6VXNlcjExMTkxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1119169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BertrandBordage", "html_url": "https://github.com/BertrandBordage", "followers_url": "https://api.github.com/users/BertrandBordage/followers", "following_url": "https://api.github.com/users/BertrandBordage/following{/other_user}", "gists_url": "https://api.github.com/users/BertrandBordage/gists{/gist_id}", "starred_url": "https://api.github.com/users/BertrandBordage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BertrandBordage/subscriptions", "organizations_url": "https://api.github.com/users/BertrandBordage/orgs", "repos_url": "https://api.github.com/users/BertrandBordage/repos", "events_url": "https://api.github.com/users/BertrandBordage/events{/privacy}", "received_events_url": "https://api.github.com/users/BertrandBordage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-18T15:59:46Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-10-24T18:26:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Such a template tag could be extremely useful for partial template caching. Something like:\n\n``` HTML+Django\n{% load cachalot cache %}\n\n{% get_last_invalidation auth.User yourapp.YourModel as last_invalidation %}\n{% cache 86400 cache_key last_invalidation %}\n    [\u2026]\n{% endcache %}\n```\n\nAmongst the invalidation timestamps of all the specified model names, the closest from now is returned. If no timestamp is found, we return a naive `now()` instead of `None`.\n\nThat way, this part of the template is updated when data changes the table `auth_user` or `yourapp_yourmodel`.\n\nThe Python equivalent could be added to the API.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/17", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/17/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/17/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/17", "id": 69142421, "node_id": "MDU6SXNzdWU2OTE0MjQyMQ==", "number": 17, "title": "Thoughts on post cache invalidation signals?", "user": {"login": "harshil07", "id": 1494933, "node_id": "MDQ6VXNlcjE0OTQ5MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1494933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshil07", "html_url": "https://github.com/harshil07", "followers_url": "https://api.github.com/users/harshil07/followers", "following_url": "https://api.github.com/users/harshil07/following{/other_user}", "gists_url": "https://api.github.com/users/harshil07/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshil07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshil07/subscriptions", "organizations_url": "https://api.github.com/users/harshil07/orgs", "repos_url": "https://api.github.com/users/harshil07/repos", "events_url": "https://api.github.com/users/harshil07/events{/privacy}", "received_events_url": "https://api.github.com/users/harshil07/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-04-17T13:46:57Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-04-17T18:11:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would love to be able to do some extra logic on invalidation of cache.\nI was personally thinking it could be useful to invalidate api/response caches on query cache invalidations but would love to hear other use cases and see if this is a good thing to do in the first place. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/15", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/15/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/15/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/15", "id": 67692572, "node_id": "MDU6SXNzdWU2NzY5MjU3Mg==", "number": 15, "title": "TypeError: 'NoneType' object is not iterable", "user": {"login": "shakey-uk", "id": 3966813, "node_id": "MDQ6VXNlcjM5NjY4MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3966813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakey-uk", "html_url": "https://github.com/shakey-uk", "followers_url": "https://api.github.com/users/shakey-uk/followers", "following_url": "https://api.github.com/users/shakey-uk/following{/other_user}", "gists_url": "https://api.github.com/users/shakey-uk/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakey-uk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakey-uk/subscriptions", "organizations_url": "https://api.github.com/users/shakey-uk/orgs", "repos_url": "https://api.github.com/users/shakey-uk/repos", "events_url": "https://api.github.com/users/shakey-uk/events{/privacy}", "received_events_url": "https://api.github.com/users/shakey-uk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-04-10T22:02:05Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-04-10T22:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "running django-cachalot with Django 1.8, memcached and ElastiCache\n\nFile \"/opt/python/run/venv/lib/python2.7/site-packages/cachalot/monkey_patch.py\", line 57, in _get_result_or_execute_query \nnew_table_cache_keys.difference_update(data) \nTypeError: 'NoneType' object is not iterable\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/14", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/14/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/14/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/14", "id": 67692404, "node_id": "MDU6SXNzdWU2NzY5MjQwNA==", "number": 14, "title": "500 response on cache miss", "user": {"login": "shakey-uk", "id": 3966813, "node_id": "MDQ6VXNlcjM5NjY4MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3966813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakey-uk", "html_url": "https://github.com/shakey-uk", "followers_url": "https://api.github.com/users/shakey-uk/followers", "following_url": "https://api.github.com/users/shakey-uk/following{/other_user}", "gists_url": "https://api.github.com/users/shakey-uk/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakey-uk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakey-uk/subscriptions", "organizations_url": "https://api.github.com/users/shakey-uk/orgs", "repos_url": "https://api.github.com/users/shakey-uk/repos", "events_url": "https://api.github.com/users/shakey-uk/events{/privacy}", "received_events_url": "https://api.github.com/users/shakey-uk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-04-10T22:00:48Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-04-10T22:13:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "running django-cachalot with Django 1.8, memcached and ElastiCache\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/13", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/13/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/13/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/13", "id": 66730565, "node_id": "MDU6SXNzdWU2NjczMDU2NQ==", "number": 13, "title": "Huge SQL query reaches memcached size limit per key", "user": {"login": "gfairchild", "id": 2835900, "node_id": "MDQ6VXNlcjI4MzU5MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2835900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfairchild", "html_url": "https://github.com/gfairchild", "followers_url": "https://api.github.com/users/gfairchild/followers", "following_url": "https://api.github.com/users/gfairchild/following{/other_user}", "gists_url": "https://api.github.com/users/gfairchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfairchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfairchild/subscriptions", "organizations_url": "https://api.github.com/users/gfairchild/orgs", "repos_url": "https://api.github.com/users/gfairchild/repos", "events_url": "https://api.github.com/users/gfairchild/events{/privacy}", "received_events_url": "https://api.github.com/users/gfairchild/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196505312, "node_id": "MDU6TGFiZWwxOTY1MDUzMTI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/documentation", "name": "documentation", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2015-04-06T23:29:14Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-04-10T22:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, I'm using Django 1.8, Python 3.4.3, Postgres 9.3.x, and memcached 1.4.4 with pylibmc.\n\nI have a form on my site that has a jQuery autocomplete box. This is used to for selecting locations (we have roughly ~13k locations in our database - continents, countries, states, and cities). Here's the view:\n\n```\ndef location_query(request):\n    # first handle the location autocomplete\n    if request.is_ajax():\n        term = request.GET['term']\n\n        # I want to explicitly order matching countries at the front of the list\n        matching_countries = Location.get_countries().filter(full_name__icontains=term)\n        matching_states = Location.get_states().filter(full_name__icontains=term)\n        matching_cities = Location.get_cities().filter(full_name__icontains=term)\n\n        matching_locations = list()\n        matching_locations.extend(matching_countries)\n        matching_locations.extend(matching_states)\n        matching_locations.extend(matching_cities)\n\n        locations_json = list()\n        for matching_location in matching_locations[:10]:\n            location_json = dict()\n            location_json['id'] = matching_location.pk\n            location_json['label'] = '%s (%s)' % (matching_location.full_name, matching_location.admin_level)\n            location_json['value'] = matching_location.pk\n            locations_json.append(location_json)\n\n        return JsonResponse(locations_json, safe=False)\n```\n\nAnd here's the `Location` model:\n\n```\nclass Location(models.Model):\n    name = models.CharField(max_length=255)\n    full_name = models.CharField(max_length=255, blank=True)  # the name might be \"Paris\", but full_name would be \"Paris, Texas, United States of America\"; allowed to be blank only because the script that populates this table will fill it in after all locations are added\n    imported_from = models.CharField(max_length=255)\n    admin_level = models.CharField(max_length=255, blank=True)\n    geometry = models.MultiPolygonField(blank=True, default=None, null=True)\n    objects = models.GeoManager()  # override the default manager with a GeoManager instance\n    parent = models.ForeignKey('self', blank=True, default=None, null=True)\n\n    def __str__(self):\n        return self.full_name\n\n    def get_full_name(self, include_continent=False):\n        \"\"\"\n            Get the full name of a location. This includes the entire hierarchy, optionally including the continent.\n                e.g., Paris, Texas, United States of America\n        \"\"\"\n        full_name = self.name\n        current_parent = self.parent\n        while current_parent is not None and (include_continent or (not include_continent and current_parent.parent is not None)):\n            full_name += ', ' + current_parent.name\n            current_parent = current_parent.parent\n        return full_name\n\n    def get_country(self):\n        if self.admin_level == 'Country':\n            return self.name\n        return self.parent.get_country()\n\n    @staticmethod\n    def get_continents():\n        return Location.objects.filter(parent=None).order_by('name')\n\n    @staticmethod\n    def get_countries(continent=None):\n        if continent:\n            # return a single continent's countries, sorted\n            return Location.objects.filter(parent=continent).order_by('name')\n        else:\n            # return all countries, sorted\n            return Location.objects.filter(admin_level='Country').order_by('name')\n\n    @staticmethod\n    def get_states(country=None):\n        if country:\n            # return a single country's states, sorted\n            return Location.objects.filter(parent=country).order_by('name')\n        else:\n            # return all states, sorted\n            return Location.objects.filter(admin_level='State').order_by('name')\n\n    @staticmethod\n    def get_cities(state=None):\n        if state:\n            # return a single state's cities, sorted\n            return Location.objects.filter(parent=state).order_by('name')\n        else:\n            # return all cities, sorted\n            return Location.objects.filter(admin_level='City').order_by('name')\n\n    @staticmethod\n    def get_non_continents():\n        return Location.objects.exclude(parent=None).order_by('name')\n\n    class Meta:\n        ordering = ['full_name']\n```\n\nWhen I disable cachalot by commenting out the line in `INSTALLED_APPS`, the autocomplete works. When I enable it, it doesn't work. Other things on my site do indeed work, and the DDT panel shows that cachalot is doing its job. Can it deal with ajax calls like this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/12", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/12/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/12/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/12", "id": 65879864, "node_id": "MDU6SXNzdWU2NTg3OTg2NA==", "number": 12, "title": "RemovedInDjango19Warning", "user": {"login": "toxinu", "id": 293337, "node_id": "MDQ6VXNlcjI5MzMzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/293337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toxinu", "html_url": "https://github.com/toxinu", "followers_url": "https://api.github.com/users/toxinu/followers", "following_url": "https://api.github.com/users/toxinu/following{/other_user}", "gists_url": "https://api.github.com/users/toxinu/gists{/gist_id}", "starred_url": "https://api.github.com/users/toxinu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toxinu/subscriptions", "organizations_url": "https://api.github.com/users/toxinu/orgs", "repos_url": "https://api.github.com/users/toxinu/repos", "events_url": "https://api.github.com/users/toxinu/events{/privacy}", "received_events_url": "https://api.github.com/users/toxinu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/noripyt/django-cachalot/milestones/2", "html_url": "https://github.com/noripyt/django-cachalot/milestone/2", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/milestones/2/labels", "id": 1055341, "node_id": "MDk6TWlsZXN0b25lMTA1NTM0MQ==", "number": 2, "title": "Django 1.8 support", "description": "", "creator": {"login": "BertrandBordage", "id": 1119169, "node_id": "MDQ6VXNlcjExMTkxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1119169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BertrandBordage", "html_url": "https://github.com/BertrandBordage", "followers_url": "https://api.github.com/users/BertrandBordage/followers", "following_url": "https://api.github.com/users/BertrandBordage/following{/other_user}", "gists_url": "https://api.github.com/users/BertrandBordage/gists{/gist_id}", "starred_url": "https://api.github.com/users/BertrandBordage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BertrandBordage/subscriptions", "organizations_url": "https://api.github.com/users/BertrandBordage/orgs", "repos_url": "https://api.github.com/users/BertrandBordage/repos", "events_url": "https://api.github.com/users/BertrandBordage/events{/privacy}", "received_events_url": "https://api.github.com/users/BertrandBordage/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2015-04-06T23:40:46Z", "updated_at": "2018-01-26T10:38:10Z", "due_on": null, "closed_at": "2018-01-26T10:38:10Z"}, "comments": 4, "created_at": "2015-04-02T08:38:58Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-04-11T00:50:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running django-cachalot with Django 1.8 `./manage.py test`:\n\n```\nCreating test database for alias 'default'...\n/home/socketubs/.virtualenvs/bounty-o-matic/lib/python3.4/site-packages/cachalot/cache.py:34: RemovedInDjango19Warning: 'get_cache' is deprecated in favor of 'caches'.\n    return get_django_cache(cache_alias)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/11", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/11/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/11/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/11", "id": 65108322, "node_id": "MDU6SXNzdWU2NTEwODMyMg==", "number": 11, "title": "Adding 'cachalot' to INSTALLED_APPS makes test suite four times slower", "user": {"login": "ramiro", "id": 40661, "node_id": "MDQ6VXNlcjQwNjYx", "avatar_url": "https://avatars1.githubusercontent.com/u/40661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramiro", "html_url": "https://github.com/ramiro", "followers_url": "https://api.github.com/users/ramiro/followers", "following_url": "https://api.github.com/users/ramiro/following{/other_user}", "gists_url": "https://api.github.com/users/ramiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramiro/subscriptions", "organizations_url": "https://api.github.com/users/ramiro/orgs", "repos_url": "https://api.github.com/users/ramiro/repos", "events_url": "https://api.github.com/users/ramiro/events{/privacy}", "received_events_url": "https://api.github.com/users/ramiro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-29T23:46:30Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-06-19T20:19:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are evaluating django-cachalot. We are using:\n- django-cachalot 1.0.0\n- Django 1.6.8\n- Postgres 9.3 and 9.4\n\nOther possibly relevant package we use is django-transaction-hooks 0.2.\n\nWe noticed that when we have `'cachalot'` present in `INSTALLED_APPS` our test suite run time goes to 600+ seconds. Commenting it out makes that go back to 160+ seconds.\n\n(Found this trying to debug some lockups we are seeing in our CI environment when:\n- Running the full South migration history\n- Running our test suite\n\nwhich made us to go back and run the test suite in our local development environment.)\n\nCaching backend is memcached. Memory assigned to it with  `-m` doesn't seem to have any influence in observed behavior.\n\nI'll try to isolate the test cases which actually are the ones that get slower, in the meanwhile I wanted to open this issue because the slowdown happens even when the `CACHALOT_ENABLED` setting is False.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/10", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/10/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/10/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/10", "id": 64044711, "node_id": "MDU6SXNzdWU2NDA0NDcxMQ==", "number": 10, "title": "Support for pre 1.7 not correct", "user": {"login": "palm86", "id": 3036645, "node_id": "MDQ6VXNlcjMwMzY2NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3036645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palm86", "html_url": "https://github.com/palm86", "followers_url": "https://api.github.com/users/palm86/followers", "following_url": "https://api.github.com/users/palm86/following{/other_user}", "gists_url": "https://api.github.com/users/palm86/gists{/gist_id}", "starred_url": "https://api.github.com/users/palm86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palm86/subscriptions", "organizations_url": "https://api.github.com/users/palm86/orgs", "repos_url": "https://api.github.com/users/palm86/repos", "events_url": "https://api.github.com/users/palm86/events{/privacy}", "received_events_url": "https://api.github.com/users/palm86/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752621, "node_id": "MDU6TGFiZWwxMzI3NTI2MjE=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-24T16:44:53Z", "updated_at": "2018-05-05T00:28:41Z", "closed_at": "2015-03-24T17:13:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following after applying a migration in 1.6:\n\ndb_alias = kwargs['using'] if django_version >= (1, 7) else kwargs['db']\nKeyError: u'db'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/7", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/7/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/7/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/7", "id": 57712260, "node_id": "MDU6SXNzdWU1NzcxMjI2MA==", "number": 7, "title": "default redis maxmemory-policy considered harmful", "user": {"login": "stefantalpalaru", "id": 495550, "node_id": "MDQ6VXNlcjQ5NTU1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/495550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefantalpalaru", "html_url": "https://github.com/stefantalpalaru", "followers_url": "https://api.github.com/users/stefantalpalaru/followers", "following_url": "https://api.github.com/users/stefantalpalaru/following{/other_user}", "gists_url": "https://api.github.com/users/stefantalpalaru/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefantalpalaru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefantalpalaru/subscriptions", "organizations_url": "https://api.github.com/users/stefantalpalaru/orgs", "repos_url": "https://api.github.com/users/stefantalpalaru/repos", "events_url": "https://api.github.com/users/stefantalpalaru/events{/privacy}", "received_events_url": "https://api.github.com/users/stefantalpalaru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 196505312, "node_id": "MDU6TGFiZWwxOTY1MDUzMTI=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/documentation", "name": "documentation", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-02-15T00:31:50Z", "updated_at": "2018-05-05T00:28:40Z", "closed_at": "2015-02-16T19:06:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please specify somewhere in the documentation that if redis is used as the caching backend, its \"maxmemory-policy\" settings should be changed to \"allkeys-lru\" otherwise you risk OOM exceptions bringing the site down.\n\n(the default \"volatile-lru\" will not remove the keys set by cachalot without an expiry interval)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/6", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/6/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/6/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/6", "id": 53866286, "node_id": "MDU6SXNzdWU1Mzg2NjI4Ng==", "number": 6, "title": "Django-CMS,sqlite, cachalot, memcached , apache, - site lock", "user": {"login": "Troyhy", "id": 587882, "node_id": "MDQ6VXNlcjU4Nzg4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/587882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Troyhy", "html_url": "https://github.com/Troyhy", "followers_url": "https://api.github.com/users/Troyhy/followers", "following_url": "https://api.github.com/users/Troyhy/following{/other_user}", "gists_url": "https://api.github.com/users/Troyhy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Troyhy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Troyhy/subscriptions", "organizations_url": "https://api.github.com/users/Troyhy/orgs", "repos_url": "https://api.github.com/users/Troyhy/repos", "events_url": "https://api.github.com/users/Troyhy/events{/privacy}", "received_events_url": "https://api.github.com/users/Troyhy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 177617629, "node_id": "MDU6TGFiZWwxNzc2MTc2Mjk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/needs%20info", "name": "needs info", "color": "fad8c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-01-09T13:12:11Z", "updated_at": "2018-05-05T00:28:40Z", "closed_at": "2015-02-23T19:59:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "We experienced weird hangups of our test site with configuration mentioned in title.\nThere was 2 users making edits in Django-CMS  and 4 times we had to restart application because it was locked.\nSite started to serve content, but never returned anything, until restart of wsgi process. Apache was happily serving other django sites. With only one person editing there were no problems.\nThis locking occurred only after configuring cachalot.\n\nSorry I cannot be more specific on  this issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/5", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/5/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/5/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/5", "id": 52322125, "node_id": "MDU6SXNzdWU1MjMyMjEyNQ==", "number": 5, "title": "Docs benchmarks should state which versions were used", "user": {"login": "artscoop", "id": 1023091, "node_id": "MDQ6VXNlcjEwMjMwOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1023091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artscoop", "html_url": "https://github.com/artscoop", "followers_url": "https://api.github.com/users/artscoop/followers", "following_url": "https://api.github.com/users/artscoop/following{/other_user}", "gists_url": "https://api.github.com/users/artscoop/gists{/gist_id}", "starred_url": "https://api.github.com/users/artscoop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artscoop/subscriptions", "organizations_url": "https://api.github.com/users/artscoop/orgs", "repos_url": "https://api.github.com/users/artscoop/repos", "events_url": "https://api.github.com/users/artscoop/events{/privacy}", "received_events_url": "https://api.github.com/users/artscoop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-18T03:35:22Z", "updated_at": "2018-05-05T00:28:40Z", "closed_at": "2015-02-16T20:33:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI've had a look at the benchmarks but this is unclear which versions of SQLite, MySQL and PostgreSQL were used. Postgres seems slow compared to the others, thus I kept wondering \"is this 8.4 ?\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/2", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/2/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/2/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/2", "id": 44612623, "node_id": "MDU6SXNzdWU0NDYxMjYyMw==", "number": 2, "title": "pip install fails", "user": {"login": "chripede", "id": 406836, "node_id": "MDQ6VXNlcjQwNjgzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/406836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chripede", "html_url": "https://github.com/chripede", "followers_url": "https://api.github.com/users/chripede/followers", "following_url": "https://api.github.com/users/chripede/following{/other_user}", "gists_url": "https://api.github.com/users/chripede/gists{/gist_id}", "starred_url": "https://api.github.com/users/chripede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chripede/subscriptions", "organizations_url": "https://api.github.com/users/chripede/orgs", "repos_url": "https://api.github.com/users/chripede/repos", "events_url": "https://api.github.com/users/chripede/events{/privacy}", "received_events_url": "https://api.github.com/users/chripede/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752617, "node_id": "MDU6TGFiZWwxMzI3NTI2MTc=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-01T20:08:10Z", "updated_at": "2018-05-05T00:28:40Z", "closed_at": "2014-10-01T20:15:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nDownloading/unpacking django-cachalot\n  Downloading django-cachalot-0.4.0.tar.gz\n  Running setup.py (path:/home/hp/.virtualenvs/project/build/django-cachalot/setup.py) egg_info for package django-cachalot\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/home/hp/.virtualenvs/project/build/django-cachalot/setup.py\", line 10, in <module>\n        with open(os.path.join(CURRENT_PATH, 'requirements.txt')) as f:\n    IOError: [Errno 2] No such file or directory: '/home/hp/.virtualenvs/project/build/django-cachalot/requirements.txt'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/home/hp/.virtualenvs/project/build/django-cachalot/setup.py\", line 10, in <module>\n\n    with open(os.path.join(CURRENT_PATH, 'requirements.txt')) as f:\n\nIOError: [Errno 2] No such file or directory: '/home/hp/.virtualenvs/project/build/django-cachalot/requirements.txt'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noripyt/django-cachalot/issues/1", "repository_url": "https://api.github.com/repos/noripyt/django-cachalot", "labels_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/1/comments", "events_url": "https://api.github.com/repos/noripyt/django-cachalot/issues/1/events", "html_url": "https://github.com/noripyt/django-cachalot/issues/1", "id": 44479305, "node_id": "MDU6SXNzdWU0NDQ3OTMwNQ==", "number": 1, "title": "Easy control over cache keys", "user": {"login": "owais", "id": 46186, "node_id": "MDQ6VXNlcjQ2MTg2", "avatar_url": "https://avatars0.githubusercontent.com/u/46186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/owais", "html_url": "https://github.com/owais", "followers_url": "https://api.github.com/users/owais/followers", "following_url": "https://api.github.com/users/owais/following{/other_user}", "gists_url": "https://api.github.com/users/owais/gists{/gist_id}", "starred_url": "https://api.github.com/users/owais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/owais/subscriptions", "organizations_url": "https://api.github.com/users/owais/orgs", "repos_url": "https://api.github.com/users/owais/repos", "events_url": "https://api.github.com/users/owais/events{/privacy}", "received_events_url": "https://api.github.com/users/owais/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 132752619, "node_id": "MDU6TGFiZWwxMzI3NTI2MTk=", "url": "https://api.github.com/repos/noripyt/django-cachalot/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-09-30T18:02:24Z", "updated_at": "2018-05-05T00:28:40Z", "closed_at": "2014-10-30T03:40:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since this is still in beta, I would like to point out 1 thing most caching libraries miss out on. Easily lets devs influence the cache key generation. This is useful for a lot of situations but mostly useful for SaaS apps that use multi-tenant (or multi-schema) architecture. Same table+id combination does not always mean the same row in such scenarios as there can be multiple schemas and in some cases even databases.\n", "performed_via_github_app": null, "score": 1.0}]}