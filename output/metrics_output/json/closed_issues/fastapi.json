{"total_count": 1052, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1929", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1929/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1929/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1929/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1929", "id": 682672355, "node_id": "MDU6SXNzdWU2ODI2NzIzNTU=", "number": 1929, "title": "Wrong route in FastAPi", "user": {"login": "Misteur54", "id": 36649312, "node_id": "MDQ6VXNlcjM2NjQ5MzEy", "avatar_url": "https://avatars3.githubusercontent.com/u/36649312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Misteur54", "html_url": "https://github.com/Misteur54", "followers_url": "https://api.github.com/users/Misteur54/followers", "following_url": "https://api.github.com/users/Misteur54/following{/other_user}", "gists_url": "https://api.github.com/users/Misteur54/gists{/gist_id}", "starred_url": "https://api.github.com/users/Misteur54/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Misteur54/subscriptions", "organizations_url": "https://api.github.com/users/Misteur54/orgs", "repos_url": "https://api.github.com/users/Misteur54/repos", "events_url": "https://api.github.com/users/Misteur54/events{/privacy}", "received_events_url": "https://api.github.com/users/Misteur54/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-20T12:25:17Z", "updated_at": "2020-08-21T01:27:12Z", "closed_at": "2020-08-21T01:09:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello I would like to know how to override the function that manages non-existing route, I can't find anything on the internet or I don't understand at all how to do it because I've tried everything I think.\r\n\r\nIf someone can help me to change the message \r\n{\r\n    \"detail\": \"Not Found\"\r\n}\r\n\r\nwhen you try to contact the server with a bad route or / and method\r\n\r\nThank you very much.\r\nBest regards,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1928", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1928/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1928/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1928/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1928", "id": 682643481, "node_id": "MDU6SXNzdWU2ODI2NDM0ODE=", "number": 1928, "title": "How to specify a generic route_path", "user": {"login": "mrcl", "id": 1720697, "node_id": "MDQ6VXNlcjE3MjA2OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1720697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrcl", "html_url": "https://github.com/mrcl", "followers_url": "https://api.github.com/users/mrcl/followers", "following_url": "https://api.github.com/users/mrcl/following{/other_user}", "gists_url": "https://api.github.com/users/mrcl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrcl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrcl/subscriptions", "organizations_url": "https://api.github.com/users/mrcl/orgs", "repos_url": "https://api.github.com/users/mrcl/repos", "events_url": "https://api.github.com/users/mrcl/events{/privacy}", "received_events_url": "https://api.github.com/users/mrcl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-20T11:35:50Z", "updated_at": "2020-08-20T23:07:16Z", "closed_at": "2020-08-20T23:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Example\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/items\")\r\ndef read_items():\r\n    return {\"items\": []}\r\n\r\n@app.get(\"/other_items\")\r\ndef read_other_items():\r\n    return {\"other_items\": []}\r\n\r\n@app.get(\"/\") # how to make this route_path to catch anything else other than \"/items/\" or \"other_items\"\r\ndef read_generic_response():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n### Description\r\n\r\nAs shown in the example above I would like to set a route_path that to catch anything else other than \"/items/\" or \"other_items\"\r\n\r\nI tried to force route.path_regex to be something more generic, but that overrode the other route_paths\r\n\r\n### Example\r\n\r\n```python\r\nfor route in app.router.routes:\r\n    if isinstance(route, Route) and route.path_regex.pattern == r'^/$':\r\n        route.path_regex = re.compile('^/([\\w+]?/?)+$')\r\n```\r\n\r\nAny help would be great", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1925", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1925/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1925/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1925/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1925", "id": 682131335, "node_id": "MDU6SXNzdWU2ODIxMzEzMzU=", "number": 1925, "title": "How to send video files in response?", "user": {"login": "robsteneha", "id": 48321065, "node_id": "MDQ6VXNlcjQ4MzIxMDY1", "avatar_url": "https://avatars0.githubusercontent.com/u/48321065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robsteneha", "html_url": "https://github.com/robsteneha", "followers_url": "https://api.github.com/users/robsteneha/followers", "following_url": "https://api.github.com/users/robsteneha/following{/other_user}", "gists_url": "https://api.github.com/users/robsteneha/gists{/gist_id}", "starred_url": "https://api.github.com/users/robsteneha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robsteneha/subscriptions", "organizations_url": "https://api.github.com/users/robsteneha/orgs", "repos_url": "https://api.github.com/users/robsteneha/repos", "events_url": "https://api.github.com/users/robsteneha/events{/privacy}", "received_events_url": "https://api.github.com/users/robsteneha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-19T19:43:29Z", "updated_at": "2020-08-19T21:39:30Z", "closed_at": "2020-08-19T21:39:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "My issue is that I want to take a video as an input perform object detection on it and return the resulting video in the response.\r\nI am using UploadFile for taking the input video file but I don't know how to send back a video as a response.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1920", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1920/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1920/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1920/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1920", "id": 681859525, "node_id": "MDU6SXNzdWU2ODE4NTk1MjU=", "number": 1920, "title": "Security example in tutorial raise bad request", "user": {"login": "JanhSander", "id": 63044278, "node_id": "MDQ6VXNlcjYzMDQ0Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/63044278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JanhSander", "html_url": "https://github.com/JanhSander", "followers_url": "https://api.github.com/users/JanhSander/followers", "following_url": "https://api.github.com/users/JanhSander/following{/other_user}", "gists_url": "https://api.github.com/users/JanhSander/gists{/gist_id}", "starred_url": "https://api.github.com/users/JanhSander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JanhSander/subscriptions", "organizations_url": "https://api.github.com/users/JanhSander/orgs", "repos_url": "https://api.github.com/users/JanhSander/repos", "events_url": "https://api.github.com/users/JanhSander/events{/privacy}", "received_events_url": "https://api.github.com/users/JanhSander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-19T13:53:51Z", "updated_at": "2020-08-21T23:34:02Z", "closed_at": "2020-08-21T09:32:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "* OS: Windows 10 enterprise\r\n* FastAPI Version 0.60.1\r\n* Python version: 3.8.5\r\n\r\nI have followed the tutorial example:\r\nhttps://fastapi.tiangolo.com/tutorial/security/simple-oauth2/\r\nWhen I try \"See it in action\" I get \"Bad request\".\r\n![Skjermbilde](https://user-images.githubusercontent.com/63044278/90643661-1e22df00-e234-11ea-9f38-0dbdb068a90e.JPG)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1910", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1910/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1910/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1910/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1910", "id": 680409171, "node_id": "MDU6SXNzdWU2ODA0MDkxNzE=", "number": 1910, "title": "Change default value for pydantic custom property in swagger docs", "user": {"login": "floriansaul", "id": 9013010, "node_id": "MDQ6VXNlcjkwMTMwMTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9013010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/floriansaul", "html_url": "https://github.com/floriansaul", "followers_url": "https://api.github.com/users/floriansaul/followers", "following_url": "https://api.github.com/users/floriansaul/following{/other_user}", "gists_url": "https://api.github.com/users/floriansaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/floriansaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/floriansaul/subscriptions", "organizations_url": "https://api.github.com/users/floriansaul/orgs", "repos_url": "https://api.github.com/users/floriansaul/repos", "events_url": "https://api.github.com/users/floriansaul/events{/privacy}", "received_events_url": "https://api.github.com/users/floriansaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-17T17:39:42Z", "updated_at": "2020-08-17T18:36:50Z", "closed_at": "2020-08-17T17:48:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have built custom types to validate with pydantic in keeping with [https://pydantic-docs.helpmanual.io/usage/types/#custom-data-types](their docs)\r\n\r\nI want to have the defaults for these types show up as something compatible in the swagger docs. \r\nBelow is an example of what I have currently.\r\n\r\n```\r\n  \"info\": {\r\n    \"date_of_birth\": \"string\",\r\n    \"gender\": \"string\",\r\n    \"weight\": 0,\r\n    \"height\": 0,\r\n    \"phone\": \"string\"\r\n}\r\n```\r\n\r\nfor \"phone\" I have a custom type defined, the pydantic model is like this\r\n```\r\nclass UserInfo(BaseModel):\r\n\tdate_of_birth: Optional[str] = None\r\n\tgender: Optional[str] = None\r\n\tweight: Optional[int] = None\r\n\theight: Optional[int] = None\r\n\tphone: PhoneNumber\r\n\taddress: Address\r\n```\r\n\r\nHow do I change the default text \"string\" to something else in the docs? I could do this\r\n```\r\n\tclass Config:\r\n\t\tschema_extra = {\r\n\t\t\t\"example\": {\r\n                            ....\r\n\t\t\t}\r\n\t\t}\r\n```\r\n\r\nIn the model but that wouldn't change it in all cases, just here, and I don't need to overwrite all the defaults necessarily, just the phone one. \r\n\r\nThanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1891", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1891/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1891/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1891/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1891", "id": 678604261, "node_id": "MDU6SXNzdWU2Nzg2MDQyNjE=", "number": 1891, "title": "Issue: Fatal Python error: Cannot recover from stack overflow.", "user": {"login": "imadmoussa1", "id": 20532475, "node_id": "MDQ6VXNlcjIwNTMyNDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/20532475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imadmoussa1", "html_url": "https://github.com/imadmoussa1", "followers_url": "https://api.github.com/users/imadmoussa1/followers", "following_url": "https://api.github.com/users/imadmoussa1/following{/other_user}", "gists_url": "https://api.github.com/users/imadmoussa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/imadmoussa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imadmoussa1/subscriptions", "organizations_url": "https://api.github.com/users/imadmoussa1/orgs", "repos_url": "https://api.github.com/users/imadmoussa1/repos", "events_url": "https://api.github.com/users/imadmoussa1/events{/privacy}", "received_events_url": "https://api.github.com/users/imadmoussa1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-08-13T17:09:23Z", "updated_at": "2020-08-20T07:11:13Z", "closed_at": "2020-08-14T07:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [ ] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorials in the docs and didn't find an answer.\r\n* [ ] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [ ] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [ ] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [ ] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask \r\n\r\n### Description\r\n\r\nI have this issue on my QA server, but I was not able to replicate it locally.\r\nMy code based on the latest version of https://github.com/tiangolo/full-stack-fastapi-postgresql using the base class in CRUD,\r\nthis error happened on the update function\r\n\r\n```\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nThread 0x00007f615d0c0700 (most recent call first):\r\n  File \"/usr/local/lib/python3.7/concurrent/futures/thread.py\", line 78 in _worker\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 870 in run\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nThread 0x00007f615d8c1700 (most recent call first):\r\n  File \"/usr/local/lib/python3.7/concurrent/futures/thread.py\", line 78 in _worker\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 870 in run\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nCurrent thread 0x00007f615e19f700 (most recent call first):\r\n  File \"<string>\", line 1 in <lambda>\r\n  File \"/usr/local/lib/python3.7/site-packages/sqlalchemy/sql/operators.py\", line 432 in __getitem__\r\n```\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: ubuntu\r\n* FastAPI Version [e.g. 0.3.0]:  0.61.0\r\n* Python version: 3.7\r\n\r\n### Additional context\r\n\r\n```\r\n  def update(self, db: Session, *, db_obj: ModelType, obj_in: Union[UpdateSchemaType, Dict[str, Any]]) -> ModelType:\r\n    obj_data = jsonable_encoder(db_obj)\r\n    if isinstance(obj_in, dict):\r\n      update_data = obj_in\r\n    else:\r\n      update_data = obj_in.dict(exclude_unset=True)\r\n    for field in obj_data:\r\n      if field in update_data:\r\n        setattr(db_obj, field, update_data[field])\r\n    db.add(db_obj)\r\n    db.commit()\r\n    db.refresh(db_obj)\r\n    return db_obj\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1890", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1890/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1890/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1890/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1890", "id": 678340107, "node_id": "MDU6SXNzdWU2NzgzNDAxMDc=", "number": 1890, "title": "Docker compose boilerplate", "user": {"login": "rakesh4real", "id": 45640029, "node_id": "MDQ6VXNlcjQ1NjQwMDI5", "avatar_url": "https://avatars0.githubusercontent.com/u/45640029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rakesh4real", "html_url": "https://github.com/rakesh4real", "followers_url": "https://api.github.com/users/rakesh4real/followers", "following_url": "https://api.github.com/users/rakesh4real/following{/other_user}", "gists_url": "https://api.github.com/users/rakesh4real/gists{/gist_id}", "starred_url": "https://api.github.com/users/rakesh4real/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rakesh4real/subscriptions", "organizations_url": "https://api.github.com/users/rakesh4real/orgs", "repos_url": "https://api.github.com/users/rakesh4real/repos", "events_url": "https://api.github.com/users/rakesh4real/events{/privacy}", "received_events_url": "https://api.github.com/users/rakesh4real/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-08-13T10:45:35Z", "updated_at": "2020-08-15T19:28:40Z", "closed_at": "2020-08-15T13:03:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCan anyone share working `docker-compose.yml` file for basic FastAPI code.\r\nPreferred if connected to PostgreSQL\r\n\r\nThanks,\r\nRakesh", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1883", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1883/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1883/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1883/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1883", "id": 677869206, "node_id": "MDU6SXNzdWU2Nzc4NjkyMDY=", "number": 1883, "title": "What am I missing on my test method? It works fine on docs section and on postman", "user": {"login": "Samvid95", "id": 11596480, "node_id": "MDQ6VXNlcjExNTk2NDgw", "avatar_url": "https://avatars1.githubusercontent.com/u/11596480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Samvid95", "html_url": "https://github.com/Samvid95", "followers_url": "https://api.github.com/users/Samvid95/followers", "following_url": "https://api.github.com/users/Samvid95/following{/other_user}", "gists_url": "https://api.github.com/users/Samvid95/gists{/gist_id}", "starred_url": "https://api.github.com/users/Samvid95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Samvid95/subscriptions", "organizations_url": "https://api.github.com/users/Samvid95/orgs", "repos_url": "https://api.github.com/users/Samvid95/repos", "events_url": "https://api.github.com/users/Samvid95/events{/privacy}", "received_events_url": "https://api.github.com/users/Samvid95/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-12T17:48:03Z", "updated_at": "2020-08-12T18:16:25Z", "closed_at": "2020-08-12T18:12:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have my` main.py` file: \r\n```\r\nimport json\r\nimport os\r\n\r\nfrom typing import Optional\r\nfrom fastapi import FastAPI, Query, HTTPException\r\n\r\nfrom PIL import Image\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/inference\")\r\nasync def read_inference(\r\n    imagePath : str = Query(\r\n        ...,\r\n        alias='imageName',\r\n        title='Image Path',\r\n        description='Relative path of the image for inferencing'\r\n        ),\r\n):\r\n    try:\r\n        # Loading image and getting image parameters\r\n        img = Image.open(imagePath)\r\n    except (OSError,IOError) as e:\r\n        raise HTTPException(status_code=404, detail=\"Unable to open image!\")\r\n\r\n    return \"Hello World!\"\r\n\r\n```\r\n\r\nWhen I tried to run this code with docs and postman with the following request. it works fine and gives me _404_ error code.\r\n`curl -X GET \"http://localhost:8500/inference?imageName=images%2Floss2.jpeg\" -H  \"accept: application/json\"`\r\n`http://localhost:8500/inference?imageName=images%2Floss.jpeg`\r\n\r\nBut I have this test file where I am testing this same thing but I am getting _422_ error code when running **_pytest._**\r\n\r\n```\r\nimport os,sys\r\nimport json\r\n\r\ncurrentdir = os.path.dirname(os.path.realpath(__file__))\r\nparentdir = os.path.dirname(currentdir)\r\n\r\nsys.path.append(parentdir)\r\nfrom fastapi.testclient import TestClient\r\n\r\nfrom main import app\r\n\r\nclient = TestClient(app)\r\n\r\n\r\ndef test_read_inference_invalid_images():\r\n    response = client.get(\"/inference\", headers={\"imageName\":\"images/loss.jpeg\"})\r\n    assert response.status_code == 404\r\n    assert response.json() == {\"detail\":\"Unable to open image!\"}\r\n\r\n# Running pytest gives me 422 error instead of 404 code.\r\n```\r\n\r\nI am not sure what I am missing on the testing side. \r\n\r\nI am using _fastAPI version 0.60.1_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1877", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1877/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1877/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1877/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1877", "id": 676997241, "node_id": "MDU6SXNzdWU2NzY5OTcyNDE=", "number": 1877, "title": "Minor CSS bug with codeblock highlighting", "user": {"login": "flapili", "id": 29481952, "node_id": "MDQ6VXNlcjI5NDgxOTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/29481952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flapili", "html_url": "https://github.com/flapili", "followers_url": "https://api.github.com/users/flapili/followers", "following_url": "https://api.github.com/users/flapili/following{/other_user}", "gists_url": "https://api.github.com/users/flapili/gists{/gist_id}", "starred_url": "https://api.github.com/users/flapili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flapili/subscriptions", "organizations_url": "https://api.github.com/users/flapili/orgs", "repos_url": "https://api.github.com/users/flapili/repos", "events_url": "https://api.github.com/users/flapili/events{/privacy}", "received_events_url": "https://api.github.com/users/flapili/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T15:58:43Z", "updated_at": "2020-08-20T14:40:18Z", "closed_at": "2020-08-20T14:40:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, there is a style bug on the online documentation.\r\nThe highlighting don't fill all the line when the codeblock have a scrollbar\r\n\r\n![Screenshot_2020-08-11-17-50-14-572_com opera browser](https://user-images.githubusercontent.com/29481952/89919542-b1885e80-dbfb-11ea-8b3c-79679b3e31c7.jpg)\r\n\r\nUnfortunaly I can't try to fix the CSS I don't have computer for a few more weeks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1876", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1876/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1876/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1876/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1876", "id": 676934280, "node_id": "MDU6SXNzdWU2NzY5MzQyODA=", "number": 1876, "title": "How to test in FastAPI that client calls correct method of endpoint?", "user": {"login": "FyZzyss", "id": 38393787, "node_id": "MDQ6VXNlcjM4MzkzNzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/38393787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FyZzyss", "html_url": "https://github.com/FyZzyss", "followers_url": "https://api.github.com/users/FyZzyss/followers", "following_url": "https://api.github.com/users/FyZzyss/following{/other_user}", "gists_url": "https://api.github.com/users/FyZzyss/gists{/gist_id}", "starred_url": "https://api.github.com/users/FyZzyss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FyZzyss/subscriptions", "organizations_url": "https://api.github.com/users/FyZzyss/orgs", "repos_url": "https://api.github.com/users/FyZzyss/repos", "events_url": "https://api.github.com/users/FyZzyss/events{/privacy}", "received_events_url": "https://api.github.com/users/FyZzyss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-11T14:40:43Z", "updated_at": "2020-08-19T09:54:11Z", "closed_at": "2020-08-19T09:54:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to create test with `pytest` which check that user calls correct method of endpoint.\r\nHow I can do this?\r\nP.S. I tried to do it on my own, but it doesn't work. My code will be below.\r\n**My test:**\r\n```\r\n@pytest.mark.unit\r\ndef test_get_best_authors(mocker: MockFixture):\r\n    test = mocker.spy(main, 'best_authors')  \r\n    response = client.get('/luchshie-avtori')\r\n    assert response.status_code == 200\r\n    test.assert_called_once()\r\n```\r\n**My main.py with endpoints:**\r\n```\r\n@app.get(\"/luchshie-avtori\")\r\nasync def best_authors():\r\n    return requests.get('', params={'return': 'json'}).json()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1865", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1865/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1865/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1865/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1865", "id": 675773803, "node_id": "MDU6SXNzdWU2NzU3NzM4MDM=", "number": 1865, "title": "Dependencies with optional parameters", "user": {"login": "victoraugustolls", "id": 7843637, "node_id": "MDQ6VXNlcjc4NDM2Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7843637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victoraugustolls", "html_url": "https://github.com/victoraugustolls", "followers_url": "https://api.github.com/users/victoraugustolls/followers", "following_url": "https://api.github.com/users/victoraugustolls/following{/other_user}", "gists_url": "https://api.github.com/users/victoraugustolls/gists{/gist_id}", "starred_url": "https://api.github.com/users/victoraugustolls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victoraugustolls/subscriptions", "organizations_url": "https://api.github.com/users/victoraugustolls/orgs", "repos_url": "https://api.github.com/users/victoraugustolls/repos", "events_url": "https://api.github.com/users/victoraugustolls/events{/privacy}", "received_events_url": "https://api.github.com/users/victoraugustolls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-08-09T21:18:06Z", "updated_at": "2020-08-10T21:00:27Z", "closed_at": "2020-08-10T21:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [X] I added a very descriptive title to this issue.\r\n* [X] I used the GitHub search to find a similar issue and didn't find it.\r\n* [X] I searched the FastAPI documentation, with the integrated search.\r\n* [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [X] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [X] After submitting this, I commit to:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * Or, I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Example\r\n\r\nHere's a self-contained [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Depends\r\n\r\napp = FastAPI()\r\n\r\n\r\ndef dependency(request: Request, check: bool = True):\r\n    pass\r\n\r\n\r\n@app.get(\"/1\")\r\ndef read_root(t = Depends(dependency, check=False)):\r\n    return {\"Hello\": \"World\"}\r\n\r\n@app.get(\"/2\")\r\ndef read_root(t = Depends(dependency)):\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n### Description\r\n\r\nI searched the docs and didn't find any reference of this being possible. Could this be done somehow with FastAPI today? Am I missing something?\r\n\r\nIf it is not possible today, how can this be implemented, I would gladly help with it.\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1854", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1854/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1854/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1854/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1854", "id": 675584195, "node_id": "MDU6SXNzdWU2NzU1ODQxOTU=", "number": 1854, "title": "How to download a non static file, which computed during run time?", "user": {"login": "soumendrak", "id": 10120538, "node_id": "MDQ6VXNlcjEwMTIwNTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/10120538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumendrak", "html_url": "https://github.com/soumendrak", "followers_url": "https://api.github.com/users/soumendrak/followers", "following_url": "https://api.github.com/users/soumendrak/following{/other_user}", "gists_url": "https://api.github.com/users/soumendrak/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumendrak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumendrak/subscriptions", "organizations_url": "https://api.github.com/users/soumendrak/orgs", "repos_url": "https://api.github.com/users/soumendrak/repos", "events_url": "https://api.github.com/users/soumendrak/events{/privacy}", "received_events_url": "https://api.github.com/users/soumendrak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-08T20:30:55Z", "updated_at": "2020-08-09T09:05:46Z", "closed_at": "2020-08-09T09:05:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1844", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1844/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1844/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1844/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1844", "id": 673794225, "node_id": "MDU6SXNzdWU2NzM3OTQyMjU=", "number": 1844, "title": "Function create_user in Docs/Tutorial/SQL (Relational) Databases not working", "user": {"login": "umitkaanusta", "id": 53405015, "node_id": "MDQ6VXNlcjUzNDA1MDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/53405015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umitkaanusta", "html_url": "https://github.com/umitkaanusta", "followers_url": "https://api.github.com/users/umitkaanusta/followers", "following_url": "https://api.github.com/users/umitkaanusta/following{/other_user}", "gists_url": "https://api.github.com/users/umitkaanusta/gists{/gist_id}", "starred_url": "https://api.github.com/users/umitkaanusta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umitkaanusta/subscriptions", "organizations_url": "https://api.github.com/users/umitkaanusta/orgs", "repos_url": "https://api.github.com/users/umitkaanusta/repos", "events_url": "https://api.github.com/users/umitkaanusta/events{/privacy}", "received_events_url": "https://api.github.com/users/umitkaanusta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-05T19:31:13Z", "updated_at": "2020-08-08T15:05:22Z", "closed_at": "2020-08-08T15:05:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Example\r\n\r\nThe code:\r\n\r\n```Python\r\n# Necessary imports are done\r\n\r\n@app.post(\"/users/\", response_model=schemas.User)\r\ndef create_user(user: schemas.UserCreate, db: Session = Depends(get_db)):\r\n    db_user = crud.get_user_by_email(db, email=user.email)\r\n    if db_user:\r\n        raise HTTPException(status_code=400, detail=\"Email already registered\")\r\n    return crud.create_user(db=db, user=user)\r\n```\r\n\r\n### Description\r\n\r\nThe function in the given part of the documentation is giving me the \"Email already taken\" error, even if I post unique emails in the request body.\r\n- Checked my version of schemas.py, models.py and database.py\r\n- Using yield dependencies since I have Python 3.7\r\n\r\n### Environment\r\n\r\n* OS: Windows 10 Home\r\n* FastAPI Version: 0.60.1\r\n* Python version: 3.7.4\r\n\r\n### Additional context\r\nManaged to solve the issue by changing the function as the following:\r\n\r\n```Python\r\n# Necessary imports are done\r\n@app.post(\"/users/\", response_model=schemas.User)\r\ndef create_user(user: schemas.UserCreate, db: Session = Depends(get_db)):\r\n    try:\r\n        return crud.create_user(db, user)\r\n    except IntegrityError:\r\n        raise HTTPException(status_code=400, detail=\"Email already taken\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1839", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1839/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1839/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1839/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1839", "id": 672819383, "node_id": "MDU6SXNzdWU2NzI4MTkzODM=", "number": 1839, "title": "[BUG] exclusiveMinimum not handled correctly", "user": {"login": "jeremyschiemann", "id": 24566692, "node_id": "MDQ6VXNlcjI0NTY2Njky", "avatar_url": "https://avatars2.githubusercontent.com/u/24566692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremyschiemann", "html_url": "https://github.com/jeremyschiemann", "followers_url": "https://api.github.com/users/jeremyschiemann/followers", "following_url": "https://api.github.com/users/jeremyschiemann/following{/other_user}", "gists_url": "https://api.github.com/users/jeremyschiemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremyschiemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremyschiemann/subscriptions", "organizations_url": "https://api.github.com/users/jeremyschiemann/orgs", "repos_url": "https://api.github.com/users/jeremyschiemann/repos", "events_url": "https://api.github.com/users/jeremyschiemann/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremyschiemann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-04T14:04:46Z", "updated_at": "2020-08-04T15:34:19Z", "closed_at": "2020-08-04T15:34:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Query\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get('/')\r\ndef root(number: int = Query(..., gt=0)):\r\n    return {\"Hello\": \"World\"}\r\n\r\n```\r\n\r\n### Description\r\n\r\nSetting `gt=0` ([docs](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#number-validations-greater-than-or-equal)) produces a openapi schema with `\"exclusiveMinimum\": 0.0` for that parameter.\r\nAccording to [openapi ](https://swagger.io/docs/specification/data-models/data-types/) (see \"Minimum and Maximum\") this field has to be a boolean and present together with the `minimum` field. \r\n\r\nSetting both, `gt` and `ge`, doesn't work although that should be the correct way. `gt` should also be a boolean instead of float.\r\n(Most likely same for `lt`/`le`)\r\n\r\n### Environment\r\n\r\n* OS: Windows 10\r\n* FastAPI Version 0.60.1\r\n* Python version: 3.8\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1834", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1834/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1834/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1834/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1834", "id": 672484099, "node_id": "MDU6SXNzdWU2NzI0ODQwOTk=", "number": 1834, "title": "Can we create multiple endpoits for the list of endpoints..", "user": {"login": "Pechi77", "id": 16059874, "node_id": "MDQ6VXNlcjE2MDU5ODc0", "avatar_url": "https://avatars3.githubusercontent.com/u/16059874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pechi77", "html_url": "https://github.com/Pechi77", "followers_url": "https://api.github.com/users/Pechi77/followers", "following_url": "https://api.github.com/users/Pechi77/following{/other_user}", "gists_url": "https://api.github.com/users/Pechi77/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pechi77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pechi77/subscriptions", "organizations_url": "https://api.github.com/users/Pechi77/orgs", "repos_url": "https://api.github.com/users/Pechi77/repos", "events_url": "https://api.github.com/users/Pechi77/events{/privacy}", "received_events_url": "https://api.github.com/users/Pechi77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-04T03:49:13Z", "updated_at": "2020-08-08T03:18:51Z", "closed_at": "2020-08-08T03:18:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [ ] I added a very descriptive title to this issue.\r\n* [ ] I used the GitHub search to find a similar issue and didn't find it.\r\n* [ ] I searched the FastAPI documentation, with the integrated search.\r\n* [ ] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [ ] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [ ] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [ ] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [ ] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [ ] After submitting this, I commit to:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * Or, I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: windows\r\n* FastAPI Version [e.g. 0.3.0]: 0.44.0\r\n\r\n\r\n* Python version: 3.7.5\r\n\r\n\r\nLets say I have a list of endpoints for my app:\r\n\r\n`endpoints = [\"/endpoint1\", \"/endpoint2\" , \"/endpoint2\" ] `\r\n\r\nand need to create multiple endpoints dynamically like below...\r\n\r\n\r\n```\r\n@app.get(\"/endpoint1\")\r\nasync def func1():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint1\"\r\n        }\r\n\r\n    return data\r\n\r\n@app.get(\"/endpoint2\")\r\nasync def func2():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint2\"\r\n        }\r\n\r\n    return data\r\n\r\n@app.get(\"/endpoint3\")\r\nasync def func3():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint3\"\r\n        }\r\n\r\n    return data\r\n\r\n\r\n@app.get(\"/endpoint4\")\r\nasync def func4():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint4\"\r\n        }\r\n\r\n    return data\r\n\r\n\r\n@app.get(\"/endpoint5\")\r\nasync def func5():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint5\"\r\n        }\r\n\r\n    return data\r\n\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1833", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1833/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1833/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1833/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1833", "id": 672484015, "node_id": "MDU6SXNzdWU2NzI0ODQwMTU=", "number": 1833, "title": "Can we create multiple endpoits for the list of endpoints..", "user": {"login": "Pechi77", "id": 16059874, "node_id": "MDQ6VXNlcjE2MDU5ODc0", "avatar_url": "https://avatars3.githubusercontent.com/u/16059874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pechi77", "html_url": "https://github.com/Pechi77", "followers_url": "https://api.github.com/users/Pechi77/followers", "following_url": "https://api.github.com/users/Pechi77/following{/other_user}", "gists_url": "https://api.github.com/users/Pechi77/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pechi77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pechi77/subscriptions", "organizations_url": "https://api.github.com/users/Pechi77/orgs", "repos_url": "https://api.github.com/users/Pechi77/repos", "events_url": "https://api.github.com/users/Pechi77/events{/privacy}", "received_events_url": "https://api.github.com/users/Pechi77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-04T03:48:57Z", "updated_at": "2020-08-08T03:23:08Z", "closed_at": "2020-08-08T03:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [ ] I added a very descriptive title to this issue.\r\n* [ ] I used the GitHub search to find a similar issue and didn't find it.\r\n* [ ] I searched the FastAPI documentation, with the integrated search.\r\n* [ ] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [ ] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [ ] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [ ] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [ ] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [ ] After submitting this, I commit to:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * Or, I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: windows\r\n* FastAPI Version [e.g. 0.3.0]: 0.44.0\r\n\r\n\r\n* Python version: 3.7.5\r\n\r\n\r\nLets say I have a list of endpoints for my app:\r\n\r\n`endpoints = [\"/endpoint1\", \"/endpoint2\" , \"/endpoint2\" ] `\r\n\r\nand need to create multiple endpoints dynamically like below...\r\n\r\n\r\n```\r\n@app.get(\"/endpoint1\")\r\nasync def func1():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint1\"\r\n        }\r\n\r\n    return data\r\n\r\n@app.get(\"/endpoint2\")\r\nasync def func2():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint2\"\r\n        }\r\n\r\n    return data\r\n\r\n@app.get(\"/endpoint3\")\r\nasync def func3():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint3\"\r\n        }\r\n\r\n    return data\r\n\r\n\r\n@app.get(\"/endpoint4\")\r\nasync def func4():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint4\"\r\n        }\r\n\r\n    return data\r\n\r\n\r\n@app.get(\"/endpoint5\")\r\nasync def func5():\r\n    data = {\r\n        \"status\": 200, \r\n        \"endpoint_no\" : \"endpoint5\"\r\n        }\r\n\r\n    return data\r\n\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1829", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1829/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1829/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1829/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1829", "id": 671939398, "node_id": "MDU6SXNzdWU2NzE5MzkzOTg=", "number": 1829, "title": "can support socket.io?", "user": {"login": "heyfavour", "id": 21987565, "node_id": "MDQ6VXNlcjIxOTg3NTY1", "avatar_url": "https://avatars2.githubusercontent.com/u/21987565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heyfavour", "html_url": "https://github.com/heyfavour", "followers_url": "https://api.github.com/users/heyfavour/followers", "following_url": "https://api.github.com/users/heyfavour/following{/other_user}", "gists_url": "https://api.github.com/users/heyfavour/gists{/gist_id}", "starred_url": "https://api.github.com/users/heyfavour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heyfavour/subscriptions", "organizations_url": "https://api.github.com/users/heyfavour/orgs", "repos_url": "https://api.github.com/users/heyfavour/repos", "events_url": "https://api.github.com/users/heyfavour/events{/privacy}", "received_events_url": "https://api.github.com/users/heyfavour/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T09:33:03Z", "updated_at": "2020-08-04T11:00:18Z", "closed_at": "2020-08-04T11:00:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "websocket in fastapi can't deal with namespace and room from socketio\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1828", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1828/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1828/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1828/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1828", "id": 671847438, "node_id": "MDU6SXNzdWU2NzE4NDc0Mzg=", "number": 1828, "title": "Any recommended way to do some stats / monitor?", "user": {"login": "williamfzc", "id": 13421694, "node_id": "MDQ6VXNlcjEzNDIxNjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/13421694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williamfzc", "html_url": "https://github.com/williamfzc", "followers_url": "https://api.github.com/users/williamfzc/followers", "following_url": "https://api.github.com/users/williamfzc/following{/other_user}", "gists_url": "https://api.github.com/users/williamfzc/gists{/gist_id}", "starred_url": "https://api.github.com/users/williamfzc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williamfzc/subscriptions", "organizations_url": "https://api.github.com/users/williamfzc/orgs", "repos_url": "https://api.github.com/users/williamfzc/repos", "events_url": "https://api.github.com/users/williamfzc/events{/privacy}", "received_events_url": "https://api.github.com/users/williamfzc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-03T07:02:53Z", "updated_at": "2020-08-03T11:13:39Z", "closed_at": "2020-08-03T11:13:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi :)\r\n\r\nCurrently we have already started an app with fastapi. It looks really good.\r\nIs there a recommended way to do some stats (e.g.: google stats) / monitor (e.g.: [prometheus](https://github.com/prometheus/prometheus) ) about all the requests which we have already received?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1820", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1820/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1820/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1820/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1820", "id": 669661754, "node_id": "MDU6SXNzdWU2Njk2NjE3NTQ=", "number": 1820, "title": "Impossible to set examples for enums?", "user": {"login": "jeremyschiemann", "id": 24566692, "node_id": "MDQ6VXNlcjI0NTY2Njky", "avatar_url": "https://avatars2.githubusercontent.com/u/24566692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremyschiemann", "html_url": "https://github.com/jeremyschiemann", "followers_url": "https://api.github.com/users/jeremyschiemann/followers", "following_url": "https://api.github.com/users/jeremyschiemann/following{/other_user}", "gists_url": "https://api.github.com/users/jeremyschiemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremyschiemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremyschiemann/subscriptions", "organizations_url": "https://api.github.com/users/jeremyschiemann/orgs", "repos_url": "https://api.github.com/users/jeremyschiemann/repos", "events_url": "https://api.github.com/users/jeremyschiemann/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremyschiemann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-31T10:21:51Z", "updated_at": "2020-08-04T09:49:42Z", "closed_at": "2020-08-04T09:49:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nfrom enum import Enum\r\n\r\nfrom fastapi import FastAPI, Query\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass SomeValue(str, Enum):\r\n    a = 'a'\r\n    b = 'b'\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root(query_value: SomeValue = Query(..., example='b')):\r\n    # Doesnt matter what happens here\r\n    return {\"Hello\": \"World\"}\r\n\r\n```\r\n\r\n### Description\r\n\r\nI set an example for `query_value` but in the openapi-schema this example is ignored and doesn't appear.\r\nIs that intended or a bug? I need to set a specific example for every parameter (as required by our testsuite) and I don't see why it shouldn't be allowed to set one for enums.\r\n\r\n### Environment\r\n\r\n* OS: Windows 10\r\n* FastAPI Version 0.60.1\r\n\r\n\r\n* Python version: 3.8\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1819", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1819/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1819/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1819/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1819", "id": 669535717, "node_id": "MDU6SXNzdWU2Njk1MzU3MTc=", "number": 1819, "title": "Why I can't access my router?", "user": {"login": "jet10000", "id": 2258120, "node_id": "MDQ6VXNlcjIyNTgxMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2258120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jet10000", "html_url": "https://github.com/jet10000", "followers_url": "https://api.github.com/users/jet10000/followers", "following_url": "https://api.github.com/users/jet10000/following{/other_user}", "gists_url": "https://api.github.com/users/jet10000/gists{/gist_id}", "starred_url": "https://api.github.com/users/jet10000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jet10000/subscriptions", "organizations_url": "https://api.github.com/users/jet10000/orgs", "repos_url": "https://api.github.com/users/jet10000/repos", "events_url": "https://api.github.com/users/jet10000/events{/privacy}", "received_events_url": "https://api.github.com/users/jet10000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-31T08:00:12Z", "updated_at": "2020-07-31T12:17:01Z", "closed_at": "2020-07-31T12:17:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "main.py\r\n```\r\napp = FastAPI()\r\n```\r\n\r\ncrud.py\r\n```\r\nfrom main import app\r\n\r\n@app.get(\"/posts\")\r\nasync def posts():\r\n    return {\"posts\": 'test'}\r\n```\r\n\r\n```\r\npython uvicorn main:app --reload\r\n```\r\n\r\nI cant' access '/posts'\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1818", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1818/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1818/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1818/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1818", "id": 669509489, "node_id": "MDU6SXNzdWU2Njk1MDk0ODk=", "number": 1818, "title": "Oath2 security - 404 broken request", "user": {"login": "matejko94", "id": 2266184, "node_id": "MDQ6VXNlcjIyNjYxODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2266184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matejko94", "html_url": "https://github.com/matejko94", "followers_url": "https://api.github.com/users/matejko94/followers", "following_url": "https://api.github.com/users/matejko94/following{/other_user}", "gists_url": "https://api.github.com/users/matejko94/gists{/gist_id}", "starred_url": "https://api.github.com/users/matejko94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matejko94/subscriptions", "organizations_url": "https://api.github.com/users/matejko94/orgs", "repos_url": "https://api.github.com/users/matejko94/repos", "events_url": "https://api.github.com/users/matejko94/events{/privacy}", "received_events_url": "https://api.github.com/users/matejko94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-31T07:29:57Z", "updated_at": "2020-07-31T16:16:29Z", "closed_at": "2020-07-31T16:16:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "This example from fast api documentation:\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\n'''\r\nfrom datetime import datetime, timedelta\r\nfrom typing import Optional\r\nimport logging\r\nfrom fastapi import Depends, FastAPI, HTTPException, status\r\nfrom fastapi.logger import logger as fastapi_logger\r\nfrom fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\r\nfrom jose import JWTError, jwt\r\nfrom passlib.context import CryptContext\r\nfrom pydantic import BaseModel\r\nimport uvicorn\r\n\r\n# to get a string like this run:\r\n# openssl rand -hex 32\r\nSECRET_KEY = \"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\r\nALGORITHM = \"HS256\"\r\nACCESS_TOKEN_EXPIRE_MINUTES = 30\r\n\r\n\r\nfake_users_db = {\r\n    \"john\": {\r\n        \"username\": \"john\",\r\n        \"full_name\": \"John Doe\",\r\n        \"email\": \"johndoe@example.com\",\r\n        \"hashed_password\": \"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\",\r\n        \"disabled\": False,\r\n    }\r\n}\r\n\r\n\r\nclass Token(BaseModel):\r\n    access_token: str\r\n    token_type: str\r\n\r\n\r\nclass TokenData(BaseModel):\r\n    username: Optional[str] = None\r\n\r\n\r\nclass User(BaseModel):\r\n    username: str\r\n    email: Optional[str] = None\r\n    full_name: Optional[str] = None\r\n    disabled: Optional[bool] = None\r\n\r\n\r\nclass UserInDB(User):\r\n    hashed_password: str\r\n\r\n\r\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\r\n\r\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"token\")\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\ndef verify_password(plain_password, hashed_password):\r\n    return pwd_context.verify(plain_password, hashed_password)\r\n\r\n\r\ndef get_password_hash(password):\r\n    return pwd_context.hash(password)\r\n\r\n\r\ndef get_user(db, username: str):\r\n    if username in db:\r\n        user_dict = db[username]\r\n        return UserInDB(**user_dict)\r\n\r\n\r\ndef authenticate_user(fake_db, username: str, password: str):\r\n    user = get_user(fake_db, username)\r\n    if not user:\r\n        return False\r\n    if not verify_password(password, user.hashed_password):\r\n        return False\r\n    return user\r\n\r\n\r\ndef create_access_token(data: dict, expires_delta: Optional[timedelta] = None):\r\n    to_encode = data.copy()\r\n    if expires_delta:\r\n        expire = datetime.utcnow() + expires_delta\r\n    else:\r\n        expire = datetime.utcnow() + timedelta(minutes=15)\r\n    to_encode.update({\"exp\": expire})\r\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\r\n    return encoded_jwt\r\n\r\n\r\nasync def get_current_user(token: str = Depends(oauth2_scheme)):\r\n    credentials_exception = HTTPException(\r\n        status_code=status.HTTP_401_UNAUTHORIZED,\r\n        detail=\"Could not validate credentials\",\r\n        headers={\"WWW-Authenticate\": \"Bearer\"},\r\n    )\r\n    try:\r\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\r\n        username: str = payload.get(\"sub\")\r\n        if username is None:\r\n            raise credentials_exception\r\n        token_data = TokenData(username=username)\r\n    except JWTError:\r\n        raise credentials_exception\r\n    user = get_user(fake_users_db, username=token_data.username)\r\n    if user is None:\r\n        raise credentials_exception\r\n    return user\r\n\r\n\r\nasync def get_current_active_user(current_user: User = Depends(get_current_user)):\r\n    if current_user.disabled:\r\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\r\n    return current_user\r\n\r\n\r\n@app.post(\"/token\", response_model=Token)\r\nasync def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\r\n    fastapi_logger.info(form_data)\r\n    user = authenticate_user(fake_users_db, form_data.username, form_data.password)\r\n    fastapi_logger.info(user)\r\n    if not user:\r\n        raise HTTPException(\r\n            status_code=status.HTTP_401_UNAUTHORIZED,\r\n            detail=\"Incorrect username or password\",\r\n            headers={\"WWW-Authenticate\": \"Bearer\"},\r\n        )\r\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\r\n    access_token = create_access_token(\r\n        data={\"sub\": user.username}, expires_delta=access_token_expires\r\n    )\r\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\r\n\r\n\r\n@app.get(\"/users/me/\", response_model=User)\r\nasync def read_users_me(current_user: User = Depends(get_current_active_user)):\r\n    return current_user\r\n\r\n\r\n@app.get(\"/users/me/items/\")\r\nasync def read_own_items(current_user: User = Depends(get_current_active_user)):\r\n    return [{\"item_id\": \"Foo\", \"owner\": current_user.username}]\r\n'''\r\nimport uvicorn\r\nfrom datetime import datetime, timedelta\r\nfrom typing import List, Optional\r\n\r\nfrom fastapi import Depends, FastAPI, HTTPException, Security, status\r\nfrom fastapi.security import (\r\n    OAuth2PasswordBearer,\r\n    OAuth2PasswordRequestForm,\r\n    SecurityScopes,\r\n)\r\nfrom jose import JWTError, jwt\r\nfrom passlib.context import CryptContext\r\nfrom pydantic import BaseModel, ValidationError\r\n\r\n# to get a string like this run:\r\n# openssl rand -hex 32\r\nSECRET_KEY = \"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\r\nALGORITHM = \"HS256\"\r\nACCESS_TOKEN_EXPIRE_MINUTES = 30\r\n\r\n\r\nfake_users_db = {\r\n    \"johndoe\": {\r\n        \"username\": \"johndoe\",\r\n        \"full_name\": \"John Doe\",\r\n        \"email\": \"johndoe@example.com\",\r\n        \"hashed_password\": \"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\",\r\n        \"disabled\": False,\r\n    },\r\n    \"alice\": {\r\n        \"username\": \"alice\",\r\n        \"full_name\": \"Alice Chains\",\r\n        \"email\": \"alicechains@example.com\",\r\n        \"hashed_password\": \"$2b$12$gSvqqUPvlXP2tfVFaWK1Be7DlH.PKZbv5H8KnzzVgXXbVxpva.pFm\",\r\n        \"disabled\": True,\r\n    },\r\n}\r\n\r\n\r\nclass Token(BaseModel):\r\n    access_token: str\r\n    token_type: str\r\n\r\n\r\nclass TokenData(BaseModel):\r\n    username: Optional[str] = None\r\n    scopes: List[str] = []\r\n\r\n\r\nclass User(BaseModel):\r\n    username: str\r\n    email: Optional[str] = None\r\n    full_name: Optional[str] = None\r\n    disabled: Optional[bool] = None\r\n\r\n\r\nclass UserInDB(User):\r\n    hashed_password: str\r\n\r\n\r\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\r\n\r\noauth2_scheme = OAuth2PasswordBearer(\r\n    tokenUrl=\"token\",\r\n    scopes={\"me\": \"Read information about the current user.\", \"items\": \"Read items.\"},\r\n)\r\n\r\napp = FastAPI()\r\n\r\n\r\ndef verify_password(plain_password, hashed_password):\r\n    return pwd_context.verify(plain_password, hashed_password)\r\n\r\n\r\ndef get_password_hash(password):\r\n    return pwd_context.hash(password)\r\n\r\n\r\ndef get_user(db, username: str):\r\n    if username in db:\r\n        user_dict = db[username]\r\n        return UserInDB(**user_dict)\r\n\r\n\r\ndef authenticate_user(fake_db, username: str, password: str):\r\n    user = get_user(fake_db, username)\r\n    if not user:\r\n        return False\r\n    if not verify_password(password, user.hashed_password):\r\n        return False\r\n    return user\r\n\r\n\r\ndef create_access_token(data: dict, expires_delta: Optional[timedelta] = None):\r\n    to_encode = data.copy()\r\n    if expires_delta:\r\n        expire = datetime.utcnow() + expires_delta\r\n    else:\r\n        expire = datetime.utcnow() + timedelta(minutes=15)\r\n    to_encode.update({\"exp\": expire})\r\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\r\n    return encoded_jwt\r\n\r\n\r\nasync def get_current_user(\r\n    security_scopes: SecurityScopes, token: str = Depends(oauth2_scheme)\r\n):\r\n    if security_scopes.scopes:\r\n        authenticate_value = f'Bearer scope=\"{security_scopes.scope_str}\"'\r\n    else:\r\n        authenticate_value = f\"Bearer\"\r\n    credentials_exception = HTTPException(\r\n        status_code=status.HTTP_401_UNAUTHORIZED,\r\n        detail=\"Could not validate credentials\",\r\n        headers={\"WWW-Authenticate\": authenticate_value},\r\n    )\r\n    try:\r\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\r\n        username: str = payload.get(\"sub\")\r\n        if username is None:\r\n            raise credentials_exception\r\n        token_scopes = payload.get(\"scopes\", [])\r\n        token_data = TokenData(scopes=token_scopes, username=username)\r\n    except (JWTError, ValidationError):\r\n        raise credentials_exception\r\n    user = get_user(fake_users_db, username=token_data.username)\r\n    if user is None:\r\n        raise credentials_exception\r\n    for scope in security_scopes.scopes:\r\n        if scope not in token_data.scopes:\r\n            raise HTTPException(\r\n                status_code=status.HTTP_401_UNAUTHORIZED,\r\n                detail=\"Not enough permissions\",\r\n                headers={\"WWW-Authenticate\": authenticate_value},\r\n            )\r\n    return user\r\n\r\n\r\nasync def get_current_active_user(\r\n    current_user: User = Security(get_current_user, scopes=[\"me\"])\r\n):\r\n    if current_user.disabled:\r\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\r\n    return current_user\r\n\r\n\r\n@app.post(\"/token\", response_model=Token)\r\nasync def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\r\n    user = authenticate_user(fake_users_db, form_data.username, form_data.password)\r\n    if not user:\r\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\r\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\r\n    access_token = create_access_token(\r\n        data={\"sub\": user.username, \"scopes\": form_data.scopes},\r\n        expires_delta=access_token_expires,\r\n    )\r\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\r\n\r\n\r\n@app.get(\"/users/me/\", response_model=User)\r\nasync def read_users_me(current_user: User = Depends(get_current_active_user)):\r\n    return current_user\r\n\r\n\r\n@app.get(\"/users/me/items/\")\r\nasync def read_own_items(\r\n    current_user: User = Security(get_current_active_user, scopes=[\"items\"])\r\n):\r\n    return [{\"item_id\": \"Foo\", \"owner\": current_user.username}]\r\n\r\n\r\n@app.get(\"/status/\")\r\nasync def read_system_status(current_user: User = Depends(get_current_user)):\r\n    return {\"status\": \"ok\"}\r\n\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(app, port=8080)\r\n    #logging.info(\"aaaaaaaaaaaaaaaaaaaaaa\")\r\n\r\n```\r\n\r\n### Description\r\n\r\nThis code which is actually the same as example in fastapi. I cannot authenticate into api.\r\n![image](https://user-images.githubusercontent.com/2266184/89013925-0af7b000-d315-11ea-82d0-935198f28e38.png)\r\n\r\n\r\n### Environment\r\n\r\nLinux ubuntu\r\n\r\nTo know the FastAPI version use:\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n0.60.1\r\n```\r\n\r\n* Python version:\r\n\r\nTo know the Python version use:\r\n\r\n```bash\r\npython --version\r\n3.6\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1816", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1816/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1816/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1816/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1816", "id": 668902971, "node_id": "MDU6SXNzdWU2Njg5MDI5NzE=", "number": 1816, "title": "Sending parameters with attachments - 422 (Unprocessable Entity) ", "user": {"login": "adevits", "id": 33705842, "node_id": "MDQ6VXNlcjMzNzA1ODQy", "avatar_url": "https://avatars1.githubusercontent.com/u/33705842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adevits", "html_url": "https://github.com/adevits", "followers_url": "https://api.github.com/users/adevits/followers", "following_url": "https://api.github.com/users/adevits/following{/other_user}", "gists_url": "https://api.github.com/users/adevits/gists{/gist_id}", "starred_url": "https://api.github.com/users/adevits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adevits/subscriptions", "organizations_url": "https://api.github.com/users/adevits/orgs", "repos_url": "https://api.github.com/users/adevits/repos", "events_url": "https://api.github.com/users/adevits/events{/privacy}", "received_events_url": "https://api.github.com/users/adevits/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-30T15:57:09Z", "updated_at": "2020-07-30T18:12:06Z", "closed_at": "2020-07-30T18:12:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello everyone is my first question and I hope to abide by the rules.\r\nI am trying to send my API 4 string type parameters and an array type parameter for attachments, I have tried different ways but I am going to post my last try.\r\n\r\nHow can I capture my attachments and validate the format type?\r\n\r\nclass Send(BaseModel):\r\n    to: str = Query(..., regex=\"^([a-zA-Z0-9 \\-\\.]+)@([a-zA-Z0-9 \\-\\.]+)\\.([a-zA-Z]{2,5})$\")\r\n    name: str\r\n    last_name: str\r\n    phone: str\r\n    attachments: List[str] = None\r\n    #file: UploadFile = File(...)   => commented code line.\r\n\r\n@app_v1.post(\"/notify\", status_code=HTTP_200_OK)\r\nasync def sendNotify(not: Send):\r\n    \r\n    name = not.name\r\n    body = \"SomeI\"\r\n    sender_email = \"no@hi.cl\"\r\n    receiver_email = not.to\r\n\r\n    message = MIMEMultipart()\r\n    message[\"From\"] = sender_email\r\n    message[\"To\"] = receiver_email\r\n    message[\"Subject\"] = name\r\n    message[\"Bcc\"] = receiver_email\r\n\r\n    message.attach(MIMEText(body, \"plain\"))\r\n    \r\n    #filename = []\r\n    filename = not.attachments\r\n\r\n    with open(filename, \"rb\") as attachment:\r\n        ....\r\n        ...\r\nthank you !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1814", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1814/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1814/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1814/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1814", "id": 668838656, "node_id": "MDU6SXNzdWU2Njg4Mzg2NTY=", "number": 1814, "title": "Empty message about raised exception in documentation code example (Handling Errors)", "user": {"login": "manlix", "id": 16971147, "node_id": "MDQ6VXNlcjE2OTcxMTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/16971147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manlix", "html_url": "https://github.com/manlix", "followers_url": "https://api.github.com/users/manlix/followers", "following_url": "https://api.github.com/users/manlix/following{/other_user}", "gists_url": "https://api.github.com/users/manlix/gists{/gist_id}", "starred_url": "https://api.github.com/users/manlix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manlix/subscriptions", "organizations_url": "https://api.github.com/users/manlix/orgs", "repos_url": "https://api.github.com/users/manlix/repos", "events_url": "https://api.github.com/users/manlix/events{/privacy}", "received_events_url": "https://api.github.com/users/manlix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T15:04:52Z", "updated_at": "2020-08-20T00:28:02Z", "closed_at": "2020-08-20T00:28:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Issue description\r\n\r\nI have tried to run example code from documentation (section **[Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/#re-use-fastapis-exception-handlers)**) and got empty message in console logs about raised exception (**HTTPException**).\r\n\r\n### Actual and unexpected result in logs \u2014 no details about raised exception:\r\n\r\n```\r\nOMG! An HTTP error!: \r\nINFO:     127.0.0.1:50364 - \"GET /items/3 HTTP/1.1\" 418 \r\n```\r\n\r\n### Expected result \u2014 with details about raised exception:\r\n\r\n```\r\nOMG! An HTTP error!: HTTPException(status_code=418, detail=\"Nope! I don't like 3.\")\r\nINFO:     127.0.0.1:50364 - \"GET /items/3 HTTP/1.1\" 418\r\n```\r\n\r\n### Code from documentation:\r\n\r\n```Python\r\nfrom fastapi import FastAPI, HTTPException\r\nfrom fastapi.exception_handlers import (\r\n    http_exception_handler,\r\n    request_validation_exception_handler,\r\n)\r\nfrom fastapi.exceptions import RequestValidationError\r\nfrom starlette.exceptions import HTTPException as StarletteHTTPException\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.exception_handler(StarletteHTTPException)\r\nasync def custom_http_exception_handler(request, exc):\r\n    print(f\"OMG! An HTTP error!: {exc}\")\r\n    return await http_exception_handler(request, exc)\r\n\r\n\r\n@app.exception_handler(RequestValidationError)\r\nasync def validation_exception_handler(request, exc):\r\n    print(f\"OMG! The client sent invalid data!: {exc}\")\r\n    return await request_validation_exception_handler(request, exc)\r\n\r\n\r\n@app.get(\"/items/{item_id}\")\r\nasync def read_item(item_id: int):\r\n    if item_id == 3:\r\n        raise HTTPException(status_code=418, detail=\"Nope! I don't like 3.\")\r\n    return {\"item_id\": item_id}\r\n```\r\n\r\n### How to reproduce:\r\n\r\nRun in console:\r\n```Bash\r\nmanlix@lab:~$ curl http://localhost:8000/items/3\r\n{\"detail\":\"Nope! I don't like 3.\"}\r\n```\r\n\r\n### The cause of the problem:\r\n\r\n**Starlette**'s **HTTPException** hasn't **\\_\\_str\\_\\_()** method:\r\n\r\n```Python\r\nclass HTTPException(Exception):\r\n    def __init__(self, status_code: int, detail: str = None) -> None:\r\n        if detail is None:\r\n            detail = http.HTTPStatus(status_code).phrase\r\n        self.status_code = status_code\r\n        self.detail = detail\r\n\r\n    def __repr__(self) -> str:\r\n        class_name = self.__class__.__name__\r\n        return f\"{class_name}(status_code={self.status_code!r}, detail={self.detail!r})\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1811", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1811/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1811/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1811/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1811", "id": 667944748, "node_id": "MDU6SXNzdWU2Njc5NDQ3NDg=", "number": 1811, "title": "[Bug] Documentation Failed to fetch /openapi.json", "user": {"login": "NastasiaSaby", "id": 8245071, "node_id": "MDQ6VXNlcjgyNDUwNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8245071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NastasiaSaby", "html_url": "https://github.com/NastasiaSaby", "followers_url": "https://api.github.com/users/NastasiaSaby/followers", "following_url": "https://api.github.com/users/NastasiaSaby/following{/other_user}", "gists_url": "https://api.github.com/users/NastasiaSaby/gists{/gist_id}", "starred_url": "https://api.github.com/users/NastasiaSaby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NastasiaSaby/subscriptions", "organizations_url": "https://api.github.com/users/NastasiaSaby/orgs", "repos_url": "https://api.github.com/users/NastasiaSaby/repos", "events_url": "https://api.github.com/users/NastasiaSaby/events{/privacy}", "received_events_url": "https://api.github.com/users/NastasiaSaby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T15:42:33Z", "updated_at": "2020-07-30T09:11:38Z", "closed_at": "2020-07-30T09:11:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I click https://host/suburl/documentation\r\n\r\nI have a \"Failed to load definition\". \r\n\r\nIn the console, I have\r\n\r\n```\r\nError downloading https://host/openapi.json Failed to fetch\r\n```\r\n\r\nMy code looks like that:\r\n\r\n```\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI(openapi_url=\"/openapi.json\", docs_url=\"/documentation\")\r\n\r\n@app.get(\"/status\")\r\ndef return_simple():\r\n    return \"ok\"\r\nI can't find an anwser for this problem. Do you have any idea?\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1809", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1809/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1809/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1809/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1809", "id": 667726885, "node_id": "MDU6SXNzdWU2Njc3MjY4ODU=", "number": 1809, "title": "[Bug] Failed to load definition in the \"documentation\" page: redux error", "user": {"login": "NastasiaSaby", "id": 8245071, "node_id": "MDQ6VXNlcjgyNDUwNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8245071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NastasiaSaby", "html_url": "https://github.com/NastasiaSaby", "followers_url": "https://api.github.com/users/NastasiaSaby/followers", "following_url": "https://api.github.com/users/NastasiaSaby/following{/other_user}", "gists_url": "https://api.github.com/users/NastasiaSaby/gists{/gist_id}", "starred_url": "https://api.github.com/users/NastasiaSaby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NastasiaSaby/subscriptions", "organizations_url": "https://api.github.com/users/NastasiaSaby/orgs", "repos_url": "https://api.github.com/users/NastasiaSaby/repos", "events_url": "https://api.github.com/users/NastasiaSaby/events{/privacy}", "received_events_url": "https://api.github.com/users/NastasiaSaby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T10:19:50Z", "updated_at": "2020-07-30T05:42:17Z", "closed_at": "2020-07-29T15:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n\r\nWhen I click https://my-project/documentation\r\n\r\nYou will see a \"Failed to load definition. Failed to fetch /openapi.json\". In the console, you have: \r\n\r\n```\r\nsystem.js:464 Error: You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.\r\n    at d (redux.js:113)\r\n    at i (system.js:255)\r\n    at Object.specJson (system.js:259)\r\n    at a (hook.js:12)\r\n    at reducers.js:28\r\n    at e (immutable.js:1971)\r\n    at e (immutable.js:1980)\r\n    at Te.updateIn (immutable.js:1278)\r\n    at Te.update (immutable.js:1270)\r\n    at reducers.js:28\r\n\r\n```\r\nMy code looks like that:\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI(openapi_url=\"/openapi.json\", docs_url=\"/documentation\")\r\n\r\n@app.get(\"/status\")\r\ndef return_simple():\r\n    return \"ok\"\r\n```\r\n\r\nI can't find an anwser for this problem. Do you have any idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1808", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1808/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1808/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1808/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1808", "id": 667597704, "node_id": "MDU6SXNzdWU2Njc1OTc3MDQ=", "number": 1808, "title": "sqlalchemy.exc.CompileError: Unconsumed column names: items following the sqlalchemy integration tutorial example", "user": {"login": "fessacchiotto", "id": 97323, "node_id": "MDQ6VXNlcjk3MzIz", "avatar_url": "https://avatars2.githubusercontent.com/u/97323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fessacchiotto", "html_url": "https://github.com/fessacchiotto", "followers_url": "https://api.github.com/users/fessacchiotto/followers", "following_url": "https://api.github.com/users/fessacchiotto/following{/other_user}", "gists_url": "https://api.github.com/users/fessacchiotto/gists{/gist_id}", "starred_url": "https://api.github.com/users/fessacchiotto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fessacchiotto/subscriptions", "organizations_url": "https://api.github.com/users/fessacchiotto/orgs", "repos_url": "https://api.github.com/users/fessacchiotto/repos", "events_url": "https://api.github.com/users/fessacchiotto/events{/privacy}", "received_events_url": "https://api.github.com/users/fessacchiotto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-29T06:50:14Z", "updated_at": "2020-07-29T10:14:26Z", "closed_at": "2020-07-29T10:14:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm getting this error:\r\n\r\n`sqlalchemy.exc.CompileError: Unconsumed column names: items`\r\n\r\nwhen running a fastapi-users call to register a user: trying to integrate the fastapi sqlalchemy tutorial with the fastapi-users example. \r\n\r\n``` sh\r\nprintf '{\"email\": \"yyyyy@ggg.com\", \"password\": \"hhhhhhh\" }'| http  --follow --timeout 3600 POST localhost:8000/auth/register Content-Type:'application/json'\r\n```\r\n\r\nThe sqlalchemy models used are:\r\n\r\n``` python\r\n\r\nfrom sqlalchemy import Column, ForeignKey, Integer, String\r\nfrom sqlalchemy.types import Numeric\r\nfrom sqlalchemy.orm import relationship\r\nfrom fastapi_users.db.sqlalchemy import GUID\r\nfrom db import Base\r\n\r\nclass Item(Base):\r\n    __tablename__ = \"items\"\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    title = Column(String, nullable=True)\r\n    description = Column(String, nullable=True)\r\n    quantita = Column(Numeric(9, 3), nullable=True)\r\n    importo = Column(Numeric(12, 4), nullable=True)\r\n    user_id = Column(GUID(), ForeignKey(\"users.id\", ondelete=\"CASCADE\"))\r\n    user = relationship(\"UserTable\", back_populates=\"items\")\r\n\r\n```\r\n\r\n``` python\r\nfrom sqlalchemy import Column, String, DateTime\r\nfrom sqlalchemy.sql import func\r\nfrom sqlalchemy.orm import relationship\r\nfrom fastapi_users.db import SQLAlchemyBaseUserTable\r\nfrom db import Base\r\n\r\nclass UserTable(Base, SQLAlchemyBaseUserTable):\r\n    __tablename__ = \"users\"\r\n\r\n    first_name = Column(String(50), nullable=True)\r\n    last_name = Column(String(50), nullable=True)\r\n    created_date = Column(DateTime, default=func.now(), nullable=False)\r\n    items = relationship(\"Item\", back_populates=\"user\", cascade=\"all, delete\")\r\n```\r\n\r\nI found out that the error is depending by the **pydantic model used** for `User` in the following line:\r\n\r\n` items: List[Item] = [] ` which is triggering the error... why?\r\n\r\n``` python\r\nclass User(models.BaseUser):\r\n    first_name: Optional[str] = None\r\n    last_name: Optional[str] = None\r\n    # items: List[Item] = []\r\n\r\n    class Config:\r\n        orm_mode = True\r\n\r\n```\r\nThank you in advance for you help.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1806", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1806/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1806/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1806/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1806", "id": 667353676, "node_id": "MDU6SXNzdWU2NjczNTM2NzY=", "number": 1806, "title": "APIRouter is blocked when a high CPU and long time request is being requested", "user": {"login": "ChristianMarca", "id": 39254595, "node_id": "MDQ6VXNlcjM5MjU0NTk1", "avatar_url": "https://avatars2.githubusercontent.com/u/39254595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristianMarca", "html_url": "https://github.com/ChristianMarca", "followers_url": "https://api.github.com/users/ChristianMarca/followers", "following_url": "https://api.github.com/users/ChristianMarca/following{/other_user}", "gists_url": "https://api.github.com/users/ChristianMarca/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristianMarca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristianMarca/subscriptions", "organizations_url": "https://api.github.com/users/ChristianMarca/orgs", "repos_url": "https://api.github.com/users/ChristianMarca/repos", "events_url": "https://api.github.com/users/ChristianMarca/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristianMarca/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-28T20:29:31Z", "updated_at": "2020-07-29T14:30:47Z", "closed_at": "2020-07-29T14:30:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI created a small example\r\n\r\n`fibonacci.py `\r\n```Python\r\nimport time\r\n\r\ndef fib(n):\r\n    return 1 if n < 2 else fib(n - 1) + fib(n - 2)\r\n\r\ndef run_fib_for_n_seconds(max_number, sec):\r\n    start_time = time.perf_counter()\r\n    total_time = 0\r\n\r\n    while True:\r\n        fib(max_number)\r\n        end_time = time.perf_counter()\r\n        total_time = end_time - start_time\r\n\r\n        if total_time >= sec:\r\n            break\r\n\r\n    return {\"time\": total_time}\r\n```\r\nThis function is called by a router on `fibonacci_route.py`\r\n\r\n```Python\r\nfrom fastapi import APIRouter\r\nfrom typing import Optional\r\nfrom ..routes.fibonacci import run_fib_for_n_seconds\r\n\r\nrouter = APIRouter()\r\n\r\n\r\n@router.get(\"/fibonacci\", response_model=FunctionExecutionNTimes)\r\nasync def get_response_after_high_cpu_usage(max_number_fibo: Optional[int] = 100, time_on_execution: Optional[int] = 30):\r\n      return run_fib_for_n_seconds(max_number_fibo, time_on_execution)\r\n```\r\nand on the `main.py`\r\n\r\nI have\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom app.routes import fibonacci_route\r\n\r\napp = FastAPI()\r\n\r\napp.include_router(\r\n    fibonacci_route.router,\r\n    prefix=\"/cpu\",\r\n    tags=[\"cpu\"],\r\n    responses={404: {\"description\": \"Not found\"}},\r\n)\r\napp.include_router(\r\n    health.router,\r\n    prefix=\"/health\",\r\n    tags=[\"health\"],\r\n    responses={404: {\"description\": \"Not found\"}},\r\n)\r\n\r\n```\r\nWhen I call once at `http://localhost:8000/cpu/fibonacci` the request starts resolving but when I try calling again at this endpoint or another for example `http://localhost:8000/health` the requests are blocker before resolve the first request and on the terminal, I get the message `307 Temporary Redirect` and afterward `200 OK`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1801", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1801/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1801/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1801/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1801", "id": 666394107, "node_id": "MDU6SXNzdWU2NjYzOTQxMDc=", "number": 1801, "title": "[Q] Is there a way to disable the docs frontend?", "user": {"login": "NightMachinary", "id": 36224762, "node_id": "MDQ6VXNlcjM2MjI0NzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/36224762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NightMachinary", "html_url": "https://github.com/NightMachinary", "followers_url": "https://api.github.com/users/NightMachinary/followers", "following_url": "https://api.github.com/users/NightMachinary/following{/other_user}", "gists_url": "https://api.github.com/users/NightMachinary/gists{/gist_id}", "starred_url": "https://api.github.com/users/NightMachinary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NightMachinary/subscriptions", "organizations_url": "https://api.github.com/users/NightMachinary/orgs", "repos_url": "https://api.github.com/users/NightMachinary/repos", "events_url": "https://api.github.com/users/NightMachinary/events{/privacy}", "received_events_url": "https://api.github.com/users/NightMachinary/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-27T15:43:31Z", "updated_at": "2020-07-27T16:48:05Z", "closed_at": "2020-07-27T16:48:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't want the docs, they just consume extra resources. How can I turn them off?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1799", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1799/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1799/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1799/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1799", "id": 666128477, "node_id": "MDU6SXNzdWU2NjYxMjg0Nzc=", "number": 1799, "title": "[DOCUMENTATION]: WebSocket closed by client -> starlette.websockets.WebSocketDisconnect", "user": {"login": "Yaakov-Belch", "id": 2071787, "node_id": "MDQ6VXNlcjIwNzE3ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2071787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yaakov-Belch", "html_url": "https://github.com/Yaakov-Belch", "followers_url": "https://api.github.com/users/Yaakov-Belch/followers", "following_url": "https://api.github.com/users/Yaakov-Belch/following{/other_user}", "gists_url": "https://api.github.com/users/Yaakov-Belch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yaakov-Belch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yaakov-Belch/subscriptions", "organizations_url": "https://api.github.com/users/Yaakov-Belch/orgs", "repos_url": "https://api.github.com/users/Yaakov-Belch/repos", "events_url": "https://api.github.com/users/Yaakov-Belch/events{/privacy}", "received_events_url": "https://api.github.com/users/Yaakov-Belch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-27T09:20:31Z", "updated_at": "2020-08-09T16:10:24Z", "closed_at": "2020-08-09T16:10:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "# The problem\r\n\r\nThe documentation at https://fastapi.tiangolo.com/advanced/websockets/ fails to explain what happens\r\nwhen the client closes the WebSocket connection.  This information is needed because real APIs need to \r\nhandle this case.\r\n\r\nNote: The behavior is documented in the starlette documentation: https://fastapi.tiangolo.com/advanced/websockets/ --- but the documentation is not exact: It misspelled the Exception class name (I will add a separate documentation issue with starlette regarding this inaccuracy).\r\n\r\n# The solution\r\n\r\nAdd the following text to the documentation: \"When the client closes the WebSocket connection, the call `await websocket.receive_text()` will raise an `starlette.websockets.WebSocketDisconnect` exception.  You can catch this exception to handle this condition.\"\r\n\r\nIn addition, we may want to adjust the sample code to show this in action.\r\n\r\nIn addition, you may want to re-export that exception class via fastapi like you do with many starlette features that are used idiomatically in fastapi.\r\n\r\n# Help\r\n\r\nI'll be happy to create a documentation pull request --- if desired.  I have extended the chat API application to share all chat messages to all connected clients (this requires to remove disconnected clients from the set of clients).  If you like, I can add this to the documentation for a slightly more complete example.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1797", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1797/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1797/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1797/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1797", "id": 665964144, "node_id": "MDU6SXNzdWU2NjU5NjQxNDQ=", "number": 1797, "title": "Pydantic Not Deserializing Sqlalchemy when I query using with entities", "user": {"login": "rodrigoga799", "id": 44196995, "node_id": "MDQ6VXNlcjQ0MTk2OTk1", "avatar_url": "https://avatars0.githubusercontent.com/u/44196995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigoga799", "html_url": "https://github.com/rodrigoga799", "followers_url": "https://api.github.com/users/rodrigoga799/followers", "following_url": "https://api.github.com/users/rodrigoga799/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigoga799/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigoga799/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigoga799/subscriptions", "organizations_url": "https://api.github.com/users/rodrigoga799/orgs", "repos_url": "https://api.github.com/users/rodrigoga799/repos", "events_url": "https://api.github.com/users/rodrigoga799/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigoga799/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-27T04:23:24Z", "updated_at": "2020-08-08T21:58:34Z", "closed_at": "2020-08-08T21:58:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use this part of code to get data from the db\r\n```Python\r\nclass OrmModel(BaseModel):\r\n    class Config:\r\n        orm_mode = True\r\n\r\nclass PruebaVozFila(OrmModel):\r\n    id:int \r\n    id_origen:int \r\n    id_destino:int\r\n    hora_programada:str\r\n    hora_ejecutada:str \r\n    exitoso:bool \r\n    estado:str \r\n@router.get(\"/pruebas-voz\",response_model=PruebaVozFila)\r\ndef obtener_pruebas_voz(\r\n    *,\r\n    db: Session = Depends(deps.get_db),\r\n    current_user: models.User = Depends(deps.get_current_active_user),\r\n    search:Search = Depends(Search)\r\n    ) -> Any:\r\n\r\n    temporal_query = db.query(PruebaVoz).filter().with_entities(\r\n        \r\n    PruebaVoz.id,\r\n    PruebaVoz.id_origen,\r\n    PruebaVoz.id_destino,\r\n    PruebaVoz.hora_programada,\r\n    PruebaVoz.hora_ejecutada,\r\n    PruebaVoz.exitoso,\r\n    PruebaVoz.estado,\r\n\r\n    ).first()\r\n\r\n    return  jsonable_encoder(temporal_query)\r\n```\r\n\r\nSo when I query without using 'with_entities' it works but if I add it it throws the following error\r\n![image](https://user-images.githubusercontent.com/44196995/88503083-45202500-cf96-11ea-9f72-f7ae83062023.png)\r\n\r\nIt seems that Pydantic is unable to find the columns or its names inside  the temporal_query\r\nI print the query as SQL and gives me this\r\nWith \"with_entities\"\r\n```Sql\r\nSELECT pruebavoz.id AS pruebavoz_id, pruebavoz.id_origen AS pruebavoz_id_origen, pruebavoz.id_destino AS pruebavoz_id_destino, pruebavoz.hora_programada AS pruebavoz_hora_programada, pruebavoz.hora_ejecutada AS pruebavoz_hora_ejecutada, pruebavoz.exitoso AS pruebavoz_exitoso, pruebavoz.estado AS pruebavoz_estado \r\n```\r\nWithout \"with_entities\"\r\n```Sql\r\nSELECT pruebavoz.id AS pruebavoz_id, pruebavoz.id_origen AS pruebavoz_id_origen, pruebavoz.id_destino AS pruebavoz_id_destino, pruebavoz.hora_programada AS pruebavoz_hora_programada, pruebavoz.hora_ejecutada AS pruebavoz_hora_ejecutada, pruebavoz.exitoso AS pruebavoz_exitoso, pruebavoz.estado AS pruebavoz_estado, pruebavoz.usuario_ingreso AS pruebavoz_usuario_ingreso, pruebavoz.creado AS pruebavoz_creado, pruebavoz.actualizado AS pruebavoz_actualizado\r\n```\r\nas you see  in the actual query the parameters are the same.What do you think is happening.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1793", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1793/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1793/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1793/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1793", "id": 665767165, "node_id": "MDU6SXNzdWU2NjU3NjcxNjU=", "number": 1793, "title": "Unable to install FastAPI on Windows 10 using Python 3.8.1", "user": {"login": "codemasta", "id": 1274708, "node_id": "MDQ6VXNlcjEyNzQ3MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1274708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codemasta", "html_url": "https://github.com/codemasta", "followers_url": "https://api.github.com/users/codemasta/followers", "following_url": "https://api.github.com/users/codemasta/following{/other_user}", "gists_url": "https://api.github.com/users/codemasta/gists{/gist_id}", "starred_url": "https://api.github.com/users/codemasta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codemasta/subscriptions", "organizations_url": "https://api.github.com/users/codemasta/orgs", "repos_url": "https://api.github.com/users/codemasta/repos", "events_url": "https://api.github.com/users/codemasta/events{/privacy}", "received_events_url": "https://api.github.com/users/codemasta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-26T12:01:20Z", "updated_at": "2020-07-26T19:46:23Z", "closed_at": "2020-07-26T19:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I create a virtualenv then ran the command \r\npip install fastapi[all] but I keep going this error message \r\n\r\nCollecting orjson<4.0.0,>=3.2.1; extra == \"all\"\r\n  Using cached orjson-3.3.0.tar.gz (654 kB)\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... error\r\n **Caused by:\r\n      process didn't exit successfully: `rustc - --crate-name ___ --print=file-names -Z mutable-noalias --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=cfg` (exit code: 1)\r\n    --- stderr**\r\n\r\nSee screenhot.\r\n\r\n![error](https://user-images.githubusercontent.com/1274708/88478424-0eb7bb00-cf40-11ea-9a9e-cc18372a4834.JPG)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1792", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1792/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1792/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1792/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1792", "id": 665672718, "node_id": "MDU6SXNzdWU2NjU2NzI3MTg=", "number": 1792, "title": "OrjsonResponse confusion", "user": {"login": "victoraugustolls", "id": 7843637, "node_id": "MDQ6VXNlcjc4NDM2Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7843637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victoraugustolls", "html_url": "https://github.com/victoraugustolls", "followers_url": "https://api.github.com/users/victoraugustolls/followers", "following_url": "https://api.github.com/users/victoraugustolls/following{/other_user}", "gists_url": "https://api.github.com/users/victoraugustolls/gists{/gist_id}", "starred_url": "https://api.github.com/users/victoraugustolls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victoraugustolls/subscriptions", "organizations_url": "https://api.github.com/users/victoraugustolls/orgs", "repos_url": "https://api.github.com/users/victoraugustolls/repos", "events_url": "https://api.github.com/users/victoraugustolls/events{/privacy}", "received_events_url": "https://api.github.com/users/victoraugustolls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-25T22:45:42Z", "updated_at": "2020-07-30T21:04:48Z", "closed_at": "2020-07-30T21:04:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [X] I added a very descriptive title to this issue.\r\n* [X] I used the GitHub search to find a similar issue and didn't find it.\r\n* [X] I searched the FastAPI documentation, with the integrated search.\r\n* [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [X] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [X] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Description\r\n\r\nHi! First of all, thanks for the awesome project!\r\n\r\nMy problem here is that I'm trying to figure out the difference between the following two options:\r\n- Returning ORJSONResponse with the content being a BaseModel that I used construct to skip validation (I'm assuming that this skips validation for FastAPI, might not be the case)\r\n- Returning just a BaseModel with the following config:\r\n\r\n```\r\ndef orjson_dumps(v, *, default):\r\n    return orjson.dumps(v, default=default).decode()\r\n\r\n\r\ndef to_camel(string: str) -> str:\r\n    parts = string.split(\"_\")\r\n    return parts.pop(0).lower() + \"\".join(word.capitalize() for word in parts)\r\n\r\n\r\nclass OrjsonModel(BaseModel):\r\n    class Config:\r\n        alias_generator = to_camel\r\n        allow_mutation = False\r\n        allow_population_by_field_name = True\r\n        json_dumps = orjson_dumps\r\n        json_loads = orjson.loads\r\n```\r\n\r\n\r\nOne thing I noticed is that ORJSONResponse does not `decode()` the `orjson.dumps()` call, which with the model I need to.\r\n\r\nWhat I'm expect to find out is the most optimal way for having docs of the response model without any kind of validation, and at the same time squish the most performance out of it that I can.\r\n\r\nWhat I expected to happen is that by returning a OrjsonModel I could remove `.decode()`, and by using `.construct()` from `pydantic` I would skip FastAPI responde validation.\r\n\r\nAre my assumptions correct? Is there a better way of achieving what I have in mind? Thanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1788", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1788/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1788/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1788/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1788", "id": 665510919, "node_id": "MDU6SXNzdWU2NjU1MTA5MTk=", "number": 1788, "title": "Can fastapi proxy another site as a response to the request?", "user": {"login": "hkhk366", "id": 12952110, "node_id": "MDQ6VXNlcjEyOTUyMTEw", "avatar_url": "https://avatars3.githubusercontent.com/u/12952110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkhk366", "html_url": "https://github.com/hkhk366", "followers_url": "https://api.github.com/users/hkhk366/followers", "following_url": "https://api.github.com/users/hkhk366/following{/other_user}", "gists_url": "https://api.github.com/users/hkhk366/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkhk366/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkhk366/subscriptions", "organizations_url": "https://api.github.com/users/hkhk366/orgs", "repos_url": "https://api.github.com/users/hkhk366/repos", "events_url": "https://api.github.com/users/hkhk366/events{/privacy}", "received_events_url": "https://api.github.com/users/hkhk366/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-25T04:16:35Z", "updated_at": "2020-08-19T02:50:31Z", "closed_at": "2020-07-26T00:54:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may be a silly question. Can fastapi proxy another site as a response to the request?\r\n\r\nI did some research. All pages I found are Nginx reverse proxy fastapi. I already did that to solve the SSL problem.\r\n\r\nMy system workflow:\r\n                                   \r\n\r\n![image](https://user-images.githubusercontent.com/12952110/88448453-2beb6d00-ce0c-11ea-9578-331721107dbb.png)\r\n\r\nRedirectResponse is a rewrite, not a proxy.\r\nStatic Files are for local files. \r\nHTMLResponse is for static HTML.\r\n\r\nCan you give me some tips on how to proxy another site in fastapi? Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1784", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1784/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1784/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1784/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1784", "id": 664829034, "node_id": "MDU6SXNzdWU2NjQ4MjkwMzQ=", "number": 1784, "title": "Completely broken", "user": {"login": "Bandit253", "id": 9003261, "node_id": "MDQ6VXNlcjkwMDMyNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9003261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bandit253", "html_url": "https://github.com/Bandit253", "followers_url": "https://api.github.com/users/Bandit253/followers", "following_url": "https://api.github.com/users/Bandit253/following{/other_user}", "gists_url": "https://api.github.com/users/Bandit253/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bandit253/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bandit253/subscriptions", "organizations_url": "https://api.github.com/users/Bandit253/orgs", "repos_url": "https://api.github.com/users/Bandit253/repos", "events_url": "https://api.github.com/users/Bandit253/events{/privacy}", "received_events_url": "https://api.github.com/users/Bandit253/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-23T23:39:09Z", "updated_at": "2020-07-24T05:06:25Z", "closed_at": "2020-07-24T05:04:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry for the terrible title but I couldn't think of a better one :( \r\n\r\nI had developed a site and it was working really well but something happened and it now no longer works.  In order to identify the issue I have started again with absolute minimum \r\n`from fastapi import FastAPI\r\nimport uvicorn\r\n\r\napp = FastAPI()\r\n@app.get(\"/\")\r\nasync def read_root():\r\n    return {\"Hello\": \"World\"}\r\n\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(app, host=\"127.0.0.1\", port=8000)`\r\n\r\nPython 3.8.4 -- Is this the problem? Something I did asked me to go from .3 to .4 ???\r\nuvicorn --version\r\nRunning uvicorn 0.11.5 with CPython 3.8.3 on Windows\r\n\r\nIt does not work or return anything, the arrow just spins.\r\nIn my more complex site, it not only does not work it folds up into a 'none existent' default endpoint.\r\n\r\nTry this site:\r\nhttps://rdshwys.azurewebsites.net/docs# to demonstrate the issue\r\n\r\n![image](https://user-images.githubusercontent.com/9003261/88348330-7f1fda00-cd90-11ea-975e-64417e3bcf54.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1783", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1783/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1783/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1783/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1783", "id": 664779836, "node_id": "MDU6SXNzdWU2NjQ3Nzk4MzY=", "number": 1783, "title": "Adding response parameter to endpoint function breaks Swagger UI", "user": {"login": "atartanian", "id": 1625877, "node_id": "MDQ6VXNlcjE2MjU4Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1625877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atartanian", "html_url": "https://github.com/atartanian", "followers_url": "https://api.github.com/users/atartanian/followers", "following_url": "https://api.github.com/users/atartanian/following{/other_user}", "gists_url": "https://api.github.com/users/atartanian/gists{/gist_id}", "starred_url": "https://api.github.com/users/atartanian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atartanian/subscriptions", "organizations_url": "https://api.github.com/users/atartanian/orgs", "repos_url": "https://api.github.com/users/atartanian/repos", "events_url": "https://api.github.com/users/atartanian/events{/privacy}", "received_events_url": "https://api.github.com/users/atartanian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T21:34:59Z", "updated_at": "2020-07-23T22:26:30Z", "closed_at": "2020-07-23T22:26:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [ ] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic). (not sure how to determine this)\r\n* [ ] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui). (not sure how to determine this)\r\n* [ ] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc). (not sure how to determine this)\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Problem\r\nFollowing tutorial here: https://fastapi.tiangolo.com/advanced/response-change-status-code/\r\n\r\nAdding `response` as a parameter to an endpoint completely breaks swagger ui, server throws\r\n\r\n```\r\n...\r\n  File \"/Users/atartanian/Development/carmera/carmera_take_home/.venv/lib/python3.8/site-packages/fastapi/openapi/utils.py\", line 101, in get_openapi_operation_parameters\r\n    \"schema\": field_schema(\r\n  File \"pydantic/schema.py\", line 177, in pydantic.schema.field_schema\r\n  File \"pydantic/schema.py\", line 712, in pydantic.schema.encode_default\r\n  File \"pydantic/json.py\", line 62, in pydantic.json.pydantic_encoder\r\nTypeError: Object of type 'type' is not JSON serializable\r\n```\r\n\r\n### minimally reproducible with the following code:\r\n\r\n```python\r\nfrom fastapi import FastAPI, Response\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/test\", status_code=200)\r\nasync def test(\r\n    response=Response\r\n):\r\n    return {\"message\": \"tada\"}\r\n```\r\n\r\n### Environment\r\n\r\n* OS:  `macOS `\r\n* FastAPI version: `0.60.1`\r\n* Python version `3.8.2`\r\n\r\n### Additional context\r\n\r\n![Screen Shot 2020-07-23 at 5 21 55 PM](https://user-images.githubusercontent.com/1625877/88340968-c06da680-cd0a-11ea-8507-621cddf7771c.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1781", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1781/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1781/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1781/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1781", "id": 664269408, "node_id": "MDU6SXNzdWU2NjQyNjk0MDg=", "number": 1781, "title": "How to transform db column to different json field", "user": {"login": "letsautom8", "id": 11028870, "node_id": "MDQ6VXNlcjExMDI4ODcw", "avatar_url": "https://avatars3.githubusercontent.com/u/11028870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letsautom8", "html_url": "https://github.com/letsautom8", "followers_url": "https://api.github.com/users/letsautom8/followers", "following_url": "https://api.github.com/users/letsautom8/following{/other_user}", "gists_url": "https://api.github.com/users/letsautom8/gists{/gist_id}", "starred_url": "https://api.github.com/users/letsautom8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letsautom8/subscriptions", "organizations_url": "https://api.github.com/users/letsautom8/orgs", "repos_url": "https://api.github.com/users/letsautom8/repos", "events_url": "https://api.github.com/users/letsautom8/events{/privacy}", "received_events_url": "https://api.github.com/users/letsautom8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T07:47:38Z", "updated_at": "2020-07-23T08:02:10Z", "closed_at": "2020-07-23T08:02:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im new to Fast API. I have followed the guide on sql databases and got it to work. Thank you for this awesome framework. \r\nJust a question on how do I present the json fields using different field name. This is because there is a requirement to hide the actual column name of the database.\r\ndb column: \r\nbuilding_id\r\n\r\nexpected json response\r\nbuildingId\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1779", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1779/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1779/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1779/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1779", "id": 664178853, "node_id": "MDU6SXNzdWU2NjQxNzg4NTM=", "number": 1779, "title": " \"POST /items/ HTTP/1.1\" 422 Unprocessable Entity", "user": {"login": "nmsaey42", "id": 31980287, "node_id": "MDQ6VXNlcjMxOTgwMjg3", "avatar_url": "https://avatars2.githubusercontent.com/u/31980287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmsaey42", "html_url": "https://github.com/nmsaey42", "followers_url": "https://api.github.com/users/nmsaey42/followers", "following_url": "https://api.github.com/users/nmsaey42/following{/other_user}", "gists_url": "https://api.github.com/users/nmsaey42/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmsaey42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmsaey42/subscriptions", "organizations_url": "https://api.github.com/users/nmsaey42/orgs", "repos_url": "https://api.github.com/users/nmsaey42/repos", "events_url": "https://api.github.com/users/nmsaey42/events{/privacy}", "received_events_url": "https://api.github.com/users/nmsaey42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-23T03:31:02Z", "updated_at": "2020-07-25T05:52:22Z", "closed_at": "2020-07-25T05:52:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Testing the post request of Fastapi. \r\n\r\nBut, every time I get 422 Unprocessable Entity Error. \r\n\r\n```\r\nfrom typing import Optional\r\n\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\nimport uvicorn\r\n\r\n\r\nclass Item(BaseModel):\r\n    name: str\r\n    description: Optional[str] = None\r\n    price: float\r\n    tax: Optional[float] = None\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.post(\"/items/\")\r\nasync def create_item(item: Item):\r\n    print(item)\r\n    return item\r\n\r\n```\r\nRunning it on gcp using : `uvicorn testing:app --host 0.0.0.0 --port 5000 `\r\n\r\n**Request Structure:**\r\nPost Request on the route:` http://35.132.89.173:5000/items/`\r\nbody: { \"name\": \"nmsaey\", \"price\":34}\r\nheader: { Content-Type: application/json} \r\n\r\n**Version**:\r\npython: 3.6.9\r\nfastapi: 0.60.1\r\npydantic: 1.6.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1778", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1778/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1778/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1778/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1778", "id": 664168110, "node_id": "MDU6SXNzdWU2NjQxNjgxMTA=", "number": 1778, "title": "Docs been strange when I try to click the APIs", "user": {"login": "gaoshanyu", "id": 10546774, "node_id": "MDQ6VXNlcjEwNTQ2Nzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/10546774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaoshanyu", "html_url": "https://github.com/gaoshanyu", "followers_url": "https://api.github.com/users/gaoshanyu/followers", "following_url": "https://api.github.com/users/gaoshanyu/following{/other_user}", "gists_url": "https://api.github.com/users/gaoshanyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaoshanyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaoshanyu/subscriptions", "organizations_url": "https://api.github.com/users/gaoshanyu/orgs", "repos_url": "https://api.github.com/users/gaoshanyu/repos", "events_url": "https://api.github.com/users/gaoshanyu/events{/privacy}", "received_events_url": "https://api.github.com/users/gaoshanyu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-23T02:52:12Z", "updated_at": "2020-07-23T09:02:58Z", "closed_at": "2020-07-23T09:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "# ENV:\r\nPython: 3.7.5\r\nfastapi: 0.55.1\r\nGoogle Chrome: Version 84.0.4147.89 (Official Build) (64-bit)\r\n\r\n# The video record:\r\n![record](https://user-images.githubusercontent.com/10546774/88247884-f3e00f00-ccd1-11ea-888e-432551d3a8bc.gif)\r\n\r\n\r\nPlease help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1777", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1777/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1777/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1777/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1777", "id": 664146370, "node_id": "MDU6SXNzdWU2NjQxNDYzNzA=", "number": 1777, "title": "How to define and use global exceptions\uff1f", "user": {"login": "lnsane", "id": 20310872, "node_id": "MDQ6VXNlcjIwMzEwODcy", "avatar_url": "https://avatars0.githubusercontent.com/u/20310872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnsane", "html_url": "https://github.com/lnsane", "followers_url": "https://api.github.com/users/lnsane/followers", "following_url": "https://api.github.com/users/lnsane/following{/other_user}", "gists_url": "https://api.github.com/users/lnsane/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnsane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnsane/subscriptions", "organizations_url": "https://api.github.com/users/lnsane/orgs", "repos_url": "https://api.github.com/users/lnsane/repos", "events_url": "https://api.github.com/users/lnsane/events{/privacy}", "received_events_url": "https://api.github.com/users/lnsane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T01:34:33Z", "updated_at": "2020-07-23T11:17:14Z", "closed_at": "2020-07-23T11:17:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n```Python\r\nimport uvicorn\r\nfrom fastapi import FastAPI\r\nfrom flask import Request\r\nfrom fastapi.responses import JSONResponse\r\nfrom Api.api import api_router\r\n\r\n\r\nclass UnicornException(Exception):\r\n    def __init__(self, name: str):\r\n        self.name = name\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.exception_handler(UnicornException)\r\nasync def unicorn_exception_handler(request: Request, exc: UnicornException):\r\n    return JSONResponse(\r\n        status_code=418,\r\n        content={\"message\": f\"Oops! {exc.name} did something. There goes a rainbow...\"},\r\n    )\r\n\r\n\r\napp.include_router(api_router, prefix=\"/api/v1\")\r\n\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(\"Start:app\", host=\"0.0.0.0\", port=8080, log_level=\"info\")\r\n\r\n```\r\n```python3\r\nfrom fastapi import APIRouter\r\n\r\nfrom Api import webApi\r\n\r\napi_router = APIRouter()\r\napi_router.include_router(webApi.router, tags=[\"webApi\"])\r\n\r\n```\r\n```python3\r\nfrom fastapi import APIRouter\r\n\r\nfrom Start import UnicornException\r\nfrom WebInit import test\r\nfrom allmain.StartInit import stop_all_containers, get_ssh_public_key, request_yml_data\r\nfrom bean.YmalBean import Yml\r\n\r\nrouter = APIRouter()\r\n\r\n\r\n@router.get(\"/1\")\r\ndef read_root():\r\n    # StartInit.get_ssh_public_key()\r\n    raise UnicornException(name=\"asdasd\")\r\n```\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/home/k/PycharmProjects/auto/Start.py\", line 5, in <module>\r\n    from Api.api import api_router\r\n  File \"/home/k/PycharmProjects/auto/Api/api.py\", line 3, in <module>\r\n    from Api import webApi\r\n  File \"/home/k/PycharmProjects/auto/Api/webApi.py\", line 3, in <module>\r\n    from Start import UnicornException\r\n  File \"/home/k/PycharmProjects/auto/Start.py\", line 5, in <module>\r\n    from Api.api import api_router\r\nImportError: cannot import name 'api_router'\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1772", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1772/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1772/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1772/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1772", "id": 663945870, "node_id": "MDU6SXNzdWU2NjM5NDU4NzA=", "number": 1772, "title": "mutipart/form-data not working on TestClient", "user": {"login": "cln-m4rie", "id": 16286987, "node_id": "MDQ6VXNlcjE2Mjg2OTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/16286987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cln-m4rie", "html_url": "https://github.com/cln-m4rie", "followers_url": "https://api.github.com/users/cln-m4rie/followers", "following_url": "https://api.github.com/users/cln-m4rie/following{/other_user}", "gists_url": "https://api.github.com/users/cln-m4rie/gists{/gist_id}", "starred_url": "https://api.github.com/users/cln-m4rie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cln-m4rie/subscriptions", "organizations_url": "https://api.github.com/users/cln-m4rie/orgs", "repos_url": "https://api.github.com/users/cln-m4rie/repos", "events_url": "https://api.github.com/users/cln-m4rie/events{/privacy}", "received_events_url": "https://api.github.com/users/cln-m4rie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-22T17:57:09Z", "updated_at": "2020-07-23T16:37:13Z", "closed_at": "2020-07-23T16:37:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom fastapi import APIRouter, File, Form, UploadFile\r\n\r\nrouter = APIRouter()\r\n\r\n@router.post(\"/upload\", response_model=MyResponseModel, summary=\"user csv upload api\")\r\nasync def upload(\r\n    user_id: int = Form(..., example=1),\r\n    csv_file: UploadFile = File(...),\r\n):\r\n    \"\"\"\r\n    some code...\r\n    \"\"\"\r\n```\r\n\r\nI checked on swagger(/docs). It was successful.\r\n\r\n\r\nbut, failed in test code\r\n\r\n```python\r\nfrom myapp import app\r\n\r\nclass UploadTest(unittest.TestCase):\r\n    client = TestClient(app)\r\n\r\n    def test_upload(self):\r\n        with csv.open(\"rb\") as f:\r\n            filebody = f.read()\r\n        res = self.client.post(\r\n            \"/api/upload\",\r\n            data={\r\n                \"user_id\": 1\r\n            },\r\n            files={\r\n                \"csv_file\": (\"filename.csv\", filebody),\r\n            },\r\n            headers={\"Content-Type\": \"multipart/form-data\"})\r\n        self.assertEqual(status.HTTP_200_OK, res.status_code)\r\n        MyResponseModel.parse_obj(res.json()[\"data\"])\r\n```\r\n\r\n```\r\nError getting request body: can't concat NoneType to bytes\r\n{'detail': 'There was an error parsing the body'}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1770", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1770/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1770/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1770/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1770", "id": 663873855, "node_id": "MDU6SXNzdWU2NjM4NzM4NTU=", "number": 1770, "title": "Automatic interactive API documentation not working as expected.", "user": {"login": "Lepiloff", "id": 28572064, "node_id": "MDQ6VXNlcjI4NTcyMDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/28572064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lepiloff", "html_url": "https://github.com/Lepiloff", "followers_url": "https://api.github.com/users/Lepiloff/followers", "following_url": "https://api.github.com/users/Lepiloff/following{/other_user}", "gists_url": "https://api.github.com/users/Lepiloff/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lepiloff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lepiloff/subscriptions", "organizations_url": "https://api.github.com/users/Lepiloff/orgs", "repos_url": "https://api.github.com/users/Lepiloff/repos", "events_url": "https://api.github.com/users/Lepiloff/events{/privacy}", "received_events_url": "https://api.github.com/users/Lepiloff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-22T16:00:17Z", "updated_at": "2020-07-28T11:29:01Z", "closed_at": "2020-07-22T17:11:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've come across some strange behavior in automatic interactive API documentation (provided by Swagger UI)\r\nwhen I get to the page\r\n`http://127.0.0.1:8000/docs`\r\nThe list of routes is displayed with the parameters I have set: `prefix`, `tags`. So far, so good. \r\n\r\n![Screenshot from 2020-07-22 18-43-12](https://user-images.githubusercontent.com/28572064/88197701-825d7d80-cc4b-11ea-9607-79a50fa21e7c.png)\r\n\r\n\r\nProblems begin when I click on any of the methods. A new group with the` tags=default` parameter appears on the page and the endpoint that I clicked is automatically added to it. By successively clicking on all my endpoints I end up with one group with tags=default in which all my endpoints are concentrated. But I can't see their contents, because when I click on any of them I see an infinitely spinning boot. \r\n\r\n![Screenshot from 2020-07-22 18-46-07](https://user-images.githubusercontent.com/28572064/88197880-c0f33800-cc4b-11ea-9a09-ca6de698344b.png)\r\nThis behavior is observed on both the local machine and the remote server.\r\nIn the **main.py** file, I use this routing system\r\n```\r\napp.include_router(text_ocr.router, prefix='/image', tags=['image'])\r\napp.include_router(notes.router, prefix='/notes', tags=['notes'])\r\napp.include_router(product.router, prefix='/product', tags=['product'])\r\n```\r\nFor the purity of the experiment, I commented on these call points and added a standard endpoint from the documentation\r\n```\r\n# app.include_router(text_ocr.router, prefix='/image', tags=['image'])\r\n# app.include_router(notes.router, prefix='/notes', tags=['notes'])\r\n# app.include_router(product.router, prefix='/product', tags=['product'])\r\n@app.get(\"/\")\r\nasync def root():\r\n    return {\"message\": \"Hello World\"}\r\n```\r\nBut I got the same result.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1767", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1767/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1767/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1767/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1767", "id": 663591157, "node_id": "MDU6SXNzdWU2NjM1OTExNTc=", "number": 1767, "title": "Include breaking changes in changelog", "user": {"login": "ArcLightSlavik", "id": 31127044, "node_id": "MDQ6VXNlcjMxMTI3MDQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/31127044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArcLightSlavik", "html_url": "https://github.com/ArcLightSlavik", "followers_url": "https://api.github.com/users/ArcLightSlavik/followers", "following_url": "https://api.github.com/users/ArcLightSlavik/following{/other_user}", "gists_url": "https://api.github.com/users/ArcLightSlavik/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArcLightSlavik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArcLightSlavik/subscriptions", "organizations_url": "https://api.github.com/users/ArcLightSlavik/orgs", "repos_url": "https://api.github.com/users/ArcLightSlavik/repos", "events_url": "https://api.github.com/users/ArcLightSlavik/events{/privacy}", "received_events_url": "https://api.github.com/users/ArcLightSlavik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-22T08:52:43Z", "updated_at": "2020-08-10T15:07:27Z", "closed_at": "2020-08-10T15:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version 0.59.0 introduced a small breaking change where the parameter 'openapi prefix' was removed meaning code below wasn't working:\r\n\r\n```\r\nopenapi_schema = get_openapi(\r\n    version=1.0,\r\n    title='A title',\r\n    description='A description',\r\n    openapi_prefix='',\r\n    routes=app.routes,\r\n)\r\n```\r\nI think it would be useful to have a separate section in the release notes where these types of changes are listed\r\n\r\nExample:\r\n \r\n<img width=\"798\" alt=\"Screenshot 2020-07-22 at 11 51 41\" src=\"https://user-images.githubusercontent.com/31127044/88156176-bae06580-cc11-11ea-8ce9-8dac41c238dd.png\">\r\n\r\nIt is similar to how angular does it (https://next.angular.io/guide/updating-to-version-10)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1756", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1756/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1756/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1756/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1756", "id": 662959871, "node_id": "MDU6SXNzdWU2NjI5NTk4NzE=", "number": 1756, "title": "Error unpacking multiform-data with list of floats", "user": {"login": "theVmagnificient", "id": 42278932, "node_id": "MDQ6VXNlcjQyMjc4OTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/42278932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theVmagnificient", "html_url": "https://github.com/theVmagnificient", "followers_url": "https://api.github.com/users/theVmagnificient/followers", "following_url": "https://api.github.com/users/theVmagnificient/following{/other_user}", "gists_url": "https://api.github.com/users/theVmagnificient/gists{/gist_id}", "starred_url": "https://api.github.com/users/theVmagnificient/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theVmagnificient/subscriptions", "organizations_url": "https://api.github.com/users/theVmagnificient/orgs", "repos_url": "https://api.github.com/users/theVmagnificient/repos", "events_url": "https://api.github.com/users/theVmagnificient/events{/privacy}", "received_events_url": "https://api.github.com/users/theVmagnificient/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-21T12:24:57Z", "updated_at": "2020-07-22T13:27:04Z", "closed_at": "2020-07-22T13:27:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for great framework. But I'm a bit stuck with uploading the lists of floats to FastAPI\r\n\r\n```Python\r\nfrom fastapi import FastAPI, File, UploadFile, status, Request, Response, Form\r\n\r\nclass Embedding(BaseModel):\r\n    emb: List[float]\r\n    id: int = None\r\n\r\n@app.post(\"/tracks/add\", status_code=status.HTTP_201_CREATED)\r\ndef save_tracks(emb_list: List[Embedding] = Form(...),\r\n                uuid: str = Form(...), file: UploadFile = File(...)):\r\n    return \"ok\"\r\n\r\n```\r\n\r\nHere is the test to reproduce\r\n\r\n```\r\nurl = 'http://0.0.0.0:8777/tracks/add'\r\nfor i in uuid_list:\r\n    emb_list = []\r\n    print(i)\r\n    for j in range(random.randint(3, 7)):\r\n        emb = {\"emb\": (1.1, 2.2, 3.3)}\r\n        emb_list.append(emb)\r\n    files = {\"file\": ('filename', open('./test.jpg', 'rb'), 'image/jpeg')}\r\n    emb_list = tuple(emb_list)\r\n    r = requests.post(url, files=files, data={\"uuid\": \"test_uuid\", \"emb_list\": emb_list})\r\n    print(r.content)\r\n```\r\nThen I'm getting an error \r\n\r\n```\r\nb'{\"detail\":[{\"loc\":[\"body\",\"emb_list\",0],\"msg\":\"value is not a valid dict\",\"type\":\"type_error.dict\"},{\"loc\":[\"body\",\"emb_list\",1],\"msg\":\"value is not a valid dict\",\"type\":\"type_error.dict\"},{\"loc\":[\"body\",\"emb_list\",2],\"msg\":\"value is not a valid dict\",\"type\":\"type_error.dict\"},{\"loc\":[\"body\",\"emb_list\",3],\"msg\":\"value is not a valid dict\",\"type\":\"type_error.dict\"},{\"loc\":[\"body\",\"emb_list\",4],\"msg\":\"value is not a valid dict\",\"type\":\"type_error.dict\"}]}'\r\n```\r\n\r\nHow to correctly upload the list of floats then?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1750", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1750/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1750/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1750/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1750", "id": 662546998, "node_id": "MDU6SXNzdWU2NjI1NDY5OTg=", "number": 1750, "title": "Endpoint with parameter that has forward \"/\" slashes", "user": {"login": "NickDatLe", "id": 30253913, "node_id": "MDQ6VXNlcjMwMjUzOTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/30253913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NickDatLe", "html_url": "https://github.com/NickDatLe", "followers_url": "https://api.github.com/users/NickDatLe/followers", "following_url": "https://api.github.com/users/NickDatLe/following{/other_user}", "gists_url": "https://api.github.com/users/NickDatLe/gists{/gist_id}", "starred_url": "https://api.github.com/users/NickDatLe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NickDatLe/subscriptions", "organizations_url": "https://api.github.com/users/NickDatLe/orgs", "repos_url": "https://api.github.com/users/NickDatLe/repos", "events_url": "https://api.github.com/users/NickDatLe/events{/privacy}", "received_events_url": "https://api.github.com/users/NickDatLe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-21T03:53:36Z", "updated_at": "2020-07-21T19:42:55Z", "closed_at": "2020-07-21T19:42:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to put a parameter that is part of the URL but it has forward-slashes?\r\n\r\nFor example:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/items/{path}\")\r\ndef read_root(path:str=\"/inventory/armor/helmet):\r\n    return path\r\n```\r\nWith that route above, if I put example.com/items/this/is/my/path I get a 404. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1749", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1749/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1749/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1749/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1749", "id": 662364008, "node_id": "MDU6SXNzdWU2NjIzNjQwMDg=", "number": 1749, "title": "Response error on get request !!", "user": {"login": "lvar", "id": 10148942, "node_id": "MDQ6VXNlcjEwMTQ4OTQy", "avatar_url": "https://avatars1.githubusercontent.com/u/10148942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lvar", "html_url": "https://github.com/lvar", "followers_url": "https://api.github.com/users/lvar/followers", "following_url": "https://api.github.com/users/lvar/following{/other_user}", "gists_url": "https://api.github.com/users/lvar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lvar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lvar/subscriptions", "organizations_url": "https://api.github.com/users/lvar/orgs", "repos_url": "https://api.github.com/users/lvar/repos", "events_url": "https://api.github.com/users/lvar/events{/privacy}", "received_events_url": "https://api.github.com/users/lvar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-20T23:16:02Z", "updated_at": "2020-07-24T15:24:14Z", "closed_at": "2020-07-24T15:24:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm a little desperate with this problem...I have documented it with details here:\r\n\r\n[link](https://stackoverflow.com/questions/63004799/fastapi-get-request-shows-validation-error)\r\n\r\n But can't find any solution...please help !!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1747", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1747/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1747/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1747/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1747", "id": 662163304, "node_id": "MDU6SXNzdWU2NjIxNjMzMDQ=", "number": 1747, "title": "CORS middleware does not reject invalid requests", "user": {"login": "Fogapod", "id": 22667809, "node_id": "MDQ6VXNlcjIyNjY3ODA5", "avatar_url": "https://avatars0.githubusercontent.com/u/22667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fogapod", "html_url": "https://github.com/Fogapod", "followers_url": "https://api.github.com/users/Fogapod/followers", "following_url": "https://api.github.com/users/Fogapod/following{/other_user}", "gists_url": "https://api.github.com/users/Fogapod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fogapod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fogapod/subscriptions", "organizations_url": "https://api.github.com/users/Fogapod/orgs", "repos_url": "https://api.github.com/users/Fogapod/repos", "events_url": "https://api.github.com/users/Fogapod/events{/privacy}", "received_events_url": "https://api.github.com/users/Fogapod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T19:10:14Z", "updated_at": "2020-07-20T19:21:36Z", "closed_at": "2020-07-20T19:21:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Example\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom fastapi.middleware.cors import CORSMiddleware\r\n\r\napp = FastAPI()\r\napp.add_middleware(\r\n    CORSMiddleware,\r\n    allow_origins=[\"http://localhost\"],\r\n    allow_credentials=True,\r\n    allow_methods=[\"GET\"],\r\n    allow_headers=[\"*\"],\r\n)\r\n\r\n# POST endpoint is registered, but it should not be accessible\r\n# because allow_methods=[\"GET\"]\r\n@app.post(\"/\")\r\nasync def hello():\r\n    return {\"message\": \"Hello World\"}\r\n```\r\n\r\n```sh\r\n~ uvicorn main:app --port 8081\r\n```\r\n\r\n### Description\r\n\r\nI have multiple issues with this minimal example:\r\n- Requests with wrong/missing `Origin` header are able to go through:\r\n```sh\r\n~ curl -X POST localhost:8081 -H 'Origin: http://remotehost' -v\r\n*   Trying 127.0.0.1:8081...\r\n* Connected to localhost (127.0.0.1) port 8081 (#0)\r\n> POST / HTTP/1.1\r\n> Host: localhost:8081\r\n> User-Agent: curl/7.71.1\r\n> Accept: */*\r\n> Origin: http://remotehost\r\n>\r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 200 OK\r\n< date: Mon, 20 Jul 2020 19:02:55 GMT\r\n< server: uvicorn\r\n< content-length: 25\r\n< content-type: application/json\r\n< access-control-allow-credentials: true\r\n<\r\n* Connection #0 to host localhost left intact\r\n{\"message\":\"Hello World\"}%\r\n```\r\n(as you can see, there is a `access-control-allow-credentials` header, so middleware works when `Origin` is present, but requests are never rejected)\r\n\r\n- I am able to make any kind of request despite the fact that only `GET` is allowed\r\n```sh\r\n~ curl -X POST localhost:8081 -v\r\n*   Trying 127.0.0.1:8081...\r\n* Connected to localhost (127.0.0.1) port 8081 (#0)\r\n> POST / HTTP/1.1\r\n> Host: localhost:8081\r\n> User-Agent: curl/7.71.1\r\n> Accept: */*\r\n>\r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 200 OK\r\n< date: Mon, 20 Jul 2020 19:01:00 GMT\r\n< server: uvicorn\r\n< content-length: 25\r\n< content-type: application/json\r\n<\r\n* Connection #0 to host localhost left intact\r\n{\"message\":\"Hello World\"}%\r\n```\r\n- `OPTIONS` requests are rejected with `405`\r\n```sh\r\n~ curl -X OPTIONS localhost:8081 -H 'Origin: http://localhost' -v\r\n*   Trying 127.0.0.1:8081...\r\n* Connected to localhost (127.0.0.1) port 8081 (#0)\r\n> OPTIONS / HTTP/1.1\r\n> Host: localhost:8081\r\n> User-Agent: curl/7.71.1\r\n> Accept: */*\r\n> Origin: http://localhost\r\n>\r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 405 Method Not Allowed\r\n< date: Mon, 20 Jul 2020 19:11:50 GMT\r\n< server: uvicorn\r\n< content-length: 31\r\n< content-type: application/json\r\n< access-control-allow-credentials: true\r\n< access-control-allow-origin: http://localhost\r\n< vary: Origin\r\n<\r\n* Connection #0 to host localhost left intact\r\n{\"detail\":\"Method Not Allowed\"}%\r\n```\r\n\r\n### Environment\r\n\r\n* OS: `Linux 5.7.7-arch1-1`\r\n* FastAPI Version: `0.59.0`\r\n* Python version: `3.8.3`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1743", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1743/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1743/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1743/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1743", "id": 661721737, "node_id": "MDU6SXNzdWU2NjE3MjE3Mzc=", "number": 1743, "title": "Can I decorate a path operation function", "user": {"login": "subritc", "id": 62293786, "node_id": "MDQ6VXNlcjYyMjkzNzg2", "avatar_url": "https://avatars3.githubusercontent.com/u/62293786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/subritc", "html_url": "https://github.com/subritc", "followers_url": "https://api.github.com/users/subritc/followers", "following_url": "https://api.github.com/users/subritc/following{/other_user}", "gists_url": "https://api.github.com/users/subritc/gists{/gist_id}", "starred_url": "https://api.github.com/users/subritc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/subritc/subscriptions", "organizations_url": "https://api.github.com/users/subritc/orgs", "repos_url": "https://api.github.com/users/subritc/repos", "events_url": "https://api.github.com/users/subritc/events{/privacy}", "received_events_url": "https://api.github.com/users/subritc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-20T11:41:17Z", "updated_at": "2020-07-22T07:04:25Z", "closed_at": "2020-07-22T06:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n\r\n### Description \r\nI want to decorate my path operation function using a custom decorator. I want to check for some information within the Request body for every request and based on the information, Permit or disallow the user from accessing certain endpoints. \r\n\r\nI'm wondering if this can be done, And if so, How? I tried a few options but I'm not able to get it working as expected. \r\n\r\nThis is my decorator function:\r\n\r\n```Python\r\ndef decorator(permissions):\r\n    def wrapper(function, *args, **kwargs):\r\n        async def executor():\r\n            return await function(*args, **kwargs)\r\n        return executor\r\n    return wrapper\r\n```\r\n\r\nAnd this is how I am using it\r\n```Python\r\n\r\n@apiRouter.get(\"/example-end-point\")\r\n@decorator([\"CAN_DO_SOMETHING\"])\r\nasync def do_something():\r\n    \"\"\"\r\n    Do whatever needs to be done\r\n    \"\"\"\r\n   return {\"payload\": {}}\r\n\r\n```\r\n\r\nI am able to decorate the function in the sense that the `do_something` function executes every time the end-point is called, along with decorator code. BUT, I face problems such as\r\n1. Decorating the path operation function prevents me from utilizing FastAPI functionality. For example, Adding a mandatory query parameter to the above API,\r\n```Python\r\nasync def do_something(query: str)\r\n```\r\nReturns an ASGI Internal Server Error instead of a 422 / Validation Error; EVEN when I pass the query parameter.\r\n\r\nI am assuming that the query parameters are not \"passed\" to the end-point function triggering this error, but I'm curious as to why FastAPI does not handle it with a 422, instead throwing an ASGI Exception with a TypeError as\r\n```Python\r\nTypeError: do_something() missing 1 required positional argument: 'query'\r\n```\r\n\r\n2. A cryptic warning pops up at times with the below stack trace\r\n\r\n```Python\r\nWARNING: Executing <Task finished coro=<RequestResponseCycle.run_asgi() done, defined at /project/env/lib/python3.7/site-packages/uvicorn/protocols/http/httptools_impl.py:373> result=None created at /project/env/lib/python3.7/site-packages/uvicorn/protocols/http/httptools_impl.py:261> took 3.402 seconds\r\n``` \r\nwhich I assume occurs when a finished co-routine object is awaited.\r\n\r\nI tried searching online but could not find much regarding `fastapi custom decorators` OR the warning `<Task finished...done>`.\r\nWould appreciate any advice I get.\r\n\r\nThanks a bunch!\r\n \r\n### Environment\r\n\r\n* OS: Ubuntu 16:\r\n* FastAPI Version [e.g. 0.59.0]:\r\n* Python version: 3.7.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1741", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1741/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1741/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1741/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1741", "id": 661373171, "node_id": "MDU6SXNzdWU2NjEzNzMxNzE=", "number": 1741, "title": "Running FastAPI from a Ubuntu 20.04 Systemd service cpu hog 80-100%", "user": {"login": "esundberg", "id": 14306155, "node_id": "MDQ6VXNlcjE0MzA2MTU1", "avatar_url": "https://avatars2.githubusercontent.com/u/14306155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esundberg", "html_url": "https://github.com/esundberg", "followers_url": "https://api.github.com/users/esundberg/followers", "following_url": "https://api.github.com/users/esundberg/following{/other_user}", "gists_url": "https://api.github.com/users/esundberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/esundberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esundberg/subscriptions", "organizations_url": "https://api.github.com/users/esundberg/orgs", "repos_url": "https://api.github.com/users/esundberg/repos", "events_url": "https://api.github.com/users/esundberg/events{/privacy}", "received_events_url": "https://api.github.com/users/esundberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T04:58:05Z", "updated_at": "2020-07-20T05:17:22Z", "closed_at": "2020-07-20T05:17:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x ] I added a very descriptive title to this issue.\r\n* [x ] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x ] I searched the FastAPI documentation, with the integrated search.\r\n* [x ] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x ] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [ X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [X ] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [ X] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n========================================================\r\n\r\nMight be a little off topic, but running a FastAPI program from a Ubuntu 20.04 Systemd Service pegs the CPU around 80-100%. With out any queries being preformed. Using htop to view cpu usage by process. This has happened with 2 different API that I have written using Fast API. I acknowledge that this might not be a FastAPI issue. I am using uvicorn.run() to start the web server in main.py\r\n\r\nWhen i just run the script as \"python main.py\" from the CLI there is almost 0 CPU Usage\r\n\r\nhtop cpu usage with 0 API Queries\r\n```\r\n  1  [                                                                                  0.0%]   Tasks: 36, 68 thr; 2 running\r\n  2  [|                                                                                 0.7%]   Load average: 0.70 0.74 0.63 \r\n  3  [|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||        83.4%]   Uptime: 06:33:28\r\n  4  [|                                                                                 0.7%]\r\n  Mem[||||||||||||||                                                              521M/7.78G]\r\n  Swp[                                                                                 0K/0K]\r\n\r\n    PID USER      PRI  NI  VIRT   RES   SHR S CPU% MEM%   TIME+  Command\r\n   2181 root       20   0 40716 31408 12884 R 83.4  0.4 14:10.43 /opt/api/env/bin/python /opt/api/src/main.py\r\n   2202 root       20   0 47212 32556 14640 S  0.7  0.4  0:01.78 /opt/api/env/bin/python -c from multiprocessing.spawn import spawn_main; spawn_main(tracker_fd=5, pipe_handle=7) --mu\r\n```\r\n\r\nsystemd service file\r\nsystemctl start api | systemctl stop api\r\n```\r\n/lib/systemd/system/api.service \r\n[Unit]\r\nDescription=My API\r\nAfter=multi-user.target\r\nConflicts=getty@tty1.service\r\n\r\n[Service]\r\nType=simple\r\nExecStart=/opt/api/env/bin/python /opt/api/src/main.py\r\nStandardOutput=file:/opt/api/logs/api.log\r\nStandardInput=tty-force\r\n#Restart=always\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n```\r\n\r\nConfig File: config.py\r\n```\r\napi = {\r\n    \"host\": \"0.0.0.0\",\r\n    \"port\": 50000,\r\n    \"reload\": True,\r\n    \"workers\": 1,\r\n    \"log_level\": \"info\",\r\n    \"debug\": False\r\n}\r\n```\r\nMain.py\r\n```\r\nimport api\r\nimport uvicorn\r\nimport sys\r\nimport traceback\r\n\r\n# Configuration File\r\nimport config as cfg\r\n\r\nif __name__ == '__main__':\r\n    print(f'Starting API Server: {cfg.api[\"host\"]}:{cfg.api[\"port\"]}\\n')\r\n\r\n    try:\r\n        uvicorn.run(\r\n            \"api:app\",\r\n            host=cfg.api[\"host\"],\r\n            port=cfg.api[\"port\"],\r\n            workers=cfg.api[\"workers\"],\r\n            log_level=cfg.api[\"log_level\"],\r\n            reload=cfg.api[\"reload\"],\r\n            debug=cfg.api[\"debug\"]\r\n        )\r\n    except KeyboardInterrupt:\r\n        print(f'\\nExiting\\n')\r\n    except Exception as e:\r\n        print(f'Failed to Start API')\r\n        print('='*100)\r\n        traceback.print_exc(file=sys.stdout)\r\n        print('='*100)\r\n        print('Exiting\\n')\r\n    print(f'\\n\\n')\r\n```\r\n\r\n\r\napi.py\r\nNote lrn is a module that opens a tcp socket to a server, send a query, and get a response.\r\n```\r\nfrom fastapi import FastAPI\r\nimport uvicorn\r\nfrom lrn import SSLRN\r\n\r\nhost = 'myhost.com'\r\nport = 123456\r\n\r\nlrn = SSLRN()\r\nlrn.set_host(host, port)\r\n\r\n\r\n######################\r\n# Fast API\r\n######################\r\napp = FastAPI(\r\n    title=\"API\",\r\n    description=\"API\",\r\n    version=\"1.0\"\r\n)\r\n\r\n\r\n#####################\r\n# Endpoints\r\n#####################\r\n@app.get(\"/ep\")\r\n@app.post(\"/ep\")\r\nasync def ep_get(number: str= None, apikey: str = None):\r\n    result = lrn.query_single(number)\r\n    return lrn.parser(result)\r\n```\r\n\r\n\r\nModule Versions\r\n```\r\npip freeze\r\nclick==7.1.2\r\nfastapi==0.59.0\r\nh11==0.9.0\r\nhttptools==0.1.1\r\ninstall==1.3.3\r\nmysql-connector-python==8.0.21\r\npkg-resources==0.0.0\r\nprotobuf==3.12.2\r\npydantic==1.6.1\r\nsix==1.15.0\r\nstarlette==0.13.4\r\nuvicorn==0.11.5\r\nuvloop==0.14.0\r\nwebsockets==8.1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1733", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1733/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1733/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1733/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1733", "id": 660574569, "node_id": "MDU6SXNzdWU2NjA1NzQ1Njk=", "number": 1733, "title": "Problem rendering numpy.float32 through ORJSONRESPONSE", "user": {"login": "yadavshashank", "id": 16662309, "node_id": "MDQ6VXNlcjE2NjYyMzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/16662309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yadavshashank", "html_url": "https://github.com/yadavshashank", "followers_url": "https://api.github.com/users/yadavshashank/followers", "following_url": "https://api.github.com/users/yadavshashank/following{/other_user}", "gists_url": "https://api.github.com/users/yadavshashank/gists{/gist_id}", "starred_url": "https://api.github.com/users/yadavshashank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yadavshashank/subscriptions", "organizations_url": "https://api.github.com/users/yadavshashank/orgs", "repos_url": "https://api.github.com/users/yadavshashank/repos", "events_url": "https://api.github.com/users/yadavshashank/events{/privacy}", "received_events_url": "https://api.github.com/users/yadavshashank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-19T04:13:01Z", "updated_at": "2020-07-21T01:46:34Z", "closed_at": "2020-07-21T01:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [ ] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [ ] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [ ] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Code\r\n\r\n```\r\nfrom fastapi.responses import ORJSONResponse\r\n\r\napp = FastAPI()\r\n\r\n# Payload type\r\nclass Tweet(BaseModel):\r\n    text: str\r\n\r\npredict = Predict()\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    return {\"message\": \"Hello World\"}\r\n\r\n\r\n@app.post(\"/sentiment\", response_class=ORJSONResponse)\r\nasync def sentiment(tweet:Tweet):  \r\n    data = predict.get_sentiment(tweet.text)\r\n\r\n    # data contains the following keys\r\n    # data = { \"sentiment\": type -> text, \"polarity\": type -> numpy.float32}\r\n    return data\r\n\r\n```\r\n\r\n### Description\r\n\r\nI have exposed an endpoint which returns the sentiment of a text and its polarity (type ->numpy.float32).\r\n\r\nThis throws an error:\r\n\r\n```\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py\", line 388, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\uvicorn\\middleware\\proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\fastapi\\applications.py\", line 183, in __call__\r\n    await super().__call__(scope, receive, send)  # pragma: no cover\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\starlette\\applications.py\", line 102, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 181, in __call__\r\n    raise exc from None\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 159, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\starlette\\exceptions.py\", line 82, in __call__\r\n    raise exc from None\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\starlette\\exceptions.py\", line 71, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\starlette\\routing.py\", line 550, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\starlette\\routing.py\", line 227, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\starlette\\routing.py\", line 41, in app\r\n    response = await func(request)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\fastapi\\routing.py\", line 213, in app\r\n    is_coroutine=is_coroutine,\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\fastapi\\routing.py\", line 136, in serialize_response\r\n    return jsonable_encoder(response_content)\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\fastapi\\encoders.py\", line 115, in jsonable_encoder\r\n    sqlalchemy_safe=sqlalchemy_safe,\r\n  File \"c:\\users\\shash\\anaconda3\\envs\\sentiment_analysis\\lib\\site-packages\\fastapi\\encoders.py\", line 160, in jsonable_encoder\r\n    raise ValueError(errors)\r\nValueError: [TypeError(\"'numpy.float32' object is not iterable\",), TypeError('vars() argument must have __dict__ attribute',)]\r\n```\r\n### Additional comments\r\n\r\nThis does not occur if the value of polarity is typecast to float before returning the response.\r\n\r\n### Environment\r\n\r\n* OS: Windows:\r\n* FastAPI Version : 0.59.0\r\n* Python version: 3.6.10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1729", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1729/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1729/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1729/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1729", "id": 659603998, "node_id": "MDU6SXNzdWU2NTk2MDM5OTg=", "number": 1729, "title": "Multiple levels of model inheritance does not work", "user": {"login": "flashgorman-chorus", "id": 68445085, "node_id": "MDQ6VXNlcjY4NDQ1MDg1", "avatar_url": "https://avatars2.githubusercontent.com/u/68445085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flashgorman-chorus", "html_url": "https://github.com/flashgorman-chorus", "followers_url": "https://api.github.com/users/flashgorman-chorus/followers", "following_url": "https://api.github.com/users/flashgorman-chorus/following{/other_user}", "gists_url": "https://api.github.com/users/flashgorman-chorus/gists{/gist_id}", "starred_url": "https://api.github.com/users/flashgorman-chorus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flashgorman-chorus/subscriptions", "organizations_url": "https://api.github.com/users/flashgorman-chorus/orgs", "repos_url": "https://api.github.com/users/flashgorman-chorus/repos", "events_url": "https://api.github.com/users/flashgorman-chorus/events{/privacy}", "received_events_url": "https://api.github.com/users/flashgorman-chorus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-17T20:19:41Z", "updated_at": "2020-07-17T20:37:47Z", "closed_at": "2020-07-17T20:37:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom pydantic import Field, BaseModel\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass ConversationAttributesForCreate(BaseModel):\r\n    name: str = Field(None, title=\"The name of the conversation.\")\r\n    description: Optional[str] = Field(\r\n        None, title=\"The description of the conversation\", max_length=200\r\n    )\r\n\r\n\r\nclass ConversationAttributes(ConversationAttributesForCreate):\r\n    date_created: str\r\n\r\n\r\nclass Conversation(BaseModel):\r\n    attributes = ConversationAttributes\r\n    id: str\r\n    type: str\r\n\r\n\r\n@app.put(\"/api/v1/conversations/{id}\", tags=[\"Conversations\"])\r\ndef update_a_conversation(id: str, conversation: Conversation):\r\n    print(f\"update conversation {id}: {conversation}\")\r\n```\r\n\r\n### Description\r\n\r\nAfter defining the \"update a conversation API\" as shown above, the resulting schema (by way of the following example) looks like this:\r\n\r\n```\r\n{\r\n  \"id\": \"string\",\r\n  \"type\": \"string\"\r\n}\r\n```\r\n\r\nWhere are the attributes?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1728", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1728/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1728/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1728/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1728", "id": 659527695, "node_id": "MDU6SXNzdWU2NTk1Mjc2OTU=", "number": 1728, "title": "Getting the value of an async method in a non-async path operation function", "user": {"login": "orientalperil", "id": 151680, "node_id": "MDQ6VXNlcjE1MTY4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/151680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orientalperil", "html_url": "https://github.com/orientalperil", "followers_url": "https://api.github.com/users/orientalperil/followers", "following_url": "https://api.github.com/users/orientalperil/following{/other_user}", "gists_url": "https://api.github.com/users/orientalperil/gists{/gist_id}", "starred_url": "https://api.github.com/users/orientalperil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orientalperil/subscriptions", "organizations_url": "https://api.github.com/users/orientalperil/orgs", "repos_url": "https://api.github.com/users/orientalperil/repos", "events_url": "https://api.github.com/users/orientalperil/events{/privacy}", "received_events_url": "https://api.github.com/users/orientalperil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-17T18:50:40Z", "updated_at": "2020-07-18T06:15:30Z", "closed_at": "2020-07-18T06:15:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using SQLAlchemy ORM so I made my path operation function using `def` not `async def`.  In my function though I want to call `request.json()` which is async and must be awaited.  How can I get the full body of the request in a non-async function?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1725", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1725/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1725/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1725/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1725", "id": 659143766, "node_id": "MDU6SXNzdWU2NTkxNDM3NjY=", "number": 1725, "title": "Can I use ORM mode with SQLAlchemy and JSON fields for Postgres or Mysql?", "user": {"login": "acidjunk", "id": 685002, "node_id": "MDQ6VXNlcjY4NTAwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/685002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acidjunk", "html_url": "https://github.com/acidjunk", "followers_url": "https://api.github.com/users/acidjunk/followers", "following_url": "https://api.github.com/users/acidjunk/following{/other_user}", "gists_url": "https://api.github.com/users/acidjunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/acidjunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acidjunk/subscriptions", "organizations_url": "https://api.github.com/users/acidjunk/orgs", "repos_url": "https://api.github.com/users/acidjunk/repos", "events_url": "https://api.github.com/users/acidjunk/events{/privacy}", "received_events_url": "https://api.github.com/users/acidjunk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T10:53:18Z", "updated_at": "2020-07-17T14:40:51Z", "closed_at": "2020-07-17T14:40:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x ] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Example\r\n\r\nRelevant parts of DB Model (using declarative base) \r\n\r\n```Python\r\nfrom sqlalchemy.dialects.mysql import JSON\r\nfrom sqlalchemy import Column, Text \r\n\r\nclass Certificate(Base):\r\n    __tablename__ = \"certificates\"\r\n\r\n    commonname = Column(JSON, default=[], nullable=False)\r\n    certificate = Column(Text, nullable=True)\r\n    cachain = Column(Text, nullable=True)\r\n```\r\n\r\nSchema\r\n```Python\r\nfrom typing import List, Optional\r\n\r\nfrom pydantic import BaseModel, Json\r\n\r\n\r\n# Shared properties\r\nclass CertificateBase(BaseModel):\r\n    commonname: Optional[Json[List[str]]]\r\n    certificate: Optional[str] = None\r\n    cachain: Optional[str] = None\r\n\r\n\r\n# Properties to receive on creation\r\nclass CertificateCreate(CertificateBase):\r\n    pass\r\n\r\n\r\n# Properties shared by models stored in DB\r\nclass CertificateBaseInDB(CertificateBase):\r\n    id: int\r\n\r\n    class Config:\r\n        \"\"\"Pydantic Configuration.\"\"\"\r\n\r\n        orm_mode = True\r\n\r\n\r\n# Properties to receive via API on update\r\nclass CertificateUpdate(CertificateBaseInDB):\r\n    pass\r\n```\r\n\r\nThe endpoint documentation is OK but when it tries to safe stuff to the DB, with this example of a payload:\r\n\r\n```json\r\n{\r\n  \"commonname\": [\r\n    \"string\"\r\n  ],\r\n  \"certificate\": \"string\",\r\n  \"cachain\": \"string\",\r\n}\r\n```\r\n\r\nIt returns a validation error; before trying to save it to the DB:\r\n```json\r\n{\r\n  \"detail\": [\r\n    {\r\n      \"loc\": [\r\n        \"body\",\r\n        \"certificate_in\",\r\n        \"commonname\"\r\n      ],\r\n      \"msg\": \"JSON object must be str, bytes or bytearray\",\r\n      \"type\": \"type_error.json\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nIs this expected behaviour or does the Pydantic ORM mode not support JSON fields in the underlying SQLAlchemy functionality? I wonder what I can do to correctly store the data for this use case. Can I override or implement the behaviour somehow for one field?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1719", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1719/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1719/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1719/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1719", "id": 657583574, "node_id": "MDU6SXNzdWU2NTc1ODM1NzQ=", "number": 1719, "title": "Yield dependency not cleaning up immediately after the request", "user": {"login": "GabrielCarpr", "id": 50779826, "node_id": "MDQ6VXNlcjUwNzc5ODI2", "avatar_url": "https://avatars3.githubusercontent.com/u/50779826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabrielCarpr", "html_url": "https://github.com/GabrielCarpr", "followers_url": "https://api.github.com/users/GabrielCarpr/followers", "following_url": "https://api.github.com/users/GabrielCarpr/following{/other_user}", "gists_url": "https://api.github.com/users/GabrielCarpr/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabrielCarpr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabrielCarpr/subscriptions", "organizations_url": "https://api.github.com/users/GabrielCarpr/orgs", "repos_url": "https://api.github.com/users/GabrielCarpr/repos", "events_url": "https://api.github.com/users/GabrielCarpr/events{/privacy}", "received_events_url": "https://api.github.com/users/GabrielCarpr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-15T19:04:32Z", "updated_at": "2020-07-16T12:25:10Z", "closed_at": "2020-07-16T12:25:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Depends\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.orm import sessionmaker, Session\r\n\r\nengine = create_engine('postgresql://goals:goals@db:5432/goals')\r\nSessionLocal = sessionmaker(autocommit=False, bind=engine)\r\n\r\ndef get_db():\r\n    session = SessionLocal()\r\n    try:\r\n        print('opening')\r\n        yield session\r\n    except:\r\n        print('rollback')\r\n        session.rollback()\r\n    finally:\r\n        print('closing')\r\n        session.close()\r\n\r\napp = FastAPI()\r\n\r\n@app.get('/test')\r\ndef test_route(db = Depends(get_db)):\r\n    return {\"Hello\": \"world\"}\r\n```\r\n\r\n### Description\r\nI'm trying to use yield dependencies to insert my database session into routes. I wanted to check that the session was being closed at the end of the request, however I've found that it doesn't close (or rollback during an exception) until the next request. It seems that everything after `yield session` isn't being executed after the request.\r\n\r\nUsing the example, I can `curl localhost:8000/test`, and the log will show:\r\n```\r\nbackend_1  | INFO:     Waiting for application startup.\r\nbackend_1  | INFO:     Application startup complete.\r\nbackend_1  | opening\r\nbackend_1  | INFO:     172.22.0.1:52200 - \"GET /test HTTP/1.1\" 200 OK\r\n```\r\n\r\nIf I then hit the endpoint again, I get\r\n```\r\nbackend_1  | closing\r\nbackend_1  | opening\r\nbackend_1  | INFO:     172.22.0.1:52208 - \"GET /test HTTP/1.1\" 200 OK\r\n```\r\n\r\nStrangely, if I force a restart after a request, the session will then close.\r\n```\r\nbackend_1  | opening\r\nbackend_1  | INFO:     172.22.0.1:52208 - \"GET /test HTTP/1.1\" 200 OK\r\nbackend_1  | WARNING:  Detected file change in 'main.py'. Reloading...\r\nbackend_1  | INFO:     Shutting down\r\nbackend_1  | INFO:     Waiting for application shutdown.\r\nbackend_1  | INFO:     Application shutdown complete.\r\nbackend_1  | INFO:     Finished server process [156]\r\nbackend_1  | closing\r\nbackend_1  | INFO:     Started server process [159]\r\nbackend_1  | INFO:     Waiting for application startup.\r\nbackend_1  | INFO:     Application startup complete.\r\n```\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: Linux, using FastAPI Docker image\r\n* FastAPI Version [e.g. 0.3.0]: 0.59 (also tried with 0.58)\r\n* Python version: 3.8.2 (the version from the docker image)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1715", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1715/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1715/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1715/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1715", "id": 656990742, "node_id": "MDU6SXNzdWU2NTY5OTA3NDI=", "number": 1715, "title": "Exception when using `testclient.TestClient` from within an async test", "user": {"login": "uriva", "id": 2490655, "node_id": "MDQ6VXNlcjI0OTA2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2490655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uriva", "html_url": "https://github.com/uriva", "followers_url": "https://api.github.com/users/uriva/followers", "following_url": "https://api.github.com/users/uriva/following{/other_user}", "gists_url": "https://api.github.com/users/uriva/gists{/gist_id}", "starred_url": "https://api.github.com/users/uriva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uriva/subscriptions", "organizations_url": "https://api.github.com/users/uriva/orgs", "repos_url": "https://api.github.com/users/uriva/repos", "events_url": "https://api.github.com/users/uriva/events{/privacy}", "received_events_url": "https://api.github.com/users/uriva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-15T01:14:51Z", "updated_at": "2020-07-15T01:23:41Z", "closed_at": "2020-07-15T01:23:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is `testclient.TestClient` supposed to work within a test that has some async in it?\r\n\r\nThis is how my test looks like:\r\n\r\n```python\r\nasync def test_something():\r\n    some_input = await compute_input()\r\n    app = make_app(some_input)\r\n    assert testclient.TestClient(app).post(\"/some_endpoint\", json={}) == {}\r\n```\r\nI'm running it via `pytest` and using `pytestmark = pytest.mark.asyncio`\r\n\r\nAnd I'm getting this exception:\r\n\r\n> _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n> /usr/local/lib/python3.8/site-packages/requests/sessions.py:578: in post\r\n>     return self.request('POST', url, data=data, json=json, **kwargs)\r\n> /usr/local/lib/python3.8/site-packages/starlette/testclient.py:413: in request\r\n>     return super().request(\r\n> /usr/local/lib/python3.8/site-packages/requests/sessions.py:530: in request\r\n>     resp = self.send(prep, **send_kwargs)\r\n> /usr/local/lib/python3.8/site-packages/requests/sessions.py:643: in send\r\n>     r = adapter.send(request, **kwargs)\r\n> /usr/local/lib/python3.8/site-packages/starlette/testclient.py:243: in send\r\n>     raise exc from None\r\n> /usr/local/lib/python3.8/site-packages/starlette/testclient.py:240: in send\r\n>     loop.run_until_complete(self.app(scope, receive, send))\r\n> /usr/local/lib/python3.8/asyncio/base_events.py:592: in run_until_complete\r\n>     self._check_running()\r\n> _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n> self = <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n>     def _check_running(self):\r\n>         if self.is_running():\r\n> >           raise RuntimeError('This event loop is already running')\r\n> E           RuntimeError: This event loop is already running\r\n> /usr/local/lib/python3.8/asyncio/base_events.py:552: RuntimeError\r\n> ----------------------------- Captured stdout call -----------------------------\r\n> ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1712", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1712/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1712/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1712/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1712", "id": 656837431, "node_id": "MDU6SXNzdWU2NTY4Mzc0MzE=", "number": 1712, "title": "ResponseModel does not force model", "user": {"login": "datenwort", "id": 13447848, "node_id": "MDQ6VXNlcjEzNDQ3ODQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/13447848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datenwort", "html_url": "https://github.com/datenwort", "followers_url": "https://api.github.com/users/datenwort/followers", "following_url": "https://api.github.com/users/datenwort/following{/other_user}", "gists_url": "https://api.github.com/users/datenwort/gists{/gist_id}", "starred_url": "https://api.github.com/users/datenwort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datenwort/subscriptions", "organizations_url": "https://api.github.com/users/datenwort/orgs", "repos_url": "https://api.github.com/users/datenwort/repos", "events_url": "https://api.github.com/users/datenwort/events{/privacy}", "received_events_url": "https://api.github.com/users/datenwort/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-14T19:12:30Z", "updated_at": "2020-07-14T20:35:32Z", "closed_at": "2020-07-14T20:35:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to force the the response to be equal the response_model?\r\n\r\n```\r\nclass Item(BaseModel):\r\n    id: int\r\n    shortcut: str\r\n    name: str\r\n\r\n@app.get(\"/items/{item_id}\", response_model=Item)\r\nasync def get_all_items(item_id: int):\r\n    \"\"\"Return all assocations.\"\"\"\r\n    item = {\"name\": \"name\", \"size\": \"size\"}\r\n    return JSONResponse(status_code=status.HTTP_200_OK, content=item)\r\n```\r\n\r\nI would expect, that the response failed cause it is not aligned with the model. Any advice?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1711", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1711/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1711/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1711/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1711", "id": 656485397, "node_id": "MDU6SXNzdWU2NTY0ODUzOTc=", "number": 1711, "title": "FastApi ignore custom pydantic json_encoders ", "user": {"login": "zueve", "id": 3933222, "node_id": "MDQ6VXNlcjM5MzMyMjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3933222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zueve", "html_url": "https://github.com/zueve", "followers_url": "https://api.github.com/users/zueve/followers", "following_url": "https://api.github.com/users/zueve/following{/other_user}", "gists_url": "https://api.github.com/users/zueve/gists{/gist_id}", "starred_url": "https://api.github.com/users/zueve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zueve/subscriptions", "organizations_url": "https://api.github.com/users/zueve/orgs", "repos_url": "https://api.github.com/users/zueve/repos", "events_url": "https://api.github.com/users/zueve/events{/privacy}", "received_events_url": "https://api.github.com/users/zueve/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-14T09:54:42Z", "updated_at": "2020-07-23T12:36:00Z", "closed_at": "2020-07-23T12:36:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Example\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\n\r\napp = FastAPI()\r\n\r\nclass Response(BaseModel):\r\n    a: str\r\n    b: int\r\n\r\n    class Config:\r\n        json_encoders = {\r\n            int: lambda x: '999',\r\n        }\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    return Response(a='XXX', b=666)\r\n```\r\n### Description\r\n\r\nExpected result is {\"a\": \"XXX\", \"b\": \"999\"} but insted of that i take  {\"a\": \"XXX\", \"b\": 666}\r\n\r\n\r\n### Environment\r\n\r\n* OS: macOS:\r\n* FastAPI Version [e.g. 0.3.0]: 0.59.0\r\n* pydantic: 1.6\r\n* Python version: 3.7.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1710", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1710/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1710/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1710/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1710", "id": 656445329, "node_id": "MDU6SXNzdWU2NTY0NDUzMjk=", "number": 1710, "title": "Instructions on how to deploy production apps to a remote Ubuntu server?", "user": {"login": "Lepiloff", "id": 28572064, "node_id": "MDQ6VXNlcjI4NTcyMDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/28572064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lepiloff", "html_url": "https://github.com/Lepiloff", "followers_url": "https://api.github.com/users/Lepiloff/followers", "following_url": "https://api.github.com/users/Lepiloff/following{/other_user}", "gists_url": "https://api.github.com/users/Lepiloff/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lepiloff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lepiloff/subscriptions", "organizations_url": "https://api.github.com/users/Lepiloff/orgs", "repos_url": "https://api.github.com/users/Lepiloff/repos", "events_url": "https://api.github.com/users/Lepiloff/events{/privacy}", "received_events_url": "https://api.github.com/users/Lepiloff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-14T08:51:11Z", "updated_at": "2020-07-22T17:18:45Z", "closed_at": "2020-07-22T17:18:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nI am looking for a way to deploy my application (Fastapi, Postgresql) from the local machine to a remote Linux server (digitalocean). All I find on the network is a sample deploying on heroku with a mysqlite database. Is there a complete deploying guide with a detailed step-by-step description? The web is full of similar articles on deploying flask or django and there is nothing about the fastapi framework. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1709", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1709/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1709/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1709/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1709", "id": 656123337, "node_id": "MDU6SXNzdWU2NTYxMjMzMzc=", "number": 1709, "title": "middleware on different folder not working", "user": {"login": "lvar", "id": 10148942, "node_id": "MDQ6VXNlcjEwMTQ4OTQy", "avatar_url": "https://avatars1.githubusercontent.com/u/10148942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lvar", "html_url": "https://github.com/lvar", "followers_url": "https://api.github.com/users/lvar/followers", "following_url": "https://api.github.com/users/lvar/following{/other_user}", "gists_url": "https://api.github.com/users/lvar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lvar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lvar/subscriptions", "organizations_url": "https://api.github.com/users/lvar/orgs", "repos_url": "https://api.github.com/users/lvar/repos", "events_url": "https://api.github.com/users/lvar/events{/privacy}", "received_events_url": "https://api.github.com/users/lvar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-13T20:37:55Z", "updated_at": "2020-07-27T17:36:32Z", "closed_at": "2020-07-27T17:36:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I,m getting this error when I try to run my FastApi api.\r\n\r\napp = cls(app=app, **options) TypeError: 'module' object is not callable\r\n\r\nI'm trying to add a middleware on other folder separeted from main.py and don't know why isn't working. Otherwise when I add the middleware code into main.py works without problems. Here is my code, thank you for your help and excuse my english.\r\n\r\nmain.py\r\n\r\n`   \r\nfrom fastapi import FastAPI\r\nfrom fastapi import Depends, FastAPI, HTTPException\r\nfrom fastapi import Request\r\nfrom routers import rutas\r\nfrom utils import CheckApiKey\r\nfrom utils.CheckApiKey import check_api_key\r\n\r\napp = FastAPI()\r\napp.add_middleware(CheckApiKey, dispatch=check_api_key) <--- Here calling middleware\r\napp.include_router(rutas.router)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n  import uvicorn\r\n\r\n  uvicorn.run(\"main:app\", host=\"127.0.0.1\", port=8000, reload=True)`\r\n\r\n\r\n\r\n\r\nMiddleware CheckApiKey\r\n\r\n`\r\nfrom fastapi import Request\r\n\r\nasync def check_api_key(request: Request, call_next):    \r\n\r\n  print(\"ok\")\r\n  response = await call_next(request) \r\n\r\n  return response`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1698", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1698/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1698/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1698/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1698", "id": 654388195, "node_id": "MDU6SXNzdWU2NTQzODgxOTU=", "number": 1698, "title": "[QUESTION] When Depends is not evaluated", "user": {"login": "swsvc", "id": 23121066, "node_id": "MDQ6VXNlcjIzMTIxMDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/23121066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swsvc", "html_url": "https://github.com/swsvc", "followers_url": "https://api.github.com/users/swsvc/followers", "following_url": "https://api.github.com/users/swsvc/following{/other_user}", "gists_url": "https://api.github.com/users/swsvc/gists{/gist_id}", "starred_url": "https://api.github.com/users/swsvc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swsvc/subscriptions", "organizations_url": "https://api.github.com/users/swsvc/orgs", "repos_url": "https://api.github.com/users/swsvc/repos", "events_url": "https://api.github.com/users/swsvc/events{/privacy}", "received_events_url": "https://api.github.com/users/swsvc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T22:34:01Z", "updated_at": "2020-07-10T08:25:44Z", "closed_at": "2020-07-10T08:25:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks.\r\n\r\nI think I'm missing something profound with Dependency injection concept in FastAPI.\r\n\r\nLet's take this example: I have a function that is called somewhere inside the call chain of processing request and it has dependency. This is NOT the top-level api function which is usually marked by decorator like this `@router.get('/some_path')`\r\n\r\n```\r\ndef some_callable_here():\r\n     ...\r\n     return some_value\r\n\r\nasync def do_something(some_var: str = Depends(some_callable_here)):\r\n     # do something\r\n```\r\nMy understanding of what happens here: if you don't pass value for `some_var` when calling `do_something`, this value gets injected using `Depends` by calling `some_callable_here`. \r\n\r\nMy question: what do you absolutely need for this `Depends` to be evaluated? What I get in my is that `some_var` has value `Depends(...)` inside `do_something` which means that `some_callable_here` has never been evaluated. This question seems very abstract, but I'm lost and I don't know how to approach this problem. Maybe I can get to the answer myself if you point me to the part of code where `Depends` gets evaluated.\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1693", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1693/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1693/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1693/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1693", "id": 653439292, "node_id": "MDU6SXNzdWU2NTM0MzkyOTI=", "number": 1693, "title": "Depends object returned instead of session", "user": {"login": "BrainABar", "id": 31219516, "node_id": "MDQ6VXNlcjMxMjE5NTE2", "avatar_url": "https://avatars3.githubusercontent.com/u/31219516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrainABar", "html_url": "https://github.com/BrainABar", "followers_url": "https://api.github.com/users/BrainABar/followers", "following_url": "https://api.github.com/users/BrainABar/following{/other_user}", "gists_url": "https://api.github.com/users/BrainABar/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrainABar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrainABar/subscriptions", "organizations_url": "https://api.github.com/users/BrainABar/orgs", "repos_url": "https://api.github.com/users/BrainABar/repos", "events_url": "https://api.github.com/users/BrainABar/events{/privacy}", "received_events_url": "https://api.github.com/users/BrainABar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-07-08T16:35:37Z", "updated_at": "2020-07-31T15:56:34Z", "closed_at": "2020-07-20T07:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently trying to migrate from flask to fastapi and trying to keep my files separated. My depends is not called from my routes but from within my crud file but similar to the documentation for relational databases: https://fastapi.tiangolo.com/tutorial/sql-databases/\r\n\r\nThis was my initial way of using a database session which is similar to the sqlalchemy docs\r\nAlso, is this bad practice or is it okay to use this and a mix of depends? I did kind of want to decouple sqlalchemy from fastapi.\r\n```python\r\ndef get_database():\r\n    db = scoped_session(default_session)\r\n    try:\r\n        yield db\r\n    finally:\r\n        db.close()\r\n\r\ndef get_references(db: scoped_session = next(get_database())):\r\n    references = db.query(Reference).all()\r\n    return references\r\n```\r\n\r\nI then tried to switch and use Depends but am getting the same issue as others below with my attempts added at the end:\r\n\r\n> > I am seeing this same issue in .52 using almost verbatim the doc examples with postgres. Depends is not calling the function but returning what appears to be an instantiate Depends object.\r\n> \r\n> @pspierce and @H0r53, Did you solve this? I am seeing in 0.58.1. I also tried: instead of using generator, returning the db directly -- same problem.\r\n\r\n```python\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.orm import scoped_session, sessionmaker\r\n\r\nengine = create_engine('postgresql://postgres:postgres@localhost:5432/postgres', echo=True)\r\ndefault_session = scoped_session(sessionmaker(autocommit=False,\r\n                                         autoflush=False,\r\n                                         bind=engine))\r\n\r\ndef get_database():\r\n    db = default_session()\r\n    try:\r\n        yield db\r\n    finally:\r\n        db.close()\r\n\r\n```\r\n\r\n\r\nFirst error I got:\r\n\r\n> AttributeError: 'Depends' object has no attribute 'query'\r\n\r\n```python\r\nfrom database.data import get_database, scoped_session\r\nfrom database.models.reference import Reference\r\nfrom fastapi import Depends\r\n\r\n\r\ndef get_references(db: scoped_session = Depends(get_database())):\r\n    references = db.query(Reference).all()\r\n    return references\r\n```\r\n\r\nWithout Depends:\r\n\r\n> AttributeError: 'generator' object has no attribute 'query'\r\n```python\r\ndef get_references(db: scoped_session = get_database()):\r\n```\r\n\r\n_Originally posted by @BrainABar in https://github.com/tiangolo/fastapi/issues/631#issuecomment-655614557_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1689", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1689/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1689/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1689/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1689", "id": 653260587, "node_id": "MDU6SXNzdWU2NTMyNjA1ODc=", "number": 1689, "title": "Add HTMLResponse to Jinja2 example (docs)", "user": {"login": "frafra", "id": 4068, "node_id": "MDQ6VXNlcjQwNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frafra", "html_url": "https://github.com/frafra", "followers_url": "https://api.github.com/users/frafra/followers", "following_url": "https://api.github.com/users/frafra/following{/other_user}", "gists_url": "https://api.github.com/users/frafra/gists{/gist_id}", "starred_url": "https://api.github.com/users/frafra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frafra/subscriptions", "organizations_url": "https://api.github.com/users/frafra/orgs", "repos_url": "https://api.github.com/users/frafra/repos", "events_url": "https://api.github.com/users/frafra/events{/privacy}", "received_events_url": "https://api.github.com/users/frafra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T12:33:57Z", "updated_at": "2020-08-03T07:59:25Z", "closed_at": "2020-08-03T07:59:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### First check\r\n\r\n* [X] I added a very descriptive title to this issue.\r\n* [X] I used the GitHub search to find a similar issue and didn't find it.\r\n* [X] I searched the FastAPI documentation, with the integrated search.\r\n* [ ] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [ ] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [X] After submitting this, I commit to:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * Or, I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\nSome items are not applicable, as this issue is related to documentation only.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nThis is what is proposed in the documentation:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Request\r\nfrom fastapi.staticfiles import StaticFiles\r\nfrom fastapi.templating import Jinja2Templates\r\n\r\napp = FastAPI()\r\n\r\napp.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\r\n\r\n\r\ntemplates = Jinja2Templates(directory=\"templates\")\r\n\r\n\r\n@app.get(\"/items/{id}\")\r\nasync def read_item(request: Request, id: str):\r\n    return templates.TemplateResponse(\"item.html\", {\"request\": request, \"id\": id})\r\n```\r\n\r\n### Description\r\n\r\nAutomatically generated docs assumes that response is a JSON response, not an HTML one.\r\n\r\n<!-- Replace the content below with your own feature request -->\r\n\r\n* Open the browser and call the endpoint `/docs`.\r\n* It lists the `read_item` endpoint as it would reply with a JSON content.\r\n* It would make sense to flag that entry point as returning HTML content.\r\n\r\n### The solution you would like\r\n\r\n<!-- Replace this with your own content -->\r\n\r\nJust add the correct content type as proposed here: https://fastapi.tiangolo.com/advanced/custom-response/#html-response\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Request\r\nfrom fastapi.responses import HTMLResponse\r\nfrom fastapi.staticfiles import StaticFiles\r\nfrom fastapi.templating import Jinja2Templates\r\n\r\napp = FastAPI()\r\n\r\napp.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\r\n\r\n\r\ntemplates = Jinja2Templates(directory=\"templates\")\r\n\r\n\r\n@app.get(\"/items/{id}\", response_class=HTMLResponse)\r\nasync def read_item(request: Request, id: str):\r\n    return templates.TemplateResponse(\"item.html\", {\"request\": request, \"id\": id})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1687", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1687/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1687/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1687/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1687", "id": 653087037, "node_id": "MDU6SXNzdWU2NTMwODcwMzc=", "number": 1687, "title": "TypeError: custom_openapi() takes 0 positional arguments but 1 was given", "user": {"login": "muslu", "id": 5065080, "node_id": "MDQ6VXNlcjUwNjUwODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5065080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muslu", "html_url": "https://github.com/muslu", "followers_url": "https://api.github.com/users/muslu/followers", "following_url": "https://api.github.com/users/muslu/following{/other_user}", "gists_url": "https://api.github.com/users/muslu/gists{/gist_id}", "starred_url": "https://api.github.com/users/muslu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muslu/subscriptions", "organizations_url": "https://api.github.com/users/muslu/orgs", "repos_url": "https://api.github.com/users/muslu/repos", "events_url": "https://api.github.com/users/muslu/events{/privacy}", "received_events_url": "https://api.github.com/users/muslu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-08T08:11:15Z", "updated_at": "2020-07-25T22:08:40Z", "closed_at": "2020-07-10T06:07:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi;\r\n\r\nIf using version is > fastapi **0.55.1** and using **custom_openapi**, getting this error.\r\n\r\nTested with `0.56.0, 0.56.1, 0.57.0, 0.58.0, 0.58.1`\r\n\r\nIf we are getting this error for Starlette, i will create issue to them.\r\n\r\n`TypeError: custom_openapi() takes 0 positional arguments but 1 was given`\r\n\r\n\r\n\r\n**main.py**\r\n```\r\nfrom fastapi import FastAPI\r\nfrom fastapi.middleware.cors import CORSMiddleware\r\nfrom fastapi.middleware.trustedhost import TrustedHostMiddleware\r\nfrom fastapi.openapi.docs import get_swagger_ui_html, get_swagger_ui_oauth2_redirect_html, get_redoc_html\r\nfrom fastapi.staticfiles import StaticFiles\r\n\r\nimport mails\r\n\r\napp = FastAPI(docs_url=None, redoc_url=None, openapi_url=\"/api/v1/openapi.json\")\r\napp.include_router(mails.router)\r\n\r\napp.add_middleware(CORSMiddleware, allow_origins=['*'], allow_credentials=True, allow_methods=['*'], allow_headers=['*'], max_age=9999)\r\napp.add_middleware(TrustedHostMiddleware, allowed_hosts=[\"*\"])\r\n\r\napp.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\r\n\r\n\r\ndef custom_openapi():\r\n    if app.openapi_schema:\r\n        return app.openapi_schema\r\n\r\n    from fastapi.openapi.utils import get_openapi\r\n    openapi_schema = get_openapi(title=\"Mail Panel\", version=\"0.1.6\",\r\n                                 description=\"Mail Panel API usage.<br> \",\r\n                                 routes=app.routes)\r\n    openapi_schema[\"info\"][\"x-logo\"] = {\"url\": \"https://mkds.la/img/logo.png\"}\r\n    app.openapi_schema = openapi_schema\r\n    return app.openapi_schema\r\n\r\n\r\napp.openapi = custom_openapi\r\n\r\n\r\n\r\n@app.get(\"/doc\", include_in_schema=False)\r\nasync def custom_swagger_ui_html():\r\n    return get_swagger_ui_html(\r\n        openapi_url=app.openapi_url,\r\n        title=\"Mail Panel APU Usage\",\r\n        oauth2_redirect_url=app.swagger_ui_oauth2_redirect_url,\r\n        swagger_js_url=\"/static/swagger-ui-bundle.js\",\r\n        swagger_css_url=\"/static/swagger-ui.css\",\r\n    )\r\n\r\n\r\n@app.get(app.swagger_ui_oauth2_redirect_url, include_in_schema=False)\r\nasync def swagger_ui_redirect():\r\n    return get_swagger_ui_oauth2_redirect_html()\r\n\r\n\r\n@app.get(\"/redoc\", include_in_schema=False)\r\nasync def redoc_html():\r\n    return get_redoc_html(openapi_url=app.openapi_url, title=\"Mail Panel API Usage - ReDoc\", redoc_js_url=\"/static/redoc.standalone.js\")\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1684", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1684/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1684/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1684/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1684", "id": 652610884, "node_id": "MDU6SXNzdWU2NTI2MTA4ODQ=", "number": 1684, "title": "deploy: tiangolo/uvicorn-gunicorn-fastapi:python3.7 adding mysql", "user": {"login": "Prutheus", "id": 19924261, "node_id": "MDQ6VXNlcjE5OTI0MjYx", "avatar_url": "https://avatars0.githubusercontent.com/u/19924261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Prutheus", "html_url": "https://github.com/Prutheus", "followers_url": "https://api.github.com/users/Prutheus/followers", "following_url": "https://api.github.com/users/Prutheus/following{/other_user}", "gists_url": "https://api.github.com/users/Prutheus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Prutheus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Prutheus/subscriptions", "organizations_url": "https://api.github.com/users/Prutheus/orgs", "repos_url": "https://api.github.com/users/Prutheus/repos", "events_url": "https://api.github.com/users/Prutheus/events{/privacy}", "received_events_url": "https://api.github.com/users/Prutheus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T20:20:37Z", "updated_at": "2020-07-07T20:47:23Z", "closed_at": "2020-07-07T20:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a question for deployment with docker and `tiangolo/uvicorn-gunicorn-fastapi:python3.7` container ... my app uses sqlalchemy and mysql, installing sqlalchemy is possible by add `pip3 install -r requirements.txt` to the Dockerfile, but how to install the mysqlclient library for the underlying alpine? `RUN apk add ...` is not working ... apk not found, why not?\r\n\r\ncan someone help me please\r\n\r\nwhy cant I use the `apk` command in the `tiangolo/uvicorn-gunicorn-fastapi:python3.7` container ?\r\n\r\n```\r\n# docker build -t search_rest_api .\r\n\r\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.7\r\n\r\nCOPY ./app /app/app\r\nRUN apk add mysqlclient\r\nRUN pip3 install -r /app/app/requirements.txt\r\n```\r\n\r\nthis docker file crashes at build because `apk` is not found ...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1680", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1680/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1680/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1680/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1680", "id": 651846570, "node_id": "MDU6SXNzdWU2NTE4NDY1NzA=", "number": 1680, "title": "Issue with docs Authorize button, gives 400 Bad Request in the security tutorial", "user": {"login": "davidmckayv", "id": 1574202, "node_id": "MDQ6VXNlcjE1NzQyMDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1574202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmckayv", "html_url": "https://github.com/davidmckayv", "followers_url": "https://api.github.com/users/davidmckayv/followers", "following_url": "https://api.github.com/users/davidmckayv/following{/other_user}", "gists_url": "https://api.github.com/users/davidmckayv/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmckayv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmckayv/subscriptions", "organizations_url": "https://api.github.com/users/davidmckayv/orgs", "repos_url": "https://api.github.com/users/davidmckayv/repos", "events_url": "https://api.github.com/users/davidmckayv/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmckayv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-06T22:03:13Z", "updated_at": "2020-07-08T16:45:45Z", "closed_at": "2020-07-07T20:00:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/ or\r\nhttps://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/\r\nWhen following either tutorial from above, a bad request is sent when clicking the localhost:8000/docs Authorize button using any username or password.  Tried directly copying and pasting the code, the issue persists.\r\n\r\n### Environment\r\n\r\nmacOS\r\nFastAPI 0.58.1\r\nPython 3.7.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1679", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1679/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1679/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1679/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1679", "id": 651722994, "node_id": "MDU6SXNzdWU2NTE3MjI5OTQ=", "number": 1679, "title": "[QUESTION] - Why use \"sync\" instead of \"async\" when serving ML models?", "user": {"login": "Kludex", "id": 7353520, "node_id": "MDQ6VXNlcjczNTM1MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7353520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kludex", "html_url": "https://github.com/Kludex", "followers_url": "https://api.github.com/users/Kludex/followers", "following_url": "https://api.github.com/users/Kludex/following{/other_user}", "gists_url": "https://api.github.com/users/Kludex/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kludex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kludex/subscriptions", "organizations_url": "https://api.github.com/users/Kludex/orgs", "repos_url": "https://api.github.com/users/Kludex/repos", "events_url": "https://api.github.com/users/Kludex/events{/privacy}", "received_events_url": "https://api.github.com/users/Kludex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-06T18:00:24Z", "updated_at": "2020-07-06T21:50:16Z", "closed_at": "2020-07-06T21:50:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\n\r\n[On the lecture of July 6th](https://www.youtube.com/watch?v=k7YRGNGi4KI&feature=youtu.be) Sebasti\u00e1n was talking about FastAPI and ML models, and he said that is better to use `sync` notation instead of `async` when serving ML models. I didn't understand the motive, could someone explain it?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1673", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1673/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1673/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1673/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1673", "id": 651061848, "node_id": "MDU6SXNzdWU2NTEwNjE4NDg=", "number": 1673, "title": "[Problem] 400 Error when sending data to endpoint", "user": {"login": "sjosegarcia", "id": 10678907, "node_id": "MDQ6VXNlcjEwNjc4OTA3", "avatar_url": "https://avatars3.githubusercontent.com/u/10678907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjosegarcia", "html_url": "https://github.com/sjosegarcia", "followers_url": "https://api.github.com/users/sjosegarcia/followers", "following_url": "https://api.github.com/users/sjosegarcia/following{/other_user}", "gists_url": "https://api.github.com/users/sjosegarcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjosegarcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjosegarcia/subscriptions", "organizations_url": "https://api.github.com/users/sjosegarcia/orgs", "repos_url": "https://api.github.com/users/sjosegarcia/repos", "events_url": "https://api.github.com/users/sjosegarcia/events{/privacy}", "received_events_url": "https://api.github.com/users/sjosegarcia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-07-05T12:33:47Z", "updated_at": "2020-08-12T21:36:00Z", "closed_at": "2020-07-05T23:29:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I followed the guide on setting up OAuth on my server. For some reason when I try to send data to this endpoint I get a `400 - Bad Request {\"detail\":\"There was an error parsing the body\"}`. I have also tried with the swaggerUI authorize button.\r\n\r\nThe data:\r\n`{\"username\": email, \"password\": password}`\r\nWhen I print out the response headers:\r\n`{username: test@test.com, password: password, content-type: text/plain; charset=utf-8}`\r\n\r\nThe code:\r\n\r\n```\r\n@login_router.post(\"/token\", response_model=Token)\r\nasync def login_for_access_token(\r\n    form_data: OAuth2PasswordRequestForm = Depends()\r\n) -> dict:\r\n    user = await authenticate_user(form_data.username, form_data.password)\r\n    if not user:\r\n        raise HTTPException(\r\n            status_code=status.HTTP_401_UNAUTHORIZED,\r\n            detail=\"Incorrect email or password\",\r\n            headers={\"WWW-Authenticate\": \"Bearer\"},\r\n        )\r\n    access_token_expires = timedelta(minutes=float(str(ACCESS_TOKEN_EXPIRE_MINUTES)))\r\n    access_token = create_access_token(\r\n        data={\"sub\": user.email, \"scopes\": form_data.scopes},\r\n        expires_delta=access_token_expires,\r\n    )\r\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\r\n```\r\n\r\n\r\n```\r\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\r\noauth2_scheme = OAuth2PasswordBearer(\r\n    tokenUrl=f\"{config.API_V1_STR}/token\",\r\n    scopes={\"me\": \"Read information about the current user.\"},\r\n)\r\n\r\n\r\ndef verify_password(plain_text_password: str, hashed_password: str) -> bool:\r\n    \"\"\"\r\n    This function will verify the plain text password with the stored hash\r\n    :param plain_text_password: The plain text password\r\n    :param hashed_password: The hash password stored in the data\r\n    :return: bool\r\n    \"\"\"\r\n    return bool(pwd_context.verify(plain_text_password, hashed_password))\r\n\r\n\r\ndef get_password_hash(password: str) -> str:\r\n    \"\"\"\r\n    This function will return the hash of a plain text password\r\n    :param password: The password in plain text\r\n    :return: Hash string\r\n    \"\"\"\r\n    return str(pwd_context.hash(password))\r\n\r\n\r\nasync def get_user(email: str) -> Optional[UserInDB]:\r\n    user = await get_user_by_email(email)\r\n    if user:\r\n        return UserInDB(**user.dict())\r\n    return None\r\n\r\n\r\nasync def authenticate_user(email: str, password: str) -> Optional[UserInDB]:\r\n    user = await get_user(email)\r\n    if not user:\r\n        return None\r\n    if not verify_password(password, user.password):\r\n        return None\r\n    return user\r\n\r\n\r\ndef create_access_token(*, data: dict, expires_delta: timedelta = None) -> bytes:\r\n    to_encode = data.copy()\r\n    if expires_delta:\r\n        expire = datetime.utcnow() + expires_delta\r\n    else:\r\n        expire = datetime.utcnow() + timedelta(minutes=15)\r\n    to_encode.update({\"exp\": expire})\r\n    encoded_jwt = jwt.encode(\r\n        to_encode, str(PASSWORD_SECRET_KEY), algorithm=str(PASSWORD_ALGORITHM)\r\n    )\r\n    return encoded_jwt\r\n\r\n\r\nasync def get_current_user(\r\n    security_scopes: SecurityScopes, token: str = Depends(oauth2_scheme)\r\n) -> User:\r\n    if security_scopes.scopes:\r\n        authenticate_value = f'Bearer scope=\"{security_scopes.scope_str}\"'\r\n    else:\r\n        authenticate_value = \"Bearer\"\r\n    credentials_exception = HTTPException(\r\n        status_code=status.HTTP_401_UNAUTHORIZED,\r\n        detail=\"Could not validate credentials\",\r\n        headers={\"WWW-Authenticate\": \"Bearer\"},\r\n    )\r\n    try:\r\n        payload = jwt.decode(\r\n            token, str(PASSWORD_SECRET_KEY), algorithms=[PASSWORD_ALGORITHM]\r\n        )\r\n        email = payload.get(\"sub\")\r\n        if email is None:\r\n            raise credentials_exception\r\n        token_scopes = payload.get(\"scopes\", [])\r\n        token_data = TokenData(scopes=token_scopes, email=email)\r\n    except (PyJWTError, ValidationError):\r\n        raise credentials_exception\r\n    user = await get_user(email=token_data.email)\r\n    if user is None:\r\n        raise credentials_exception\r\n    for scope in security_scopes.scopes:\r\n        if scope not in token_data.scopes:\r\n            raise HTTPException(\r\n                status_code=status.HTTP_401_UNAUTHORIZED,\r\n                detail=\"Not enough permissions\",\r\n                headers={\"WWW-Authenticate\": authenticate_value},\r\n            )\r\n    return user\r\n\r\n\r\nasync def get_current_active_user(\r\n    current_user: User = Security(get_current_user, scopes=[\"me\"])\r\n) -> User:\r\n    if current_user.is_active:\r\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\r\n    return current_user\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1664", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1664/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1664/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1664/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1664", "id": 649633474, "node_id": "MDU6SXNzdWU2NDk2MzM0NzQ=", "number": 1664, "title": "Very poor performance does not align with marketing", "user": {"login": "alexhultman", "id": 3397140, "node_id": "MDQ6VXNlcjMzOTcxNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3397140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhultman", "html_url": "https://github.com/alexhultman", "followers_url": "https://api.github.com/users/alexhultman/followers", "following_url": "https://api.github.com/users/alexhultman/following{/other_user}", "gists_url": "https://api.github.com/users/alexhultman/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhultman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhultman/subscriptions", "organizations_url": "https://api.github.com/users/alexhultman/orgs", "repos_url": "https://api.github.com/users/alexhultman/repos", "events_url": "https://api.github.com/users/alexhultman/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhultman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-02T04:52:51Z", "updated_at": "2020-07-03T17:21:06Z", "closed_at": "2020-07-03T17:21:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to check the temperature of this project and so I ran a quick, very simple, benchmark with `wrk` and the default example:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\nEverything default with wrk, regular Ubuntu Linux, Python 3.8.2, latest FastAPI as of now.\r\n\r\n> wrk http://localhost:8000\r\n\r\nUvicorn with logging disabled (obviously), as per the README:\r\n\r\n> python3 -m uvicorn fast:app --log-level critical\r\n\r\nI get very poor performance, way worse than Node.js and really, really far from Golang:\r\n\r\n```\r\nRunning 10s test @ http://localhost:8000\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency     1.83ms  365.59us   3.90ms   75.34%\r\n    Req/Sec     2.74k   116.21     2.98k    65.00%\r\n  54447 requests in 10.00s, 7.37MB read\r\nRequests/sec:   5442.89\r\nTransfer/sec:    754.78KB\r\n```\r\n\r\nThis machine can do 400k req/sec on one single thread using other software, so 5k is not at all fast. Even Node.js does 20-30k on this machine, so this does not align at all with the README:\r\n\r\n```\r\nThe key features are:\r\n\r\nFast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic). One of the fastest Python frameworks available.\r\n```\r\n\r\nWhere do you post benchmarks? How did you come to that conclusion? I cannot see you have posted any benchmarks at all?\r\n\r\nPlease fix marketing, it is not at all true.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1652", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1652/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1652/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1652/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1652", "id": 648087394, "node_id": "MDU6SXNzdWU2NDgwODczOTQ=", "number": 1652, "title": "Limit concurrent operations on a certain endpoint", "user": {"login": "David-Lor", "id": 17401854, "node_id": "MDQ6VXNlcjE3NDAxODU0", "avatar_url": "https://avatars0.githubusercontent.com/u/17401854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/David-Lor", "html_url": "https://github.com/David-Lor", "followers_url": "https://api.github.com/users/David-Lor/followers", "following_url": "https://api.github.com/users/David-Lor/following{/other_user}", "gists_url": "https://api.github.com/users/David-Lor/gists{/gist_id}", "starred_url": "https://api.github.com/users/David-Lor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/David-Lor/subscriptions", "organizations_url": "https://api.github.com/users/David-Lor/orgs", "repos_url": "https://api.github.com/users/David-Lor/repos", "events_url": "https://api.github.com/users/David-Lor/events{/privacy}", "received_events_url": "https://api.github.com/users/David-Lor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-30T11:13:06Z", "updated_at": "2020-07-13T09:20:43Z", "closed_at": "2020-07-13T09:20:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Description\r\n\r\nLet's say I've got a POST endpoint to create certain object and persist it on a database, but there can't exist more than N objects. This validation is performed while processing the request, before persisting the object in database.\r\n\r\nThe problem with this is that, if another similar request to the same endpoint is performed, two objects would be created at the same time, when creating one would overflow this limit.\r\n\r\nHas FastAPI some sort of tool to limit concurrency on a certain endpoint? Something similar to {threading,asyncio,multiprocessing}.Lock? (did not find anything on the documentation). If not, using one of the Python Lock objects be a possible workaround? However it might depend on how the API runs - if I'm not wrong, if runs in single process, non-async, would be threading; if runs in single process, async, would be asyncio; if runs with something like Gunicorn, which spawns multiple workers, I'm not sure if a native Lock would work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1647", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1647/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1647/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1647/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1647", "id": 647606716, "node_id": "MDU6SXNzdWU2NDc2MDY3MTY=", "number": 1647, "title": "[QUESTION] I'm having problems to save(persist) a file in disc with UploadFile", "user": {"login": "gkramer01", "id": 59235905, "node_id": "MDQ6VXNlcjU5MjM1OTA1", "avatar_url": "https://avatars2.githubusercontent.com/u/59235905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkramer01", "html_url": "https://github.com/gkramer01", "followers_url": "https://api.github.com/users/gkramer01/followers", "following_url": "https://api.github.com/users/gkramer01/following{/other_user}", "gists_url": "https://api.github.com/users/gkramer01/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkramer01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkramer01/subscriptions", "organizations_url": "https://api.github.com/users/gkramer01/orgs", "repos_url": "https://api.github.com/users/gkramer01/repos", "events_url": "https://api.github.com/users/gkramer01/events{/privacy}", "received_events_url": "https://api.github.com/users/gkramer01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T19:20:44Z", "updated_at": "2020-06-30T11:03:33Z", "closed_at": "2020-06-30T11:03:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to save a file to disk, but so far I have only been able to clone the file, but without content on it (invalid).\r\nCan anyone help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1646", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1646/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1646/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1646/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1646", "id": 647500308, "node_id": "MDU6SXNzdWU2NDc1MDAzMDg=", "number": 1646, "title": "Error adding middleware", "user": {"login": "dreamfalcon", "id": 5775148, "node_id": "MDQ6VXNlcjU3NzUxNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5775148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamfalcon", "html_url": "https://github.com/dreamfalcon", "followers_url": "https://api.github.com/users/dreamfalcon/followers", "following_url": "https://api.github.com/users/dreamfalcon/following{/other_user}", "gists_url": "https://api.github.com/users/dreamfalcon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamfalcon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamfalcon/subscriptions", "organizations_url": "https://api.github.com/users/dreamfalcon/orgs", "repos_url": "https://api.github.com/users/dreamfalcon/repos", "events_url": "https://api.github.com/users/dreamfalcon/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamfalcon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T16:11:34Z", "updated_at": "2020-06-29T21:03:13Z", "closed_at": "2020-06-29T21:03:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to learn with this example to build a websockets service:\r\n[https://github.com/cthwaite/fastapi-websocket-broadcast](url)\r\n\r\nBut getting this error:\r\n```\r\n(env) C:\\celfinet\\websockets\\app>uvicorn app:app\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\daniel.m.silva\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"C:\\Users\\daniel.m.silva\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\celfinet\\websockets\\env\\Scripts\\uvicorn.exe\\__main__.py\", line 7, in <module>\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\click\\core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\click\\core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\click\\core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\uvicorn\\main.py\", line 331, in main\r\n    run(**kwargs)\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\uvicorn\\main.py\", line 354, in run\r\n    server.run()\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\uvicorn\\main.py\", line 382, in run\r\n    loop.run_until_complete(self.serve(sockets=sockets))\r\n  File \"C:\\Users\\daniel.m.silva\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\asyncio\\base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\uvicorn\\main.py\", line 389, in serve\r\n    config.load()\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\uvicorn\\config.py\", line 288, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\uvicorn\\importer.py\", line 20, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \".\\app.py\", line 185, in <module>\r\n    app.add_middleware(RoomEventMiddleware)\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\starlette\\applications.py\", line 117, in add_middleware\r\n    self.middleware_stack = self.build_middleware_stack()\r\n  File \"c:\\celfinet\\websockets\\env\\lib\\site-packages\\starlette\\applications.py\", line 81, in build_middleware_stack\r\n    app = cls(app=app, **options)\r\nTypeError: __init__() got an unexpected keyword argument 'app'\r\n```\r\nNot sure if a bug or change in a recent version of FastAPI.\r\n\r\n* FastAPI Version 0.58.1:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1640", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1640/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1640/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1640/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1640", "id": 646865782, "node_id": "MDU6SXNzdWU2NDY4NjU3ODI=", "number": 1640, "title": "How to started the server on a virtual python environment?", "user": {"login": "feiwuu638", "id": 26407951, "node_id": "MDQ6VXNlcjI2NDA3OTUx", "avatar_url": "https://avatars3.githubusercontent.com/u/26407951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feiwuu638", "html_url": "https://github.com/feiwuu638", "followers_url": "https://api.github.com/users/feiwuu638/followers", "following_url": "https://api.github.com/users/feiwuu638/following{/other_user}", "gists_url": "https://api.github.com/users/feiwuu638/gists{/gist_id}", "starred_url": "https://api.github.com/users/feiwuu638/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feiwuu638/subscriptions", "organizations_url": "https://api.github.com/users/feiwuu638/orgs", "repos_url": "https://api.github.com/users/feiwuu638/repos", "events_url": "https://api.github.com/users/feiwuu638/events{/privacy}", "received_events_url": "https://api.github.com/users/feiwuu638/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-28T07:57:27Z", "updated_at": "2020-06-28T12:37:14Z", "closed_at": "2020-06-28T12:37:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nI imported a package named `pgmpy` in the api, but the package is in my virtual environment. So when I ran `uvicorn main:app` in the command lines, it raised the `ModuleNotFoundError: No module named 'pgmpy'`. **I wondered how I can set the python environment of the api.**\r\n\r\nThank you.\r\n\r\n### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n# the pgmpy module is not used in this example, but it is needed in my real api\r\nfrom pgmpy.models import BayesianModel\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\n* Run `uvicorn main:app` in the command lines.\r\n* It raised the `ModuleNotFoundError: No module named 'pgmpy'`.\r\n* I expected to started the server successfully based on the virtual python environment.\r\n\r\n### Environment\r\n\r\n* OS: [Windows]:\r\n* FastAPI Version [e.g. 0.58.0]:\r\n* Python version: 3.7.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1639", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1639/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1639/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1639/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1639", "id": 646855120, "node_id": "MDU6SXNzdWU2NDY4NTUxMjA=", "number": 1639, "title": "Web-how to : FastAPI OAuth2 with Password  returns 400 Bad Request on authorize ", "user": {"login": "gil-obradors", "id": 6016929, "node_id": "MDQ6VXNlcjYwMTY5Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6016929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gil-obradors", "html_url": "https://github.com/gil-obradors", "followers_url": "https://api.github.com/users/gil-obradors/followers", "following_url": "https://api.github.com/users/gil-obradors/following{/other_user}", "gists_url": "https://api.github.com/users/gil-obradors/gists{/gist_id}", "starred_url": "https://api.github.com/users/gil-obradors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gil-obradors/subscriptions", "organizations_url": "https://api.github.com/users/gil-obradors/orgs", "repos_url": "https://api.github.com/users/gil-obradors/repos", "events_url": "https://api.github.com/users/gil-obradors/events{/privacy}", "received_events_url": "https://api.github.com/users/gil-obradors/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-28T06:46:18Z", "updated_at": "2020-06-28T10:59:41Z", "closed_at": "2020-06-28T10:59:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nHere's a self-contained with my use case:\r\n[From official docs website](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/)\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nfrom datetime import datetime, timedelta\r\n\r\nimport jwt\r\nfrom fastapi import Depends, FastAPI, HTTPException, status\r\nfrom fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\r\nfrom jwt import PyJWTError\r\nfrom passlib.context import CryptContext\r\nfrom pydantic import BaseModel\r\n\r\n# to get a string like this run:\r\n# openssl rand -hex 32\r\nSECRET_KEY = \"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\r\nALGORITHM = \"HS256\"\r\nACCESS_TOKEN_EXPIRE_MINUTES = 30\r\n\r\n\r\nfake_users_db = {\r\n    \"johndoe\": {\r\n        \"username\": \"johndoe\",\r\n        \"full_name\": \"John Doe\",\r\n        \"email\": \"johndoe@example.com\",\r\n        \"hashed_password\": \"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\",\r\n        \"disabled\": False,\r\n    }\r\n}\r\n\r\n\r\nclass Token(BaseModel):\r\n    access_token: str\r\n    token_type: str\r\n\r\n\r\nclass TokenData(BaseModel):\r\n    username: str = None\r\n\r\n\r\nclass User(BaseModel):\r\n    username: str\r\n    email: str = None\r\n    full_name: str = None\r\n    disabled: bool = None\r\n\r\n\r\nclass UserInDB(User):\r\n    hashed_password: str\r\n\r\n\r\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\r\n\r\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/token\")\r\n\r\napp = FastAPI()\r\n\r\n\r\ndef verify_password(plain_password, hashed_password):\r\n    return pwd_context.verify(plain_password, hashed_password)\r\n\r\n\r\ndef get_password_hash(password):\r\n    return pwd_context.hash(password)\r\n\r\n\r\ndef get_user(db, username: str):\r\n    if username in db:\r\n        user_dict = db[username]\r\n        return UserInDB(**user_dict)\r\n\r\n\r\ndef authenticate_user(fake_db, username: str, password: str):\r\n    user = get_user(fake_db, username)\r\n    if not user:\r\n        return False\r\n    if not verify_password(password, user.hashed_password):\r\n        return False\r\n    return user\r\n\r\n\r\ndef create_access_token(data: dict, expires_delta: timedelta = None):\r\n    to_encode = data.copy()\r\n    if expires_delta:\r\n        expire = datetime.utcnow() + expires_delta\r\n    else:\r\n        expire = datetime.utcnow() + timedelta(minutes=15)\r\n    to_encode.update({\"exp\": expire})\r\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\r\n    return encoded_jwt\r\n\r\n\r\nasync def get_current_user(token: str = Depends(oauth2_scheme)):\r\n    credentials_exception = HTTPException(\r\n        status_code=status.HTTP_401_UNAUTHORIZED,\r\n        detail=\"Could not validate credentials\",\r\n        headers={\"WWW-Authenticate\": \"Bearer\"},\r\n    )\r\n    try:\r\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\r\n        username: str = payload.get(\"sub\")\r\n        if username is None:\r\n            raise credentials_exception\r\n        token_data = TokenData(username=username)\r\n    except PyJWTError:\r\n        raise credentials_exception\r\n    user = get_user(fake_users_db, username=token_data.username)\r\n    if user is None:\r\n        raise credentials_exception\r\n    return user\r\n\r\n\r\nasync def get_current_active_user(current_user: User = Depends(get_current_user)):\r\n    if current_user.disabled:\r\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\r\n    return current_user\r\n\r\n\r\n@app.post(\"/token\", response_model=Token)\r\nasync def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\r\n    user = authenticate_user(fake_users_db, form_data.username, form_data.password)\r\n    if not user:\r\n        raise HTTPException(\r\n            status_code=status.HTTP_401_UNAUTHORIZED,\r\n            detail=\"Incorrect username or password\",\r\n            headers={\"WWW-Authenticate\": \"Bearer\"},\r\n        )\r\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\r\n    access_token = create_access_token(\r\n        data={\"sub\": user.username}, expires_delta=access_token_expires\r\n    )\r\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\r\n\r\n\r\n@app.get(\"/users/me/\", response_model=User)\r\nasync def read_users_me(current_user: User = Depends(get_current_active_user)):\r\n    return current_user\r\n\r\n\r\n@app.get(\"/users/me/items/\")\r\nasync def read_own_items(current_user: User = Depends(get_current_active_user)):\r\n    return [{\"item_id\": \"Foo\", \"owner\": current_user.username}]```\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\n* Open the browser and call the Authorize form   `/token` with tutorial user and pass, johndoe / secret\r\n* Bad Request 400\r\n* But I expected it to return ` {\"access_token\": access_token, \"token_type\": \"bearer\"}`\r\n\r\n* Do the same out of Swagger. Same error\r\n\r\nI have testes out of swagger to test if problem is on swagger UI.\r\nI have used RESTClient from Firefox. I have POSTed with JSON and form .\r\nAll times got `{\"detail\":\"There was an error parsing the body\"}`\r\n\r\n---maybe about swagger-UI---\r\nThe field client_id in Firefox 77.0.1 (64 bits) is marked as required, in red. But you can POST with no problem ( see gif)\r\nThe same field with Chrome 83.0\r\n\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: Ubunu 20.04 LTS\r\n* FastAPI Version [e.g. 0.3.0]: 0.58.0\r\n\r\n* Python version: Python 3.8.2\r\n\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n\r\nAuthorize form fail\r\n![fastapi-badreq400](https://user-images.githubusercontent.com/6016929/85939997-1fade600-b91a-11ea-9654-bbda742946e4.gif)\r\n\r\nChrome field client_id \r\n![Captura de pantalla de 2020-06-28 08-40-41](https://user-images.githubusercontent.com/6016929/85940177-2d17a000-b91b-11ea-8a2a-a2622a2fd964.png)\r\nFirefox field client_id with required\r\n![Captura de pantalla de 2020-06-28 08-42-12](https://user-images.githubusercontent.com/6016929/85940206-53d5d680-b91b-11ea-8a95-ce651ff6b2ce.png)\r\n\r\n\r\nConsole output:\r\n```\r\n(venv) gil@gil-NUC10i7FNH:~/PycharmProjects/fastapi$ uvicorn test:app --reload --port 5050\r\nINFO:     Uvicorn running on http://127.0.0.1:5050 (Press CTRL+C to quit)\r\nINFO:     Started reloader process [293259] using statreload\r\nINFO:     Started server process [293261]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     127.0.0.1:60596 - \"GET /docs HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:60596 - \"GET /openapi.json HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:60616 - \"GET /docs HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:60616 - \"GET /openapi.json HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:60622 - \"POST /token HTTP/1.1\" 400 Bad Request\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1636", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1636/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1636/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1636/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1636", "id": 646604840, "node_id": "MDU6SXNzdWU2NDY2MDQ4NDA=", "number": 1636, "title": "Validation error when use alias in pydantic return model", "user": {"login": "zihaooo", "id": 64977999, "node_id": "MDQ6VXNlcjY0OTc3OTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/64977999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zihaooo", "html_url": "https://github.com/zihaooo", "followers_url": "https://api.github.com/users/zihaooo/followers", "following_url": "https://api.github.com/users/zihaooo/following{/other_user}", "gists_url": "https://api.github.com/users/zihaooo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zihaooo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zihaooo/subscriptions", "organizations_url": "https://api.github.com/users/zihaooo/orgs", "repos_url": "https://api.github.com/users/zihaooo/repos", "events_url": "https://api.github.com/users/zihaooo/events{/privacy}", "received_events_url": "https://api.github.com/users/zihaooo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-27T04:19:12Z", "updated_at": "2020-07-15T07:36:53Z", "closed_at": "2020-07-15T07:36:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Bing \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nimport fastapi\r\nimport starlette.testclient\r\nfrom pydantic import BaseModel, Field\r\n\r\napp = fastapi.FastAPI()\r\n\r\n\r\nclass InModel(BaseModel):\r\n    start_time: str = Field(alias='start_hms')\r\n\r\n\r\nclass OutModel(BaseModel):\r\n    end_time: str = Field(alias='end_hms')\r\n\r\n\r\n@app.post('/test', response_model=OutModel)\r\ndef test(query_body: InModel):\r\n    print(query_body)  # start_time='14:00:00'\r\n    print(query_body.dict())  # {'start_time': '14:00:00'}\r\n    out_model = {'end_time': '12:00:00'}\r\n    return out_model\r\n\r\n\r\nwith starlette.testclient.TestClient(app) as test_client:\r\n    try:\r\n        response = test_client.post('/test', json={'start_hms': '14:00:00'})\r\n        print(response.json())\r\n    except Exception as exc:\r\n        print(exc)\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\nA wonderful framework! Very happy to use it to coding. Here is a little problem that make me really confused. I can easily change the name for request body from public name to field name by add alias in pydantic model (just what i did to InModel in the code), but when I do the same thing to the return model (OutModel in the code), an error occurred.\r\n* Run the code.\r\n* It ends up with an exception: \r\n```\r\n1 validation error for OutModel\r\nresponse -> end_hms\r\n  field required (type=value_error.missing).\r\n```\r\n* But I expected it to return `{\"end_hms\": \"14:00:00\"}`.\r\n\r\n### Environment\r\n\r\n* OS: Ubuntu 20.04\r\n* FastAPI version: 0.58.0\r\n* Python version: 3.8.2\r\n* Pydantic version: 1.5.1\r\n* Starlette version: 0.13.4\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1635", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1635/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1635/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1635/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1635", "id": 646426583, "node_id": "MDU6SXNzdWU2NDY0MjY1ODM=", "number": 1635, "title": "[QUESTION] Should I set use_cache=False in Security/Depends or is it set implicitly?", "user": {"login": "HarrySky", "id": 8982851, "node_id": "MDQ6VXNlcjg5ODI4NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8982851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HarrySky", "html_url": "https://github.com/HarrySky", "followers_url": "https://api.github.com/users/HarrySky/followers", "following_url": "https://api.github.com/users/HarrySky/following{/other_user}", "gists_url": "https://api.github.com/users/HarrySky/gists{/gist_id}", "starred_url": "https://api.github.com/users/HarrySky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HarrySky/subscriptions", "organizations_url": "https://api.github.com/users/HarrySky/orgs", "repos_url": "https://api.github.com/users/HarrySky/repos", "events_url": "https://api.github.com/users/HarrySky/events{/privacy}", "received_events_url": "https://api.github.com/users/HarrySky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-26T18:04:29Z", "updated_at": "2020-07-07T12:39:56Z", "closed_at": "2020-07-07T12:26:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Example\r\n\r\nHi, great web-framework, great work! :fire:  I am in process of moving one of the backends from `Flask` to `FastAPI` and I was wondering is `FastAPI` using cache when dealing with auth (example below)? Password can change, somebody can delete the user or change his privileges, I hope it does not use cache in my case. Where do I put `use_cache=False` if it does?\r\n\r\n```Python\r\nasync def get_user(security_scopes: SecurityScopes, credentials: HTTPBasicCredentials = Depends(_security)) -> User:\r\n    \"\"\"\r\n    Get user from DB and check if they are authorized to do what is in security_scopes.\r\n    I implement my own caching logic here and check if user was changed in DB.\r\n    \"\"\"\r\n\r\n# /token endpoint\r\nasync def token(user: User = Depends(get_user)) -> JSONResponse:\r\n    \"\"\"Use Basic Auth to get token.\"\"\"\r\n\r\n# /users/{user_id} endpoint\r\nasync def get_user_by_id(user_id: int, user: User = Security(get_user, scopes=[\"users:read\"])):\r\n    '''Get user by ID'''\r\n```\r\n\r\nThanks a lot! :smile:\r\n\r\n### Environment\r\n\r\n* OS: Linux:\r\n* FastAPI Version: 0.58.0\r\n* Python version: 3.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1634", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1634/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1634/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1634/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1634", "id": 646339206, "node_id": "MDU6SXNzdWU2NDYzMzkyMDY=", "number": 1634, "title": "Broken link on the site: https://fastapi.tiangolo.com/tutorial/using-request-directly/", "user": {"login": "tomarv2", "id": 11890959, "node_id": "MDQ6VXNlcjExODkwOTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/11890959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomarv2", "html_url": "https://github.com/tomarv2", "followers_url": "https://api.github.com/users/tomarv2/followers", "following_url": "https://api.github.com/users/tomarv2/following{/other_user}", "gists_url": "https://api.github.com/users/tomarv2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomarv2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomarv2/subscriptions", "organizations_url": "https://api.github.com/users/tomarv2/orgs", "repos_url": "https://api.github.com/users/tomarv2/repos", "events_url": "https://api.github.com/users/tomarv2/events{/privacy}", "received_events_url": "https://api.github.com/users/tomarv2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-26T15:25:17Z", "updated_at": "2020-06-26T19:50:58Z", "closed_at": "2020-06-26T19:50:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nI tried link listed in this issue: https://github.com/tiangolo/fastapi/issues/201 and it returns 404: \r\n\r\nhttps://fastapi.tiangolo.com/tutorial/using-request-directly/\r\n\r\nPlease if you fix it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1633", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1633/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1633/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1633/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1633", "id": 646309971, "node_id": "MDU6SXNzdWU2NDYzMDk5NzE=", "number": 1633, "title": "Extracting both summary and description from path function docstring in PEP 257 compliant way", "user": {"login": "jasujm", "id": 12816622, "node_id": "MDQ6VXNlcjEyODE2NjIy", "avatar_url": "https://avatars3.githubusercontent.com/u/12816622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasujm", "html_url": "https://github.com/jasujm", "followers_url": "https://api.github.com/users/jasujm/followers", "following_url": "https://api.github.com/users/jasujm/following{/other_user}", "gists_url": "https://api.github.com/users/jasujm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasujm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasujm/subscriptions", "organizations_url": "https://api.github.com/users/jasujm/orgs", "repos_url": "https://api.github.com/users/jasujm/repos", "events_url": "https://api.github.com/users/jasujm/events{/privacy}", "received_events_url": "https://api.github.com/users/jasujm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-26T14:41:14Z", "updated_at": "2020-08-03T10:50:52Z", "closed_at": "2020-08-03T10:48:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [X] I added a very descriptive title to this issue.\r\n* [X] I used the GitHub search to find a similar issue and didn't find it.\r\n* [X] I searched the FastAPI documentation, with the integrated search.\r\n* [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [X] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [X] After submitting this, I commit to:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * Or, I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\nRecent library adopter and first-time issue opener here. :) Thanks to the team for the great library!\r\n\r\nThe library has a helpful feature of extracting OpenAPI path documentation from the docstring of the handler function. However, I find the feature counter-intuitive from [PEP 257](https://www.python.org/dev/peps/pep-0257/) point of view. The best practices defined by the PEP defines that [a multi-line docstring consists of a summary line and an elaborate description](https://www.python.org/dev/peps/pep-0257/#multi-line-docstrings). I believe that, instead of using the whole docstring as description, the summary line and description should be mapped to OpenAPI summary _and_ description, respectively.\r\n\r\nI'm willing to contribute the PR, but would like to clear my idea with the maintainers first.\r\n\r\n### Example\r\n\r\nHere's a self-contained [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/\")\r\ndef hello():\r\n    \"\"\"Respond with the friendly greeting\r\n\r\n    This is a long long description of the API call.\r\n    \"\"\"\r\n    return { \"greeting\": \"Hello, world!\" }\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own feature request -->\r\n\r\n* Open the browser and call the endpoint `/openapi.json`.\r\n* It returns a the following JSON doument\r\n\r\n```json\r\n{\r\n  \"openapi\": \"3.0.2\",\r\n  \"info\": {\r\n    \"title\": \"FastAPI\",\r\n    \"version\": \"0.1.0\"\r\n  },\r\n  \"paths\": {\r\n    \"/\": {\r\n      \"get\": {\r\n        \"summary\": \"Hello\",\r\n        \"description\": \"Respond with the friendly greeting\\n\\nThis is a long long description of the API call.\",\r\n        \"operationId\": \"hello__get\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Successful Response\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n* I would instead expect the summary line and the description in the docstring to be mapped to the summary and the description of the OpenAPI document, respectively:\r\n\r\n```json\r\n{\r\n  \"openapi\": \"3.0.2\",\r\n  \"info\": {\r\n    \"title\": \"FastAPI\",\r\n    \"version\": \"0.1.0\"\r\n  },\r\n  \"paths\": {\r\n    \"/\": {\r\n      \"get\": {\r\n        \"summary\": \"Respond with the friendly greeting\",\r\n        \"description\": \"This is a long long description of the API call.\",\r\n        \"operationId\": \"hello__get\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Successful Response\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### The solution you would like\r\n\r\nI realize that this is a backward-incompatible change. Nevertheless, I think it's justified for compliance with docstring best practices and a more natural way to write documentation. I suggest the following to mitigate the impact:\r\n\r\n* If the route decorator has both `summary` and `description` set, ignore the docstring\r\n* If the route decorator has `summary` set but `description` not set, interpret the whole docstring as a description (compatible with the current behavior)\r\n* If the route decorator has neither `summary` nor `description` set, populate both `summary` and `description` from the docstring as described above\r\n\r\nAs I said above, I'll be happy to write a PR for this, but I would like to get feedback on the idea first.\r\n\r\n### Describe alternatives you've considered\r\n\r\nWhat I described can currently be done with decorator arguments, so this feature is just for enhancing productivity and, arguably, the cleanliness of documentation. The alternative is to document the paths like so far.\r\n\r\n### Environment\r\n\r\n* OS: Linux\r\n* FastAPI Version: 0.58.0\r\n* Python version: 3.8.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1631", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1631/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1631/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1631/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1631", "id": 646272288, "node_id": "MDU6SXNzdWU2NDYyNzIyODg=", "number": 1631, "title": "Tags metadata is missing from docs", "user": {"login": "jbmoorhouse", "id": 32223462, "node_id": "MDQ6VXNlcjMyMjIzNDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/32223462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbmoorhouse", "html_url": "https://github.com/jbmoorhouse", "followers_url": "https://api.github.com/users/jbmoorhouse/followers", "following_url": "https://api.github.com/users/jbmoorhouse/following{/other_user}", "gists_url": "https://api.github.com/users/jbmoorhouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbmoorhouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbmoorhouse/subscriptions", "organizations_url": "https://api.github.com/users/jbmoorhouse/orgs", "repos_url": "https://api.github.com/users/jbmoorhouse/repos", "events_url": "https://api.github.com/users/jbmoorhouse/events{/privacy}", "received_events_url": "https://api.github.com/users/jbmoorhouse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T13:41:55Z", "updated_at": "2020-06-28T11:15:47Z", "closed_at": "2020-06-28T11:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [ ] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [ ] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\nFirst of all, thank you for producing such an awesome project! Working with FastAPI has been an absolute pleasure so far! \r\n\r\n### Example\r\n\r\nFollowing the the [FastAPI example](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-tags)\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\ntags_metadata = [\r\n    {\r\n        \"name\": \"users\",\r\n        \"description\": \"Operations with users. The **login** logic is also here.\",\r\n    },\r\n    {\r\n        \"name\": \"items\",\r\n        \"description\": \"Manage items. So _fancy_ they have their own docs.\",\r\n        \"externalDocs\": {\r\n            \"description\": \"Items external docs\",\r\n            \"url\": \"https://fastapi.tiangolo.com/\",\r\n        },\r\n    },\r\n]\r\n\r\napp = FastAPI(openapi_tags=tags_metadata)\r\n\r\n\r\n@app.get(\"/users/\", tags=[\"users\"])\r\nasync def get_users():\r\n    return [{\"name\": \"Harry\"}, {\"name\": \"Ron\"}]\r\n\r\n\r\n@app.get(\"/items/\", tags=[\"items\"])\r\nasync def get_items():\r\n    return [{\"name\": \"wand\"}, {\"name\": \"flying broom\"}]\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\n* When running the example above and accessing the generated docs (both `/docs` and `/redoc`), the tag descriptions are not visible (e.g. `\"description\": \"Operations with users. The **login** logic is also here.\"` is missing).\r\n\r\n\r\n### Environment\r\n\r\n* OS: Ubuntu 20.04 LTS:\r\n* FastAPI Version: 0.55.1\r\n* Python version: 3.6.9 \r\n* Both Firefox and Chromium\r\n\r\n### Additional context\r\n\r\n* I also tried the solution [here](https://github.com/tiangolo/fastapi/issues/566#issuecomment-561457626) which does work.\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1622", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1622/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1622/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1622/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1622", "id": 645358439, "node_id": "MDU6SXNzdWU2NDUzNTg0Mzk=", "number": 1622, "title": "[QUESTION] - Use request object in a dependency", "user": {"login": "Kludex", "id": 7353520, "node_id": "MDQ6VXNlcjczNTM1MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7353520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kludex", "html_url": "https://github.com/Kludex", "followers_url": "https://api.github.com/users/Kludex/followers", "following_url": "https://api.github.com/users/Kludex/following{/other_user}", "gists_url": "https://api.github.com/users/Kludex/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kludex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kludex/subscriptions", "organizations_url": "https://api.github.com/users/Kludex/orgs", "repos_url": "https://api.github.com/users/Kludex/repos", "events_url": "https://api.github.com/users/Kludex/events{/privacy}", "received_events_url": "https://api.github.com/users/Kludex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T08:55:25Z", "updated_at": "2020-07-06T18:34:52Z", "closed_at": "2020-06-25T08:59:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### First check\r\n\r\n* [X] I added a very descriptive title to this issue.\r\n* [X] I used the GitHub search to find a similar issue and didn't find it.\r\n* [X] I searched the FastAPI documentation, with the integrated search.\r\n* [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [X] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [X] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [X] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [X] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [X] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n### Example\r\n\r\nI want to be able to do something like this:\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Request\r\n\r\napp = FastAPI()\r\n\r\ndef on_permissions(request: Request = Depends()):\r\n    pass\r\n\r\n@app.get(\"/{user_id}\", dependencies=[Depends(OnReadUser)]\r\ndef read_user(user_id: int):\r\n    return crud_user.get(id=user_id)\r\n```\r\n\r\n### Description\r\n\r\nI need to use the request in a dependency function. The goal is to create a permission/access control list and use it to authorize the user to use an endpoint based on the request fields and the permissions.\r\n\r\n### Additional context\r\n\r\nIf that's not possible, is there a way to get the endpoint path like what is described here: https://github.com/tiangolo/fastapi/issues/486 , but before sending it to the endpoint itself?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1617", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1617/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1617/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1617/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1617", "id": 644422936, "node_id": "MDU6SXNzdWU2NDQ0MjI5MzY=", "number": 1617, "title": "Can not send request with a python list", "user": {"login": "amineHY", "id": 16307387, "node_id": "MDQ6VXNlcjE2MzA3Mzg3", "avatar_url": "https://avatars2.githubusercontent.com/u/16307387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amineHY", "html_url": "https://github.com/amineHY", "followers_url": "https://api.github.com/users/amineHY/followers", "following_url": "https://api.github.com/users/amineHY/following{/other_user}", "gists_url": "https://api.github.com/users/amineHY/gists{/gist_id}", "starred_url": "https://api.github.com/users/amineHY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amineHY/subscriptions", "organizations_url": "https://api.github.com/users/amineHY/orgs", "repos_url": "https://api.github.com/users/amineHY/repos", "events_url": "https://api.github.com/users/amineHY/events{/privacy}", "received_events_url": "https://api.github.com/users/amineHY/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-24T08:27:57Z", "updated_at": "2020-06-30T08:10:48Z", "closed_at": "2020-06-30T08:10:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\nI am a data scientist new in building API's. I developed a REST API using Fast API and I use python's library requests to call the API. \r\nHowever, I don't know how to pass a list parameter (e;g. : ['a', 'b', ...]) \r\nI have declared the parameter in FastAPI as List[str], I also tried is declare it inside a BaseModel class as a list but this didn't work for me.\r\nI couldn't figure out the problem. Anyone can help with an example, please?\r\nin addition, I would like to know how do send the list in the requests library? I already use params and files but I don't know where a list can be sent.\r\n\r\nThank you in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1608", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1608/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1608/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1608/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1608", "id": 642623448, "node_id": "MDU6SXNzdWU2NDI2MjM0NDg=", "number": 1608, "title": "Return JSON array", "user": {"login": "KayJay89", "id": 18738394, "node_id": "MDQ6VXNlcjE4NzM4Mzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/18738394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KayJay89", "html_url": "https://github.com/KayJay89", "followers_url": "https://api.github.com/users/KayJay89/followers", "following_url": "https://api.github.com/users/KayJay89/following{/other_user}", "gists_url": "https://api.github.com/users/KayJay89/gists{/gist_id}", "starred_url": "https://api.github.com/users/KayJay89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KayJay89/subscriptions", "organizations_url": "https://api.github.com/users/KayJay89/orgs", "repos_url": "https://api.github.com/users/KayJay89/repos", "events_url": "https://api.github.com/users/KayJay89/events{/privacy}", "received_events_url": "https://api.github.com/users/KayJay89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-21T19:13:36Z", "updated_at": "2020-06-21T19:38:27Z", "closed_at": "2020-06-21T19:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everybody,\r\n\r\nFirst of all this is a phenomenal framework and I am loving what I have learnt so far. I'm fairly new to this one so I do apologize in advance if the below has been asked already.\r\n\r\nI'm trying to return a JSON array on one of my routes but I am failing to do so as I am getting below error:\r\n\r\n```\r\npydantic.error_wrappers.ValidationError: 1 validation error for Management\r\nresponse\r\n  value is not a valid dict (type=type_error.dict)\r\n```\r\nMy endpoint:\r\n\r\n```\r\n@app.get(\"/management/{ticker}\", response_model=Management)\r\nasync def get_management_data(\r\n    ticker: str = Path(\r\n        ...,\r\n        title=\"Ticker of the company's data you want to get\",\r\n        min_length=1,\r\n        max_length=5,\r\n        regex=\"^[a-zA-Z]+$\",\r\n    )\r\n):\r\n    management_data = Ticker(ticker).all_modules\r\n    response_data = []\r\n    for officer in management_data[ticker][\"assetProfile\"][\"companyOfficers\"]:\r\n        manager_data = {}\r\n        for key, value in officer.items():\r\n            if key in [\"name\", \"title\", \"age\", \"totalPay\"]:\r\n                manager_data.update({key: value})\r\n        response_data.append(manager_data)\r\n    return response_data\r\n```\r\n\r\nSo the basic idea is that the api user inputs a 1 to 5 letter long string, the API then looks up the company's details and returns a list of Manager models, both of which are defined as follows:\r\n\r\n```\r\nclass Manager(BaseModel):\r\n    name: str\r\n    title: str\r\n    age: int\r\n    salary: int = None\r\n\r\n\r\nclass Management(BaseModel):\r\n    manager: List[Manager]\r\n```\r\nSo basically what I would expect to return is:\r\n\r\n```\r\n{\r\n    {\"name\": \"Name of manager\", \"title\": \"CEO\", \"age\": 39,},\r\n    {\"name\": \"Name of manager\", \"title\": \"CFO\", \"age\": 56,},\r\n    {\"name\": \"Name of manager\", \"title\": \"CMO\", \"age\": 44,},\r\n}\r\n```\r\n\r\nI suppose I am doing something wrong but I have not found the answer after looking for hours online and trying out different things. I would very much appreciate any hint or help to get me unstuck. \r\n\r\nKR,\r\nKevin", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1607", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1607/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1607/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1607/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1607", "id": 642496491, "node_id": "MDU6SXNzdWU2NDI0OTY0OTE=", "number": 1607, "title": "how to response bytes instead of json?", "user": {"login": "crazy-canux", "id": 14313415, "node_id": "MDQ6VXNlcjE0MzEzNDE1", "avatar_url": "https://avatars0.githubusercontent.com/u/14313415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crazy-canux", "html_url": "https://github.com/crazy-canux", "followers_url": "https://api.github.com/users/crazy-canux/followers", "following_url": "https://api.github.com/users/crazy-canux/following{/other_user}", "gists_url": "https://api.github.com/users/crazy-canux/gists{/gist_id}", "starred_url": "https://api.github.com/users/crazy-canux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crazy-canux/subscriptions", "organizations_url": "https://api.github.com/users/crazy-canux/orgs", "repos_url": "https://api.github.com/users/crazy-canux/repos", "events_url": "https://api.github.com/users/crazy-canux/events{/privacy}", "received_events_url": "https://api.github.com/users/crazy-canux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-21T05:09:16Z", "updated_at": "2020-06-21T09:22:23Z", "closed_at": "2020-06-21T09:22:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [ ] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [ ] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [ ] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [ ] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\nwhen I set \"content-type\" in response header as something else instead of \"application/json\".\r\nwhy the response header always have \"content-type=application/json\"?\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/v2/{name:path}/manifests/{reference}\", status_code=200)\r\nasync def get_manifests(response: Response, name, reference, request: Request):\r\n    logger.debug(request.headers)\r\n    file_name = os.path.join(\"/my/registry\", \"v2\",  name, \"manifests\", reference)\r\n    with open(file_name, \"rb\") as f:\r\n        chunk = f.read()\r\n    logger.debug(len(chunk))\r\n    sha256 = hashlib.sha256(chunk).hexdigest()\r\n    response.headers[\"Docker-Distribution-Api-Version\"] = \"registry/2.0\"\r\n    response.headers[\"Docker-Content-Digest\"] = \"sha256:{}\".format(sha256)\r\n    response.headers[\"Content-Type\"] = \"application/vnd.docker.distribution.manifest.v2+json\"\r\n    #response.headers[\"Content-Length\"] = str(len(chunk))\r\n    response.status_code = status.HTTP_200_OK\r\n    logger.debug(response.headers)\r\n    return chunk\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\nIf I set the \"content-length\" with len(chunk).\r\nGot this errors:\r\n`net/http: HTTP/1.x transport connection broken: http: message cannot contain multiple Content-Length headers; got [\"1236\" \"1571\"]`\r\nI think it's because the response content-type transfer to \"application/json\" by fastapi, makes the content-length changed.\r\n\r\nIf not set \"content-length\", let's fastapi calculate by default.\r\nThe registry will not working. also because of the \"content-type\" is not \"application/vnd.docker.distribution.manifest.v2+json\".\r\n\r\n![image](https://user-images.githubusercontent.com/14313415/85219284-087c6f00-b3d5-11ea-9c0e-2c327ad0f3bf.png)\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]:    docker alpine\r\n* FastAPI Version [e.g. 0.3.0]:                   0.58.0\r\n\r\nTo know the FastAPI version use:\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n\r\n* Python version:   python3.6\r\n\r\nTo know the Python version use:\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n\r\nHow to return bytes with specify \"content-type\"?\r\nHow to disable the default  \"content-type: application/json\" ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1605", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1605/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1605/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1605/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1605", "id": 642391979, "node_id": "MDU6SXNzdWU2NDIzOTE5Nzk=", "number": 1605, "title": "add object oriented endpoint organisation", "user": {"login": "gemerden", "id": 4526943, "node_id": "MDQ6VXNlcjQ1MjY5NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4526943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gemerden", "html_url": "https://github.com/gemerden", "followers_url": "https://api.github.com/users/gemerden/followers", "following_url": "https://api.github.com/users/gemerden/following{/other_user}", "gists_url": "https://api.github.com/users/gemerden/gists{/gist_id}", "starred_url": "https://api.github.com/users/gemerden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gemerden/subscriptions", "organizations_url": "https://api.github.com/users/gemerden/orgs", "repos_url": "https://api.github.com/users/gemerden/repos", "events_url": "https://api.github.com/users/gemerden/events{/privacy}", "received_events_url": "https://api.github.com/users/gemerden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-20T15:00:44Z", "updated_at": "2020-07-19T08:59:05Z", "closed_at": "2020-07-19T08:59:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would there be any interest in an object oriented version of the Api definitions? Something along the lines of (runnable):\r\n\r\n```python\r\n# mark the function for 'route' decoration, and store args on function\r\ndef get_route_decorator(name):\r\n    def get_decorator(path, *args, **kwargs):\r\n        def decorator(func):\r\n            func.__route_args__ = (name, path, args, kwargs)\r\n            return func\r\n\r\n        return decorator\r\n\r\n    return get_decorator\r\n\r\n# create the actual decorators (could be in class of themselves)\r\nget = get_route_decorator('get')\r\npost = get_route_decorator('post')\r\nput = get_route_decorator('put')\r\npatch = get_route_decorator('patch')\r\n\r\n\r\nclass BaseObjectApi(object):\r\n    \"\"\" baseclass for classes that implement the endpoints \"\"\"\r\n\r\n    path = ''  # base path for all endpoints in the class\r\n\r\n    def __init__(self, app):\r\n        self._register(app)\r\n\r\n    def _register(self, app):\r\n        self.app = app\r\n        for name in dir(self.__class__):\r\n            method = getattr(self, name)  # bound to self\r\n            try:\r\n                name, path, args, kwargs = method.__route_args__  # unpack the arguments\r\n            except AttributeError:\r\n                pass\r\n            else:\r\n                new_path = self._prepend_path(path)  # prepend cls.path\r\n                getattr(app, name)(new_path, *args, **kwargs)(method)  # apply app.get(...) or app.put(...), etc. decorators\r\n\r\n    def _prepend_path(self, path):\r\n        return f\"/{self.path.strip('/')}/{path.lstrip('/')}\"\r\n\r\n\r\nif __name__ == '__main__':\r\n    import fastapi\r\n    import uvicorn\r\n\r\n\r\n    class ObjectApi(BaseObjectApi):\r\n        path = 'items'\r\n\r\n        @get(\"/{num}\")\r\n        async def read_root(self, num: int):\r\n            return {\"Hello\": f\"World {num}\"}\r\n\r\n    api = ObjectApi(app=fastapi.FastAPI())\r\n\r\n    uvicorn.run(api.app)\r\n\r\n# http://127.0.0.1:8000/items/1\r\n```\r\nThis is just the basic idea. The point would to allow better endpoint organisation and to make organizing the items accessed by the endpoint easier (added in __init__ of subclass).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1604", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1604/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1604/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1604/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1604", "id": 642306427, "node_id": "MDU6SXNzdWU2NDIzMDY0Mjc=", "number": 1604, "title": "OAuth2PasswordRequestForm   always error: 'There was an error parsing the body'", "user": {"login": "cnly1987", "id": 10063734, "node_id": "MDQ6VXNlcjEwMDYzNzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/10063734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cnly1987", "html_url": "https://github.com/cnly1987", "followers_url": "https://api.github.com/users/cnly1987/followers", "following_url": "https://api.github.com/users/cnly1987/following{/other_user}", "gists_url": "https://api.github.com/users/cnly1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/cnly1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cnly1987/subscriptions", "organizations_url": "https://api.github.com/users/cnly1987/orgs", "repos_url": "https://api.github.com/users/cnly1987/repos", "events_url": "https://api.github.com/users/cnly1987/events{/privacy}", "received_events_url": "https://api.github.com/users/cnly1987/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-20T04:27:29Z", "updated_at": "2020-08-02T02:27:07Z", "closed_at": "2020-06-20T04:44:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "if i use OAuth2PasswordRequestForm,  then  response : \"detail\": \"There was an error parsing the body\"\r\n\r\nbut i use body  everything is ok!  why?\r\n\r\n`\r\n@router.post(\"/token\", response_model=schemas.Token)\r\nasync def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(), db:Session = Depends(get_db)):\r\n# async def login_for_access_token(*, username: str = Body(...), password: str = Body(...), db:Session = Depends(get_db)):\r\n    user = authenticate_user(db, form_data.username, form_data.password)\r\n    if not user:\r\n        raise HTTPException(\r\n            status_code=status.HTTP_401_UNAUTHORIZED,\r\n            detail=\"Incorrect username or password\",\r\n            headers={\"WWW-Authenticate\": \"Bearer\"},\r\n        )\r\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\r\n    access_token = create_access_token(\r\n        data={\"sub\": user.username}, expires_delta=access_token_expires\r\n    )\r\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\r\n`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1600", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1600/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1600/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1600/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1600", "id": 642198556, "node_id": "MDU6SXNzdWU2NDIxOTg1NTY=", "number": 1600, "title": "In query params, if a string value contains a \";\" then the later part of the string (i.e, after \";\") is ignored", "user": {"login": "dpralay07", "id": 31288358, "node_id": "MDQ6VXNlcjMxMjg4MzU4", "avatar_url": "https://avatars3.githubusercontent.com/u/31288358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpralay07", "html_url": "https://github.com/dpralay07", "followers_url": "https://api.github.com/users/dpralay07/followers", "following_url": "https://api.github.com/users/dpralay07/following{/other_user}", "gists_url": "https://api.github.com/users/dpralay07/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpralay07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpralay07/subscriptions", "organizations_url": "https://api.github.com/users/dpralay07/orgs", "repos_url": "https://api.github.com/users/dpralay07/repos", "events_url": "https://api.github.com/users/dpralay07/events{/privacy}", "received_events_url": "https://api.github.com/users/dpralay07/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-19T20:17:25Z", "updated_at": "2020-07-18T17:45:17Z", "closed_at": "2020-06-20T12:43:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [ ] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\n* Open the browser and call the endpoint `/`.\r\n* It returns a JSON with `{\"Hello\": \"World\"}`.\r\n* But I expected it to return `{\"Hello\": \"Sara\"}`.\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]:\r\n* FastAPI Version [e.g. 0.3.0]:\r\n\r\nTo know the FastAPI version use:\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n\r\n* Python version:\r\n\r\nTo know the Python version use:\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n\r\n@app.get(\"/items/\")\r\nasync def read_items(q: str):\r\n    results = {\"items\": [{\"item_id\": \"Foo\"}, {\"item_id\": \"Bar\"}]}\r\n    print(q)\r\n    return results\r\n\r\nif I hit this API with value \"test\":\r\n   API: /items/?q=test\r\nit prints: test\r\n\r\nif I hit this API with value \"test;test1;test2\":\r\n   API: /items/?q=test\r\nit prints: test\r\n\"test1;test2\" is ignored.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1599", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1599/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1599/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1599/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1599", "id": 642144019, "node_id": "MDU6SXNzdWU2NDIxNDQwMTk=", "number": 1599, "title": "Check python-multipart when using Form and raise early", "user": {"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1870517463, "node_id": "MDU6TGFiZWwxODcwNTE3NDYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/confirmed", "name": "confirmed", "color": "9cf4bf", "default": false, "description": ""}, {"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1154536361, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYx", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-19T18:09:06Z", "updated_at": "2020-08-08T18:35:19Z", "closed_at": "2020-08-08T18:35:18Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * Or, I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nHere's a self-contained [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Form\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.post(\"/login/\")\r\nasync def login(username: str = Form(...), password: str = Form(...)):\r\n    return {\"username\": username}\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own feature request -->\r\n\r\n* Create a new venv\r\n* Install only FastAPI and Uvicorn\r\n* Run that example\r\n* Try it in the docs\r\n* It returns a 400 response with:\r\n\r\n```JSON\r\n{\r\n  \"detail\": \"There was an error parsing the body\"\r\n}\r\n```\r\n\r\nThe problem is that it's trying to read form data (multipart), and for that it requires the package `python-multipart` installed.\r\n\r\nIt is documented in the docs in FastAPI and Starlette, but forgetting to install it and running the app ends up in that behavior that is not explicit nor obvious. Everything works normally, except that specific *path operation*, that only breaks after a receiving a request (which is worse).\r\n\r\nTo make things more complex, the package required is `python-multipart`. But there's another Python package called just `multipart`.\r\n\r\nAnd both packages are imported as:\r\n\r\n```Python\r\nimport multipart\r\n```\r\n\r\nThis can lead to a problem that is really difficult to debug: an environment with both packages installed, in some runs could import the correct package and everything would work, but in other runs, it could import the other package, which would cause problems. That would make it one of those scary ghost bugs that disappear and appear. :bug: :ghost: \r\n\r\n And even worse, the problems will only show up *after* receiving a request in a path operation that requires reading form data, not at start up.\r\n\r\n### The solution you would like\r\n\r\n<!-- Replace this with your own content -->\r\n\r\nIn FastAPI, the main ways to get form data are quite explicit, using `Form`, `UploadFile`, `bytes`.\r\n\r\nThat means that it's possible to detect that a path operation will try to read form data on initialization.\r\n\r\nI would like FastAPI to raise an error and crash fast when there's a *path operation* that uses something that requires to read form data, right on initialization (while creating the instances).\r\n\r\nIn Starlette (or in FastAPI when using the request directly), there's no way to know if the code will try to access form data from the request.\r\n\r\nBut in FastAPI, as it is declared in function parameters that are read during initialization, it would be possible to error out early.\r\n\r\nIt should log an error saying that form data requires `python-multipart` and then raise the exception. This would be triggered right while starting an application.\r\n\r\nBut it would only raise an exception if there's a path operation that actually requires form data, otherwise, everything would work as normal.\r\n\r\nIt should ideally also detect if the imported `multipart` is the correct one or not. If the incorrect one is installed/imported, it should log an error informing that clearly, explaining that `multipart` is not compatible with `python-multipart`, that the user has to uninstall `multipart` and then install `python-multipart`.\r\n\r\nThere's a point in code that decides if a *path operation* should read from JSON or from Form data while creating the request body field for a *path operation*. Whatever does the check about `python-multipart`, would ideally run from that same point.\r\n\r\n### Describe alternatives you've considered\r\n\r\n<!-- Replace this with your own ideas -->\r\n\r\nLeave it as is. But it's frustrating when it happens.\r\n\r\nIt took me a while (days) to debug that there could be 2 multipart packages conflicting. If it was so difficult for me (that I'm supposed to know enough about FastAPI, I guess :shrug: ), I imagine how frustrating that could be for someone new.\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: All\r\n* FastAPI Version [e.g. 0.3.0]: All\r\n\r\nTo know the FastAPI version use:\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n\r\n* Python version: All\r\n\r\nTo know the Python version use:\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n### Additional context\r\n\r\nTom created an issue in the repo suggesting a name change: https://github.com/andrew-d/python-multipart/issues/16\r\n\r\nBut that will probably take some time to happen (if it happens).\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1598", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1598/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1598/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1598/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1598", "id": 642119663, "node_id": "MDU6SXNzdWU2NDIxMTk2NjM=", "number": 1598, "title": "Update JWT docs with python-jose", "user": {"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1870517463, "node_id": "MDU6TGFiZWwxODcwNTE3NDYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/confirmed", "name": "confirmed", "color": "9cf4bf", "default": false, "description": ""}, {"id": 1836441168, "node_id": "MDU6TGFiZWwxODM2NDQxMTY4", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/docs", "name": "docs", "color": "009688", "default": false, "description": "Documentation about how to use FastAPI"}, {"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1154536361, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYx", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T17:18:02Z", "updated_at": "2020-08-16T17:33:36Z", "closed_at": "2020-08-16T17:33:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * Or, I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nN/A, docs.\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own feature request -->\r\n\r\nThe docs should suggest and use https://github.com/mpdavis/python-jose instead of PyJWT as `python-jose` supports the same features plus some more that are required for some OAuth2 use cases.\r\n\r\n### The solution you would like\r\n\r\n<!-- Replace this with your own content -->\r\n\r\nI would like all the docs that deal with security with JWT to suggest and https://github.com/mpdavis/python-jose instead of PyJWT.\r\n\r\n### Describe alternatives you've considered\r\n\r\n<!-- Replace this with your own ideas -->\r\n\r\nTo leave it as is, but I'm already using `python-jose` everywhere and is what I would recommend.\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: All\r\n* FastAPI Version [e.g. 0.3.0]: All\r\n\r\nTo know the FastAPI version use:\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n\r\n* Python version: All\r\n\r\nTo know the Python version use:\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n### Additional context\r\n\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1597", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1597/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1597/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1597/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1597", "id": 642111534, "node_id": "MDU6SXNzdWU2NDIxMTE1MzQ=", "number": 1597, "title": "Note in docs about other Pydantic data types", "user": {"login": "tiangolo", "id": 1326112, "node_id": "MDQ6VXNlcjEzMjYxMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1326112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiangolo", "html_url": "https://github.com/tiangolo", "followers_url": "https://api.github.com/users/tiangolo/followers", "following_url": "https://api.github.com/users/tiangolo/following{/other_user}", "gists_url": "https://api.github.com/users/tiangolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiangolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiangolo/subscriptions", "organizations_url": "https://api.github.com/users/tiangolo/orgs", "repos_url": "https://api.github.com/users/tiangolo/repos", "events_url": "https://api.github.com/users/tiangolo/events{/privacy}", "received_events_url": "https://api.github.com/users/tiangolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1836441168, "node_id": "MDU6TGFiZWwxODM2NDQxMTY4", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/docs", "name": "docs", "color": "009688", "default": false, "description": "Documentation about how to use FastAPI"}, {"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1154536361, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYx", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T17:01:23Z", "updated_at": "2020-06-28T21:41:20Z", "closed_at": "2020-06-28T21:41:20Z", "author_association": "OWNER", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * Or, I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nN/A. Just docs.\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own feature request -->\r\n\r\nWe should have a link to the Pydantic data types here: https://pydantic-docs.helpmanual.io/usage/types/\r\n\r\nFrom the docs here: https://fastapi.tiangolo.com/tutorial/extra-data-types/\r\n\r\n### The solution you would like\r\n\r\n<!-- Replace this with your own content -->\r\n\r\nA note in that docs page saying something like:\r\n\r\n> You can also check all valid the Pydantic data types here: some-link\r\n\r\n### Describe alternatives you've considered\r\n\r\n<!-- Replace this with your own ideas -->\r\n\r\nN/A.\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: All (docs)\r\n* FastAPI Version [e.g. 0.3.0]: All (docs)\r\n\r\nTo know the FastAPI version use:\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n\r\n* Python version: All (docs)\r\n\r\nTo know the Python version use:\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1595", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1595/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1595/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1595/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1595", "id": 641877680, "node_id": "MDU6SXNzdWU2NDE4Nzc2ODA=", "number": 1595, "title": "Connection issues running python-web-perf benchmarks.", "user": {"login": "leontrolski", "id": 10234961, "node_id": "MDQ6VXNlcjEwMjM0OTYx", "avatar_url": "https://avatars3.githubusercontent.com/u/10234961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leontrolski", "html_url": "https://github.com/leontrolski", "followers_url": "https://api.github.com/users/leontrolski/followers", "following_url": "https://api.github.com/users/leontrolski/following{/other_user}", "gists_url": "https://api.github.com/users/leontrolski/gists{/gist_id}", "starred_url": "https://api.github.com/users/leontrolski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leontrolski/subscriptions", "organizations_url": "https://api.github.com/users/leontrolski/orgs", "repos_url": "https://api.github.com/users/leontrolski/repos", "events_url": "https://api.github.com/users/leontrolski/events{/privacy}", "received_events_url": "https://api.github.com/users/leontrolski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T10:41:49Z", "updated_at": "2020-07-05T00:22:58Z", "closed_at": "2020-07-05T00:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would anyone be able to help me with the problems I'm encountering [in this PR](https://github.com/calpaterson/python-web-perf/pull/7)?\r\n\r\n> I've just been running on my mac (with the intention of trying to run up in the cloud later), have hit the following (I assume I have something configured wrong):\r\n>\r\n> 1. If I bench against PWPWORKERS=n ./serve-gunicorn-fastapi-async.sh where n > 1 I get a load of ResourceWarning: Unclosed 2 connections in <aiopg.pool.Pool object ...> messages and everything breaks. I found this with with starlette too.\r\n> 2. If I bench against PWPWORKERS=n ./serve-gunicorn-fastapi.sh where n = anything I get the odd catastrophic psycopg2.pool.PoolError: connection pool exhausted error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1593", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1593/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1593/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1593/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1593", "id": 641362009, "node_id": "MDU6SXNzdWU2NDEzNjIwMDk=", "number": 1593, "title": "[QUESTION] Any consideration in configuring YAPF auto formatter or alternatives", "user": {"login": "asheux", "id": 22955146, "node_id": "MDQ6VXNlcjIyOTU1MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/22955146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asheux", "html_url": "https://github.com/asheux", "followers_url": "https://api.github.com/users/asheux/followers", "following_url": "https://api.github.com/users/asheux/following{/other_user}", "gists_url": "https://api.github.com/users/asheux/gists{/gist_id}", "starred_url": "https://api.github.com/users/asheux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asheux/subscriptions", "organizations_url": "https://api.github.com/users/asheux/orgs", "repos_url": "https://api.github.com/users/asheux/repos", "events_url": "https://api.github.com/users/asheux/events{/privacy}", "received_events_url": "https://api.github.com/users/asheux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T16:26:47Z", "updated_at": "2020-07-02T00:21:37Z", "closed_at": "2020-07-02T00:21:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [x] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n\r\n### Description\r\n\r\nI configured my editor to use YAPF auto format buffer and whenever I save a python file, it formats the existing code. What formatter is the team using? If none, do you consider configuring YAPF or any other formatter for python?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1587", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1587/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1587/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1587/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1587", "id": 640838076, "node_id": "MDU6SXNzdWU2NDA4MzgwNzY=", "number": 1587, "title": "ERROR:    Error getting request body", "user": {"login": "fishs-x", "id": 26923148, "node_id": "MDQ6VXNlcjI2OTIzMTQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/26923148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fishs-x", "html_url": "https://github.com/fishs-x", "followers_url": "https://api.github.com/users/fishs-x/followers", "following_url": "https://api.github.com/users/fishs-x/following{/other_user}", "gists_url": "https://api.github.com/users/fishs-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/fishs-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fishs-x/subscriptions", "organizations_url": "https://api.github.com/users/fishs-x/orgs", "repos_url": "https://api.github.com/users/fishs-x/repos", "events_url": "https://api.github.com/users/fishs-x/events{/privacy}", "received_events_url": "https://api.github.com/users/fishs-x/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T01:22:36Z", "updated_at": "2020-07-10T04:39:58Z", "closed_at": "2020-06-21T13:01:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Body\r\nfrom pydantic import BaseModel\r\nfrom fastapi.requests import Request\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass Name(BaseModel):\r\n    name: str\r\n\r\n\r\n@app.middleware(\"http\")\r\nasync def add_process_time_header(request: Request, call_next):\r\n    body = await request.body()\r\n    print(f\"Body: {body}\")\r\n    response = await call_next(request)\r\n    return response\r\n\r\n\r\n@app.post('/')\r\ndef root(name: Name):\r\n    return {\"hello\": name.name}\r\n\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\n```bash\r\n\r\ncurl -X POST \"http://127.0.0.1:8000/\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d '{\"name\": 111}'\r\n\r\n* ERROR:    Error getting request body:\r\n```\r\n* Program blocked\r\n\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: macOS\r\n* FastAPI Version [e.g. 0.3.0]:  0.54.1\r\n* Python version: Python 3.7.4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1584", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1584/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1584/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1584/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1584", "id": 640128302, "node_id": "MDU6SXNzdWU2NDAxMjgzMDI=", "number": 1584, "title": "The search on documentation page keeps saying initializing search. Never searches really.", "user": {"login": "mundranaitik", "id": 36409924, "node_id": "MDQ6VXNlcjM2NDA5OTI0", "avatar_url": "https://avatars2.githubusercontent.com/u/36409924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mundranaitik", "html_url": "https://github.com/mundranaitik", "followers_url": "https://api.github.com/users/mundranaitik/followers", "following_url": "https://api.github.com/users/mundranaitik/following{/other_user}", "gists_url": "https://api.github.com/users/mundranaitik/gists{/gist_id}", "starred_url": "https://api.github.com/users/mundranaitik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mundranaitik/subscriptions", "organizations_url": "https://api.github.com/users/mundranaitik/orgs", "repos_url": "https://api.github.com/users/mundranaitik/repos", "events_url": "https://api.github.com/users/mundranaitik/events{/privacy}", "received_events_url": "https://api.github.com/users/mundranaitik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-17T04:19:15Z", "updated_at": "2020-06-17T19:12:36Z", "closed_at": "2020-06-17T12:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "[\r\n<img width=\"1531\" alt=\"Screenshot 2020-06-17 at 9 45 18 AM\" src=\"https://user-images.githubusercontent.com/36409924/84854453-50bb2a80-b07f-11ea-8609-92f2c44d4e8b.png\">\r\n](url)\r\nThe search on documentation page keeps saying initializing search. Never searches really. I have even tried clearing cache, cookies and changing network.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1582", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1582/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1582/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1582/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1582", "id": 639426806, "node_id": "MDU6SXNzdWU2Mzk0MjY4MDY=", "number": 1582, "title": "not able to post base64 image to post api", "user": {"login": "tiru1930", "id": 12211287, "node_id": "MDQ6VXNlcjEyMjExMjg3", "avatar_url": "https://avatars2.githubusercontent.com/u/12211287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiru1930", "html_url": "https://github.com/tiru1930", "followers_url": "https://api.github.com/users/tiru1930/followers", "following_url": "https://api.github.com/users/tiru1930/following{/other_user}", "gists_url": "https://api.github.com/users/tiru1930/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiru1930/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiru1930/subscriptions", "organizations_url": "https://api.github.com/users/tiru1930/orgs", "repos_url": "https://api.github.com/users/tiru1930/repos", "events_url": "https://api.github.com/users/tiru1930/events{/privacy}", "received_events_url": "https://api.github.com/users/tiru1930/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-16T07:10:48Z", "updated_at": "2020-06-18T08:02:15Z", "closed_at": "2020-06-18T08:02:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to fastapi, and I am trying to send encode image to fastapi post url and got below error\r\n\r\nINFO:     Application startup complete.\r\nINFO:     127.0.0.1:53472 - \"POST /imgresize/ HTTP/1.1\" 422 Unprocessable Entity\r\nINFO:     127.0.0.1:53478 - \"POST /imgresize/ HTTP/1.1\" 422 Unprocessable Entity\r\n\r\n`\r\n@app.post(\"/imgresize/\")\r\ndef imgresize(imagedata :str = Body(...)):\r\n    try:\r\n        img = io.BytesIO(base64.b64decode(imagedata))\r\n        pimg = Image.open(img).convert('RGB')\r\n        frame = cv2.cvtColor(np.array(pimg), cv2.COLOR_RGB2BGR)\r\n        font                   = cv2.FONT_HERSHEY_SIMPLEX\r\n        bottomLeftCornerOfText = (40,40)\r\n        fontScale              = 1\r\n        fontColor              = (255,255,255)\r\n        lineType               = 2\r\n\r\n        cv2.putText(frame,'processed in backend!', \r\n            bottomLeftCornerOfText, \r\n            font, \r\n            fontScale,\r\n            fontColor,\r\n            lineType)\r\n        \r\n        imgencode = cv2.imencode('.jpg', frame)[1]\r\n        stringData = base64.b64encode(imgencode).decode('utf-8')\r\n        return stringData\r\n\r\n    except Exception as e:\r\n        raise e \r\n\r\n`\r\n\r\n\r\n`\r\nimport base64\r\nimport requests\r\n\r\nwith open(\"lion.jpg\", \"rb\") as f:\r\n    encoded_string = base64.b64encode(f.read()).decode('utf-8')\r\n\r\n# print(type(encoded_string))\r\nprint(encoded_string)\r\nr = requests.post(\"http://127.0.0.1:8000/imgresize/\", data={'data':encoded_string})\r\n# print(r)\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1581", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1581/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1581/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1581/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1581", "id": 639000484, "node_id": "MDU6SXNzdWU2MzkwMDA0ODQ=", "number": 1581, "title": "Issue with Extending Openapi `prefix error`", "user": {"login": "Daggy1234", "id": 60603110, "node_id": "MDQ6VXNlcjYwNjAzMTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/60603110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Daggy1234", "html_url": "https://github.com/Daggy1234", "followers_url": "https://api.github.com/users/Daggy1234/followers", "following_url": "https://api.github.com/users/Daggy1234/following{/other_user}", "gists_url": "https://api.github.com/users/Daggy1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/Daggy1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Daggy1234/subscriptions", "organizations_url": "https://api.github.com/users/Daggy1234/orgs", "repos_url": "https://api.github.com/users/Daggy1234/repos", "events_url": "https://api.github.com/users/Daggy1234/events{/privacy}", "received_events_url": "https://api.github.com/users/Daggy1234/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-15T16:56:02Z", "updated_at": "2020-06-26T13:19:31Z", "closed_at": "2020-06-26T13:19:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "custom_openapi() missing 1 required positional argument: 'openapi_prefix'\r\n\r\nThis is the error I keep getting\r\n\r\n```python\r\ndef custom_openapi(openapi_prefix: str):\r\n    if app.openapi_schema:\r\n        return app.openapi_schema\r\n    openapi_schema = get_openapi(\r\n        title=\"Dagpi\",\r\n        version=\"1.0\",\r\n        description=\"The Number 1 Image generation api\",\r\n        routes=app.routes,\r\n        openapi_prefix=openapi_prefix,\r\n    )\r\n    openapi_schema[\"info\"][\"x-logo\"] = {\r\n        \"url\": \"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\"\r\n    }\r\n    app.openapi_schema = openapi_schema\r\n    return app.openapi_schema\r\n\r\n\r\napp.openapi = custom_openapi\r\n```\r\n\r\nI am not using a virtualenv\r\n\r\nThis is on windows 10 on a standard instance run with uvicorn.\r\nPython3.8\r\n![image](https://user-images.githubusercontent.com/60603110/84685140-62a1ae00-af57-11ea-8a72-5b36d7d0cc73.png)\r\n![image](https://user-images.githubusercontent.com/60603110/84685160-6af9e900-af57-11ea-9b66-f1e2ae2981d3.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1579", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1579/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1579/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1579/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1579", "id": 638906022, "node_id": "MDU6SXNzdWU2Mzg5MDYwMjI=", "number": 1579, "title": "Cannot get async to work asynchronous", "user": {"login": "gemerden", "id": 4526943, "node_id": "MDQ6VXNlcjQ1MjY5NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4526943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gemerden", "html_url": "https://github.com/gemerden", "followers_url": "https://api.github.com/users/gemerden/followers", "following_url": "https://api.github.com/users/gemerden/following{/other_user}", "gists_url": "https://api.github.com/users/gemerden/gists{/gist_id}", "starred_url": "https://api.github.com/users/gemerden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gemerden/subscriptions", "organizations_url": "https://api.github.com/users/gemerden/orgs", "repos_url": "https://api.github.com/users/gemerden/repos", "events_url": "https://api.github.com/users/gemerden/events{/privacy}", "received_events_url": "https://api.github.com/users/gemerden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-15T14:37:22Z", "updated_at": "2020-06-18T09:04:25Z", "closed_at": "2020-06-18T09:03:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to fastapi and relatively new to async, so this might be a little basic. I am trying to get calls to an endpoint to run asynchronously with the following code:\r\n```python\r\nimport asyncio\r\nimport time\r\n\r\nimport uvicorn\r\nimport fastapi\r\n\r\nprint(fastapi.__version__)\r\n\r\napp = fastapi.FastAPI()\r\n\r\ncounter = 5\r\nstart_time = time.perf_counter()\r\n\r\n@app.get(\"/\")\r\nasync def read_root():\r\n    global counter\r\n    counter -= 1\r\n    print('to sleep:', counter, 'at', round(time.perf_counter()-start_time, 3))\r\n    await asyncio.sleep(counter)\r\n    print('wake up :', counter, 'at', round(time.perf_counter()-start_time, 3))\r\n    return {\"Hello\": f\"World {counter}\"}\r\n\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(uvicorn.run(app, host=\"127.0.0.1\", port=8000, loop='asyncio', debug=False))\r\n```\r\n\r\nTo see the problem, i run this code and open the page in my browser 5 times in quick succession. Because the sleep time decreases with every call, i expect the browser to get the results in a different order and the counter to be printed out of order is well. I have tried a bunch of ways, including creating tasks, but no dice:\r\n```\r\nINFO:     Started server process [13400]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\r\nto sleep: 4 at 1.801\r\nwake up : 4 at 5.802\r\nINFO:     127.0.0.1:63760 - \"GET / HTTP/1.1\" 200 OK\r\nto sleep: 3 at 5.805\r\nwake up : 3 at 8.804\r\nINFO:     127.0.0.1:63760 - \"GET / HTTP/1.1\" 200 OK\r\nto sleep: 2 at 8.806\r\nwake up : 2 at 10.815\r\nINFO:     127.0.0.1:63760 - \"GET / HTTP/1.1\" 200 OK\r\nto sleep: 1 at 10.818\r\nwake up : 1 at 11.791\r\nINFO:     127.0.0.1:63760 - \"GET / HTTP/1.1\" 200 OK\r\nto sleep: 0 at 11.793\r\nwake up : 0 at 11.793\r\nINFO:     127.0.0.1:63760 - \"GET / HTTP/1.1\" 200 OK\r\n```\r\nSpend hours searching and trying to fix this, but no success. Does the endpoint function get scheduled as a task?\r\n\r\nOn: windows 10, python 3.7, fastapi 0.57.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1575", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1575/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1575/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1575/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1575", "id": 638724461, "node_id": "MDU6SXNzdWU2Mzg3MjQ0NjE=", "number": 1575, "title": "cannot process requests multiprocessing", "user": {"login": "luckcry", "id": 37785246, "node_id": "MDQ6VXNlcjM3Nzg1MjQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/37785246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luckcry", "html_url": "https://github.com/luckcry", "followers_url": "https://api.github.com/users/luckcry/followers", "following_url": "https://api.github.com/users/luckcry/following{/other_user}", "gists_url": "https://api.github.com/users/luckcry/gists{/gist_id}", "starred_url": "https://api.github.com/users/luckcry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luckcry/subscriptions", "organizations_url": "https://api.github.com/users/luckcry/orgs", "repos_url": "https://api.github.com/users/luckcry/repos", "events_url": "https://api.github.com/users/luckcry/events{/privacy}", "received_events_url": "https://api.github.com/users/luckcry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-15T10:11:12Z", "updated_at": "2020-06-16T06:03:05Z", "closed_at": "2020-06-16T06:02:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello:\r\n   I have trouble with the concurrent process requests in fastapi:\r\n#### My actions\r\nwhat i do in my api is sending a request to other api, processing the response, and returning the result after processed .\r\n\r\nI'm doing a test,in which i send 10 requests to my api by a threadpoolexecutor, it is expected to perfoming in concurrent way. But I find the app process the requests synchronized.\r\n\r\n#### Codes:\r\nstart command `uvicorn main:app --reload --workers 4`\r\n\r\nmain.app.py\r\n```\r\nasync def get_info(name: str):\r\n    response = {'keyword': name}\r\n    start = time.time()\r\n    print(f'start: {name}')    \r\n    return await search(strip(name))\r\n```\r\n\r\ntest.py\r\n```\r\nwith ThreadPoolExecutor(10) as executor:\r\n     future_to_url = {executor.submit(get, url):url for url in urls}\r\n     for future in as_completed(future_to_url):\r\n        url = future_to_url[future]\r\n        try:\r\n            data = future.result()\r\n            # time_cost = data.get(\"time_cost\", 'None')\r\n        except Exception as e:\r\n            logger.info(f'{e} url: {url}')\r\n        else:\r\n            # logging.info(f'result: {data}, url: {url}')\r\n            logger.info(f'success: {url}: {time_cost}')\r\n```\r\n\r\npython:3.7\r\n\r\nAppreciate a lot for any help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1570", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1570/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1570/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1570/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1570", "id": 638283768, "node_id": "MDU6SXNzdWU2MzgyODM3Njg=", "number": 1570, "title": "the enum representation ", "user": {"login": "ihakh", "id": 45719816, "node_id": "MDQ6VXNlcjQ1NzE5ODE2", "avatar_url": "https://avatars2.githubusercontent.com/u/45719816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ihakh", "html_url": "https://github.com/ihakh", "followers_url": "https://api.github.com/users/ihakh/followers", "following_url": "https://api.github.com/users/ihakh/following{/other_user}", "gists_url": "https://api.github.com/users/ihakh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ihakh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ihakh/subscriptions", "organizations_url": "https://api.github.com/users/ihakh/orgs", "repos_url": "https://api.github.com/users/ihakh/repos", "events_url": "https://api.github.com/users/ihakh/events{/privacy}", "received_events_url": "https://api.github.com/users/ihakh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-14T04:53:11Z", "updated_at": "2020-06-28T00:18:37Z", "closed_at": "2020-06-28T00:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### First check\r\n\r\n* [x] I added a very descriptive title to this issue.\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n* [x] I already read and followed all the tutorial in the docs and didn't find an answer.\r\n* [x] I already checked if it is not related to FastAPI but to [Pydantic](https://github.com/samuelcolvin/pydantic).\r\n* [ ] I already checked if it is not related to FastAPI but to [Swagger UI](https://github.com/swagger-api/swagger-ui).\r\n* [x] I already checked if it is not related to FastAPI but to [ReDoc](https://github.com/Redocly/redoc).\r\n* [x] After submitting this, I commit to one of:\r\n    * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.\r\n    * I already hit the \"watch\" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.\r\n    * Implement a Pull Request for a confirmed bug.\r\n\r\n<!-- \r\n\r\nI'm asking all this because answering questions and solving problems in GitHub issues consumes a lot of time. I end up not being able to add new features, fix bugs, review Pull Requests, etc. as fast as I wish because I have to spend too much time handling issues.\r\n\r\nAll that, on top of all the incredible help provided by a bunch of community members that give a lot of their time to come here and help others.\r\n\r\nThat's a lot of work they are doing, but if more FastAPI users came to help others like them just a little bit more, it would be much less effort for them (and you and me \ud83d\ude05).\r\n\r\n-->\r\n\r\n### Example\r\n\r\nHere's a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Body\r\nfrom enum import Enum\r\n\r\napp = FastAPI()\r\n\r\nclass Tag(str, Enum):\r\n    one = 'one'\r\n    two = 'two'\r\n\r\n@app.post(\"/\")\r\ndef read_root(tag: Tag = body(..., description='some description')):\r\n    return {\"Hello\": tag.value}\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\nI don't know this is the fastapi bug or swagger bug but:\r\nwhen we don't use the `Body` and use this as a query parameter in the swagger UI it shows a nice drop-down menu for tag choices\r\nbut as a body parameter it doesn't show\r\nwhere is the problem\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]: Linux\r\n* FastAPI Version [e.g. 0.3.0]: 0.55.1\r\n\r\n* Python version: Python 3.6.9 PyPy 7.3.1\r\n\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1568", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1568/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1568/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1568/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1568", "id": 638241727, "node_id": "MDU6SXNzdWU2MzgyNDE3Mjc=", "number": 1568, "title": "Suggestion of Making a CLI for FastApi", "user": {"login": "MedAmineFouzai", "id": 54685665, "node_id": "MDQ6VXNlcjU0Njg1NjY1", "avatar_url": "https://avatars2.githubusercontent.com/u/54685665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MedAmineFouzai", "html_url": "https://github.com/MedAmineFouzai", "followers_url": "https://api.github.com/users/MedAmineFouzai/followers", "following_url": "https://api.github.com/users/MedAmineFouzai/following{/other_user}", "gists_url": "https://api.github.com/users/MedAmineFouzai/gists{/gist_id}", "starred_url": "https://api.github.com/users/MedAmineFouzai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MedAmineFouzai/subscriptions", "organizations_url": "https://api.github.com/users/MedAmineFouzai/orgs", "repos_url": "https://api.github.com/users/MedAmineFouzai/repos", "events_url": "https://api.github.com/users/MedAmineFouzai/events{/privacy}", "received_events_url": "https://api.github.com/users/MedAmineFouzai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536359, "node_id": "MDU6TGFiZWwxMTU0NTM2MzU5", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-13T22:11:18Z", "updated_at": "2020-08-13T00:37:57Z", "closed_at": "2020-06-17T18:20:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "actually there is no issue i contacted mister Sebasti\u00e1n to propose for him an idea about making a CLI for the framework  to create a project structure  and managing our projects so that we developers have  start point that facilitate the hard work of making an architecture to the project therefore stays flexible for  expanding the project and adding more features and  automate the boring stuff like creating CRUD from the ORM that will make the project 1000% time faster than before .\r\nlocking dependencies by creating virtual environment add README file for documentation the project etc... \r\n\r\ni really hope some one help me making this become true because i dont know how to make a good cli but i managed to create something for tornado i called it  \" cycloneCLI \" for creating my own projects  then i found something called [torn](https://pypi.org/project/torn/) for tornado framework the problem is its a very very good structure and a starter project template that no one uses it it may be because the framework is starting to die but it helped me a lot to understand my needs better and work on different parts  of my project with more efficiency and good quality code so why we dont make fastapi better . and thank you\r\n.\r\n\"med amine fouzai aka John constantine\"  \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1567", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1567/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1567/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1567/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1567", "id": 638153573, "node_id": "MDU6SXNzdWU2MzgxNTM1NzM=", "number": 1567, "title": "TestClient takes 30s for every .get call on mac", "user": {"login": "charlesbaynham", "id": 4397637, "node_id": "MDQ6VXNlcjQzOTc2Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4397637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlesbaynham", "html_url": "https://github.com/charlesbaynham", "followers_url": "https://api.github.com/users/charlesbaynham/followers", "following_url": "https://api.github.com/users/charlesbaynham/following{/other_user}", "gists_url": "https://api.github.com/users/charlesbaynham/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlesbaynham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlesbaynham/subscriptions", "organizations_url": "https://api.github.com/users/charlesbaynham/orgs", "repos_url": "https://api.github.com/users/charlesbaynham/repos", "events_url": "https://api.github.com/users/charlesbaynham/events{/privacy}", "received_events_url": "https://api.github.com/users/charlesbaynham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-13T12:27:08Z", "updated_at": "2020-06-28T00:18:39Z", "closed_at": "2020-06-28T00:18:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Example\r\n\r\nSet up a brand new FastAPI venv:\r\n```\r\nvirtualenv venv\r\nsource venv/bin/activate\r\npip install fastapi[all] pytest\r\n```\r\n\r\nCopy/paste example from the testing docs at https://fastapi.tiangolo.com/tutorial/testing/:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom fastapi.testclient import TestClient\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\nasync def read_main():\r\n    return {\"msg\": \"Hello World\"}\r\n\r\n\r\nclient = TestClient(app)\r\n\r\n\r\ndef test_read_main():\r\n    response = client.get(\"/\")\r\n    assert response.status_code == 200\r\n    assert response.json() == {\"msg\": \"Hello World\"}\r\n```\r\n\r\nObserve that the tests take 30s to run. If you add another .get call, they take 60s. \r\n\r\n### Description\r\n\r\nOn Mac with new install of FastAPI, every call to `TestClient.get()` takes exactly 30s to complete. The response is correct. \r\n\r\n### Environment\r\n\r\n* OS: macOS\r\n* FastAPI Version: 0.56.1\r\n* Python version: \r\n\r\n* Python version: 3.6\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1559", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1559/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1559/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1559/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1559", "id": 637871734, "node_id": "MDU6SXNzdWU2Mzc4NzE3MzQ=", "number": 1559, "title": "Get internal route string from request", "user": {"login": "basepaws-tech", "id": 58443505, "node_id": "MDQ6VXNlcjU4NDQzNTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/58443505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepaws-tech", "html_url": "https://github.com/basepaws-tech", "followers_url": "https://api.github.com/users/basepaws-tech/followers", "following_url": "https://api.github.com/users/basepaws-tech/following{/other_user}", "gists_url": "https://api.github.com/users/basepaws-tech/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepaws-tech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepaws-tech/subscriptions", "organizations_url": "https://api.github.com/users/basepaws-tech/orgs", "repos_url": "https://api.github.com/users/basepaws-tech/repos", "events_url": "https://api.github.com/users/basepaws-tech/events{/privacy}", "received_events_url": "https://api.github.com/users/basepaws-tech/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-12T16:25:55Z", "updated_at": "2020-07-04T06:02:57Z", "closed_at": "2020-07-04T06:02:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to obtain the internal route string from a request? \r\n\r\nIf I have a route: \"/api/{name}\". And I request \"/api/myName\", I can get the url by request.url. But is it possible to the get the internal route string: \"/api/{name}\" somehow? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tiangolo/fastapi/issues/1558", "repository_url": "https://api.github.com/repos/tiangolo/fastapi", "labels_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1558/labels{/name}", "comments_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1558/comments", "events_url": "https://api.github.com/repos/tiangolo/fastapi/issues/1558/events", "html_url": "https://github.com/tiangolo/fastapi/issues/1558", "id": 637843022, "node_id": "MDU6SXNzdWU2Mzc4NDMwMjI=", "number": 1558, "title": "ModuleNotFoundError: No module named 'app'", "user": {"login": "anravi", "id": 8834244, "node_id": "MDQ6VXNlcjg4MzQyNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8834244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anravi", "html_url": "https://github.com/anravi", "followers_url": "https://api.github.com/users/anravi/followers", "following_url": "https://api.github.com/users/anravi/following{/other_user}", "gists_url": "https://api.github.com/users/anravi/gists{/gist_id}", "starred_url": "https://api.github.com/users/anravi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anravi/subscriptions", "organizations_url": "https://api.github.com/users/anravi/orgs", "repos_url": "https://api.github.com/users/anravi/repos", "events_url": "https://api.github.com/users/anravi/events{/privacy}", "received_events_url": "https://api.github.com/users/anravi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2109805297, "node_id": "MDU6TGFiZWwyMTA5ODA1Mjk3", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/answered", "name": "answered", "color": "f6f6f6", "default": false, "description": ""}, {"id": 1154536363, "node_id": "MDU6TGFiZWwxMTU0NTM2MzYz", "url": "https://api.github.com/repos/tiangolo/fastapi/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-12T15:45:21Z", "updated_at": "2020-06-24T00:17:14Z", "closed_at": "2020-06-24T00:17:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "````\r\nFROM <using centos8>\r\nUSER root\r\nRUN dnf -y update && \\\r\n    dnf -y install gcc && \\\r\n    dnf -y groupinstall \"Development Tools\" && \\\r\n    dnf -y install python3 && \\\r\n    dnf -y install python3-devel && \\\r\n    pip3 install fastapi && \\\r\n    pip3 install uvicorn\r\n\r\nEXPOSE 8080\r\nCOPY ./app /app\r\nCMD [\"uvicorn\", \"app.main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\"]\r\n````\r\n\r\n````\r\nfrom fastapi import FastAPI\r\napp = FastAPI()\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n\r\n@app.get(\"/items/{item_id}\")\r\ndef read_item(item_id: int, q: str = None):\r\n    return {\"item_id\": item_id, \"q\": q}\r\n````\r\n\r\n\r\nexception container log:\r\n\r\n````\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/uvicorn\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.6/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/uvicorn/main.py\", line 331, in main\r\n    run(**kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/uvicorn/main.py\", line 354, in run\r\n    server.run()\r\n  File \"/usr/local/lib/python3.6/site-packages/uvicorn/main.py\", line 382, in run\r\n    loop.run_until_complete(self.serve(sockets=sockets))\r\n  File \"uvloop/loop.pyx\", line 1456, in uvloop.loop.Loop.run_until_complete\r\n  File \"/usr/local/lib/python3.6/site-packages/uvicorn/main.py\", line 389, in serve\r\n    config.load()\r\n  File \"/usr/local/lib/python3.6/site-packages/uvicorn/config.py\", line 288, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"/usr/local/lib/python3.6/site-packages/uvicorn/importer.py\", line 23, in import_from_string\r\n    raise exc from None\r\n  File \"/usr/local/lib/python3.6/site-packages/uvicorn/importer.py\", line 20, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"/usr/lib64/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 941, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'app'\r\n````\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}