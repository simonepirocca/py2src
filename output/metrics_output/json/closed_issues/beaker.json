{"total_count": 48, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/bbangert/beaker/issues/188", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/188/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/188/events", "html_url": "https://github.com/bbangert/beaker/issues/188", "id": 588238971, "node_id": "MDU6SXNzdWU1ODgyMzg5NzE=", "number": 188, "title": "Nose won't be supported starting with Python 3.9/3.10", "user": {"login": "paolostivanin", "id": 1040943, "node_id": "MDQ6VXNlcjEwNDA5NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1040943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paolostivanin", "html_url": "https://github.com/paolostivanin", "followers_url": "https://api.github.com/users/paolostivanin/followers", "following_url": "https://api.github.com/users/paolostivanin/following{/other_user}", "gists_url": "https://api.github.com/users/paolostivanin/gists{/gist_id}", "starred_url": "https://api.github.com/users/paolostivanin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paolostivanin/subscriptions", "organizations_url": "https://api.github.com/users/paolostivanin/orgs", "repos_url": "https://api.github.com/users/paolostivanin/repos", "events_url": "https://api.github.com/users/paolostivanin/events{/privacy}", "received_events_url": "https://api.github.com/users/paolostivanin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-26T08:24:20Z", "updated_at": "2020-07-30T22:47:45Z", "closed_at": "2020-07-30T22:47:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "FYI, nose won't work with future versions of Python", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/182", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/182/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/182/events", "html_url": "https://github.com/bbangert/beaker/issues/182", "id": 525283623, "node_id": "MDU6SXNzdWU1MjUyODM2MjM=", "number": 182, "title": "Small typo in beaker/session.py", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-19T21:39:59Z", "updated_at": "2019-11-21T09:39:59Z", "closed_at": "2019-11-21T09:39:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Should read regenerate rather than regnerate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/173", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/173/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/173/events", "html_url": "https://github.com/bbangert/beaker/issues/173", "id": 444372426, "node_id": "MDU6SXNzdWU0NDQzNzI0MjY=", "number": 173, "title": "Session cookie expiration isn't locale-safe", "user": {"login": "lyrixderaven", "id": 295440, "node_id": "MDQ6VXNlcjI5NTQ0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/295440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lyrixderaven", "html_url": "https://github.com/lyrixderaven", "followers_url": "https://api.github.com/users/lyrixderaven/followers", "following_url": "https://api.github.com/users/lyrixderaven/following{/other_user}", "gists_url": "https://api.github.com/users/lyrixderaven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lyrixderaven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lyrixderaven/subscriptions", "organizations_url": "https://api.github.com/users/lyrixderaven/orgs", "repos_url": "https://api.github.com/users/lyrixderaven/repos", "events_url": "https://api.github.com/users/lyrixderaven/events{/privacy}", "received_events_url": "https://api.github.com/users/lyrixderaven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-15T10:57:54Z", "updated_at": "2019-05-27T14:32:47Z", "closed_at": "2019-05-23T13:48:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `_set_cookie_expires(self,expires)` functionality doesn't account for applications that have changed the globale locale:\r\n\r\n```\r\nself.cookie[self.key]['expires'] = expires_date.strftime(\"%a, %d-%b-%Y %H:%M:%S GMT\")\r\n```\r\n\r\nproduces output similar to `'Do, 16-Mai-2019 09:59:46 GMT'`  with a global locale setting of `de_DE.UTF-8`. **This is quite problematic, since most browsers will ignore the expiration setting then, leading to all kinds of uninentended consequences.** \r\n\r\nOne solution might be to use a thread-safe context manager to force the locale for the date conversion to be `en_US.UTF-8` or similar (see https://stackoverflow.com/a/24070673/846274 for an example that should work in this case).\r\n\r\nIs there any reason why this function should honor the global application locale at all?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/169", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/169/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/169/events", "html_url": "https://github.com/bbangert/beaker/issues/169", "id": 419196467, "node_id": "MDU6SXNzdWU0MTkxOTY0Njc=", "number": 169, "title": "how to conditional cache function result based on the result of the function", "user": {"login": "ohadperry", "id": 2236337, "node_id": "MDQ6VXNlcjIyMzYzMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2236337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadperry", "html_url": "https://github.com/ohadperry", "followers_url": "https://api.github.com/users/ohadperry/followers", "following_url": "https://api.github.com/users/ohadperry/following{/other_user}", "gists_url": "https://api.github.com/users/ohadperry/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadperry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadperry/subscriptions", "organizations_url": "https://api.github.com/users/ohadperry/orgs", "repos_url": "https://api.github.com/users/ohadperry/repos", "events_url": "https://api.github.com/users/ohadperry/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadperry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-10T15:13:06Z", "updated_at": "2019-03-10T21:08:11Z", "closed_at": "2019-03-10T20:44:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "wondering if there is a way to implement conditional cache for a function based on it's results\r\n\r\n```\r\ndef should_cache(function_result):\r\n     # if already cached, shouldn't get here \r\n     if function_result['status'] in FINAL_STEPS:\r\n          return True\r\n      \r\n@cache_region('long_term', 'get_something', should_cache)\r\ndef get_something(**kwargs):\r\n      ... something really expensive that should be cached if the status is in it's final steps \r\n\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/168", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/168/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/168/events", "html_url": "https://github.com/bbangert/beaker/issues/168", "id": 407651105, "node_id": "MDU6SXNzdWU0MDc2NTExMDU=", "number": 168, "title": "Test failures with Python3 and memcached", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-07T11:20:24Z", "updated_at": "2019-02-20T21:51:04Z", "closed_at": "2019-02-20T21:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n======================================================================\r\nFAIL: tests.test_memcached.test_cache_manager\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/usr/lib/python3.7/site-packages/nose/util.py\", line 620, in newfunc\r\n    return func(*arg, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/beaker/util.py\", line 64, in maybe\r\n    return fn(*args, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/tests/test_memcached.py\", line 243, in test_cache_manager\r\n    res = app.get('/')\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 335, in get\r\n    expect_errors=expect_errors)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 628, in do_request\r\n    res = req.get_response(app, catch_exc_info=True)\r\n  File \"/usr/lib/python3.7/site-packages/webob/request.py\", line 1310, in send\r\n    application, catch_exc_info=True)\r\n  File \"/usr/lib/python3.7/site-packages/webob/request.py\", line 1281, in call_application\r\n    output.extend(app_iter)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/lint.py\", line 302, in next\r\n    % (self.iterator, binary_type, v))\r\nAssertionError: Iterator <generator object cache_manager_app at 0x7fb1c6dc5d68> returned a non-<class 'bytes'> object: 'test_key is: test value\\n'\r\n\r\n-------------------- >> begin captured logging << --------------------\r\nbeaker.container: DEBUG: set_value stored time 1549538065.74513 expire time None\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nFAIL: tests.test_memcached.test_increment\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/usr/lib/python3.7/site-packages/nose/util.py\", line 620, in newfunc\r\n    return func(*arg, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/beaker/util.py\", line 64, in maybe\r\n    return fn(*args, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/tests/test_memcached.py\", line 225, in test_increment\r\n    res = app.get('/', extra_environ={'beaker.clear':True})\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 335, in get\r\n    expect_errors=expect_errors)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 641, in do_request\r\n    res.body\r\n  File \"/usr/lib/python3.7/site-packages/webob/response.py\", line 521, in _body__get\r\n    body = b''.join(app_iter)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/lint.py\", line 302, in next\r\n    % (self.iterator, binary_type, v))\r\nAssertionError: Iterator <list_iterator object at 0x7fb1c6d219b0> returned a non-<class 'bytes'> object: 'The current value is: 1'\r\n\r\n-------------------- >> begin captured logging << --------------------\r\nbeaker.container: DEBUG: set_value stored time 1549538065.8175192 expire time None\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n======================================================================\r\nFAIL: tests.test_memcached.test_session\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/usr/lib/python3.7/site-packages/nose/util.py\", line 620, in newfunc\r\n    return func(*arg, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/beaker/util.py\", line 64, in maybe\r\n    return fn(*args, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/tests/test_memcached.py\", line 117, in test_session\r\n    res = app.get('/')\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 335, in get\r\n    expect_errors=expect_errors)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 641, in do_request\r\n    res.body\r\n  File \"/usr/lib/python3.7/site-packages/webob/response.py\", line 521, in _body__get\r\n    body = b''.join(app_iter)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/lint.py\", line 302, in next\r\n    % (self.iterator, binary_type, v))\r\nAssertionError: Iterator <list_iterator object at 0x7fb1c6dd89e8> returned a non-<class 'bytes'> object: 'The current value is: 1, session id is 3d357f62c7a043169768678dba9655d5'\r\n\r\n\r\n======================================================================\r\nFAIL: tests.test_memcached.test_session_invalid\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/usr/lib/python3.7/site-packages/nose/util.py\", line 620, in newfunc\r\n    return func(*arg, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/beaker/util.py\", line 64, in maybe\r\n    return fn(*args, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/tests/test_memcached.py\", line 128, in test_session_invalid\r\n    res = app.get('/invalid', headers=dict(Cookie='beaker.session.id=df7324911e246b70b5781c3c58328442; Path=/'))\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 335, in get\r\n    expect_errors=expect_errors)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 641, in do_request\r\n    res.body\r\n  File \"/usr/lib/python3.7/site-packages/webob/response.py\", line 521, in _body__get\r\n    body = b''.join(app_iter)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/lint.py\", line 302, in next\r\n    % (self.iterator, binary_type, v))\r\nAssertionError: Iterator <list_iterator object at 0x7fb1c6deccf8> returned a non-<class 'bytes'> object: 'The current value is: 2, session id is df7324911e246b70b5781c3c58328442'\r\n\r\n\r\n======================================================================\r\nFAIL: tests.test_memcached.test_store_none\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/usr/lib/python3.7/site-packages/nose/util.py\", line 620, in newfunc\r\n    return func(*arg, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/beaker/util.py\", line 64, in maybe\r\n    return fn(*args, **kw)\r\n  File \"/build/python-beaker/src/beaker-1.10.0/tests/test_memcached.py\", line 250, in test_store_none\r\n    res = app.get('/', extra_environ={'beaker.clear':True})\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 335, in get\r\n    expect_errors=expect_errors)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/app.py\", line 641, in do_request\r\n    res.body\r\n  File \"/usr/lib/python3.7/site-packages/webob/response.py\", line 521, in _body__get\r\n    body = b''.join(app_iter)\r\n  File \"/usr/lib/python3.7/site-packages/webtest/lint.py\", line 302, in next\r\n    % (self.iterator, binary_type, v))\r\nAssertionError: Iterator <list_iterator object at 0x7fb1c6decb00> returned a non-<class 'bytes'> object: 'The current value is: 10'\r\n\r\n-------------------- >> begin captured logging << --------------------\r\nbeaker.container: DEBUG: set_value stored time 1549538065.8268256 expire time None\r\n--------------------- >> end captured logging << ---------------------\r\n\r\n----------------------------------------------------------------------\r\nRan 203 tests in 157.720s\r\n\r\nFAILED (failures=5)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/167", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/167/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/167/events", "html_url": "https://github.com/bbangert/beaker/issues/167", "id": 390739026, "node_id": "MDU6SXNzdWUzOTA3MzkwMjY=", "number": 167, "title": "Samesite flag not set", "user": {"login": "tvlieg", "id": 13644613, "node_id": "MDQ6VXNlcjEzNjQ0NjEz", "avatar_url": "https://avatars0.githubusercontent.com/u/13644613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvlieg", "html_url": "https://github.com/tvlieg", "followers_url": "https://api.github.com/users/tvlieg/followers", "following_url": "https://api.github.com/users/tvlieg/following{/other_user}", "gists_url": "https://api.github.com/users/tvlieg/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvlieg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvlieg/subscriptions", "organizations_url": "https://api.github.com/users/tvlieg/orgs", "repos_url": "https://api.github.com/users/tvlieg/repos", "events_url": "https://api.github.com/users/tvlieg/events{/privacy}", "received_events_url": "https://api.github.com/users/tvlieg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-13T15:48:08Z", "updated_at": "2019-02-21T19:45:14Z", "closed_at": "2019-02-21T14:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The samesite flag is not properly set upon creation of a session.\r\n```\r\nsession_opts = {\r\n    ...\r\n    'session.key': 'oncall-auth',\r\n    'session.samesite': 'Lax',\r\n    ...\r\n}\r\napplication = SessionMiddleware(application, session_opts)\r\n```\r\nThis results in this cookie:\r\n```\r\noncall-auth=<cookie>; httponly; Path=/\r\n```\r\nAfter logout (cookie delete) the flag _is_ set:\r\n```\r\noncall-auth=<cookie>; expires=Wed, 13-Dec-2017 15:20:35 GMT; httponly; Path=/; SameSite=Lax\r\n```\r\nThis might be caused, because method `_set_cookie_values` (in `session.py`) is only called in `_update_cookie_out` and `_delete_cookie`.\r\nThis but renders the samesite cookie useless, so it would be nice if this could be fixed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/158", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/158/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/158/events", "html_url": "https://github.com/bbangert/beaker/issues/158", "id": 322806174, "node_id": "MDU6SXNzdWUzMjI4MDYxNzQ=", "number": 158, "title": "Set SameSite option on session cookies", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-14T13:00:14Z", "updated_at": "2018-05-24T21:03:21Z", "closed_at": "2018-05-24T21:03:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Documented here: https://blog.mozilla.org/security/2018/04/24/same-site-cookies-in-firefox-60/\r\n\r\nCurrently supported in Firefox and Chromium; it provides strong defense in depth against CSRF.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/154", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/154/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/154/events", "html_url": "https://github.com/bbangert/beaker/issues/154", "id": 316384934, "node_id": "MDU6SXNzdWUzMTYzODQ5MzQ=", "number": 154, "title": "Encryption libraries incorrect", "user": {"login": "nwalsh1995", "id": 1879632, "node_id": "MDQ6VXNlcjE4Nzk2MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1879632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwalsh1995", "html_url": "https://github.com/nwalsh1995", "followers_url": "https://api.github.com/users/nwalsh1995/followers", "following_url": "https://api.github.com/users/nwalsh1995/following{/other_user}", "gists_url": "https://api.github.com/users/nwalsh1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwalsh1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwalsh1995/subscriptions", "organizations_url": "https://api.github.com/users/nwalsh1995/orgs", "repos_url": "https://api.github.com/users/nwalsh1995/repos", "events_url": "https://api.github.com/users/nwalsh1995/events{/privacy}", "received_events_url": "https://api.github.com/users/nwalsh1995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-20T19:28:40Z", "updated_at": "2018-04-24T19:58:53Z", "closed_at": "2018-04-24T19:58:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the docs:\r\n```\r\nOn CPython (the regular Python), one of the following libraries is required:\r\n\r\nThe python-nss library\r\nThe pycryptopp library\r\nThe cryptography library\r\nThe PyCrypto library\r\n```\r\n\r\nUsing python 3.6, I tried to use the `cryptography` library but it was throwing this error:\r\n```\r\n  File \"/Users/aaaa/venv/lib/python3.6/site-packages/beaker/session.py\", line 273, in _encrypt_data\r\n    return nonce + b64encode(crypto.aesEncrypt(data, encrypt_key))\r\nAttributeError: module 'beaker.crypto' has no attribute 'aesEncrypt'\r\n```\r\n\r\nLooking into the code there are the following statements from `/beaker/crypto/__init__.py`:\r\n```python\r\ntry:\r\n        from beaker.crypto.nsscrypto import getKeyLength, aesEncrypt, aesDecrypt\r\n        keyLength = getKeyLength()\r\n\r\nexcept ImportError:\r\n        try:\r\n            from beaker.crypto.pycrypto import getKeyLength, aesEncrypt, aesDecrypt\r\n            keyLength = getKeyLength()\r\n        except ImportError:\r\n            pass\r\n```\r\n\r\nNote that pycrypto attempts to use pycryptopp and pycrypto. So it seems like only the `cryptography` library is not supported. I haven't traced through the rest of the code to determine if it was being used somewhere else, but switching from the cryptography library to pycrypto fixed my issue.\r\n\r\nI would make the changes for the docs but I am unsure if the `cryptography` library would be used anywhere thats supported, so I have created this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/150", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/150/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/150/events", "html_url": "https://github.com/bbangert/beaker/issues/150", "id": 309756163, "node_id": "MDU6SXNzdWUzMDk3NTYxNjM=", "number": 150, "title": "Incompatible with python 3.7", "user": {"login": "berolinux", "id": 778765, "node_id": "MDQ6VXNlcjc3ODc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/778765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berolinux", "html_url": "https://github.com/berolinux", "followers_url": "https://api.github.com/users/berolinux/followers", "following_url": "https://api.github.com/users/berolinux/following{/other_user}", "gists_url": "https://api.github.com/users/berolinux/gists{/gist_id}", "starred_url": "https://api.github.com/users/berolinux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berolinux/subscriptions", "organizations_url": "https://api.github.com/users/berolinux/orgs", "repos_url": "https://api.github.com/users/berolinux/repos", "events_url": "https://api.github.com/users/berolinux/events{/privacy}", "received_events_url": "https://api.github.com/users/berolinux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-29T13:32:52Z", "updated_at": "2018-03-29T21:00:29Z", "closed_at": "2018-03-29T21:00:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Beaker is incompatible with python 3.7 because it uses \"async\" (now a keyword) as variable name (beaker/synchronization.py, search for \"self.async = 0\").\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/146", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/146/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/146/events", "html_url": "https://github.com/bbangert/beaker/issues/146", "id": 296224281, "node_id": "MDU6SXNzdWUyOTYyMjQyODE=", "number": 146, "title": "ext.Database doesn't close database connections on load", "user": {"login": "chrismcmacken", "id": 445683, "node_id": "MDQ6VXNlcjQ0NTY4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/445683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrismcmacken", "html_url": "https://github.com/chrismcmacken", "followers_url": "https://api.github.com/users/chrismcmacken/followers", "following_url": "https://api.github.com/users/chrismcmacken/following{/other_user}", "gists_url": "https://api.github.com/users/chrismcmacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrismcmacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrismcmacken/subscriptions", "organizations_url": "https://api.github.com/users/chrismcmacken/orgs", "repos_url": "https://api.github.com/users/chrismcmacken/repos", "events_url": "https://api.github.com/users/chrismcmacken/events{/privacy}", "received_events_url": "https://api.github.com/users/chrismcmacken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-11T20:51:05Z", "updated_at": "2018-02-15T15:55:40Z", "closed_at": "2018-02-15T13:07:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using `pyramid` and  `pyramid_beaker` with python 3.6 and the below configuration. \r\n\r\n```\r\nsession.type = ext:database\r\nsession.auto = True\r\nsession.key = fake_local\r\nsession.data_dir = %(here)s/data/sessions/data\r\nsession.secret = some_secret\r\nsession.cookie_expires=true\r\nsession.url=mysql+pymysql://user:pass@127.0.0.1:3406/db\r\nsession.timeout=86400\r\n#session.lock_dir=/tmp/cache/lock\r\nsession.httponly = True\r\nsession.secure = True\r\nsession.domain = 'example.com'\r\nsession.path = '/'\r\nsession.sa.pool_size = 10\r\nsession.sa.max_overflow=10\r\n```\r\n\r\nI initialize the session factory via the recommended `config.include('pyramid_beaker')`. After loading the page a few times SQLAlchemy is no longer able to connect to the database and throws the below exception because connections are not being closed. \r\n\r\n`sqlalchemy.exc.TimeoutError: QueuePool limit of size 10 overflow 10 reached, connection timed out, timeout 30 (Background on this error at: http://sqlalche.me/e/3o7r)`\r\n\r\nIf I switch to using `session.type = file` the problem goes away. After some debugging I tracked it to the `do_open()` method in `beaker.ext.DatabaseNamespaceManager`. It appears that `sqlalchemy.select().execute().fetchone()` doesn't close the database connection in all cases.  \r\n\r\nI have submitted PR #147 with a patch for the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/143", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/143/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/143/events", "html_url": "https://github.com/bbangert/beaker/issues/143", "id": 280271151, "node_id": "MDU6SXNzdWUyODAyNzExNTE=", "number": 143, "title": "Timeframe for v0.9.1 release", "user": {"login": "tedivm", "id": 121709, "node_id": "MDQ6VXNlcjEyMTcwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/121709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedivm", "html_url": "https://github.com/tedivm", "followers_url": "https://api.github.com/users/tedivm/followers", "following_url": "https://api.github.com/users/tedivm/following{/other_user}", "gists_url": "https://api.github.com/users/tedivm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedivm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedivm/subscriptions", "organizations_url": "https://api.github.com/users/tedivm/orgs", "repos_url": "https://api.github.com/users/tedivm/repos", "events_url": "https://api.github.com/users/tedivm/events{/privacy}", "received_events_url": "https://api.github.com/users/tedivm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-07T20:39:11Z", "updated_at": "2018-04-09T20:15:58Z", "closed_at": "2018-04-09T20:15:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now that the PRs to reduce corruption on the filesystem have been merged is there any chance we can get a new release soon?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/141", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/141/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/141/events", "html_url": "https://github.com/bbangert/beaker/issues/141", "id": 278897008, "node_id": "MDU6SXNzdWUyNzg4OTcwMDg=", "number": 141, "title": "Installer (and thus travis tests) broken with python3.3", "user": {"login": "tedivm", "id": 121709, "node_id": "MDQ6VXNlcjEyMTcwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/121709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedivm", "html_url": "https://github.com/tedivm", "followers_url": "https://api.github.com/users/tedivm/followers", "following_url": "https://api.github.com/users/tedivm/following{/other_user}", "gists_url": "https://api.github.com/users/tedivm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedivm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedivm/subscriptions", "organizations_url": "https://api.github.com/users/tedivm/orgs", "repos_url": "https://api.github.com/users/tedivm/repos", "events_url": "https://api.github.com/users/tedivm/events{/privacy}", "received_events_url": "https://api.github.com/users/tedivm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-04T07:27:11Z", "updated_at": "2017-12-05T22:31:10Z", "closed_at": "2017-12-05T22:27:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like `cryptography` is no longer supporting python 3.3, which in turn breaks this project's continuous integration setup.\r\n\r\n```\r\nCollecting cryptography (from Beaker==1.9.0)\r\n  Downloading cryptography-2.1.4.tar.gz (441kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 450kB 3.5MB/s \r\n    Complete output from command python setup.py egg_info:\r\n    error in cryptography setup command: Invalid environment marker: platform_python_implementation != 'PyPy'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/132", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/132/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/132/events", "html_url": "https://github.com/bbangert/beaker/issues/132", "id": 234480323, "node_id": "MDU6SXNzdWUyMzQ0ODAzMjM=", "number": 132, "title": "New release?", "user": {"login": "schlenk", "id": 979026, "node_id": "MDQ6VXNlcjk3OTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/979026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlenk", "html_url": "https://github.com/schlenk", "followers_url": "https://api.github.com/users/schlenk/followers", "following_url": "https://api.github.com/users/schlenk/following{/other_user}", "gists_url": "https://api.github.com/users/schlenk/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlenk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlenk/subscriptions", "organizations_url": "https://api.github.com/users/schlenk/orgs", "repos_url": "https://api.github.com/users/schlenk/repos", "events_url": "https://api.github.com/users/schlenk/events{/privacy}", "received_events_url": "https://api.github.com/users/schlenk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-08T10:22:34Z", "updated_at": "2017-06-18T21:35:01Z", "closed_at": "2017-06-18T21:35:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Could you please cut a new release tag/version to appear on pypi?\r\n\r\nMostly to get rid of the unmaintained pycrypto dependency.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/126", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/126/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/126/events", "html_url": "https://github.com/bbangert/beaker/issues/126", "id": 224018168, "node_id": "MDU6SXNzdWUyMjQwMTgxNjg=", "number": 126, "title": "MySQL Server has Gone away", "user": {"login": "EndenDragon", "id": 16626766, "node_id": "MDQ6VXNlcjE2NjI2NzY2", "avatar_url": "https://avatars1.githubusercontent.com/u/16626766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EndenDragon", "html_url": "https://github.com/EndenDragon", "followers_url": "https://api.github.com/users/EndenDragon/followers", "following_url": "https://api.github.com/users/EndenDragon/following{/other_user}", "gists_url": "https://api.github.com/users/EndenDragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/EndenDragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EndenDragon/subscriptions", "organizations_url": "https://api.github.com/users/EndenDragon/orgs", "repos_url": "https://api.github.com/users/EndenDragon/repos", "events_url": "https://api.github.com/users/EndenDragon/events{/privacy}", "received_events_url": "https://api.github.com/users/EndenDragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-25T04:30:11Z", "updated_at": "2017-04-26T20:30:32Z", "closed_at": "2017-04-26T20:30:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been getting these~\r\n`OperationalError: (_mysql_exceptions.OperationalError) (2006, 'MySQL server has gone away')`\r\n\r\nIs there a flag to set when to recycle mysql connections? I know that you can do this with Flask SQLAlchemy with `app.config['SQLALCHEMY_POOL_RECYCLE']`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/120", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/120/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/120/events", "html_url": "https://github.com/bbangert/beaker/issues/120", "id": 206778836, "node_id": "MDU6SXNzdWUyMDY3Nzg4MzY=", "number": 120, "title": "nss crypto module not mentioned in the docs, but used as default backend", "user": {"login": "schlenk", "id": 979026, "node_id": "MDQ6VXNlcjk3OTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/979026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlenk", "html_url": "https://github.com/schlenk", "followers_url": "https://api.github.com/users/schlenk/followers", "following_url": "https://api.github.com/users/schlenk/following{/other_user}", "gists_url": "https://api.github.com/users/schlenk/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlenk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlenk/subscriptions", "organizations_url": "https://api.github.com/users/schlenk/orgs", "repos_url": "https://api.github.com/users/schlenk/repos", "events_url": "https://api.github.com/users/schlenk/events{/privacy}", "received_events_url": "https://api.github.com/users/schlenk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-10T11:58:37Z", "updated_at": "2017-02-13T21:19:10Z", "closed_at": "2017-02-13T21:19:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Mozilla nss crypto module (python-nss, https://mozilla.github.io/python-nss-docs/ ) is used as the first choice in the `crypto/__init__.py` code but not mentioned at all in the documentation.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/119", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/119/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/119/events", "html_url": "https://github.com/bbangert/beaker/issues/119", "id": 206775947, "node_id": "MDU6SXNzdWUyMDY3NzU5NDc=", "number": 119, "title": "jcecrypto import is probably broken", "user": {"login": "schlenk", "id": 979026, "node_id": "MDQ6VXNlcjk3OTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/979026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlenk", "html_url": "https://github.com/schlenk", "followers_url": "https://api.github.com/users/schlenk/followers", "following_url": "https://api.github.com/users/schlenk/following{/other_user}", "gists_url": "https://api.github.com/users/schlenk/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlenk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlenk/subscriptions", "organizations_url": "https://api.github.com/users/schlenk/orgs", "repos_url": "https://api.github.com/users/schlenk/repos", "events_url": "https://api.github.com/users/schlenk/events{/privacy}", "received_events_url": "https://api.github.com/users/schlenk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-10T11:43:12Z", "updated_at": "2017-02-13T21:19:22Z", "closed_at": "2017-02-13T21:19:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code in `crypto/__init__.py` just imports the `aesEncrypt` name, but not the `aesDecrypt` name.\r\n\r\n`from beaker.crypto.jcecrypto import getKeyLength, aesEncrypt`\r\n\r\nUnless JYTHON does something really weird under the hood, this will fail when trying to decode a cookie, when `crypto.aesDecrypt` gets called in `session.py`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/112", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/112/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/112/events", "html_url": "https://github.com/bbangert/beaker/issues/112", "id": 189104983, "node_id": "MDU6SXNzdWUxODkxMDQ5ODM=", "number": 112, "title": "Setting `session.domain` loses `secure`, `httponly` and `path` cookie attributes", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-14T12:51:48Z", "updated_at": "2017-06-17T20:54:29Z", "closed_at": "2017-06-17T20:54:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you set `session.domain` in a request that has an existing session (i.e. one where `SessionMiddleware` found an existing `Cookie` header with a session cookie), Beaker emits a `Set-Cookie` header that includes `Domain=` but forgets all about `HttpOnly`, `Secure` and `Path` attributes.\r\n\r\n~~Here's a failing test case:~~ A failing test case is available in pull request #113.\r\n<details>\r\n\r\n```diff\r\ndiff --git a/tests/test_cookie_domain_only.py b/tests/test_cookie_domain_only.py\r\nindex 96d4241..4c510f4 100644\r\n--- a/tests/test_cookie_domain_only.py\r\n+++ b/tests/test_cookie_domain_only.py\r\n@@ -47,6 +47,22 @@ def test_increment():\r\n     assert 'current value is: 2' in res\r\n \r\n \r\n+def test_cookie_attributes_are_preserved():\r\n+    options = {'session.type': 'memory',\r\n+               'session.httponly': True,\r\n+               'session.secure': True,\r\n+               'session.cookie_path': '/app',\r\n+               'session.cookie_domain': 'localhost'}\r\n+    app = TestApp(SessionMiddleware(simple_app, **options))\r\n+    res = app.get('/app', extra_environ=dict(\r\n+        HTTP_COOKIE='beaker.session.id=oldsessid', domain='.hoop.com'))\r\n+    cookie = res.headers['Set-Cookie']\r\n+    assert 'Domain=.hoop.com' in cookie\r\n+    assert 'Path=/app' in cookie\r\n+    assert 'secure' in cookie\r\n+    assert 'httponly' in cookie\r\n+\r\n+\r\n if __name__ == '__main__':\r\n     from paste import httpserver\r\n     wsgi_app = SessionMiddleware(simple_app, {})\r\n```\r\n\r\n</details>\r\n\r\n----\r\n\r\nMy attempt of fixing this is in PR #114.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/107", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/107/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/107/events", "html_url": "https://github.com/bbangert/beaker/issues/107", "id": 165419238, "node_id": "MDU6SXNzdWUxNjU0MTkyMzg=", "number": 107, "title": "Beaker's mongodb extension", "user": {"login": "avelino", "id": 31996, "node_id": "MDQ6VXNlcjMxOTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/31996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avelino", "html_url": "https://github.com/avelino", "followers_url": "https://api.github.com/users/avelino/followers", "following_url": "https://api.github.com/users/avelino/following{/other_user}", "gists_url": "https://api.github.com/users/avelino/gists{/gist_id}", "starred_url": "https://api.github.com/users/avelino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avelino/subscriptions", "organizations_url": "https://api.github.com/users/avelino/orgs", "repos_url": "https://api.github.com/users/avelino/repos", "events_url": "https://api.github.com/users/avelino/events{/privacy}", "received_events_url": "https://api.github.com/users/avelino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-13T20:54:41Z", "updated_at": "2017-06-18T20:25:58Z", "closed_at": "2017-06-18T20:25:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no roadmap to support the mongodb?\n\nWe can use mongoengine to simplify the work, as is made of SQLAlchemy\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/98", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/98/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/98/events", "html_url": "https://github.com/bbangert/beaker/issues/98", "id": 146399130, "node_id": "MDU6SXNzdWUxNDYzOTkxMzA=", "number": 98, "title": "How do I pass a parameter while caching", "user": {"login": "JoshuaReneDalley", "id": 13647140, "node_id": "MDQ6VXNlcjEzNjQ3MTQw", "avatar_url": "https://avatars2.githubusercontent.com/u/13647140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshuaReneDalley", "html_url": "https://github.com/JoshuaReneDalley", "followers_url": "https://api.github.com/users/JoshuaReneDalley/followers", "following_url": "https://api.github.com/users/JoshuaReneDalley/following{/other_user}", "gists_url": "https://api.github.com/users/JoshuaReneDalley/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshuaReneDalley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshuaReneDalley/subscriptions", "organizations_url": "https://api.github.com/users/JoshuaReneDalley/orgs", "repos_url": "https://api.github.com/users/JoshuaReneDalley/repos", "events_url": "https://api.github.com/users/JoshuaReneDalley/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshuaReneDalley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-06T18:39:01Z", "updated_at": "2016-04-07T11:18:58Z", "closed_at": "2016-04-07T11:18:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would I go at passing `variable_a` into `get_results`?\n\n`results = tmpl_cache.get(key=search_param, createfunc=get_results)`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/93", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/93/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/93/events", "html_url": "https://github.com/bbangert/beaker/issues/93", "id": 128277670, "node_id": "MDU6SXNzdWUxMjgyNzc2NzA=", "number": 93, "title": "beaker/crypto/pbkdf2.py fails to reproduce Django's copyright notice", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amol-", "id": 601423, "node_id": "MDQ6VXNlcjYwMTQyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/601423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amol-", "html_url": "https://github.com/amol-", "followers_url": "https://api.github.com/users/amol-/followers", "following_url": "https://api.github.com/users/amol-/following{/other_user}", "gists_url": "https://api.github.com/users/amol-/gists{/gist_id}", "starred_url": "https://api.github.com/users/amol-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amol-/subscriptions", "organizations_url": "https://api.github.com/users/amol-/orgs", "repos_url": "https://api.github.com/users/amol-/repos", "events_url": "https://api.github.com/users/amol-/events{/privacy}", "received_events_url": "https://api.github.com/users/amol-/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amol-", "id": 601423, "node_id": "MDQ6VXNlcjYwMTQyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/601423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amol-", "html_url": "https://github.com/amol-", "followers_url": "https://api.github.com/users/amol-/followers", "following_url": "https://api.github.com/users/amol-/following{/other_user}", "gists_url": "https://api.github.com/users/amol-/gists{/gist_id}", "starred_url": "https://api.github.com/users/amol-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amol-/subscriptions", "organizations_url": "https://api.github.com/users/amol-/orgs", "repos_url": "https://api.github.com/users/amol-/repos", "events_url": "https://api.github.com/users/amol-/events{/privacy}", "received_events_url": "https://api.github.com/users/amol-/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-01-23T00:34:48Z", "updated_at": "2016-01-23T10:56:10Z", "closed_at": "2016-01-23T10:56:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code in https://github.com/bbangert/beaker/blob/master/beaker/crypto/pbkdf2.py is a direct copy of Django's: https://github.com/django/django/blob/master/django/utils/crypto.py#L108-L191\n\nPer Django's license, the copyright for it must be reproduced.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/90", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/90/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/90/events", "html_url": "https://github.com/bbangert/beaker/issues/90", "id": 119394717, "node_id": "MDU6SXNzdWUxMTkzOTQ3MTc=", "number": 90, "title": "Cache decorator does not work with python3.5 type hints.", "user": {"login": "nicholasRutherford", "id": 4751193, "node_id": "MDQ6VXNlcjQ3NTExOTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4751193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasRutherford", "html_url": "https://github.com/nicholasRutherford", "followers_url": "https://api.github.com/users/nicholasRutherford/followers", "following_url": "https://api.github.com/users/nicholasRutherford/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasRutherford/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasRutherford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasRutherford/subscriptions", "organizations_url": "https://api.github.com/users/nicholasRutherford/orgs", "repos_url": "https://api.github.com/users/nicholasRutherford/repos", "events_url": "https://api.github.com/users/nicholasRutherford/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasRutherford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-29T23:07:16Z", "updated_at": "2016-01-25T15:02:02Z", "closed_at": "2016-01-25T15:02:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello awesome beaker people (great library by the way)! I was trying out the new type hints feature in python3.5 and I am getting errors when using the cache decorator. Here is an example:\n\n``` python\nfrom beaker.cache import CacheManager\nfrom beaker.util import parse_cache_config_options\n\ncache_opts = {\n    'cache.type': 'file',\n    'cache.data_dir': '/tmp/cache/data',\n    'cache.lock_dir': '/tmp/cache/lock'\n}\n\ncache = CacheManager(**parse_cache_config_options(cache_opts))\n\n\n@cache.cache(expire=60)\ndef test_fn(num: int) -> int:\n    return num + 1\n\nresults = test_fn(1)\n```\n\nWith the corresponding stack trace:\n\n```\nTraceback (most recent call last):\n  File \"/home/nick/beakerTest.py\", line 14, in <module>\n    def test_fn(num: int) -> int:\n  File \"/home/nick/.virtualenvs/beakerTest/lib/python3.5/site-packages/beaker/cache.py\", line 547, in decorate\n    skip_self = util.has_self_arg(func)\n  File \"/home/nick/.virtualenvs/beakerTest/lib/python3.5/site-packages/beaker/util.py\", line 90, in has_self_arg\n    args = inspect.getargspec(func)\n  File \"/usr/lib/python3.5/inspect.py\", line 1044, in getargspec\n    raise ValueError(\"Function has keyword-only arguments or annotations\"\nValueError: Function has keyword-only arguments or annotations, use getfullargspec() API which can support them\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/89", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/89/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/89/events", "html_url": "https://github.com/bbangert/beaker/issues/89", "id": 108153013, "node_id": "MDU6SXNzdWUxMDgxNTMwMTM=", "number": 89, "title": "Project URL used on GitHub Project is Invalid", "user": {"login": "rsyring", "id": 109467, "node_id": "MDQ6VXNlcjEwOTQ2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/109467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsyring", "html_url": "https://github.com/rsyring", "followers_url": "https://api.github.com/users/rsyring/followers", "following_url": "https://api.github.com/users/rsyring/following{/other_user}", "gists_url": "https://api.github.com/users/rsyring/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsyring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsyring/subscriptions", "organizations_url": "https://api.github.com/users/rsyring/orgs", "repos_url": "https://api.github.com/users/rsyring/repos", "events_url": "https://api.github.com/users/rsyring/events{/privacy}", "received_events_url": "https://api.github.com/users/rsyring/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-24T15:21:07Z", "updated_at": "2015-09-30T01:05:01Z", "closed_at": "2015-09-30T01:05:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The GitHub project URL is: \n\nhttps://beaker.groovie.org/\n\nwhich doesn't work.  I'm assuming it's the SSL causing the problem b/c http://beaker.groovie.org/ works.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/86", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/86/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/86/events", "html_url": "https://github.com/bbangert/beaker/issues/86", "id": 101169948, "node_id": "MDU6SXNzdWUxMDExNjk5NDg=", "number": 86, "title": "apparent regression of in test_session.py under py3.4 in latest release", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-15T12:09:42Z", "updated_at": "2015-08-16T05:35:38Z", "closed_at": "2015-08-15T19:36:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` bash\n  DeprecationWarning)\nSS....................................................S..SSS....SSS.............F../mnt/gen2/TmpDir/portage/dev-python/beaker-1.7.0-r1/work/beaker-1.7.0dev-python3_4/tests/test_session.py:19: BeakerWarning: Invalidating corrupt session a585bf81f5284b58854808d56c90cf7d; error was: pickle data was truncated.  Set invalidate_corrupt=False to propagate this exception.\n  return Session({}, **options)\n.SS.............\n======================================================================\nFAIL: Test if cookies are sent out properly when ``use_cookies``\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.4/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/mnt/gen2/TmpDir/portage/dev-python/beaker-1.7.0-r1/work/beaker-1.7.0dev-python3_4/tests/test_session.py\", line 221, in test_cookies_enabled\n    assert 'secure' in session.request['cookie_out']\nnose.proxy.AssertionError: \n    # test for secure\n    {'_accessed_time': 1439640172.395836, '_creation_time': 1439640172.395836} = get_session(use_cookies=True, secure=True)\n>>  assert 'secure' in {'_accessed_time': 1439640172.395836, '_creation_time': 1439640172.395836}.request['cookie_out']\n\n\n----------------------------------------------------------------------\nRan 99 tests in 153.765s\n\nFAILED (SKIP=11, failures=1)\n```\n\nTo my knowledge this passed earlier in the year.  The python used here is 3.4.3 and I suspect 3.4.2 was used then.\n\nDo you require any further information\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/82", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/82/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/82/events", "html_url": "https://github.com/bbangert/beaker/issues/82", "id": 70002222, "node_id": "MDU6SXNzdWU3MDAwMjIyMg==", "number": 82, "title": "make all-pdf", "user": {"login": "asarch", "id": 906401, "node_id": "MDQ6VXNlcjkwNjQwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/906401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asarch", "html_url": "https://github.com/asarch", "followers_url": "https://api.github.com/users/asarch/followers", "following_url": "https://api.github.com/users/asarch/following{/other_user}", "gists_url": "https://api.github.com/users/asarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/asarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asarch/subscriptions", "organizations_url": "https://api.github.com/users/asarch/orgs", "repos_url": "https://api.github.com/users/asarch/repos", "events_url": "https://api.github.com/users/asarch/events{/privacy}", "received_events_url": "https://api.github.com/users/asarch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-22T02:28:35Z", "updated_at": "2015-04-22T15:47:06Z", "closed_at": "2015-04-22T15:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "# make latex\n\nmkdir -p build/latex build/doctrees\nsphinx-build -b latex -d build/doctrees   . build/latex\nRunning Sphinx v1.3.1\nloading pickled environment... not yet created\nbuilding [mo]: targets for 0 po files that are out of date\nbuilding [latex]: all documents\nupdating environment: 17 added, 0 changed, 0 removed\nreading sources... [100%] sessions  \n../../CHANGELOG:11: WARNING: Title underline too short.\n# Release 1.6.5 (2015-02-06)\n\n../../CHANGELOG:11: WARNING: Title underline too short.\n# Release 1.6.5 (2015-02-06)\n\n../../CHANGELOG:356: WARNING: Inline strong start-string without end-string.\n../../CHANGELOG:515: WARNING: Inline strong start-string without end-string.\n../../CHANGELOG:515: WARNING: Inline strong start-string without end-string.\n/home/asarch/beaker/beaker/beaker/docs/modules/pbkdf2.rst:9: WARNING: autodoc: failed to import function u'crypt' from module u'beaker.crypto.pbkdf2'; the following exception was raised:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/sphinx/ext/autodoc.py\", line 392, in import_object\n    obj = self.get_attr(obj, part)\n  File \"/usr/lib/python2.7/site-packages/sphinx/ext/autodoc.py\", line 288, in get_attr\n    return safe_getattr(obj, name, *defargs)\n  File \"/usr/lib/python2.7/site-packages/sphinx/util/inspect.py\", line 115, in safe_getattr\n    raise AttributeError(name)\nAttributeError: crypt\n/home/asarch/beaker/beaker/beaker/docs/modules/pbkdf2.rst:10: WARNING: autodoc: failed to import class u'PBKDF2' from module $'beaker.crypto.pbkdf2'; the following exception was raised:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/sphinx/ext/autodoc.py\", line 392, in import_object\n    obj = self.get_attr(obj, part)\n  File \"/usr/lib/python2.7/site-packages/sphinx/ext/autodoc.py\", line 288, in get_attr\n    return safe_getattr(obj, name, *defargs)\n  File \"/usr/lib/python2.7/site-packages/sphinx/util/inspect.py\", line 115, in safe_getattr\n    raise AttributeError(name)\nAttributeError: PBKDF2\nlooking for now-outdated files... none found\npickling environment... done\nchecking consistency... /home/asarch/beaker/beaker/beaker/docs/glossary.rst:: WARNING: document isn't included in any toctree\ndone\nWARNING: \"latex_documents\" config value references unknown document contents\ncopying TeX support files...\ndone\nbuild succeeded, 9 warnings.\n\nBuild finished; the LaTeX files are in build/latex.\nRun `make all-pdf' or`make all-ps' in that directory to run these through (pdf)latex.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/81", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/81/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/81/events", "html_url": "https://github.com/bbangert/beaker/issues/81", "id": 69173538, "node_id": "MDU6SXNzdWU2OTE3MzUzOA==", "number": 81, "title": "Incorrect behavior of bytes_() under Python3.4", "user": {"login": "FedericoCeratto", "id": 91576, "node_id": "MDQ6VXNlcjkxNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/91576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoCeratto", "html_url": "https://github.com/FedericoCeratto", "followers_url": "https://api.github.com/users/FedericoCeratto/followers", "following_url": "https://api.github.com/users/FedericoCeratto/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoCeratto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoCeratto/subscriptions", "organizations_url": "https://api.github.com/users/FedericoCeratto/orgs", "repos_url": "https://api.github.com/users/FedericoCeratto/repos", "events_url": "https://api.github.com/users/FedericoCeratto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoCeratto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-17T16:39:41Z", "updated_at": "2015-04-20T19:56:24Z", "closed_at": "2015-04-20T19:56:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The second assert fails under Python3.4 because str(b'a') actually returns \"b'a'\"\n\n```\nfrom beaker._compat import u_, bytes_ \ndef test_bytes_conv(): \n    assert bytes_(u'a') == b'a' \n    assert bytes_(b'a') == b'a' \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/79", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/79/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/79/events", "html_url": "https://github.com/bbangert/beaker/issues/79", "id": 66435228, "node_id": "MDU6SXNzdWU2NjQzNTIyOA==", "number": 79, "title": "Bottle() and sub-apps w/ beaker", "user": {"login": "Nitesedge", "id": 798816, "node_id": "MDQ6VXNlcjc5ODgxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/798816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nitesedge", "html_url": "https://github.com/Nitesedge", "followers_url": "https://api.github.com/users/Nitesedge/followers", "following_url": "https://api.github.com/users/Nitesedge/following{/other_user}", "gists_url": "https://api.github.com/users/Nitesedge/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nitesedge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nitesedge/subscriptions", "organizations_url": "https://api.github.com/users/Nitesedge/orgs", "repos_url": "https://api.github.com/users/Nitesedge/repos", "events_url": "https://api.github.com/users/Nitesedge/events{/privacy}", "received_events_url": "https://api.github.com/users/Nitesedge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-05T12:47:13Z", "updated_at": "2015-04-05T13:18:35Z", "closed_at": "2015-04-05T13:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use bottle's object functionality to be able to import subapps and then mount them into the global default application. However, when I try to include beaker for session management I run into issues:\n\n```\n\nfrom bottle import Bottle\nfrom beaker.middleware import SessionMiddleware\n\nsession_opts = {\n    'session.type': 'file',\n    'session.cookie_expires': 300,\n    'session.data_dir': './data',\n    'session.auto': True\n}\n\napp = Bottle()\napp = SessionMiddleware(app, session_opts)\n\n#Import Subapp\nfrom subapp import subapp #Assumes subapp.py and associated import\napp.mount('/subapp', subapp) #Assumes subapp.py and associated import\n\n@app.route('/')\ndef hello():\n    return 'Hello World'\n\napp.run()\n```\n\nError:\n\n```\nTraceback (most recent call last):\n File \"example.py\", line 14, in <module>\n @app.route('/')\n AttributeError: 'SessionMiddleware' object has no attribute 'route'\n```\n\nIs this behaviour supported by beaker? If so, can you advise what I am doing wrong here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/78", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/78/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/78/events", "html_url": "https://github.com/bbangert/beaker/issues/78", "id": 65366530, "node_id": "MDU6SXNzdWU2NTM2NjUzMA==", "number": 78, "title": "test_cookies_enabled fails in 1.7.0 under py3.4", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-31T04:55:10Z", "updated_at": "2015-04-06T13:23:00Z", "closed_at": "2015-04-06T13:22:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` bash\n * python3_4: running distutils-r1_run_phase python_test\n....................................................................................S.............F../mnt/gen2/TmpDir/portage/dev-python/beaker-1.7.0-r1/work/beaker-1.7.0dev-python3_4/tests/test_session.py:19: BeakerWarning: Invalidating corrupt session d32656da7e614fd4af4652a5a1d1ce50; error was: pickle data was truncated.  Set invalidate_corrupt=False to propagate this exception.\n  return Session({}, **options)\n................\n======================================================================\nFAIL: Test if cookies are sent out properly when ``use_cookies``\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.4/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/mnt/gen2/TmpDir/portage/dev-python/beaker-1.7.0-r1/work/beaker-1.7.0dev-python3_4/tests/test_session.py\", line 221, in test_cookies_enabled\n    assert 'secure' in session.request['cookie_out']\nAssertionError\n\n----------------------------------------------------------------------\nRan 117 tests in 155.353s\n\nFAILED (SKIP=1, failures=1)\n```\n\nI may have had this pass 3 weeks ago but I have no records of proof.\nCan you replicate?\nDo you require any further info?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/77", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/77/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/77/events", "html_url": "https://github.com/bbangert/beaker/issues/77", "id": 62960492, "node_id": "MDU6SXNzdWU2Mjk2MDQ5Mg==", "number": 77, "title": "tests folder in tarball, pypi", "user": {"login": "idella", "id": 1655078, "node_id": "MDQ6VXNlcjE2NTUwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1655078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idella", "html_url": "https://github.com/idella", "followers_url": "https://api.github.com/users/idella/followers", "following_url": "https://api.github.com/users/idella/following{/other_user}", "gists_url": "https://api.github.com/users/idella/gists{/gist_id}", "starred_url": "https://api.github.com/users/idella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idella/subscriptions", "organizations_url": "https://api.github.com/users/idella/orgs", "repos_url": "https://api.github.com/users/idella/repos", "events_url": "https://api.github.com/users/idella/events{/privacy}", "received_events_url": "https://api.github.com/users/idella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-19T11:22:38Z", "updated_at": "2015-03-19T14:22:31Z", "closed_at": "2015-03-19T14:22:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any reason the tests folder therefore the testsuite never made it into the tarball staged at pypi?\nThe source has no  MANIFEST.in\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/74", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/74/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/74/events", "html_url": "https://github.com/bbangert/beaker/issues/74", "id": 56829591, "node_id": "MDU6SXNzdWU1NjgyOTU5MQ==", "number": 74, "title": "Please don't install tests in the site-packages/ folder", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-06T15:58:49Z", "updated_at": "2015-02-06T16:44:26Z", "closed_at": "2015-02-06T16:44:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since 1.6.5 the installation script is installing the \"tests\" folder into site-packages/ folder, which can easily conflict with other packages. Please either install them in site-packages/beaker/tests or rather just don't install them, as all the top level test_\\* files were not installed already.\n\nRelated logs:\n\n```\ncreating /build/python-beaker/pkg/python2-beaker/usr/lib/python2.7/site-packages/tests\ncreating /build/python-beaker/pkg/python2-beaker/usr/lib/python2.7/site-packages/tests/test_namespacing_files\ncopying build/lib/tests/test_namespacing_files/__init__.py -> /build/python-beaker/pkg/python2-beaker/usr/lib/python2.7/site-packages/tests/test_namespacing_files\ncopying build/lib/tests/test_namespacing_files/namespace_get.py -> /build/python-beaker/pkg/python2-beaker/usr/lib/python2.7/site-packages/tests/test_namespacing_files\ncopying build/lib/tests/test_namespacing_files/namespace_go.py -> /build/python-beaker/pkg/python2-beaker/usr/lib/python2.7/site-packages/tests/test_namespacing_files\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/73", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/73/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/73/events", "html_url": "https://github.com/bbangert/beaker/issues/73", "id": 56815308, "node_id": "MDU6SXNzdWU1NjgxNTMwOA==", "number": 73, "title": "Allow using beaker with cryptography package instead of pycrypto", "user": {"login": "schlenk", "id": 979026, "node_id": "MDQ6VXNlcjk3OTAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/979026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlenk", "html_url": "https://github.com/schlenk", "followers_url": "https://api.github.com/users/schlenk/followers", "following_url": "https://api.github.com/users/schlenk/following{/other_user}", "gists_url": "https://api.github.com/users/schlenk/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlenk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlenk/subscriptions", "organizations_url": "https://api.github.com/users/schlenk/orgs", "repos_url": "https://api.github.com/users/schlenk/repos", "events_url": "https://api.github.com/users/schlenk/events{/privacy}", "received_events_url": "https://api.github.com/users/schlenk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-06T14:06:04Z", "updated_at": "2017-06-03T14:55:13Z", "closed_at": "2017-06-03T14:55:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice if the pyca/cryptography package could be used with beaker instead of the pycrypto etc. files.\nhttps://github.com/pyca/cryptography\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/72", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/72/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/72/events", "html_url": "https://github.com/bbangert/beaker/issues/72", "id": 53282927, "node_id": "MDU6SXNzdWU1MzI4MjkyNw==", "number": 72, "title": "session information not carried across requests", "user": {"login": "expntly", "id": 6870452, "node_id": "MDQ6VXNlcjY4NzA0NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6870452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/expntly", "html_url": "https://github.com/expntly", "followers_url": "https://api.github.com/users/expntly/followers", "following_url": "https://api.github.com/users/expntly/following{/other_user}", "gists_url": "https://api.github.com/users/expntly/gists{/gist_id}", "starred_url": "https://api.github.com/users/expntly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/expntly/subscriptions", "organizations_url": "https://api.github.com/users/expntly/orgs", "repos_url": "https://api.github.com/users/expntly/repos", "events_url": "https://api.github.com/users/expntly/events{/privacy}", "received_events_url": "https://api.github.com/users/expntly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-01-02T22:34:35Z", "updated_at": "2018-08-01T01:55:36Z", "closed_at": "2015-09-20T11:49:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The setup is a traditional web client (angularjs) making requests to a web server (python 2.6.9, gunicorn 19.0.0, beaker 1.6.4).\n\napp handling code looks pretty much like so:\n\n``` python\nfrom beaker.middleware import SessionMiddleware\nsession_opts = {\n  \"session.type\": \"cookie\",\n  \"session.validate_key\": \"some secret\",\n  \"session.cookie_expires\": 3600*24*90,\n  \"session.auto\": True,\n}\napp_handler = ...\napplication = SessionMiddleware(app_handler, session_opts)\n```\n\nThe web client makes one HTTP GET and two HTTP POST requests **sequentially** against the web server.  The problem is that the last request doesn't seem to carry the session info that the first request added to the session.  Here's what I see in the server logs:\n- GET / : sets some session info via session[\"info\"] = \"...\"\n- POST /foo:\n  - beaker.session.id cookie is set (just a long b64 hash)\n  - session[\"info\"] has my information, as expected\n- POST /bar:\n  - beaker.session.id cookie is set and seems to have a different value than the hash just before\n  - session does not have \"info\" key, the only thing it's got is an \"_id\" entry.\n\nSo somehow the session info is cleared after the \"POST /foo\", which makes no sense to me.  Am I missing something?  Also, is beaker.session.id supposed to change all the time?  I seem to always see a different value.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/71", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/71/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/71/events", "html_url": "https://github.com/bbangert/beaker/issues/71", "id": 46173893, "node_id": "MDU6SXNzdWU0NjE3Mzg5Mw==", "number": 71, "title": "Example does not work", "user": {"login": "bizso09", "id": 1904536, "node_id": "MDQ6VXNlcjE5MDQ1MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1904536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bizso09", "html_url": "https://github.com/bizso09", "followers_url": "https://api.github.com/users/bizso09/followers", "following_url": "https://api.github.com/users/bizso09/following{/other_user}", "gists_url": "https://api.github.com/users/bizso09/gists{/gist_id}", "starred_url": "https://api.github.com/users/bizso09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bizso09/subscriptions", "organizations_url": "https://api.github.com/users/bizso09/orgs", "repos_url": "https://api.github.com/users/bizso09/repos", "events_url": "https://api.github.com/users/bizso09/events{/privacy}", "received_events_url": "https://api.github.com/users/bizso09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-18T12:43:42Z", "updated_at": "2015-01-26T20:39:35Z", "closed_at": "2015-01-26T20:39:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfrom beaker.cache import cache_regions, cache_region\n\n# configure regions\ncache_regions.update({\n   'short_term':{\n       'expire':'60',\n       'type':'memory'\n   }\n})\n\n@cache_region('short_term')\ndef load():\n    '''Load from a database given a search term, limit, offset.'''\n    return []\n\na = load()\n\n------------------------------\n  a = load()\nFile \"C:\\Python27\\lib\\site-packages\\beaker\\cache.py\", line 563, in cached\n  key_length = cache_regions[region]['key_length']\nKeyError: 'key_length'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/64", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/64/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/64/events", "html_url": "https://github.com/bbangert/beaker/issues/64", "id": 32722191, "node_id": "MDU6SXNzdWUzMjcyMjE5MQ==", "number": 64, "title": "Cache decorators are overriding docstring and function name", "user": {"login": "ardeois", "id": 1867939, "node_id": "MDQ6VXNlcjE4Njc5Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1867939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ardeois", "html_url": "https://github.com/ardeois", "followers_url": "https://api.github.com/users/ardeois/followers", "following_url": "https://api.github.com/users/ardeois/following{/other_user}", "gists_url": "https://api.github.com/users/ardeois/gists{/gist_id}", "starred_url": "https://api.github.com/users/ardeois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ardeois/subscriptions", "organizations_url": "https://api.github.com/users/ardeois/orgs", "repos_url": "https://api.github.com/users/ardeois/repos", "events_url": "https://api.github.com/users/ardeois/events{/privacy}", "received_events_url": "https://api.github.com/users/ardeois/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-02T20:12:38Z", "updated_at": "2015-01-28T14:46:26Z", "closed_at": "2015-01-28T14:46:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using an decorator for caching, the cached function loose it's docstring and its name becomes 'cached'\n\nIt's easy to fix that by using '@wraps' decorator :\nhttps://docs.python.org/2/library/functools.html#functools.wraps\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/62", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/62/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/62/events", "html_url": "https://github.com/bbangert/beaker/issues/62", "id": 32646851, "node_id": "MDU6SXNzdWUzMjY0Njg1MQ==", "number": 62, "title": "cache decorators doesn't support kwargs", "user": {"login": "ardeois", "id": 1867939, "node_id": "MDQ6VXNlcjE4Njc5Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1867939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ardeois", "html_url": "https://github.com/ardeois", "followers_url": "https://api.github.com/users/ardeois/followers", "following_url": "https://api.github.com/users/ardeois/following{/other_user}", "gists_url": "https://api.github.com/users/ardeois/gists{/gist_id}", "starred_url": "https://api.github.com/users/ardeois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ardeois/subscriptions", "organizations_url": "https://api.github.com/users/ardeois/orgs", "repos_url": "https://api.github.com/users/ardeois/repos", "events_url": "https://api.github.com/users/ardeois/events{/privacy}", "received_events_url": "https://api.github.com/users/ardeois/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-01T20:53:29Z", "updated_at": "2015-11-13T21:51:56Z", "closed_at": "2015-11-13T21:51:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the decorator 'cache_region' and it's not possible to cache a function which  has kwargs :\n\n``` python\n@cache_region('short_term')\ndef a_function(x, y=None):\n  return 'whatever'\n```\n\nWhen invoking the function 'a_function', we get an exception like:\n\n```\nTypeError: cached() got an unexpected keyword argument 'y'\n```\n\nThis behavior happens with any decorator for caching functions\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/61", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/61/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/61/events", "html_url": "https://github.com/bbangert/beaker/issues/61", "id": 32335389, "node_id": "MDU6SXNzdWUzMjMzNTM4OQ==", "number": 61, "title": "hang sha1 import on master (Ubuntu 13.04, Python 2.7, 32-bit)", "user": {"login": "mraygalaxy", "id": 966394, "node_id": "MDQ6VXNlcjk2NjM5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/966394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mraygalaxy", "html_url": "https://github.com/mraygalaxy", "followers_url": "https://api.github.com/users/mraygalaxy/followers", "following_url": "https://api.github.com/users/mraygalaxy/following{/other_user}", "gists_url": "https://api.github.com/users/mraygalaxy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mraygalaxy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mraygalaxy/subscriptions", "organizations_url": "https://api.github.com/users/mraygalaxy/orgs", "repos_url": "https://api.github.com/users/mraygalaxy/repos", "events_url": "https://api.github.com/users/mraygalaxy/events{/privacy}", "received_events_url": "https://api.github.com/users/mraygalaxy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-28T06:48:16Z", "updated_at": "2014-04-28T07:21:46Z", "closed_at": "2014-04-28T07:21:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I moved my WSGI application using beaker in another environment to this one, and now my app is hanging on session initialization here:\n\n/usr/lib/python2.7/dist-packages/beaker/util.py\nLine 228:\n\n```\nsha1 = None\ndef encoded_path(root, identifiers, extension=\".enc\", depth=3, digest_filenames=True):\n    ident = \"_\".join(identifiers)\n    global sha1\n    if sha1 is None:\n        from beaker.crypto import sha1\n```\n\nHowever, if I replace the line:\n\n```\n sha1 = None\n```\n\nWith the following from the crypto folder:\n\n```\nfrom Crypto.Hash import HMAC as hmac, SHA as hmac_sha1\nsha1 = hmac_sha1.new\n```\n\nThe, everything works just fine.\n\nWhat's the deal? (Same problem happens with 1.6.3 if I install beaker from the apt-get repositories).\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/60", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/60/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/60/events", "html_url": "https://github.com/bbangert/beaker/issues/60", "id": 29575110, "node_id": "MDU6SXNzdWUyOTU3NTExMA==", "number": 60, "title": "KeyError on session encrypt_key update", "user": {"login": "FedericoCeratto", "id": 91576, "node_id": "MDQ6VXNlcjkxNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/91576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoCeratto", "html_url": "https://github.com/FedericoCeratto", "followers_url": "https://api.github.com/users/FedericoCeratto/followers", "following_url": "https://api.github.com/users/FedericoCeratto/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoCeratto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoCeratto/subscriptions", "organizations_url": "https://api.github.com/users/FedericoCeratto/orgs", "repos_url": "https://api.github.com/users/FedericoCeratto/repos", "events_url": "https://api.github.com/users/FedericoCeratto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoCeratto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-03-17T16:23:39Z", "updated_at": "2015-01-27T10:41:06Z", "closed_at": "2015-01-26T20:39:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\nWhen I restart an application and generate a new encrypt_key without deleting the existing cookies from logged-in browsers I get the following error:\n\n<pre>\n  File \"/usr/lib/python2.7/dist-packages/beaker/session.py\", line 651, in __getattr__\n    return getattr(self._session(), attr)\n  File \"/usr/lib/python2.7/dist-packages/beaker/session.py\", line 644, in _session\n    self.__dict__['_sess'] = CookieSession(req, **params)\n  File \"/usr/lib/python2.7/dist-packages/beaker/session.py\", line 531, in __init__\n    self['_accessed_time'] > self.timeout:\nKeyError: '_accessed_time'\n</pre>\n\n\nMaybe Beaker should detect this condition and ignore the old cookie, or delete it, or raise a specific exception.\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/57", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/57/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/57/events", "html_url": "https://github.com/bbangert/beaker/issues/57", "id": 27646250, "node_id": "MDU6SXNzdWUyNzY0NjI1MA==", "number": 57, "title": "Beaker 1.6.4 not work on Python3", "user": {"login": "kwatch", "id": 4479, "node_id": "MDQ6VXNlcjQ0Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwatch", "html_url": "https://github.com/kwatch", "followers_url": "https://api.github.com/users/kwatch/followers", "following_url": "https://api.github.com/users/kwatch/following{/other_user}", "gists_url": "https://api.github.com/users/kwatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwatch/subscriptions", "organizations_url": "https://api.github.com/users/kwatch/orgs", "repos_url": "https://api.github.com/users/kwatch/repos", "events_url": "https://api.github.com/users/kwatch/events{/privacy}", "received_events_url": "https://api.github.com/users/kwatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-15T10:12:08Z", "updated_at": "2015-02-25T17:21:09Z", "closed_at": "2015-02-25T17:21:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\nI got the following error on Python 3.2 and 3.3:\n\n```\nFile \"/opt/lang/python/3.2.2/lib/python3.2/http/cookies.py\", line 486, in __setitem__\n  rval, cval = self.value_encode(value)\nFile \"/opt/lang/python/3.2.2/lib/python3.2/site-packages/Beaker-1.6.4-py3.2.egg/beaker/session.py\", line 70, in value_encode\n  sig = HMAC.new(self.secret, val.encode('UTF-8'), SHA1).hexdigest()\nAttributeError: 'bytes' object has no attribute 'encode'\n```\n\nThe following is a monkey patch to avoid this error,\nbut I'm not sure that it is correct solution.\n\n```\nfrom beaker.crypto import hmac as HMAC, hmac_sha1 as SHA1\nfrom beaker.session import SignedCookie\ndef value_encode(self, val):\n    #sig = HMAC.new(self.secret, val.encode('UTF-8'), SHA1).hexdigest()\n    sig = HMAC.new(self.secret, val, SHA1).hexdigest()\n    return str(val), (\"%s%s\" % (sig, val))\nSignedCookie.value_encode = value_encode\n```\n\nAnd, even with monkey patching, Beaker's SessionMiddleware\ndoesn't save session correctly on Python3.\n(Pyton 3.3.3, MacOSX)\n\nHere is my sample code (which works very well on Python2.7!):\n\n```\n# -*- coding: utf-8 -*-\n\nimport sys\nimport waitress\nfrom beaker.middleware import SessionMiddleware\n\ndef testapp(environ, start_response):\n    session = environ.get('beaker.session')\n    count = session.get('count', 0) + 1\n    session['count'] = count\n    session.save()\n    content = \"count=%s\" % count\n    #\n    start_response('200 OK', [('Content-Type', 'text/plain')])\n    return [content.encode('utf-8')]\n\nconfig = {\n    'session.type': 'cookie',\n    'session.validate_key': 'mysecretstring',\n}\napp = SessionMiddleware(testapp, config=config)\n\n## monkey patch for Python3\npython3 = sys.version_info[0] == 3\nif python3:\n    from beaker.crypto import hmac as HMAC, hmac_sha1 as SHA1\n    from beaker.session import SignedCookie\n    def value_encode(self, val):\n        #sig = HMAC.new(self.secret, val.encode('UTF-8'), SHA1).hexdigest()\n        sig = HMAC.new(self.secret, val, SHA1).hexdigest()\n        return str(val), (\"%s%s\" % (sig, val))\n    SignedCookie.value_encode = value_encode\n## ----\n\nwaitress.serve(app, port=8080)\n```\n\nCould you help me?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/53", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/53/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/53/events", "html_url": "https://github.com/bbangert/beaker/issues/53", "id": 21347247, "node_id": "MDU6SXNzdWUyMTM0NzI0Nw==", "number": 53, "title": "Add support for python 3.3", "user": {"login": "yaccz", "id": 455474, "node_id": "MDQ6VXNlcjQ1NTQ3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/455474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaccz", "html_url": "https://github.com/yaccz", "followers_url": "https://api.github.com/users/yaccz/followers", "following_url": "https://api.github.com/users/yaccz/following{/other_user}", "gists_url": "https://api.github.com/users/yaccz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaccz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaccz/subscriptions", "organizations_url": "https://api.github.com/users/yaccz/orgs", "repos_url": "https://api.github.com/users/yaccz/repos", "events_url": "https://api.github.com/users/yaccz/events{/privacy}", "received_events_url": "https://api.github.com/users/yaccz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-10-21T21:50:50Z", "updated_at": "2015-02-25T17:22:29Z", "closed_at": "2015-02-25T17:22:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "classifiers:\n      'Programming Language :: Python :: 3',\n      'Programming Language :: Python :: 3.2',\n\nso I assume 3.3 is not supported yet.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/51", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/51/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/51/events", "html_url": "https://github.com/bbangert/beaker/issues/51", "id": 19864843, "node_id": "MDU6SXNzdWUxOTg2NDg0Mw==", "number": 51, "title": "Test failures with Python 3", "user": {"login": "Arfrever", "id": 656294, "node_id": "MDQ6VXNlcjY1NjI5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/656294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arfrever", "html_url": "https://github.com/Arfrever", "followers_url": "https://api.github.com/users/Arfrever/followers", "following_url": "https://api.github.com/users/Arfrever/following{/other_user}", "gists_url": "https://api.github.com/users/Arfrever/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arfrever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arfrever/subscriptions", "organizations_url": "https://api.github.com/users/Arfrever/orgs", "repos_url": "https://api.github.com/users/Arfrever/repos", "events_url": "https://api.github.com/users/Arfrever/events{/privacy}", "received_events_url": "https://api.github.com/users/Arfrever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-09-21T23:15:29Z", "updated_at": "2015-02-25T17:22:52Z", "closed_at": "2015-02-25T17:22:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Beaker has some test failures with Python 3.\nNumbers of errors and failures are different with different Python versions:\n3.1: 92 tests, 11 skipped, 2 errors, 0 failures (more skipped tests due to WebTest unavailable)\n3.2: 107 tests, 1 skipped, 10 errors, 17 failures\n3.3: 107 tests, 1 skipped, 13 errors, 17 failures\n\nFull results of test suite of Beaker trunk with Python 3.3:\n\n```\n$ PYTHONPATH=\"build/lib\" nosetests-3.3 -P\nFF.............................E....EE.............E..EEEFEEFEE.FF...FFFFFFFFFS..EE......../tmp/beaker/tests/test_session.py:17: BeakerWarning: Invalidating corrupt session 6b159927e00344938ea8cfafbdc53e24; error was: pickle data was truncated.  Set invalidate_corrupt=False to propagate this exception.\n  return Session({}, **options)\n.FF.............\n======================================================================\nERROR: tests.test_container.test_dbm_container\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_container.py\", line 98, in test_dbm_container\n    _run_container_test(clsmap['dbm'], totaltime, expiretime, delay, False)\n  File \"/tmp/beaker/tests/test_container.py\", line 68, in _run_container_test\n    value.clear_value()\n  File \"/tmp/beaker/build/lib/beaker/container.py\", line 427, in clear_value\n    if self.key in self.namespace:\n  File \"/tmp/beaker/build/lib/beaker/container.py\", line 598, in __contains__\n    return key in self.dbm\nnose.proxy.TypeError: TypeError: dbm key must be string, not str\n-------------------- >> begin captured stdout << ---------------------\n\ntesting <class 'beaker.container.DBMNamespaceManager'> for 10 secs with expiretime None delay 0\n\n--------------------- >> end captured stdout << ----------------------\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\nbeaker.container: DEBUG: opening dbm file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\nbeaker.container: DEBUG: clear_value\nbeaker.container: DEBUG: closing dbm file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nERROR: tests.test_container.test_dbm_container_2\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_container.py\", line 113, in test_dbm_container_2\n    test_dbm_container(expiretime=12)\n  File \"/tmp/beaker/tests/test_container.py\", line 98, in test_dbm_container\n    _run_container_test(clsmap['dbm'], totaltime, expiretime, delay, False)\n  File \"/tmp/beaker/tests/test_container.py\", line 68, in _run_container_test\n    value.clear_value()\n  File \"/tmp/beaker/build/lib/beaker/container.py\", line 427, in clear_value\n    if self.key in self.namespace:\n  File \"/tmp/beaker/build/lib/beaker/container.py\", line 598, in __contains__\n    return key in self.dbm\nnose.proxy.TypeError: TypeError: dbm key must be string, not str\n-------------------- >> begin captured stdout << ---------------------\n\ntesting <class 'beaker.container.DBMNamespaceManager'> for 10 secs with expiretime 12 delay 0\n\n--------------------- >> end captured stdout << ----------------------\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\nbeaker.container: DEBUG: opening dbm file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\nbeaker.container: DEBUG: clear_value\nbeaker.container: DEBUG: closing dbm file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nERROR: tests.test_container.test_dbm_container_3\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_container.py\", line 116, in test_dbm_container_3\n    test_dbm_container(expiretime=15, delay=2)\n  File \"/tmp/beaker/tests/test_container.py\", line 98, in test_dbm_container\n    _run_container_test(clsmap['dbm'], totaltime, expiretime, delay, False)\n  File \"/tmp/beaker/tests/test_container.py\", line 68, in _run_container_test\n    value.clear_value()\n  File \"/tmp/beaker/build/lib/beaker/container.py\", line 427, in clear_value\n    if self.key in self.namespace:\n  File \"/tmp/beaker/build/lib/beaker/container.py\", line 598, in __contains__\n    return key in self.dbm\nnose.proxy.TypeError: TypeError: dbm key must be string, not str\n-------------------- >> begin captured stdout << ---------------------\n\ntesting <class 'beaker.container.DBMNamespaceManager'> for 10 secs with expiretime 15 delay 2\n\n--------------------- >> end captured stdout << ----------------------\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\nbeaker.container: DEBUG: opening dbm file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\nbeaker.container: DEBUG: clear_value\nbeaker.container: DEBUG: closing dbm file ./cache/container_dbm/a/a9/a94a8fe5ccb19ba61c4c0873d391e987982fbbd3.dbm\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nERROR: tests.test_cookie_domain_only.test_increment\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_domain_only.py\", line 34, in test_increment\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 155, in __call__\n    return self.wrap_app(environ, session_start_response)\n  File \"/tmp/beaker/tests/test_cookie_domain_only.py\", line 28, in simple_app\n    start_response('200 OK', [('Content-type', 'text/plain')])\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 149, in session_start_response\n    session.persist()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 717, in persist\n    self._session().save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 576, in save\n    self._create_cookie()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 594, in _create_cookie\n    self.cookie[self.key] = val\n  File \"/usr/lib64/python3.3/http/cookies.py\", line 491, in __setitem__\n    rval, cval = self.value_encode(value)\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 70, in value_encode\n    sig = HMAC.new(self.secret, val.encode('UTF-8'), SHA1).hexdigest()\nAttributeError: 'bytes' object has no attribute 'encode'\n\n======================================================================\nERROR: tests.test_cookie_only.test_increment\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 31, in test_increment\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 155, in __call__\n    return self.wrap_app(environ, session_start_response)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 25, in simple_app\n    start_response('200 OK', [('Content-type', 'text/plain')])\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 149, in session_start_response\n    session.persist()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 717, in persist\n    self._session().save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 576, in save\n    self._create_cookie()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 594, in _create_cookie\n    self.cookie[self.key] = val\n  File \"/usr/lib64/python3.3/http/cookies.py\", line 491, in __setitem__\n    rval, cval = self.value_encode(value)\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 70, in value_encode\n    sig = HMAC.new(self.secret, val.encode('UTF-8'), SHA1).hexdigest()\nAttributeError: 'bytes' object has no attribute 'encode'\n\n======================================================================\nERROR: tests.test_cookie_only.test_expires\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 42, in test_expires\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 155, in __call__\n    return self.wrap_app(environ, session_start_response)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 25, in simple_app\n    start_response('200 OK', [('Content-type', 'text/plain')])\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 149, in session_start_response\n    session.persist()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 717, in persist\n    self._session().save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 576, in save\n    self._create_cookie()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 594, in _create_cookie\n    self.cookie[self.key] = val\n  File \"/usr/lib64/python3.3/http/cookies.py\", line 491, in __setitem__\n    rval, cval = self.value_encode(value)\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 70, in value_encode\n    sig = HMAC.new(self.secret, val.encode('UTF-8'), SHA1).hexdigest()\nAttributeError: 'bytes' object has no attribute 'encode'\n\n======================================================================\nERROR: tests.test_cookie_only.test_different_sessions\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 50, in test_different_sessions\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 155, in __call__\n    return self.wrap_app(environ, session_start_response)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 25, in simple_app\n    start_response('200 OK', [('Content-type', 'text/plain')])\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 149, in session_start_response\n    session.persist()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 717, in persist\n    self._session().save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 576, in save\n    self._create_cookie()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 594, in _create_cookie\n    self.cookie[self.key] = val\n  File \"/usr/lib64/python3.3/http/cookies.py\", line 491, in __setitem__\n    rval, cval = self.value_encode(value)\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 70, in value_encode\n    sig = HMAC.new(self.secret, val.encode('UTF-8'), SHA1).hexdigest()\nAttributeError: 'bytes' object has no attribute 'encode'\n\n======================================================================\nERROR: tests.test_cookie_only.test_increment_with_encryption\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 80, in test_increment_with_encryption\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 155, in __call__\n    return self.wrap_app(environ, session_start_response)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 25, in simple_app\n    start_response('200 OK', [('Content-type', 'text/plain')])\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 149, in session_start_response\n    session.persist()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 717, in persist\n    self._session().save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 576, in save\n    self._create_cookie()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 590, in _create_cookie\n    val = self._encrypt_data()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 262, in _encrypt_data\n    self.validate_key + nonce, 1)\nTypeError: Can't convert 'bytes' object to str implicitly\n\n======================================================================\nERROR: tests.test_cookie_only.test_different_sessions_with_encryption\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 92, in test_different_sessions_with_encryption\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 155, in __call__\n    return self.wrap_app(environ, session_start_response)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 25, in simple_app\n    start_response('200 OK', [('Content-type', 'text/plain')])\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 149, in session_start_response\n    session.persist()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 717, in persist\n    self._session().save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 576, in save\n    self._create_cookie()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 590, in _create_cookie\n    val = self._encrypt_data()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 262, in _encrypt_data\n    self.validate_key + nonce, 1)\nTypeError: Can't convert 'bytes' object to str implicitly\n\n======================================================================\nERROR: tests.test_cookie_only.test_cookie_id\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 123, in test_cookie_id\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 155, in __call__\n    return self.wrap_app(environ, session_start_response)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 25, in simple_app\n    start_response('200 OK', [('Content-type', 'text/plain')])\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 149, in session_start_response\n    session.persist()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 717, in persist\n    self._session().save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 576, in save\n    self._create_cookie()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 590, in _create_cookie\n    val = self._encrypt_data()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 262, in _encrypt_data\n    self.validate_key + nonce, 1)\nTypeError: Can't convert 'bytes' object to str implicitly\n\n======================================================================\nERROR: tests.test_cookie_only.test_invalidate_with_save_does_not_delete_session\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 141, in test_invalidate_with_save_does_not_delete_session\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1260, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 155, in __call__\n    return self.wrap_app(environ, session_start_response)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 135, in invalidate_session_app\n    start_response('200 OK', [('Content-type', 'text/plain')])\n  File \"/tmp/beaker/build/lib/beaker/middleware.py\", line 149, in session_start_response\n    session.persist()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 717, in persist\n    self._session().save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 576, in save\n    self._create_cookie()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 590, in _create_cookie\n    val = self._encrypt_data()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 262, in _encrypt_data\n    self.validate_key + nonce, 1)\nTypeError: Can't convert 'bytes' object to str implicitly\n\n======================================================================\nERROR: Test if the data is actually persistent across requests\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_session.py\", line 47, in test_save_load_encryption\n    session.save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 415, in save\n    data = self._encrypt_data(data)\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 262, in _encrypt_data\n    self.validate_key + nonce, 1)\nTypeError: Can't convert 'bytes' object to str implicitly\n\n======================================================================\nERROR: Test if the data fails without the right keys\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_session.py\", line 69, in test_decryption_failure\n    session.save()\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 415, in save\n    data = self._encrypt_data(data)\n  File \"/tmp/beaker/build/lib/beaker/session.py\", line 262, in _encrypt_data\n    self.validate_key + nonce, 1)\nTypeError: Can't convert 'bytes' object to str implicitly\n\n======================================================================\nFAIL: tests.test_cache.test_cache_manager\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.3/site-packages/nose/util.py\", line 613, in newfunc\n    return func(*arg, **kw)\n  File \"/tmp/beaker/build/lib/beaker/util.py\", line 64, in maybe\n    return fn(*args, **kw)\n  File \"/tmp/beaker/tests/test_cache.py\", line 218, in test_cache_manager\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1263, in call_application\n    output.extend(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <generator object cache_manager_app at 0x7fc1da288500> returned a non-<class 'bytes'> object: 'test_key is: test value\\n'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: set_value stored time 1379804271.4366035 expire time None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_cache.test_increment\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.3/site-packages/nose/util.py\", line 613, in newfunc\n    return func(*arg, **kw)\n  File \"/tmp/beaker/build/lib/beaker/util.py\", line 64, in maybe\n    return fn(*args, **kw)\n  File \"/tmp/beaker/tests/test_cache.py\", line 208, in test_increment\n    res = app.get('/', extra_environ={'beaker.type':type, 'beaker.clear':True})\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d9d20d50> returned a non-<class 'bytes'> object: 'The current value is: 1'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: set_value stored time 1379804271.510165 expire time None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_cookie_only.test_nosave\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 64, in test_nosave\n    res = app.get('/nosave')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d50bcd50> returned a non-<class 'bytes'> object: \"The current value is: 1 and cookie is {'value': 1, '_id': '953224090084467e921907b09061207c'}\"\n\n\n======================================================================\nFAIL: tests.test_cookie_only.test_nosave_with_encryption\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_cookie_only.py\", line 107, in test_nosave_with_encryption\n    res = app.get('/nosave')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d50c5d90> returned a non-<class 'bytes'> object: \"The current value is: 1 and cookie is {'value': 1, '_id': 'cbecd659685143f1b62cfed057c862ea'}\"\n\n\n======================================================================\nFAIL: tests.test_database.test_cache_manager\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.3/site-packages/nose/util.py\", line 613, in newfunc\n    return func(*arg, **kw)\n  File \"/tmp/beaker/build/lib/beaker/util.py\", line 64, in maybe\n    return fn(*args, **kw)\n  File \"/tmp/beaker/tests/test_database.py\", line 106, in test_cache_manager\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1263, in call_application\n    output.extend(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <generator object cache_manager_app at 0x7fc1d7916820> returned a non-<class 'bytes'> object: 'test_key is: test value\\n'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: set_value stored time 1379804369.8651407 expire time None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_database.test_increment\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.3/site-packages/nose/util.py\", line 613, in newfunc\n    return func(*arg, **kw)\n  File \"/tmp/beaker/build/lib/beaker/util.py\", line 64, in maybe\n    return fn(*args, **kw)\n  File \"/tmp/beaker/tests/test_database.py\", line 96, in test_increment\n    res = app.get('/', extra_environ={'beaker.clear':True})\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78ad910> returned a non-<class 'bytes'> object: 'The current value is: 1'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: set_value stored time 1379804369.932357 expire time None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_domain_setting.test_domain\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_domain_setting.py\", line 33, in test_domain\n    res = app.get('/', extra_environ=dict(domain='.hoop.com'))\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78ad9d0> returned a non-<class 'bytes'> object: 'The current value is: 1, session id is 5a09e880a0c542cca54c99f3f6a69635'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_file/5/5a/5a09e880a0c542cca54c99f3f6a69635.cache\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_increment.test_no_save\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_increment.py\", line 61, in test_no_save\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78ad650> returned a non-<class 'bytes'> object: 'The current value is: None, session id is 08f64ef65868498da8af75e8299e12df'\n\n\n======================================================================\nFAIL: tests.test_increment.test_increment\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_increment.py\", line 69, in test_increment\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d50d6b50> returned a non-<class 'bytes'> object: 'The current value is: 1, session id is 8c5c88a88bff4a06aa9f2bdc024e5d35'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_file/8/8c/8c5c88a88bff4a06aa9f2bdc024e5d35.cache\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_increment.test_increment_auto\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_increment.py\", line 79, in test_increment_auto\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78b4a10> returned a non-<class 'bytes'> object: 'The current value is: 1, session id is 7c1623e62468499faa1054870ff7c520'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_file/7/7c/7c1623e62468499faa1054870ff7c520.cache\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_increment.test_different_sessions\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_increment.py\", line 91, in test_different_sessions\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78b4290> returned a non-<class 'bytes'> object: 'The current value is: 1, session id is 15ddb7e6d43848f2b8e4730ba94a917b'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_file/1/15/15ddb7e6d43848f2b8e4730ba94a917b.cache\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_increment.test_different_sessions_auto\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_increment.py\", line 106, in test_different_sessions_auto\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78c1590> returned a non-<class 'bytes'> object: 'The current value is: 1, session id is 1e49455d3e444a32a89847e49ef7c30a'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_file/1/1e/1e49455d3e444a32a89847e49ef7c30a.cache\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_increment.test_nosave\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_increment.py\", line 120, in test_nosave\n    res = app.get('/nosave')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78c1a50> returned a non-<class 'bytes'> object: 'The current value is: 1, session id is 85a94aaabe254a539cccbb0dde33d997'\n\n\n======================================================================\nFAIL: tests.test_increment.test_revert\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_increment.py\", line 133, in test_revert\n    res = app.get('/nosave')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78c80d0> returned a non-<class 'bytes'> object: 'The current value is: 0, session id is cf35aeda50f641f1a26a0fb7e015939a'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_file/c/cf/cf35aeda50f641f1a26a0fb7e015939a.cache\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_increment.test_load_session_by_id\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/tmp/beaker/tests/test_increment.py\", line 153, in test_load_session_by_id\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78c8390> returned a non-<class 'bytes'> object: 'The current value is: 1, session id is 9b2177b3eb3944a8b23d93820e0c0e6b'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: data file ./cache/container_file/9/9b/9b2177b3eb3944a8b23d93820e0c0e6b.cache\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_sqla.test_cache_manager\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.3/site-packages/nose/util.py\", line 613, in newfunc\n    return func(*arg, **kw)\n  File \"/tmp/beaker/build/lib/beaker/util.py\", line 64, in maybe\n    return fn(*args, **kw)\n  File \"/tmp/beaker/tests/test_sqla.py\", line 117, in test_cache_manager\n    res = app.get('/')\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 489, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1292, in send\n    application, catch_exc_info=True)\n  File \"/usr/lib64/python3.3/site-packages/webob/request.py\", line 1263, in call_application\n    output.extend(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <generator object cache_manager_app at 0x7fc1d78b5e10> returned a non-<class 'bytes'> object: 'test_key is: test value\\n'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: set_value stored time 1379804373.5384603 expire time None\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nFAIL: tests.test_sqla.test_increment\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.3/site-packages/nose/util.py\", line 613, in newfunc\n    return func(*arg, **kw)\n  File \"/tmp/beaker/build/lib/beaker/util.py\", line 64, in maybe\n    return fn(*args, **kw)\n  File \"/tmp/beaker/tests/test_sqla.py\", line 107, in test_increment\n    res = app.get('/', extra_environ={'beaker.clear': True})\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 206, in get\n    expect_errors=expect_errors)\n  File \"/usr/lib64/python3.3/site-packages/webtest/app.py\", line 502, in do_request\n    res.body\n  File \"/usr/lib64/python3.3/site-packages/webob/response.py\", line 345, in _body__get\n    body = b''.join(app_iter)\n  File \"/usr/lib64/python3.3/site-packages/webtest/lint.py\", line 300, in next\n    % (self.iterator, binary_type, v))\nnose.proxy.AssertionError: Iterator <list_iterator object at 0x7fc1d78d8f90> returned a non-<class 'bytes'> object: 'The current value is: 1'\n\n-------------------- >> begin captured logging << --------------------\nbeaker.container: DEBUG: set_value stored time 1379804373.5449975 expire time None\n--------------------- >> end captured logging << ---------------------\n\n----------------------------------------------------------------------\nRan 107 tests in 122.245s\n\nFAILED (SKIP=1, errors=13, failures=17)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/35", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/35/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/35/events", "html_url": "https://github.com/bbangert/beaker/issues/35", "id": 10586474, "node_id": "MDU6SXNzdWUxMDU4NjQ3NA==", "number": 35, "title": "Possibly unsafe use of pickle()", "user": {"login": "rcarmo", "id": 392683, "node_id": "MDQ6VXNlcjM5MjY4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/392683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcarmo", "html_url": "https://github.com/rcarmo", "followers_url": "https://api.github.com/users/rcarmo/followers", "following_url": "https://api.github.com/users/rcarmo/following{/other_user}", "gists_url": "https://api.github.com/users/rcarmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcarmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcarmo/subscriptions", "organizations_url": "https://api.github.com/users/rcarmo/orgs", "repos_url": "https://api.github.com/users/rcarmo/repos", "events_url": "https://api.github.com/users/rcarmo/events{/privacy}", "received_events_url": "https://api.github.com/users/rcarmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-02-03T17:18:23Z", "updated_at": "2015-11-21T08:02:01Z", "closed_at": "2015-11-21T08:02:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've recently come across http://vudang.com/2013/01/python-web-framework-from-lfr-to-rce/, which details possible vulnerabilities related to unpickling cookies.\n\nI've noticed that pickle is used in https://github.com/rcarmo/beaker/blob/master/beaker/session.py#L288, and was wondering if you had any plans to change that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/32", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/32/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/32/events", "html_url": "https://github.com/bbangert/beaker/issues/32", "id": 9992726, "node_id": "MDU6SXNzdWU5OTkyNzI2", "number": 32, "title": "please delete this", "user": {"login": "themylogin", "id": 669257, "node_id": "MDQ6VXNlcjY2OTI1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/669257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themylogin", "html_url": "https://github.com/themylogin", "followers_url": "https://api.github.com/users/themylogin/followers", "following_url": "https://api.github.com/users/themylogin/following{/other_user}", "gists_url": "https://api.github.com/users/themylogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/themylogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themylogin/subscriptions", "organizations_url": "https://api.github.com/users/themylogin/orgs", "repos_url": "https://api.github.com/users/themylogin/repos", "events_url": "https://api.github.com/users/themylogin/events{/privacy}", "received_events_url": "https://api.github.com/users/themylogin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-01-15T19:51:16Z", "updated_at": "2013-01-15T20:00:57Z", "closed_at": "2013-01-15T20:00:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "sorry\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/27", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/27/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/27/events", "html_url": "https://github.com/bbangert/beaker/issues/27", "id": 7087384, "node_id": "MDU6SXNzdWU3MDg3Mzg0", "number": 27, "title": "use_cookies problem", "user": {"login": "nesiax", "id": 1376713, "node_id": "MDQ6VXNlcjEzNzY3MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1376713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nesiax", "html_url": "https://github.com/nesiax", "followers_url": "https://api.github.com/users/nesiax/followers", "following_url": "https://api.github.com/users/nesiax/following{/other_user}", "gists_url": "https://api.github.com/users/nesiax/gists{/gist_id}", "starred_url": "https://api.github.com/users/nesiax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nesiax/subscriptions", "organizations_url": "https://api.github.com/users/nesiax/orgs", "repos_url": "https://api.github.com/users/nesiax/repos", "events_url": "https://api.github.com/users/nesiax/events{/privacy}", "received_events_url": "https://api.github.com/users/nesiax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-09-24T11:26:02Z", "updated_at": "2015-09-20T12:09:37Z", "closed_at": "2015-09-20T12:09:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, i am implementing session in a xml-rpc pyramid application, everything works fine, but i don't want to use cookies since i am using xml-rpc clients, and i will handle the session id throuthg xml-rpc calls instead of using cookies, if i put a \n\nbeaker.session.use_cookies = False\n\ninside the pyramid .ini application i got the error shown bellow.\n\nI don't think this is a pyramid problem, since pyramid_beaker is just a wrapper and the error is triggered at SessionObject definition inside session.py \n\nI use Beaker-1.6.4-py2.6.egg\n\nLook at use_cookies = True param.\n\n``` python\n               self.__dict__['_sess'] = Session(req, use_cookies=True,\n                                                 **params)\n```\n\n``` python\nTraceback (most recent call last):\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid-1.3.2-py2.6.egg/pyramid/tweens.py\", line 20, in excview_tween\n    response = handler(request)\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid_tm-0.4-py2.6.egg/pyramid_tm/__init__.py\", line 95, in tm_tween\n    response = handler(request)\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid-1.3.2-py2.6.egg/pyramid/router.py\", line 164, in handle_request\n    response = view_callable(context, request)\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid-1.3.2-py2.6.egg/pyramid/config/views.py\", line 609, in __call__\n    return view(context, request)\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid-1.3.2-py2.6.egg/pyramid/config/views.py\", line 307, in attr_view\n    return view(context, request)\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid-1.3.2-py2.6.egg/pyramid/config/views.py\", line 280, in predicate_wrapper\n    return view(context, request)\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid-1.3.2-py2.6.egg/pyramid/config/views.py\", line 333, in rendered_view\n    result = view(context, request)\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid_rpc-0.3.1-py2.6.egg/pyramid_rpc/api.py\", line 82, in _nonclass_view\n    response = self.mapply(view, params, keywords)\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/pyramid_rpc-0.3.1-py2.6.egg/pyramid_rpc/api.py\", line 137, in mapply\n    return ob(*args)\n  File \"/home/ndiaz/pyramid/Partner/partner/__init__.py\", line 113, in say_hello\n    print request.session\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/Beaker-1.6.4-py2.6.egg/beaker/session.py\", line 677, in __repr__\n    return self._session().__repr__()\n  File \"/home/ndiaz/pyramid/lib/python2.6/site-packages/Beaker-1.6.4-py2.6.egg/beaker/session.py\", line 655, in _session\n    **params)\nTypeError: type object got multiple values for keyword argument 'use_cookies'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/24", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/24/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/24/events", "html_url": "https://github.com/bbangert/beaker/issues/24", "id": 6477294, "node_id": "MDU6SXNzdWU2NDc3Mjk0", "number": 24, "title": "Bad cookies break Beaker", "user": {"login": "wichert", "id": 199657, "node_id": "MDQ6VXNlcjE5OTY1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/199657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wichert", "html_url": "https://github.com/wichert", "followers_url": "https://api.github.com/users/wichert/followers", "following_url": "https://api.github.com/users/wichert/following{/other_user}", "gists_url": "https://api.github.com/users/wichert/gists{/gist_id}", "starred_url": "https://api.github.com/users/wichert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wichert/subscriptions", "organizations_url": "https://api.github.com/users/wichert/orgs", "repos_url": "https://api.github.com/users/wichert/repos", "events_url": "https://api.github.com/users/wichert/events{/privacy}", "received_events_url": "https://api.github.com/users/wichert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-27T16:02:03Z", "updated_at": "2015-11-22T13:04:53Z", "closed_at": "2015-11-22T13:04:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a browser happens to send an odd cookie your way Beaker crashes with this error:\n\n```\n  File \"/home/wichert/lib/buildout/eggs/Beaker-1.6.3-py2.7.egg/beaker/session.py\", line 676, in __contains__\n    return key in self._session()\n  File \"/home/wichert/lib/buildout/eggs/Beaker-1.6.3-py2.7.egg/beaker/session.py\", line 647, in _session\n    **params)\n  File \"/home/wichert/lib/buildout/eggs/Beaker-1.6.3-py2.7.egg/beaker/session.py\", line 149, in __init__\n    self.cookie = Cookie.SimpleCookie(input=cookieheader)\n  File \"/usr/lib/python2.7/Cookie.py\", line 579, in __init__\n    if input: self.load(input)\n  File \"/usr/lib/python2.7/Cookie.py\", line 632, in load\n    self.__ParseString(rawdata)\n  File \"/usr/lib/python2.7/Cookie.py\", line 665, in __ParseString\n    self.__set(K, rval, cval)\n  File \"/usr/lib/python2.7/Cookie.py\", line 585, in __set\n    M.set(key, real_value, coded_value)\n  File \"/usr/lib/python2.7/Cookie.py\", line 460, in set\n    raise CookieError(\"Illegal key value: %s\" % key)\nCookieError: Illegal key value: cb_/zabbix/actionconf.php_parts\n```\n\nThis is essentially [Python bug 2988](http://bugs.python.org/issue2988), which was never properly fixed - instead the broken behaviour was just documented. This means Beaker needs to be able to deal with this manually :(\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/23", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/23/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/23/events", "html_url": "https://github.com/bbangert/beaker/issues/23", "id": 6004607, "node_id": "MDU6SXNzdWU2MDA0NjA3", "number": 23, "title": "Beaker 1.6.3 Files appear to be out of date", "user": {"login": "longda", "id": 320665, "node_id": "MDQ6VXNlcjMyMDY2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/320665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longda", "html_url": "https://github.com/longda", "followers_url": "https://api.github.com/users/longda/followers", "following_url": "https://api.github.com/users/longda/following{/other_user}", "gists_url": "https://api.github.com/users/longda/gists{/gist_id}", "starred_url": "https://api.github.com/users/longda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longda/subscriptions", "organizations_url": "https://api.github.com/users/longda/orgs", "repos_url": "https://api.github.com/users/longda/repos", "events_url": "https://api.github.com/users/longda/events{/privacy}", "received_events_url": "https://api.github.com/users/longda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-02T23:10:40Z", "updated_at": "2012-08-23T18:42:08Z", "closed_at": "2012-08-23T18:42:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, not sure if this is really something to do with you but I thought I'd document it for the devs and users of Beaker.\n\nFor the time being, I'm guessing I just need to manually download/install this since it appears the easy_install distro isn't correct.\n\nLet me know if there's anything I can do to help!\n\nDL\n\nThe full bug report can be found here: https://sourceforge.net/tracker/?func=detail&aid=3553804&group_id=66150&atid=513503\n\nI've traced some functionality I need to the following file:\n\nbeaker/ext/memcached.py\n\nSpecifically, the method _format_key() on about line 98 has been updated to use SHA1 hashing however this is not the version being distributed via easy_install.\n\nThere current code can be seen here:https://github.com/bbangert/beaker/blob/1d051842058aba1aedd6f13c3de50ca13d14bd1d/beaker/ext/memcached.py\n\nHere is the output from trying to update via the console:\n\n$ easy_install -U beaker\nSearching for beaker\nReading http://pypi.python.org/simple/beaker/\nReading http://beaker.groovie.org\nReading http://beaker.rtfd.org/\nBest match: Beaker 1.6.3\nProcessing Beaker-1.6.3-py2.7.egg\nBeaker 1.6.3 is already the active version in easy-install.pth\n\nUsing /var/modwsgi/foo-project/lib/python2.7/site-packages/Beaker-1.6.3-py2.7.egg\nProcessing dependencies for beaker\nFinished processing dependencies for beaker\n\nI've also confirmed the issue by downloading the files directly from the beaker page (http://pypi.python.org/pypi/Beaker/1.6.3) at http://pypi.python.org/packages/source/B/Beaker/Beaker-1.6.3.tar.gz#md5=bd4a986a3cad26d576e7ee77cce86b4f\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/21", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/21/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/21/events", "html_url": "https://github.com/bbangert/beaker/issues/21", "id": 5162985, "node_id": "MDU6SXNzdWU1MTYyOTg1", "number": 21, "title": "Encrypted cookies don't work in Python 3.2", "user": {"login": "kiwidrew", "id": 1371113, "node_id": "MDQ6VXNlcjEzNzExMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1371113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiwidrew", "html_url": "https://github.com/kiwidrew", "followers_url": "https://api.github.com/users/kiwidrew/followers", "following_url": "https://api.github.com/users/kiwidrew/following{/other_user}", "gists_url": "https://api.github.com/users/kiwidrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiwidrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiwidrew/subscriptions", "organizations_url": "https://api.github.com/users/kiwidrew/orgs", "repos_url": "https://api.github.com/users/kiwidrew/repos", "events_url": "https://api.github.com/users/kiwidrew/events{/privacy}", "received_events_url": "https://api.github.com/users/kiwidrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2012-06-20T05:16:23Z", "updated_at": "2015-02-25T17:21:37Z", "closed_at": "2015-02-25T17:20:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that none of the beaker.crypto code is ready for Python 3.  In particular, pbkdf2.py does a bunch of isinstance() checks which enforce that the encryption keys are 'str' objects, and calls encode() on them if not.  This is of course precisely backwards when working with str and bytes in Python 3.\n\nI've tried making a few patches to the code, but this only serves to reveal additional issues, and I don't have the time to prepare a complete patch for now.\n\nIn the meantime, please update the docs to indicate that encrypted cookies (that is, cookie-only sessions) are not supported when running under Python 3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/20", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/20/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/20/events", "html_url": "https://github.com/bbangert/beaker/issues/20", "id": 4985212, "node_id": "MDU6SXNzdWU0OTg1MjEy", "number": 20, "title": "Security improvement: consider avoiding pickle.load", "user": {"login": "FedericoCeratto", "id": 91576, "node_id": "MDQ6VXNlcjkxNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/91576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoCeratto", "html_url": "https://github.com/FedericoCeratto", "followers_url": "https://api.github.com/users/FedericoCeratto/followers", "following_url": "https://api.github.com/users/FedericoCeratto/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoCeratto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoCeratto/subscriptions", "organizations_url": "https://api.github.com/users/FedericoCeratto/orgs", "repos_url": "https://api.github.com/users/FedericoCeratto/repos", "events_url": "https://api.github.com/users/FedericoCeratto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoCeratto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-06-09T14:47:27Z", "updated_at": "2012-06-09T16:16:27Z", "closed_at": "2012-06-09T16:16:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello and thank you for developing Beaker.\n\nThe pickle.loads() [1] method is used on data generated by crypto.aesDecrypt() that can parse an user-submitted cookie. Pickle is considered insecure to be executed on untrusted data [2], [3]\n\nAn attacker that is able to craft a valid encrypted cookie (e.g. by having obtained a leaked copy of encrypt_key or using a vulnerability in aesDecrypt) should have a limited impact, i.e. mangling session data. Pickle might allow such attacker to execute arbitrary code instead. \n\nA solution could be to use json.loads() and json.dumps() instead of pickle.\n\n[1] https://github.com/bbangert/beaker/blob/master/beaker/session.py#L283\n[2] \"\"\"The pickle module is not intended to be secure against erroneous or maliciously constructed data. Never unpickle data received from an untrusted or unauthenticated source.\"\"\"\n[3] http://docs.python.org/library/pickle.html\n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/6", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/6/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/6/events", "html_url": "https://github.com/bbangert/beaker/issues/6", "id": 3461208, "node_id": "MDU6SXNzdWUzNDYxMjA4", "number": 6, "title": "Buggy date calculation in ._delete_cookie", "user": {"login": "mikeorr", "id": 470605, "node_id": "MDQ6VXNlcjQ3MDYwNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/470605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeorr", "html_url": "https://github.com/mikeorr", "followers_url": "https://api.github.com/users/mikeorr/followers", "following_url": "https://api.github.com/users/mikeorr/following{/other_user}", "gists_url": "https://api.github.com/users/mikeorr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeorr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeorr/subscriptions", "organizations_url": "https://api.github.com/users/mikeorr/orgs", "repos_url": "https://api.github.com/users/mikeorr/repos", "events_url": "https://api.github.com/users/mikeorr/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeorr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-03-01T18:40:50Z", "updated_at": "2016-02-29T13:11:18Z", "closed_at": "2012-03-01T18:49:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "`beaker.session.Session._delete_cookie()` contains a buggy date calculation.\n\n```\nexpires = datetime.utcnow().replace(year=2003)\n```\n\nOn February 29th of a leap year this raises:\n\n```\nValueError: day is out of range for month\n```\n\nThe apparent goal is to set a date in the past. Can't it just use a fixed date like '2003-01-01'?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bbangert/beaker/issues/2", "repository_url": "https://api.github.com/repos/bbangert/beaker", "labels_url": "https://api.github.com/repos/bbangert/beaker/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/bbangert/beaker/issues/2/comments", "events_url": "https://api.github.com/repos/bbangert/beaker/issues/2/events", "html_url": "https://github.com/bbangert/beaker/issues/2", "id": 2384800, "node_id": "MDU6SXNzdWUyMzg0ODAw", "number": 2, "title": "Please deprecate bitbucket repository", "user": {"login": "mitchellrj", "id": 147070, "node_id": "MDQ6VXNlcjE0NzA3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/147070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitchellrj", "html_url": "https://github.com/mitchellrj", "followers_url": "https://api.github.com/users/mitchellrj/followers", "following_url": "https://api.github.com/users/mitchellrj/following{/other_user}", "gists_url": "https://api.github.com/users/mitchellrj/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitchellrj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitchellrj/subscriptions", "organizations_url": "https://api.github.com/users/mitchellrj/orgs", "repos_url": "https://api.github.com/users/mitchellrj/repos", "events_url": "https://api.github.com/users/mitchellrj/events{/privacy}", "received_events_url": "https://api.github.com/users/mitchellrj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2011-11-29T14:17:18Z", "updated_at": "2013-03-07T21:26:22Z", "closed_at": "2013-03-07T07:05:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://bitbucket.org/bbangert/beaker/overview\n\nstill says \"Beaker Official Mirror\". There is no immediately obvious reference to the github repository there. I signed up and submitted a pull request months ago, only to realise now that the canonical source is here on github.\n", "performed_via_github_app": null, "score": 1.0}]}