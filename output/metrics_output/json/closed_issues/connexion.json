{"total_count": 412, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/zalando/connexion/issues/1278", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1278/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1278/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1278/events", "html_url": "https://github.com/zalando/connexion/issues/1278", "id": 674228046, "node_id": "MDU6SXNzdWU2NzQyMjgwNDY=", "number": 1278, "title": "Parsing array header of enum schema fails", "user": {"login": "ngoodman90", "id": 12914715, "node_id": "MDQ6VXNlcjEyOTE0NzE1", "avatar_url": "https://avatars2.githubusercontent.com/u/12914715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngoodman90", "html_url": "https://github.com/ngoodman90", "followers_url": "https://api.github.com/users/ngoodman90/followers", "following_url": "https://api.github.com/users/ngoodman90/following{/other_user}", "gists_url": "https://api.github.com/users/ngoodman90/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngoodman90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngoodman90/subscriptions", "organizations_url": "https://api.github.com/users/ngoodman90/orgs", "repos_url": "https://api.github.com/users/ngoodman90/repos", "events_url": "https://api.github.com/users/ngoodman90/events{/privacy}", "received_events_url": "https://api.github.com/users/ngoodman90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-06T11:05:25Z", "updated_at": "2020-08-10T06:51:43Z", "closed_at": "2020-08-10T06:51:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\nWhen specifying array header as enum,\r\nBAD_REQUEST is thrown\r\n\r\n\r\n### Expected behaviour\r\nFor example, if the path /resources/{resource_id} has the header:\r\n\r\n```\r\n- name: providers\r\n   in: header\r\n   required: True\r\n   schema:\r\n     type: array\r\n     items:\r\n       $ref: \"#/components/schemas/Provider\"\r\ncomponents:\r\n  schemas:\r\n    Provider:\r\n      type: string\r\n      enum:\r\n        - GCP\r\n        - AWS\r\n```\r\nThe request:\r\n`curl -X GET \"https://api.example.com/resources/123\" -H  \"accept: application/json\" -H  \"providers: GCP,AWS\"`\r\n\r\n### Actual behaviour\r\n```\r\n{\r\n  \"detail\": \"'G' is not one of ['GCP', 'AWS']\\n\\nFailed validating 'enum' in schema['items']:\\n    \r\n  {'enum': ['GCP',\\n 'AWS',\\n],\\n     \r\n  'type': 'string',\\n     'x-scope': ['']}\\n\\nOn instance[0]:\\n    'G'\",\r\n  \"status\": 400,\r\n  \"title\": \"Bad Request\",\r\n  \"type\": \"about:blank\"\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\nAdd header of type array of enum schema \r\n\r\n\r\n### Additional info:\r\n\r\n`python --version`\r\n\r\n- Python 3.8.3\r\n\r\n`pip show connexion | grep \"^Version\\:\"`\r\n\r\n- Version: 2.7.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1272", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1272/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1272/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1272/events", "html_url": "https://github.com/zalando/connexion/issues/1272", "id": 673071259, "node_id": "MDU6SXNzdWU2NzMwNzEyNTk=", "number": 1272, "title": "Unable to run flask app because unexpected behavior when app is run through terminal command.", "user": {"login": "Abdullahabid3691", "id": 45850839, "node_id": "MDQ6VXNlcjQ1ODUwODM5", "avatar_url": "https://avatars2.githubusercontent.com/u/45850839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abdullahabid3691", "html_url": "https://github.com/Abdullahabid3691", "followers_url": "https://api.github.com/users/Abdullahabid3691/followers", "following_url": "https://api.github.com/users/Abdullahabid3691/following{/other_user}", "gists_url": "https://api.github.com/users/Abdullahabid3691/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abdullahabid3691/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abdullahabid3691/subscriptions", "organizations_url": "https://api.github.com/users/Abdullahabid3691/orgs", "repos_url": "https://api.github.com/users/Abdullahabid3691/repos", "events_url": "https://api.github.com/users/Abdullahabid3691/events{/privacy}", "received_events_url": "https://api.github.com/users/Abdullahabid3691/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-04T20:46:56Z", "updated_at": "2020-08-05T17:06:49Z", "closed_at": "2020-08-05T17:06:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\n**Scenario - 1**: If I launch my app through Pycharm run/debug tool **Everything works fine** (flask app runs including the API defination from my agreement_api/openapi/specification.yaml file).\r\n\r\n**Scenario - 2** : But executing python agreement_api/app.py (the main script which contains the app instance) through terminal gives me an error while binding the specification.yaml API with my flask app. to be specific at `connexion_app.add_api(\"specification.yaml\")`:\r\n\r\n\r\n\r\n### Expected behaviour\r\nThe flask app should be up and running.\r\n\r\n\r\n### Actual behaviour\r\napp's server is unable to start because of error: \r\n`AttributeError: module 'agreement_api.controllers.agreement_controller' has no attribute 'read_agreements'`\r\n\r\n\r\n### Steps to reproduce\r\nsee **`Scenario - 2`** section.\r\n\r\n\r\n### Additional info:\r\nClearly the above error message tells me that the method \"read_agreeements\" doesn't exist but believe me it does (because Scenario #1 is working fine and there are no typos, etc) My directory structure is as follows:\r\n\r\nProject\r\n\r\n> agreement_api\r\n\r\n> > controllers\r\n> > > agreement_controller.py\r\n\r\n> > models\r\n\r\n> > openapi\r\n> > > specification.yaml\r\n\r\n> > app.py\r\n\r\n> Dockerfile\r\n>  Pipfile\r\n> License\r\n > > ...\r\n\r\n\r\n**agreement_controller.py**\r\n\r\n```\r\n....\r\ndef read_agreements():\r\n    agreements = Agreement.query.order_by(Agreement.agreement_status).all()\r\n\r\n    agreement_schema = AgreementSchema(many=True)\r\n    return agreement_schema.dump(agreements), 200\r\n....\r\n```\r\n**specification.yaml**\r\n```\r\nservers:\r\n  - url: /api\r\npaths:\r\n  /agreement:\r\n    get:\r\n      tags:\r\n        - Agreement\r\n      summary: Read the list of agreements\r\n      description: Read the list of agreements\r\n      x-openapi-router-controller: agreement_api.controllers.agreement_controller\r\n      operationId: read_agreements\r\n```\r\n\r\n**app.py**\r\n\r\n```\r\n_, connexion_app = create_app()\r\n\r\napp = connexion_app.app  # Flask instance initialized by Connexion\r\n\r\nDB = SQLAlchemy(app)\r\nDB.create_all()\r\n\r\nMA = Marshmallow(app)\r\n\r\nconnexion_app.add_api(\"specification.yaml\")\r\n```\r\n\r\nI have tried setting **FLASK_APP** variable, but it didn't work.\r\n\r\npipenv with following dependencies:\r\n**Flask==1.1.1**\r\n**connexion==2.7.0**\r\n**openapi: 3.0.1**\r\n\r\n[complete error log here](https://github.com/zalando/connexion/files/5024323/error-log.txt)\r\n\r\nThe output of the commands:\r\n- `python --version`: `Python 3.6.9`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1267", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1267/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1267/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1267/events", "html_url": "https://github.com/zalando/connexion/issues/1267", "id": 659792758, "node_id": "MDU6SXNzdWU2NTk3OTI3NTg=", "number": 1267, "title": "When validate_responses and not additionalProperties, additional properties should cause an error", "user": {"login": "airbornemint", "id": 1645207, "node_id": "MDQ6VXNlcjE2NDUyMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1645207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airbornemint", "html_url": "https://github.com/airbornemint", "followers_url": "https://api.github.com/users/airbornemint/followers", "following_url": "https://api.github.com/users/airbornemint/following{/other_user}", "gists_url": "https://api.github.com/users/airbornemint/gists{/gist_id}", "starred_url": "https://api.github.com/users/airbornemint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airbornemint/subscriptions", "organizations_url": "https://api.github.com/users/airbornemint/orgs", "repos_url": "https://api.github.com/users/airbornemint/repos", "events_url": "https://api.github.com/users/airbornemint/events{/privacy}", "received_events_url": "https://api.github.com/users/airbornemint/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-18T01:13:36Z", "updated_at": "2020-07-18T01:19:59Z", "closed_at": "2020-07-18T01:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nIf I initialize connexion with `validate_responses=True` and then set `additionalProperties: false` in my schema\u2026\r\n\r\n### Expected behaviour\r\n\r\n\u2026 I expect to get an error if my code returns a property not included in the schema (an additional property), but\u2026\r\n\r\n### Actual behaviour\r\n\r\n\u2026 what happens instead is that connexion silently removes the additional property from the response.\r\n\r\n### Steps to reproduce\r\n\r\nI will amend later if I have the time to write a unit test. Until then, it should be simple to repro from `examples/openapi3/methodresolver` by adding `validate_responses`, `additionalProperties`, an an additional property to `Pet`\r\n\r\n### Additional info:\r\n\r\n* Python 3.7.7\r\n* Connexion version: 2.7.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1249", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1249/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1249/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1249/events", "html_url": "https://github.com/zalando/connexion/issues/1249", "id": 636672643, "node_id": "MDU6SXNzdWU2MzY2NzI2NDM=", "number": 1249, "title": "\"['var_string_value'] is not of type 'string' - 'var_name'", "user": {"login": "AndyEWang", "id": 34705558, "node_id": "MDQ6VXNlcjM0NzA1NTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/34705558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyEWang", "html_url": "https://github.com/AndyEWang", "followers_url": "https://api.github.com/users/AndyEWang/followers", "following_url": "https://api.github.com/users/AndyEWang/following{/other_user}", "gists_url": "https://api.github.com/users/AndyEWang/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyEWang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyEWang/subscriptions", "organizations_url": "https://api.github.com/users/AndyEWang/orgs", "repos_url": "https://api.github.com/users/AndyEWang/repos", "events_url": "https://api.github.com/users/AndyEWang/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyEWang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-11T02:38:19Z", "updated_at": "2020-07-15T02:55:45Z", "closed_at": "2020-06-29T09:03:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI define an API like following.\r\n```openapi: 3.0.1\r\ninfo:\r\n  title: XXX\r\n  description: XXX\r\n  version: 2.0.0\r\nservers:\r\n- url: /v1\r\npaths:\r\n  /do/something/{path_var}:\r\n    put:\r\n      summary: do something\r\n      operationId: do_something\r\n      parameters:\r\n      - name: path_var\r\n        in: path\r\n        required: true\r\n        schema:\r\n          type: string\r\n      requestBody:\r\n        content:\r\n          multipart/form-data:\r\n            schema:\r\n              properties:\r\n                var_name:\r\n                  type: string\r\n          application/x-www-form-urlencoded:\r\n            schema:\r\n              properties:\r\n                var_name:\r\n                  type: string\r\n      responses:\r\n.................................\r\n      x-openapi-router-controller: xxx.do_something\r\n```\r\n\r\nAfter API server is running, I try to access this API with following command.\r\n```\r\ncurl -X PUT \"http://XXX/v1/do/something/pathvarvalue\" -H \"accept: application/json\" -H \"Content-Type: multipart/form-data\" -F var_name=var_string_value\r\n```\r\n\r\n### Expected behaviour\r\nEverything should work well.\r\n\r\n\r\n### Actual behaviour\r\nFollowing error appears.\r\n{\r\n  \"detail\": \"['var_string_value'] is not of type 'string' - 'var_name'\",\r\n  \"status\": 400,\r\n  \"title\": \"Bad Request\",\r\n  \"type\": \"about:blank\"\r\n}\r\n\r\n\r\n\r\n### Steps to reproduce\r\nYou can write your own api spec with \"openapi: 3.0.1\", then both multipart/form-data and application/x-www-form-urlencoded cannot work.\r\n\r\n\r\n### Additional info:\r\n\r\npython --version\r\nPython 3.6.8\r\n\r\nconnexion==2.7.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1240", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1240/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1240/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1240/events", "html_url": "https://github.com/zalando/connexion/issues/1240", "id": 620568152, "node_id": "MDU6SXNzdWU2MjA1NjgxNTI=", "number": 1240, "title": "Version `>=2.7.0` results in `2018.0.dev1`", "user": {"login": "gaykg", "id": 57601467, "node_id": "MDQ6VXNlcjU3NjAxNDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/57601467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaykg", "html_url": "https://github.com/gaykg", "followers_url": "https://api.github.com/users/gaykg/followers", "following_url": "https://api.github.com/users/gaykg/following{/other_user}", "gists_url": "https://api.github.com/users/gaykg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaykg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaykg/subscriptions", "organizations_url": "https://api.github.com/users/gaykg/orgs", "repos_url": "https://api.github.com/users/gaykg/repos", "events_url": "https://api.github.com/users/gaykg/events{/privacy}", "received_events_url": "https://api.github.com/users/gaykg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T23:31:25Z", "updated_at": "2020-05-19T06:36:33Z", "closed_at": "2020-05-19T06:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nWhen specifying connexion version `>=2.7.0` version `2018.0.dev1` is imported\r\n\r\n\r\n### Expected behaviour\r\nVersion 2.7.0 or greater is imported\r\n\r\n\r\n### Actual behaviour\r\nVersion `2018.0.dev1` is imported\r\n\r\n\r\n### Steps to reproduce\r\nCreate a Pipfile and specify `connexion = \">=2.7.0\"`\r\nRun `pip install`\r\n\r\n\r\n### Additional info:\r\nVersion `2018.0.dev1` is imported due to https://pypi.org/project/connexion/#history\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1221", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1221/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1221/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1221/events", "html_url": "https://github.com/zalando/connexion/issues/1221", "id": 603365057, "node_id": "MDU6SXNzdWU2MDMzNjUwNTc=", "number": 1221, "title": "response marshalling", "user": {"login": "vc-utelly", "id": 499021, "node_id": "MDQ6VXNlcjQ5OTAyMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/499021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vc-utelly", "html_url": "https://github.com/vc-utelly", "followers_url": "https://api.github.com/users/vc-utelly/followers", "following_url": "https://api.github.com/users/vc-utelly/following{/other_user}", "gists_url": "https://api.github.com/users/vc-utelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/vc-utelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vc-utelly/subscriptions", "organizations_url": "https://api.github.com/users/vc-utelly/orgs", "repos_url": "https://api.github.com/users/vc-utelly/repos", "events_url": "https://api.github.com/users/vc-utelly/events{/privacy}", "received_events_url": "https://api.github.com/users/vc-utelly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-20T16:23:09Z", "updated_at": "2020-04-24T06:34:58Z", "closed_at": "2020-04-24T06:34:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to ask connexion to only return fields specified in the openapi spec\r\n\r\nI am talking about something like:\r\n\r\nhttps://flask-restplus.readthedocs.io/en/stable/marshalling.html\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1215", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1215/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1215/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1215/events", "html_url": "https://github.com/zalando/connexion/issues/1215", "id": 600499200, "node_id": "MDU6SXNzdWU2MDA0OTkyMDA=", "number": 1215, "title": "Dead link in README to a blog post", "user": {"login": "dtilchin", "id": 1000277, "node_id": "MDQ6VXNlcjEwMDAyNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1000277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtilchin", "html_url": "https://github.com/dtilchin", "followers_url": "https://api.github.com/users/dtilchin/followers", "following_url": "https://api.github.com/users/dtilchin/following{/other_user}", "gists_url": "https://api.github.com/users/dtilchin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtilchin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtilchin/subscriptions", "organizations_url": "https://api.github.com/users/dtilchin/orgs", "repos_url": "https://api.github.com/users/dtilchin/repos", "events_url": "https://api.github.com/users/dtilchin/events{/privacy}", "received_events_url": "https://api.github.com/users/dtilchin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hjacobs", "id": 510328, "node_id": "MDQ6VXNlcjUxMDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/510328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjacobs", "html_url": "https://github.com/hjacobs", "followers_url": "https://api.github.com/users/hjacobs/followers", "following_url": "https://api.github.com/users/hjacobs/following{/other_user}", "gists_url": "https://api.github.com/users/hjacobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjacobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjacobs/subscriptions", "organizations_url": "https://api.github.com/users/hjacobs/orgs", "repos_url": "https://api.github.com/users/hjacobs/repos", "events_url": "https://api.github.com/users/hjacobs/events{/privacy}", "received_events_url": "https://api.github.com/users/hjacobs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hjacobs", "id": 510328, "node_id": "MDQ6VXNlcjUxMDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/510328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjacobs", "html_url": "https://github.com/hjacobs", "followers_url": "https://api.github.com/users/hjacobs/followers", "following_url": "https://api.github.com/users/hjacobs/following{/other_user}", "gists_url": "https://api.github.com/users/hjacobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjacobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjacobs/subscriptions", "organizations_url": "https://api.github.com/users/hjacobs/orgs", "repos_url": "https://api.github.com/users/hjacobs/repos", "events_url": "https://api.github.com/users/hjacobs/events{/privacy}", "received_events_url": "https://api.github.com/users/hjacobs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-15T18:23:19Z", "updated_at": "2020-04-17T21:52:10Z", "closed_at": "2020-04-17T21:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nThe link \"Zalando Tech blog post API First\" in [README.rst](https://github.com/zalando/connexion/blame/master/README.rst#L73) is dead (404). There is an [archive.org snapshot](https://web.archive.org/web/20160304091414/https://tech.zalando.com/blog/on-apis-and-the-zalando-api-guild/), for reference.\r\n\r\nI'd open a PR to just remove it, but I'm not sure what the authors' intentions are.\r\n\r\n### Expected behaviour\r\n\r\nAll links in README.rst lead to a functional page\r\n\r\n### Actual behaviour\r\n\r\nThe link \"Zalando Tech blog post API First\" leads to a 404 page.\r\n\r\n### Steps to reproduce\r\n\r\nClick the \"API First\" link in the README (https://tech.zalando.com/blog/on-apis-and-the-zalando-api-guild/)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1210", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1210/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1210/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1210/events", "html_url": "https://github.com/zalando/connexion/issues/1210", "id": 598002220, "node_id": "MDU6SXNzdWU1OTgwMDIyMjA=", "number": 1210, "title": "Getting request header in handler function", "user": {"login": "kangame", "id": 10169431, "node_id": "MDQ6VXNlcjEwMTY5NDMx", "avatar_url": "https://avatars1.githubusercontent.com/u/10169431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kangame", "html_url": "https://github.com/kangame", "followers_url": "https://api.github.com/users/kangame/followers", "following_url": "https://api.github.com/users/kangame/following{/other_user}", "gists_url": "https://api.github.com/users/kangame/gists{/gist_id}", "starred_url": "https://api.github.com/users/kangame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kangame/subscriptions", "organizations_url": "https://api.github.com/users/kangame/orgs", "repos_url": "https://api.github.com/users/kangame/repos", "events_url": "https://api.github.com/users/kangame/events{/privacy}", "received_events_url": "https://api.github.com/users/kangame/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-10T17:28:54Z", "updated_at": "2020-04-14T14:56:57Z", "closed_at": "2020-04-14T14:56:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nAm struggling to have parameter and jwt token (via header) in this basic example:\r\n\r\n### app.py\r\n```\r\ndef get_param_and_token(**kwargs):\r\n    try:\r\n        auth = connexion.request.headers[\"Authorization\"]\r\n        print(\"-------------------------------------------------\" + str(auth))\r\n        data = kwargs.get(\"body\")\r\n        response = my_logic.compute(data)\r\n        return web.json_response(response)\r\n    except Exception as ex:\r\n        print(\"Exception : {}\".format(ex))\r\n        return web.HTTPInternalServerError()\r\n\r\nconnexion_app = connexion.AioHttpApp(__name__, specification_dir='my-api/src/main/resources')\r\nconnexion_app.add_api('my-api.yaml', resolver=RestyResolver('api'), validate_responses=True)\r\n\r\nif __name__ == '__main__':\r\n    port = 8080\r\n    if len(sys.argv) > 1:\r\n        port = sys.argv[1]\r\n    # run our standalone aioHttp server\r\n    connexion_app.run(port=port)\r\n```\r\n### and my-api.yaml\r\n```\r\npaths:\r\n  /test-get-token:\r\n    post:\r\n      operationId: app.get_param_and_token\r\n      tags:\r\n        - \"create\"\r\n      summary: \"Get param and token from request\"\r\n      description: \"\"\r\n      security:\r\n        - bearerAuth: []\r\n      requestBody:\r\n        description: \"Param\"\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/ParamDescription\"\r\n```\r\n### Got the following error:\r\n\r\n\" Working outside of request context.\r\n\r\nThis typically means that you attempted to use functionality that needed\r\nan active HTTP request.  Consult the documentation on testing for\r\ninformation about how to avoid this problem.\"\r\n\r\n### Working with\r\nopenapi: \"3.0.0\"\r\nconnexion==2.5.1\r\nPython 3.6.9\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1199", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1199/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1199/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1199/events", "html_url": "https://github.com/zalando/connexion/issues/1199", "id": 591829432, "node_id": "MDU6SXNzdWU1OTE4Mjk0MzI=", "number": 1199, "title": "Copyright infringement in utils.py", "user": {"login": "MalcolmSmithUK", "id": 2572161, "node_id": "MDQ6VXNlcjI1NzIxNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2572161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MalcolmSmithUK", "html_url": "https://github.com/MalcolmSmithUK", "followers_url": "https://api.github.com/users/MalcolmSmithUK/followers", "following_url": "https://api.github.com/users/MalcolmSmithUK/following{/other_user}", "gists_url": "https://api.github.com/users/MalcolmSmithUK/gists{/gist_id}", "starred_url": "https://api.github.com/users/MalcolmSmithUK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MalcolmSmithUK/subscriptions", "organizations_url": "https://api.github.com/users/MalcolmSmithUK/orgs", "repos_url": "https://api.github.com/users/MalcolmSmithUK/repos", "events_url": "https://api.github.com/users/MalcolmSmithUK/events{/privacy}", "received_events_url": "https://api.github.com/users/MalcolmSmithUK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-01T11:05:57Z", "updated_at": "2020-04-01T14:24:34Z", "closed_at": "2020-04-01T11:11:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\n\r\nA Black Duck scan has highlighted a copyright infringement on https://github.com/zalando/connexion/blame/master/connexion/utils.py#L65.  \r\n\r\n### Expected behaviour\r\n\r\nThe code is no longer a copyright infringement.\r\n\r\n### Actual behaviour\r\n\r\nThe code is a copyright infringement.\r\n\r\n### Steps to reproduce\r\n\r\n... run another Black Duck scan?\r\n\r\n### Additional info:\r\n\r\nNone\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1196", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1196/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1196/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1196/events", "html_url": "https://github.com/zalando/connexion/issues/1196", "id": 590443135, "node_id": "MDU6SXNzdWU1OTA0NDMxMzU=", "number": 1196, "title": "my flask not working ", "user": {"login": "sourav83", "id": 62857395, "node_id": "MDQ6VXNlcjYyODU3Mzk1", "avatar_url": "https://avatars2.githubusercontent.com/u/62857395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourav83", "html_url": "https://github.com/sourav83", "followers_url": "https://api.github.com/users/sourav83/followers", "following_url": "https://api.github.com/users/sourav83/following{/other_user}", "gists_url": "https://api.github.com/users/sourav83/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourav83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourav83/subscriptions", "organizations_url": "https://api.github.com/users/sourav83/orgs", "repos_url": "https://api.github.com/users/sourav83/repos", "events_url": "https://api.github.com/users/sourav83/events{/privacy}", "received_events_url": "https://api.github.com/users/sourav83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-30T16:55:27Z", "updated_at": "2020-03-31T03:18:03Z", "closed_at": "2020-03-31T03:18:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1188", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1188/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1188/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1188/events", "html_url": "https://github.com/zalando/connexion/issues/1188", "id": 587654926, "node_id": "MDU6SXNzdWU1ODc2NTQ5MjY=", "number": 1188, "title": "How to access tokeninfo response in handler function?", "user": {"login": "mnylen", "id": 49331, "node_id": "MDQ6VXNlcjQ5MzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/49331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnylen", "html_url": "https://github.com/mnylen", "followers_url": "https://api.github.com/users/mnylen/followers", "following_url": "https://api.github.com/users/mnylen/following{/other_user}", "gists_url": "https://api.github.com/users/mnylen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnylen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnylen/subscriptions", "organizations_url": "https://api.github.com/users/mnylen/orgs", "repos_url": "https://api.github.com/users/mnylen/repos", "events_url": "https://api.github.com/users/mnylen/events{/privacy}", "received_events_url": "https://api.github.com/users/mnylen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-25T12:16:59Z", "updated_at": "2020-04-29T18:10:19Z", "closed_at": "2020-04-23T21:01:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it somehow possible to access/pass the full oauth tokeninfo response to the handler function?\r\n\r\nWe have added some non-standard fields to our tokeninfo response and it'd be nice to be able to pass them to the handler function.\r\n\r\nRight now it seems only the `sub` field from the response can be passed to the handler function as `user` argument. Would it be possible to add similar support for the whole tokeninfo response?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1187", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1187/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1187/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1187/events", "html_url": "https://github.com/zalando/connexion/issues/1187", "id": 585830636, "node_id": "MDU6SXNzdWU1ODU4MzA2MzY=", "number": 1187, "title": "Finding operation on Connexion API by operation_id", "user": {"login": "fosrias", "id": 73336, "node_id": "MDQ6VXNlcjczMzM2", "avatar_url": "https://avatars3.githubusercontent.com/u/73336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fosrias", "html_url": "https://github.com/fosrias", "followers_url": "https://api.github.com/users/fosrias/followers", "following_url": "https://api.github.com/users/fosrias/following{/other_user}", "gists_url": "https://api.github.com/users/fosrias/gists{/gist_id}", "starred_url": "https://api.github.com/users/fosrias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fosrias/subscriptions", "organizations_url": "https://api.github.com/users/fosrias/orgs", "repos_url": "https://api.github.com/users/fosrias/repos", "events_url": "https://api.github.com/users/fosrias/events{/privacy}", "received_events_url": "https://api.github.com/users/fosrias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-22T22:38:12Z", "updated_at": "2020-03-31T19:48:08Z", "closed_at": "2020-03-31T19:48:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I do not see a helper method on a connection API to be able to get an operation on an API based on its operation_id. Is there such a method?\r\n\r\nIf not, would you be open to adding a PR to add such a helper method?\r\n\r\nNeed this to simplify generating and adding links and URI templates into a response.\r\n\r\nThx.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1182", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1182/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1182/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1182/events", "html_url": "https://github.com/zalando/connexion/issues/1182", "id": 583221927, "node_id": "MDU6SXNzdWU1ODMyMjE5Mjc=", "number": 1182, "title": "Python 3.8 asyncio.coroutine deprecated", "user": {"login": "szborows", "id": 1025646, "node_id": "MDQ6VXNlcjEwMjU2NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1025646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szborows", "html_url": "https://github.com/szborows", "followers_url": "https://api.github.com/users/szborows/followers", "following_url": "https://api.github.com/users/szborows/following{/other_user}", "gists_url": "https://api.github.com/users/szborows/gists{/gist_id}", "starred_url": "https://api.github.com/users/szborows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szborows/subscriptions", "organizations_url": "https://api.github.com/users/szborows/orgs", "repos_url": "https://api.github.com/users/szborows/repos", "events_url": "https://api.github.com/users/szborows/events{/privacy}", "received_events_url": "https://api.github.com/users/szborows/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-17T18:43:08Z", "updated_at": "2020-04-25T14:30:22Z", "closed_at": "2020-04-25T14:30:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\n\r\nIn Python 3.8 `@asyncio.coroutine` was deprecated. It's gonna be removed in Python 3.10. I saw other PRs that stop using `loop` parameter, but still `@asyncio.coroutine` is used in multiple places.\r\n\r\n### Expected behaviour\r\n\r\nNo warnings should be displayed when using connexion.\r\n\r\n### Actual behaviour\r\n\r\n```\r\n/builds/[redacted]/.tox/py38/lib/python3.8/site-packages/connexion/apis/aiohttp_api.py:48\r\n  /builds/[redacted]/.tox/py38/lib/python3.8/site-packages/connexion/apis/aiohttp_api.py:48: DeprecationWarning: \"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead\r\n    def problems_middleware(request, handler):\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nRun any tests on Python 3.8 (requirements we use: `connexion[aiohttp, swagger-ui]==2.6.0`\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`: `Python 3.8.2`\r\n- `pip show connexion | grep \"^Version\\:\"`: `Version: 2.6.0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1157", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1157/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1157/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1157/events", "html_url": "https://github.com/zalando/connexion/issues/1157", "id": 566412993, "node_id": "MDU6SXNzdWU1NjY0MTI5OTM=", "number": 1157, "title": "How to use HTTPS ?", "user": {"login": "rudyces", "id": 61157321, "node_id": "MDQ6VXNlcjYxMTU3MzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/61157321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rudyces", "html_url": "https://github.com/rudyces", "followers_url": "https://api.github.com/users/rudyces/followers", "following_url": "https://api.github.com/users/rudyces/following{/other_user}", "gists_url": "https://api.github.com/users/rudyces/gists{/gist_id}", "starred_url": "https://api.github.com/users/rudyces/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rudyces/subscriptions", "organizations_url": "https://api.github.com/users/rudyces/orgs", "repos_url": "https://api.github.com/users/rudyces/repos", "events_url": "https://api.github.com/users/rudyces/events{/privacy}", "received_events_url": "https://api.github.com/users/rudyces/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-17T16:40:20Z", "updated_at": "2020-02-21T15:42:30Z", "closed_at": "2020-02-21T15:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI made a connexion API and i do not succeed to go from HTTP to HTTPS\r\nIs it even possible ? I don't see any exemples on it.\r\n\r\nHere is the entrypoint of my API:\r\n\r\n\r\n```\r\ndef main():\r\n    flask_app = connexion.FlaskApp(\r\n        __name__,\r\n        port=9090,\r\n        specification_dir='test/')\r\n\r\n    flask_app.add_api(TEST_FILE)\r\n\r\n    if flask_app.app.config['ENV'] == 'prod':\r\n        serve(flask_app, port=9090)\r\n    else:\r\n        flask_app.run()\r\n\r\n```\r\n\r\n\r\nIf i can add `ssl_context=context` (like in flask) somewhere it will be perfect but I cannot see where to put it.\r\n\r\nDo I need to edit my schemes in my swagger files too ?\r\n\r\nThank you for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1154", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1154/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1154/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1154/events", "html_url": "https://github.com/zalando/connexion/issues/1154", "id": 565723801, "node_id": "MDU6SXNzdWU1NjU3MjM4MDE=", "number": 1154, "title": "Cache a pandas DataFrame with Flask-Cache", "user": {"login": "PickHub", "id": 6632368, "node_id": "MDQ6VXNlcjY2MzIzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6632368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PickHub", "html_url": "https://github.com/PickHub", "followers_url": "https://api.github.com/users/PickHub/followers", "following_url": "https://api.github.com/users/PickHub/following{/other_user}", "gists_url": "https://api.github.com/users/PickHub/gists{/gist_id}", "starred_url": "https://api.github.com/users/PickHub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PickHub/subscriptions", "organizations_url": "https://api.github.com/users/PickHub/orgs", "repos_url": "https://api.github.com/users/PickHub/repos", "events_url": "https://api.github.com/users/PickHub/events{/privacy}", "received_events_url": "https://api.github.com/users/PickHub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-15T09:37:07Z", "updated_at": "2020-02-28T13:22:23Z", "closed_at": "2020-02-28T13:22:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI'm getting an error when using FlaskCache with Connexion. Are there any alternatives?\r\n\r\nI have a function that reads a CSV and creates a pandas DataFrame. Instead of doing that for every request I'd like to cache the DataFrame for multiple requests.\r\n\r\n### Actual behaviour\r\nI'm creating the cache as follows:\r\n\r\n```\r\nfrom flask.ext.cache import Cache\r\n\r\napp = connexion.App(__name__, swagger_ui=True)\r\ncache = Cache(app,config={'CACHE_TYPE': 'simple'})\r\n```\r\n\r\nThis brings the following error in \"flask_caching\\__init__.py\", line 166:\r\n`base_config = app.config.copy()`\r\nAttributeError: 'App' object has no attribute 'config'\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` 3.6.5\r\n- `pip show connexion | grep \"^Version\\:\"` 1.0.129\r\n- Windows 10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1145", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1145/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1145/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1145/events", "html_url": "https://github.com/zalando/connexion/issues/1145", "id": 559764787, "node_id": "MDU6SXNzdWU1NTk3NjQ3ODc=", "number": 1145, "title": "connexion is ignoring x-tokenInfoUrl or x-tokenInfoFunc when using openapi3.0", "user": {"login": "EricDales", "id": 5948071, "node_id": "MDQ6VXNlcjU5NDgwNzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5948071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricDales", "html_url": "https://github.com/EricDales", "followers_url": "https://api.github.com/users/EricDales/followers", "following_url": "https://api.github.com/users/EricDales/following{/other_user}", "gists_url": "https://api.github.com/users/EricDales/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricDales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricDales/subscriptions", "organizations_url": "https://api.github.com/users/EricDales/orgs", "repos_url": "https://api.github.com/users/EricDales/repos", "events_url": "https://api.github.com/users/EricDales/events{/privacy}", "received_events_url": "https://api.github.com/users/EricDales/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-04T14:42:21Z", "updated_at": "2020-02-21T15:36:49Z", "closed_at": "2020-02-21T15:36:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nconnexion is ignoring x-tokenInfoUrl or x-tokenInfoFunc when using openapi 3.0 spec\r\n\r\n\r\n### Expected behaviour\r\nI want to apply a client credential security scheme. connexion should use x-tokenInfoUrl or x-tokenInfoFunc to verify the token. \r\nHere is the spec:\r\n```\r\ncomponents:\r\n  securitySchemes:\r\n    myoauthprovider:\r\n      type: oauth2\r\n      flows:\r\n        clientCredentials:\r\n          tokenUrl: \"{{accesstoken_url}}\"\r\n          x-tokenInfoUrl: \"{{tokeninfo_url}}\"\r\n          scopes:\r\n            openid: Openid scope\r\n            profile: Profile scope\r\n```\r\n### Actual behaviour\r\nWether x-tokenInfoUrl or x-tokenInfoFunc is used, connexion is starting with message:\r\n```\r\n... x-tokenInfoFunc missing\r\n... x-tokenInfoFunc missing\r\n... x-tokenInfoFunc missing\r\n... x-tokenInfoFunc missing\r\n... x-tokenInfoFunc missing\r\n```\r\nAny attempt to request the api with a valid token is rejected with a 401. \r\n```\r\n{\r\n  \"detail\": \"No authorization token provided\",\r\n  \"status\": 401,\r\n  \"title\": \"Unauthorized\",\r\n  \"type\": \"about:blank\"\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n```\r\n$ python --version\r\nPython 3.7.3\r\n```\r\n\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n```\r\n$ pip show connexion | grep \"^Version\\:\"\r\nVersion: 2.5.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1141", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1141/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1141/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1141/events", "html_url": "https://github.com/zalando/connexion/issues/1141", "id": 555089423, "node_id": "MDU6SXNzdWU1NTUwODk0MjM=", "number": 1141, "title": "Request: collection_endpoint_name should route to 'get' function, not 'search' function", "user": {"login": "caffeinatedMike", "id": 22151742, "node_id": "MDQ6VXNlcjIyMTUxNzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/22151742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caffeinatedMike", "html_url": "https://github.com/caffeinatedMike", "followers_url": "https://api.github.com/users/caffeinatedMike/followers", "following_url": "https://api.github.com/users/caffeinatedMike/following{/other_user}", "gists_url": "https://api.github.com/users/caffeinatedMike/gists{/gist_id}", "starred_url": "https://api.github.com/users/caffeinatedMike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caffeinatedMike/subscriptions", "organizations_url": "https://api.github.com/users/caffeinatedMike/orgs", "repos_url": "https://api.github.com/users/caffeinatedMike/repos", "events_url": "https://api.github.com/users/caffeinatedMike/events{/privacy}", "received_events_url": "https://api.github.com/users/caffeinatedMike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-25T14:06:12Z", "updated_at": "2020-01-26T13:53:17Z", "closed_at": "2020-01-26T13:53:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reviewing the `RestyResolver` and the sibling `MethodViewResolver` code and I'm curious why it defaults to the `search` function of the `MethodView` class. In following true REST conventions doesn't it make more sense for an empty GET `/something` endpoint to be routed to the `MethodView`'s `get` function? That way all function names within the class are REST verbs.\n\nI get that that would mean both `/something/{abc}` and `/something` would route to the same function, but it should be the developer's responsibility to provide a parameter in the `get` function that defaults to None.\n\nThoughts? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1137", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1137/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1137/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1137/events", "html_url": "https://github.com/zalando/connexion/issues/1137", "id": 554419122, "node_id": "MDU6SXNzdWU1NTQ0MTkxMjI=", "number": 1137, "title": "v2.4+ silently removes additionalProperties from nested objects", "user": {"login": "mattspring", "id": 43760242, "node_id": "MDQ6VXNlcjQzNzYwMjQy", "avatar_url": "https://avatars2.githubusercontent.com/u/43760242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattspring", "html_url": "https://github.com/mattspring", "followers_url": "https://api.github.com/users/mattspring/followers", "following_url": "https://api.github.com/users/mattspring/following{/other_user}", "gists_url": "https://api.github.com/users/mattspring/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattspring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattspring/subscriptions", "organizations_url": "https://api.github.com/users/mattspring/orgs", "repos_url": "https://api.github.com/users/mattspring/repos", "events_url": "https://api.github.com/users/mattspring/events{/privacy}", "received_events_url": "https://api.github.com/users/mattspring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413500, "node_id": "MDU6TGFiZWwyMTM0MTM1MDA=", "url": "https://api.github.com/repos/zalando/connexion/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-01-23T21:32:31Z", "updated_at": "2020-01-29T08:24:49Z", "closed_at": "2020-01-29T08:24:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nThis change introduced new behavior that silently removes nested (i.e. not top-level) properties from request bodies when they aren't explicitly declared in the `properties` block, even if `additionalProperties` is `true` (implicitly or explicitly): https://github.com/zalando/connexion/commit/54e50f22787c814caf52f45521991da02ff5f84f#diff-476ae7e600ebfcb9bae2b8199fdd669bR325\r\n\r\n### Expected behaviour\r\nAll object properties are included in the sanitized object unless its schema explicitly sets `additionalProperties: false`\r\n\r\n### Actual behaviour\r\nNested object properties are removed from the request body if a `properties` block is present in the object's schema unless they are explicitly declared in the object's `properties` block.\r\n\r\n### Steps to reproduce\r\nyaml:\r\n```\r\ncomponents:\r\n  schemas:\r\n    FooBar:\r\n      type: object\r\n      additionalProperties: true\r\n      properties:\r\n        foo:\r\n          type: string\r\n\r\npaths:\r\n  /foo:\r\n    post:\r\n      x-openapi-router-controller: app.controllers.foo\r\n      operationId: foo\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              additionalProperties: true\r\n              properties:\r\n                bar: $ref: '#/components/schemas/FooBar'\r\n```\r\ncall:\r\n```\r\ncurl -XPOST -d'{\r\n  \"bar\": {\"foo\": \"foo\", \"qux\": \"qux\"},\r\n  \"baz\": \"whatever\"\r\n}' /foo\r\n```\r\ncontroller:\r\n```\r\ndef foo(body: dict):\r\n    assert 'bar' in body         # no problem\r\n    assert 'baz' in body         # additionalProperty also fine at top level\r\n    assert 'foo' in body['bar']  # chill chill chill, everything as expected\r\n    assert 'qux' in body['bar']  # NOPE! WHERE MY DATA AT THO?!\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n```\r\nPython 3.7.5+\r\n```\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n```\r\nVersion: 2.4.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1129", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1129/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1129/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1129/events", "html_url": "https://github.com/zalando/connexion/issues/1129", "id": 552849969, "node_id": "MDU6SXNzdWU1NTI4NDk5Njk=", "number": 1129, "title": "Request parameters with `object` schema is not parsed with special characters", "user": {"login": "aysegulpekel", "id": 8671430, "node_id": "MDQ6VXNlcjg2NzE0MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8671430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aysegulpekel", "html_url": "https://github.com/aysegulpekel", "followers_url": "https://api.github.com/users/aysegulpekel/followers", "following_url": "https://api.github.com/users/aysegulpekel/following{/other_user}", "gists_url": "https://api.github.com/users/aysegulpekel/gists{/gist_id}", "starred_url": "https://api.github.com/users/aysegulpekel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aysegulpekel/subscriptions", "organizations_url": "https://api.github.com/users/aysegulpekel/orgs", "repos_url": "https://api.github.com/users/aysegulpekel/repos", "events_url": "https://api.github.com/users/aysegulpekel/events{/privacy}", "received_events_url": "https://api.github.com/users/aysegulpekel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-21T12:35:21Z", "updated_at": "2020-01-25T06:06:48Z", "closed_at": "2020-01-21T16:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWhile parsing a request with `object` schema and sending its parameters with special characters, it doesn't get parsed and returns None type. \r\n\r\n### Expected behaviour\r\nIf such query is requested: \r\n[GET] \"http://localhost:80/path/1/queries?sort[so$me&sort.order]=desc\" \r\nwe expect to get parsed argument as: `sort=so$me&sort.order`\r\n\r\n### Actual behaviour\r\n\r\n\"http://localhost:80/path/1/queries?sort[so$me&sort.order]=desc\" - we get `sort=None`\r\n\r\n### Steps to reproduce\r\nSwagger template has the reference of sort object as follows:\r\n```\r\npaths:\r\n  /query/{id}:\r\n    get:\r\n      operationId: \"app.controller.query.function\"\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        style: deepObject\r\n        explode: true\r\n        schema:\r\n          type: object\r\n          additionalProperties:\r\n            type: string\r\n      responses:\r\n        200:\r\n          description: \"successful\"\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  query_id:\r\n                    type: string\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` = Python 3.7.4\r\n- `pip show connexion | grep \"^Version\\:\"` =  2.5.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1126", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1126/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1126/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1126/events", "html_url": "https://github.com/zalando/connexion/issues/1126", "id": 549897213, "node_id": "MDU6SXNzdWU1NDk4OTcyMTM=", "number": 1126, "title": "Build broken by datetime changes in PyYAML 5.3", "user": {"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413500, "node_id": "MDU6TGFiZWwyMTM0MTM1MDA=", "url": "https://api.github.com/repos/zalando/connexion/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-15T00:31:55Z", "updated_at": "2020-01-17T20:01:55Z", "closed_at": "2020-01-17T20:01:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### Description\r\nThe following change to PyYAML ( https://github.com/yaml/pyyaml/pull/163 ) altered the behavior of loading yaml files.\r\nAs of PyYAML 5.3, datetime strings like `2020-01-01T00:00:00+00:00` will be loaded as timezone-aware datetimes.\r\n\r\n### Expected behaviour\r\nThis test currently rely on PyYAML loading TZ-naive datetimes:\r\nhttps://github.com/zalando/connexion/blob/master/tests/test_flask_encoder.py#L66\r\n\r\nPyYAML < 5.3 will return `2000-01-23T04:56:07.000008Z`\r\nPyYAML >= 5.3 will return `2000-01-23T04:56:07.000008+00:00`\r\n\r\nWe should update the tests to allow the changes in PyYAML 5.3\r\n\r\n### Actual behaviour\r\nWe currently depend on the timezone-naive yaml loader from PyYAML < 5.3\r\n\r\n### Steps to reproduce\r\nRun Travis CI on master\r\n\r\n### Potential Fix\r\n#1125 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1121", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1121/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1121/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1121/events", "html_url": "https://github.com/zalando/connexion/issues/1121", "id": 549075247, "node_id": "MDU6SXNzdWU1NDkwNzUyNDc=", "number": 1121, "title": "Release Schedule?", "user": {"login": "bilalshaikh42", "id": 32490144, "node_id": "MDQ6VXNlcjMyNDkwMTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/32490144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bilalshaikh42", "html_url": "https://github.com/bilalshaikh42", "followers_url": "https://api.github.com/users/bilalshaikh42/followers", "following_url": "https://api.github.com/users/bilalshaikh42/following{/other_user}", "gists_url": "https://api.github.com/users/bilalshaikh42/gists{/gist_id}", "starred_url": "https://api.github.com/users/bilalshaikh42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bilalshaikh42/subscriptions", "organizations_url": "https://api.github.com/users/bilalshaikh42/orgs", "repos_url": "https://api.github.com/users/bilalshaikh42/repos", "events_url": "https://api.github.com/users/bilalshaikh42/events{/privacy}", "received_events_url": "https://api.github.com/users/bilalshaikh42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-13T17:26:30Z", "updated_at": "2020-01-15T03:23:45Z", "closed_at": "2020-01-15T03:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nSorry for creating an issue for a minor question, but I was just wondering when the next release onto PyPI would be? I am working on a project that needs to install connexion via pip and needs the changes implemented in the last commit. \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1118", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1118/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1118/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1118/events", "html_url": "https://github.com/zalando/connexion/issues/1118", "id": 546394494, "node_id": "MDU6SXNzdWU1NDYzOTQ0OTQ=", "number": 1118, "title": "Question: V1 Support", "user": {"login": "hmajid2301", "id": 998807, "node_id": "MDQ6VXNlcjk5ODgwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/998807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmajid2301", "html_url": "https://github.com/hmajid2301", "followers_url": "https://api.github.com/users/hmajid2301/followers", "following_url": "https://api.github.com/users/hmajid2301/following{/other_user}", "gists_url": "https://api.github.com/users/hmajid2301/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmajid2301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmajid2301/subscriptions", "organizations_url": "https://api.github.com/users/hmajid2301/orgs", "repos_url": "https://api.github.com/users/hmajid2301/repos", "events_url": "https://api.github.com/users/hmajid2301/events{/privacy}", "received_events_url": "https://api.github.com/users/hmajid2301/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-07T16:54:30Z", "updated_at": "2020-01-08T11:36:42Z", "closed_at": "2020-01-08T11:36:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI am currently using connexion v1.5.3. I would like to add a fix to an bug related to x-nullable support and $refs (#1070). Is there any way to merge in my fix ? I cannot currently upgrade to connexion version 2 (easily). I don't see a v1 branch but seeing as there is now a v2 and v3 branch could we add a v1 branch for some backwards compatibility ? \r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1116", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1116/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1116/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1116/events", "html_url": "https://github.com/zalando/connexion/issues/1116", "id": 545443598, "node_id": "MDU6SXNzdWU1NDU0NDM1OTg=", "number": 1116, "title": "pythonic_params do not convert the parameter type", "user": {"login": "vmarkovtsev", "id": 2793551, "node_id": "MDQ6VXNlcjI3OTM1NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2793551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmarkovtsev", "html_url": "https://github.com/vmarkovtsev", "followers_url": "https://api.github.com/users/vmarkovtsev/followers", "following_url": "https://api.github.com/users/vmarkovtsev/following{/other_user}", "gists_url": "https://api.github.com/users/vmarkovtsev/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmarkovtsev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmarkovtsev/subscriptions", "organizations_url": "https://api.github.com/users/vmarkovtsev/orgs", "repos_url": "https://api.github.com/users/vmarkovtsev/repos", "events_url": "https://api.github.com/users/vmarkovtsev/events{/privacy}", "received_events_url": "https://api.github.com/users/vmarkovtsev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1183948393, "node_id": "MDU6TGFiZWwxMTgzOTQ4Mzkz", "url": "https://api.github.com/repos/zalando/connexion/labels/aiohttp", "name": "aiohttp", "color": "9bdff2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-05T17:20:46Z", "updated_at": "2020-01-15T11:05:08Z", "closed_at": "2020-01-15T11:05:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nThe parameter type is not converted if the parameter is renamed to become pythonic.\r\n\r\nI have `pythonic_params=True` and the following spec:\r\n\r\n```yaml\r\n/reposet/{id}:\r\n    delete:\r\n      operationId: delete_reposet\r\n      parameters:\r\n      - explode: false\r\n        in: path\r\n        name: id\r\n        required: true\r\n        schema:\r\n          type: integer\r\n        style: simple\r\n```\r\n\r\nThis spec defines a single `integer` parameter in the path. \r\nThere is the following controller:\r\n\r\n```python\r\nasync def delete_reposet(request: web.Request, id_: int) -> web.Response:\r\n    print(type(id_))\r\n    return web.Response(status=200)\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe controller prints `int` for each request.\r\n\r\n### Actual behavior\r\n\r\nThe controller prints `str` for each request. In other words, the type is not converted. If I rename `id` to `id_` everywhere in the spec, the type is converted and the controller prints `int` as expected. If I remove `pythonic_params` and rename `id_` to `id` in the controller, it prints `int`, too.\r\n\r\n### Steps to reproduce\r\n\r\n(already covered by the description)\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` `3.7.5`\r\n- `pip show connexion | grep \"^Version\\:\"` `2.4.0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1115", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1115/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1115/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1115/events", "html_url": "https://github.com/zalando/connexion/issues/1115", "id": 544875542, "node_id": "MDU6SXNzdWU1NDQ4NzU1NDI=", "number": 1115, "title": "Support not just API-first but API-design first", "user": {"login": "fosrias", "id": 73336, "node_id": "MDQ6VXNlcjczMzM2", "avatar_url": "https://avatars3.githubusercontent.com/u/73336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fosrias", "html_url": "https://github.com/fosrias", "followers_url": "https://api.github.com/users/fosrias/followers", "following_url": "https://api.github.com/users/fosrias/following{/other_user}", "gists_url": "https://api.github.com/users/fosrias/gists{/gist_id}", "starred_url": "https://api.github.com/users/fosrias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fosrias/subscriptions", "organizations_url": "https://api.github.com/users/fosrias/orgs", "repos_url": "https://api.github.com/users/fosrias/repos", "events_url": "https://api.github.com/users/fosrias/events{/privacy}", "received_events_url": "https://api.github.com/users/fosrias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-03T07:02:21Z", "updated_at": "2020-01-09T16:11:55Z", "closed_at": "2020-01-03T08:50:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\nCurrently, connexion does not appear to allow design first workflows where one works out an \r\nAPI design modification in their api description file in the source repo that connexion is running. It always tries to add a path for an operation and if there is no function implementing a path, you get an error trying to resolve the function and if you don't have an operationId it errors. There is no ability to skip a path currently and so there is no possibility or work on APIs and run mock services, etc. unless that design function is done outside of version control or without actually running the application (which means I cannot incrementally implement my new design).\r\n\r\nAm I missing something or is there a way to do this that is not documented?\r\n\r\n### Desired behaviour\r\nIdeally, I can add a `x-connexion-skip` flag, or something to that effect, to tell connexion to ignore a particular operation (with some logging to warn this is happening). This would allow developers to make changes to an API doc, create new resources before they are implemented, and then also incrementally implement those changes, which is actually API-first IMO (i.e. design first).\r\n\r\nWould you be open to a pull request to implement this?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1108", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1108/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1108/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1108/events", "html_url": "https://github.com/zalando/connexion/issues/1108", "id": 539823785, "node_id": "MDU6SXNzdWU1Mzk4MjM3ODU=", "number": 1108, "title": "pip install in py2.7 pulls in unsupported 2.5.0", "user": {"login": "spacether", "id": 1912028, "node_id": "MDQ6VXNlcjE5MTIwMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1912028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spacether", "html_url": "https://github.com/spacether", "followers_url": "https://api.github.com/users/spacether/followers", "following_url": "https://api.github.com/users/spacether/following{/other_user}", "gists_url": "https://api.github.com/users/spacether/gists{/gist_id}", "starred_url": "https://api.github.com/users/spacether/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spacether/subscriptions", "organizations_url": "https://api.github.com/users/spacether/orgs", "repos_url": "https://api.github.com/users/spacether/repos", "events_url": "https://api.github.com/users/spacether/events{/privacy}", "received_events_url": "https://api.github.com/users/spacether/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T17:39:53Z", "updated_at": "2019-12-19T08:30:06Z", "closed_at": "2019-12-18T19:05:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\n\r\npip installing connection in a py2.7 env pulls in unsupported 2.5.0\r\n\r\n### Expected behaviour\r\n\r\nOne of the older releases should be installed instead\r\n\r\n### Actual behaviour\r\n\r\nThe newest release 2.5.0 is pulled in\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nvirtualenv venv -p /usr/local/bin/python\r\nsource venv/bin/activate\r\npip install connexion\r\n```\r\nInspect the terminal to see what version was installed and we see:\r\n```\r\nCollecting connexion\r\n  Using cached https://files.pythonhosted.org/packages/fa/ce/e3f760c75176282ddb8c5600ed9849aa09873fbaf7f9503832ee8041c855/connexion-2.5.0-py2.py3-none-any.whl\r\n```\r\n\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` Python 2.7.15\r\n- `pip show connexion | grep \"^Version\\:\"` Version: 2.5.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1104", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1104/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1104/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1104/events", "html_url": "https://github.com/zalando/connexion/issues/1104", "id": 538350528, "node_id": "MDU6SXNzdWU1MzgzNTA1Mjg=", "number": 1104, "title": "[Question] Pass decoded JWT token as a parameter", "user": {"login": "femt0", "id": 13162553, "node_id": "MDQ6VXNlcjEzMTYyNTUz", "avatar_url": "https://avatars3.githubusercontent.com/u/13162553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/femt0", "html_url": "https://github.com/femt0", "followers_url": "https://api.github.com/users/femt0/followers", "following_url": "https://api.github.com/users/femt0/following{/other_user}", "gists_url": "https://api.github.com/users/femt0/gists{/gist_id}", "starred_url": "https://api.github.com/users/femt0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/femt0/subscriptions", "organizations_url": "https://api.github.com/users/femt0/orgs", "repos_url": "https://api.github.com/users/femt0/repos", "events_url": "https://api.github.com/users/femt0/events{/privacy}", "received_events_url": "https://api.github.com/users/femt0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-16T11:22:17Z", "updated_at": "2020-01-03T17:56:32Z", "closed_at": "2020-01-03T17:53:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI'm using JWT security scheme and I can't find a way to pass the decoded token as a parameter of the API methods.\r\nIs there a way to do that?\r\n\r\n``` yaml\r\n  securitySchemes:\r\n    bearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      x-bearerInfoFunc: api.decode_token\r\n\r\nsecurity:\r\n - bearerAuth: []  \r\n```\r\n\r\n### Additional info:\r\nPython 3.7.4\r\nConnexion 2.4.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1103", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1103/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1103/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1103/events", "html_url": "https://github.com/zalando/connexion/issues/1103", "id": 538074795, "node_id": "MDU6SXNzdWU1MzgwNzQ3OTU=", "number": 1103, "title": "Suggestion: generate AWS Lambdas / Azure Functions that implement an OpenAPI spec", "user": {"login": "robertlagrant", "id": 1766161, "node_id": "MDQ6VXNlcjE3NjYxNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1766161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertlagrant", "html_url": "https://github.com/robertlagrant", "followers_url": "https://api.github.com/users/robertlagrant/followers", "following_url": "https://api.github.com/users/robertlagrant/following{/other_user}", "gists_url": "https://api.github.com/users/robertlagrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertlagrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertlagrant/subscriptions", "organizations_url": "https://api.github.com/users/robertlagrant/orgs", "repos_url": "https://api.github.com/users/robertlagrant/repos", "events_url": "https://api.github.com/users/robertlagrant/events{/privacy}", "received_events_url": "https://api.github.com/users/robertlagrant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-15T16:36:37Z", "updated_at": "2019-12-18T00:39:47Z", "closed_at": "2019-12-18T00:39:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Suggestion\r\nAWS Lambdas / Azure Functions stand up a single endpoint. To keep the magic of spec-first, it's possible to wrap an entire Flask app in a function, but that loses the point of Serverless.\r\n\r\nIt would be great to have a way to directly generate the functions in a project, based on an OpenAPI file.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1100", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1100/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1100/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1100/events", "html_url": "https://github.com/zalando/connexion/issues/1100", "id": 536994376, "node_id": "MDU6SXNzdWU1MzY5OTQzNzY=", "number": 1100, "title": "Switch to Calendar Versioning", "user": {"login": "hjacobs", "id": 510328, "node_id": "MDQ6VXNlcjUxMDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/510328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjacobs", "html_url": "https://github.com/hjacobs", "followers_url": "https://api.github.com/users/hjacobs/followers", "following_url": "https://api.github.com/users/hjacobs/following{/other_user}", "gists_url": "https://api.github.com/users/hjacobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjacobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjacobs/subscriptions", "organizations_url": "https://api.github.com/users/hjacobs/orgs", "repos_url": "https://api.github.com/users/hjacobs/repos", "events_url": "https://api.github.com/users/hjacobs/events{/privacy}", "received_events_url": "https://api.github.com/users/hjacobs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-12T13:58:05Z", "updated_at": "2019-12-18T12:42:10Z", "closed_at": "2019-12-18T12:42:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As we need to release a new version of Connexion, I propose to switch to [Calendar Versioning ](https://calver.org/) (\"CalVer\") with a format of `YY.MM.MICRO` (example: \"19.12.0\")\r\n\r\nRationale: the current semantic versioning has limited use and nobody knows when to switch from major version 2 to 3. We should limit breaking changes as much as possible and constantly \"move forward\" with versions.\r\n\r\nI switched all my personal OSS projects to Calendar Versioning, e.g. https://github.com/hjacobs/kube-downscaler/releases or https://codeberg.org/hjacobs/kube-web-view/releases\r\n\r\nThere are a number of other Python projects also using CalVer, e.g. \"pip\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1097", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1097/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1097/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1097/events", "html_url": "https://github.com/zalando/connexion/issues/1097", "id": 536728593, "node_id": "MDU6SXNzdWU1MzY3Mjg1OTM=", "number": 1097, "title": "aiohttp tests fail if repo dir isn't named \"connexion\"", "user": {"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-12T03:01:34Z", "updated_at": "2019-12-12T08:02:43Z", "closed_at": "2019-12-12T08:02:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### Description\r\nif you clone the repo under a different name, the aiohttp tests will fail.\r\n\r\n### Expected behaviour\r\nTests should be agnostic to the name of the directory that the repo was cloned into.\r\n\r\n### Actual behaviour\r\ntests/aiohttp/test_aiohttp_app.py :: test_app_get_root_path\r\nfails with\r\n```\r\n========================================================== FAILURES ===========================================================\r\n___________________________________________________ test_app_get_root_path ____________________________________________________\r\n\r\naiohttp_api_spec_dir = PosixPath('/home/daniel/stash/connexion-other-name/tests/fixtures/aiohttp')\r\n\r\n    def test_app_get_root_path(aiohttp_api_spec_dir):\r\n        app = AioHttpApp(__name__, port=5001,\r\n                         specification_dir=aiohttp_api_spec_dir)\r\n>       assert app.get_root_path().endswith(os.path.join('connexion', 'tests', 'aiohttp')) == True\r\nE       AssertionError: assert False == True\r\nE        +  where False = <built-in method endswith of str object at 0x7faaf325e2a0>('connexion/tests/aiohttp')\r\nE        +    where <built-in method endswith of str object at 0x7faaf325e2a0> = '/home/daniel/stash/connexion-other-name/tests/aiohttp'.endswith\r\nE        +      where '/home/daniel/stash/connexion-other-name/tests/aiohttp' = <bound method AioHttpApp.get_root_path of <connexion.apps.aiohttp_app.AioHttpApp object at 0x7faaf2d064e0>>()\r\nE        +        where <bound method AioHttpApp.get_root_path of <connexion.apps.aiohttp_app.AioHttpApp object at 0x7faaf2d064e0>> = <connexion.apps.aiohttp_app.AioHttpApp object at 0x7faaf2d064e0>.get_root_path\r\nE        +    and   'connexion/tests/aiohttp' = <function join at 0x7faaf5944a60>('connexion', 'tests', 'aiohttp')\r\nE        +      where <function join at 0x7faaf5944a60> = <module 'posixpath' from '/home/daniel/stash/connexion-other-name/venv/lib/python3.6/posixpath.py'>.join\r\nE        +        where <module 'posixpath' from '/home/daniel/stash/connexion-other-name/venv/lib/python3.6/posixpath.py'> = os.path\r\n\r\ntests/aiohttp/test_aiohttp_app.py:78: AssertionError\r\n```\r\n\r\n### Steps to reproduce\r\ngit clone https://github.com/zalando/connexion.git connexion-other-name\r\ncd connexion-other-name\r\n# setup tests...\r\npytest\r\n\r\n### Additional info:\r\npython version 3.6\r\nconnexion version d18c387\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1092", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1092/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1092/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1092/events", "html_url": "https://github.com/zalando/connexion/issues/1092", "id": 533280328, "node_id": "MDU6SXNzdWU1MzMyODAzMjg=", "number": 1092, "title": "Regression in 2.4.0: spurious ERRORs logged saying \"Function argument not defined in specification\"", "user": {"login": "arel", "id": 153497, "node_id": "MDQ6VXNlcjE1MzQ5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/153497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arel", "html_url": "https://github.com/arel", "followers_url": "https://api.github.com/users/arel/followers", "following_url": "https://api.github.com/users/arel/following{/other_user}", "gists_url": "https://api.github.com/users/arel/gists{/gist_id}", "starred_url": "https://api.github.com/users/arel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arel/subscriptions", "organizations_url": "https://api.github.com/users/arel/orgs", "repos_url": "https://api.github.com/users/arel/repos", "events_url": "https://api.github.com/users/arel/events{/privacy}", "received_events_url": "https://api.github.com/users/arel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413500, "node_id": "MDU6TGFiZWwyMTM0MTM1MDA=", "url": "https://api.github.com/repos/zalando/connexion/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-05T11:04:32Z", "updated_at": "2020-01-20T09:21:09Z", "closed_at": "2020-01-20T09:21:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nConnexion produces spurious ERRORs that function arguments are not defined in schema, *even though they are.* These errors appear in connexion version `2.4.0` and do not in `2.3.0`. The errors appear for every request.\r\n\r\nI find the error appears in cases when a formData argument coexists with query arguments that have a default value.\r\n\r\nFor example:\r\n\r\n```\r\n2019-12-05 10:47:00,123 connexion.operations.swagger2 ERROR    Function argument 'queryArg1' not defined in specification\r\n2019-12-05 10:47:00,123 connexion.operations.swagger2 ERROR    Function argument 'queryArg2' not defined in specification\r\n2019-12-05 10:47:00,123 connexion.operations.swagger2 ERROR    Function argument 'queryArg3' not defined in specification\r\n```\r\n\r\nSeems like it might be related to an old bug #522.\r\n\r\n### Expected behaviour\r\n\r\nNo errors should be produced when arguments are defined in spec.\r\n\r\n### Actual behaviour\r\n\r\nErrors are produced.\r\n\r\n### Steps to reproduce\r\n\r\n```yaml\r\n  ...\r\n  /orgs/{org_id}/resource:\r\n\r\n    post:\r\n      operationId: \"controllers.create_resource\"\r\n      consumes:\r\n      - \"multipart/form-data\"\r\n      produces:\r\n      - \"application/json\"\r\n      parameters:\r\n      - name: \"org_id\"\r\n        in: \"path\"\r\n        description: \"\"\r\n        required: true\r\n        type: \"integer\"\r\n        format: \"int64\"\r\n      - name: \"queryArg1\"\r\n        in: \"query\"\r\n        description: \"\"\r\n        enum: [all, one, two, three]\r\n        default: \"all\"  # NOTE has default value\r\n        type: \"string\"\r\n      - name: \"queryArg2\"\r\n        in: \"query\"\r\n        description: \"\"\r\n        default: false  # NOTE has default value\r\n        type: \"boolean\"\r\n      - in: \"query\"\r\n        name: \"queryArg3\"\r\n        type: \"boolean\"\r\n        default: false  # NOTE has default value\r\n        description: \"\"\r\n      - in: \"formData\"  # NOTE in formData\r\n        name: \"upload_file\"\r\n        required: true\r\n        type: \"file\"\r\n        description: \"The file to upload.\"\r\n      responses:\r\n        200:\r\n          description: \"successful operation\"\r\n        404:\r\n          description: \"Not found\"\r\n\r\n```\r\n\r\nIn python, we have something like this:\r\n\r\n```python\r\ndef create_resource(org_id, queryArg1='all', queryArg2=False, queryArg3=False):\r\n    return {\"ok\": True}\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n\r\nPython 3.7.5\r\n\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n\r\nVersion: 2.4.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1090", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1090/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1090/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1090/events", "html_url": "https://github.com/zalando/connexion/issues/1090", "id": 531827708, "node_id": "MDU6SXNzdWU1MzE4Mjc3MDg=", "number": 1090, "title": "Stray \"value\" string in all \"examples\" responses for OpenAPI 3.0", "user": {"login": "aijanai", "id": 7932716, "node_id": "MDQ6VXNlcjc5MzI3MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7932716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aijanai", "html_url": "https://github.com/aijanai", "followers_url": "https://api.github.com/users/aijanai/followers", "following_url": "https://api.github.com/users/aijanai/following{/other_user}", "gists_url": "https://api.github.com/users/aijanai/gists{/gist_id}", "starred_url": "https://api.github.com/users/aijanai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aijanai/subscriptions", "organizations_url": "https://api.github.com/users/aijanai/orgs", "repos_url": "https://api.github.com/users/aijanai/repos", "events_url": "https://api.github.com/users/aijanai/events{/privacy}", "received_events_url": "https://api.github.com/users/aijanai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-03T09:00:34Z", "updated_at": "2019-12-03T21:05:51Z", "closed_at": "2019-12-03T21:05:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\nWhen mocking with a value from \"examples\", any API response starts with the \"value\" key, taken from the examples response section.\r\nIn other words, the parses expects a Swagger 2.0 definition format and it's actually not honouring the OpenAPI 3.0 examples format.\r\n\r\n\r\n### Expected behaviour\r\n```\r\n[\r\n  {\r\n    \"_id\": \"5ddba3e020b8c7192f1a9e53\",\r\n    \"blocks\": [\r\n      {\r\n        \"blockCoords\": {\r\n          \"x\": 743.24,\r\n          \"x1\": 899.29,\r\n          \"y\": 110.79,\r\n          \"y1\": 136.8\r\n        }\r\n      },\r\n      {\r\n        \"blockCoords\": {\r\n          \"x\": 719.13,\r\n          \"x1\": 920.5799999999999,\r\n          \"y\": 786.1899999999999,\r\n          \"y1\": 1015.93\r\n        }\r\n      },\r\n      {\r\n        \"blockCoords\": {\r\n          \"x\": 787.47,\r\n          \"x1\": 920.57,\r\n          \"y\": 161.1,\r\n          \"y1\": 282.35\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n### Actual behaviour\r\n```\r\n{\r\n  \"value\": [\r\n    {\r\n      \"_id\": \"5ddba3e020b8c7192f1a9e53\",\r\n      \"blocks\": [\r\n        {\r\n          \"blockCoords\": {\r\n            \"x\": 743.24,\r\n            \"x1\": 899.29,\r\n            \"y\": 110.79,\r\n            \"y1\": 136.8\r\n          }\r\n        },\r\n        {\r\n          \"blockCoords\": {\r\n            \"x\": 719.13,\r\n            \"x1\": 920.5799999999999,\r\n            \"y\": 786.1899999999999,\r\n            \"y1\": 1015.93\r\n          }\r\n        },\r\n        {\r\n          \"blockCoords\": {\r\n            \"x\": 787.47,\r\n            \"x1\": 920.57,\r\n            \"y\": 161.1,\r\n            \"y1\": 282.35\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\n1. mock the following example with `connexion run esempio.yml.txt --mock all -vd`:\r\n[esempio.yml.txt](https://github.com/zalando/connexion/files/3915577/esempio.yml.txt)\r\n2. curl http://localhost:5000/pages/\r\n\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`: Python 3.7.5\r\n- `pip show connexion | grep \"^Version\\:\"`: 2.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1087", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1087/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1087/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1087/events", "html_url": "https://github.com/zalando/connexion/issues/1087", "id": 530415243, "node_id": "MDU6SXNzdWU1MzA0MTUyNDM=", "number": 1087, "title": "Mocks not working with numeric status codes", "user": {"login": "aijanai", "id": 7932716, "node_id": "MDQ6VXNlcjc5MzI3MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7932716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aijanai", "html_url": "https://github.com/aijanai", "followers_url": "https://api.github.com/users/aijanai/followers", "following_url": "https://api.github.com/users/aijanai/following{/other_user}", "gists_url": "https://api.github.com/users/aijanai/gists{/gist_id}", "starred_url": "https://api.github.com/users/aijanai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aijanai/subscriptions", "organizations_url": "https://api.github.com/users/aijanai/orgs", "repos_url": "https://api.github.com/users/aijanai/repos", "events_url": "https://api.github.com/users/aijanai/events{/privacy}", "received_events_url": "https://api.github.com/users/aijanai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-29T16:07:11Z", "updated_at": "2019-12-02T23:06:50Z", "closed_at": "2019-12-02T23:06:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\nMock server doesn't return examples when numeric status codes are used in the yaml file, resulting always in \"no example response was defined\".\r\n\r\n\r\n### Expected behaviour\r\nHaving defined an example response, I expect it to be returned when mocking an API.\r\n\r\n\r\n### Actual behaviour\r\n\"No example response was defined\"\r\n\r\n\r\n### Steps to reproduce\r\n1. Start connexion using attached file\r\n```\r\nconnexion run --mock all esempio.yml\r\n```\r\n[esempio.yml.txt](https://github.com/zalando/connexion/files/3905870/esempio.yml.txt)\r\n2. Try to get some `/pages`\r\n\r\n### Additional info:\r\nThe reason lies in the code working only in presence of \"default\" key: there is a `int()` casting which is supposed to explode when applied on 'default' string, jumping the control in the `except` block where there is the correct string. \r\nBut this breaks when there is no \"default\", but only numeric codes.\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`: Python 3.7.4\r\n- `pip show connexion | grep \"^Version\\:\"`: Version: 2.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1083", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1083/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1083/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1083/events", "html_url": "https://github.com/zalando/connexion/issues/1083", "id": 530235960, "node_id": "MDU6SXNzdWU1MzAyMzU5NjA=", "number": 1083, "title": "Can't use environment variables to enable flask debug mode", "user": {"login": "cedricmessiant", "id": 405172, "node_id": "MDQ6VXNlcjQwNTE3Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/405172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cedricmessiant", "html_url": "https://github.com/cedricmessiant", "followers_url": "https://api.github.com/users/cedricmessiant/followers", "following_url": "https://api.github.com/users/cedricmessiant/following{/other_user}", "gists_url": "https://api.github.com/users/cedricmessiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/cedricmessiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cedricmessiant/subscriptions", "organizations_url": "https://api.github.com/users/cedricmessiant/orgs", "repos_url": "https://api.github.com/users/cedricmessiant/repos", "events_url": "https://api.github.com/users/cedricmessiant/events{/privacy}", "received_events_url": "https://api.github.com/users/cedricmessiant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-29T09:15:48Z", "updated_at": "2019-12-03T21:04:16Z", "closed_at": "2019-12-03T21:04:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\n\r\nWith Flask we can enable debug mode by using flask environment variables like explained here\u00a0: https://flask.palletsprojects.com/en/1.1.x/config/#environment-and-debug-features\r\n\r\nIt seems that `AbstractApp` enforces `debug=False` (in its constructor params) so if we call `app.run()` without the `debug` param, `FlaskApp` is calling app.run with `debug=False`)\r\n\r\nA simple way to fix this would be to use `debug=None` instead of `debug=False` but I don't know what is the impact for other app types.\r\n\r\n### Expected behaviour\r\n\r\nUsing `FLASK_ENV=development` or `FLASK_DEBUG=True` should enable debug mode on Flask applications\r\n\r\n\r\n### Actual behaviour\r\n\r\nUsing `FLASK_ENV=development`runs flask in development environment bug debug mode is off\u00a0:\r\n\r\n```\r\n * Serving Flask app \"myapp\" (lazy loading)\r\n * Environment: development\r\n * Debug mode: off\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nDon't use the `debug` parameter in `app.run()` call and set `FLASK_ENV` variable to `development`.\r\n\r\n### Additional info:\r\n\r\nPython's version: 3.7.1\r\nConnexion's version: 2.4.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1082", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1082/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1082/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1082/events", "html_url": "https://github.com/zalando/connexion/issues/1082", "id": 527977348, "node_id": "MDU6SXNzdWU1Mjc5NzczNDg=", "number": 1082, "title": "Default values not dependent on _in type (query, form, path)", "user": {"login": "fzonneveld", "id": 9437091, "node_id": "MDQ6VXNlcjk0MzcwOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9437091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fzonneveld", "html_url": "https://github.com/fzonneveld", "followers_url": "https://api.github.com/users/fzonneveld/followers", "following_url": "https://api.github.com/users/fzonneveld/following{/other_user}", "gists_url": "https://api.github.com/users/fzonneveld/gists{/gist_id}", "starred_url": "https://api.github.com/users/fzonneveld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fzonneveld/subscriptions", "organizations_url": "https://api.github.com/users/fzonneveld/orgs", "repos_url": "https://api.github.com/users/fzonneveld/repos", "events_url": "https://api.github.com/users/fzonneveld/events{/privacy}", "received_events_url": "https://api.github.com/users/fzonneveld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-25T10:05:04Z", "updated_at": "2020-06-11T16:51:16Z", "closed_at": "2020-01-20T09:21:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nStrict validation is on.\r\nSwagger yaml contains default value for a parameter with \"in:  query\". Validation always fails because the validation includes the default value in the form data as an extra unexpected parameter.\r\n\r\n### Expected behaviour\r\nShould work\r\n\r\n\r\n### Actual behaviour\r\nDoes not work\r\n\r\n\r\n### Steps to reproduce\r\nquery parameter with default value and strict validation enabled (this will check the input form data)\r\n\r\n### Additional info:\r\n```\r\n--- a/connexion/decorators/uri_parsing.py\r\n+++ b/connexion/decorators/uri_parsing.py\r\n@@ -133,14 +133,14 @@ class AbstractURIParser(BaseDecorator):\r\n                 resolved_param[k] = values[-1]\r\n \r\n         # set defaults if values have not been set yet\r\n-        resolved_param = self.set_default_values(resolved_param, self.param_schemas)\r\n+        resolved_param = self.set_default_values(resolved_param, self.param_schemas, _in)\r\n \r\n         return resolved_param\r\n \r\n-    def set_default_values(self, _dict, _properties):\r\n+    def set_default_values(self, _dict, _properties, _in):\r\n         \"\"\"set recursively default values in objects/dicts\"\"\"\r\n         for p_id, property in _properties.items():\r\n-            if 'default' in property and p_id not in _dict:\r\n+            if 'default' in property and property['in'] == _in and p_id not in _dict:\r\n                 _dict[p_id] = property['default']\r\n             elif property.get('type', False) == 'object' and 'properties' in property:\r\n                 _dict.setdefault(p_id, {})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1078", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1078/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1078/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1078/events", "html_url": "https://github.com/zalando/connexion/issues/1078", "id": 527535811, "node_id": "MDU6SXNzdWU1Mjc1MzU4MTE=", "number": 1078, "title": "example response not working due to KeyError", "user": {"login": "codeasashu", "id": 1492350, "node_id": "MDQ6VXNlcjE0OTIzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1492350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeasashu", "html_url": "https://github.com/codeasashu", "followers_url": "https://api.github.com/users/codeasashu/followers", "following_url": "https://api.github.com/users/codeasashu/following{/other_user}", "gists_url": "https://api.github.com/users/codeasashu/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeasashu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeasashu/subscriptions", "organizations_url": "https://api.github.com/users/codeasashu/orgs", "repos_url": "https://api.github.com/users/codeasashu/repos", "events_url": "https://api.github.com/users/codeasashu/events{/privacy}", "received_events_url": "https://api.github.com/users/codeasashu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-23T09:45:51Z", "updated_at": "2019-12-05T19:55:52Z", "closed_at": "2019-12-05T19:54:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI am using `operation.example_response()` in my custom resolver. I am getting `None` as my example, even though the example exists for given status code and content type. \r\n\r\n\r\n### Expected behaviour\r\n`operation.example_response()` should return valid example when exists for status code and content type.\r\n\r\n\r\n### Actual behaviour\r\n`operation.example_response()` is returning None when exists for status code and content type.\r\n\r\n\r\n### Steps to reproduce\r\nUsing [hello world yaml](https://github.com/zalando/connexion/blob/master/examples/openapi3/helloworld/openapi/helloworld-api.yaml) \r\n\r\n```python\r\nimport connexion\r\nfrom connexion.mock import MockResolver\r\n\r\nclass CustomResolver(MockResolver):\r\n    def mock_operation(self, operation, *args, **kwargs):\r\n        response, code = operation.example_response() # Returns None, 200\r\n\r\napp = connexion.FlaskApp(__name__, specification_dir='swagger/')\r\napp.add_api('helloworld-api.yaml', resolver=CustomResolver(True))\r\napp.run(port=8080)\r\n```\r\nWhen I do `http post  :8080/getting/dave` I get \r\n```sh\r\nHTTP/1.0 200 OK\r\nContent-Length: 0\r\nContent-Type: text/plain; charset=utf-8\r\nDate: Sat, 23 Nov 2019 09:44:16 GMT\r\nServer: Werkzeug/0.16.0 Python/3.7.4\r\n\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\nPython 3.7.4\r\n\r\n- `pip show connexion | grep \"^Version\\:\"`\r\nVersion: 2.4.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1073", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1073/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1073/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1073/events", "html_url": "https://github.com/zalando/connexion/issues/1073", "id": 522914205, "node_id": "MDU6SXNzdWU1MjI5MTQyMDU=", "number": 1073, "title": "[question] how to turn off logging each API call?", "user": {"login": "tommyjcarpenter", "id": 9419125, "node_id": "MDQ6VXNlcjk0MTkxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9419125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyjcarpenter", "html_url": "https://github.com/tommyjcarpenter", "followers_url": "https://api.github.com/users/tommyjcarpenter/followers", "following_url": "https://api.github.com/users/tommyjcarpenter/following{/other_user}", "gists_url": "https://api.github.com/users/tommyjcarpenter/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyjcarpenter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyjcarpenter/subscriptions", "organizations_url": "https://api.github.com/users/tommyjcarpenter/orgs", "repos_url": "https://api.github.com/users/tommyjcarpenter/repos", "events_url": "https://api.github.com/users/tommyjcarpenter/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyjcarpenter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T15:00:30Z", "updated_at": "2019-12-17T21:06:34Z", "closed_at": "2019-12-17T21:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nThis is just a question. How to turn off, or maybe instead reformat, these, which seem to have been automatically added without the user requesting:\r\n\r\n    ::ffff:10.1.0.1 - - [2019-11-14 14:51:56] \"GET /a1-p/healthcheck HTTP/1.1\" 200 110 0.001545                                                                                                                                                                                                                              \r\n    ::ffff:10.1.0.1 - - [2019-11-14 14:52:01] \"GET /a1-p/healthcheck HTTP/1.1\" 200 110 0.001225                                                                                                                                                                                                                                \r\n    ::ffff:10.1.0.1 - - [2019-11-14 14:52:06] \"GET /a1-p/healthcheck HTTP/1.1\" 200 110 0.001379\r\n\r\nCan I turn these off? The format is a big bizare to me; not sure what the format is here before the obvious timestamp\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n3.7.latest \r\n- `pip show connexion | grep \"^Version\\:\"`\r\nlatest that is in pip ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1072", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1072/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1072/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1072/events", "html_url": "https://github.com/zalando/connexion/issues/1072", "id": 521943030, "node_id": "MDU6SXNzdWU1MjE5NDMwMzA=", "number": 1072, "title": "[Question] AioHttpApp and CORS", "user": {"login": "LI0131", "id": 4829473, "node_id": "MDQ6VXNlcjQ4Mjk0NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4829473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LI0131", "html_url": "https://github.com/LI0131", "followers_url": "https://api.github.com/users/LI0131/followers", "following_url": "https://api.github.com/users/LI0131/following{/other_user}", "gists_url": "https://api.github.com/users/LI0131/gists{/gist_id}", "starred_url": "https://api.github.com/users/LI0131/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LI0131/subscriptions", "organizations_url": "https://api.github.com/users/LI0131/orgs", "repos_url": "https://api.github.com/users/LI0131/repos", "events_url": "https://api.github.com/users/LI0131/events{/privacy}", "received_events_url": "https://api.github.com/users/LI0131/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-13T03:53:41Z", "updated_at": "2020-02-12T03:24:01Z", "closed_at": "2020-02-12T03:24:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to add the proper headers to my options so that I can enable CORS on my api, which is using a `connexion.AioHttpApp`. I have tried to use the `aiohttp-cors` package and have attempted to specify the options headers within my swagger spec, but this is throwing an error. The application I have written must be async so I cannot simply convert to a FlaskApp and use `flask-cors`. Here is the swagger spec that I am working with, as well as my implementation of the connexion app.\r\n\r\n```\r\n  options:\r\n      responses:\r\n        '200':\r\n          description: ''\r\n          headers:\r\n            Access-Control-Allow-Origin:\r\n              schema:\r\n                type: string\r\n                default: \"*\"\r\n            Access-Control-Allow-Credentials:\r\n              schema:\r\n                type: boolean\r\n                default: false\r\n            Access-Control-Allow-Headers:\r\n              schema:\r\n                type: array\r\n                collectionFormat: csv\r\n                default: Content-Type, X-Powered-By\r\n            Access-Control-Allow-Methods:\r\n              schema:\r\n                type: array\r\n                collectionFormat: csv\r\n                default: GET, HEAD\r\n            Access-Control-Max-Age:\r\n              schema:\r\n                type: integer\r\n                default: 86400\r\n```\r\n```\r\ndef setup_app():\r\n    app = connexion.AioHttpApp(__name__, specification_dir='swagger/')\r\n    app.add_api('api.spec.yaml', resolver=RestyResolver('api'))\r\n    return app\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1070", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1070/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1070/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1070/events", "html_url": "https://github.com/zalando/connexion/issues/1070", "id": 518643533, "node_id": "MDU6SXNzdWU1MTg2NDM1MzM=", "number": 1070, "title": " x-nullable does not work on $ref for body validation", "user": {"login": "hmajid2301", "id": 998807, "node_id": "MDQ6VXNlcjk5ODgwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/998807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmajid2301", "html_url": "https://github.com/hmajid2301", "followers_url": "https://api.github.com/users/hmajid2301/followers", "following_url": "https://api.github.com/users/hmajid2301/following{/other_user}", "gists_url": "https://api.github.com/users/hmajid2301/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmajid2301/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmajid2301/subscriptions", "organizations_url": "https://api.github.com/users/hmajid2301/orgs", "repos_url": "https://api.github.com/users/hmajid2301/repos", "events_url": "https://api.github.com/users/hmajid2301/events{/privacy}", "received_events_url": "https://api.github.com/users/hmajid2301/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-06T18:12:09Z", "updated_at": "2020-01-21T21:50:26Z", "closed_at": "2020-01-21T21:50:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nThe `x-nullable` property doesn't work when it's behind a `$ref`. As the code in\r\n`connexion.decorators.validation.extend_with_nullable_support` doesn't follow the `$ref`.\r\n\r\n### Expected behaviour\r\n\r\nIt should follow the `$ref` and find the `x-nullable` within the object.\r\n\r\n### Actual behaviour\r\n\r\nI get the following error `validation error: None is not of type 'string'`.\r\n\r\n### Steps to reproduce\r\n\r\nIf you have the following definitions \r\n\r\n```yaml\r\ndefinitions:\r\n  A:\r\n    description: This does stuff\r\n    type: object\r\n    properties:\r\n      description:\r\n        $ref: '#/definitions/B'\r\n    additionalProperties: false\r\n  B:\r\n    description: Generic Description\r\n    type: string\r\n    x-nullable: true\r\n```\r\nand I send a request which looks like\r\n\r\n```json\r\n{\r\n   \"description\": null\r\n}\r\n```\r\n\r\n### Additional info:\r\n\r\nAccording to a comment in the original PR it should work.\r\n\r\n> @jankontrik  you need to set `x-nullable: true` inside referenced object:\r\n> ```\r\n> Muhehe:\r\n>     title: Muhehe\r\n>     type: object\r\n>     x-nullable: true\r\n> ```\r\n> \r\n> _Originally posted by @dmksnnk in https://github.com/zalando/connexion/pull/642#issuecomment-427322241_\r\n\r\nIf i do the following it does solve the problem, but what if I want to repeat the usage of B I then need to also duplicate the `x-nullable` field with it. I also believe if you have a `$ref` you aren't supposed to have any other attributes defined with it (https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#referenceObject). Also if you put in the editor\r\nyou get the following warning `Sibling values alongside $refs are ignored.\r\nTo add properties to a $ref, wrap the $ref into allOf, or move the extra properties into the referenced definition (if applicable).`\r\n\r\n```yaml\r\ndefinitions:\r\n  A:\r\n    description: This does stuff\r\n    type: object\r\n    properties:\r\n      description:\r\n        $ref: '#/definitions/B'\r\n        x-nullable: true\r\n    additionalProperties: false\r\n  B:\r\n    description: Generic Description\r\n    type: string\r\n```\r\n\r\n- `python --version: 3.6.8`\r\n- `pip show connexion | grep \"^Version\\:\" 1.5.3`\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1069", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1069/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1069/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1069/events", "html_url": "https://github.com/zalando/connexion/issues/1069", "id": 516326726, "node_id": "MDU6SXNzdWU1MTYzMjY3MjY=", "number": 1069, "title": "Specifying multiple input types for one query parameter triggers \"KeyError\"", "user": {"login": "lzy7071", "id": 45886782, "node_id": "MDQ6VXNlcjQ1ODg2Nzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/45886782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lzy7071", "html_url": "https://github.com/lzy7071", "followers_url": "https://api.github.com/users/lzy7071/followers", "following_url": "https://api.github.com/users/lzy7071/following{/other_user}", "gists_url": "https://api.github.com/users/lzy7071/gists{/gist_id}", "starred_url": "https://api.github.com/users/lzy7071/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lzy7071/subscriptions", "organizations_url": "https://api.github.com/users/lzy7071/orgs", "repos_url": "https://api.github.com/users/lzy7071/repos", "events_url": "https://api.github.com/users/lzy7071/events{/privacy}", "received_events_url": "https://api.github.com/users/lzy7071/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 541826236, "node_id": "MDU6TGFiZWw1NDE4MjYyMzY=", "url": "https://api.github.com/repos/zalando/connexion/labels/waiting%20contributor%20feedback", "name": "waiting contributor feedback", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-01T20:20:46Z", "updated_at": "2020-08-14T08:33:55Z", "closed_at": "2019-12-18T03:06:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nSpecifying multiple input types for one query parameter triggers \"KeyError\", relevant spec is as follows (with proper indentation):\r\n    parameters:\r\n      - in: query\r\n        name: species\r\n        schema:\r\n          oneOf:\r\n            - type: string\r\n            - type: integer\r\n        required: true\r\n\r\n### Expected behaviour\r\nWhen parameter \"species\" is of either string instance or integer instance, the request will return expected results.\r\n\r\n### Actual behaviour\r\nThe following error message was displayed, I am not sure if this is a connexion issue or Flask issue:\r\nERROR    test_taxon:app.py:1891 Exception on /taxon/canon_rank_distance/ [GET]\r\nTraceback (most recent call last):\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/connexion/decorators/decorator.py\", line 48, in wrapper\r\n    response = function(request)\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/connexion/decorators/uri_parsing.py\", line 170, in wrapper\r\n    request.query = self.resolve_query(query)\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/connexion/decorators/uri_parsing.py\", line 210, in resolve_query\r\n    return self.resolve_params(query_data, 'query')\r\n  File \"/home/zl/.conda/envs/py36/lib/python3.6/site-packages/connexion/decorators/uri_parsing.py\", line 127, in resolve_params\r\n    if (param_schema is not None and param_schema['type'] == 'array'):\r\nKeyError: 'type'\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`: Python 3.6.9 :: Anaconda, Inc.\r\n- `pip show connexion | grep \"^Version\\:\"` Version: 2.4.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1064", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1064/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1064/events", "html_url": "https://github.com/zalando/connexion/issues/1064", "id": 512334678, "node_id": "MDU6SXNzdWU1MTIzMzQ2Nzg=", "number": 1064, "title": "Ability to configure the HTTP header to retrieve JWT from", "user": {"login": "callkalpa", "id": 504756, "node_id": "MDQ6VXNlcjUwNDc1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/504756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/callkalpa", "html_url": "https://github.com/callkalpa", "followers_url": "https://api.github.com/users/callkalpa/followers", "following_url": "https://api.github.com/users/callkalpa/following{/other_user}", "gists_url": "https://api.github.com/users/callkalpa/gists{/gist_id}", "starred_url": "https://api.github.com/users/callkalpa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/callkalpa/subscriptions", "organizations_url": "https://api.github.com/users/callkalpa/orgs", "repos_url": "https://api.github.com/users/callkalpa/repos", "events_url": "https://api.github.com/users/callkalpa/events{/privacy}", "received_events_url": "https://api.github.com/users/callkalpa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-25T06:45:36Z", "updated_at": "2019-12-17T21:08:44Z", "closed_at": "2019-12-17T21:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI am trying to use JWT authentication in my API. I am following example: https://github.com/zalando/connexion/tree/master/examples/openapi3/jwt. \r\n\r\nMy issue is, in the API call, JWT comes in a different (custom) HTTP header rather than in `Authorization`.\r\n\r\n### Expected behaviour\r\n\r\nAbility to define a header to retrieve JWT from. May be a user defined function, something similar to `x-bearerInfoFunc`.\r\n\r\n\r\n### Actual behaviour\r\n\r\nIn current implementation, it is hard coded to retrieve JWT from `Authorization` header, \r\nhttps://github.com/zalando/connexion/blob/2.4.0/connexion/decorators/security.py#L163\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1061", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1061/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1061/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1061/events", "html_url": "https://github.com/zalando/connexion/issues/1061", "id": 510832728, "node_id": "MDU6SXNzdWU1MTA4MzI3Mjg=", "number": 1061, "title": "Redirect basepath to UI", "user": {"login": "JWDobken", "id": 15050499, "node_id": "MDQ6VXNlcjE1MDUwNDk5", "avatar_url": "https://avatars0.githubusercontent.com/u/15050499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JWDobken", "html_url": "https://github.com/JWDobken", "followers_url": "https://api.github.com/users/JWDobken/followers", "following_url": "https://api.github.com/users/JWDobken/following{/other_user}", "gists_url": "https://api.github.com/users/JWDobken/gists{/gist_id}", "starred_url": "https://api.github.com/users/JWDobken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JWDobken/subscriptions", "organizations_url": "https://api.github.com/users/JWDobken/orgs", "repos_url": "https://api.github.com/users/JWDobken/repos", "events_url": "https://api.github.com/users/JWDobken/events{/privacy}", "received_events_url": "https://api.github.com/users/JWDobken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-22T18:31:52Z", "updated_at": "2019-10-22T18:37:35Z", "closed_at": "2019-10-22T18:37:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I simply redirect the basepath to the UI; e.g. <0.0.0.0:5000> to <0.0.0.0:5000/ui>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1045", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1045/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1045/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1045/events", "html_url": "https://github.com/zalando/connexion/issues/1045", "id": 496361825, "node_id": "MDU6SXNzdWU0OTYzNjE4MjU=", "number": 1045, "title": "Object of type ObjectId is not JSON serializable", "user": {"login": "belthaZornv", "id": 9652736, "node_id": "MDQ6VXNlcjk2NTI3MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9652736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belthaZornv", "html_url": "https://github.com/belthaZornv", "followers_url": "https://api.github.com/users/belthaZornv/followers", "following_url": "https://api.github.com/users/belthaZornv/following{/other_user}", "gists_url": "https://api.github.com/users/belthaZornv/gists{/gist_id}", "starred_url": "https://api.github.com/users/belthaZornv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belthaZornv/subscriptions", "organizations_url": "https://api.github.com/users/belthaZornv/orgs", "repos_url": "https://api.github.com/users/belthaZornv/repos", "events_url": "https://api.github.com/users/belthaZornv/events{/privacy}", "received_events_url": "https://api.github.com/users/belthaZornv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413502, "node_id": "MDU6TGFiZWwyMTM0MTM1MDI=", "url": "https://api.github.com/repos/zalando/connexion/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-20T13:45:26Z", "updated_at": "2019-11-19T08:11:52Z", "closed_at": "2019-11-19T08:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWhen returning a record deriving from MongoDB - the encoder extended in the `flask app` doesn't serialise the `ObjectId`s\r\n\r\n### Expected behaviour\r\n\r\nFalls back on using `str(o)` in the `FlaskJSONEncoder` \r\n\r\n### Actual behaviour\r\n\r\nObject of type ObjectId is not JSON serializable\r\n\r\n### Steps to reproduce\r\n\r\nReturn a `dict` containing an `ObjectId`\r\n\r\n```\r\nfrom bson import ObjectID\r\n\r\nreturn {\"_id\": ObjectId()}\r\n\r\n```\r\n### Additional info:\r\n\r\nOf course, it is possible to do the following as a fix:\r\n\r\n```\r\nfrom bson.objectid import ObjectId\r\nfrom connexion.apps.flask_app import FlaskJSONEncoder\r\n\r\n\r\nclass CustomJSONEncoder(FlaskJSONEncoder):\r\n    def default(self, o):\r\n        if isinstance(o, ObjectId):\r\n            return str(o)\r\n\r\n        return super().default(o)\r\n```\r\n\r\nand in the `app`:\r\n\r\n`app.app.json_encoder = CustomJSONEncoder`\r\n\r\nand it would work fine, although I believe it would be beneficial for the framework to attempt to convert to `str` or `to_dict` (by checking) prior to passing onto the default encoder.\r\n\r\nOtherwise, good job! It's a pleasure using the framework :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1043", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1043/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1043/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1043/events", "html_url": "https://github.com/zalando/connexion/issues/1043", "id": 496135190, "node_id": "MDU6SXNzdWU0OTYxMzUxOTA=", "number": 1043, "title": "werkzeug deprecation warning", "user": {"login": "patrickkwang", "id": 1263870, "node_id": "MDQ6VXNlcjEyNjM4NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1263870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrickkwang", "html_url": "https://github.com/patrickkwang", "followers_url": "https://api.github.com/users/patrickkwang/followers", "following_url": "https://api.github.com/users/patrickkwang/following{/other_user}", "gists_url": "https://api.github.com/users/patrickkwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrickkwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrickkwang/subscriptions", "organizations_url": "https://api.github.com/users/patrickkwang/orgs", "repos_url": "https://api.github.com/users/patrickkwang/repos", "events_url": "https://api.github.com/users/patrickkwang/events{/privacy}", "received_events_url": "https://api.github.com/users/patrickkwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-20T04:16:00Z", "updated_at": "2019-09-20T06:41:43Z", "closed_at": "2019-09-20T06:41:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\nMost top-level attributes in the werkzeug module are deprecated as of [0.16.0](https://github.com/pallets/werkzeug/releases/tag/0.16.0).\r\n\r\n```\r\nconnexion/decorators/validation.py:9: DeprecationWarning: The import 'werkzeug.FileStorage' is deprecated and will be removed in Werkzeug 1.0. Use 'from werkzeug.datastructures import FileStorage' instead.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1038", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1038/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1038/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1038/events", "html_url": "https://github.com/zalando/connexion/issues/1038", "id": 494502156, "node_id": "MDU6SXNzdWU0OTQ1MDIxNTY=", "number": 1038, "title": "How to return multiple validation errors?", "user": {"login": "hitochan777", "id": 6002787, "node_id": "MDQ6VXNlcjYwMDI3ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6002787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hitochan777", "html_url": "https://github.com/hitochan777", "followers_url": "https://api.github.com/users/hitochan777/followers", "following_url": "https://api.github.com/users/hitochan777/following{/other_user}", "gists_url": "https://api.github.com/users/hitochan777/gists{/gist_id}", "starred_url": "https://api.github.com/users/hitochan777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hitochan777/subscriptions", "organizations_url": "https://api.github.com/users/hitochan777/orgs", "repos_url": "https://api.github.com/users/hitochan777/repos", "events_url": "https://api.github.com/users/hitochan777/events{/privacy}", "received_events_url": "https://api.github.com/users/hitochan777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-17T09:17:10Z", "updated_at": "2019-09-18T10:25:45Z", "closed_at": "2019-09-18T10:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nIs there any way to capture and return all validation errors? \r\n\r\n### Expected behaviour\r\n\r\nI want connexion to send response with an array of validation errors rather than a message which contains only one error message even if there are multiple errors.\r\n\r\n### Actual behaviour\r\n\r\nIt returns only one error even if there are multiple validation error.\r\n\r\n### Additional info:\r\n\r\nI guess even if I use custom validator it is not possible to return an array of errors because [`validate_schema`](https://github.com/zalando/connexion/blob/b05bf6e2927c0d1f9a4c2b39f5ffc4ae786f72a7/connexion/decorators/validation.py#L177) method catches `ValidationError` and send its message as a part of a response. Precisely speaking, I can write a custom validator that returns `ValidationError`\r\n whose message contains multiple errors joined by some delimiters. But it is not a clean way of achieving what I want.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1036", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1036/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1036/events", "html_url": "https://github.com/zalando/connexion/issues/1036", "id": 493209337, "node_id": "MDU6SXNzdWU0OTMyMDkzMzc=", "number": 1036, "title": "Optional security for webservice not working", "user": {"login": "DidelotK", "id": 17498619, "node_id": "MDQ6VXNlcjE3NDk4NjE5", "avatar_url": "https://avatars2.githubusercontent.com/u/17498619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DidelotK", "html_url": "https://github.com/DidelotK", "followers_url": "https://api.github.com/users/DidelotK/followers", "following_url": "https://api.github.com/users/DidelotK/following{/other_user}", "gists_url": "https://api.github.com/users/DidelotK/gists{/gist_id}", "starred_url": "https://api.github.com/users/DidelotK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DidelotK/subscriptions", "organizations_url": "https://api.github.com/users/DidelotK/orgs", "repos_url": "https://api.github.com/users/DidelotK/repos", "events_url": "https://api.github.com/users/DidelotK/events{/privacy}", "received_events_url": "https://api.github.com/users/DidelotK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-13T08:51:59Z", "updated_at": "2020-01-06T12:39:21Z", "closed_at": "2020-01-06T12:39:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nUsing an empty security rule return a 401\r\n\r\n\r\n### Expected behaviour\r\nShould allow the request and return a 200\r\n\r\n\r\n### Actual behaviour\r\nIt returns a 401\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nsecurity:\r\n- {}\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`: Python 3.5.3\r\n- `pip show connexion | grep \"^Version\\:\"`: Version: 2.2.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1035", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1035/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1035/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1035/events", "html_url": "https://github.com/zalando/connexion/issues/1035", "id": 490794369, "node_id": "MDU6SXNzdWU0OTA3OTQzNjk=", "number": 1035, "title": "Unable to pass arguments to aiohttp web.Application()", "user": {"login": "simo-eskalera", "id": 49319958, "node_id": "MDQ6VXNlcjQ5MzE5OTU4", "avatar_url": "https://avatars0.githubusercontent.com/u/49319958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo-eskalera", "html_url": "https://github.com/simo-eskalera", "followers_url": "https://api.github.com/users/simo-eskalera/followers", "following_url": "https://api.github.com/users/simo-eskalera/following{/other_user}", "gists_url": "https://api.github.com/users/simo-eskalera/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo-eskalera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo-eskalera/subscriptions", "organizations_url": "https://api.github.com/users/simo-eskalera/orgs", "repos_url": "https://api.github.com/users/simo-eskalera/repos", "events_url": "https://api.github.com/users/simo-eskalera/events{/privacy}", "received_events_url": "https://api.github.com/users/simo-eskalera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hjacobs", "id": 510328, "node_id": "MDQ6VXNlcjUxMDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/510328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjacobs", "html_url": "https://github.com/hjacobs", "followers_url": "https://api.github.com/users/hjacobs/followers", "following_url": "https://api.github.com/users/hjacobs/following{/other_user}", "gists_url": "https://api.github.com/users/hjacobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjacobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjacobs/subscriptions", "organizations_url": "https://api.github.com/users/hjacobs/orgs", "repos_url": "https://api.github.com/users/hjacobs/repos", "events_url": "https://api.github.com/users/hjacobs/events{/privacy}", "received_events_url": "https://api.github.com/users/hjacobs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hjacobs", "id": 510328, "node_id": "MDQ6VXNlcjUxMDMyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/510328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjacobs", "html_url": "https://github.com/hjacobs", "followers_url": "https://api.github.com/users/hjacobs/followers", "following_url": "https://api.github.com/users/hjacobs/following{/other_user}", "gists_url": "https://api.github.com/users/hjacobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjacobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjacobs/subscriptions", "organizations_url": "https://api.github.com/users/hjacobs/orgs", "repos_url": "https://api.github.com/users/hjacobs/repos", "events_url": "https://api.github.com/users/hjacobs/events{/privacy}", "received_events_url": "https://api.github.com/users/hjacobs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-09-08T19:22:43Z", "updated_at": "2019-12-16T14:27:09Z", "closed_at": "2019-12-16T14:27:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI'm passing a large payload to one of the api endpoints and getting back an error from aiohttp\r\n```\r\n<class 'aiohttp.web_exceptions.HTTPRequestEntityTooLarge'>: Request Entity Too Large\r\n```\r\n\r\nBut since this is service to service request, I'd like to bypass this limit by passing the [documented parameter](https://aiohttp.readthedocs.io/en/stable/web_reference.html#application) `client_max_size`:\r\n```\r\nweb.Application(client_max_size=0)\r\n```\r\n\r\nHowever, connexion doesn't support passing an app options during initialization:\r\n```\r\nself.subapp = web.Application(\r\n    middlewares=[\r\n        problems_middleware,\r\n        trailing_slash_redirect\r\n    ]\r\n)\r\n``` \r\nRef: https://github.com/zalando/connexion/blob/master/connexion/apis/aiohttp_api.py#L97\r\n\r\n\r\n### Expected behavior\r\n\r\nExpected to be able to pass app specific configuration, specifically `client_max_size`\r\n\r\n### Actual behavior\r\n\r\nUnable to configure the aiohttp app\r\n\r\n### Steps to reproduce\r\n\r\nMake a POST request using an aiohttp initialized app and send a json payload that's larger than 1048576 Bytes (1 MB)\r\n\r\n### Additional info:\r\n\r\nAllow users to pass app specific options as a map:\r\n\r\n```\r\napp = connexion.AioHttpApp(\r\n  __name__,\r\n  specification_dir='swagger',\r\n  app_options={...} # or just options if there's no name conflict\r\n)\r\n```\r\n\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\nPython 3.7.3\r\n\r\n- `pip show connexion | grep \"^Version\\:\"`\r\nVersion: 2018.0.dev1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1025", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1025/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1025/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1025/events", "html_url": "https://github.com/zalando/connexion/issues/1025", "id": 484074816, "node_id": "MDU6SXNzdWU0ODQwNzQ4MTY=", "number": 1025, "title": "patch method should ignore required: true", "user": {"login": "drummerwolli", "id": 3867569, "node_id": "MDQ6VXNlcjM4Njc1Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3867569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drummerwolli", "html_url": "https://github.com/drummerwolli", "followers_url": "https://api.github.com/users/drummerwolli/followers", "following_url": "https://api.github.com/users/drummerwolli/following{/other_user}", "gists_url": "https://api.github.com/users/drummerwolli/gists{/gist_id}", "starred_url": "https://api.github.com/users/drummerwolli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drummerwolli/subscriptions", "organizations_url": "https://api.github.com/users/drummerwolli/orgs", "repos_url": "https://api.github.com/users/drummerwolli/repos", "events_url": "https://api.github.com/users/drummerwolli/events{/privacy}", "received_events_url": "https://api.github.com/users/drummerwolli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-22T15:43:47Z", "updated_at": "2019-11-10T19:57:32Z", "closed_at": "2019-11-10T19:57:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Description\r\n\r\nthe HTTP `PATCH`  method only partially updates an entity. This means that the entity is existing beforehand already. This means, that you can just send one attribute in a body to the PATCH endpoint with having some required fields, and it should still work\r\n\r\n### Expected behaviour\r\n\r\nsending and incomplete body to a PATCH endpoints results in a 200\r\n\r\n### Actual behaviour\r\n\r\nthe schema is completely verified, no matter the HTTP method, and therefore throws a 400 because the object is not complete.\r\n\r\n### Steps to reproduce\r\n\r\nadd this to your OpenAPI3.yaml:\r\n\r\n```\r\npaths:\r\n  /entity/{id}:\r\n    patch:\r\n      operationId: \"does.not.matter.here\"\r\n      parameters:\r\n      - name: relational_datasource_id\r\n        required: true\r\n        in: path\r\n        schema:\r\n          type: integer\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: \"object\"\r\n              required:\r\n              - name\r\n              - connection_id\r\n              - sql\r\n              properties:\r\n                id:\r\n                  type: integer\r\n                name:\r\n                   type: string\r\n                sql:\r\n                   type: string\r\n```\r\n\r\ntry now to patch this entity, but only try to update the sql field. connexion will complain that you did not supply the `name`, but it should not be needed.\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version : 3.7.4`\r\n- `pip show connexion | grep \"^Version\\: 2.3.0\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1024", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1024/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1024/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1024/events", "html_url": "https://github.com/zalando/connexion/issues/1024", "id": 483535775, "node_id": "MDU6SXNzdWU0ODM1MzU3NzU=", "number": 1024, "title": "Hello I would like to contact you, Your not active on skype so i have no joice to but to contact you here", "user": {"login": "Aprazor", "id": 51818160, "node_id": "MDQ6VXNlcjUxODE4MTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/51818160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aprazor", "html_url": "https://github.com/Aprazor", "followers_url": "https://api.github.com/users/Aprazor/followers", "following_url": "https://api.github.com/users/Aprazor/following{/other_user}", "gists_url": "https://api.github.com/users/Aprazor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aprazor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aprazor/subscriptions", "organizations_url": "https://api.github.com/users/Aprazor/orgs", "repos_url": "https://api.github.com/users/Aprazor/repos", "events_url": "https://api.github.com/users/Aprazor/events{/privacy}", "received_events_url": "https://api.github.com/users/Aprazor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-21T16:51:38Z", "updated_at": "2019-08-21T17:23:19Z", "closed_at": "2019-08-21T17:23:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please email me when you are online on ncdemerz@gmail.com\r\nso i can explain you more", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1020", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1020/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1020/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1020/events", "html_url": "https://github.com/zalando/connexion/issues/1020", "id": 481741106, "node_id": "MDU6SXNzdWU0ODE3NDExMDY=", "number": 1020, "title": "Connexion claims extra formData parameters that are in the spec", "user": {"login": "tsbriggs02", "id": 1765541, "node_id": "MDQ6VXNlcjE3NjU1NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1765541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsbriggs02", "html_url": "https://github.com/tsbriggs02", "followers_url": "https://api.github.com/users/tsbriggs02/followers", "following_url": "https://api.github.com/users/tsbriggs02/following{/other_user}", "gists_url": "https://api.github.com/users/tsbriggs02/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsbriggs02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsbriggs02/subscriptions", "organizations_url": "https://api.github.com/users/tsbriggs02/orgs", "repos_url": "https://api.github.com/users/tsbriggs02/repos", "events_url": "https://api.github.com/users/tsbriggs02/events{/privacy}", "received_events_url": "https://api.github.com/users/tsbriggs02/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413500, "node_id": "MDU6TGFiZWwyMTM0MTM1MDA=", "url": "https://api.github.com/repos/zalando/connexion/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-08-16T18:56:13Z", "updated_at": "2020-02-14T15:29:36Z", "closed_at": "2020-01-21T08:49:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI have a simple service that expects a POST to a certain endpoint.  There's 1 parameter in the requestBody of the POST (\"customerId\"), and also a header parameter (\"Authorization\").\r\n\r\nIf I turn on `strict_validation=True` and I send a valid request to the endpoint, I get: `Extra formData parameter(s) customerId not in spec`.\r\n\r\n\r\n### Expected behaviour\r\n\r\nThe `customerId` parameter _is_ in the spec, so Connexion should accept the post and call the endpoint's business logic, rather than returning a 400.\r\n\r\n### Actual behaviour\r\n\r\nReturns:\r\n```\r\n{\r\n    \"detail\": \"Extra formData parameter(s) customerId not in spec\",\r\n    \"status\": 400,\r\n    \"title\": null,\r\n    \"type\": \"about:blank\"\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nI'm using this spec.yaml:\r\n```\r\nopenapi: \"3.0.0\"\r\n\r\ninfo:\r\n  title: Hello World\r\n  version: \"2\"\r\nservers:\r\n  - url: /v1.0\r\n\r\npaths:\r\n  /test:\r\n    post:\r\n      operationId: hello.test\r\n      summary: A test endpoint.\r\n      parameters:\r\n        # If this header param is here and `strict_validation` is enabled, Connexion gives a 400 error,\r\n        # even if you DO send `customerId`.\r\n        - name: Authorization\r\n          in: header\r\n          required: true\r\n          schema:\r\n            type: string\r\n      requestBody:\r\n        content:\r\n          application/x-www-form-urlencoded:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                customerId:\r\n                  type: string\r\n              required:\r\n                - customerId\r\n      responses:\r\n        \"200\":\r\n          description: OK.\r\n        \"401\":\r\n          description: Unauthorized.\r\n```\r\n\r\nAnd this app.py:\r\n\r\n```\r\nimport connexion\r\n\r\n\r\ndef create_app():\r\n    cxn = connexion.FlaskApp(__name__.split('.')[0], specification_dir='.')\r\n    cxn.add_api('spec.yaml', strict_validation=True, arguments={'title': 'Hello World Example'})\r\n    return cxn.app\r\n```\r\n\r\nAnd hello.py is just:\r\n\r\n```\r\ndef test(body) -> str:\r\n    return f\"customerId is {body['customerId']}\"\r\n```\r\n\r\nThen, send a (valid) request to the endpoint.  I'm using the `httpie` utility, although you can exercise the bug with the SwaggerUI too.\r\n\r\n`http -v -f POST http://localhost:8000/v1.0/test \"Authorization: Bearer abcd\" \"customerId=4\"`\r\n\r\nYou will see the 400 response mentioned above.\r\n\r\n### Additional info:\r\n\r\nIt seems like having the header in the spec is necessary to make the bug happen.  If you take out the `parameters:` block, it works.\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`: \r\nPython 3.6.6\r\n\r\n- `pip show connexion | grep \"^Version\\:\"`\r\nVersion: 2.3.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/1016", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/1016/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/1016/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/1016/events", "html_url": "https://github.com/zalando/connexion/issues/1016", "id": 480237615, "node_id": "MDU6SXNzdWU0ODAyMzc2MTU=", "number": 1016, "title": "Schema validation errors not caught by error handler", "user": {"login": "NMFR", "id": 13484940, "node_id": "MDQ6VXNlcjEzNDg0OTQw", "avatar_url": "https://avatars3.githubusercontent.com/u/13484940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NMFR", "html_url": "https://github.com/NMFR", "followers_url": "https://api.github.com/users/NMFR/followers", "following_url": "https://api.github.com/users/NMFR/following{/other_user}", "gists_url": "https://api.github.com/users/NMFR/gists{/gist_id}", "starred_url": "https://api.github.com/users/NMFR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NMFR/subscriptions", "organizations_url": "https://api.github.com/users/NMFR/orgs", "repos_url": "https://api.github.com/users/NMFR/repos", "events_url": "https://api.github.com/users/NMFR/events{/privacy}", "received_events_url": "https://api.github.com/users/NMFR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-13T15:57:59Z", "updated_at": "2019-12-09T10:22:23Z", "closed_at": "2019-12-09T10:22:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nSchema validation errors are not caught by error handlers.\r\nI want my application to have a \"standard\" JSON error format.\r\nFor this i register an error handler to format the error response.\r\nSchema validation errors bypass the error handler and do not allow to format the response.\r\n\r\n### Expected behaviour\r\n\r\n```\r\nHTTP 500\r\n{ \"error\": 'My custom error format\" }\r\n```\r\n\r\n### Actual behaviour\r\n\r\n```\r\nHTTP 400\r\n{\r\n  \"detail\": \"1000 is greater than the maximum of 90\",\r\n  \"status\": 400,\r\n  \"title\": \"Validation error\",\r\n  \"type\": \"about:blank\"\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\n\r\napplication.py:\r\n``` python\r\nconnexion_app = connexion.App(root_path, specification_dir='src/api/rest')\r\n\r\ndef handle_connexion_exception(exception):\r\n        return '{ \"error\": 'My custom error format\" }', 500\r\n\r\nconnexion_app.add_error_handler(ProblemException, handle_connexion_exception)\r\n```\r\n\r\nCause a openAPI schema error (call an endpoint with invalid JSON).\r\n\r\n### Additional info:\r\n\r\nThe culprit seems to be `validate_schema` https://github.com/zalando/connexion/blob/master/connexion/decorators/validation.py#L188 that does not throw an error and just returns the endpoint response.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/991", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/991/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/991/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/991/events", "html_url": "https://github.com/zalando/connexion/issues/991", "id": 465057330, "node_id": "MDU6SXNzdWU0NjUwNTczMzA=", "number": 991, "title": "pytest>=5.0.0 incompatible with Flask<=1.0.4", "user": {"login": "kornicameister", "id": 1029674, "node_id": "MDQ6VXNlcjEwMjk2NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1029674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornicameister", "html_url": "https://github.com/kornicameister", "followers_url": "https://api.github.com/users/kornicameister/followers", "following_url": "https://api.github.com/users/kornicameister/following{/other_user}", "gists_url": "https://api.github.com/users/kornicameister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornicameister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornicameister/subscriptions", "organizations_url": "https://api.github.com/users/kornicameister/orgs", "repos_url": "https://api.github.com/users/kornicameister/repos", "events_url": "https://api.github.com/users/kornicameister/events{/privacy}", "received_events_url": "https://api.github.com/users/kornicameister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-08T05:12:28Z", "updated_at": "2019-07-09T11:17:49Z", "closed_at": "2019-07-09T11:17:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\n\r\nMaster builds are failing due to error:\r\n```\r\nimport_name = 'conftest'\r\n    def find_package(import_name):\r\n        \"\"\"Finds a package and returns the prefix (or None if the package is\r\n        not installed) as well as the folder that contains the package or\r\n        module as a tuple.  The package path returned is the module that would\r\n        have to be added to the pythonpath in order to make it possible to\r\n        import the module.  The prefix is the path below which a UNIX like\r\n        folder structure exists (lib, share etc.).\r\n        \"\"\"\r\n        root_mod_name = import_name.split('.')[0]\r\n        loader = pkgutil.get_loader(root_mod_name)\r\n        if loader is None or import_name == '__main__':\r\n            # import name is not found, or interactive/main module\r\n            package_path = os.getcwd()\r\n        else:\r\n            # For .egg, zipimporter does not have get_filename until Python 2.7.\r\n            if hasattr(loader, 'get_filename'):\r\n                filename = loader.get_filename(root_mod_name)\r\n            elif hasattr(loader, 'archive'):\r\n                # zipimporter's loader.archive points to the .egg or .zip\r\n                # archive filename is dropped in call to dirname below.\r\n                filename = loader.archive\r\n            else:\r\n                # At least one loader is missing both get_filename and archive:\r\n                # Google App Engine's HardenedModulesHook\r\n                #\r\n                # Fall back to imports.\r\n                __import__(import_name)\r\n                filename = sys.modules[import_name].__file__\r\n            package_path = os.path.abspath(os.path.dirname(filename))\r\n            # package_path ends with __init__.py for a package\r\n>           if loader.is_package(root_mod_name):\r\nE           AttributeError: 'AssertionRewritingHook' object has no attribute 'is_package'\r\n.tox/py37-min/lib/python3.7/site-packages/flask/helpers.py:682: AttributeError\r\n```\r\n\r\nThis can be tracked to following issues:\r\n- https://github.com/pytest-dev/pytest/issues/5532\r\n- https://github.com/pytest-dev/pytest/issues/5542\r\n\r\nIndeed (either one of those actions):\r\n- restricting `flask` to be at least `1.0.4` makes tests pass.\r\n- restricting `pytest` to be at most `4.9.x` makes test pass\r\n\r\nWhich brings us down to final question.\r\nShould `Flask` be kept at low version (which is pretty old TBH) or should `pytest` be restricted.\r\nPersonally I favor running newer version instead of supporting older codebases.\r\n\r\n### Expected behaviour\r\n\r\nmaster branch builds correctly against `min` environments.\r\n\r\n### Actual behaviour\r\n\r\nmaster branch builds correctly against `min` fail with aforementioned error.\r\n\r\n### Steps to reproduce\r\n\r\nJust run `tox -e py3(X)-min` where `X` stands for `Python` minor version {4,5,6,7}.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/983", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/983/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/983/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/983/events", "html_url": "https://github.com/zalando/connexion/issues/983", "id": 462059156, "node_id": "MDU6SXNzdWU0NjIwNTkxNTY=", "number": 983, "title": "Support jsonschema3", "user": {"login": "jgarver", "id": 23349940, "node_id": "MDQ6VXNlcjIzMzQ5OTQw", "avatar_url": "https://avatars3.githubusercontent.com/u/23349940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgarver", "html_url": "https://github.com/jgarver", "followers_url": "https://api.github.com/users/jgarver/followers", "following_url": "https://api.github.com/users/jgarver/following{/other_user}", "gists_url": "https://api.github.com/users/jgarver/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgarver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgarver/subscriptions", "organizations_url": "https://api.github.com/users/jgarver/orgs", "repos_url": "https://api.github.com/users/jgarver/repos", "events_url": "https://api.github.com/users/jgarver/events{/privacy}", "received_events_url": "https://api.github.com/users/jgarver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-28T14:21:55Z", "updated_at": "2019-10-18T10:38:10Z", "closed_at": "2019-10-18T10:38:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like we can support jsonschema3 easily now.\r\n\r\nsetup.py forces 'jsonschema>=2.5.1,<3.0.0'.  It looks like this came in with openapi-spec-validator, which required jsonschema<3.0.0.  In the meantime, openapi-spec-validator has added support for jsonschema3 starting with 0.2.7.\r\n\r\nAs a quick test, I bumped jsonschema up to 3.0.1 and connexion's unittests still pass.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/981", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/981/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/981/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/981/events", "html_url": "https://github.com/zalando/connexion/issues/981", "id": 461098869, "node_id": "MDU6SXNzdWU0NjEwOTg4Njk=", "number": 981, "title": "Expose connexion app to UWSGI", "user": {"login": "BjoernLaemmerzahl", "id": 4821787, "node_id": "MDQ6VXNlcjQ4MjE3ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4821787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BjoernLaemmerzahl", "html_url": "https://github.com/BjoernLaemmerzahl", "followers_url": "https://api.github.com/users/BjoernLaemmerzahl/followers", "following_url": "https://api.github.com/users/BjoernLaemmerzahl/following{/other_user}", "gists_url": "https://api.github.com/users/BjoernLaemmerzahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/BjoernLaemmerzahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BjoernLaemmerzahl/subscriptions", "organizations_url": "https://api.github.com/users/BjoernLaemmerzahl/orgs", "repos_url": "https://api.github.com/users/BjoernLaemmerzahl/repos", "events_url": "https://api.github.com/users/BjoernLaemmerzahl/events{/privacy}", "received_events_url": "https://api.github.com/users/BjoernLaemmerzahl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-26T17:40:29Z", "updated_at": "2020-02-15T10:56:30Z", "closed_at": "2020-02-15T10:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI apologize if I misunderstood something here, as I am taking my first steps.\r\n\r\nWhen running my Docker image and requesting the Swagger Ui I receive: **502 Bad Gateway** by NGINX.\r\n\r\nI am attempting to run connexion with UWSGI on NGINX. I assume it is because Uwsgi does not correctly pick up my Flask instance. However, it appears to me that my container instance is correctly configured.\r\n\r\nIf you look here [https://github.com/Microsoft/python-sample-vscode-flask-tutorial](https://github.com/Microsoft/python-sample-vscode-flask-tutorial), the setup of my application and the configuration is similar and it works without issues.\r\n\r\nAccording to the connexion documentation I should be able to expose the app instance to uWSGI using\r\n\r\n```\r\napp = connexion.App(__name__, specification_dir='swagger/')\r\napplication = app.app # expose global WSGI application object\r\n```\r\n### Expected behaviour\r\nExpected behavior is that the Swagger UI is available at:\r\n\r\n[http://localhost:5000/v1.0/ui/#/](http://localhost:5000/v1.0/ui/#/)\r\n\r\nwhen running from a Docker container.\r\n\r\n\r\n### Actual behaviour\r\nWhen running my Docker image and requesting the Swagger Ui I receive: **502 Bad Gateway** by NGINX.\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nYou can find my complete application code here:\r\n\r\n[https://bitbucket.org/lammy123/flask_nginx_docker_connexion/src/master/](https://bitbucket.org/lammy123/flask_nginx_docker_connexion/src/master/)\r\n\r\nThe Flask/Connexion object is in application/init.py\r\n\r\nMy **uwsgi.ini** reads:\r\n\r\n```\r\n[uwsgi]\r\nmodule = application.webapp\r\ncallable = app\r\nuid = 1000\r\nmaster = true\r\nthreads = 2\r\nprocesses = 4\r\n```\r\ninit.py\r\n```\r\n\r\nimport connexion\r\n\r\napp = connexion.App(__name__, specification_dir='openapi/')\r\napp.add_api('helloworld-api.yaml', arguments={'title': 'Hello World Example'})\r\n```\r\n**webapp.py**\r\n\r\n```\r\nfrom . import app    # For application discovery by the 'flask' command. \r\nfrom . import views  # For import side-effects of setting up routes.\r\nfrom . import app\r\nimport connexion\r\n\r\napplication = app.app\r\n\r\n```\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\nPython 3.7.1\r\n\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n\"version\": \"==2.3.0\" (from pipfile.lock)\r\n\r\n\r\nThanks for your time.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/977", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/977/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/977/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/977/events", "html_url": "https://github.com/zalando/connexion/issues/977", "id": 456455289, "node_id": "MDU6SXNzdWU0NTY0NTUyODk=", "number": 977, "title": "Retire EOL Python 3.4", "user": {"login": "cognifloyd", "id": 1558590, "node_id": "MDQ6VXNlcjE1NTg1OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1558590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cognifloyd", "html_url": "https://github.com/cognifloyd", "followers_url": "https://api.github.com/users/cognifloyd/followers", "following_url": "https://api.github.com/users/cognifloyd/following{/other_user}", "gists_url": "https://api.github.com/users/cognifloyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/cognifloyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cognifloyd/subscriptions", "organizations_url": "https://api.github.com/users/cognifloyd/orgs", "repos_url": "https://api.github.com/users/cognifloyd/repos", "events_url": "https://api.github.com/users/cognifloyd/events{/privacy}", "received_events_url": "https://api.github.com/users/cognifloyd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-14T22:01:30Z", "updated_at": "2019-07-09T11:53:45Z", "closed_at": "2019-07-09T11:53:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 3.4 is EOL.\r\n> Python 3.4 has now reached its end-of-life and has been retired. No more releases will be made.\r\nhttps://www.python.org/dev/peps/pep-0429/\r\n\r\nAlso, the async/await keywords are nicer to work with in 3.5+ (used by the aiohttp client).\r\nhttps://www.python.org/dev/peps/pep-0478/\r\nhttps://www.python.org/dev/peps/pep-0492/\r\n\r\nWhen can we deprecate / remove support for python 3.4?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/974", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/974/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/974/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/974/events", "html_url": "https://github.com/zalando/connexion/issues/974", "id": 456221955, "node_id": "MDU6SXNzdWU0NTYyMjE5NTU=", "number": 974, "title": "Offline installation", "user": {"login": "jiejiehao", "id": 22289870, "node_id": "MDQ6VXNlcjIyMjg5ODcw", "avatar_url": "https://avatars3.githubusercontent.com/u/22289870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiejiehao", "html_url": "https://github.com/jiejiehao", "followers_url": "https://api.github.com/users/jiejiehao/followers", "following_url": "https://api.github.com/users/jiejiehao/following{/other_user}", "gists_url": "https://api.github.com/users/jiejiehao/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiejiehao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiejiehao/subscriptions", "organizations_url": "https://api.github.com/users/jiejiehao/orgs", "repos_url": "https://api.github.com/users/jiejiehao/repos", "events_url": "https://api.github.com/users/jiejiehao/events{/privacy}", "received_events_url": "https://api.github.com/users/jiejiehao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-14T12:26:04Z", "updated_at": "2019-06-14T13:50:06Z", "closed_at": "2019-06-14T13:50:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI have a server machine. It can't connect to the Internet.\uff0cHow to install in a network-free environment. thank you.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/970", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/970/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/970/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/970/events", "html_url": "https://github.com/zalando/connexion/issues/970", "id": 453136042, "node_id": "MDU6SXNzdWU0NTMxMzYwNDI=", "number": 970, "title": "objects with style: deepObject and explode: true are not supported", "user": {"login": "drummerwolli", "id": 3867569, "node_id": "MDQ6VXNlcjM4Njc1Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3867569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drummerwolli", "html_url": "https://github.com/drummerwolli", "followers_url": "https://api.github.com/users/drummerwolli/followers", "following_url": "https://api.github.com/users/drummerwolli/following{/other_user}", "gists_url": "https://api.github.com/users/drummerwolli/gists{/gist_id}", "starred_url": "https://api.github.com/users/drummerwolli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drummerwolli/subscriptions", "organizations_url": "https://api.github.com/users/drummerwolli/orgs", "repos_url": "https://api.github.com/users/drummerwolli/repos", "events_url": "https://api.github.com/users/drummerwolli/events{/privacy}", "received_events_url": "https://api.github.com/users/drummerwolli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-06T16:49:33Z", "updated_at": "2020-07-17T14:25:59Z", "closed_at": "2019-10-15T15:36:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Description\r\n\r\nhttps://swagger.io/docs/specification/serialization/#query defines possible serialization styles. Connexion is not supporting at least one of them (style: deepObject).\r\n\r\nmight be related to https://github.com/zalando/connexion/issues/963\r\n\r\n### Expected behaviour\r\n\r\n`/users?id[role]=admin&id[firstName]=Alex` would result in an object/dict named id and the value `{\"role\": \"admin\", \"firstName\": \"Alex\"}`\r\n\r\n### Actual behaviour\r\n\r\nwhen issuing `/users?id[role]=admin&id[firstName]=Alex` the id parameter is not passed to the function linked to that endpoint.\r\n\r\n### Steps to reproduce\r\n\r\ncreate an endpoint with the following parameter:\r\n\r\n```\r\n- name: id\r\n  required: true\r\n  in: query\r\n  style: deepObject\r\n  explode: true\r\n  schema:\r\n    type: object\r\n    properties:\r\n      bla:\r\n        type: string\r\n```\r\n\r\ntry to query that endpoint with the query parameter `?id[role]=admin&id[firstName]=Alex`. There will be no data passed to the function.\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` : Python 3.6.7\r\n- `pip show connexion | grep \"^Version\\:\"` : 2.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/966", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/966/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/966/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/966/events", "html_url": "https://github.com/zalando/connexion/issues/966", "id": 450182368, "node_id": "MDU6SXNzdWU0NTAxODIzNjg=", "number": 966, "title": "Question: How should I deal with operationId when the same function handles both PUT and POST calls?", "user": {"login": "markcorr9", "id": 51190519, "node_id": "MDQ6VXNlcjUxMTkwNTE5", "avatar_url": "https://avatars2.githubusercontent.com/u/51190519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markcorr9", "html_url": "https://github.com/markcorr9", "followers_url": "https://api.github.com/users/markcorr9/followers", "following_url": "https://api.github.com/users/markcorr9/following{/other_user}", "gists_url": "https://api.github.com/users/markcorr9/gists{/gist_id}", "starred_url": "https://api.github.com/users/markcorr9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markcorr9/subscriptions", "organizations_url": "https://api.github.com/users/markcorr9/orgs", "repos_url": "https://api.github.com/users/markcorr9/repos", "events_url": "https://api.github.com/users/markcorr9/events{/privacy}", "received_events_url": "https://api.github.com/users/markcorr9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-30T08:03:19Z", "updated_at": "2019-06-08T13:35:26Z", "closed_at": "2019-06-08T13:35:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI've recently been acquainted with Connexion when I started working on Swagger. As mentioned in the title, I have an api (called \"post_users()\" for example) that handles both PUT and POST calls, which I think is commonly done. Since the operationId in the swagger.yaml is supposed to be unique, I was wondering how I can tell connexion to use the same function for both the calls. Sorry, if this was previously asked or if this is a noob question (I am), but I could not find any way to get around this. Thanks, in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/965", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/965/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/965/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/965/events", "html_url": "https://github.com/zalando/connexion/issues/965", "id": 449571304, "node_id": "MDU6SXNzdWU0NDk1NzEzMDQ=", "number": 965, "title": "Request body is not valid JSON", "user": {"login": "snakecy", "id": 12490881, "node_id": "MDQ6VXNlcjEyNDkwODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/12490881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snakecy", "html_url": "https://github.com/snakecy", "followers_url": "https://api.github.com/users/snakecy/followers", "following_url": "https://api.github.com/users/snakecy/following{/other_user}", "gists_url": "https://api.github.com/users/snakecy/gists{/gist_id}", "starred_url": "https://api.github.com/users/snakecy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snakecy/subscriptions", "organizations_url": "https://api.github.com/users/snakecy/orgs", "repos_url": "https://api.github.com/users/snakecy/repos", "events_url": "https://api.github.com/users/snakecy/events{/privacy}", "received_events_url": "https://api.github.com/users/snakecy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-29T02:44:31Z", "updated_at": "2019-06-08T13:33:14Z", "closed_at": "2019-06-08T13:33:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n![image](https://user-images.githubusercontent.com/12490881/58525392-2ab9b280-81fe-11e9-8671-2f79609b8b13.png)\r\n\r\nAfter i use swagger2.0 swagger-codegen generate the flask for python service, when posting data from web, the error turns out :\r\n```\r\n{\r\n  \"detail\": \"Request body is not valid JSON\",\r\n  \"status\": 400,\r\n  \"title\": \"Bad Request\",\r\n  \"type\": \"about:blank\"\r\n}\r\n```\r\nwhat can i do now ?\r\n\r\n\r\n### Expected behaviour\r\n\r\n\r\n\r\n### Actual behaviour\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/962", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/962/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/962/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/962/events", "html_url": "https://github.com/zalando/connexion/issues/962", "id": 449081868, "node_id": "MDU6SXNzdWU0NDkwODE4Njg=", "number": 962, "title": "connexion.exceptions.InvalidSpecification: Required list has not defined properties: ['type']", "user": {"login": "julianflapper", "id": 24320453, "node_id": "MDQ6VXNlcjI0MzIwNDUz", "avatar_url": "https://avatars0.githubusercontent.com/u/24320453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julianflapper", "html_url": "https://github.com/julianflapper", "followers_url": "https://api.github.com/users/julianflapper/followers", "following_url": "https://api.github.com/users/julianflapper/following{/other_user}", "gists_url": "https://api.github.com/users/julianflapper/gists{/gist_id}", "starred_url": "https://api.github.com/users/julianflapper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julianflapper/subscriptions", "organizations_url": "https://api.github.com/users/julianflapper/orgs", "repos_url": "https://api.github.com/users/julianflapper/repos", "events_url": "https://api.github.com/users/julianflapper/events{/privacy}", "received_events_url": "https://api.github.com/users/julianflapper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-28T06:15:13Z", "updated_at": "2019-08-18T11:33:59Z", "closed_at": "2019-05-29T07:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWorking with the OpenTripModel OpenAPI yaml and generating a server using openapi-generator (v4.0.0) does not seem to work and gives a connexion error.\r\nTrying to run the server gives the following error:\r\n`\r\nTraceback (most recent call last):\r\n  File \"c:\\python37\\Lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"c:\\python37\\Lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\Julian\\Downloads\\server\\openapi_server\\__main__.py\", line 18, in <module>\r\n    main()\r\n  File \"C:\\Users\\Julian\\Downloads\\server\\openapi_server\\__main__.py\", line 13, in main\r\n    pythonic_params=True)\r\n  File \"C:\\Users\\Julian\\.virtualenvs\\server-Cq-s3KBS\\lib\\site-packages\\connexion\\apps\\flask_app.py\", line 54, in add_api\r\n    api = super(FlaskApp, self).add_api(specification, **kwargs)\r\n  File \"C:\\Users\\Julian\\.virtualenvs\\server-Cq-s3KBS\\lib\\site-packages\\connexion\\apps\\abstract.py\", line 155, in add_api\r\n    options=api_options.as_dict())\r\n  File \"C:\\Users\\Julian\\.virtualenvs\\server-Cq-s3KBS\\lib\\site-packages\\connexion\\apis\\abstract.py\", line 72, in __init__\r\n    self.specification = Specification.load(specification, arguments=arguments)\r\n  File \"C:\\Users\\Julian\\.virtualenvs\\server-Cq-s3KBS\\lib\\site-packages\\connexion\\spec.py\", line 151, in load\r\n    return cls.from_file(spec, arguments=arguments)\r\n  File \"C:\\Users\\Julian\\.virtualenvs\\server-Cq-s3KBS\\lib\\site-packages\\connexion\\spec.py\", line 108, in from_file\r\n    return cls.from_dict(spec)\r\n  File \"C:\\Users\\Julian\\.virtualenvs\\server-Cq-s3KBS\\lib\\site-packages\\connexion\\spec.py\", line 146, in from_dict\r\n    return OpenAPISpecification(spec)\r\n  File \"C:\\Users\\Julian\\.virtualenvs\\server-Cq-s3KBS\\lib\\site-packages\\connexion\\spec.py\", line 39, in __init__\r\n    self._validate_spec(raw_spec)\r\n  File \"C:\\Users\\Julian\\.virtualenvs\\server-Cq-s3KBS\\lib\\site-packages\\connexion\\spec.py\", line 232, in _validate_spec\r\n    raise InvalidSpecification.create_from(e)\r\nconnexion.exceptions.InvalidSpecification: Required list has not defined properties: ['type']\r\n`\r\n\r\n### Expected behaviour\r\n\r\nThe server should run, but it doesn't. The SwaggerHub editor says the code is valid.\r\n Running openapi-spec-validator also gives the same error. However, other validators say it is valid. And neither openapi-spec-validator nor connexion give the exact location of the error, so I don't know where it is and how to fix it.\r\n\r\n### Actual behaviour\r\n\r\nGenerating the server seems to work fine, although running it gives the error\r\n`connexion.exceptions.InvalidSpecification: Required list has not defined properties: ['type']`\r\n\r\n### Steps to reproduce\r\n\r\nDownload the OpenTripModel openapi spec: https://raw.githubusercontent.com/opentripmodel/opentripmodel/master/api/swagger.yaml\r\n\r\nInstall generator using NPM\r\n`npm install @openapitools/openapi-generator-cli -g`\r\n\r\nRun the generator on the swagger.yaml file into ./server/ dir\r\n`openapi-generator generate -i .\\swagger.yaml -g python-flask -o .\\server`\r\n\r\nMove into new server dir \r\n`cd server`\r\n\r\nInstall requirements\r\n`pip3 install -r requirements.txt`\r\n\r\nRun server\r\n`python3 -m openapi_server`\r\n\r\nAnd it should give the error.\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\nPython 3.7.3\r\n- `pip show connexion | grep \"^Version\\:\"`\r\nOn a Windows system so grep doesn't work, but connexion version is 2.0.2 according to Pipfile", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/950", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/950/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/950/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/950/events", "html_url": "https://github.com/zalando/connexion/issues/950", "id": 446188374, "node_id": "MDU6SXNzdWU0NDYxODgzNzQ=", "number": 950, "title": "swagger-ui incompatible with latest openapi-spec-validator? pyaml collision?", "user": {"login": "tommyjcarpenter", "id": 9419125, "node_id": "MDQ6VXNlcjk0MTkxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9419125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyjcarpenter", "html_url": "https://github.com/tommyjcarpenter", "followers_url": "https://api.github.com/users/tommyjcarpenter/followers", "following_url": "https://api.github.com/users/tommyjcarpenter/following{/other_user}", "gists_url": "https://api.github.com/users/tommyjcarpenter/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyjcarpenter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyjcarpenter/subscriptions", "organizations_url": "https://api.github.com/users/tommyjcarpenter/orgs", "repos_url": "https://api.github.com/users/tommyjcarpenter/repos", "events_url": "https://api.github.com/users/tommyjcarpenter/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyjcarpenter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-20T15:45:48Z", "updated_at": "2019-05-20T17:58:22Z", "closed_at": "2019-05-20T17:58:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nThis just broke between last Friday and today. It looks like validator just had a commit 6 hours ago, though it's not apparent to me what the problem is here. \r\n\r\nMy package (called `a1`) depends on `requests, Flask, gevent, connexion[swagger-ui], jsonschema`. I do not specify any versions of these in my setup. \r\n\r\nIt looks like spec validator: https://github.com/p1c2u/openapi-spec-validator/blob/master/setup.py#L72\r\nwants PyYaml > 5.1\r\n\r\nIt looks like connexion https://github.com/zalando/connexion/blob/master/setup.py#L26\r\nalso wants 5.1\r\n\r\nrequests, flask, gevent, jsonschema do not appear to depend on pyyaml\r\n\r\n\r\n```\r\nRequirement already satisfied: requests in /usr/lib/python3.7/site-packages (from a1==0.6.0) (2.21.0)\r\nRequirement already satisfied: Flask in /usr/lib/python3.7/site-packages (from a1==0.6.0) (1.0.3)\r\nRequirement already satisfied: connexion[swagger-ui] in /usr/lib/python3.7/site-packages (from a1==0.6.0) (2.2.0)\r\nRequirement already satisfied: gevent in /usr/lib/python3.7/site-packages (from a1==0.6.0) (1.4.0)\r\nRequirement already satisfied: rmr in /usr/lib/python3.7/site-packages (from a1==0.6.0) (0.10.1)\r\nRequirement already satisfied: jsonschema in /usr/lib/python3.7/site-packages (from a1==0.6.0) (2.6.0)\r\nRequirement already satisfied: chardet>=3.0.2 in /usr/lib/python3.7/site-packages (from requests->a1==0.6.0) (3.0.4)\r\nRequirement already satisfied: idna>=2.5 in /usr/lib/python3.7/site-packages (from requests->a1==0.6.0) (2.8)\r\nRequirement already satisfied: urllib3>=1.21.1 in /usr/lib/python3.7/site-packages (from requests->a1==0.6.0) (1.24.2)\r\nRequirement already satisfied: itsdangerous>=0.24 in /usr/lib/python3.7/site-packages (from Flask->a1==0.6.0) (1.1.0)\r\nRequirement already satisfied: click>=5.1 in /usr/lib/python3.7/site-packages (from Flask->a1==0.6.0) (7.0)\r\nRequirement already satisfied: Werkzeug>=0.14 in /usr/lib/python3.7/site-packages (from Flask->a1==0.6.0) (0.15.4)\r\nRequirement already satisfied: Jinja2>=2.10 in /usr/lib/python3.7/site-packages (from Flask->a1==0.6.0) (2.10.1)\r\nRequirement already satisfied: clickclick>=1.2 in /usr/lib/python3.7/site-packages (from connexion[swagger-ui]->a1==0.6.0) (1.2.2)\r\nRequirement already satisfied: inflection>=0.3.1 in /usr/lib/python3.7/site-packages (from connexion[swagger-ui]->a1==0.6.0) (0.3.1)\r\nRequirement already satisfied: PyYAML>=3.13 in /usr/lib/python3.7/site-packages (from connexion[swagger-ui]->a1==0.6.0) (3.13)\r\nRequirement already satisfied: openapi-spec-validator>=0.2.4 in /usr/lib/python3.7/site-packages (from connexion[swagger-ui]->a1==0.6.0) (0.2.7)\r\nRequirement already satisfied: six>=1.9 in /usr/lib/python3.7/site-packages (from connexion[swagger-ui]->a1==0.6.0) (1.12.0)\r\nRequirement already satisfied: swagger-ui-bundle>=0.0.2; extra == \"swagger-ui\" in /usr/lib/python3.7/site-packages (from connexion[swagger-ui]->a1==0.6.0) (0.0.3)\r\nRequirement already satisfied: greenlet>=0.4.14; platform_python_implementation == \"CPython\" in /usr/lib/python3.7/site-packages (from gevent->a1==0.6.0) (0.4.15)\r\nRequirement already satisfied: MarkupSafe>=0.23 in /usr/lib/python3.7/site-packages (from Jinja2>=2.10->Flask->a1==0.6.0) (1.1.1)\r\nInstalling collected packages: a1\r\n  Found existing installation: a1 0.6.0\r\n    Uninstalling a1-0.6.0:\r\n      Successfully uninstalled a1-0.6.0\r\n  Running setup.py develop for a1\r\nSuccessfully installed a1\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 583, in _build_master\r\n    ws.require(__requires__)\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 900, in require\r\n    needed = self.resolve(parse_requirements(requirements))\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 791, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (PyYAML 3.13 (/usr/lib/python3.7/site-packages), Requirement.parse('PyYAML>=5.1'), {'openapi-spec-validator'})\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/run.py\", line 6, in <module>\r\n    from pkg_resources import load_entry_point\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3241, in <module>\r\n    @_call_aside\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3225, in _call_aside\r\n    f(*args, **kwargs)\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3254, in _initialize_master_working_set\r\n    working_set = WorkingSet._build_master()\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 585, in _build_master\r\n    return cls._build_from_requirements(__requires__)\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 598, in _build_from_requirements\r\n    dists = ws.resolve(reqs, Environment())\r\n  File \"/usr/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 791, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (PyYAML 3.13 (/usr/lib/python3.7/site-packages), Requirement.parse('PyYAML>=5.1'), {'openapi-spec-validator'})\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n```\r\nPython 3.7.3\r\n```\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n```\r\nVersion: 2.2.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/949", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/949/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/949/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/949/events", "html_url": "https://github.com/zalando/connexion/issues/949", "id": 445905149, "node_id": "MDU6SXNzdWU0NDU5MDUxNDk=", "number": 949, "title": "How to choose swagger-ui ver. 2.2.10 over 3.20.5 when using connexion[swagger-ui]", "user": {"login": "vladdoster", "id": 10052309, "node_id": "MDQ6VXNlcjEwMDUyMzA5", "avatar_url": "https://avatars1.githubusercontent.com/u/10052309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladdoster", "html_url": "https://github.com/vladdoster", "followers_url": "https://api.github.com/users/vladdoster/followers", "following_url": "https://api.github.com/users/vladdoster/following{/other_user}", "gists_url": "https://api.github.com/users/vladdoster/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladdoster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladdoster/subscriptions", "organizations_url": "https://api.github.com/users/vladdoster/orgs", "repos_url": "https://api.github.com/users/vladdoster/repos", "events_url": "https://api.github.com/users/vladdoster/events{/privacy}", "received_events_url": "https://api.github.com/users/vladdoster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-20T03:10:54Z", "updated_at": "2020-06-16T14:27:43Z", "closed_at": "2020-06-16T14:27:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nHow do I use swagger-ui-2.2.10 over 3.20.5?\r\n\r\n\r\n### Expected behaviour\r\n\r\nI want to have all files instead of relying on webpack to bundle the assets. I need to modify the swagger-oauth.js file.\r\n\r\n### Actual behaviour\r\n\r\nI have to do convoluted things with docker and it still is expecting node as a dep. I am lost. . . \r\n\r\n### Steps to reproduce\r\n\r\nN/A\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/944", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/944/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/944/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/944/events", "html_url": "https://github.com/zalando/connexion/issues/944", "id": 443819389, "node_id": "MDU6SXNzdWU0NDM4MTkzODk=", "number": 944, "title": "Is there a way to disable security for specific endpoints?", "user": {"login": "pheanex", "id": 10408624, "node_id": "MDQ6VXNlcjEwNDA4NjI0", "avatar_url": "https://avatars1.githubusercontent.com/u/10408624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pheanex", "html_url": "https://github.com/pheanex", "followers_url": "https://api.github.com/users/pheanex/followers", "following_url": "https://api.github.com/users/pheanex/following{/other_user}", "gists_url": "https://api.github.com/users/pheanex/gists{/gist_id}", "starred_url": "https://api.github.com/users/pheanex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pheanex/subscriptions", "organizations_url": "https://api.github.com/users/pheanex/orgs", "repos_url": "https://api.github.com/users/pheanex/repos", "events_url": "https://api.github.com/users/pheanex/events{/privacy}", "received_events_url": "https://api.github.com/users/pheanex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-14T09:52:52Z", "updated_at": "2019-06-03T15:51:12Z", "closed_at": "2019-06-03T15:51:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nWe want to be able to custom configure security on different paths. (I.e. enable/disable security entirely). As far as I understand from these discussions, this should be possible by providing an empty security-object on a operation object:\r\n* https://github.com/OAI/OpenAPI-Specification/issues/1278\r\n* https://github.com/OAI/OpenAPI-Specification/issues/1684\r\n* https://github.com/OAI/OpenAPI-Specification/pull/1886\r\n\r\n=> It seems that overriding security on operation level does not work as intended, or am I doing something wrong here?\r\n\r\n\r\n### Expected behaviour\r\nWhen I specify an empty security object on an operation object, I would expect that the application does not require authentication of any kind on this path, as the global security object is overridden.\r\n\r\n\r\n### Actual behaviour\r\nCalling the path still requires authentication and fails.\r\n\r\n\r\n### Steps to reproduce\r\nSpecify a global security setting and override it on a operation object and call the application on that endpoint.\r\n\r\n\r\n### Additional info:\r\nPython 3.7.3\r\nVersion: 2.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/943", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/943/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/943/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/943/events", "html_url": "https://github.com/zalando/connexion/issues/943", "id": 443134040, "node_id": "MDU6SXNzdWU0NDMxMzQwNDA=", "number": 943, "title": "How to change index.html in served index.html", "user": {"login": "vladdoster", "id": 10052309, "node_id": "MDQ6VXNlcjEwMDUyMzA5", "avatar_url": "https://avatars1.githubusercontent.com/u/10052309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladdoster", "html_url": "https://github.com/vladdoster", "followers_url": "https://api.github.com/users/vladdoster/followers", "following_url": "https://api.github.com/users/vladdoster/following{/other_user}", "gists_url": "https://api.github.com/users/vladdoster/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladdoster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladdoster/subscriptions", "organizations_url": "https://api.github.com/users/vladdoster/orgs", "repos_url": "https://api.github.com/users/vladdoster/repos", "events_url": "https://api.github.com/users/vladdoster/events{/privacy}", "received_events_url": "https://api.github.com/users/vladdoster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-05-12T18:40:01Z", "updated_at": "2019-05-13T16:20:03Z", "closed_at": "2019-05-13T16:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nWe want to change the favicon and a few other things when it comes to the served index.html file. We have tried copying over our custom version to what seems to be the served index.html with the following line \r\n\r\n`COPY custom_python_libs/swagger_ui_bundle/vendor/swagger-ui-3.20.5/index.html /usr/local/lib/python3.7/site-packages/swagger_ui_bundle/vendor/swagger-ui-3.20.5/index.html`\r\n\r\nIt seems to have no effect. Is there some sort of index.html cleansing going on?\r\n\r\n### Expected behaviour\r\n\r\nOur custom index.html changes would be visible when navigating to our api url\r\nhttp://localhost:8000/api/v1/ui/\r\n\r\n### Actual behaviour\r\n\r\nStill the default index.html being served.\r\n\r\n### Steps to reproduce\r\n\r\nRun any connexion app in docker and try to modify the served index.html\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/935", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/935/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/935/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/935/events", "html_url": "https://github.com/zalando/connexion/issues/935", "id": 441090833, "node_id": "MDU6SXNzdWU0NDEwOTA4MzM=", "number": 935, "title": "multipart/form-data content validation", "user": {"login": "maximumG", "id": 4469833, "node_id": "MDQ6VXNlcjQ0Njk4MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4469833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maximumG", "html_url": "https://github.com/maximumG", "followers_url": "https://api.github.com/users/maximumG/followers", "following_url": "https://api.github.com/users/maximumG/following{/other_user}", "gists_url": "https://api.github.com/users/maximumG/gists{/gist_id}", "starred_url": "https://api.github.com/users/maximumG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maximumG/subscriptions", "organizations_url": "https://api.github.com/users/maximumG/orgs", "repos_url": "https://api.github.com/users/maximumG/repos", "events_url": "https://api.github.com/users/maximumG/events{/privacy}", "received_events_url": "https://api.github.com/users/maximumG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-07T07:53:09Z", "updated_at": "2019-12-03T04:12:50Z", "closed_at": "2019-12-03T04:12:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI'm trying to have some validation on a REST route accepting a multipart/form-data content. This multipart is composed of 2 contents:\r\n\r\n* a ZIP file named `stack_zip`  (application/zip)\r\n* a form-data named `variables` (application/json)\r\n\r\n![multipart](https://user-images.githubusercontent.com/4469833/57282086-a2d40300-70ac-11e9-9911-61fa66f1fbbb.png)\r\n\r\n### Expected behaviour\r\n\r\nThe `variables` content should be validated against a schema defined in openapi.yaml.\r\n\r\n### Actual behaviour\r\n\r\nThe `variables` content is received by connexion as a raw string even if the `Content-Type` is set to `application/json`.\r\n\r\nIt also seems that Werkzeug is:\r\n\r\n* keeping the headers when parsing the a File object  (application/zip)\r\n* removing the headers when parsing any non-file object\r\n\r\n### Steps to reproduce\r\n\r\nOpenAPI schema.\r\n\r\n```yaml\r\n\r\n  /zones/{zoneId}/deploy_stack:\r\n    post:\r\n      tags:\r\n      - Stack\r\n      summary: Deploy a Docker Stack\r\n      operationId: api.v1.view.deploy_stack\r\n      responses:\r\n        200:\r\n          description: Successful response - Docker stack deployed.\r\n        404:\r\n          description: The specified `Zone` does not exist.\r\n      requestBody:\r\n        content:\r\n          multipart/form-data:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                variables:\r\n                  type: object\r\n                  properties:\r\n                    stack_name:\r\n                      type: string\r\n                stack_zip:\r\n                  type: string\r\n                  format: binary\r\n            encoding:\r\n              stack_zip:\r\n                contentType: application/zip\r\n              variables:\r\n                contentType: application/json\r\n\r\n```\r\n\r\nClient command:\r\n\r\n```bash\r\n\r\ncurl -i -X POST 'http://localhost:9090/v1/zones/bo/deploy_stack'           -H 'Content-type:multipart/form-data'           -F 'stack_zip=@artifacts.zip;type=application/zip'           -F 'variables={\"stak_name\": \"bar\"}; type=application/json'\r\n```\r\n\r\n\r\n### Additional info:\r\n\r\n I tested this feature against the connexion 2.0 main branch as well as the branch from https://github.com/zalando/connexion/pull/760\r\n\r\nI guess it would be nice if the library could parse the encoding section in the YAML specs and try to convert the form in a JSON object in the content-type is set to application/json. I guess I could start by tryiing to modify the code in #760 and add support for encoding.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/932", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/932/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/932/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/932/events", "html_url": "https://github.com/zalando/connexion/issues/932", "id": 439661185, "node_id": "MDU6SXNzdWU0Mzk2NjExODU=", "number": 932, "title": "Complex validation for query parameters doesn't work", "user": {"login": "lovesuper", "id": 1582432, "node_id": "MDQ6VXNlcjE1ODI0MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1582432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lovesuper", "html_url": "https://github.com/lovesuper", "followers_url": "https://api.github.com/users/lovesuper/followers", "following_url": "https://api.github.com/users/lovesuper/following{/other_user}", "gists_url": "https://api.github.com/users/lovesuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lovesuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lovesuper/subscriptions", "organizations_url": "https://api.github.com/users/lovesuper/orgs", "repos_url": "https://api.github.com/users/lovesuper/repos", "events_url": "https://api.github.com/users/lovesuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lovesuper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-02T15:47:29Z", "updated_at": "2019-05-03T11:43:15Z", "closed_at": "2019-05-03T11:43:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI have write come custom validator for UUID type validation, and declared following statements:\r\n```\r\nuid_path:\r\n  description: Some unique identifier of some entity\r\n  in: path\r\n  name: uid_path\r\n  required: true\r\n  schema:\r\n    format: x_uid\r\n    type: string\r\n```\r\n### Expected behaviour\r\n\r\nIt would validate my path parameter, and deny such strings as \"abcd\"\r\n\r\n### Actual behaviour\r\n\r\nIt wouldn't and such string as \"abcd\" will get to the View\r\n\r\n### Steps to reproduce\r\n\r\nEven following simple code doesn't work:\r\n```\r\nuid_path:\r\n  description: Some unique identifier of some entity\r\n  in: path\r\n  name: uid_path\r\n  required: true\r\n  schema:\r\n    enum: [\"A\", \"B\", \"C\", \"D\"]\r\n    type: string\r\n```\r\nIt allows ANY string to pass through . But not integer to be honest\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `Python 3.7.3`\r\n- `Version: 2018.0.dev1`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/931", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/931/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/931/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/931/events", "html_url": "https://github.com/zalando/connexion/issues/931", "id": 439249409, "node_id": "MDU6SXNzdWU0MzkyNDk0MDk=", "number": 931, "title": "how to fail bad Content-Type headers?", "user": {"login": "tommyjcarpenter", "id": 9419125, "node_id": "MDQ6VXNlcjk0MTkxMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9419125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyjcarpenter", "html_url": "https://github.com/tommyjcarpenter", "followers_url": "https://api.github.com/users/tommyjcarpenter/followers", "following_url": "https://api.github.com/users/tommyjcarpenter/following{/other_user}", "gists_url": "https://api.github.com/users/tommyjcarpenter/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyjcarpenter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyjcarpenter/subscriptions", "organizations_url": "https://api.github.com/users/tommyjcarpenter/orgs", "repos_url": "https://api.github.com/users/tommyjcarpenter/repos", "events_url": "https://api.github.com/users/tommyjcarpenter/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyjcarpenter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-01T17:36:08Z", "updated_at": "2019-05-01T17:53:34Z", "closed_at": "2019-05-01T17:53:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nIf you have an endpoinnt that accepts `application/json`, but you send the connexion server a JSON but with a Content-Type header of text/plain, the connexion server does not complain\r\n\r\n\r\n### Expected behaviour\r\n\r\nIf the swagger spec says the endpoint accepts only `application/json`, but a client sets the Content-Type header to something else, the connexion server should reject. \r\n\r\n\r\n\r\n### Actual behaviour\r\n\r\nThe connexion server does not reject the request as long as the payload is correct (meaning the header seems to be ignored)\r\n\r\n\r\n### Steps to reproduce\r\n\r\nMake a swagger spec that accepts only application/json, and curl it with Content-Type: text/plain. \r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n3.7.3\r\n\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n\r\nVersion: 2.2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/929", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/929/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/929/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/929/events", "html_url": "https://github.com/zalando/connexion/issues/929", "id": 437139303, "node_id": "MDU6SXNzdWU0MzcxMzkzMDM=", "number": 929, "title": "Allow setting a different name for a URL parameter and its corresponding python variable", "user": {"login": "geajack", "id": 2124157, "node_id": "MDQ6VXNlcjIxMjQxNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2124157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geajack", "html_url": "https://github.com/geajack", "followers_url": "https://api.github.com/users/geajack/followers", "following_url": "https://api.github.com/users/geajack/following{/other_user}", "gists_url": "https://api.github.com/users/geajack/gists{/gist_id}", "starred_url": "https://api.github.com/users/geajack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geajack/subscriptions", "organizations_url": "https://api.github.com/users/geajack/orgs", "repos_url": "https://api.github.com/users/geajack/repos", "events_url": "https://api.github.com/users/geajack/events{/privacy}", "received_events_url": "https://api.github.com/users/geajack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1354209406, "node_id": "MDU6TGFiZWwxMzU0MjA5NDA2", "url": "https://api.github.com/repos/zalando/connexion/labels/good%20first%20issue", "name": "good first issue", "color": "3dc136", "default": true, "description": ""}, {"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-25T11:04:39Z", "updated_at": "2019-07-11T11:12:34Z", "closed_at": "2019-07-11T11:12:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose I want to implement an endpoint `/data?from=12&until=52` which accepts parameters `from` and `until` (specifying timestamps or something). The problem is that I can't do this because Connexion always uses the name of the query parameter as the name for the Python variable. It's a shame to couple these things together because there are restrictions on Python variable names that don't exist for query parameters - I can't have a Python variable called `from`.\r\n\r\nWhat I would suggest is a solution like this:\r\n\r\n```\r\n/data:\r\n    get:\r\n      operationId: \"controller.get_data\"\r\n      parameters:\r\n      - name: from\r\n        in: query\r\n        x-parameter-name: start_time\r\n        schema:\r\n          type: integer\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/923", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/923/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/923/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/923/events", "html_url": "https://github.com/zalando/connexion/issues/923", "id": 432619658, "node_id": "MDU6SXNzdWU0MzI2MTk2NTg=", "number": 923, "title": "Aiohttp Docs not being generated", "user": {"login": "maitham", "id": 15156137, "node_id": "MDQ6VXNlcjE1MTU2MTM3", "avatar_url": "https://avatars1.githubusercontent.com/u/15156137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maitham", "html_url": "https://github.com/maitham", "followers_url": "https://api.github.com/users/maitham/followers", "following_url": "https://api.github.com/users/maitham/following{/other_user}", "gists_url": "https://api.github.com/users/maitham/gists{/gist_id}", "starred_url": "https://api.github.com/users/maitham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maitham/subscriptions", "organizations_url": "https://api.github.com/users/maitham/orgs", "repos_url": "https://api.github.com/users/maitham/repos", "events_url": "https://api.github.com/users/maitham/events{/privacy}", "received_events_url": "https://api.github.com/users/maitham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-12T15:21:17Z", "updated_at": "2019-05-09T15:44:08Z", "closed_at": "2019-05-09T15:44:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nCreating a new aiohttp application and running does not provide swagger documentation. The static assets do not get loaded. If I run the flaskApp and hit the ui/ endpoint swagger documentation loads, if I switch back to Aiohttp docs are now available. \r\n\r\n\r\n### Expected behaviour\r\nOn first launch of aiohttp application docs should be available. \r\n\r\n\r\n### Actual behaviour\r\nSwagger docs are not available unless flask app is first launched before switching back to aiohttp application. \r\n\r\n\r\n### Steps to reproduce\r\n```\r\nimport connexion\r\n\r\ndef post_greeting(name: str) -> str:\r\n    return 'Hello {name}'.format(name=name)\r\n\r\n\r\nif __name__ == '__main__':\r\n    app = connexion.AioHttpApp(\r\n        __name__,\r\n        port=9090,\r\n        specification_dir='openapi/',\r\n        options={\"swagger_ui\": True,\r\n                 \"swagger_url\":'/docs'})\r\n    app.add_api('hello-world.yaml')\r\n    app.run()\r\n\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` version 3.6.8\r\n- `pip show connexion | grep \"^Version\\:\"` version 2.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/917", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/917/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/917/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/917/events", "html_url": "https://github.com/zalando/connexion/issues/917", "id": 430057068, "node_id": "MDU6SXNzdWU0MzAwNTcwNjg=", "number": 917, "title": "Deploying connexion on aws", "user": {"login": "ctippur", "id": 2225047, "node_id": "MDQ6VXNlcjIyMjUwNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2225047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctippur", "html_url": "https://github.com/ctippur", "followers_url": "https://api.github.com/users/ctippur/followers", "following_url": "https://api.github.com/users/ctippur/following{/other_user}", "gists_url": "https://api.github.com/users/ctippur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctippur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctippur/subscriptions", "organizations_url": "https://api.github.com/users/ctippur/orgs", "repos_url": "https://api.github.com/users/ctippur/repos", "events_url": "https://api.github.com/users/ctippur/events{/privacy}", "received_events_url": "https://api.github.com/users/ctippur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-04-06T17:30:47Z", "updated_at": "2019-04-09T04:09:51Z", "closed_at": "2019-04-09T04:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI am using connexion to deploy a sample app using aws lambda. I am using Zappa to wrap the code and deploy. \r\nI am trying the sample code in the example for jwt. I seem to get a 404 error when I try to access the endpoint.\r\nI am able to get a successful response when I try it locally.\r\nOne of the things I observed is that when I run the app locally, I need to run as\r\n\r\npython -m swagger_server.app but the app_function I need to specify in zappa is swagger_server.app.app\r\n\r\n\r\n### Expected behaviour\r\n\r\nwhen I try the ```https://<aws api gateway endpoint>/dev/auth, I should get back a token.\r\n\r\n### Actual behaviour\r\n\r\nI get a 404 error\r\n\r\n### Steps to reproduce\r\n\r\nSteps are outlined in readme https://github.com/ctippur/zappa-connexion-sample/blob/master/README.md\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n3.6.3\r\n- `pip show connexion | grep \"^Version\\:\"`\r\nVersion: 2.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/916", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/916/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/916/events", "html_url": "https://github.com/zalando/connexion/issues/916", "id": 428107799, "node_id": "MDU6SXNzdWU0MjgxMDc3OTk=", "number": 916, "title": "Question: https configuration/documentation", "user": {"login": "hitzelbe", "id": 49186209, "node_id": "MDQ6VXNlcjQ5MTg2MjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/49186209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hitzelbe", "html_url": "https://github.com/hitzelbe", "followers_url": "https://api.github.com/users/hitzelbe/followers", "following_url": "https://api.github.com/users/hitzelbe/following{/other_user}", "gists_url": "https://api.github.com/users/hitzelbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/hitzelbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hitzelbe/subscriptions", "organizations_url": "https://api.github.com/users/hitzelbe/orgs", "repos_url": "https://api.github.com/users/hitzelbe/repos", "events_url": "https://api.github.com/users/hitzelbe/events{/privacy}", "received_events_url": "https://api.github.com/users/hitzelbe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-02T09:08:03Z", "updated_at": "2019-05-04T14:16:17Z", "closed_at": "2019-05-04T14:16:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nThe current documentation announces more information about \"how to start a https-server\". Details, however, are missing. I miss this part very much right now. Is there any easy way to configure https for Tornado? I haven't found much on this online.\r\n\r\n### Steps to reproduce\r\n\r\nCf. https://connexion.readthedocs.io/en/latest/security.html#https-support \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/915", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/915/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/915/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/915/events", "html_url": "https://github.com/zalando/connexion/issues/915", "id": 428052718, "node_id": "MDU6SXNzdWU0MjgwNTI3MTg=", "number": 915, "title": "app.run starts with 0.0.0.0 not 127.0.0.1", "user": {"login": "ymaki", "id": 5316415, "node_id": "MDQ6VXNlcjUzMTY0MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5316415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymaki", "html_url": "https://github.com/ymaki", "followers_url": "https://api.github.com/users/ymaki/followers", "following_url": "https://api.github.com/users/ymaki/following{/other_user}", "gists_url": "https://api.github.com/users/ymaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymaki/subscriptions", "organizations_url": "https://api.github.com/users/ymaki/orgs", "repos_url": "https://api.github.com/users/ymaki/repos", "events_url": "https://api.github.com/users/ymaki/events{/privacy}", "received_events_url": "https://api.github.com/users/ymaki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-02T06:50:46Z", "updated_at": "2020-08-06T11:09:30Z", "closed_at": "2019-05-04T22:14:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nHi, I've started use connexion as part of OpenAPI Generator.\r\nI just have a question, not a bug probably.\r\nFlaskApp.run() starts with host='0.0.0.0' by default in FlaskApp, while flask's default is 127.0.0.1. \r\nIs this an intended behavior?\r\n\r\n> :param host: the hostname to listen on. Set this to ``'0.0.0.0'`` to\r\n>  have the server available externally as well. Defaults to\r\n>  ``'127.0.0.1'`` or the host in the ``SERVER_NAME`` config variable\r\n>  if present.\r\nhttps://github.com/pallets/flask/blob/master/flask/app.py#L874\r\n\r\nThank you in advance.\r\n\r\n### Expected behaviour\r\n\r\nFlaskApp.run() is expected to start development server on 127.0.0.1 if host parameter isn't specified because Flask does so.\r\n\r\n### Actual behavior\r\n\r\nFlaskApp in connexion serve on 0.0.0.0 by default.\r\nFor example using connexion/examples/openapi3/helloworld/, as we don't specify 'host' parameter, FlaskApp starts on 0.0.0.0.\r\n\r\n```\r\n$ git clone https://github.com/zalando/connexion.git\r\n$ cd connexion/examples/openapi3/helloworld/\r\n$ pip install connexion\r\n$ cat hello.py\r\n#!/usr/bin/env python3\r\n\r\nimport connexion\r\n\r\n\r\ndef post_greeting(name: str) -> str:\r\n    return 'Hello {name}'.format(name=name)\r\n\r\nif __name__ == '__main__':\r\n    app = connexion.FlaskApp(__name__, port=9090, specification_dir='openapi/')\r\n    app.add_api('helloworld-api.yaml', arguments={'title': 'Hello World Example'})\r\n    app.run()\r\n$ python hello.py\r\n(snip)\r\n * Running on http://0.0.0.0:9090/ (Press CTRL+C to quit)\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n$ git clone https://github.com/zalando/connexion.git\r\n$ cd connexion/examples/openapi3/helloworld/\r\n$ pip install connexion\r\n$ python hello.py\r\n```\r\n\r\n### Additional info:\r\n\r\nhttps://github.com/pallets/flask/blob/master/flask/app.py#L924\r\nhttps://github.com/zalando/connexion/blob/master/connexion/apps/flask_app.py#L83\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n\r\n```\r\n$ python --version\r\nPython 3.7.2\r\n$ pip show connexion | grep \"^Version\\:\"\r\nVersion: 2.2.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/910", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/910/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/910/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/910/events", "html_url": "https://github.com/zalando/connexion/issues/910", "id": 426882166, "node_id": "MDU6SXNzdWU0MjY4ODIxNjY=", "number": 910, "title": "Fix: bump jwt example to latest connexion", "user": {"login": "ioggstream", "id": 1140844, "node_id": "MDQ6VXNlcjExNDA4NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1140844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ioggstream", "html_url": "https://github.com/ioggstream", "followers_url": "https://api.github.com/users/ioggstream/followers", "following_url": "https://api.github.com/users/ioggstream/following{/other_user}", "gists_url": "https://api.github.com/users/ioggstream/gists{/gist_id}", "starred_url": "https://api.github.com/users/ioggstream/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ioggstream/subscriptions", "organizations_url": "https://api.github.com/users/ioggstream/orgs", "repos_url": "https://api.github.com/users/ioggstream/repos", "events_url": "https://api.github.com/users/ioggstream/events{/privacy}", "received_events_url": "https://api.github.com/users/ioggstream/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-29T08:57:02Z", "updated_at": "2019-12-12T17:29:10Z", "closed_at": "2019-12-12T17:29:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## I expect\r\n\r\n- [ ] This sample to use 2.2.0 \r\nhttps://github.com/zalando/connexion/blob/1e6aead70a970f852219214b23a81c1e82d1e9bc/examples/openapi3/jwt/requirements.txt#L1\r\n\r\n- [ ] require swagger-ui", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/908", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/908/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/908/events", "html_url": "https://github.com/zalando/connexion/issues/908", "id": 425877549, "node_id": "MDU6SXNzdWU0MjU4Nzc1NDk=", "number": 908, "title": "How to use connexion in application factory?", "user": {"login": "Dexter-C", "id": 3880508, "node_id": "MDQ6VXNlcjM4ODA1MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3880508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dexter-C", "html_url": "https://github.com/Dexter-C", "followers_url": "https://api.github.com/users/Dexter-C/followers", "following_url": "https://api.github.com/users/Dexter-C/following{/other_user}", "gists_url": "https://api.github.com/users/Dexter-C/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dexter-C/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dexter-C/subscriptions", "organizations_url": "https://api.github.com/users/Dexter-C/orgs", "repos_url": "https://api.github.com/users/Dexter-C/repos", "events_url": "https://api.github.com/users/Dexter-C/events{/privacy}", "received_events_url": "https://api.github.com/users/Dexter-C/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-27T10:28:08Z", "updated_at": "2019-05-04T22:13:34Z", "closed_at": "2019-05-04T22:13:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nAm new to Flask, as Flask's document suggested its good practice to always use application factory, \r\n\r\nsrc/__init__.py\r\n`\r\n\r\n    import os\r\n    from flask import Flask\r\n\r\n    def create_app():\r\n\r\n        app = Flask(__name__, instance_relative_config=True)\r\n        app.config.from_mapping(\r\n            SECRET_KEY = 'DEV',\r\n            DATABASE = os.path.join(app.instance_path, 'gallery.sqlite'),\r\n        )\r\n    \r\n        return app\r\n\r\nbut seems connexion can only be used in global.\r\n\r\nis it true that connxion can't be used in application factory? if not please share how to use it in application factory\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/905", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/905/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/905/events", "html_url": "https://github.com/zalando/connexion/issues/905", "id": 421840886, "node_id": "MDU6SXNzdWU0MjE4NDA4ODY=", "number": 905, "title": "uwsgi_metrics is not documented and is broken", "user": {"login": "drummerwolli", "id": 3867569, "node_id": "MDQ6VXNlcjM4Njc1Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3867569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drummerwolli", "html_url": "https://github.com/drummerwolli", "followers_url": "https://api.github.com/users/drummerwolli/followers", "following_url": "https://api.github.com/users/drummerwolli/following{/other_user}", "gists_url": "https://api.github.com/users/drummerwolli/gists{/gist_id}", "starred_url": "https://api.github.com/users/drummerwolli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drummerwolli/subscriptions", "organizations_url": "https://api.github.com/users/drummerwolli/orgs", "repos_url": "https://api.github.com/users/drummerwolli/repos", "events_url": "https://api.github.com/users/drummerwolli/events{/privacy}", "received_events_url": "https://api.github.com/users/drummerwolli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-16T18:56:59Z", "updated_at": "2019-06-12T07:59:00Z", "closed_at": "2019-06-12T07:59:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Description\r\n\r\nIt is possible to have a metrics endpoint in combination with uwsgi_metrics.\r\n- the code is in https://github.com/zalando/connexion/blob/master/connexion/decorators/metrics.py\r\n- the use is documented in those issues: https://github.com/zalando/connexion/issues/49 and https://github.com/zalando/connexion/issues/122\r\n\r\nBut:\r\n1) this is not properly documented. I would argue that just having this in hidden in some GH issues is not the proper way.\r\n2) the functionality breaks with Connexion 2.1.0 (2.0.0 still works fine for me, upgrading to 2.2.0 does not help).\r\n\r\n### Expected behaviour\r\n\r\n- Usage of uwsgi_metrics integration is properly documented.\r\n- The integration is working with the current newest version of Connexion.\r\n\r\n### Actual behaviour\r\n\r\n- Documentation how to integrate this must be searched by users in GH issues or in the repo.\r\n- It does not work with Connexion 2.1.0. I get the following error message:\r\n\r\n```\r\nERROR:flask.app:Exception on / [GET]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 2292, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 1815, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python3.7/dist-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 1718, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.7/dist-packages/flask/_compat.py\", line 35, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python3.7/dist-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n   File \"/usr/local/lib/python3.7/dist-packages/connexion/decorators/decorator.py\", line 48, in wrapper\r\n    response = function(request)\r\n  File \"/usr/local/lib/python3.7/dist-packages/connexion/decorators/metrics.py\", line 39, in wrapper\r\n   status = response.status_code\r\nAttributeError: 'dict' object has no attribute 'status_code'\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n- `pip3 install uwsgi_metrics3` on the system running the Connexion App (Python3 example)\r\n- i think the following steps are optional, because Connexion checks for the module if it is installed. but this is to get the full functionality in Connexion 2.1.0:\r\n    - at the beginning of your code do an `uwsgi_metrics.initialize()`\r\n    - call any endpoint of your application after adding this to your swagger/OpenAPI file:\r\n\r\n```\r\n  /metrics:\r\n    get:\r\n      operationId: \"uwsgi_metrics.view\"\r\n      summary: \"Get request metrics\"\r\n      responses:\r\n        200:\r\n          description: \"Dropwizard metrics\"\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` : `Python 3.7.2`\r\n- `pip show connexion | grep \"^Version\\:\"` : `Version: 2.1.0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/901", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/901/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/901/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/901/events", "html_url": "https://github.com/zalando/connexion/issues/901", "id": 419226687, "node_id": "MDU6SXNzdWU0MTkyMjY2ODc=", "number": 901, "title": "GitHub complains about pyyaml having a security vulnerability", "user": {"login": "ThoreKr", "id": 5465291, "node_id": "MDQ6VXNlcjU0NjUyOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5465291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThoreKr", "html_url": "https://github.com/ThoreKr", "followers_url": "https://api.github.com/users/ThoreKr/followers", "following_url": "https://api.github.com/users/ThoreKr/following{/other_user}", "gists_url": "https://api.github.com/users/ThoreKr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThoreKr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThoreKr/subscriptions", "organizations_url": "https://api.github.com/users/ThoreKr/orgs", "repos_url": "https://api.github.com/users/ThoreKr/repos", "events_url": "https://api.github.com/users/ThoreKr/events{/privacy}", "received_events_url": "https://api.github.com/users/ThoreKr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-10T20:12:08Z", "updated_at": "2019-03-15T12:24:05Z", "closed_at": "2019-03-15T12:24:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nGitHub complains that the used version of pyyaml is smaller than 4.2b1 which is affected by [CVE-2017-18342](https://nvd.nist.gov/vuln/detail/CVE-2017-18342)\r\n\r\nI don't really get why it is considered as high severity since it only affects the non-recommended way of using pyyaml but nevertheless it generates emails on every push to every team member and shows annoying warning signs on almost every page.\r\n\r\n\r\n### Steps to reproduce\r\nSet up a repository with pipenv and install connexion (need to have the affected version of pyyaml in the Pipfile.lock).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/896", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/896/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/896/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/896/events", "html_url": "https://github.com/zalando/connexion/issues/896", "id": 417355636, "node_id": "MDU6SXNzdWU0MTczNTU2MzY=", "number": 896, "title": "Why DELETE operation doesn't support request body argument?", "user": {"login": "darc1", "id": 10958651, "node_id": "MDQ6VXNlcjEwOTU4NjUx", "avatar_url": "https://avatars2.githubusercontent.com/u/10958651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darc1", "html_url": "https://github.com/darc1", "followers_url": "https://api.github.com/users/darc1/followers", "following_url": "https://api.github.com/users/darc1/following{/other_user}", "gists_url": "https://api.github.com/users/darc1/gists{/gist_id}", "starred_url": "https://api.github.com/users/darc1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darc1/subscriptions", "organizations_url": "https://api.github.com/users/darc1/orgs", "repos_url": "https://api.github.com/users/darc1/repos", "events_url": "https://api.github.com/users/darc1/events{/privacy}", "received_events_url": "https://api.github.com/users/darc1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-05T15:28:39Z", "updated_at": "2020-06-25T12:50:33Z", "closed_at": "2019-03-06T09:40:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/zalando/connexion/blob/34c7cb160fec372d386a0daa139df2a568b01ac8/connexion/operations/abstract.py#L273\r\n\r\nHi,\r\nIs there a reason why DELETE verb doesn't support request body in version 2.2.0?\r\nIn version 1.1.15 I was able to send request body as a parameter. \r\n\r\nPython version:\r\n3.6.7\r\nconnexion version:\r\n2.2.0\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/895", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/895/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/895/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/895/events", "html_url": "https://github.com/zalando/connexion/issues/895", "id": 417106284, "node_id": "MDU6SXNzdWU0MTcxMDYyODQ=", "number": 895, "title": "update the dependency", "user": {"login": "pingf", "id": 375315, "node_id": "MDQ6VXNlcjM3NTMxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/375315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pingf", "html_url": "https://github.com/pingf", "followers_url": "https://api.github.com/users/pingf/followers", "following_url": "https://api.github.com/users/pingf/following{/other_user}", "gists_url": "https://api.github.com/users/pingf/gists{/gist_id}", "starred_url": "https://api.github.com/users/pingf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pingf/subscriptions", "organizations_url": "https://api.github.com/users/pingf/orgs", "repos_url": "https://api.github.com/users/pingf/repos", "events_url": "https://api.github.com/users/pingf/events{/privacy}", "received_events_url": "https://api.github.com/users/pingf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-05T04:02:48Z", "updated_at": "2019-03-05T07:02:33Z", "closed_at": "2019-03-05T07:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nconnexion 2.2.0 has requirement jsonschema<3.0.0,>=2.5.1, but you'll have jsonschema 3.0.1 which is incompatible.\r\nopenapi-spec-validator 0.2.6 has requirement jsonschema<3\r\n\r\n\r\n\r\n### Expected behaviour\r\n\r\n\r\n\r\n### Actual behaviour\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nwhen I use poetry or pipenv, it doesnt pass the dependency check, please update the requirements.\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- 3.7.2\r\n- connexion = 2.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/892", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/892/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/892/events", "html_url": "https://github.com/zalando/connexion/issues/892", "id": 416998445, "node_id": "MDU6SXNzdWU0MTY5OTg0NDU=", "number": 892, "title": "TypeError: cannot convert dictionary update sequence element #0 to a sequence", "user": {"login": "prabhu", "id": 7842, "node_id": "MDQ6VXNlcjc4NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabhu", "html_url": "https://github.com/prabhu", "followers_url": "https://api.github.com/users/prabhu/followers", "following_url": "https://api.github.com/users/prabhu/following{/other_user}", "gists_url": "https://api.github.com/users/prabhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabhu/subscriptions", "organizations_url": "https://api.github.com/users/prabhu/orgs", "repos_url": "https://api.github.com/users/prabhu/repos", "events_url": "https://api.github.com/users/prabhu/events{/privacy}", "received_events_url": "https://api.github.com/users/prabhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-04T21:22:12Z", "updated_at": "2019-06-02T19:46:46Z", "closed_at": "2019-03-07T00:46:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nIn openapi 3 mode if we create a method such as post or put that accepts json and returns json along with `type: object` in schema then the method fails with the below error.\r\n\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/c/w/connexion/venv/src/flask/flask/app.py\", line 2310, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/c/w/connexion/venv/src/flask/flask/app.py\", line 1833, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/c/w/connexion/venv/src/flask/flask/app.py\", line 1737, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/c/w/connexion/venv/src/flask/flask/_compat.py\", line 40, in reraise\r\n    raise value\r\n  File \"/c/w/connexion/venv/src/flask/flask/app.py\", line 1831, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/c/w/connexion/venv/src/flask/flask/app.py\", line 1817, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/c/w/connexion/venv/lib/python3.7/site-packages/connexion-2018.0.dev1-py3.7.egg/connexion/decorators/decorator.py\", line 48, in wrapper\r\n    response = function(request)\r\n  File \"/c/w/connexion/venv/lib/python3.7/site-packages/connexion-2018.0.dev1-py3.7.egg/connexion/decorators/uri_parsing.py\", line 143, in wrapper\r\n    response = function(request)\r\n  File \"/c/w/connexion/venv/lib/python3.7/site-packages/connexion-2018.0.dev1-py3.7.egg/connexion/decorators/validation.py\", line 172, in wrapper\r\n    response = function(request)\r\n  File \"/c/w/connexion/venv/lib/python3.7/site-packages/connexion-2018.0.dev1-py3.7.egg/connexion/decorators/parameter.py\", line 108, in wrapper\r\n    request.files, arguments, has_kwargs, sanitize)\r\n  File \"/c/w/connexion/venv/lib/python3.7/site-packages/connexion-2018.0.dev1-py3.7.egg/connexion/operations/abstract.py\", line 275, in get_arguments\r\n    has_kwargs, sanitize))\r\n  File \"/c/w/connexion/venv/lib/python3.7/site-packages/connexion-2018.0.dev1-py3.7.egg/connexion/operations/openapi.py\", line 268, in _get_body_argument\r\n    body_arg.update(body or {})\r\nTypeError: cannot convert dictionary update sequence element #0 to a sequence\r\n127.0.0.1 - - [04/Mar/2019 21:10:14] \"POST /v1.0/greeting HTTP/1.1\" 500 -\r\n```\r\n\r\n\r\n### Expected behaviour\r\n\r\nconnexion should work as expected returning json as the argument .\r\n\r\n### Actual behaviour\r\n\r\nError shown in the description \r\n\r\n### Steps to reproduce\r\n\r\nTo reproduce the error use the helloobj example shown in this branch.\r\n\r\nhttps://github.com/zalando/connexion/compare/master...ngcloud:fix/dict-error-post\r\n\r\n```bash\r\ncd  examples/openapi3/helloobj\r\npython hello.py\r\n\r\n# Visit the swagger ui and make a post request\r\n# http://localhost:9090/v1.0/ui/#/default/hello.post_greeting\r\n# curl -X POST \"http://localhost:9090/v1.0/greeting\" -H  \"accept: application/json\" -H  \"Content-Type: applicaton/json\" -d \"{\\\"name\\\":\\\"fluffy\\\"}\"\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n\r\nPython 3.7.2+\r\n\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n\r\nVersion: 2018.0.dev1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/888", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/888/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/888/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/888/events", "html_url": "https://github.com/zalando/connexion/issues/888", "id": 415292126, "node_id": "MDU6SXNzdWU0MTUyOTIxMjY=", "number": 888, "title": "Unexpected keyword argument for parameter in path/url for patch request", "user": {"login": "huy-springlabs", "id": 46936438, "node_id": "MDQ6VXNlcjQ2OTM2NDM4", "avatar_url": "https://avatars0.githubusercontent.com/u/46936438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huy-springlabs", "html_url": "https://github.com/huy-springlabs", "followers_url": "https://api.github.com/users/huy-springlabs/followers", "following_url": "https://api.github.com/users/huy-springlabs/following{/other_user}", "gists_url": "https://api.github.com/users/huy-springlabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/huy-springlabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huy-springlabs/subscriptions", "organizations_url": "https://api.github.com/users/huy-springlabs/orgs", "repos_url": "https://api.github.com/users/huy-springlabs/repos", "events_url": "https://api.github.com/users/huy-springlabs/events{/privacy}", "received_events_url": "https://api.github.com/users/huy-springlabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-27T19:37:32Z", "updated_at": "2019-02-27T22:25:07Z", "closed_at": "2019-02-27T22:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nWhen you have both URL parameters and body parameters, connexion throws an error that the URL parameter is an unexpected keyword argument.\r\n\r\n\r\n### Expected behaviour\r\nIn my yml file below, I defined a parameter in the path/URL (i.e. organizationEmail) and I define the requestBody (i.e. ParticipantComplete schema which is a dict with keys: publicKey and revHash). Connexion should not be throwing an error.\r\n\r\n\r\n### Actual behaviour\r\n```\r\n/connexion/decorators/parameter.py:126: TypeError\r\nv2_complete_participant() got an unexpected keyword argument 'organizationEmail'\r\n```\r\n\r\n### Steps to reproduce\r\nCreate the openapi spec as defined below and make a call to the endpoint.\r\n\r\n\r\n### Additional info:\r\n**api.yml**\r\n```\r\nopenapi: '3.0.2'\r\npaths:\r\n  /v2/participants/{organizationEmail}:\r\n    patch:\r\n      x-openapi-router-controller: app.controllers.v2.participants\r\n      operationId: v2_complete_participant\r\n      summary: complete onboarding\r\n      security:\r\n        - JWTAuth: []\r\n      parameters:\r\n        - name: organizationEmail\r\n          in: path\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/Email'\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/ParticipantComplete'\r\n      responses:\r\n        201:\r\n          $ref: '#/components/responses/ParticipantCompleted'\r\n        default:\r\n          $ref: '#/components/responses/Error'\r\n\r\n```\r\n**test_controller.py**\r\n```\r\n    def test_v2_complete_participant_success(self):\r\n        request_body = {'publicKey': 'publicKey', 'revHash': 'revHash'}\r\n        response = self.client.patch(\r\n            '/v2/participants/test@gmail.com',\r\n            data=json.dumps(request_body),\r\n            headers=prepare_headers(None),\r\n            content_type='application/json',\r\n        )\r\n        self.assertEqual(response.status_code, HTTPStatus.CREATED)\r\n\r\n```\r\n**controller.py**\r\n```\r\ndef v2_complete_participant(body: Dict) -> Tuple[None, HTTPStatus]:\r\n\r\n    return None, HTTPStatus.CREATED\r\n```\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\nPython 3.6.8\r\n- `pip show connexion | grep \"^Version\\:\"`\r\nVersion: 2.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/886", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/886/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/886/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/886/events", "html_url": "https://github.com/zalando/connexion/issues/886", "id": 413901041, "node_id": "MDU6SXNzdWU0MTM5MDEwNDE=", "number": 886, "title": "Cannot install connextion[swagger-ui] due to dependencies collision", "user": {"login": "czchen", "id": 98758, "node_id": "MDQ6VXNlcjk4NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/98758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czchen", "html_url": "https://github.com/czchen", "followers_url": "https://api.github.com/users/czchen/followers", "following_url": "https://api.github.com/users/czchen/following{/other_user}", "gists_url": "https://api.github.com/users/czchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/czchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czchen/subscriptions", "organizations_url": "https://api.github.com/users/czchen/orgs", "repos_url": "https://api.github.com/users/czchen/repos", "events_url": "https://api.github.com/users/czchen/events{/privacy}", "received_events_url": "https://api.github.com/users/czchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-02-25T01:54:06Z", "updated_at": "2019-03-07T00:57:22Z", "closed_at": "2019-03-07T00:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWe cannot install connextion[swagger-ui] via `pipenv install 'connexion[swagger-ui]'` due to broken dependencies in pyyaml. The problem is that `openapi-spec-validator` version `0.2.5` locks to `PyYAML>=4.2b1`, which conflicts with other packages. Lock `openapi-spec-validator` can solve the problem, but I am not sure if that is a good idea or not.\r\n\r\nThe following is dependency graph.\r\n\r\n```\r\n$ pipenv graph\r\nconnexion==2.2.0\r\n  - clickclick [required: >=1.2, installed: 1.2.2]\r\n    - click [required: >=4.0, installed: 7.0]\r\n    - PyYAML [required: >=3.11, installed: 3.13]\r\n  - flask [required: >=0.10.1, installed: 1.0.2]\r\n    - click [required: >=5.1, installed: 7.0]\r\n    - itsdangerous [required: >=0.24, installed: 1.1.0]\r\n    - Jinja2 [required: >=2.10, installed: 2.10]\r\n      - MarkupSafe [required: >=0.23, installed: 1.1.1]\r\n    - Werkzeug [required: >=0.14, installed: 0.14.1]\r\n  - inflection [required: >=0.3.1, installed: 0.3.1]\r\n  - jsonschema [required: >=2.5.1,<3.0.0, installed: 2.6.0]\r\n  - openapi-spec-validator [required: >=0.2.4, installed: 0.2.5]\r\n    - jsonschema [required: <3, installed: 2.6.0]\r\n    - PyYAML [required: >=4.2b1, installed: 3.13]\r\n    - six [required: Any, installed: 1.12.0]\r\n  - PyYAML [required: >=3.13, installed: 3.13]\r\n  - requests [required: >=2.9.1, installed: 2.21.0]\r\n    - certifi [required: >=2017.4.17, installed: 2018.11.29]\r\n    - chardet [required: >=3.0.2,<3.1.0, installed: 3.0.4]\r\n    - idna [required: >=2.5,<2.9, installed: 2.8]\r\n    - urllib3 [required: >=1.21.1,<1.25, installed: 1.24.1]\r\n  - six [required: >=1.9, installed: 1.12.0]\r\nswagger-ui-bundle==0.0.3\r\n  - Jinja2 [required: >=2.0, installed: 2.10]\r\n    - MarkupSafe [required: >=0.23, installed: 1.1.1]\r\n```\r\n\r\n\r\n### Expected behaviour\r\n\r\n\r\n\r\n### Actual behaviour\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```\r\npipenv install 'connexion[swagger-ui]'\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/884", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/884/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/884/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/884/events", "html_url": "https://github.com/zalando/connexion/issues/884", "id": 412347244, "node_id": "MDU6SXNzdWU0MTIzNDcyNDQ=", "number": 884, "title": "Invalid Specification Error", "user": {"login": "Rev0kz", "id": 35949773, "node_id": "MDQ6VXNlcjM1OTQ5Nzcz", "avatar_url": "https://avatars1.githubusercontent.com/u/35949773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rev0kz", "html_url": "https://github.com/Rev0kz", "followers_url": "https://api.github.com/users/Rev0kz/followers", "following_url": "https://api.github.com/users/Rev0kz/following{/other_user}", "gists_url": "https://api.github.com/users/Rev0kz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rev0kz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rev0kz/subscriptions", "organizations_url": "https://api.github.com/users/Rev0kz/orgs", "repos_url": "https://api.github.com/users/Rev0kz/repos", "events_url": "https://api.github.com/users/Rev0kz/events{/privacy}", "received_events_url": "https://api.github.com/users/Rev0kz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-20T10:16:39Z", "updated_at": "2019-03-02T03:06:00Z", "closed_at": "2019-03-02T03:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "###   application/json  is not of type 'array'\r\n\r\nSomeone help me out........Thanks in advance\r\n\r\n\r\n    raise InvalidSpecification.create_from(e)\r\nconnexion.exceptions.InvalidSpecification: '-\"application/json\"' is not of type 'array'\r\n\r\nFailed validating 'type' in schema['properties']['produces']['allOf'][0]:\r\n    {'items': {'$ref': '#/definitions/mimeType'},\r\n     'type': 'array',\r\n     'uniqueItems': True}\r\n\r\nOn instance['produces']:\r\n    '-\"application/json\"'\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/880", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/880/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/880/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/880/events", "html_url": "https://github.com/zalando/connexion/issues/880", "id": 411437708, "node_id": "MDU6SXNzdWU0MTE0Mzc3MDg=", "number": 880, "title": "block mapping error ", "user": {"login": "Rev0kz", "id": 35949773, "node_id": "MDQ6VXNlcjM1OTQ5Nzcz", "avatar_url": "https://avatars1.githubusercontent.com/u/35949773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rev0kz", "html_url": "https://github.com/Rev0kz", "followers_url": "https://api.github.com/users/Rev0kz/followers", "following_url": "https://api.github.com/users/Rev0kz/following{/other_user}", "gists_url": "https://api.github.com/users/Rev0kz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rev0kz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rev0kz/subscriptions", "organizations_url": "https://api.github.com/users/Rev0kz/orgs", "repos_url": "https://api.github.com/users/Rev0kz/repos", "events_url": "https://api.github.com/users/Rev0kz/events{/privacy}", "received_events_url": "https://api.github.com/users/Rev0kz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-18T11:47:18Z", "updated_at": "2019-02-19T10:18:23Z", "closed_at": "2019-02-19T10:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I tried to run the following swagger.yml but it displayed the following error. I help me out, please.\r\n\r\n```\r\n\"expected <block end>, but found %r\" % token.id, token.start_mark)\r\nyaml.parser.ParserError: while parsing a block mapping\r\n  in \"<unicode string>\", line 20, column 7:\r\n          operationId: \"authors.read\"\r\n          ^\r\nexpected <block end>, but found '<block mapping start>'\r\n  in \"<unicode string>\", line 25, column 9:\r\n            200:\r\n ```           ^\r\n\r\n\r\n\r\n              \r\n     \r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/875", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/875/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/875/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/875/events", "html_url": "https://github.com/zalando/connexion/issues/875", "id": 410640915, "node_id": "MDU6SXNzdWU0MTA2NDA5MTU=", "number": 875, "title": "oauth_problem_middleware not catching OauthResponseProblem in aiohttpapp", "user": {"login": "arastel", "id": 6078696, "node_id": "MDQ6VXNlcjYwNzg2OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6078696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arastel", "html_url": "https://github.com/arastel", "followers_url": "https://api.github.com/users/arastel/followers", "following_url": "https://api.github.com/users/arastel/following{/other_user}", "gists_url": "https://api.github.com/users/arastel/gists{/gist_id}", "starred_url": "https://api.github.com/users/arastel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arastel/subscriptions", "organizations_url": "https://api.github.com/users/arastel/orgs", "repos_url": "https://api.github.com/users/arastel/repos", "events_url": "https://api.github.com/users/arastel/events{/privacy}", "received_events_url": "https://api.github.com/users/arastel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-15T07:33:56Z", "updated_at": "2019-03-02T03:34:41Z", "closed_at": "2019-03-02T03:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nAioHttpApp is shipped with a dedicated [middleware for wrapping oauth errors](https://github.com/zalando/connexion/blob/master/connexion/apis/aiohttp_api.py#L33) in order not to send default 500 responses.\r\nProblem is, OAuthResponseProblem seems not to be included and is then raising an error 500 when the api key is not valid.\r\nFrom my perspective, adding OAuthResponseProblem as an catched exception should solve this problem.\r\n\r\n### Expected behaviour\r\n\r\nProviding an api key that is not valid should raise an Unauthorized 401 error.\r\n\r\n### Actual behaviour\r\n\r\nError code 500 without custom description is provided\r\n\r\n### Steps to reproduce\r\n\r\nUsing api key authentication managed by a custom x-apikeyInfoFunc, any request without a valid api key will [raise an OauthResponseProblem](https://github.com/zalando/connexion/blob/master/connexion/decorators/security.py#L270) here and won't be transformed in _aiohttp code terminology_. \r\n\r\n### Additional info:\r\n\r\npython 3.7.1\r\nconnexion 2.2.0\r\naiohttp 3.5.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/872", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/872/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/872/events", "html_url": "https://github.com/zalando/connexion/issues/872", "id": 408146512, "node_id": "MDU6SXNzdWU0MDgxNDY1MTI=", "number": 872, "title": "Struggling to start with a basic AioHttpApp", "user": {"login": "arastel", "id": 6078696, "node_id": "MDQ6VXNlcjYwNzg2OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6078696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arastel", "html_url": "https://github.com/arastel", "followers_url": "https://api.github.com/users/arastel/followers", "following_url": "https://api.github.com/users/arastel/following{/other_user}", "gists_url": "https://api.github.com/users/arastel/gists{/gist_id}", "starred_url": "https://api.github.com/users/arastel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arastel/subscriptions", "organizations_url": "https://api.github.com/users/arastel/orgs", "repos_url": "https://api.github.com/users/arastel/repos", "events_url": "https://api.github.com/users/arastel/events{/privacy}", "received_events_url": "https://api.github.com/users/arastel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-08T13:11:29Z", "updated_at": "2019-02-14T12:39:10Z", "closed_at": "2019-02-14T12:39:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nHi everyone, I'm trying to use the aiohttpApp instead of flask default app. \r\nProblem is, I don't manage to handle any request.\r\nI always have the same error descibed in \"actual behaviour\". \r\nCan you, help me to know if it is a bug or if I don't correctly use connexion/aiohttp ?\r\n\r\n### Expected behaviour\r\n\r\nWorking request/response handler.\r\n\r\n### Actual behaviour\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/arastel/.virtualenvs/euro_optim/lib/python3.7/site-packages/aiohttp/web_protocol.py\", line 406, in start\r\n    resp = await task\r\n  File \"/home/arastel/.virtualenvs/euro_optim/lib/python3.7/site-packages/aiohttp/web_app.py\", line 435, in _handle\r\n    resp = await handler(request)\r\n  File \"/home/arastel/.virtualenvs/euro_optim/lib/python3.7/site-packages/aiohttp/web_middlewares.py\", line 120, in impl\r\n    return await handler(request)\r\n  File \"/home/arastel/.virtualenvs/euro_optim/lib/python3.7/site-packages/connexion/apis/aiohttp_api.py\", line 32, in oauth_problem_middleware\r\n    response = yield from handler(request)\r\n  File \"/home/arastel/.virtualenvs/euro_optim/lib/python3.7/site-packages/connexion/decorators/coroutine_wrappers.py\", line 28, in wrapper\r\n    framework_response = yield from framework_response\r\n  File \"/home/arastel/.virtualenvs/euro_optim/lib/python3.7/site-packages/connexion/apis/aiohttp_api.py\", line 216, in get_response\r\n    response.status, extra={'data': response.body, 'url': url})\r\nAttributeError: 'str' object has no attribute 'status'\r\n\r\n### Steps to reproduce\r\n\r\ndef main_aio():\r\n    options = {\"swagger_ui\": False}\r\n    app = connexion.AioHttpApp(__name__, specification_dir='./swagger/', only_one_api=True, options=options)\r\n    app.app.json_encoder = encoder.JSONEncoder\r\n    app.add_api('swagger.yaml', arguments={'title': 'test'})\r\n    app.run(port=8080)\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- swagger file in swagger2\r\n- python 3.7.1\r\n- connexion 2.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/870", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/870/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/870/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/870/events", "html_url": "https://github.com/zalando/connexion/issues/870", "id": 407438113, "node_id": "MDU6SXNzdWU0MDc0MzgxMTM=", "number": 870, "title": "Internal references to a model's allOf throws index error", "user": {"login": "max-barry", "id": 5269115, "node_id": "MDQ6VXNlcjUyNjkxMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5269115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-barry", "html_url": "https://github.com/max-barry", "followers_url": "https://api.github.com/users/max-barry/followers", "following_url": "https://api.github.com/users/max-barry/following{/other_user}", "gists_url": "https://api.github.com/users/max-barry/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-barry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-barry/subscriptions", "organizations_url": "https://api.github.com/users/max-barry/orgs", "repos_url": "https://api.github.com/users/max-barry/repos", "events_url": "https://api.github.com/users/max-barry/events{/privacy}", "received_events_url": "https://api.github.com/users/max-barry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-06T21:26:52Z", "updated_at": "2019-10-16T16:05:24Z", "closed_at": "2019-10-16T16:05:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nInternal references can fail if they involve index access to an array (e.g. an `allOf` statement).\r\n\r\nFor example:\r\n\r\n```yml\r\nopenapi: 3.0.0\r\ninfo:\r\n  title: sample-oas\r\n  version: 1.0.0\r\n  description: ''\r\npaths:\r\n  /sample:\r\n    {\r\n      get:\r\n        {\r\n          operationId: getSample,\r\n          summary: 'Get all sample for a user',\r\n          description: '',\r\n          responses: { '200': { description: 'Successful operation' } },\r\n        },\r\n    }\r\ncomponents:\r\n  schemas:\r\n    {\r\n      ModelA:\r\n        {\r\n          allOf:\r\n            [\r\n              { type: object, properties: { id: { type: integer } } },\r\n              { type: object, properties: { name: { type: string } } },\r\n            ],\r\n        },\r\n      ModelB:\r\n        {\r\n          allOf:\r\n            [\r\n              { $ref: '#/components/schemas/ModelA/allOf/0' },\r\n              { type: object, properties: { name: { type: string } } },\r\n            ],\r\n        },\r\n    }\r\n```\r\n\r\nWhen the reference `#/components/schemas/ModelA/allOf/0` is being resolved, the `allOf` (I imagine) is being accessed using `'0'` instead of `0` which results in Connexion throwing an error `TypeError: list indices must be integers or slices, not str` on a call to `connexion run ...`.\r\n\r\nBundlers like [Swagger Parser](https://apidevtools.org/swagger-parser/) will save lines by implementing this style of internal referencing. I noticed it because my workflow is individual `3.0` spec files > bundled via Swagger Parser > Connexion\r\n\r\n\r\n### Actual behaviour\r\n```\r\nTraceback (most recent call last):\r\n  File \"<Project>/env/bin/connexion\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"<Project>/env/lib/python3.7/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"<Project>/env/lib/python3.7/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"<Project>/env/lib/python3.7/site-packages/click/core.py\", line 1137, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"<Project>/env/lib/python3.7/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"<Project>/env/lib/python3.7/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/cli.py\", line 202, in run\r\n    **api_extra_args)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/apps/flask_app.py\", line 54, in add_api\r\n    api = super(FlaskApp, self).add_api(specification, **kwargs)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/apps/abstract.py\", line 155, in add_api\r\n    options=api_options.as_dict())\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/apis/abstract.py\", line 73, in __init__\r\n    self.specification = Specification.load(specification, arguments=arguments)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/spec.py\", line 151, in load\r\n    return cls.from_file(spec, arguments=arguments)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/spec.py\", line 108, in from_file\r\n    return cls.from_dict(spec)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/spec.py\", line 146, in from_dict\r\n    return OpenAPISpecification(spec)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/spec.py\", line 40, in __init__\r\n    self._spec = resolve_refs(raw_spec)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/json_schema.py\", line 49, in resolve_refs\r\n    res = _do_resolve(spec)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/json_schema.py\", line 43, in _do_resolve\r\n    node[k] = _do_resolve(v)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/json_schema.py\", line 43, in _do_resolve\r\n    node[k] = _do_resolve(v)\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/json_schema.py\", line 43, in _do_resolve\r\n    node[k] = _do_resolve(v)\r\n  [Previous line repeated 1 more time]\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/json_schema.py\", line 46, in _do_resolve\r\n    node[i] = _do_resolve(node[i])\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/json_schema.py\", line 34, in _do_resolve\r\n    node.update(deep_get(spec, path))\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/utils.py\", line 64, in deep_get\r\n    return deep_get(obj[keys[0]], keys[1:])\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/utils.py\", line 64, in deep_get\r\n    return deep_get(obj[keys[0]], keys[1:])\r\n  File \"<Project>/env/lib/python3.7/site-packages/connexion/utils.py\", line 64, in deep_get\r\n    return deep_get(obj[keys[0]], keys[1:])\r\n  [Previous line repeated 2 more times]\r\nTypeError: list indices must be integers or slices, not str\r\n```\r\n\r\n\r\n### Steps to reproduce\r\nDownload the sample OAS in issue\r\n\r\n\r\n### Additional info:\r\nThis affects OpenAPI 2.0 or 3.0 spec\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n3.7.1\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n2.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/868", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/868/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/868/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/868/events", "html_url": "https://github.com/zalando/connexion/issues/868", "id": 406439546, "node_id": "MDU6SXNzdWU0MDY0Mzk1NDY=", "number": 868, "title": "Security handlers should be async when using AioHttp", "user": {"login": "Jyhess", "id": 25198240, "node_id": "MDQ6VXNlcjI1MTk4MjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/25198240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jyhess", "html_url": "https://github.com/Jyhess", "followers_url": "https://api.github.com/users/Jyhess/followers", "following_url": "https://api.github.com/users/Jyhess/following{/other_user}", "gists_url": "https://api.github.com/users/Jyhess/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jyhess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jyhess/subscriptions", "organizations_url": "https://api.github.com/users/Jyhess/orgs", "repos_url": "https://api.github.com/users/Jyhess/repos", "events_url": "https://api.github.com/users/Jyhess/events{/privacy}", "received_events_url": "https://api.github.com/users/Jyhess/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1183948393, "node_id": "MDU6TGFiZWwxMTgzOTQ4Mzkz", "url": "https://api.github.com/repos/zalando/connexion/labels/aiohttp", "name": "aiohttp", "color": "9bdff2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-04T17:34:17Z", "updated_at": "2020-07-22T06:52:17Z", "closed_at": "2020-07-22T06:52:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\nIn security functions, I need to call other URL to verify token validity.\r\nWith AioHttp, this must be done in coroutine to not block main thread.\r\nBut if try to use a coroutine with `x-tokenInfoFunc` (or others), I have following error:\r\n```\r\n  [...]\r\n  File \"/home/sagnard/dev/connexion/connexion/decorators/security.py\", line 298, in wrapper\r\n    request.context['user'] = token_info.get('sub', token_info.get('uid'))\r\nAttributeError: 'generator' object has no attribute 'get'\r\n```\r\nMore than that, we should have access to aiohttp request object in those function, when it is defined with `pass_context_arg_name=request`.\r\n\r\n### Expected behaviour\r\nI can use coroutine for security handlers, and it can accept a request parameter.\r\n\r\n\r\n### Actual behaviour\r\nThere is an error if I try.\r\n\r\n\r\n### Steps to reproduce\r\nUpdate tests/fakeapi/auth.py to add `@asyncio.coroutine` decorator to `fake_basic_auth`, and execute aiohttp tests.\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` 3.6.7\r\n- `pip show connexion | grep \"^Version\\:\"` master\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/865", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/865/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/865/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/865/events", "html_url": "https://github.com/zalando/connexion/issues/865", "id": 405697996, "node_id": "MDU6SXNzdWU0MDU2OTc5OTY=", "number": 865, "title": "[Question] Approach to swagger-ui documentation of API endpoint that returns a redirect.", "user": {"login": "seandavi", "id": 92435, "node_id": "MDQ6VXNlcjkyNDM1", "avatar_url": "https://avatars1.githubusercontent.com/u/92435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seandavi", "html_url": "https://github.com/seandavi", "followers_url": "https://api.github.com/users/seandavi/followers", "following_url": "https://api.github.com/users/seandavi/following{/other_user}", "gists_url": "https://api.github.com/users/seandavi/gists{/gist_id}", "starred_url": "https://api.github.com/users/seandavi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seandavi/subscriptions", "organizations_url": "https://api.github.com/users/seandavi/orgs", "repos_url": "https://api.github.com/users/seandavi/repos", "events_url": "https://api.github.com/users/seandavi/events{/privacy}", "received_events_url": "https://api.github.com/users/seandavi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-01T13:17:54Z", "updated_at": "2019-02-03T13:54:58Z", "closed_at": "2019-02-03T12:05:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI have an API endpoint that looks like `/path/{id1}/{fname}` that performs a redirect to a signed s3 URL. \r\n\r\n### Expected behaviour\r\n\r\nThe endpoint returns a 307 and downloads the file as expected using a command-line call like:\r\n\r\n```\r\nwget --content-disposition http://example.com/path/id1/abc.tsv\r\n```\r\n\r\nIt would be nice it the UI could:\r\n\r\n1. follow the 307 redirect and download the file.\r\n2. allow replacement of the generated curl command with alternatives.\r\n\r\nShort of those two things, is there a mechanism for turning off the \"try-it-out\" functionality for a single endpoint?\r\n\r\n### Actual behaviour\r\n\r\nIn the UI, a couple of things are problematic. First, the curl command is misleading, as it needs to specify additional command line arguments to work as expected. Second, the redirect is not followed when doing \"try it out\". \r\n\r\n\r\n### Additional info:\r\n\r\n`python --version`: `Python 3.6.7`\r\n\r\n```\r\npip show connexion | grep Version\r\nVersion: 2.2.0\r\nLicense: Apache License Version 2.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/864", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/864/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/864/events", "html_url": "https://github.com/zalando/connexion/issues/864", "id": 405170145, "node_id": "MDU6SXNzdWU0MDUxNzAxNDU=", "number": 864, "title": "Does connexion[swagger.yaml] supports Flask MethodView?", "user": {"login": "bharat-gera", "id": 9987042, "node_id": "MDQ6VXNlcjk5ODcwNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9987042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bharat-gera", "html_url": "https://github.com/bharat-gera", "followers_url": "https://api.github.com/users/bharat-gera/followers", "following_url": "https://api.github.com/users/bharat-gera/following{/other_user}", "gists_url": "https://api.github.com/users/bharat-gera/gists{/gist_id}", "starred_url": "https://api.github.com/users/bharat-gera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bharat-gera/subscriptions", "organizations_url": "https://api.github.com/users/bharat-gera/orgs", "repos_url": "https://api.github.com/users/bharat-gera/repos", "events_url": "https://api.github.com/users/bharat-gera/events{/privacy}", "received_events_url": "https://api.github.com/users/bharat-gera/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-31T10:09:56Z", "updated_at": "2019-02-03T13:37:37Z", "closed_at": "2019-02-03T12:06:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nI have developed API using Flask MethodView and wrapped these API using connexion Swagger.yaml, but I'm confused how to point the operationID to a specific http method(GET,POST,PUT).I have tried by just giving the class Name but unable to route request to specific method.\r\n\r\n### Expected behaviour\r\nIt gives error TypeError: Object of type 'Resource Class Name' is not JSON serializable.\r\n\r\n\r\n### Actual behaviour\r\nshould call that specific method of Resource class.\r\n\r\n- Connexion version: 2.2.0\r\n\r\nCan anybody help with the issue?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/863", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/863/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/863/events", "html_url": "https://github.com/zalando/connexion/issues/863", "id": 404937511, "node_id": "MDU6SXNzdWU0MDQ5Mzc1MTE=", "number": 863, "title": "Auth scopes working only for OAuth", "user": {"login": "janbalaz", "id": 6103598, "node_id": "MDQ6VXNlcjYxMDM1OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6103598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janbalaz", "html_url": "https://github.com/janbalaz", "followers_url": "https://api.github.com/users/janbalaz/followers", "following_url": "https://api.github.com/users/janbalaz/following{/other_user}", "gists_url": "https://api.github.com/users/janbalaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/janbalaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janbalaz/subscriptions", "organizations_url": "https://api.github.com/users/janbalaz/orgs", "repos_url": "https://api.github.com/users/janbalaz/repos", "events_url": "https://api.github.com/users/janbalaz/events{/privacy}", "received_events_url": "https://api.github.com/users/janbalaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-30T19:53:48Z", "updated_at": "2019-05-15T15:03:59Z", "closed_at": "2019-02-19T03:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nScopes for other auths, e.g. BasicAuth are not passed from schema to auth function, `required_scopes` are always `None`.\r\n\r\n\r\n### Expected behaviour\r\nFilling out scopes in schema should get these to the auth function, even if it's not `OAuth`.\r\n```\r\n- security:\r\n    - BasicAuth: [read, write]\r\n```\r\nIt is expected to receive in auth function `[\"read\", \"write\"]`\r\n\r\n\r\n### Actual behaviour\r\n`None` is received.\r\n\r\n### Additional info:\r\nProblem is in `security_decorator()` at `secure.py`, where `required_scopes` are set to `None` at the beginning, but only filled is auth is `OAuth`. I actually believe this is known of as I found in some PDF documentation of yours that OAuth should be specified ant then its scopes are passed even when BasicAuth is used. That is in my opinion bad design, because it forces me to specify OAuth in schema even though I don't plan to support it. Use case for scopes in BasicAuth still exists though. I noticed even OAuth-like exceptions are used no matter what type of auth is chosen. This does not look especially pretty or generic.\r\nPlace with potential bug: [secure.py](https://github.com/zalando/connexion/blob/master/connexion/operations/secure.py#L93)\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n3.7.1\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n2.2.0\r\n\r\nI can attempt  to push a fix if you want and I will add more information on how to reproduce and my workaround leveraging OAuth. There are also missing examples of other auth types with scopes.\r\nThank you for addressing this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/852", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/852/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/852/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/852/events", "html_url": "https://github.com/zalando/connexion/issues/852", "id": 399330370, "node_id": "MDU6SXNzdWUzOTkzMzAzNzA=", "number": 852, "title": "Accepting JSON input?", "user": {"login": "deeplook", "id": 1001778, "node_id": "MDQ6VXNlcjEwMDE3Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1001778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deeplook", "html_url": "https://github.com/deeplook", "followers_url": "https://api.github.com/users/deeplook/followers", "following_url": "https://api.github.com/users/deeplook/following{/other_user}", "gists_url": "https://api.github.com/users/deeplook/gists{/gist_id}", "starred_url": "https://api.github.com/users/deeplook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deeplook/subscriptions", "organizations_url": "https://api.github.com/users/deeplook/orgs", "repos_url": "https://api.github.com/users/deeplook/repos", "events_url": "https://api.github.com/users/deeplook/events{/privacy}", "received_events_url": "https://api.github.com/users/deeplook/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413505, "node_id": "MDU6TGFiZWwyMTM0MTM1MDU=", "url": "https://api.github.com/repos/zalando/connexion/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 541826236, "node_id": "MDU6TGFiZWw1NDE4MjYyMzY=", "url": "https://api.github.com/repos/zalando/connexion/labels/waiting%20contributor%20feedback", "name": "waiting contributor feedback", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-15T12:48:35Z", "updated_at": "2019-03-07T02:04:49Z", "closed_at": "2019-03-07T02:04:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see only YAML as accepted input, but the API specs I usually deal with are all in JSON. Is there any recommended way to work with JSON input?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/848", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/848/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/848/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/848/events", "html_url": "https://github.com/zalando/connexion/issues/848", "id": 398760808, "node_id": "MDU6SXNzdWUzOTg3NjA4MDg=", "number": 848, "title": "compat.py cannot resolve Operation class", "user": {"login": "hqms", "id": 1115500, "node_id": "MDQ6VXNlcjExMTU1MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1115500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hqms", "html_url": "https://github.com/hqms", "followers_url": "https://api.github.com/users/hqms/followers", "following_url": "https://api.github.com/users/hqms/following{/other_user}", "gists_url": "https://api.github.com/users/hqms/gists{/gist_id}", "starred_url": "https://api.github.com/users/hqms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hqms/subscriptions", "organizations_url": "https://api.github.com/users/hqms/orgs", "repos_url": "https://api.github.com/users/hqms/repos", "events_url": "https://api.github.com/users/hqms/events{/privacy}", "received_events_url": "https://api.github.com/users/hqms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-14T06:17:18Z", "updated_at": "2019-01-14T09:06:04Z", "closed_at": "2019-01-14T09:06:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone, \r\n\r\nI trying to dockerize my app, my development machine is MacBook Pro (Mojave, Python 3.6.5).\r\nEverything was running smoothly on my own machine, and I write the Dockerfile for the app, build and run the container.\r\n\r\nThe problem is, the connexion/operations/compat.py cannot resolve the Operation class. \r\nMy exception block raise this message :\r\n\r\n`Cannot resolve operationId \"app.get_models\"! Import error was \"cannot import name 'Operation' from 'connexion.operations.compat' (/usr/local/lib/python3.7/site-packages/connexion/operations/compat.py)\"`\r\n\r\nI'm containerized the app using same python version on an alpine distro and running my connexion apps using connexion's CLI\r\n\r\nThanks in advance\r\n\r\n\r\nps: here's my Dockerfile:\r\n\r\n```\r\nFROM python:3.6-alpine\r\n\r\nRUN mkdir /opt && mkdir /opt/app\r\n\r\nADD . /opt/app\r\nWORKDIR /opt/app\r\n\r\nRUN pip install -r requirements.txt\r\n\r\nEXPOSE 5000\r\n\r\nENTRYPOINT [\"connexion\", \"run\", \"./openapi/paus.yaml\", \"--stub\", \"/opt/app\" , \"--debug\"]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/846", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/846/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/846/events", "html_url": "https://github.com/zalando/connexion/issues/846", "id": 397911960, "node_id": "MDU6SXNzdWUzOTc5MTE5NjA=", "number": 846, "title": "datetime support for JSonifier", "user": {"login": "Jyhess", "id": 25198240, "node_id": "MDQ6VXNlcjI1MTk4MjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/25198240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jyhess", "html_url": "https://github.com/Jyhess", "followers_url": "https://api.github.com/users/Jyhess/followers", "following_url": "https://api.github.com/users/Jyhess/following{/other_user}", "gists_url": "https://api.github.com/users/Jyhess/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jyhess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jyhess/subscriptions", "organizations_url": "https://api.github.com/users/Jyhess/orgs", "repos_url": "https://api.github.com/users/Jyhess/repos", "events_url": "https://api.github.com/users/Jyhess/events{/privacy}", "received_events_url": "https://api.github.com/users/Jyhess/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-10T16:30:29Z", "updated_at": "2019-12-03T04:23:36Z", "closed_at": "2019-12-03T04:23:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\nConnexion using AioHttp raise a 500 error when accessing specifications with date time example.\r\nNote: when using ujson, datetime is cast to int without error, but it still invalid.\r\n\r\n### Expected behaviour\r\nSpecifications are returned without error and properly serialized date time.\r\n\r\n\r\n### Actual behaviour\r\n500 error with json, int with ujson\r\n\r\n\r\n### Steps to reproduce\r\nopenapi.yaml\r\n```\r\nopenapi: \"3.0.1\"\r\n\r\ninfo:\r\n  title: Hello World\r\n  version: \"1.0\"\r\nservers:\r\n  - url: http://localhost:8080/api\r\n\r\npaths:\r\n  /hello:\r\n    get:\r\n      summary: Generate data with date time\r\n      operationId: hello.hello\r\n      responses:\r\n        200:\r\n          description: greeting response\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  date:\r\n                    type: string\r\n                    format: date-time\r\n                example:\r\n                  date: 2000-01-23T04:56:07.000+00:00\r\n```\r\n\r\nmain.py\r\n```\r\nfrom aiohttp import web\r\nimport connexion\r\n\r\ndef hello() -> str:\r\n    return web.json_response({\"value\": \"2000-01-23T04:56:07.000+00:00\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    app = connexion.AioHttpApp(__name__, port=8080, specification_dir='openapi/')\r\n    app.add_api('openapi.yaml', arguments={'title': 'Hello World Example'})\r\n    app.run()\r\n```\r\n\r\nMaking error with curl\r\n```\r\ncurl localhost:8080/api/openapi.json\r\n<html><head><title>500 Internal Server Error</title></head><body><h1>500 Internal Server Error</h1>Server got itself in trouble</body></html>\r\n\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\nPython 3.6.7\r\n- `pip show connexion | grep \"^Version\\:\"`\r\nVersion: 2018.0.dev1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/841", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/841/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/841/events", "html_url": "https://github.com/zalando/connexion/issues/841", "id": 396515657, "node_id": "MDU6SXNzdWUzOTY1MTU2NTc=", "number": 841, "title": "Default to DISPLAY_OPERATION_ID=false?", "user": {"login": "LienM", "id": 5683985, "node_id": "MDQ6VXNlcjU2ODM5ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5683985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LienM", "html_url": "https://github.com/LienM", "followers_url": "https://api.github.com/users/LienM/followers", "following_url": "https://api.github.com/users/LienM/following{/other_user}", "gists_url": "https://api.github.com/users/LienM/gists{/gist_id}", "starred_url": "https://api.github.com/users/LienM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LienM/subscriptions", "organizations_url": "https://api.github.com/users/LienM/orgs", "repos_url": "https://api.github.com/users/LienM/repos", "events_url": "https://api.github.com/users/LienM/events{/privacy}", "received_events_url": "https://api.github.com/users/LienM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413502, "node_id": "MDU6TGFiZWwyMTM0MTM1MDI=", "url": "https://api.github.com/repos/zalando/connexion/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 213413503, "node_id": "MDU6TGFiZWwyMTM0MTM1MDM=", "url": "https://api.github.com/repos/zalando/connexion/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-07T14:48:56Z", "updated_at": "2019-11-05T09:13:00Z", "closed_at": "2019-11-05T09:13:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI'm using connexion to expose the API specification to our customers. I've noticed that in the path, it exposes the codepath (operationId) associated with each route. We'd like to hide this. I've found that Swagger UI configures this using parameter displayOperationId, but I'm not sure how to set it within connexion?\r\n\r\n### Expected behaviour\r\n\r\nDisplay of operation Id configurable upon startup of the app.\r\n\r\n### Actual behaviour\r\n\r\nOperation ID shown.\r\n\r\nI may just be overlooking the obvious here. I've tried setting \"DISPLAY_OPERATION_ID\" as an environment variable but that didn't seem to do the trick. \r\nhttps://swagger.io/docs/open-source-tools/swagger-ui/usage/configuration/\r\n\r\nThanks for your reply!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/838", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/838/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/838/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/838/events", "html_url": "https://github.com/zalando/connexion/issues/838", "id": 395964183, "node_id": "MDU6SXNzdWUzOTU5NjQxODM=", "number": 838, "title": "Response validation fails when using `problem`", "user": {"login": "alexjg", "id": 224635, "node_id": "MDQ6VXNlcjIyNDYzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/224635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexjg", "html_url": "https://github.com/alexjg", "followers_url": "https://api.github.com/users/alexjg/followers", "following_url": "https://api.github.com/users/alexjg/following{/other_user}", "gists_url": "https://api.github.com/users/alexjg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexjg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexjg/subscriptions", "organizations_url": "https://api.github.com/users/alexjg/orgs", "repos_url": "https://api.github.com/users/alexjg/repos", "events_url": "https://api.github.com/users/alexjg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexjg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-04T15:26:31Z", "updated_at": "2019-01-07T11:47:30Z", "closed_at": "2019-01-07T11:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nWhen returning a custom error using `connexion.problem` response validation fails. \r\n\r\n### Expected behaviour\r\n\r\nFor example, given the following openapi 3.0 spec:\r\n\r\n```yaml\r\nopenapi: \"3.0.0\"\r\ninfo:\r\n  title: \"Some API\"\r\n  version: \"0.0.1\"\r\nservers:\r\n- url: /\r\npaths:\r\n  /somepath:\r\n    post:\r\n      summary: \"Post something\"\r\n      operationId: app.post_something\r\n      responses:\r\n        \"200\":\r\n          description: Successful response\r\n        \"400\":\r\n          description: Bad request\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n```\r\n\r\nAnd sample application (in `app.py`)\r\n\r\n```python\r\nimport connexion\r\nimport logging.config\r\n\r\nlogging.config.fileConfig(\"logging.ini\")\r\n\r\n\r\ndef post_something():\r\n    return connexion.problem(400, \"Bad Request\", \"so bad\")\r\n\r\n\r\napp = connexion.FlaskApp(\r\n    __name__,\r\n    specification_dir=\"./\")\r\napp.add_api(\"openapi.yaml\", validate_responses=True)\r\napp.run(port=8080)\r\n```\r\n\r\nWe should get a 400 response when POSTing to `http://localhost:8080/somepath`\r\n\r\n### Actual behaviour\r\n\r\nWe get a `500` response with an error indicating that response validation failed. \r\n\r\n### Steps to reproduce\r\n\r\nSee above\r\n\r\n### Additional info:\r\n\r\nThis looks to be due to these lines in `connextion/decorators/response.py`\r\n\r\n```python\r\n        if self.is_json_schema_compatible(response_schema):\r\n            v = ResponseBodyValidator(response_schema, validator=self.validator)\r\n            try:\r\n                data = self.operation.json_loads(data)\r\n                v.validate_schema(data, url)\r\n            except ValidationError as e:\r\n                raise NonConformingResponseBody(message=str(e))\r\n```\r\n\r\nHere `operation.json_loads(data)` is returning `None`. But I'm not sure in what circumstance it would not do that.\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`: `Python 3.7.1`\r\n- `pip show connexion | grep \"^Version\\:\"``Version 2.2.0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/831", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/831/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/831/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/831/events", "html_url": "https://github.com/zalando/connexion/issues/831", "id": 393593772, "node_id": "MDU6SXNzdWUzOTM1OTM3NzI=", "number": 831, "title": "URL for UI must have ui/", "user": {"login": "ericraymond", "id": 22483767, "node_id": "MDQ6VXNlcjIyNDgzNzY3", "avatar_url": "https://avatars0.githubusercontent.com/u/22483767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericraymond", "html_url": "https://github.com/ericraymond", "followers_url": "https://api.github.com/users/ericraymond/followers", "following_url": "https://api.github.com/users/ericraymond/following{/other_user}", "gists_url": "https://api.github.com/users/ericraymond/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericraymond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericraymond/subscriptions", "organizations_url": "https://api.github.com/users/ericraymond/orgs", "repos_url": "https://api.github.com/users/ericraymond/repos", "events_url": "https://api.github.com/users/ericraymond/events{/privacy}", "received_events_url": "https://api.github.com/users/ericraymond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1183948393, "node_id": "MDU6TGFiZWwxMTgzOTQ4Mzkz", "url": "https://api.github.com/repos/zalando/connexion/labels/aiohttp", "name": "aiohttp", "color": "9bdff2", "default": false, "description": ""}, {"id": 213413500, "node_id": "MDU6TGFiZWwyMTM0MTM1MDA=", "url": "https://api.github.com/repos/zalando/connexion/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-12-21T21:19:08Z", "updated_at": "2019-03-25T11:29:55Z", "closed_at": "2019-03-25T11:29:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nIn 2.1, the url for the ui must have a slash after ui (e.g., https://site.name/ui/)  Request to https://site.name/ui fail\r\n\r\n\r\n### Expected behaviour\r\n\r\nhttps://site.name/ui should work the same as https://site.name/ui/\r\n\r\n### Actual behaviour\r\n\r\nThrows a 500 error with the following logs:\r\n\r\n```ERROR:root:----- Server Exception -----\r\nError: 301 Moved Permanently: None\r\nTraceback:\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/foo/site-packages/werkzeug/routing.py\", line 1538, in match\r\n    rv = rule.match(path, method)\r\n  File \"/home/ubuntu/foo/site-packages/werkzeug/routing.py\", line 776, in match\r\n    raise RequestSlash()\r\nwerkzeug.routing.RequestSlash\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/foo/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/ubuntu/foo/site-packages/flask/app.py\", line 1791, in dispatch_request\r\n    self.raise_routing_exception(req)\r\n  File \"/home/ubuntu/foo/site-packages/flask/app.py\", line 1774, in raise_routing_exception\r\n    raise request.routing_exception\r\n  File \"/home/ubuntu/foo/site-packages/flask/ctx.py\", line 336, in match_request\r\n    self.url_adapter.match(return_rule=True)\r\n  File \"/home/ubuntu/foo/site-packages/werkzeug/routing.py\", line 1542, in match\r\n    safe='/:|+') + '/', query_args))\r\nwerkzeug.routing.RequestRedirect: 301 Moved Permanently: None```\r\n\r\n\r\n### Steps to reproduce\r\n\r\nUsing swagger (openapi 2) definition in connexion.\r\n\r\nVisit https://site.name/ui\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\nPython 3.6.5 :: Anaconda, Inc.\r\n\r\nconnexion 2.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/829", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/829/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/829/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/829/events", "html_url": "https://github.com/zalando/connexion/issues/829", "id": 393100234, "node_id": "MDU6SXNzdWUzOTMxMDAyMzQ=", "number": 829, "title": "AioHttpApi cannot handle None from tokenInfoFuncs (results into 500 instead of 401 for bad tokens)", "user": {"login": "lynxknight", "id": 3482642, "node_id": "MDQ6VXNlcjM0ODI2NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3482642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lynxknight", "html_url": "https://github.com/lynxknight", "followers_url": "https://api.github.com/users/lynxknight/followers", "following_url": "https://api.github.com/users/lynxknight/following{/other_user}", "gists_url": "https://api.github.com/users/lynxknight/gists{/gist_id}", "starred_url": "https://api.github.com/users/lynxknight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lynxknight/subscriptions", "organizations_url": "https://api.github.com/users/lynxknight/orgs", "repos_url": "https://api.github.com/users/lynxknight/repos", "events_url": "https://api.github.com/users/lynxknight/events{/privacy}", "received_events_url": "https://api.github.com/users/lynxknight/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413500, "node_id": "MDU6TGFiZWwyMTM0MTM1MDA=", "url": "https://api.github.com/repos/zalando/connexion/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-20T15:42:17Z", "updated_at": "2019-01-14T07:44:55Z", "closed_at": "2019-01-14T07:44:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\n\r\naiohttp_api.py oauth_problem_middleware https://github.com/zalando/connexion/blob/a0ac0fd13f6857bba2563fbdda55404cfa69dde3/connexion/apis/aiohttp_api.py#L33 does not catch any OAuth* exceptions except OAuthProblem. As a result, if x-...TokenInfo function has failed to authenticate user, AioHttp server returns 500 instead of 401\r\n\r\n### Expected behaviour\r\n\r\nServer should return 401 for Unauthorized users \r\n\r\n### Actual behaviour\r\n\r\nServer returns 500 for Unauthorized users \r\n\r\n### Steps to reproduce\r\n\r\n```\r\n$ cat app.py\r\nimport aiohttp\r\nimport connexion\r\nfrom connexion.decorators.security import validate_scope\r\nfrom connexion.exceptions import OAuthScopeProblem\r\n\r\n\r\ndef basic_auth(username, password, required_scopes=None):\r\n    if username == 'admin' and password == 'secret':\r\n        info = {'sub': 'admin', 'scope': 'secret'}\r\n    elif username == 'foo' and password == 'bar':\r\n        info = {'sub': 'user1', 'scope': ''}\r\n    else:\r\n        # optional: raise exception for custom error response\r\n        return None\r\n\r\n    # optional\r\n    if required_scopes is not None and not validate_scope(required_scopes, info['scope']):\r\n        raise OAuthScopeProblem(\r\n                description='Provided user doesn\\'t have the required access rights',\r\n                required_scopes=required_scopes,\r\n                token_scopes=info['scope']\r\n            )\r\n\r\n    return info\r\n\r\n\r\ndef dummy_func(token):\r\n    return None\r\n\r\n\r\ndef get_secret(user) -> str:\r\n    return aiohttp.web.Response(body=\"You are {user} and the secret is 'wbevuec'\".format(user=user))\r\n\r\n\r\nif __name__ == '__main__':\r\n    app = connexion.AioHttpApp(__name__)\r\n    app.add_api('openapi.yaml')\r\n    app.run(port=8080)\r\n```\r\n\r\n```\r\n$ cat openapi.yaml\r\nopenapi: 3.0.0\r\ninfo:\r\n  title: Basic Auth Example\r\n  version: '1.0'\r\n\r\nservers:\r\n    - url: /api\r\npaths:\r\n  /secret:\r\n    get:\r\n      summary: Return secret string\r\n      operationId: app.get_secret\r\n      responses:\r\n        '200':\r\n          description: secret response\r\n          content:\r\n            'application/octet-stream':\r\n              schema:\r\n                type: string\r\n      security:\r\n        - basic: []\r\n\r\ncomponents:\r\n  securitySchemes:\r\n    basic:\r\n      type: http\r\n      scheme: basic\r\n      x-basicInfoFunc: app.basic_auth\r\n```\r\n\r\nThen, run server and test:\r\n\r\n```\r\n$ curl http://admin:secret@0.0.0.0:8080/api/secret\r\nYou are admin and the secret is 'wbevuec'\r\n\r\n$ curl http://admin:secret2@0.0.0.0:8080/api/secret\r\n<html><head><title>500 Internal Server Error</title></head><body><h1>500 Internal Server Error</h1>Server got itself in trouble</body></html>\r\n```\r\n\r\nServer output:\r\n```\r\nError handling request\r\nTraceback (most recent call last):\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/aiohttp/web_protocol.py\", line 390, in start\r\n    resp = await self._request_handler(request)\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/aiohttp/web_app.py\", line 366, in _handle\r\n    resp = await handler(request)\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/aiohttp/web_middlewares.py\", line 106, in impl\r\n    return await handler(request)\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/aiohttp/web_middlewares.py\", line 106, in impl\r\n    return await handler(request)\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/connexion/apis/aiohttp_api.py\", line 32, in oauth_problem_middleware\r\n    response = yield from handler(request)\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/connexion/decorators/coroutine_wrappers.py\", line 21, in wrapper\r\n    connexion_response = function(connexion_request)\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/connexion/decorators/security.py\", line 266, in wrapper\r\n    token_info = get_authorization_info(auth_funcs, request, required_scopes)\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/connexion/decorators/security.py\", line 125, in get_authorization_info\r\n    token_info = func(request, required_scopes)\r\n  File \"/home/ezhuk/projects/connexion-2/virtualenv/lib/python3.5/site-packages/connexion/decorators/security.py\", line 225, in wrapper\r\n    token_response=None\r\nconnexion.exceptions.OAuthResponseProblem: 401 Unauthorized: Provided authorization is not valid\r\n```\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n```\r\n$ python --version\r\nPython 3.5.3\r\n$ pip show connexion | grep \"^Version\\:\"\r\nVersion: 2.1.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/824", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/824/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/824/events", "html_url": "https://github.com/zalando/connexion/issues/824", "id": 391706034, "node_id": "MDU6SXNzdWUzOTE3MDYwMzQ=", "number": 824, "title": "Failed to get Authorization header when passed in lower case", "user": {"login": "Jyhess", "id": 25198240, "node_id": "MDQ6VXNlcjI1MTk4MjQw", "avatar_url": "https://avatars2.githubusercontent.com/u/25198240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jyhess", "html_url": "https://github.com/Jyhess", "followers_url": "https://api.github.com/users/Jyhess/followers", "following_url": "https://api.github.com/users/Jyhess/following{/other_user}", "gists_url": "https://api.github.com/users/Jyhess/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jyhess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jyhess/subscriptions", "organizations_url": "https://api.github.com/users/Jyhess/orgs", "repos_url": "https://api.github.com/users/Jyhess/repos", "events_url": "https://api.github.com/users/Jyhess/events{/privacy}", "received_events_url": "https://api.github.com/users/Jyhess/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413500, "node_id": "MDU6TGFiZWwyMTM0MTM1MDA=", "url": "https://api.github.com/repos/zalando/connexion/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-17T13:13:05Z", "updated_at": "2018-12-18T07:25:00Z", "closed_at": "2018-12-18T07:25:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\nIf I setup an application with aiohttp using tests/fixtures/aiohttp/openapi_secure.yaml\r\nI receive a 401 Unauthorized when I use authorization in lower case:\r\n`curl -H \"authorization Bearer 100\" localhost:8080/v1.0/greeting/jsantos`\r\n\r\n### Expected behaviour\r\nauthorization header is usable in lower case\r\n\r\n\r\n### Actual behaviour\r\nOnly Authorization header is usable with first letter in capital\r\n\r\n\r\n### Steps to reproduce\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\nPython 3.6.7\r\n- `pip show connexion | grep \"^Version\\:\"`\r\nVersion: 2018.0.dev1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/822", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/822/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/822/events", "html_url": "https://github.com/zalando/connexion/issues/822", "id": 391457736, "node_id": "MDU6SXNzdWUzOTE0NTc3MzY=", "number": 822, "title": "[aiohttp] Unsupported http authorization scheme bearer", "user": {"login": "pando85", "id": 4646670, "node_id": "MDQ6VXNlcjQ2NDY2NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4646670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pando85", "html_url": "https://github.com/pando85", "followers_url": "https://api.github.com/users/pando85/followers", "following_url": "https://api.github.com/users/pando85/following{/other_user}", "gists_url": "https://api.github.com/users/pando85/gists{/gist_id}", "starred_url": "https://api.github.com/users/pando85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pando85/subscriptions", "organizations_url": "https://api.github.com/users/pando85/orgs", "repos_url": "https://api.github.com/users/pando85/repos", "events_url": "https://api.github.com/users/pando85/events{/privacy}", "received_events_url": "https://api.github.com/users/pando85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-16T11:21:20Z", "updated_at": "2018-12-16T13:41:26Z", "closed_at": "2018-12-16T13:41:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Description\r\n`Unsupported http authorization scheme bearer` when using `AioHttpApp`\r\n\r\n\r\n\r\n### Expected behaviour\r\nNot error message.\r\n\r\n\r\n### Actual behaviour\r\nError `Unsupported http authorization scheme bearer`\r\n\r\n\r\n### Steps to reproduce\r\nDefine jwt in openapi scheme.\r\n```yaml\r\n      security:\r\n      - jwt: ['secret']\r\n\r\ncomponents:\r\n  securitySchemes:\r\n    jwt:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      x-bearerInfoFunc: app.decode_token\r\n```\r\n\r\n\r\n### Additional info:\r\n\r\nOutput of the commands:\r\n\r\n- `python --version`\r\n\r\n```bash\r\n$python --version\r\nPython 3.7.1\r\n```\r\n- `pip show connexion | grep \"^Version\\:\"`\r\n\r\n```bash\r\n$pip show connexion | grep \"^Version\\:\"\r\nVersion: 2018.0.dev1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/820", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/820/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/820/events", "html_url": "https://github.com/zalando/connexion/issues/820", "id": 390370622, "node_id": "MDU6SXNzdWUzOTAzNzA2MjI=", "number": 820, "title": "Need variable to alter spec path in Swagger UI Explore bar", "user": {"login": "bhechinger", "id": 1837925, "node_id": "MDQ6VXNlcjE4Mzc5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1837925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhechinger", "html_url": "https://github.com/bhechinger", "followers_url": "https://api.github.com/users/bhechinger/followers", "following_url": "https://api.github.com/users/bhechinger/following{/other_user}", "gists_url": "https://api.github.com/users/bhechinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhechinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhechinger/subscriptions", "organizations_url": "https://api.github.com/users/bhechinger/orgs", "repos_url": "https://api.github.com/users/bhechinger/repos", "events_url": "https://api.github.com/users/bhechinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bhechinger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 213413502, "node_id": "MDU6TGFiZWwyMTM0MTM1MDI=", "url": "https://api.github.com/repos/zalando/connexion/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 219997013, "node_id": "MDU6TGFiZWwyMTk5OTcwMTM=", "url": "https://api.github.com/repos/zalando/connexion/labels/in%20progress", "name": "in progress", "color": "00a7ed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dtkav", "id": 610121, "node_id": "MDQ6VXNlcjYxMDEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/610121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtkav", "html_url": "https://github.com/dtkav", "followers_url": "https://api.github.com/users/dtkav/followers", "following_url": "https://api.github.com/users/dtkav/following{/other_user}", "gists_url": "https://api.github.com/users/dtkav/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtkav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtkav/subscriptions", "organizations_url": "https://api.github.com/users/dtkav/orgs", "repos_url": "https://api.github.com/users/dtkav/repos", "events_url": "https://api.github.com/users/dtkav/events{/privacy}", "received_events_url": "https://api.github.com/users/dtkav/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-12-12T19:17:40Z", "updated_at": "2019-12-17T09:30:53Z", "closed_at": "2019-12-17T09:30:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm deploying an API written in Swagger (OAS3) behind AWS API Gateway. I can't import it into API Gateway because it seems as if they still only support 2.0.\r\n\r\nThat's fine. I don't mind that so much, but the problem is it messes with my Swagger UI. API Gateway puts the stage name in the URL but the swagger/connexion app isn't able to \"see\" this. As a result the Explore bar has the wrong path to the spec file.\r\n\r\nIt loads up with `/swagger_url/openapi.spec` but needs to be changed to `/aws_stage_name/swagger_url/openapi.spec` in order to load properly in the console.\r\n\r\nI took a look at the ui stuff myself but am not a front end guy so had absolutely no idea what I was looking at. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/zalando/connexion/issues/819", "repository_url": "https://api.github.com/repos/zalando/connexion", "labels_url": "https://api.github.com/repos/zalando/connexion/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/zalando/connexion/issues/819/comments", "events_url": "https://api.github.com/repos/zalando/connexion/issues/819/events", "html_url": "https://github.com/zalando/connexion/issues/819", "id": 389878538, "node_id": "MDU6SXNzdWUzODk4Nzg1Mzg=", "number": 819, "title": "Unable to get swagger-ui with localhost:8080/ui when using RestyResolver", "user": {"login": "coltenkrauter", "id": 18080897, "node_id": "MDQ6VXNlcjE4MDgwODk3", "avatar_url": "https://avatars1.githubusercontent.com/u/18080897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coltenkrauter", "html_url": "https://github.com/coltenkrauter", "followers_url": "https://api.github.com/users/coltenkrauter/followers", "following_url": "https://api.github.com/users/coltenkrauter/following{/other_user}", "gists_url": "https://api.github.com/users/coltenkrauter/gists{/gist_id}", "starred_url": "https://api.github.com/users/coltenkrauter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coltenkrauter/subscriptions", "organizations_url": "https://api.github.com/users/coltenkrauter/orgs", "repos_url": "https://api.github.com/users/coltenkrauter/repos", "events_url": "https://api.github.com/users/coltenkrauter/events{/privacy}", "received_events_url": "https://api.github.com/users/coltenkrauter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-11T17:43:21Z", "updated_at": "2019-12-11T16:29:18Z", "closed_at": "2018-12-11T18:06:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nWhen I am using the RestyResolver, it seems to overwrite the {basepath}/ui endpoint which loads the swagger-ui. \r\n\r\n### Expected behaviour\r\n```\r\nimport connexion\r\nfrom connexion.resolver import RestyResolver\r\n\r\nproduction = False\r\n\r\napp = connexion.FlaskApp(__name__, specification_dir='open-api-specs/')\r\napp.add_api('main.yaml', resolver=RestyResolver('api'))\r\n\r\nif production:\r\n    app.run(host='0.0.0.0', port='8080', threaded=True, debug=False)\r\nelse:\r\n    app.run(host='0.0.0.0', port='8080', threaded=True, debug=True)\r\n```\r\n*localhost:8080/ui* does not work, though I expected it to\r\n\r\n### Actual behaviour\r\n```\r\nimport connexion\r\n\r\nproduction = False\r\n\r\napp = connexion.FlaskApp(__name__, specification_dir='open-api-specs/')\r\napp.add_api('main.yaml')\r\n\r\nif production:\r\n    app.run(host='0.0.0.0', port='8080', threaded=True, debug=False)\r\nelse:\r\n    app.run(host='0.0.0.0', port='8080', threaded=True, debug=True)\r\n```\r\n*localhost:8080/ui* does work\r\n\r\n### Steps to reproduce\r\nBuild a simple flask app and try using RestyResolver per [documentation](https://github.com/zalando/connexion/blob/master/README.rst).\r\n\r\n\r\n### Additional info:\r\nIdeally there would be a way to prevent RestyResolver from doing its thing on given paths/endpoints... or some other work around.\r\n\r\nOutput of the commands:\r\n\r\n- `python --version` Python 3.6.4\r\n- `pip show connexion | grep \"^Version\\:\"` Version: 2.0.2\r\n", "performed_via_github_app": null, "score": 1.0}]}