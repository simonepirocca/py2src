{"total_count": 14, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/48", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/48/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/48/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/48", "id": 554358715, "node_id": "MDU6SXNzdWU1NTQzNTg3MTU=", "number": 48, "title": "New release ?", "user": {"login": "olemoign", "id": 11632871, "node_id": "MDQ6VXNlcjExNjMyODcx", "avatar_url": "https://avatars3.githubusercontent.com/u/11632871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olemoign", "html_url": "https://github.com/olemoign", "followers_url": "https://api.github.com/users/olemoign/followers", "following_url": "https://api.github.com/users/olemoign/following{/other_user}", "gists_url": "https://api.github.com/users/olemoign/gists{/gist_id}", "starred_url": "https://api.github.com/users/olemoign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olemoign/subscriptions", "organizations_url": "https://api.github.com/users/olemoign/orgs", "repos_url": "https://api.github.com/users/olemoign/repos", "events_url": "https://api.github.com/users/olemoign/events{/privacy}", "received_events_url": "https://api.github.com/users/olemoign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-23T19:29:54Z", "updated_at": "2020-04-06T15:42:44Z", "closed_at": "2020-04-06T15:42:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthe last release is pretty old and I can see changes in the main module, could you make a new release?\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/38", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/38/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/38/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/38", "id": 350434668, "node_id": "MDU6SXNzdWUzNTA0MzQ2Njg=", "number": 38, "title": "Support Python 3.7", "user": {"login": "anders-was-here", "id": 42269468, "node_id": "MDQ6VXNlcjQyMjY5NDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/42269468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anders-was-here", "html_url": "https://github.com/anders-was-here", "followers_url": "https://api.github.com/users/anders-was-here/followers", "following_url": "https://api.github.com/users/anders-was-here/following{/other_user}", "gists_url": "https://api.github.com/users/anders-was-here/gists{/gist_id}", "starred_url": "https://api.github.com/users/anders-was-here/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anders-was-here/subscriptions", "organizations_url": "https://api.github.com/users/anders-was-here/orgs", "repos_url": "https://api.github.com/users/anders-was-here/repos", "events_url": "https://api.github.com/users/anders-was-here/events{/privacy}", "received_events_url": "https://api.github.com/users/anders-was-here/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-14T13:44:07Z", "updated_at": "2019-08-14T07:00:40Z", "closed_at": "2019-08-14T07:00:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Python 3.7 async is a reserved word. See: https://docs.python.org/3.4/library/asyncio-task.html#asyncio.async\r\n\r\nI needed to replace half a dozen instances of 'asyncio.async' with 'asyncio.ensure_future'\r\nto make it work.\r\n\r\nLike:\r\n```\r\n-        asyncio.async(self._get_and_publish_event_log(), loop=self._event_loop)\r\n+        asyncio.ensure_future(self._get_and_publish_event_log(), loop=self._event_loop)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/37", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/37/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/37/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/37", "id": 337697506, "node_id": "MDU6SXNzdWUzMzc2OTc1MDY=", "number": 37, "title": "mounting retry adapter", "user": {"login": "fantamiracle", "id": 10136534, "node_id": "MDQ6VXNlcjEwMTM2NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/10136534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fantamiracle", "html_url": "https://github.com/fantamiracle", "followers_url": "https://api.github.com/users/fantamiracle/followers", "following_url": "https://api.github.com/users/fantamiracle/following{/other_user}", "gists_url": "https://api.github.com/users/fantamiracle/gists{/gist_id}", "starred_url": "https://api.github.com/users/fantamiracle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fantamiracle/subscriptions", "organizations_url": "https://api.github.com/users/fantamiracle/orgs", "repos_url": "https://api.github.com/users/fantamiracle/repos", "events_url": "https://api.github.com/users/fantamiracle/events{/privacy}", "received_events_url": "https://api.github.com/users/fantamiracle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1503015984, "node_id": "MDU6TGFiZWwxNTAzMDE1OTg0", "url": "https://api.github.com/repos/msabramo/requests-unixsocket/labels/awaiting%20user%20feedback", "name": "awaiting user feedback", "color": "dff296", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-02T23:38:02Z", "updated_at": "2019-10-15T22:38:28Z", "closed_at": "2019-08-16T19:05:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am wondering if there is a way to mount retry adapter to unix_socket session.\r\n\r\nHere is the code snippet:\r\n\r\n```python\r\n        from requests.adapters import HTTPAdapter\r\n        from requests.packages.urllib3.util.retry import Retry\r\n\r\n        sess = requests_unixsocket.Session()\r\n\r\n        HTTP_REQUEST_RETRIES = 3\r\n        HTTP_RETRY_BACKOFF_FACTOR = 0.3\r\n        HTTP_RETRY_FORCELIST = (500, 502, 504) \r\n\r\n        retry = Retry(total=HTTP_REQUEST_RETRIES,\r\n                      read=HTTP_REQUEST_RETRIES,\r\n                      connect=HTTP_REQUEST_RETRIES,\r\n                      backoff_factor=HTTP_RETRY_BACKOFF_FACTOR,\r\n                      status_forcelist=HTTP_RETRY_FORCELIST)\r\n\r\n        adapter = HTTPAdapter(max_retries=retry)\r\n        sess.mount('http+unix://', adapter)\r\n        \r\n```\r\n\r\nand here is there error:\r\n\r\n```\r\n   requesting POST http+unix://%2Frun%2Fmqerd%2Fnginx.sock/apicall\r\n   error: 'http+unix' - Traceback (most recent call last):\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/proton/tools/client.py\", line 294, in handle_untrusted_msg\r\n     response = self._handle_cloud_unlock(data)\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/proton/tools/client.py\", line 146, in _handle_cloud_unlock\r\n     response = self.sess.request(\"POST\", url, headers=headers, data=encoded_body)\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/requests/sessions.py\", line 508, in request\r\n     resp = self.send(prep, **send_kwargs)\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/requests/sessions.py\", line 618, in send\r\n     r = adapter.send(request, **kwargs)\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/requests/adapters.py\", line 405, in send\r\n     conn = self.get_connection(request.url, proxies)\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/requests/adapters.py\", line 309, in get_connection\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/urllib3/poolmanager.py\", line 279, in connection_from_url\r\n     pool_kwargs=pool_kwargs)\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/urllib3/poolmanager.py\", line 227, in connection_from_host\r\n     return self.connection_from_context(request_context)\r\n   File \"/opt/venvs/op-proton/lib/python3.5/site-packages/urllib3/poolmanager.py\", line 237, in connection_from_context\r\n     pool_key_constructor = self.key_fn_by_scheme[scheme]\r\n KeyError: 'http+unix'\r\n```\r\n\r\nAny help is appreciated!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/35", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/35/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/35/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/35", "id": 225569379, "node_id": "MDU6SXNzdWUyMjU1NjkzNzk=", "number": 35, "title": "InvalidURL", "user": {"login": "disarticulate", "id": 17464125, "node_id": "MDQ6VXNlcjE3NDY0MTI1", "avatar_url": "https://avatars1.githubusercontent.com/u/17464125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disarticulate", "html_url": "https://github.com/disarticulate", "followers_url": "https://api.github.com/users/disarticulate/followers", "following_url": "https://api.github.com/users/disarticulate/following{/other_user}", "gists_url": "https://api.github.com/users/disarticulate/gists{/gist_id}", "starred_url": "https://api.github.com/users/disarticulate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disarticulate/subscriptions", "organizations_url": "https://api.github.com/users/disarticulate/orgs", "repos_url": "https://api.github.com/users/disarticulate/repos", "events_url": "https://api.github.com/users/disarticulate/events{/privacy}", "received_events_url": "https://api.github.com/users/disarticulate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-02T01:39:44Z", "updated_at": "2019-08-15T22:45:19Z", "closed_at": "2019-08-15T22:45:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nsock = '/home/cy/geodocr/socks/GEODOCR.geodocr-time.time.59c96cf3e88d406a93bd084747b7c2d6'\r\nimport requests_unixsocket\r\n\r\nsession = requests_unixsocket.Session()\r\n\r\n# Access /path/to/page from /tmp/profilesvc.sock\r\nr = session.get('http+unix://'+sock+'/time')\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nInvalidURL                                Traceback (most recent call last)\r\n<ipython-input-127-f08380141c32> in <module>()\r\n      5 \r\n      6 # Access /path/to/page from /tmp/profilesvc.sock\r\n----> 7 r = session.get('http+unix://'+sock+'/time')\r\n      8 assert r.status_code == 200\r\n\r\n/home/cy/anaconda3/envs/geodocr/lib/python3.6/site-packages/requests/sessions.py in get(self, url, **kwargs)\r\n    499 \r\n    500         kwargs.setdefault('allow_redirects', True)\r\n--> 501         return self.request('GET', url, **kwargs)\r\n    502 \r\n    503     def options(self, url, **kwargs):\r\n\r\n/home/cy/anaconda3/envs/geodocr/lib/python3.6/site-packages/requests/sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\r\n    472             hooks = hooks,\r\n    473         )\r\n--> 474         prep = self.prepare_request(req)\r\n    475 \r\n    476         proxies = proxies or {}\r\n\r\n/home/cy/anaconda3/envs/geodocr/lib/python3.6/site-packages/requests/sessions.py in prepare_request(self, request)\r\n    405             auth=merge_setting(auth, self.auth),\r\n    406             cookies=merged_cookies,\r\n--> 407             hooks=merge_hooks(request.hooks, self.hooks),\r\n    408         )\r\n    409         return p\r\n\r\n/home/cy/anaconda3/envs/geodocr/lib/python3.6/site-packages/requests/models.py in prepare(self, method, url, headers, files, data, params, auth, cookies, hooks, json)\r\n    300 \r\n    301         self.prepare_method(method)\r\n--> 302         self.prepare_url(url, params)\r\n    303         self.prepare_headers(headers)\r\n    304         self.prepare_cookies(cookies)\r\n\r\n/home/cy/anaconda3/envs/geodocr/lib/python3.6/site-packages/requests/models.py in prepare_url(self, url, params)\r\n    383 \r\n    384         if not host:\r\n--> 385             raise InvalidURL(\"Invalid URL %r: No host supplied\" % url)\r\n    386 \r\n    387         # In general, we want to try IDNA encoding the hostname if the string contains\r\n\r\nInvalidURL: Invalid URL 'http+unix:///home/cy/geodocr/socks/GEODOCR.geodocr-time.time.59c96cf3e88d406a93bd084747b7c2d6/time': No host supplied\r\n```\r\n\r\nI looked at IDNA and don't see anything wrong there. python is 3.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/29", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/29/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/29/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/29", "id": 208730261, "node_id": "MDU6SXNzdWUyMDg3MzAyNjE=", "number": 29, "title": "Change examples to show using docker.sock", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-19T17:08:27Z", "updated_at": "2017-02-19T20:14:34Z", "closed_at": "2017-02-19T20:14:34Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Since that is a common use case", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/24", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/24/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/24/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/24", "id": 189480800, "node_id": "MDU6SXNzdWUxODk0ODA4MDA=", "number": 24, "title": "Requests 2.12 has broken 'er?", "user": {"login": "jtpaasch", "id": 959742, "node_id": "MDQ6VXNlcjk1OTc0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/959742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtpaasch", "html_url": "https://github.com/jtpaasch", "followers_url": "https://api.github.com/users/jtpaasch/followers", "following_url": "https://api.github.com/users/jtpaasch/following{/other_user}", "gists_url": "https://api.github.com/users/jtpaasch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtpaasch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtpaasch/subscriptions", "organizations_url": "https://api.github.com/users/jtpaasch/orgs", "repos_url": "https://api.github.com/users/jtpaasch/repos", "events_url": "https://api.github.com/users/jtpaasch/events{/privacy}", "received_events_url": "https://api.github.com/users/jtpaasch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-15T19:17:00Z", "updated_at": "2017-02-19T16:38:29Z", "closed_at": "2017-02-19T16:38:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has the just-released Requests 2.12 library broken something? Just today, a unix socket request gives me the error \"URL has invalid label\".\r\n\r\nSteps to  reproduce:\r\n\r\n1. On a machine with Docker running and a user that can access /var/run/docker.sock.\r\n2. Make a virtual environment (with Python 3.4+) and install requests_unixsocket:\r\n\r\n   `pyvenv venv`\r\n    `. venv/bin/activate`\r\n    `pip install --upgrade pip`\r\n    `pip install requests-unixsocket`\r\n\r\n3. Note that requests is 2.12.\r\n4. In a python interpreter try to get a list of docker containers:\r\n\r\n    `>>> import requests_unixsocket`\r\n    `>>> session = requests_unixsocket.Session()`\r\n    `>>> r = session.get(\"http+unix://%2Fvar%2Frun%2Fdocker.sock/containers/json\")` \r\n\r\n5. It throws the error.\r\n\r\n    `requests.exceptions.InvalidURL: URL has an invalid label.`\r\n\r\nIf I do the same with requests 2.11.1, it works fine.\r\n\r\nThe requests 2.12 release notes say there's an upgrade to IDNA2008.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/23", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/23/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/23/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/23", "id": 169190435, "node_id": "MDU6SXNzdWUxNjkxOTA0MzU=", "number": 23, "title": "Error if the path to the socket is greater than 70ish characters", "user": {"login": "tjj5036", "id": 1668558, "node_id": "MDQ6VXNlcjE2Njg1NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1668558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjj5036", "html_url": "https://github.com/tjj5036", "followers_url": "https://api.github.com/users/tjj5036/followers", "following_url": "https://api.github.com/users/tjj5036/following{/other_user}", "gists_url": "https://api.github.com/users/tjj5036/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjj5036/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjj5036/subscriptions", "organizations_url": "https://api.github.com/users/tjj5036/orgs", "repos_url": "https://api.github.com/users/tjj5036/repos", "events_url": "https://api.github.com/users/tjj5036/events{/privacy}", "received_events_url": "https://api.github.com/users/tjj5036/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-03T17:42:13Z", "updated_at": "2017-02-19T16:49:37Z", "closed_at": "2017-02-19T16:49:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into an issue where I had a path to a socket that looked like this:\n\n```\n %2Fstorage%2Ftestroot%2F123456789%2F123456789111%2Fdata%2Flocal_auth.sock\n```\n\nWhich is 73 characters long. When prefixed with `http+unix`, the full path looks like:\n\n```\n http+unix://%2Fstorage%2Ftestroot%2F123456789%2F123456789111%2Fdata%2Flocal_auth.sock\n```\n\nWhen passed to requests, the following error occurs:\n\n> File \"/usr/local/updated-openssl/lib/python3.4/site-packages/requests_unixsocket/**init**.py\", line 60, in post\n> File \"/usr/local/updated-openssl/lib/python3.4/site-packages/requests_unixsocket/**init**.py\", line 46, in request\n> File \"/usr/local/updated-openssl/lib/python3.4/site-packages/requests/sessions.py\", line 461, in request\n> File \"/usr/local/updated-openssl/lib/python3.4/site-packages/requests/sessions.py\", line 394, in prepare_request\n> File \"/usr/local/updated-openssl/lib/python3.4/site-packages/requests/models.py\", line 295, in prepare\n> File \"/usr/local/updated-openssl/lib/python3.4/site-packages/requests/models.py\", line 364, in prepare_url\n> requests.exceptions.InvalidURL: URL has an invalid label.\n\nWhich is in turn triggered by this:\n\n> Traceback (most recent call last):\n> File \"/usr/local/updated-openssl/lib/python3.4/site-packages/requests/models.py\", line 362, in prepare_url\n> UnicodeError: encoding with 'idna' codec failed (UnicodeError: label empty or too long)\n\nDigging around in the source for `models.py`, it looks like it extracts the host (which is the path to the socket above), and then performs:\n\n`host = host.encode('idna').decode('utf-8')`\n\nThis will fail in accordance with the IDNA RFC, which states:\n\n```\nThe conversions between ASCII and non-ASCII forms of a domain name are accomplished by algorithms called ToASCII and ToUnicode. These algorithms are not applied to the domain name as a whole, but rather to individual labels. For example, if the domain name is www.example.com, then the labels are www, example, and com. ToASCII or ToUnicode are applied to each of these three separately.\n\nThe details of these two algorithms are complex, and are specified in RFC 3490. The following gives an overview of their function.\n\nToASCII leaves unchanged any ASCII label, but will fail if the label is unsuitable for the Domain Name System. If given a label containing at least one non-ASCII character, ToASCII will apply the Nameprep algorithm, which converts the label to lowercase and performs other normalization, and will then translate the result to ASCII using Punycode[16] before prepending the four-character string \"xn--\".[17] This four-character string is called the ASCII Compatible Encoding (ACE) prefix, and is used to distinguish Punycode encoded labels from ordinary ASCII labels. The ToASCII algorithm can fail in several ways; for example, the final string could exceed the 63-character limit of a DNS name. A label for which ToASCII fails cannot be used in an internationalized domain name.\n```\n\nMy interpretation of the error is that if the path to the socket is rather long, this fails. Is there a suggested workaround other than symlinking the socket file to something short?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/21", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/21/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/21/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/21", "id": 168692073, "node_id": "MDU6SXNzdWUxNjg2OTIwNzM=", "number": 21, "title": "Override `HTTPAdapter.request_url`", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-01T16:53:58Z", "updated_at": "2016-08-09T17:24:51Z", "closed_at": "2016-08-09T17:24:51Z", "author_association": "OWNER", "active_lock_reason": null, "body": "According to @sigmavirus24 at https://github.com/kennethreitz/requests/issues/3131#issuecomment-214792914, it sounds like we should override `HTTPAdapter.request_url` so that it doesn't call `select_proxy`, which could cause problems on some older versions of `requests`?\n\nI wonder how to reproduce the issue...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/20", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/20/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/20/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/20", "id": 153668132, "node_id": "MDU6SXNzdWUxNTM2NjgxMzI=", "number": 20, "title": "Installation fails", "user": {"login": "BrunoMSantos", "id": 1646141, "node_id": "MDQ6VXNlcjE2NDYxNDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1646141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrunoMSantos", "html_url": "https://github.com/BrunoMSantos", "followers_url": "https://api.github.com/users/BrunoMSantos/followers", "following_url": "https://api.github.com/users/BrunoMSantos/following{/other_user}", "gists_url": "https://api.github.com/users/BrunoMSantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrunoMSantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrunoMSantos/subscriptions", "organizations_url": "https://api.github.com/users/BrunoMSantos/orgs", "repos_url": "https://api.github.com/users/BrunoMSantos/repos", "events_url": "https://api.github.com/users/BrunoMSantos/events{/privacy}", "received_events_url": "https://api.github.com/users/BrunoMSantos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-05-08T17:41:17Z", "updated_at": "2016-12-10T05:21:37Z", "closed_at": "2016-08-01T16:36:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I do have git installed, but installation fails with following message:\n\n```\n$ python setup.py build\n[...]\nException: Versioning for this project requires either an sdist tarball, or access to an upstream git repository. Are you sure that git is installed?\nerror in setup command: Error parsing /tmp/yaourt-tmp-bruno/aur-python-requests-unixsocket/src/requests-unixsocket-0.1.5/setup.cfg: Exception: Versioning for this project\n requires either an sdist tarball, or access to an upstream git repository. Are you sure that git is installed?\n```\n\nIt installs correctly through pip though..\n\nThis is on an Arch x86_64 machine.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/19", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/19/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/19/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/19", "id": 149233984, "node_id": "MDU6SXNzdWUxNDkyMzM5ODQ=", "number": 19, "title": "Recent issues installing on OS X and Python 3.5.1", "user": {"login": "nikolay", "id": 2882, "node_id": "MDQ6VXNlcjI4ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolay", "html_url": "https://github.com/nikolay", "followers_url": "https://api.github.com/users/nikolay/followers", "following_url": "https://api.github.com/users/nikolay/following{/other_user}", "gists_url": "https://api.github.com/users/nikolay/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolay/subscriptions", "organizations_url": "https://api.github.com/users/nikolay/orgs", "repos_url": "https://api.github.com/users/nikolay/repos", "events_url": "https://api.github.com/users/nikolay/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-18T18:31:35Z", "updated_at": "2016-08-01T16:34:44Z", "closed_at": "2016-08-01T16:32:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ pip install -U requests-unixsocket\nCollecting requests-unixsocket\n  Downloading requests-unixsocket-0.1.5.tar.gz\n    Complete output from command python setup.py egg_info:\n    ERROR:root:Error parsing\n    Traceback (most recent call last):\n      File \"/Users/user/Projects/project/.env/versions/3.5.1/envs/myenv/lib/python3.5/site-packages/pbr/core.py\", line 111, in pbr\n        attrs = util.cfg_to_args(path, dist.script_args)\n      File \"/Users/user/Projects/project/.env/versions/3.5.1/envs/myenv/lib/python3.5/site-packages/pbr/util.py\", line 264, in cfg_to_args\n        wrap_commands(kwargs)\n      File \"/Users/user/Projects/project/.env/versions/3.5.1/envs/myenv/lib/python3.5/site-packages/pbr/util.py\", line 566, in wrap_commands\n        cmdclass = ep.resolve()\n      File \"/Users/user/Projects/project/.env/versions/3.5.1/envs/myenv/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2235, in resolve\n        module = __import__(self.module_name, fromlist=['__name__'], level=0)\n    ImportError: No module named 'monolithic'\n    error in setup command: Error parsing /private/var/folders/cb/cxxqz_g94jd1x5tjwrklxgd00000gn/T/pip-build-r8bqv_7b/requests-unixsocket/setup.cfg: ImportError: No module named 'monolithic'\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/cb/cxxqz_g94jd1x5tjwrklxgd00000gn/T/pip-build-r8bqv_7b/requests-unixsocket/\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/18", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/18/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/18/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/18", "id": 149146722, "node_id": "MDU6SXNzdWUxNDkxNDY3MjI=", "number": 18, "title": "Abstract namespace unix socket", "user": {"login": "vetal4444", "id": 1981072, "node_id": "MDQ6VXNlcjE5ODEwNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1981072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vetal4444", "html_url": "https://github.com/vetal4444", "followers_url": "https://api.github.com/users/vetal4444/followers", "following_url": "https://api.github.com/users/vetal4444/following{/other_user}", "gists_url": "https://api.github.com/users/vetal4444/gists{/gist_id}", "starred_url": "https://api.github.com/users/vetal4444/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vetal4444/subscriptions", "organizations_url": "https://api.github.com/users/vetal4444/orgs", "repos_url": "https://api.github.com/users/vetal4444/repos", "events_url": "https://api.github.com/users/vetal4444/events{/privacy}", "received_events_url": "https://api.github.com/users/vetal4444/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-04-18T13:11:13Z", "updated_at": "2019-08-15T23:53:54Z", "closed_at": "2017-02-20T17:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add support for abstruct namespace unix socket. Currently it is raised `requests.exceptions.ConnectionError: ('Connection aborted.', FileNotFoundError(2, 'No such file or directory'))`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/16", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/16/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/16/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/16", "id": 140980960, "node_id": "MDU6SXNzdWUxNDA5ODA5NjA=", "number": 16, "title": "Monkey patch breaks request.post()", "user": {"login": "3XE", "id": 11164947, "node_id": "MDEyOk9yZ2FuaXphdGlvbjExMTY0OTQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/11164947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3XE", "html_url": "https://github.com/3XE", "followers_url": "https://api.github.com/users/3XE/followers", "following_url": "https://api.github.com/users/3XE/following{/other_user}", "gists_url": "https://api.github.com/users/3XE/gists{/gist_id}", "starred_url": "https://api.github.com/users/3XE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3XE/subscriptions", "organizations_url": "https://api.github.com/users/3XE/orgs", "repos_url": "https://api.github.com/users/3XE/repos", "events_url": "https://api.github.com/users/3XE/events{/privacy}", "received_events_url": "https://api.github.com/users/3XE/received_events", "type": "Organization", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-15T13:59:48Z", "updated_at": "2016-08-01T16:13:59Z", "closed_at": "2016-08-01T16:13:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the monkey patch technique (and perhaps others, I have not checked) requests.post() appears to break on both socket and standard TCP/IP connections.  E.g.\n\n```\nimport requests\nimport requests_unixsocket\n\nrequests_unixsocket.monkeypatch()\n\nr = requests.post('http+unix://%2Fvar%2Frun%2Fexample.sock/example-endpoint')\n#TypeError: request() got an unexpected keyword argument 'json'\n\nr = requests.post('http://eample.com')\n#TypeError: request() got an unexpected keyword argument 'json'\n```\n\nI have submitted PR #17  which appears to fix the issue.\n\nThanks for this package btw!\n\n-Peter\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/7", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/7/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/7/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/7", "id": 54530011, "node_id": "MDU6SXNzdWU1NDUzMDAxMQ==", "number": 7, "title": "Cannot import", "user": {"login": "nikolay", "id": 2882, "node_id": "MDQ6VXNlcjI4ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolay", "html_url": "https://github.com/nikolay", "followers_url": "https://api.github.com/users/nikolay/followers", "following_url": "https://api.github.com/users/nikolay/following{/other_user}", "gists_url": "https://api.github.com/users/nikolay/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolay/subscriptions", "organizations_url": "https://api.github.com/users/nikolay/orgs", "repos_url": "https://api.github.com/users/nikolay/repos", "events_url": "https://api.github.com/users/nikolay/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-16T01:39:16Z", "updated_at": "2015-02-03T17:55:31Z", "closed_at": "2015-02-03T17:55:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n# python\nPython 2.7.6 (default, Mar 22 2014, 22:59:56)\n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import requests_unixsocket\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/requests_unixsocket/__init__.py\", line 4, in <module>\n    from .adapters import UnixAdapter\n  File \"/usr/local/lib/python2.7/dist-packages/requests_unixsocket/adapters.py\", line 5, in <module>\n    from requests.packages.urllib3.connection import HTTPConnection\nImportError: No module named packages.urllib3.connection\n# pip show urllib3\n\n---\nName: urllib3\nVersion: 1.7.1\nLocation: /usr/lib/python2.7/dist-packages\nRequires:\n# pip show requests-unixsocket\n\n---\nName: requests-unixsocket\nVersion: 0.1.2\nLocation: /usr/local/lib/python2.7/dist-packages\nRequires: requests\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/6", "repository_url": "https://api.github.com/repos/msabramo/requests-unixsocket", "labels_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/6/comments", "events_url": "https://api.github.com/repos/msabramo/requests-unixsocket/issues/6/events", "html_url": "https://github.com/msabramo/requests-unixsocket/issues/6", "id": 51145651, "node_id": "MDU6SXNzdWU1MTE0NTY1MQ==", "number": 6, "title": "GET parameters stripped from URL", "user": {"login": "mminer", "id": 267284, "node_id": "MDQ6VXNlcjI2NzI4NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/267284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mminer", "html_url": "https://github.com/mminer", "followers_url": "https://api.github.com/users/mminer/followers", "following_url": "https://api.github.com/users/mminer/following{/other_user}", "gists_url": "https://api.github.com/users/mminer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mminer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mminer/subscriptions", "organizations_url": "https://api.github.com/users/mminer/orgs", "repos_url": "https://api.github.com/users/mminer/repos", "events_url": "https://api.github.com/users/mminer/events{/privacy}", "received_events_url": "https://api.github.com/users/mminer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-05T21:03:04Z", "updated_at": "2015-02-03T23:23:07Z", "closed_at": "2015-02-03T23:23:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a request like `http+unix://%2Fvar%2Frun%2Fdocker.sock/containers/nginx/logs?timestamp=true`, the GET parameters at the end of the URL are stripped out. This is due to `UnixHTTPConnection.request` only passing through the URL's path to its parent function ([relevant line of code](https://github.com/msabramo/requests-unixsocket/blob/8d692622c9466fcf3d7d4c1c190c7aaf84267c1e/requests_unixsocket/adapters.py#L31)).\n\nThe problem is easily fixed by removing the aforementioned line or by removing `UnixHTTPConnection.request` entirely. I'd issue a pull request, but I'm unsure of the motivation behind the current behaviour and want to avoid inadvertently breaking other requests.\n", "performed_via_github_app": null, "score": 1.0}]}