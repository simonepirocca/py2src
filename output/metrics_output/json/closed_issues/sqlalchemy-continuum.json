{"total_count": 75, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/245", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/245/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/245/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/245", "id": 611507582, "node_id": "MDU6SXNzdWU2MTE1MDc1ODI=", "number": 245, "title": "Property names different from column names are not respected in inherited classes", "user": {"login": "killthekitten", "id": 1201569, "node_id": "MDQ6VXNlcjEyMDE1Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1201569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killthekitten", "html_url": "https://github.com/killthekitten", "followers_url": "https://api.github.com/users/killthekitten/followers", "following_url": "https://api.github.com/users/killthekitten/following{/other_user}", "gists_url": "https://api.github.com/users/killthekitten/gists{/gist_id}", "starred_url": "https://api.github.com/users/killthekitten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killthekitten/subscriptions", "organizations_url": "https://api.github.com/users/killthekitten/orgs", "repos_url": "https://api.github.com/users/killthekitten/repos", "events_url": "https://api.github.com/users/killthekitten/events{/privacy}", "received_events_url": "https://api.github.com/users/killthekitten/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-03T21:06:05Z", "updated_at": "2020-05-24T06:48:54Z", "closed_at": "2020-05-24T06:48:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a `declared_attr` is defined in a child class of a versioned model, the corresponding version model doesn't pick up the name of the attribute. Instead, it defaults to the column name.\r\n\r\nAs a result, when the changeset is assigned to the version model, the changes in the `declared_attr` are not stored.\r\n\r\nHere's some pseudo-code to illustrate the issue:\r\n\r\n```python\r\nclass SingleTableInheritanceTestCase(TestCase):\r\n    def create_models(self):\r\n        class TextItem(self.Model):\r\n            ...\r\n            id = sa.Column(sa.Integer, autoincrement=True, primary_key=True)\r\n\r\n            discriminator = sa.Column(\r\n                sa.Unicode(100)\r\n            )\r\n\r\n            __mapper_args__ = {\r\n                'polymorphic_on': discriminator,\r\n                'with_polymorphic': '*'\r\n            }\r\n\r\n        class Article(TextItem):\r\n            __mapper_args__ = {'polymorphic_identity': u'article'}\r\n            name = sa.Column(sa.Unicode(255))\r\n\r\n            @declared_attr\r\n            def status(cls):\r\n                return sa.Column(\"_status\", sa.Unicode(255))\r\n\r\n    def test_declared_attr_inheritance(self):\r\n        assert not self.ArticleVersion._status\r\n        assert self.ArticleVersion.status\r\n```\r\n\r\nThis is what `Article.__mapper__._columntoproperty` looks like in this case:\r\n\r\n```python\r\n\r\n{Column('_status', Unicode(length=255), table=<text_item>): <ColumnProperty at 0x110689650; status>, ...}\r\n```\r\n\r\nI'm thinking of a fix that would change the [`build_model`](https://github.com/kvesteri/sqlalchemy-continuum/blob/master/sqlalchemy_continuum/model_builder.py#L250) method to populate the version model with `column_property` based on the mapper of the original model. Would that make sense @kvesteri?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/239", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/239/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/239/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/239", "id": 581357469, "node_id": "MDU6SXNzdWU1ODEzNTc0Njk=", "number": 239, "title": "SQLAlchemy 1.3.14 warns about \"viewonly\" backref relationships", "user": {"login": "lgedgar", "id": 134969, "node_id": "MDQ6VXNlcjEzNDk2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/134969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgedgar", "html_url": "https://github.com/lgedgar", "followers_url": "https://api.github.com/users/lgedgar/followers", "following_url": "https://api.github.com/users/lgedgar/following{/other_user}", "gists_url": "https://api.github.com/users/lgedgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgedgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgedgar/subscriptions", "organizations_url": "https://api.github.com/users/lgedgar/orgs", "repos_url": "https://api.github.com/users/lgedgar/repos", "events_url": "https://api.github.com/users/lgedgar/events{/privacy}", "received_events_url": "https://api.github.com/users/lgedgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-14T20:21:56Z", "updated_at": "2020-05-12T06:37:00Z", "closed_at": "2020-05-12T06:37:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of SQLAlchemy 1.3.14, I'm seeing new warnings about backref relationships which involve `viewonly=True` configuration.  More info on that is in the SA [changelog](https://docs.sqlalchemy.org/en/13/changelog/changelog_13.html#change-7fb56b0269d9a13d31cc33857913a961).\r\n\r\nAs pertains to SQLAlchemy-Continuum, these warnings are emitted for the e.g. `Model.versions` and/or `ModelVersion.version_parent` relationships, since the former specifies `viewonly=True` and the latter is a simple `backref`.  An example warning looks like:\r\n\r\n```\r\n/srv/envs/poser3/lib/python3.5/site-packages/sqlalchemy/orm/relationships.py:1869: SAWarning: Setting backref / back_populates on relationship User.versions to refer to viewonly relationship UserVersion.version_parent will be deprecated in SQLAlchemy 1.4, and will be disallowed in a future release.  viewonly relationships should not be mutated (this warning may be suppressed after 10 occurrences)\r\n  (self, other),\r\n```\r\n\r\nI probably know just enough to be dangerous here, but have attempted a fix, and ran the test suite with 'postgres' driver only, with no regressions that I can tell.  My assumption is that both relationships can/should in fact specify `viewonly=True` and neither should use a backref.  I'm also assuming that my proposed fix will work fine with \"older\" SQLAlchemy, as well as preventing the warnings etc. going forward.  Will submit a pull request for this shortly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/234", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/234/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/234/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/234", "id": 556549650, "node_id": "MDU6SXNzdWU1NTY1NDk2NTA=", "number": 234, "title": "Transaction table not being created.", "user": {"login": "dvschramm", "id": 17729, "node_id": "MDQ6VXNlcjE3NzI5", "avatar_url": "https://avatars0.githubusercontent.com/u/17729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvschramm", "html_url": "https://github.com/dvschramm", "followers_url": "https://api.github.com/users/dvschramm/followers", "following_url": "https://api.github.com/users/dvschramm/following{/other_user}", "gists_url": "https://api.github.com/users/dvschramm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvschramm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvschramm/subscriptions", "organizations_url": "https://api.github.com/users/dvschramm/orgs", "repos_url": "https://api.github.com/users/dvschramm/repos", "events_url": "https://api.github.com/users/dvschramm/events{/privacy}", "received_events_url": "https://api.github.com/users/dvschramm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-28T23:26:07Z", "updated_at": "2020-08-14T08:29:53Z", "closed_at": "2020-02-25T00:50:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pyramid/SQLAlchemy project, using alembic the version tables are being created fine but the Transaction table is not so when changes are made, I get the error:\r\n\r\n`ProgrammingError: (psycopg2.ProgrammingError) relation \"transaction\" does not exist\r\nLINE 1: INSERT INTO transaction (fxt, issued_at, id, remote_addr) VA...\r\n                    ^\r\n [SQL: \"INSERT INTO transaction (fxt, issued_at, id, remote_addr) VALUES (%(fxt)s, %(issued_at)s, nextval('transaction_id_seq'), %(remote_addr)s) RETURNING transaction.id\"] [parameters: {'fxt': None, 'issued_at': datetime.datetime(2020, 1, 28, 23, 1, 46, 849596), 'remote_addr': None}] (Background on this error at: http://sqlalche.me/e/f405)\r\n`\r\nNot doing anything fancy, just using the make_versioned/configure_mappers calls as in the examples. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/218", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/218/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/218/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/218", "id": 420106720, "node_id": "MDU6SXNzdWU0MjAxMDY3MjA=", "number": 218, "title": "When using SQLAlchemy 1.3.x, configure_mappers() throws an attribute error", "user": {"login": "scottrmercer", "id": 1252889, "node_id": "MDQ6VXNlcjEyNTI4ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1252889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottrmercer", "html_url": "https://github.com/scottrmercer", "followers_url": "https://api.github.com/users/scottrmercer/followers", "following_url": "https://api.github.com/users/scottrmercer/following{/other_user}", "gists_url": "https://api.github.com/users/scottrmercer/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottrmercer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottrmercer/subscriptions", "organizations_url": "https://api.github.com/users/scottrmercer/orgs", "repos_url": "https://api.github.com/users/scottrmercer/repos", "events_url": "https://api.github.com/users/scottrmercer/events{/privacy}", "received_events_url": "https://api.github.com/users/scottrmercer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-12T17:12:40Z", "updated_at": "2019-03-19T13:32:51Z", "closed_at": "2019-03-19T13:32:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `SQLAlchemy >= 1.3.0` making a call to `configure_mappers()` throws the following: \r\n`models.py:1116: in <module>\r\n    orm.configure_mappers()\r\n../../../../.local/share/virtualenvs/serverless_api-rsKB6esd/lib/python3.6/site-packages/sqlalchemy/orm/mapper.py:3246: in configure_mappers\r\n    Mapper.dispatch._for_class(Mapper).after_configured()\r\n../../../../.local/share/virtualenvs/serverless_api-rsKB6esd/lib/python3.6/site-packages/sqlalchemy/event/attr.py:259: in __call__\r\n    fn(*args, **kw)\r\n../../../../.local/share/virtualenvs/serverless_api-rsKB6esd/lib/python3.6/site-packages/sqlalchemy/orm/events.py:639: in wrap\r\n    fn(*arg, **kw)\r\n../../../../.local/share/virtualenvs/serverless_api-rsKB6esd/lib/python3.6/site-packages/sqlalchemy_continuum/builder.py:173: in configure_versioned_classes\r\n    self.build_relationships(pending_copy)\r\n../../../../.local/share/virtualenvs/serverless_api-rsKB6esd/lib/python3.6/site-packages/sqlalchemy_continuum/builder.py:113: in build_relationships\r\n    builder()\r\n../../../../.local/share/virtualenvs/serverless_api-rsKB6esd/lib/python3.6/site-packages/sqlalchemy_continuum/relationship_builder.py:358: in __call__\r\n    if column_pair[0] in self.property.table.c.values():\r\n../../../../.local/share/virtualenvs/serverless_api-rsKB6esd/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:949: in __getattr__\r\n    return self._fallback_getattr(key)\r\n../../../../.local/share/virtualenvs/serverless_api-rsKB6esd/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:923: in _fallback_getattr\r\n    raise AttributeError(key)\r\nE   AttributeError: table`\r\n\r\nIf I downgrade SQLAlchemy to any version below 1.3.0, it functions as expected. \r\n\r\nWhen running version 1.3, if I remove the call to `make_versioned()`, tests will pass again (however, versioning does not work, as expected)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/212", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/212/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/212/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/212", "id": 409527293, "node_id": "MDU6SXNzdWU0MDk1MjcyOTM=", "number": 212, "title": "sqlalchemy.exc.ArgumentError: Can't add additional column 'post_version_id' when specifying __table__", "user": {"login": "ErinMorelli", "id": 4680619, "node_id": "MDQ6VXNlcjQ2ODA2MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4680619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErinMorelli", "html_url": "https://github.com/ErinMorelli", "followers_url": "https://api.github.com/users/ErinMorelli/followers", "following_url": "https://api.github.com/users/ErinMorelli/following{/other_user}", "gists_url": "https://api.github.com/users/ErinMorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErinMorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErinMorelli/subscriptions", "organizations_url": "https://api.github.com/users/ErinMorelli/orgs", "repos_url": "https://api.github.com/users/ErinMorelli/repos", "events_url": "https://api.github.com/users/ErinMorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/ErinMorelli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-12T22:21:03Z", "updated_at": "2019-02-14T18:04:56Z", "closed_at": "2019-02-14T18:04:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an existing database and models that I am looking to add SQLAlchemy-Continuum to, but I'm running into this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 20, in <module>\r\n    from database.models import Post\r\n  File \"/home/erin/projects/blog/database/__init__.py\", line 12, in <module>\r\n    from models import *\r\n  File \"/home/erin/projects/blog/database/models.py\", line 669, in <module>\r\n    sa.orm.configure_mappers()\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 3210, in configure_mappers\r\n    Mapper.dispatch._for_class(Mapper).after_configured()\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy/event/attr.py\", line 259, in __call__\r\n    fn(*args, **kw)\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy/orm/events.py\", line 637, in wrap\r\n    fn(*arg, **kw)\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy_continuum/builder.py\", line 167, in configure_versioned_classes\r\n    self.build_models()\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy_continuum/builder.py\", line 89, in build_models\r\n    self.manager.transaction_cls\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy_continuum/model_builder.py\", line 274, in __call__\r\n    self.version_class = self.build_model(table)\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy_continuum/model_builder.py\", line 262, in build_model\r\n    return type(name, self.base_classes(), args)\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy/ext/declarative/api.py\", line 71, in __init__\r\n    _as_declarative(cls, classname, cls.__dict__)\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 128, in _as_declarative\r\n    _MapperConfig.setup_mapping(cls, classname, dict_)\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 156, in setup_mapping\r\n    cfg_cls(cls_, classname, dict_)\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 184, in __init__\r\n    self._setup_table()\r\n  File \"/home/erin/projects/blog/build/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 543, in _setup_table\r\n    \"specifying __table__\" % c.key\r\nsqlalchemy.exc.ArgumentError: Can't add additional column 'post_version_id' when specifying __table__\r\n```\r\n\r\nI'm calling `make_versioned()` at the top of my `models.py` file and calling `configure_mappers()` at the bottom after all of my models are defined, just like in all of the documentation examples.\r\n\r\nThe only table I have added versioning to is called Post, but I have several other tables declared as well.\r\n\r\n```\r\nclass Post(mixins.StatusMixin, mixins.LastModifiedMixin, mixins.CreatedMixin, ModelBase):\r\n    __versioned__ = {}\r\n    __tablename__ = 'posts'\r\n\r\n    title = sa.Column('title', sa.String(255), nullable=False)\r\n    body = sa.Column('body', sa.Text, nullable=True)\r\n    isPrivate = sa.Column('is_private', sa.Boolean, default=False, nullable=False)\r\n    link = sa.Column('link', sau.URLType, nullable=True)\r\n```\r\n\r\nI'm struggling to trace where this error might be coming from. Any ideas?\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/200", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/200/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/200/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/200", "id": 359928485, "node_id": "MDU6SXNzdWUzNTk5Mjg0ODU=", "number": 200, "title": "index_property fields not available in version", "user": {"login": "slav0nic", "id": 199555, "node_id": "MDQ6VXNlcjE5OTU1NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/199555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slav0nic", "html_url": "https://github.com/slav0nic", "followers_url": "https://api.github.com/users/slav0nic/followers", "following_url": "https://api.github.com/users/slav0nic/following{/other_user}", "gists_url": "https://api.github.com/users/slav0nic/gists{/gist_id}", "starred_url": "https://api.github.com/users/slav0nic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slav0nic/subscriptions", "organizations_url": "https://api.github.com/users/slav0nic/orgs", "repos_url": "https://api.github.com/users/slav0nic/repos", "events_url": "https://api.github.com/users/slav0nic/events{/privacy}", "received_events_url": "https://api.github.com/users/slav0nic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-13T14:44:32Z", "updated_at": "2018-09-14T17:02:55Z", "closed_at": "2018-09-14T17:02:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nclass T(Base):\r\n    __versioned__ = {}\r\n    __tablename__ = \"table\"\r\n\r\n    data = Column(NestedMutationDict.as_mutable(JSONB), default=JSON_DATA)\r\n    body = index_property(\"data\", \"body\")\r\n```\r\n\r\n`body` column not available in version", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/197", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/197/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/197/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/197", "id": 349653150, "node_id": "MDU6SXNzdWUzNDk2NTMxNTA=", "number": 197, "title": "column_property isn't ignored when reverting", "user": {"login": "marksteward", "id": 121960, "node_id": "MDQ6VXNlcjEyMTk2MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/121960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marksteward", "html_url": "https://github.com/marksteward", "followers_url": "https://api.github.com/users/marksteward/followers", "following_url": "https://api.github.com/users/marksteward/following{/other_user}", "gists_url": "https://api.github.com/users/marksteward/gists{/gist_id}", "starred_url": "https://api.github.com/users/marksteward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marksteward/subscriptions", "organizations_url": "https://api.github.com/users/marksteward/orgs", "repos_url": "https://api.github.com/users/marksteward/repos", "events_url": "https://api.github.com/users/marksteward/events{/privacy}", "received_events_url": "https://api.github.com/users/marksteward/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-10T20:49:50Z", "updated_at": "2019-02-27T15:07:16Z", "closed_at": "2019-02-27T15:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a table with a column_property, it looks like revert() tries to restore the generated column as well, which it shouldn't do.\r\n\r\n```\r\nfrom sqlalchemy import Column, Integer, String, create_engine\r\nfrom sqlalchemy.orm import sessionmaker, configure_mappers, column_property\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy_continuum import make_versioned\r\n\r\nengine = create_engine('sqlite://')\r\nSession = sessionmaker(engine)\r\nBase = declarative_base(engine)\r\n\r\nmake_versioned()\r\n\r\nclass User(Base):\r\n    __versioned__ = {}\r\n    __tablename__ = 'user'\r\n\r\n    id = Column(Integer, primary_key=True, autoincrement=True)\r\n    first_name = Column(String)\r\n    last_name = Column(String)\r\n\r\n    full_name = column_property(first_name + last_name)\r\n\r\nconfigure_mappers()\r\n\r\nif __name__ == '__main__':\r\n    Base.metadata.create_all()\r\n\r\n    session = Session()\r\n    u = User(first_name='test', last_name='tester')\r\n    session.add(u)\r\n    session.commit()\r\n\r\n    u.versions[0].revert()\r\n```\r\n\r\nThis throws:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"continuum-test.py\", line 32, in <module>\r\n    u.versions[0].revert()\r\n  File \".../lib/python3.5/site-packages/sqlalchemy_continuum/version.py\", line 71, in revert\r\n    return Reverter(self, relations=relations)()\r\n  File \".../lib/python3.5/site-packages/sqlalchemy_continuum/reverter.py\", line 125, in __call__\r\n    self.revert_properties()\r\n  File \".../lib/python3.5/site-packages/sqlalchemy_continuum/reverter.py\", line 48, in revert_properties\r\n    getattr(self.obj, prop.key)\r\nAttributeError: 'UserVersion' object has no attribute 'full_name'\r\n```\r\n\r\nHappy to add a filter based on inspect to fix this, but raising here first in case there's a more obvious fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/192", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/192/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/192/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/192", "id": 339966906, "node_id": "MDU6SXNzdWUzMzk5NjY5MDY=", "number": 192, "title": "No 1.3.5 tag in git / github", "user": {"login": "rgeens", "id": 511604, "node_id": "MDQ6VXNlcjUxMTYwNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/511604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgeens", "html_url": "https://github.com/rgeens", "followers_url": "https://api.github.com/users/rgeens/followers", "following_url": "https://api.github.com/users/rgeens/following{/other_user}", "gists_url": "https://api.github.com/users/rgeens/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgeens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgeens/subscriptions", "organizations_url": "https://api.github.com/users/rgeens/orgs", "repos_url": "https://api.github.com/users/rgeens/repos", "events_url": "https://api.github.com/users/rgeens/events{/privacy}", "received_events_url": "https://api.github.com/users/rgeens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-10T18:56:40Z", "updated_at": "2018-07-31T07:27:34Z", "closed_at": "2018-07-31T07:27:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.3.5 was released on pypi but there's no corresponding tag in the git repository. Was that intentional?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/191", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/191/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/191/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/191", "id": 337634534, "node_id": "MDU6SXNzdWUzMzc2MzQ1MzQ=", "number": 191, "title": "Flask, continuum, VersioningManager error", "user": {"login": "E179522", "id": 35773755, "node_id": "MDQ6VXNlcjM1NzczNzU1", "avatar_url": "https://avatars0.githubusercontent.com/u/35773755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/E179522", "html_url": "https://github.com/E179522", "followers_url": "https://api.github.com/users/E179522/followers", "following_url": "https://api.github.com/users/E179522/following{/other_user}", "gists_url": "https://api.github.com/users/E179522/gists{/gist_id}", "starred_url": "https://api.github.com/users/E179522/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/E179522/subscriptions", "organizations_url": "https://api.github.com/users/E179522/orgs", "repos_url": "https://api.github.com/users/E179522/repos", "events_url": "https://api.github.com/users/E179522/events{/privacy}", "received_events_url": "https://api.github.com/users/E179522/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-02T19:25:25Z", "updated_at": "2018-07-06T12:08:32Z", "closed_at": "2018-07-06T12:08:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have a Flask app using SQLAlchemy, Flask-Login.  Trying to integrate continuum but getting an error.  Can't manage to trace the issue from one file to the next:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy_continuum\\transaction.py\", line 138, in Transaction\r\n    user_cls = registry[user_cls]\r\n  File \"C:\\Users\\xxxxx\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\weakref.py\", line 137, in __getitem__\r\n    o = self.data[key]()\r\nKeyError: 'User'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 1, in <module>\r\n    from isg import app\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\isg\\__init__.py\", line 46, in <module>\r\n    from isg import views, models\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\isg\\views.py\", line 5, in <module>\r\n    from .forms import *\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\isg\\forms.py\", line 9, in <module>\r\n    statenames = models.DropDowns.query.get(1).selections.split(',')\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\flask_sqlalchemy\\__init__.py\", line 512, in __get__\r\n    mapper = orm.class_mapper(type)\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy\\orm\\base.py\", line 421, in class_mapper\r\n    mapper = _inspect_mapped_class(class_, configure=configure)\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy\\orm\\base.py\", line 400, in _inspect_mapped_class\r\n    mapper._configure_all()\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy\\orm\\mapper.py\", line 1272, in _configure_all\r\n    configure_mappers()\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy\\orm\\mapper.py\", line 3044, in configure_mappers\r\n    Mapper.dispatch._for_class(Mapper).after_configured()\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy\\event\\attr.py\", line 246, in __call__\r\n    fn(*args, **kw)\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy\\orm\\events.py\", line 621, in wrap\r\n    fn(*arg, **kw)\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy_continuum\\builder.py\", line 161, in configure_versioned_classes\r\n    self.build_transaction_class()\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy_continuum\\builder.py\", line 141, in build_transaction_class\r\n    self.manager.create_transaction_model()\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy_continuum\\manager.py\", line 166, in create_transaction_model\r\n    self.transaction_cls = self.transaction_cls(self)\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy_continuum\\factory.py\", line 11, in __call__\r\n    return self.create_class(manager)\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy_continuum\\transaction.py\", line 117, in create_class\r\n    TransactionBase\r\n  File \"C:\\Users\\xxxxx\\Desktop\\projects\\crud\\lib\\site-packages\\sqlalchemy_continuum\\transaction.py\", line 145, in Transaction\r\n    'relationship ' % (user_cls, user_cls)\r\nsqlalchemy_continuum.exc.ImproperlyConfigured: Could not build relationship between Transaction and User. User was not found\r\nin declarative class registry. Either configure VersioningManager to use different user class or disable this relationship\r\n```\r\n\r\npip freeze\r\nalembic==0.9.9\r\nbeautifulsoup4==4.6.0\r\ncertifi==2018.4.16\r\ncffi==1.11.5\r\nchardet==3.0.4\r\nclick==6.7\r\ncryptography==2.2.2\r\ndecorator==4.3.0\r\ndicttoxml==1.7.4\r\ndominate==2.3.1\r\nFlask==1.0.2\r\nFlask-Bootstrap==3.3.7.1\r\nflask-ldap-login==0.3.0\r\nflask-ldap3-login==0.9.13\r\nFlask-Login==0.4.1\r\nFlask-Mail==0.9.1\r\nFlask-Migrate==2.1.1\r\nFlask-Principal==0.4.0\r\nFlask-SQLAlchemy==2.3.2\r\nFlask-WTF==0.14.2\r\nJinja2==2.10\r\nldap3==2.5\r\nmysqlclient==1.3.12\r\nntlm-auth==1.1.0\r\nnumpy==1.14.3\r\npandas==0.23.0\r\npyodbc==4.0.23\r\npython-dateutil==2.7.3\r\npytz==2018.4\r\nrequests==2.18.4\r\nSQLAlchemy==1.2.8\r\nSQLAlchemy-Continuum==1.3.5\r\nSQLAlchemy-Utils==0.33.3\r\nWTForms==2.1\r\n\r\n**models.py**\r\n```\r\nfrom sqlalchemy_continuum.plugins import FlaskPlugin\r\nfrom sqlalchemy_continuum import make_versioned\r\n\r\n\r\nmake_versioned(plugins=[FlaskPlugin()])\r\n\r\n@login.user_loader\r\ndef load_user(id):\r\n    return Users.query.get(int(id))\r\n\t\r\n\r\nclass Users(UserMixin, db.Model):\r\n\t\"\"\"  Stores users info \"\"\"\r\n\t__versioned__ = {}\r\n\t__tablename__ = 'users'\r\n\tid = db.Column(db.Integer, primary_key=True)\r\n\tfirst = db.Column(db.String(150))\r\n\tlast = db.Column(db.String(150))\r\n\tfullname = db.Column(db.String(128), index=True, unique=False) #last, first\r\n\tname = db.Column(db.String(128), index=True, unique=True) #EID\r\n\temail = db.Column(db.String(255), unique=False)\r\n\tuserlevel = db.Column(db.String(64), unique=False, default='Pending')\r\n\tdef __repr__(self):\r\n\t\treturn '<Users %r>' % (self.name)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/188", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/188/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/188/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/188", "id": 329030531, "node_id": "MDU6SXNzdWUzMjkwMzA1MzE=", "number": 188, "title": "1.3.5 update results in ResourceClosedError's in unit tests", "user": {"login": "rgeens", "id": 511604, "node_id": "MDQ6VXNlcjUxMTYwNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/511604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgeens", "html_url": "https://github.com/rgeens", "followers_url": "https://api.github.com/users/rgeens/followers", "following_url": "https://api.github.com/users/rgeens/following{/other_user}", "gists_url": "https://api.github.com/users/rgeens/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgeens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgeens/subscriptions", "organizations_url": "https://api.github.com/users/rgeens/orgs", "repos_url": "https://api.github.com/users/rgeens/repos", "events_url": "https://api.github.com/users/rgeens/events{/privacy}", "received_events_url": "https://api.github.com/users/rgeens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-06-04T12:17:10Z", "updated_at": "2018-07-30T13:12:15Z", "closed_at": "2018-07-30T12:44:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has the cloned connection functionality from 1.3.5 introduced additional constraints on what you're allowed to do with connections? I had the unit tests in my Gitlab pipelines fail across multiple projects after the update to 1.3.5. ~~It didn't reproduce when running the tests locally.~~ It also reproduces locally.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/orm/session.py\", line 2344, in _flush\r\n    flush_context.execute()\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py\", line 391, in execute\r\n    rec.execute(self)\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/orm/unitofwork.py\", line 556, in execute\r\n    uow\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py\", line 181, in save_obj\r\n    mapper, table, insert)\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py\", line 865, in _emit_insert_statements\r\n    result = cached_connections[connection].\\\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/util/_collections.py\", line 729, in __missing__\r\n    self[key] = val = self.creator(key)\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/orm/persistence.py\", line 1268, in <lambda>\r\n    compiled_cache=base_mapper._compiled_cache\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 317, in execution_options\r\n    self.dispatch.set_connection_execution_options(c, opt)\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/event/attr.py\", line 284, in __call__\r\n    fn(*args, **kw)\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy_continuum/manager.py\", line 412, in track_cloned_connections\r\n    if connection.connection is c.connection:  # ConnectionFairy is the same - this is a clone\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 354, in connection\r\n    self._handle_dbapi_exception(e, None, None, None, None)\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 1416, in _handle_dbapi_exception\r\n    util.reraise(*exc_info)\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/util/compat.py\", line 187, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 352, in connection\r\n    return self._revalidate_connection()\r\n  File \"/usr/local/lib/python3.5/site-packages/sqlalchemy/engine/base.py\", line 432, in _revalidate_connection\r\n    raise exc.ResourceClosedError(\"This Connection is closed\")\r\nsqlalchemy.exc.ResourceClosedError: This Connection is closed\r\n```\r\n\r\nThe error seems to be happening while a pytest fixture is being setup, adding some objects to a session and committing them. I'll try and spend some more time later to get a reproducible test case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/166", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/166/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/166/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/166", "id": 248733242, "node_id": "MDU6SXNzdWUyNDg3MzMyNDI=", "number": 166, "title": "Association table can't find right unit of work", "user": {"login": "netcriptus", "id": 66514, "node_id": "MDQ6VXNlcjY2NTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/66514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/netcriptus", "html_url": "https://github.com/netcriptus", "followers_url": "https://api.github.com/users/netcriptus/followers", "following_url": "https://api.github.com/users/netcriptus/following{/other_user}", "gists_url": "https://api.github.com/users/netcriptus/gists{/gist_id}", "starred_url": "https://api.github.com/users/netcriptus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/netcriptus/subscriptions", "organizations_url": "https://api.github.com/users/netcriptus/orgs", "repos_url": "https://api.github.com/users/netcriptus/repos", "events_url": "https://api.github.com/users/netcriptus/events{/privacy}", "received_events_url": "https://api.github.com/users/netcriptus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-08T14:25:08Z", "updated_at": "2018-06-03T11:25:34Z", "closed_at": "2018-06-03T11:25:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "SQLAlchemy-continuum automatically created a migration to version an association table that doesn't have the explicit `__versioned__` attribute, which was expected.\r\n\r\nThe problem comes when I'm saving something in this association table:\r\n\r\n```\r\nself = <sqlalchemy_continuum.manager.VersioningManager object at 0x105569d90>, conn = <sqlalchemy.engine.base.Connection object at 0x1088c4650>, table_name = 'user_memberships', params = {'created_at': datetime.datetime(2017, 8, 8, 14, 8, 53, 263619, tzinfo=tzutc()), 'deleted_at': None, 'operation_type': 0, 'organization_id': 14, ...}, op = 0\r\n\r\n    def append_association_operation(self, conn, table_name, params, op):\r\n        \"\"\"\r\n            Append history association operation to pending_statements list.\r\n            \"\"\"\r\n        params['operation_type'] = op\r\n        stmt = (\r\n            self.metadata.tables[self.options['table_name'] % table_name]\r\n            .insert()\r\n            .values(params)\r\n        )\r\n        try:\r\n            uow = self.units_of_work[conn]\r\n        except KeyError:\r\n>           uow = self.units_of_work[conn.engine]\r\nE           KeyError: Engine(postgresql+psycopg2://planet:***@localhost:5432/auth_dev)\r\n\r\n../../../.virtualenvs/auth/lib/python2.7/site-packages/sqlalchemy_continuum/manager.py:378: KeyError\r\n```\r\n\r\nI have already tried to explicitly version this model, but I still get the same error. All the other versioned models work perfectly, though.\r\n\r\nI also tried to force the creation of a unit of work before saving the object, as described [here](http://sqlalchemy-continuum.readthedocs.io/en/latest/transactions.html#unitofwork) (and making sure I'm getting the correct versioning_manager and the correct session), but no luck.\r\n\r\nAm I missing something special needed for association tables?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/164", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/164/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/164/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/164", "id": 238682960, "node_id": "MDU6SXNzdWUyMzg2ODI5NjA=", "number": 164, "title": "PostgreSQL table name not in double-quotes", "user": {"login": "merqurio", "id": 1485056, "node_id": "MDQ6VXNlcjE0ODUwNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1485056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merqurio", "html_url": "https://github.com/merqurio", "followers_url": "https://api.github.com/users/merqurio/followers", "following_url": "https://api.github.com/users/merqurio/following{/other_user}", "gists_url": "https://api.github.com/users/merqurio/gists{/gist_id}", "starred_url": "https://api.github.com/users/merqurio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merqurio/subscriptions", "organizations_url": "https://api.github.com/users/merqurio/orgs", "repos_url": "https://api.github.com/users/merqurio/repos", "events_url": "https://api.github.com/users/merqurio/events{/privacy}", "received_events_url": "https://api.github.com/users/merqurio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-26T22:04:20Z", "updated_at": "2017-09-15T17:36:13Z", "closed_at": "2017-09-15T17:36:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have mixed-case spelling table, and `continuum` ist trying to query it with all lower-case. This might be due to the lack of double-quotes to delimit identifiers.\r\n\r\nI guess that adding double quotes for example [here](https://github.com/kvesteri/sqlalchemy-continuum/blob/5f682e6e5bf038d8069db51e58f71d2c1dbed6c6/sqlalchemy_continuum/dialects/postgresql.py#L15) should be sufficient.\r\n\r\nIs this something intended ? Would you accept a PR on this ?\r\n\r\n```\r\nsqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) relation \"narrative_version\" does not exist\r\nLINE 1: UPDATE Narrative_version\r\n               ^\r\nQUERY:  UPDATE Narrative_version\r\nSET end_transaction_id = transaction_id_value\r\nWHERE\r\n    transaction_id = (\r\n        SELECT MIN(transaction_id) FROM Narrative_version\r\n        WHERE end_transaction_id IS NULL AND \"id\" = NEW.\"id\"\r\n    ) AND\r\n    \"id\" = NEW.\"id\"\r\nCONTEXT:  PL/pgSQL function narrative_audit() line 15 at SQL statement\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/159", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/159/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/159/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/159", "id": 214245307, "node_id": "MDU6SXNzdWUyMTQyNDUzMDc=", "number": 159, "title": "Flask-SQLAlchemy, Factory App Pattern and a bunch of separate files containing models...", "user": {"login": "DuncanBetts", "id": 16821975, "node_id": "MDQ6VXNlcjE2ODIxOTc1", "avatar_url": "https://avatars3.githubusercontent.com/u/16821975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DuncanBetts", "html_url": "https://github.com/DuncanBetts", "followers_url": "https://api.github.com/users/DuncanBetts/followers", "following_url": "https://api.github.com/users/DuncanBetts/following{/other_user}", "gists_url": "https://api.github.com/users/DuncanBetts/gists{/gist_id}", "starred_url": "https://api.github.com/users/DuncanBetts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DuncanBetts/subscriptions", "organizations_url": "https://api.github.com/users/DuncanBetts/orgs", "repos_url": "https://api.github.com/users/DuncanBetts/repos", "events_url": "https://api.github.com/users/DuncanBetts/events{/privacy}", "received_events_url": "https://api.github.com/users/DuncanBetts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-15T00:12:59Z", "updated_at": "2017-03-15T07:57:21Z", "closed_at": "2017-03-15T07:57:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI'm trying to add SQLAlchemy Continuum to a project I'm working on, but can't seem to get it right.\r\n\r\nThis is my current setup:\r\n\r\n# contents of extensions.py\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom sqlalchemy_continuum.plugins import FlaskPlugin\r\nfrom sqlalchemy_continuum import make_versioned()\r\n\r\nmake_versioned(plugins=[FlaskPlugin()])\r\ndb = SQLAlchemy()\r\n\r\n# contents of app.py\r\nfrom .extensions import db\r\ndef create_flask_app():\r\n    ... stuff ...\r\n    db.init(app)\r\n    ... stuff ...\r\n    return app\r\n\r\n\r\n# contents of models.py (I've chosen a file pretty much at random):\r\nfrom sqlalchemy.orm import configure_mappers\r\nclass some model...\r\n__versioned__ = {}\r\n\r\nconfigure_mappers()\r\n\r\nI've tried a few other idea too, and looked at the documentation, but I just can't decide where is best to run make versioned and configure mappers. Also, it feels \"wrong\" where I'm currently trying to do it, I don't grok how its even being invoked... It's after midnight, so it might just be that I'm too tired, but am hoping someone might have a good example.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/158", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/158/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/158/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/158", "id": 207659446, "node_id": "MDU6SXNzdWUyMDc2NTk0NDY=", "number": 158, "title": "Version table `id` is an `int`.", "user": {"login": "fake-name", "id": 1401239, "node_id": "MDQ6VXNlcjE0MDEyMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1401239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fake-name", "html_url": "https://github.com/fake-name", "followers_url": "https://api.github.com/users/fake-name/followers", "following_url": "https://api.github.com/users/fake-name/following{/other_user}", "gists_url": "https://api.github.com/users/fake-name/gists{/gist_id}", "starred_url": "https://api.github.com/users/fake-name/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fake-name/subscriptions", "organizations_url": "https://api.github.com/users/fake-name/orgs", "repos_url": "https://api.github.com/users/fake-name/repos", "events_url": "https://api.github.com/users/fake-name/events{/privacy}", "received_events_url": "https://api.github.com/users/fake-name/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-14T22:47:05Z", "updated_at": "2017-02-14T22:53:46Z", "closed_at": "2017-02-14T22:52:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Basically, the version table `id` column is just a plain integer. For versioning large tables, this appears to pretty readily get exceeded.\r\n\r\nI'd think these should be `bigint`s by default. \r\n\r\n```\r\n[2017-02-14 22:39:00,568] ERROR in app: Exception on /render [GET]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/sqlalchemy/engine/base.py\", line 1182, in _execute_context\r\n    context)\r\n  File \"/usr/local/lib/python3.5/dist-packages/sqlalchemy/engine/default.py\", line 470, in do_execute\r\n    cursor.execute(statement, parameters)\r\npsycopg2.DataError: integer out of range\r\n\r\n```\r\n\r\nWhen `id` == `2147765748`.\r\n\r\nAlternatively, it should be configurable. My origin table has a `bigint` primary key (because it wound up being required). \r\n\r\nAlternatively, it's possible this is autodetected, and it's somehow not properly been migrated when I upgraded my main table from `int` to `bigint`, but I'd have thought `alembic` would have complained if that were true.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/152", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/152/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/152/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/152", "id": 193186926, "node_id": "MDU6SXNzdWUxOTMxODY5MjY=", "number": 152, "title": "Unable to exclude many-to-many relationships", "user": {"login": "mrcarriere", "id": 19361023, "node_id": "MDQ6VXNlcjE5MzYxMDIz", "avatar_url": "https://avatars2.githubusercontent.com/u/19361023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrcarriere", "html_url": "https://github.com/mrcarriere", "followers_url": "https://api.github.com/users/mrcarriere/followers", "following_url": "https://api.github.com/users/mrcarriere/following{/other_user}", "gists_url": "https://api.github.com/users/mrcarriere/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrcarriere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrcarriere/subscriptions", "organizations_url": "https://api.github.com/users/mrcarriere/orgs", "repos_url": "https://api.github.com/users/mrcarriere/repos", "events_url": "https://api.github.com/users/mrcarriere/events{/privacy}", "received_events_url": "https://api.github.com/users/mrcarriere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-02T18:37:57Z", "updated_at": "2018-03-07T18:17:34Z", "closed_at": "2018-03-07T18:17:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "This seems to be a bit different from the other many-to-many issues here: I have a many-to-many relationship on a versioned table that I don't want tracked by continuum.\r\n\r\nHere's a paired down version of the models:\r\n\r\n```\r\nfrom sqlalchemy import Table, Column, DateTime, String, Integer, ForeignKey, Text, func\r\nfrom sqlalchemy.orm import relationship, backref\r\n\r\nfrom meta import Base \r\n\r\nchannel_tag = Table('service_channel_service_tag', Base.metadata,\r\n    Column('channel_id', Integer, ForeignKey('service_channel.id'), primary_key=True),\r\n    Column('tag_id', Integer, ForeignKey('service_tag.id'))\r\n)\r\n\r\nclass ServiceChannel(Base):\r\n    __tablename__ = 'service_channel'\r\n    __versioned__ = {\r\n        'exclude': ['tags']\r\n    }\r\n\r\n    id = Column(Integer, primary_key=True)\r\n    title = Column(Text(convert_unicode=True))\r\n    description = Column(Text(convert_unicode=True))\r\n\r\n    tags = relationship(\"ServiceTag\",\r\n                        secondary=channel_tag,\r\n                        backref=\"channels\")\r\n\r\n    def __repr__(self):\r\n        return \"<ServiceChannel(id='%s')>\" % (self.id)\r\n\r\nclass ServiceTag(Base):\r\n    __tablename__ = 'service_tag'\r\n\r\n    id = Column(Integer, primary_key=True)\r\n    tag = Column(String(30), unique=True, nullable=False)\r\n\r\n    def __repr__(self):\r\n        return \"<ServiceTag(id='%s', tag='%s')>\" % (self.id, self.tag)\r\n```\r\n\r\nIn this particular case, having the historical data of tags is unnecessary. Is there some obvious way to have continuum ignore this that I'm missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/141", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/141/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/141/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/141", "id": 156010250, "node_id": "MDU6SXNzdWUxNTYwMTAyNTA=", "number": 141, "title": "Updating newly flushed object can break `changeset`", "user": {"login": "oinopion", "id": 38861, "node_id": "MDQ6VXNlcjM4ODYx", "avatar_url": "https://avatars0.githubusercontent.com/u/38861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oinopion", "html_url": "https://github.com/oinopion", "followers_url": "https://api.github.com/users/oinopion/followers", "following_url": "https://api.github.com/users/oinopion/following{/other_user}", "gists_url": "https://api.github.com/users/oinopion/gists{/gist_id}", "starred_url": "https://api.github.com/users/oinopion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oinopion/subscriptions", "organizations_url": "https://api.github.com/users/oinopion/orgs", "repos_url": "https://api.github.com/users/oinopion/repos", "events_url": "https://api.github.com/users/oinopion/events{/privacy}", "received_events_url": "https://api.github.com/users/oinopion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-20T17:14:43Z", "updated_at": "2017-11-05T16:02:33Z", "closed_at": "2017-11-05T16:02:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've noticed that `changeset` method on versions returns empty dict in certain cases involving flushing. \n\nTo reproduce:\n- Create new versioned object and add it to session\n- Flush session with the newly created object\n- Update the object\n- Commit the session\n\nAfter that, asking for new object's `versions[0].changeset` returns empty dict, instead of all attributes set on the object, and version object has operation type of update, not insert (this is the main problem IMHO).\n\nHere's a reduced example:\nhttps://gist.github.com/oinopion/ac2c232a1777632a0d06d1fbe7018a7d\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/131", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/131/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/131/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/131", "id": 141897043, "node_id": "MDU6SXNzdWUxNDE4OTcwNDM=", "number": 131, "title": "Memory leaks with UnitOfWork instances", "user": {"login": "quantus", "id": 671419, "node_id": "MDQ6VXNlcjY3MTQxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/671419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantus", "html_url": "https://github.com/quantus", "followers_url": "https://api.github.com/users/quantus/followers", "following_url": "https://api.github.com/users/quantus/following{/other_user}", "gists_url": "https://api.github.com/users/quantus/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantus/subscriptions", "organizations_url": "https://api.github.com/users/quantus/orgs", "repos_url": "https://api.github.com/users/quantus/repos", "events_url": "https://api.github.com/users/quantus/events{/privacy}", "received_events_url": "https://api.github.com/users/quantus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-18T15:23:37Z", "updated_at": "2017-01-31T02:33:35Z", "closed_at": "2016-03-20T14:53:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Continuum can leak `UnitOfWork` instances stored in the `VersioningManager`. First of all the items are not removed from the dictionary in function `VersioningManager.clear`. This is simple to fix by adding line `del self.units_of_work[conn]`.\n\nOther issue is that when using continuum with flask-sqlalchemy the function `VersioningManager.clear` gets called with `SignallingSession` after the transaction commit phase is completed. `VersioningManager` uses connections as keys to find the active `UnitOfWork` instance from `unit_of_works` dictionary and when `SignallingSession`'s bind value is an `Engine` instead of `Connection` the manager fails to find the right unit of work instance. Thus the unit of work instance never gets removed from the dictionary even when the del statement is added as above.\n\nThe second issue doesn't happen when the `Session` is created with a `Connection` as a bind value, but this isn't possible when using flask-sqlalchemy.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/127", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/127/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/127/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/127", "id": 133181885, "node_id": "MDU6SXNzdWUxMzMxODE4ODU=", "number": 127, "title": "use_property_mod_tracking always set when using sync_trigger even when no not using the plugin", "user": {"login": "danielknell", "id": 229004, "node_id": "MDQ6VXNlcjIyOTAwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/229004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielknell", "html_url": "https://github.com/danielknell", "followers_url": "https://api.github.com/users/danielknell/followers", "following_url": "https://api.github.com/users/danielknell/following{/other_user}", "gists_url": "https://api.github.com/users/danielknell/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielknell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielknell/subscriptions", "organizations_url": "https://api.github.com/users/danielknell/orgs", "repos_url": "https://api.github.com/users/danielknell/repos", "events_url": "https://api.github.com/users/danielknell/events{/privacy}", "received_events_url": "https://api.github.com/users/danielknell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-12T08:11:06Z", "updated_at": "2017-01-03T15:07:34Z", "closed_at": "2017-01-03T15:07:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "use_property_mod_tracking is always set when using sync_trigger even when no not using the plugin:\n\nrelevant lines in the code are:\n\nhttps://github.com/kvesteri/sqlalchemy-continuum/blob/c2cd53a5db21d02dda4ee362493af1411111bfd2/sqlalchemy_continuum/dialects/postgresql.py#L492\n\nhttps://github.com/kvesteri/sqlalchemy-continuum/blob/c2cd53a5db21d02dda4ee362493af1411111bfd2/sqlalchemy_continuum/dialects/postgresql.py#L512\n\nthis causes the triggers to fail with \"column \"foo_mod\" does not exist\" errors when you dont have the plugin enabled.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/111", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/111/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/111/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/111", "id": 112300251, "node_id": "MDU6SXNzdWUxMTIzMDAyNTE=", "number": 111, "title": "New version not created when only relationships changed", "user": {"login": "paj28", "id": 1894877, "node_id": "MDQ6VXNlcjE4OTQ4Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1894877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paj28", "html_url": "https://github.com/paj28", "followers_url": "https://api.github.com/users/paj28/followers", "following_url": "https://api.github.com/users/paj28/following{/other_user}", "gists_url": "https://api.github.com/users/paj28/gists{/gist_id}", "starred_url": "https://api.github.com/users/paj28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paj28/subscriptions", "organizations_url": "https://api.github.com/users/paj28/orgs", "repos_url": "https://api.github.com/users/paj28/repos", "events_url": "https://api.github.com/users/paj28/events{/privacy}", "received_events_url": "https://api.github.com/users/paj28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-20T06:57:10Z", "updated_at": "2015-10-20T07:33:17Z", "closed_at": "2015-10-20T07:33:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When we have an object, with a 1:M relationship, e.g. Order -> OrderItem, if there is a change to Order where only a relationship is changed, it does not generate a new version on the parent table. I have attached a minimal test case, which fails with both the latest release and latest github version. Python 2.7 on Ubuntu 14.04 with SQLAlchemy 1.0.8.\n\nhttp://dpaste.com/3754V4C\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/107", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/107/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/107/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/107", "id": 105893799, "node_id": "MDU6SXNzdWUxMDU4OTM3OTk=", "number": 107, "title": "user_cls primary key different from id causes error", "user": {"login": "avilaton", "id": 2209022, "node_id": "MDQ6VXNlcjIyMDkwMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2209022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avilaton", "html_url": "https://github.com/avilaton", "followers_url": "https://api.github.com/users/avilaton/followers", "following_url": "https://api.github.com/users/avilaton/following{/other_user}", "gists_url": "https://api.github.com/users/avilaton/gists{/gist_id}", "starred_url": "https://api.github.com/users/avilaton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avilaton/subscriptions", "organizations_url": "https://api.github.com/users/avilaton/orgs", "repos_url": "https://api.github.com/users/avilaton/repos", "events_url": "https://api.github.com/users/avilaton/events{/privacy}", "received_events_url": "https://api.github.com/users/avilaton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-10T20:43:13Z", "updated_at": "2015-09-27T08:40:40Z", "closed_at": "2015-09-27T08:40:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \n\nI tryed versioning a single table in a project using flask and I got an error \n\n```\nsqlalchemy.exc.NoReferencedColumnError: Could not initialize target column for ForeignKey 'users.id' on table 'transaction': table 'users' has no column named 'id'\n```\n\nwhere my users table has the following shape\n\n```\nclass User(db.Model):\n    __tablename__ = \"users\"\n    user_id = db.Column('user_id', db.Integer, primary_key=True)\n    password_hash = db.Column(db.String(128))\n    email = db.Column('email',db.String(50),unique=True , index=True)\n    registered_on = db.Column(db.DateTime(), default=datetime.utcnow)\n```\n\nI tryed feeding the FlaskPlugin with a factory that would return the correct value but that did not work.\nI guess it has to do with this line in the code\nhttps://github.com/kvesteri/sqlalchemy-continuum/blob/master/sqlalchemy_continuum/transaction.py#L150\nto which I will submit a PR. \n\nHere is the full stack trace:\n\n```\nTraceback (most recent call last):\n  File \"manage.py\", line 12, in <module>\n    from app.models import *\n  File \"/home/gavila/tonTrabajo/google-transit/develop/gtfseditor/app/models.py\", line 349, in <module>\n    sa.orm.configure_mappers()\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 2736, in configure_mappers\n    Mapper.dispatch._for_class(Mapper).after_configured()\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/event/attr.py\", line 218, in __call__\n    fn(*args, **kw)\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/events.py\", line 550, in wrap\n    fn(*arg, **kw)\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy_continuum/builder.py\", line 171, in configure_versioned_classes\n    self.build_relationships(pending_copy)\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy_continuum/builder.py\", line 107, in build_relationships\n    for prop in sa.inspect(cls).iterate_properties:\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 1819, in iterate_properties\n    configure_mappers()\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 2721, in configure_mappers\n    mapper._post_configure_properties()\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 1710, in _post_configure_properties\n    prop.init()\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/interfaces.py\", line 183, in init\n    self.do_init()\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py\", line 1617, in do_init\n    self._setup_join_conditions()\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py\", line 1692, in _setup_join_conditions\n    can_be_synced_fn=self._columns_are_mapped\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py\", line 1960, in __init__\n    self._determine_joins()\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/orm/relationships.py\", line 2043, in _determine_joins\n    consider_as_foreign_keys=consider_as_foreign_keys\n  File \"<string>\", line 2, in join_condition\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/sql/selectable.py\", line 824, in _join_condition\n    a, a_subset, b, consider_as_foreign_keys)\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/sql/selectable.py\", line 879, in _joincond_scan_left_right\n    col = fk.get_referent(b)\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 1644, in get_referent\n    return table.corresponding_column(self.column)\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 747, in __get__\n    obj.__dict__[self.__name__] = result = self.fget(obj)\n  File \"/home/gavila/.virtualenvs/gtfs/local/lib/python2.7/site-packages/sqlalchemy/sql/schema.py\", line 1795, in column\n    tablekey, colname)\nsqlalchemy.exc.NoReferencedColumnError: Could not initialize target column for ForeignKey 'users.id' on table 'transaction': table 'users' has no column named 'id'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/105", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/105/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/105/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/105", "id": 104927019, "node_id": "MDU6SXNzdWUxMDQ5MjcwMTk=", "number": 105, "title": "sqlalchemy.exc.InvalidRequestError: Implicitly combining column(...) in joined table inheritance scenario", "user": {"login": "piotr-dobrogost", "id": 92239, "node_id": "MDQ6VXNlcjkyMjM5", "avatar_url": "https://avatars2.githubusercontent.com/u/92239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piotr-dobrogost", "html_url": "https://github.com/piotr-dobrogost", "followers_url": "https://api.github.com/users/piotr-dobrogost/followers", "following_url": "https://api.github.com/users/piotr-dobrogost/following{/other_user}", "gists_url": "https://api.github.com/users/piotr-dobrogost/gists{/gist_id}", "starred_url": "https://api.github.com/users/piotr-dobrogost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piotr-dobrogost/subscriptions", "organizations_url": "https://api.github.com/users/piotr-dobrogost/orgs", "repos_url": "https://api.github.com/users/piotr-dobrogost/repos", "events_url": "https://api.github.com/users/piotr-dobrogost/events{/privacy}", "received_events_url": "https://api.github.com/users/piotr-dobrogost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-04T16:47:33Z", "updated_at": "2015-09-27T08:37:09Z", "closed_at": "2015-09-27T08:37:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I tried to version tables from Kotti project I [encountered](https://github.com/Kotti/Kotti/issues/265#issuecomment-137053295) `sqlalchemy.exc.InvalidRequestError: Implicitly combining column(...)` error. Below is a test case showing the problem and a traceback. When turning debug logs on, the last few entries before exception are as follows:\n\n> INFO:sqlalchemy.orm.mapper.Mapper:(DocumentVersion|documents_version) _configure_property(operation_type, ColumnProperty)\n> INFO:sqlalchemy.orm.mapper.Mapper:(DocumentVersion|documents_version) _configure_property(transaction_id, ColumnProperty)\n> INFO:sqlalchemy.orm.mapper.Mapper:(DocumentVersion|documents_version) _configure_property(end_transaction_id, ColumnProperty)\n> INFO:sqlalchemy.orm.mapper.Mapper:(DocumentVersion|documents_version) _configure_property(id, ColumnProperty)\n> INFO:sqlalchemy.orm.mapper.Mapper:(DocumentVersion|documents_version) _configure_property(type, ColumnProperty)\n> INFO:sqlalchemy.orm.mapper.Mapper:(DocumentVersion|documents_version) _configure_property(version_parent, RelationshipProperty)\n> INFO:sqlalchemy.orm.mapper.Mapper:(DocumentVersion|documents_version) _configure_property(transaction, RelationshipProperty)\n> INFO:sqlalchemy.orm.mapper.Mapper:(DocumentVersion|documents_version) _configure_property(transaction_id, Column)\n\nReading [I\u2019m getting a warning or error about \u201cImplicitly combining column X under attribute Y\u201d](http://docs.sqlalchemy.org/en/latest/faq/ormconfiguration.html#i-m-getting-a-warning-or-error-about-implicitly-combining-column-x-under-attribute-y) entry in the SQLAlchemy's FAQ I get impression that `transaction_id` property should only be configured as `ColumnProperty` not `Column`. The fact it's the only property in this model which is configured twice, each time with different type looks suspicious.\n\nThank you in advance for any help.\n\nSQLAlchemy-Continuum 1.2.0, SQLAlchemy 1.0.8\n\n``` python\nfrom sqlalchemy import Column\nfrom sqlalchemy import ForeignKey\nfrom sqlalchemy import Integer\nfrom sqlalchemy import String\nfrom sqlalchemy import UnicodeText\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.ext.declarative import declared_attr\nfrom sqlalchemy.orm import configure_mappers\nfrom sqlalchemy.util import classproperty\n\nfrom sqlalchemy_continuum import make_versioned\n\nmake_versioned(user_cls=None)\n\n\nclass MyBase(object):\n    @declared_attr\n    def __tablename__(cls):\n        return '{0}s'.format(cls.__name__.lower())\n\n\nBase = declarative_base(cls=MyBase)\n\n\nclass Node(Base):\n    __versioned__ = {}\n\n    __mapper_args__ = dict(\n        polymorphic_on='type',\n        polymorphic_identity='node',\n        with_polymorphic='*',\n        )\n\n    id = Column(Integer(), primary_key=True)\n    type = Column(String(30), nullable=False)\n\n\nclass Content(Node):\n    __versioned__ = {}\n\n    @classproperty\n    def __mapper_args__(cls):\n        return dict(polymorphic_identity=cls.__name__.lower())\n\n    id = Column(Integer, ForeignKey('nodes.id'), primary_key=True)\n    description = Column(UnicodeText())\n\n\nclass Document(Content):\n    __versioned__ = {}\n\n    id = Column(Integer(), ForeignKey('contents.id'), primary_key=True)\n    body = Column(UnicodeText())\n\n\nconfigure_mappers()\n```\n\n``` python\n/home/piotr/projects/kotti-versioning/env/bin/python /home/piotr/projects/kotti-versioning/test.py\nTraceback (most recent call last):\n  File \"/home/piotr/projects/kotti-versioning/test.py\", line 56, in <module>\n    configure_mappers()\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 2736, in configure_mappers\n    Mapper.dispatch._for_class(Mapper).after_configured()\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/event/attr.py\", line 218, in __call__\n    fn(*args, **kw)\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/orm/events.py\", line 550, in wrap\n    fn(*arg, **kw)\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy_continuum/builder.py\", line 165, in configure_versioned_classes\n    self.build_models()\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy_continuum/builder.py\", line 87, in build_models\n    self.manager.transaction_cls\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy_continuum/model_builder.py\", line 263, in __call__\n    self.version_class = self.build_model(table)\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy_continuum/model_builder.py\", line 250, in build_model\n    args\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/ext/declarative/api.py\", line 55, in __init__\n    _as_declarative(cls, classname, cls.__dict__)\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 88, in _as_declarative\n    _MapperConfig.setup_mapping(cls, classname, dict_)\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 103, in setup_mapping\n    cfg_cls(cls_, classname, dict_)\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 135, in __init__\n    self._early_mapping()\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 138, in _early_mapping\n    self.map()\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/ext/declarative/base.py\", line 529, in map\n    **self.mapper_args\n  File \"<string>\", line 2, in mapper\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 627, in __init__\n    self._configure_properties()\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 1318, in _configure_properties\n    setparent=True)\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 1525, in _configure_property\n    prop = self._property_from_column(key, prop)\n  File \"/home/piotr/projects/kotti-versioning/env/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 1650, in _property_from_column\n    raise sa_exc.InvalidRequestError(msg)\nsqlalchemy.exc.InvalidRequestError: Implicitly combining column contents_version.transaction_id with column nodes_version.transaction_id under attribute 'transaction_id'.  Please configure one or more attributes for these same-named columns explicitly.\n\nProcess finished with exit code 1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/104", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/104/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/104/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/104", "id": 104708383, "node_id": "MDU6SXNzdWUxMDQ3MDgzODM=", "number": 104, "title": "Over 300 failed tests?", "user": {"login": "piotr-dobrogost", "id": 92239, "node_id": "MDQ6VXNlcjkyMjM5", "avatar_url": "https://avatars2.githubusercontent.com/u/92239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piotr-dobrogost", "html_url": "https://github.com/piotr-dobrogost", "followers_url": "https://api.github.com/users/piotr-dobrogost/followers", "following_url": "https://api.github.com/users/piotr-dobrogost/following{/other_user}", "gists_url": "https://api.github.com/users/piotr-dobrogost/gists{/gist_id}", "starred_url": "https://api.github.com/users/piotr-dobrogost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piotr-dobrogost/subscriptions", "organizations_url": "https://api.github.com/users/piotr-dobrogost/orgs", "repos_url": "https://api.github.com/users/piotr-dobrogost/repos", "events_url": "https://api.github.com/users/piotr-dobrogost/events{/privacy}", "received_events_url": "https://api.github.com/users/piotr-dobrogost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-03T14:32:08Z", "updated_at": "2016-01-10T14:42:46Z", "closed_at": "2016-01-10T14:42:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm posting here as it seems project does not have a mailing list.\n\nI wanted to try out sa-continuum and I started by running tests with `py.test tests`. As a result 319 tests failed, 291 passed, 12 was skipped and 5 ended with an error. This is with SQLAlchemy-Continuum 1.2.0, SQLAlchemy 1.0.8 and SQLAlchemy-Utils 0.30.17.\n\nAre those failed tests result of me not running tests properly?\nOutput from py.test with the first 10 failures is at https://gist.github.com/piotr-dobrogost/4140267dc9dd654f5560\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/102", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/102/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/102/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/102", "id": 102846429, "node_id": "MDU6SXNzdWUxMDI4NDY0Mjk=", "number": 102, "title": "Revert does not remove items in relationship", "user": {"login": "sdorazio", "id": 4570951, "node_id": "MDQ6VXNlcjQ1NzA5NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4570951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdorazio", "html_url": "https://github.com/sdorazio", "followers_url": "https://api.github.com/users/sdorazio/followers", "following_url": "https://api.github.com/users/sdorazio/following{/other_user}", "gists_url": "https://api.github.com/users/sdorazio/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdorazio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdorazio/subscriptions", "organizations_url": "https://api.github.com/users/sdorazio/orgs", "repos_url": "https://api.github.com/users/sdorazio/repos", "events_url": "https://api.github.com/users/sdorazio/events{/privacy}", "received_events_url": "https://api.github.com/users/sdorazio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-24T17:13:40Z", "updated_at": "2015-09-27T13:26:01Z", "closed_at": "2015-09-27T13:26:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, reverting an item does not restore a one-to-many relationship to the previous state. If an item was added, calling `version.revert()` does not remove items that were added since the specified version.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/99", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/99/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/99/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/99", "id": 98357385, "node_id": "MDU6SXNzdWU5ODM1NzM4NQ==", "number": 99, "title": "ImportError: cannot import name ExpressionParser", "user": {"login": "gaganpreet", "id": 815873, "node_id": "MDQ6VXNlcjgxNTg3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/815873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaganpreet", "html_url": "https://github.com/gaganpreet", "followers_url": "https://api.github.com/users/gaganpreet/followers", "following_url": "https://api.github.com/users/gaganpreet/following{/other_user}", "gists_url": "https://api.github.com/users/gaganpreet/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaganpreet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaganpreet/subscriptions", "organizations_url": "https://api.github.com/users/gaganpreet/orgs", "repos_url": "https://api.github.com/users/gaganpreet/repos", "events_url": "https://api.github.com/users/gaganpreet/events{/privacy}", "received_events_url": "https://api.github.com/users/gaganpreet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-31T09:58:51Z", "updated_at": "2015-07-31T12:02:27Z", "closed_at": "2015-07-31T12:02:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current version of SQLAlchemy Continuum on PyPI still depends on the removed ExpressionParser class from sqlalchemy-utils. Any chance of a new release on PyPI for this project as well?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/92", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/92/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/92/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/92", "id": 57598616, "node_id": "MDU6SXNzdWU1NzU5ODYxNg==", "number": 92, "title": "__str__ inheritance", "user": {"login": "onlygecko", "id": 3233376, "node_id": "MDQ6VXNlcjMyMzMzNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3233376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onlygecko", "html_url": "https://github.com/onlygecko", "followers_url": "https://api.github.com/users/onlygecko/followers", "following_url": "https://api.github.com/users/onlygecko/following{/other_user}", "gists_url": "https://api.github.com/users/onlygecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/onlygecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onlygecko/subscriptions", "organizations_url": "https://api.github.com/users/onlygecko/orgs", "repos_url": "https://api.github.com/users/onlygecko/repos", "events_url": "https://api.github.com/users/onlygecko/events{/privacy}", "received_events_url": "https://api.github.com/users/onlygecko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-13T13:30:09Z", "updated_at": "2015-02-16T11:01:11Z", "closed_at": "2015-02-16T11:01:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nwhat am I doing wrong that the `__str__` method of my ModelClass is no inherited to the ModelVersion class? Or is this the issue discussed in #54?\n\nWhat options do I have?\n\n``` python\n\nclass Article(Base):\n\n    __tablename__ = 'articles'\n    __versioned__ = {}\n    id = sa.Column(sa.Integer, sa.Sequence('article_seq'), primary_key=True)\n    name = sa.Column(sa.Unicode(255), nullable=False)\n\n    __str__(self):\n        return self.name\n```\n\nThanks in advance for your replies. :-)\nPeter\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/80", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/80/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/80/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/80", "id": 48271580, "node_id": "MDU6SXNzdWU0ODI3MTU4MA==", "number": 80, "title": "Anyway to make certain a Model has a version?", "user": {"login": "aphillipo", "id": 52347, "node_id": "MDQ6VXNlcjUyMzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/52347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aphillipo", "html_url": "https://github.com/aphillipo", "followers_url": "https://api.github.com/users/aphillipo/followers", "following_url": "https://api.github.com/users/aphillipo/following{/other_user}", "gists_url": "https://api.github.com/users/aphillipo/gists{/gist_id}", "starred_url": "https://api.github.com/users/aphillipo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aphillipo/subscriptions", "organizations_url": "https://api.github.com/users/aphillipo/orgs", "repos_url": "https://api.github.com/users/aphillipo/repos", "events_url": "https://api.github.com/users/aphillipo/events{/privacy}", "received_events_url": "https://api.github.com/users/aphillipo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-10T14:48:16Z", "updated_at": "2014-11-11T11:53:43Z", "closed_at": "2014-11-11T11:53:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I have residents who were once not versioned but are now versioned (thanks!).  Well, some of them are and some aren't.  And I need all of them to be versioned.  Is it possible to force a version to be created even if there are no changes?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/77", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/77/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/77/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/77", "id": 47531650, "node_id": "MDU6SXNzdWU0NzUzMTY1MA==", "number": 77, "title": "Problems on working with sa-continuum", "user": {"login": "onlygecko", "id": 3233376, "node_id": "MDQ6VXNlcjMyMzMzNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3233376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onlygecko", "html_url": "https://github.com/onlygecko", "followers_url": "https://api.github.com/users/onlygecko/followers", "following_url": "https://api.github.com/users/onlygecko/following{/other_user}", "gists_url": "https://api.github.com/users/onlygecko/gists{/gist_id}", "starred_url": "https://api.github.com/users/onlygecko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onlygecko/subscriptions", "organizations_url": "https://api.github.com/users/onlygecko/orgs", "repos_url": "https://api.github.com/users/onlygecko/repos", "events_url": "https://api.github.com/users/onlygecko/events{/privacy}", "received_events_url": "https://api.github.com/users/onlygecko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-02T09:40:33Z", "updated_at": "2015-02-10T07:28:40Z", "closed_at": "2015-02-10T07:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nthe example on the documentation page seems to be easy to run, but somehow I'm not getting it. Could someone show me, what I'm doing wrong? \n\n``` python\nimport sqlalchemy as sa\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlalchemy import create_engine\nfrom sqlalchemy_continuum import make_versioned\n\nengine = create_engine('sqlite:////tmp/test.sql', echo=True)\nBase = declarative_base()\n\nmake_versioned()\n\nclass Article(Base):\n    __versioned__ = {}\n    __tablename__ = 'article'\n\n    id = sa.Column(sa.Integer, primary_key=True, autoincrement=True)\n    name = sa.Column(sa.Unicode(255))\n    content = sa.Column(sa.UnicodeText)\n\n# after you have defined all your models, call configure_mappers:\nsa.orm.configure_mappers()\n\nBase.metadata.create_all(bind=engine)\n\nSession = sessionmaker(bind=engine)\nsession = Session()\n\narticle = Article(name=u'Some article')\nsession.add(article)\nsession.commit()\n```\n\nThe error I'm getting ist the following: \n`sqlalchemy_continuum.exc.ImproperlyConfigured: Could not build relationship between Transaction and User. User was not found in declarative class registry. Either configure VersioningManager to use different user class or disable this relationship`\n\nThanks for your anwsers in advance. Peter\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/75", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/75/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/75/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/75", "id": 46503619, "node_id": "MDU6SXNzdWU0NjUwMzYxOQ==", "number": 75, "title": "Flask-Plugin makes stupid assumptions", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-22T12:25:58Z", "updated_at": "2014-11-11T10:25:36Z", "closed_at": "2014-11-11T10:25:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It assumes current_user comes from flask.ext.login.current_user. This is not always the case\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/65", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/65/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/65/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/65", "id": 36282338, "node_id": "MDU6SXNzdWUzNjI4MjMzOA==", "number": 65, "title": "Problem with many-to-many relation when insert to relation in same transaction", "user": {"login": "oceanio", "id": 2815280, "node_id": "MDQ6VXNlcjI4MTUyODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2815280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oceanio", "html_url": "https://github.com/oceanio", "followers_url": "https://api.github.com/users/oceanio/followers", "following_url": "https://api.github.com/users/oceanio/following{/other_user}", "gists_url": "https://api.github.com/users/oceanio/gists{/gist_id}", "starred_url": "https://api.github.com/users/oceanio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oceanio/subscriptions", "organizations_url": "https://api.github.com/users/oceanio/orgs", "repos_url": "https://api.github.com/users/oceanio/repos", "events_url": "https://api.github.com/users/oceanio/events{/privacy}", "received_events_url": "https://api.github.com/users/oceanio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-23T11:30:41Z", "updated_at": "2014-06-24T09:34:30Z", "closed_at": "2014-06-24T09:27:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some problem when dealing with many-to-many relationship. I wonder its an issue or its my own problem. here is my test code. https://gist.github.com/oceanio/44463f57613833f07670#file-test-py\n\nwhen the tags and articles are commit at the same transaction, i got the following errors:\n\n``` python\nTraceback (most recent call last):\n  File \"test.py\", line 62, in <module>\n    session.commit()\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 765, in commit\n    self.transaction.commit()\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 370, in commit\n    self._prepare_impl()\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 350, in _prepare_impl\n    self.session.flush()\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 1903, in flush\n    self._flush(objects)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 2021, in _flush\n    transaction.rollback(_capture_exception=True)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/util/langhelpers.py\", line 57, in __exit__\n    compat.reraise(exc_type, exc_value, exc_tb)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 1989, in _flush\n    self.dispatch.after_flush(self, flush_context)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/event/attr.py\", line 218, in __call__\n    fn(*args, **kw)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy_continuum/manager.py\", line 330, in after_flush\n    uow.process_after_flush(session)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy_continuum/unit_of_work.py\", line 78, in process_after_flush\n    self.make_versions(session)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy_continuum/unit_of_work.py\", line 270, in make_versions\n    self.create_association_versions(session)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy_continuum/unit_of_work.py\", line 257, in create_association_versions\n    session.execute(stmt)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 978, in execute\n    clause, params or {})\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 720, in execute\n    return meth(self, multiparams, params)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/sql/elements.py\", line 317, in _execute_on_connection\n    return connection._execute_clauseelement(self, multiparams, params)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 817, in _execute_clauseelement\n    compiled_sql, distilled_params\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 947, in _execute_context\n    context)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 1108, in _handle_dbapi_exception\n    exc_info\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/util/compat.py\", line 185, in raise_from_cause\n    reraise(type(exception), exception, tb=exc_tb)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/engine/base.py\", line 940, in _execute_context\n    context)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/sqlalchemy/engine/default.py\", line 435, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 205, in execute\n    self.errorhandler(self, exc, value)\n  File \"/Users/euniceyang/anaconda/envs/starlinks/lib/python2.7/site-packages/MySQLdb/connections.py\", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nsqlalchemy.exc.IntegrityError: (IntegrityError) (1062, \"Duplicate entry '1' for key 'PRIMARY'\") 'INSERT INTO article_tag_rel_version (tag_id, article_id, transaction_id, operation_type) VALUES (%s, %s, %s, %s)' (2L, 1L, 1L, 0)\n```\n\ni hope i can get some help, thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/62", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/62/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/62/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/62", "id": 33374991, "node_id": "MDU6SXNzdWUzMzM3NDk5MQ==", "number": 62, "title": "Version sessions not closed after parent session commits", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185717, "node_id": "MDU6TGFiZWw0MTE4NTcxNw==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-05-13T07:39:01Z", "updated_at": "2014-05-15T09:41:33Z", "closed_at": "2014-05-15T09:41:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/59", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/59/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/59/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/59", "id": 33284890, "node_id": "MDU6SXNzdWUzMzI4NDg5MA==", "number": 59, "title": "Add repr for Transaction class", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185719, "node_id": "MDU6TGFiZWw0MTE4NTcxOQ==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-05-12T07:10:54Z", "updated_at": "2014-05-12T08:32:14Z", "closed_at": "2014-05-12T08:32:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/57", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/57/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/57/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/57", "id": 33013203, "node_id": "MDU6SXNzdWUzMzAxMzIwMw==", "number": 57, "title": "history_class function nowhere", "user": {"login": "karih", "id": 144805, "node_id": "MDQ6VXNlcjE0NDgwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/144805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karih", "html_url": "https://github.com/karih", "followers_url": "https://api.github.com/users/karih/followers", "following_url": "https://api.github.com/users/karih/following{/other_user}", "gists_url": "https://api.github.com/users/karih/gists{/gist_id}", "starred_url": "https://api.github.com/users/karih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karih/subscriptions", "organizations_url": "https://api.github.com/users/karih/orgs", "repos_url": "https://api.github.com/users/karih/repos", "events_url": "https://api.github.com/users/karih/events{/privacy}", "received_events_url": "https://api.github.com/users/karih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-07T18:48:45Z", "updated_at": "2014-05-08T08:05:21Z", "closed_at": "2014-05-08T08:05:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nIn the docs (http://sqlalchemy-continuum.readthedocs.org/en/latest/intro.html) there is the statement: \n\n```\nfrom sqlalchemy_continuum import history_class, parent_class\n```\n\nBut this gives an import error. Furthermore, doing git grep history_class on the current master branch gives no results outside comments and documentation. Surely this is not the way it's supposed to be.  Furthermore, I can't seem to realize how to get the history class for direct querying.\n\nThanks,\nK\u00e1ri\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/56", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/56/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/56/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/56", "id": 32857914, "node_id": "MDU6SXNzdWUzMjg1NzkxNA==", "number": 56, "title": "Bad import of {get_}declarative_base?", "user": {"login": "seth-p", "id": 7441788, "node_id": "MDQ6VXNlcjc0NDE3ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seth-p", "html_url": "https://github.com/seth-p", "followers_url": "https://api.github.com/users/seth-p/followers", "following_url": "https://api.github.com/users/seth-p/following{/other_user}", "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}", "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions", "organizations_url": "https://api.github.com/users/seth-p/orgs", "repos_url": "https://api.github.com/users/seth-p/repos", "events_url": "https://api.github.com/users/seth-p/events{/privacy}", "received_events_url": "https://api.github.com/users/seth-p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-06T00:28:59Z", "updated_at": "2014-05-06T18:45:44Z", "closed_at": "2014-05-06T18:45:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm sure I'm missing something, but when I try to use sqlalchemy-continuum I get an error message \"ImportError: cannot import name 'declarative_base'. Problem seems to be that line 8 tries to import declarative_base from sqlalchemy_utils.functions, but sqlalchemy-utils doesn't have declarative_base (though it does have get_declarative_base). I'm using sqlalchemy-continuum 0.10.3 and sqlalchemy-utils 0.25.4.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/55", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/55/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/55/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/55", "id": 32614414, "node_id": "MDU6SXNzdWUzMjYxNDQxNA==", "number": 55, "title": "Use versioning for controlling workflow changes?", "user": {"login": "aphillipo", "id": 52347, "node_id": "MDQ6VXNlcjUyMzQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/52347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aphillipo", "html_url": "https://github.com/aphillipo", "followers_url": "https://api.github.com/users/aphillipo/followers", "following_url": "https://api.github.com/users/aphillipo/following{/other_user}", "gists_url": "https://api.github.com/users/aphillipo/gists{/gist_id}", "starred_url": "https://api.github.com/users/aphillipo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aphillipo/subscriptions", "organizations_url": "https://api.github.com/users/aphillipo/orgs", "repos_url": "https://api.github.com/users/aphillipo/repos", "events_url": "https://api.github.com/users/aphillipo/events{/privacy}", "received_events_url": "https://api.github.com/users/aphillipo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-01T13:24:56Z", "updated_at": "2015-02-03T15:29:07Z", "closed_at": "2015-02-03T15:29:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I have a site that would benefit from your amazing plugin!\n\nIs it possible to do the following: \n\n1) Have a non versioned current_version field on models that selects a version in the past for the live site.  This current_version does not change or cause model version increments when it is changed by the application.\n\n2) When a change is made to the database (in my case a list of residents) these changes are added to a list for the site's administrators to look over.  Changes are per user, but this should be fairly self explanatory - there are only two tables a user can change as things stand and they are both changed from one form.\n\n3) If a version is rejected we could add the version number and the reason to another table. \n\n4) If the version is approved we increment current version to that one and the live application sees the new information.\n\n5) This obviously allows us to easily do previewing of changes by simply passing the version number we want to see to our view.\n\nAdditionally, are there any problems associated with having master/slave replication and possibly in the far far distant future multiple sharded databases.  Data for each Resident would never span shards.\n\nHope this is the place to ask this sort of question; if not please close and suggest where to ask it!  Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/53", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/53/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/53/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/53", "id": 32248169, "node_id": "MDU6SXNzdWUzMjI0ODE2OQ==", "number": 53, "title": "Transaction.user column causing problems", "user": {"login": "karih", "id": 144805, "node_id": "MDQ6VXNlcjE0NDgwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/144805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karih", "html_url": "https://github.com/karih", "followers_url": "https://api.github.com/users/karih/followers", "following_url": "https://api.github.com/users/karih/following{/other_user}", "gists_url": "https://api.github.com/users/karih/gists{/gist_id}", "starred_url": "https://api.github.com/users/karih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karih/subscriptions", "organizations_url": "https://api.github.com/users/karih/orgs", "repos_url": "https://api.github.com/users/karih/repos", "events_url": "https://api.github.com/users/karih/events{/privacy}", "received_events_url": "https://api.github.com/users/karih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-25T16:48:13Z", "updated_at": "2014-04-29T12:53:10Z", "closed_at": "2014-04-29T12:53:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just upgraded to the most recent version (this repos HEAD) and now I'm getting an error which seemingly has to do with the user transaction table \"automagically\" having a user column that has a broken relationship with my User table/model (probably due to the fact that it's not called \"users\"). I'm wondering if this is expected behaviour and I need to explicitly disable this automatic column generation, or if there is some error somewhere.  To avoid this column being generated, I specified:\n\n```\nclass Transaction(Base, TransactionBase): \n    __tablename__ = 'transaction'\n    __manager__ = VersioningManager\n\nmake_versioned(manager=VersioningManager(transaction_cls=Transaction))\n```\n\ninstead of the simple `make_versioned()` clause I had before.\n\nHere is the original stack trace:\n\n```\nNoForeignKeysError                        Traceback (most recent call last)\n/home/kari/repos/SITE/createdb.py in <module>()\n----> 1 from APP import db_create_all\n      2 db_create_all()\n\n/home/kari/repos/SITE/APP/__init__.pyc in <module>()\n    120 app.register_module(auth)\n    121 \n--> 122 sa.orm.configure_mappers()\n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/mapper.pyc in configure_mappers()\n   2573     finally:\n   2574         _CONFIGURE_MUTEX.release()\n-> 2575     Mapper.dispatch(Mapper).after_configured()\n   2576 \n   2577 \n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/event/attr.pyc in __call__(self, *args, **kw)\n    216 \n    217         for fn in self.parent_listeners:\n--> 218             fn(*args, **kw)\n    219 \n    220     def __len__(self):\n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/events.pyc in wrap(*arg, **kw)\n    529                     arg[target_index] = arg[target_index].obj()\n    530                 if not retval:\n--> 531                     fn(*arg, **kw)\n    532                     return interfaces.EXT_CONTINUE\n    533                 else:\n\n/home/kari/.virtualenvs/ENV/src/sqlalchemy-continuum/sqlalchemy_continuum/builder.pyc in configure_versioned_classes(self)\n    135         pending_copy = copy(self.manager.pending_classes)\n    136         self.manager.pending_classes = []\n--> 137         self.build_relationships(pending_copy)\n    138 \n    139         for cls in pending_copy:\n\n/home/kari/.virtualenvs/ENV/src/sqlalchemy-continuum/sqlalchemy_continuum/builder.pyc in build_relationships(self, version_classes)\n     91                 continue\n     92 \n---> 93             for prop in sa.inspect(cls).iterate_properties:\n     94                 if prop.key == 'versions':\n     95                     continue\n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/mapper.pyc in iterate_properties(self)\n   1780         \"\"\"return an iterator of all MapperProperty objects.\"\"\"\n   1781         if Mapper._new_mappers:\n-> 1782             configure_mappers()\n   1783         return iter(self._props.values())\n   1784 \n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/mapper.pyc in configure_mappers()\n   2558                 if not mapper.configured:\n   2559                     try:\n-> 2560                         mapper._post_configure_properties()\n   2561                         mapper._expire_memoizations()\n   2562                         mapper.dispatch.mapper_configured(\n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/mapper.pyc in _post_configure_properties(self)\n   1671 \n   1672             if prop.parent is self and not prop._configure_started:\n-> 1673                 prop.init()\n   1674 \n   1675             if prop._configure_finished:\n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/interfaces.pyc in init(self)\n    141         \"\"\"\n    142         self._configure_started = True\n--> 143         self.do_init()\n    144         self._configure_finished = True\n    145 \n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/relationships.pyc in do_init(self)\n   1508         self._check_conflicts()\n   1509         self._process_dependent_arguments()\n-> 1510         self._setup_join_conditions()\n   1511         self._check_cascade_settings(self._cascade)\n   1512         self._post_init()\n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/relationships.pyc in _setup_join_conditions(self)\n   1584                     prop=self,\n   1585                     support_sync=not self.viewonly,\n-> 1586                     can_be_synced_fn=self._columns_are_mapped\n   1587         )\n   1588         self.primaryjoin = jc.deannotated_primaryjoin\n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/relationships.pyc in __init__(self, parent_selectable, child_selectable, parent_local_selectable, child_local_selectable, primaryjoin, secondary, secondaryjoin, parent_equivalents, child_equivalents, consider_as_foreign_keys, local_remote_pairs, remote_side, self_referential, prop, support_sync, can_be_synced_fn)\n   1847         self.support_sync = support_sync\n   1848         self.can_be_synced_fn = can_be_synced_fn\n-> 1849         self._determine_joins()\n   1850         self._annotate_fks()\n   1851         self._annotate_remote()\n\n/home/kari/.virtualenvs/ENV/lib/python2.7/site-packages/sqlalchemy/orm/relationships.pyc in _determine_joins(self)\n   1951                         \"with a ForeignKey or ForeignKeyConstraint, or \"\n   1952                         \"specify a 'primaryjoin' expression.\"\n-> 1953                         % self.prop)\n   1954         except sa_exc.AmbiguousForeignKeysError:\n   1955             if self.secondary is not None:\n\nNoForeignKeysError: Could not determine join condition between parent/child tables on relationship Transaction.user - there are no foreign keys linking these tables.  Ensure that referencing columns are associated with a ForeignKey or ForeignKeyConstraint, or specify a 'primaryjoin' expression.\n```\n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/52", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/52/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/52/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/52", "id": 32087503, "node_id": "MDU6SXNzdWUzMjA4NzUwMw==", "number": 52, "title": "Relation from versioned table to non-versioned one", "user": {"login": "karih", "id": 144805, "node_id": "MDQ6VXNlcjE0NDgwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/144805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karih", "html_url": "https://github.com/karih", "followers_url": "https://api.github.com/users/karih/followers", "following_url": "https://api.github.com/users/karih/following{/other_user}", "gists_url": "https://api.github.com/users/karih/gists{/gist_id}", "starred_url": "https://api.github.com/users/karih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karih/subscriptions", "organizations_url": "https://api.github.com/users/karih/orgs", "repos_url": "https://api.github.com/users/karih/repos", "events_url": "https://api.github.com/users/karih/events{/privacy}", "received_events_url": "https://api.github.com/users/karih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185719, "node_id": "MDU6TGFiZWw0MTE4NTcxOQ==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-23T18:41:00Z", "updated_at": "2014-04-24T11:09:29Z", "closed_at": "2014-04-24T09:47:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Say I have two models:\n\n``` python\nclass User(Base):\n  __tablename__ = 'users'\n\n  id = sa.Column(sa.Integer, primary_key=True)\n  username = sa.Column(sa.Unicode(255))\n\nclass Article(Base):\n  __tablename__ = 'articles'\n  __versioned__ = {}\n\n  id = sa.Column(sa.Integer, primary_key=True)\n  user_id = sa.Column(sa.Integer, sa.ForeignKey('users.id'), nullable=False)\n  user = relationship('User', backref=backref('articles'))\n```\n\nI'm running into the problem that when I do something along the lines of:\n\n``` python\n  article.versions[0].user # does not work\n  article.versions[0].user_id # returns the user id\n```\n\nI see that relationship fields seem to be copied to the history table if the related table is also versioned, and the instructions at http://sqlalchemy-continuum.readthedocs.org/en/latest/version_objects.html#version-relationships work given this assumption. However, I would argue that foreign key relations to non-versioned tables are also useful, in my case for example, it doesn't really make sens to version the users table (it's mostly static and preserving the history of the fields is not useful), but my application doesn't allow for user deletion (only deactivation) so the foreign key would work.\n\nAny tips or ideas? I haven't delved into the codebase so I might be missing something.\n\nThanks,\nK\u00e1ri\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/51", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/51/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/51/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/51", "id": 31892146, "node_id": "MDU6SXNzdWUzMTg5MjE0Ng==", "number": 51, "title": "Mapper arg order_by reflection does not handle expressions correctly", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185717, "node_id": "MDU6TGFiZWw0MTE4NTcxNw==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-21T11:38:17Z", "updated_at": "2014-04-24T13:13:16Z", "closed_at": "2014-04-24T13:13:16Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/50", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/50/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/50/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/50", "id": 31235463, "node_id": "MDU6SXNzdWUzMTIzNTQ2Mw==", "number": 50, "title": "End transaction id not updated for parent tables when using join table inheritance", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185717, "node_id": "MDU6TGFiZWw0MTE4NTcxNw==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-10T11:50:03Z", "updated_at": "2014-04-18T11:20:07Z", "closed_at": "2014-04-18T11:20:07Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/49", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/49/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/49/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/49", "id": 31133976, "node_id": "MDU6SXNzdWUzMTEzMzk3Ng==", "number": 49, "title": "Order versions relation by transaction_id by default", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185719, "node_id": "MDU6TGFiZWw0MTE4NTcxOQ==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-09T07:03:18Z", "updated_at": "2014-04-10T06:53:50Z", "closed_at": "2014-04-10T06:53:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/48", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/48/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/48/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/48", "id": 30916450, "node_id": "MDU6SXNzdWUzMDkxNjQ1MA==", "number": 48, "title": "TypeError raised with 1.0-b1", "user": {"login": "Synforge", "id": 549358, "node_id": "MDQ6VXNlcjU0OTM1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/549358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Synforge", "html_url": "https://github.com/Synforge", "followers_url": "https://api.github.com/users/Synforge/followers", "following_url": "https://api.github.com/users/Synforge/following{/other_user}", "gists_url": "https://api.github.com/users/Synforge/gists{/gist_id}", "starred_url": "https://api.github.com/users/Synforge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Synforge/subscriptions", "organizations_url": "https://api.github.com/users/Synforge/orgs", "repos_url": "https://api.github.com/users/Synforge/repos", "events_url": "https://api.github.com/users/Synforge/events{/privacy}", "received_events_url": "https://api.github.com/users/Synforge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-05T14:12:22Z", "updated_at": "2014-04-07T10:23:32Z", "closed_at": "2014-04-07T10:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I seem to get a TypeError when using the latest version:\n\n`````` python\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1836, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1820, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1403, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"./assetregister/api/__init__.py\", line 39, in decorated\n    return f(*args, **kwargs)\n  File \"./assetregister/api/servers.py\", line 114, in server_edit\n    g.session.commit()\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 765, in commit\n    self.transaction.commit()\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 370, in commit\n    self._prepare_impl()\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 350, in _prepare_impl\n    self.session.flush()\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 1879, in flush\n    self._flush(objects)\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy/orm/session.py\", line 1906, in _flush\n    self.dispatch.before_flush(self, flush_context, objects)\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy/event/attr.py\", line 211, in __call__\n    fn(*args, **kw)\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy_continuum/manager.py\", line 274, in before_flush\n    uow = self.unit_of_work(session)\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy_continuum/manager.py\", line 261, in unit_of_work\n    conn = get_bind(obj)\n  File \"/home/paul/dev/assetregister/env/local/lib/python2.7/site-packages/sqlalchemy_continuum/utils.py\", line 64, in get_bind\n    'This method accepts only Session, Connection and declarative '\nTypeError: This method accepts only Session, Connection and declarative model objects.```\n``````\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/47", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/47/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/47/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/47", "id": 28428949, "node_id": "MDU6SXNzdWUyODQyODk0OQ==", "number": 47, "title": "Column onupdate clause erroneously copied to history table", "user": {"login": "karih", "id": 144805, "node_id": "MDQ6VXNlcjE0NDgwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/144805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karih", "html_url": "https://github.com/karih", "followers_url": "https://api.github.com/users/karih/followers", "following_url": "https://api.github.com/users/karih/following{/other_user}", "gists_url": "https://api.github.com/users/karih/gists{/gist_id}", "starred_url": "https://api.github.com/users/karih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karih/subscriptions", "organizations_url": "https://api.github.com/users/karih/orgs", "repos_url": "https://api.github.com/users/karih/repos", "events_url": "https://api.github.com/users/karih/events{/privacy}", "received_events_url": "https://api.github.com/users/karih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-27T15:46:20Z", "updated_at": "2014-02-27T23:15:50Z", "closed_at": "2014-02-27T19:37:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I have a datetime (or any other column type) column in a table with onupdate= and include this in the history table, the onupdate clause gets erroneously (I'd argue) \"copied\" to the history table.\n\nExample:\n\n```\nclass Article(Base):\n    __versioned__ = {'include' : ['last_update', ]}\n\n    id = sa.Column(sa.Integer, primary_key=True)\n    body = sa.Column(sa.UnicodeText)\n    last_update = sa.Column(sa.DateTime, default=datetime.datetime.utcnow, onupdate=datetime.datetime.utcnow, nullable=False)\n```\n\nThe articles table behaves correctly, in that the last_update column is updated each time a record is changed.  However, the _history table, due to the update of end_transaction_id (I presume) fails to preserve the value of the column, so the second latest row effectively has the last_update value of the most recent update.\n\nThanks for an otherwise wonderful extension!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/46", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/46/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/46/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/46", "id": 28405343, "node_id": "MDU6SXNzdWUyODQwNTM0Mw==", "number": 46, "title": "Version objects of subclasses aren't instances of subclass history", "user": {"login": "nikola-kocic", "id": 1047924, "node_id": "MDQ6VXNlcjEwNDc5MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1047924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikola-kocic", "html_url": "https://github.com/nikola-kocic", "followers_url": "https://api.github.com/users/nikola-kocic/followers", "following_url": "https://api.github.com/users/nikola-kocic/following{/other_user}", "gists_url": "https://api.github.com/users/nikola-kocic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikola-kocic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikola-kocic/subscriptions", "organizations_url": "https://api.github.com/users/nikola-kocic/orgs", "repos_url": "https://api.github.com/users/nikola-kocic/repos", "events_url": "https://api.github.com/users/nikola-kocic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikola-kocic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-27T09:38:25Z", "updated_at": "2014-04-18T11:20:29Z", "closed_at": "2014-04-18T11:20:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pull request #42 (which includes failing tests for this bug) was merged but issue is not fixed and tests are marked for skipping\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/45", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/45/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/45/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/45", "id": 28235355, "node_id": "MDU6SXNzdWUyODIzNTM1NQ==", "number": 45, "title": "undo make_versioned", "user": {"login": "dtheodor", "id": 1549648, "node_id": "MDQ6VXNlcjE1NDk2NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1549648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtheodor", "html_url": "https://github.com/dtheodor", "followers_url": "https://api.github.com/users/dtheodor/followers", "following_url": "https://api.github.com/users/dtheodor/following{/other_user}", "gists_url": "https://api.github.com/users/dtheodor/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtheodor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtheodor/subscriptions", "organizations_url": "https://api.github.com/users/dtheodor/orgs", "repos_url": "https://api.github.com/users/dtheodor/repos", "events_url": "https://api.github.com/users/dtheodor/events{/privacy}", "received_events_url": "https://api.github.com/users/dtheodor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-25T10:04:32Z", "updated_at": "2014-04-09T08:12:24Z", "closed_at": "2014-04-09T08:12:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, trying to introduce continuum to my unittests, but the `make_versioned` is giving excessive trouble. I want to be able to call `make_versioned` in the test setup as well as **undo** calling it in the teardown. It looks like `make_versioned` is not meant for that, I see that you are also calling it once globally in your own tests.\n\nCalling it twice in a row actually throws SQL alchemy errrors related to already registered events. If I were to unregister all events that are introduced by continuum, would that suffice as an `undo_make_versioned` function?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/40", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/40/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/40/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/40", "id": 27796342, "node_id": "MDU6SXNzdWUyNzc5NjM0Mg==", "number": 40, "title": "Using model attribute with custom table column name doesn't work", "user": {"login": "fujiwara0", "id": 6716538, "node_id": "MDQ6VXNlcjY3MTY1Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6716538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fujiwara0", "html_url": "https://github.com/fujiwara0", "followers_url": "https://api.github.com/users/fujiwara0/followers", "following_url": "https://api.github.com/users/fujiwara0/following{/other_user}", "gists_url": "https://api.github.com/users/fujiwara0/gists{/gist_id}", "starred_url": "https://api.github.com/users/fujiwara0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fujiwara0/subscriptions", "organizations_url": "https://api.github.com/users/fujiwara0/orgs", "repos_url": "https://api.github.com/users/fujiwara0/repos", "events_url": "https://api.github.com/users/fujiwara0/events{/privacy}", "received_events_url": "https://api.github.com/users/fujiwara0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-18T14:22:22Z", "updated_at": "2014-02-19T11:18:22Z", "closed_at": "2014-02-19T11:18:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to add versioning to an existing project. I use column names that differ from the model attribute name. But that doesn't seem to work at all.\nHere is an simple example:\n\n``` python\nimport sqlalchemy as sa\nfrom sqlalchemy_continuum import make_versioned\n\nBase = sa.ext.declarative.declarative_base()\nmake_versioned()\n\nclass ProjectBrand(Base):\n    __tablename__ = \"t_project_brands\"\n    __versioned__ = {}\n\n    id = sa.Column(sa.Integer, primary_key=True)\n    ortho = sa.Column('p_ortho', sa.String, nullable = False, index=True)\n\nsa.orm.configure_mappers()\n\nengine = sa.create_engine('sqlite:///:memory:', echo=False)     \nBase.metadata.create_all(engine)\nSession = sa.orm.sessionmaker(bind=engine)\nsession = Session()\n\nbrand1 = ProjectBrand()\nbrand1.ortho = \"Brand1\"\nsession.add(brand1)\nsession.commit()\n\nbrand1.ortho = \"Brand2\"\nsession.commit()\n\nbrand1.versions[0].revert()\nsession.commit()\n```\n\nWhen I run it I get the following error:\n\n```\nTraceback (most recent call last):\n  File \"E:\\Projects\\Ford\\sync3\\workspace\\POI_linguist\\Aptana Studio 3 Workspace\\Brand Linguistics Tool\\src\\continuum_test.py\", line 35, in <module>\n    brand1.versions[0].revert()\n  File \"C:\\Python27\\lib\\site-packages\\sqlalchemy_continuum\\version.py\", line 67, in revert\n    return Reverter(self, relations=relations)()\n  File \"C:\\Python27\\lib\\site-packages\\sqlalchemy_continuum\\reverter.py\", line 102, in __call__\n    self.revert_properties()\n  File \"C:\\Python27\\lib\\site-packages\\sqlalchemy_continuum\\reverter.py\", line 49, in revert_properties\n    getattr(self.obj, prop.key)\nAttributeError: 'ProjectBrandHistory' object has no attribute 'ortho'\n```\n\nIt seems it tries to use ortho attribute, but it hasn't mapped this internally to the correct table column name.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/39", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/39/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/39/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/39", "id": 27672443, "node_id": "MDU6SXNzdWUyNzY3MjQ0Mw==", "number": 39, "title": "History not saved if session was flushed before commit", "user": {"login": "nikola-kocic", "id": 1047924, "node_id": "MDQ6VXNlcjEwNDc5MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1047924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikola-kocic", "html_url": "https://github.com/nikola-kocic", "followers_url": "https://api.github.com/users/nikola-kocic/followers", "following_url": "https://api.github.com/users/nikola-kocic/following{/other_user}", "gists_url": "https://api.github.com/users/nikola-kocic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikola-kocic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikola-kocic/subscriptions", "organizations_url": "https://api.github.com/users/nikola-kocic/orgs", "repos_url": "https://api.github.com/users/nikola-kocic/repos", "events_url": "https://api.github.com/users/nikola-kocic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikola-kocic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-16T13:06:08Z", "updated_at": "2014-02-18T15:44:01Z", "closed_at": "2014-02-17T09:04:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Test that currently fails:\n\n``` diff\ndiff --git a/tests/test_exotic_operation_combos.py b/tests/test_exotic_operation_combos.py\nindex 67d0b5f..9e261fa 100644\n--- a/tests/test_exotic_operation_combos.py\n+++ b/tests/test_exotic_operation_combos.py\n@@ -52,3 +52,14 @@ class TestExoticOperationCombos(TestCase):\n         assert article2.versions.count() == 2\n         assert article2.versions[0].operation_type == 0\n         assert article2.versions[1].operation_type == 1\n+\n+    def test_insert_flushed_object(self):\n+        article = self.Article()\n+        article.name = u'Some article'\n+        article.content = u'Some content'\n+        self.session.add(article)\n+        self.session.flush()\n+        self.session.commit()\n+\n+        assert article.versions.count() == 1\n+        assert article.versions[0].operation_type == 0\n\n```\n\nSQLAlchemy-Continuum 727b2512e7852dc65cf29db463cbd629d48a676e\n\nFlask==0.10.1\nSQLAlchemy==0.9.2\nSQLAlchemy-Utils==0.23.5\nSQLAlchemy-i18n==0.8.2\nflexmock==0.9.7\ninflection==0.2.0\npytest==2.5.2\nsix==1.5.2\ntoolz==0.5.2\n\nOS: Ubuntu 12.04 64-bit\nPostgreSQL version: 9.1.3-2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/38", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/38/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/38/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/38", "id": 27665450, "node_id": "MDU6SXNzdWUyNzY2NTQ1MA==", "number": 38, "title": "historyobject.changeset always empty on 0.10.2", "user": {"login": "kandarz", "id": 6634264, "node_id": "MDQ6VXNlcjY2MzQyNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6634264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kandarz", "html_url": "https://github.com/kandarz", "followers_url": "https://api.github.com/users/kandarz/followers", "following_url": "https://api.github.com/users/kandarz/following{/other_user}", "gists_url": "https://api.github.com/users/kandarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kandarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kandarz/subscriptions", "organizations_url": "https://api.github.com/users/kandarz/orgs", "repos_url": "https://api.github.com/users/kandarz/repos", "events_url": "https://api.github.com/users/kandarz/events{/privacy}", "received_events_url": "https://api.github.com/users/kandarz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-02-16T06:56:14Z", "updated_at": "2014-02-19T07:45:44Z", "closed_at": "2014-02-19T07:45:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tested on postgresql, MariaDB.\n\nHistory objects are saved to the database but the changeset helper property is always empty. Tested both Insert and Update operations.\n\ninflection (0.2.0)\nsix (1.5.2)\nSQLAlchemy (0.9.2)\nSQLAlchemy-Continuum (0.10.2)\nSQLAlchemy-Utils (0.23.5)\ntoolz (0.5.2)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/37", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/37/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/37/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/37", "id": 27289986, "node_id": "MDU6SXNzdWUyNzI4OTk4Ng==", "number": 37, "title": "version.previous is not None after first change", "user": {"login": "alexmic", "id": 333117, "node_id": "MDQ6VXNlcjMzMzExNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/333117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexmic", "html_url": "https://github.com/alexmic", "followers_url": "https://api.github.com/users/alexmic/followers", "following_url": "https://api.github.com/users/alexmic/following{/other_user}", "gists_url": "https://api.github.com/users/alexmic/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexmic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexmic/subscriptions", "organizations_url": "https://api.github.com/users/alexmic/orgs", "repos_url": "https://api.github.com/users/alexmic/repos", "events_url": "https://api.github.com/users/alexmic/events{/privacy}", "received_events_url": "https://api.github.com/users/alexmic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185717, "node_id": "MDU6TGFiZWw0MTE4NTcxNw==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-02-10T18:49:14Z", "updated_at": "2014-02-21T10:50:56Z", "closed_at": "2014-02-21T10:50:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "My testcase is this:\n\n``` python\ndef test_version_order(session, order_factory):\n    order = order_factory.build(store_id=1)\n    session.add(order)\n    session.commit()\n\n    OrderHistory = Order.__versioned__['class']\n\n    assert session.query(OrderHistory).count() == 1\n\n    version = order.versions[0]\n    assert version.index == 0\n    assert version.operation_type == Operation.INSERT\n\n    print version.transaction_id\n    print version.previous.transaction_id\n    print version.previous.previous.previous.previous\n```\n\n`version.previous()` is never None, as stated in https://github.com/kvesteri/sqlalchemy-continuum/blob/master/sqlalchemy_continuum/version.py#L11\n\nI'm using python 2.6.6, sqlite, sqlalchemy, flask-sqlalchemy and pytest.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/36", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/36/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/36/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/36", "id": 27235618, "node_id": "MDU6SXNzdWUyNzIzNTYxOA==", "number": 36, "title": "MySQL/MariaDB OperationalError", "user": {"login": "kandarz", "id": 6634264, "node_id": "MDQ6VXNlcjY2MzQyNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6634264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kandarz", "html_url": "https://github.com/kandarz", "followers_url": "https://api.github.com/users/kandarz/followers", "following_url": "https://api.github.com/users/kandarz/following{/other_user}", "gists_url": "https://api.github.com/users/kandarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kandarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kandarz/subscriptions", "organizations_url": "https://api.github.com/users/kandarz/orgs", "repos_url": "https://api.github.com/users/kandarz/repos", "events_url": "https://api.github.com/users/kandarz/events{/privacy}", "received_events_url": "https://api.github.com/users/kandarz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-10T00:26:36Z", "updated_at": "2014-02-10T09:47:36Z", "closed_at": "2014-02-10T09:47:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, I'm not sure if this is an issue with Continuum or with SQLAlchemy's dialect engine.\n\nWhen attempting to create a new object in a versioned table, the following error is thrown before insertion of the object.\n\nTested on both MySQL 5.6 GPL Edition and MariaDB 5.5.\n\nModule versions:\nSQLAlchemy (0.9.2)\nSQLAlchemy-Continuum (0.10.1)\nSQLAlchemy-Utils (0.23.3)\n\nOperationalError: (OperationalError) (1093, \"You can't specify target table 'entity_history' for update in FROM clause\") 'UPDATE entity_history SET end_transaction_id=%s WHERE entity_history.transaction_id = (SELECT max(entity_history_1.transaction_id) AS max_1 FROM entity_history AS entity_history_1 WHERE entity_history_1.transaction_id < %s) AND entity_history.id = %s' (2L, 2L, 2L)\n\nFull traceback:\nhttps://gist.github.com/anonymous/d7907460b77513e5e47b\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/34", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/34/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/34/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/34", "id": 23520143, "node_id": "MDU6SXNzdWUyMzUyMDE0Mw==", "number": 34, "title": "Attribute error in flask extension", "user": {"login": "but1er", "id": 6072703, "node_id": "MDQ6VXNlcjYwNzI3MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6072703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/but1er", "html_url": "https://github.com/but1er", "followers_url": "https://api.github.com/users/but1er/followers", "following_url": "https://api.github.com/users/but1er/following{/other_user}", "gists_url": "https://api.github.com/users/but1er/gists{/gist_id}", "starred_url": "https://api.github.com/users/but1er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/but1er/subscriptions", "organizations_url": "https://api.github.com/users/but1er/orgs", "repos_url": "https://api.github.com/users/but1er/repos", "events_url": "https://api.github.com/users/but1er/events{/privacy}", "received_events_url": "https://api.github.com/users/but1er/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-11-30T13:07:53Z", "updated_at": "2013-12-07T08:30:18Z", "closed_at": "2013-12-07T08:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "in your extension for flask you are using @sa.ext.declarative.declared_attr decorator\nyou imported sqlalchemy as sa\nbut sa doesn't contain reference to ext inside __init__.py, so this code will work only if i imported full package before your code execution... (otherwise module object doesn't have 'ext' attribute...)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/33", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/33/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/33/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/33", "id": 22038163, "node_id": "MDU6SXNzdWUyMjAzODE2Mw==", "number": 33, "title": "TransactionMeta not working", "user": {"login": "jpvanhal", "id": 250983, "node_id": "MDQ6VXNlcjI1MDk4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/250983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpvanhal", "html_url": "https://github.com/jpvanhal", "followers_url": "https://api.github.com/users/jpvanhal/followers", "following_url": "https://api.github.com/users/jpvanhal/following{/other_user}", "gists_url": "https://api.github.com/users/jpvanhal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpvanhal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpvanhal/subscriptions", "organizations_url": "https://api.github.com/users/jpvanhal/orgs", "repos_url": "https://api.github.com/users/jpvanhal/repos", "events_url": "https://api.github.com/users/jpvanhal/events{/privacy}", "received_events_url": "https://api.github.com/users/jpvanhal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-04T08:04:00Z", "updated_at": "2014-03-14T08:49:27Z", "closed_at": "2014-03-14T08:49:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example in the docs not working.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/32", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/32/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/32/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/32", "id": 20662087, "node_id": "MDU6SXNzdWUyMDY2MjA4Nw==", "number": 32, "title": "New configuration option: store_data_at_delete", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185719, "node_id": "MDU6TGFiZWw0MTE4NTcxOQ==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2013-10-08T07:04:42Z", "updated_at": "2013-10-08T11:13:43Z", "closed_at": "2013-10-08T11:13:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This configuration option would determine if entity deletion should save the data in history record (currently the history record that marks delete operation only holds NULL values for all columns other than primary keys). \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/30", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/30/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/30/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/30", "id": 20345512, "node_id": "MDU6SXNzdWUyMDM0NTUxMg==", "number": 30, "title": "__versioned__ API could be nicer", "user": {"login": "ulope", "id": 55078, "node_id": "MDQ6VXNlcjU1MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/55078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulope", "html_url": "https://github.com/ulope", "followers_url": "https://api.github.com/users/ulope/followers", "following_url": "https://api.github.com/users/ulope/following{/other_user}", "gists_url": "https://api.github.com/users/ulope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulope/subscriptions", "organizations_url": "https://api.github.com/users/ulope/orgs", "repos_url": "https://api.github.com/users/ulope/repos", "events_url": "https://api.github.com/users/ulope/events{/privacy}", "received_events_url": "https://api.github.com/users/ulope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-01T16:59:20Z", "updated_at": "2014-03-09T19:23:38Z", "closed_at": "2014-03-09T19:23:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Accessing a models corresponding history class through ModelClass.**versioned**['class'] feels very awkward (evokes a feeling of poking around in internals better left alone).\n\nWould you consider making it (and perhaps transaction_changes/_log) accessible via a \"nicer\" API? \n\nFor example: ModelClass.history_class\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/29", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/29/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/29/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/29", "id": 19230547, "node_id": "MDU6SXNzdWUxOTIzMDU0Nw==", "number": 29, "title": "Searching for deleted elements", "user": {"login": "kageurufu", "id": 259751, "node_id": "MDQ6VXNlcjI1OTc1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/259751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kageurufu", "html_url": "https://github.com/kageurufu", "followers_url": "https://api.github.com/users/kageurufu/followers", "following_url": "https://api.github.com/users/kageurufu/following{/other_user}", "gists_url": "https://api.github.com/users/kageurufu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kageurufu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kageurufu/subscriptions", "organizations_url": "https://api.github.com/users/kageurufu/orgs", "repos_url": "https://api.github.com/users/kageurufu/repos", "events_url": "https://api.github.com/users/kageurufu/events{/privacy}", "received_events_url": "https://api.github.com/users/kageurufu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-09-09T23:56:43Z", "updated_at": "2018-10-26T04:34:21Z", "closed_at": "2013-10-08T12:00:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unable to find how to find deleted objects through the versioning when using the flask TransactionLogBase\nMy problem is due to the fact that when a versioned table entry is deleted, the deleted transaction log is completely empty, with only the operation_type Operations.DELETE\nIf this could be done easily with the tx_meta, that would work for me.\n\nI'm hoping to implement a full undo style feature to allow my users to revert changes or even deletions of their entities\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/27", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/27/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/27/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/27", "id": 18837077, "node_id": "MDU6SXNzdWUxODgzNzA3Nw==", "number": 27, "title": "Documentation for generated schema structure", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-09-01T13:56:39Z", "updated_at": "2013-09-01T14:16:58Z", "closed_at": "2013-09-01T14:16:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/25", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/25/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/25/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/25", "id": 18487769, "node_id": "MDU6SXNzdWUxODQ4Nzc2OQ==", "number": 25, "title": "Make unit of work use context.isinsert and context.isdelete for many-to-many operations", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 41185719, "node_id": "MDU6TGFiZWw0MTE4NTcxOQ==", "url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-08-23T19:21:06Z", "updated_at": "2013-09-01T14:57:12Z", "closed_at": "2013-09-01T14:57:12Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Mike Bayer:\n\n\"you can tell if a statement is an INSERT/DELETE usually by looking at context.isinsert/context.isdelete, and also the table name \nyou can get from context.statement.table (something like that).  Similar things can be done where I see you're regexping the DELETE\nlater on.   Digging into the string is fine but once you're targeting the broad spectrum of scenarios, like users that are adding SQL comments and such to their SQL, backends that don't actually use SQL, you want to stick with inspecting the expression trees as much as possible\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/24", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/24/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/24/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/24", "id": 18195780, "node_id": "MDU6SXNzdWUxODE5NTc4MA==", "number": 24, "title": "Alembic autogenerate fails if the models contains a many-to-many relationsship and a non-default database schema is used", "user": {"login": "khoffrath", "id": 972060, "node_id": "MDQ6VXNlcjk3MjA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/972060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khoffrath", "html_url": "https://github.com/khoffrath", "followers_url": "https://api.github.com/users/khoffrath/followers", "following_url": "https://api.github.com/users/khoffrath/following{/other_user}", "gists_url": "https://api.github.com/users/khoffrath/gists{/gist_id}", "starred_url": "https://api.github.com/users/khoffrath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khoffrath/subscriptions", "organizations_url": "https://api.github.com/users/khoffrath/orgs", "repos_url": "https://api.github.com/users/khoffrath/repos", "events_url": "https://api.github.com/users/khoffrath/events{/privacy}", "received_events_url": "https://api.github.com/users/khoffrath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-17T16:01:21Z", "updated_at": "2013-08-21T19:59:12Z", "closed_at": "2013-08-21T09:30:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\ni try to autogenerate an Alembic revision with models that contain a many-to-many relationship. Without  sqlalchemy-continuum everything works fine. However if i try to include sqlalchemy-continuum Alembic fails with the following error:\n\nTraceback (most recent call last):\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/bin/alembic\", line 9, in <module>\n    load_entry_point('alembic==0.6.0', 'console_scripts', 'alembic')()\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/alembic/config.py\", line 294, in main\n    CommandLine(prog=prog).main(argv=argv)\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/alembic/config.py\", line 289, in main\n    self.run_cmd(cfg, options)\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/alembic/config.py\", line 275, in run_cmd\n    *_dict((k, getattr(options, k)) for k in kwarg)\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/alembic/command.py\", line 97, in revision\n    script.run_env()\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/alembic/script.py\", line 193, in run_env\n    util.load_python_file(self.dir, 'env.py')\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/alembic/util.py\", line 177, in load_python_file\n    module = load_module(module_id, path)\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/alembic/compat.py\", line 39, in load_module\n    return imp.load_source(module_id, path, fp)\n  File \"migrations/env.py\", line 25, in <module>\n    import models\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/models.py\", line 60, in <module>\n    sa.orm.configure_mappers()\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/sqlalchemy/orm/mapper.py\", line 2170, in configure_mappers\n    _call_configured.dispatch.after_configured()\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/sqlalchemy/event.py\", line 372, in __call__\n    fn(_args, *_kw)\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/sqlalchemy/orm/events.py\", line 489, in wrap\n    wrapped_fn(_arg, **kw)\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/sqlalchemy_continuum/manager.py\", line 373, in configure_versioned_classes\n    self.build_relationships(pending_copy)\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/sqlalchemy_continuum/manager.py\", line 275, in build_relationships\n    builder()\n  File \"/home/khoffrath/projects/testprojects/sa-alembic-continuum-m2m/venv/local/lib/python2.7/site-packages/sqlalchemy_continuum/relationship_builder.py\", line 152, in **call**\n    self.remote_column.table.name + '_history'\nKeyError: u'customer_roles_history'\n\nI've created a small project to demonstrate the problem: https://github.com/khoffrath/sa-alembic-continuum-m2m.\n\nCan you please take a look?\n\nThanks in advance\nKarsten\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/23", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/23/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/23/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/23", "id": 17605322, "node_id": "MDU6SXNzdWUxNzYwNTMyMg==", "number": 23, "title": "Alembic migration support ?", "user": {"login": "ymage", "id": 1571256, "node_id": "MDQ6VXNlcjE1NzEyNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1571256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymage", "html_url": "https://github.com/ymage", "followers_url": "https://api.github.com/users/ymage/followers", "following_url": "https://api.github.com/users/ymage/following{/other_user}", "gists_url": "https://api.github.com/users/ymage/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymage/subscriptions", "organizations_url": "https://api.github.com/users/ymage/orgs", "repos_url": "https://api.github.com/users/ymage/repos", "events_url": "https://api.github.com/users/ymage/events{/privacy}", "received_events_url": "https://api.github.com/users/ymage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-04T08:01:51Z", "updated_at": "2013-08-21T09:31:09Z", "closed_at": "2013-08-21T09:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI read some reference to alembic migration in changelog but didn't figure out how to get sa-continuum and alembic working together during an alembic migration.\n\nAny hint ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/21", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/21/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/21/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/21", "id": 17368412, "node_id": "MDU6SXNzdWUxNzM2ODQxMg==", "number": 21, "title": "RETURNING seems to be PostgreSQL specific", "user": {"login": "ymage", "id": 1571256, "node_id": "MDQ6VXNlcjE1NzEyNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1571256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymage", "html_url": "https://github.com/ymage", "followers_url": "https://api.github.com/users/ymage/followers", "following_url": "https://api.github.com/users/ymage/following{/other_user}", "gists_url": "https://api.github.com/users/ymage/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymage/subscriptions", "organizations_url": "https://api.github.com/users/ymage/orgs", "repos_url": "https://api.github.com/users/ymage/repos", "events_url": "https://api.github.com/users/ymage/events{/privacy}", "received_events_url": "https://api.github.com/users/ymage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-29T22:54:26Z", "updated_at": "2013-07-31T12:37:38Z", "closed_at": "2013-07-31T12:31:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Got this with MySQL : \n`CompileError: RETURNING is not supported by this dialect's statement compiler.`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/19", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/19/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/19/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/19", "id": 17205677, "node_id": "MDU6SXNzdWUxNzIwNTY3Nw==", "number": 19, "title": "sqlalchemy.exc.OperationalError: (OperationalError) (1075, 'Incorrect table definition; there can be only one auto column and it must be defined as a key')", "user": {"login": "ymage", "id": 1571256, "node_id": "MDQ6VXNlcjE1NzEyNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1571256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymage", "html_url": "https://github.com/ymage", "followers_url": "https://api.github.com/users/ymage/followers", "following_url": "https://api.github.com/users/ymage/following{/other_user}", "gists_url": "https://api.github.com/users/ymage/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymage/subscriptions", "organizations_url": "https://api.github.com/users/ymage/orgs", "repos_url": "https://api.github.com/users/ymage/repos", "events_url": "https://api.github.com/users/ymage/events{/privacy}", "received_events_url": "https://api.github.com/users/ymage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-07-25T11:06:04Z", "updated_at": "2013-07-29T23:03:00Z", "closed_at": "2013-07-29T23:03:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "With a simple model : \n\n``` python\nclass Article(Base):\n    __versioned__ = {}\n    __tablename__ = 'article'\n\n    id = sa.Column(sa.Integer, primary_key=True, autoincrement=True)\n    name = sa.Column(sa.Unicode(255))\n    content = sa.Column(sa.UnicodeText)\n```\n\nIt raises :\n    sqlalchemy.exc.OperationalError: (OperationalError) (1075, 'Incorrect table definition; there can be only one auto column and it must be defined as a key') '\n    CREATE TABLE article_history (\n        id INTEGER NOT NULL,\n        name VARCHAR(255),\n        content TEXT,\n        transaction_id BIGINT NOT NULL AUTO_INCREMENT,\n        operation_type SMALLINT NOT NULL,\n        PRIMARY KEY (id, transaction_id)\n    )' ()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/18", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/18/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/18/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/18", "id": 17186989, "node_id": "MDU6SXNzdWUxNzE4Njk4OQ==", "number": 18, "title": "Object has no attribute 'visit_HSTORE'", "user": {"login": "ymage", "id": 1571256, "node_id": "MDQ6VXNlcjE1NzEyNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1571256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymage", "html_url": "https://github.com/ymage", "followers_url": "https://api.github.com/users/ymage/followers", "following_url": "https://api.github.com/users/ymage/following{/other_user}", "gists_url": "https://api.github.com/users/ymage/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymage/subscriptions", "organizations_url": "https://api.github.com/users/ymage/orgs", "repos_url": "https://api.github.com/users/ymage/repos", "events_url": "https://api.github.com/users/ymage/events{/privacy}", "received_events_url": "https://api.github.com/users/ymage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-24T23:37:09Z", "updated_at": "2013-07-25T08:02:29Z", "closed_at": "2013-07-25T08:02:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried a minimalist sample.\n\nWith MySQL, I got :\nAttributeError: 'MySQLTypeCompiler' object has no attribute 'visit_HSTORE'\n\nWith SQLite, I got : \nAttributeError: 'SqliteTypeCompiler' object has no attribute 'visit_HSTORE'\n\nDid I miss something ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/17", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/17/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/17/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/17", "id": 17107615, "node_id": "MDU6SXNzdWUxNzEwNzYxNQ==", "number": 17, "title": "UnitOfWork changed_entities should check for excluded columns when defining if an object has been modified.", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-23T15:30:47Z", "updated_at": "2013-07-24T08:16:23Z", "closed_at": "2013-07-24T08:16:23Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/16", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/16/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/16/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/16", "id": 17071121, "node_id": "MDU6SXNzdWUxNzA3MTEyMQ==", "number": 16, "title": "Missing inflection dependency ?", "user": {"login": "ymage", "id": 1571256, "node_id": "MDQ6VXNlcjE1NzEyNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1571256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymage", "html_url": "https://github.com/ymage", "followers_url": "https://api.github.com/users/ymage/followers", "following_url": "https://api.github.com/users/ymage/following{/other_user}", "gists_url": "https://api.github.com/users/ymage/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymage/subscriptions", "organizations_url": "https://api.github.com/users/ymage/orgs", "repos_url": "https://api.github.com/users/ymage/repos", "events_url": "https://api.github.com/users/ymage/events{/privacy}", "received_events_url": "https://api.github.com/users/ymage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-22T21:17:25Z", "updated_at": "2013-07-23T07:04:30Z", "closed_at": "2013-07-23T07:04:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\n  File \"run.py\", line 4, in <module>\n    from app import app\n  File \"/home/userdev/projects/userproject/app/**init**.py\", line 38, in <module>\n    from app.users.views import mod as usersModule\n  File \"/home/userdev/projects/userproject/app/users/views.py\", line 9, in <module>\n    from app.users.models import User\n  File \"/home/userdev/projects/userproject/app/users/models.py\", line 4, in <module>\n    from sqlalchemy_continuum import make_versioned\n  File \"/home/userdev/envs/userproject/lib/python2.7/site-packages/sqlalchemy_continuum/**init**.py\", line 2, in <module>\n    from .manager import VersioningManager\n  File \"/home/userdev/envs/userproject/lib/python2.7/site-packages/sqlalchemy_continuum/manager.py\", line 2, in <module>\n    from inflection import underscore, pluralize\nImportError: No module named inflection\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/15", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/15/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/15/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/15", "id": 16319415, "node_id": "MDU6SXNzdWUxNjMxOTQxNQ==", "number": 15, "title": "Exclude datetime columns with defaults by default", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-03T14:08:12Z", "updated_at": "2013-07-03T14:41:41Z", "closed_at": "2013-07-03T14:41:41Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/14", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/14/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/14/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/14", "id": 16312826, "node_id": "MDU6SXNzdWUxNjMxMjgyNg==", "number": 14, "title": "Custom version class as __versioned__ option", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-03T11:20:21Z", "updated_at": "2013-07-03T11:32:31Z", "closed_at": "2013-07-03T11:32:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/13", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/13/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/13/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/13", "id": 16204199, "node_id": "MDU6SXNzdWUxNjIwNDE5OQ==", "number": 13, "title": "Version changeset method should iterate over version class properties instead of parent class properties", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-01T08:36:39Z", "updated_at": "2013-07-03T12:34:17Z", "closed_at": "2013-07-03T12:34:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/12", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/12/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/12/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/12", "id": 16173828, "node_id": "MDU6SXNzdWUxNjE3MzgyOA==", "number": 12, "title": "Only create transaction log entry if transaction contains actual net changes", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-29T11:25:08Z", "updated_at": "2013-06-30T12:19:14Z", "closed_at": "2013-06-30T12:19:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/11", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/11/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/11/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/11", "id": 16173707, "node_id": "MDU6SXNzdWUxNjE3MzcwNw==", "number": 11, "title": "Transaction changes should only save entity names that were actually changed in given transaction", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-29T11:08:48Z", "updated_at": "2013-06-30T12:19:14Z", "closed_at": "2013-06-30T12:19:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently it does not check if given entity was actually changed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/10", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/10/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/10/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/10", "id": 16078703, "node_id": "MDU6SXNzdWUxNjA3ODcwMw==", "number": 10, "title": "Make transaction changes aware of multiple flushes", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-27T10:05:20Z", "updated_at": "2013-06-27T19:07:37Z", "closed_at": "2013-06-27T19:07:37Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/9", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/9/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/9/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/9", "id": 16071105, "node_id": "MDU6SXNzdWUxNjA3MTEwNQ==", "number": 9, "title": "Make transaction_log database independent", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-27T06:25:39Z", "updated_at": "2013-06-27T19:07:48Z", "closed_at": "2013-06-27T19:07:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently it uses txid_current() which is postgresql specific.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/8", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/8/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/8/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/8", "id": 16071096, "node_id": "MDU6SXNzdWUxNjA3MTA5Ng==", "number": 8, "title": "Revision column default and server_default should be 1", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-27T06:25:11Z", "updated_at": "2013-06-27T19:07:56Z", "closed_at": "2013-06-27T19:07:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/7", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/7/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/7/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/7", "id": 16071062, "node_id": "MDU6SXNzdWUxNjA3MTA2Mg==", "number": 7, "title": "Make version table primary key (parent_table_pks + transaction_id)", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-27T06:23:35Z", "updated_at": "2013-06-27T19:07:59Z", "closed_at": "2013-06-27T19:07:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently the primary key is parent_table_pks + revision, but this structure does not cope well with transactions updating natural primary keys. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/6", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/6/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/6/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/6", "id": 15981932, "node_id": "MDU6SXNzdWUxNTk4MTkzMg==", "number": 6, "title": "Primary key columns of version tables should be not null", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-25T14:45:36Z", "updated_at": "2013-06-26T13:38:58Z", "closed_at": "2013-06-26T13:38:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/4", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/4/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/4/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/4", "id": 15441990, "node_id": "MDU6SXNzdWUxNTQ0MTk5MA==", "number": 4, "title": "Replacements for all alembic operations that affect history table columns", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-12T09:33:12Z", "updated_at": "2013-06-16T10:08:08Z", "closed_at": "2013-06-16T10:08:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "When history table structure is changed the correlated triggers need to be changed too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/3", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/3/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/3/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/3", "id": 15441934, "node_id": "MDU6SXNzdWUxNTQ0MTkzNA==", "number": 3, "title": "Make TransactionLog aware of changed records", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-12T09:31:38Z", "updated_at": "2013-06-20T08:17:41Z", "closed_at": "2013-06-20T08:17:41Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We could make something similar to:\n\nhttp://docs.jboss.org/hibernate/orm/4.2/devguide/en-US/html/ch15.html#envers-tracking-modified-entities-revchanges\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/2", "repository_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum", "labels_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/2/comments", "events_url": "https://api.github.com/repos/kvesteri/sqlalchemy-continuum/issues/2/events", "html_url": "https://github.com/kvesteri/sqlalchemy-continuum/issues/2", "id": 15441857, "node_id": "MDU6SXNzdWUxNTQ0MTg1Nw==", "number": 2, "title": "Version relations should be aware of deleted records", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-12T09:29:25Z", "updated_at": "2013-06-26T13:38:58Z", "closed_at": "2013-06-26T13:38:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}