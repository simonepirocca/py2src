{"total_count": 178, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/424", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/424/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/424/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/424", "id": 643860838, "node_id": "MDU6SXNzdWU2NDM4NjA4Mzg=", "number": 424, "title": "Why whiile capturing live I write to file multiple times", "user": {"login": "zapa1928", "id": 7189448, "node_id": "MDQ6VXNlcjcxODk0NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7189448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zapa1928", "html_url": "https://github.com/zapa1928", "followers_url": "https://api.github.com/users/zapa1928/followers", "following_url": "https://api.github.com/users/zapa1928/following{/other_user}", "gists_url": "https://api.github.com/users/zapa1928/gists{/gist_id}", "starred_url": "https://api.github.com/users/zapa1928/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zapa1928/subscriptions", "organizations_url": "https://api.github.com/users/zapa1928/orgs", "repos_url": "https://api.github.com/users/zapa1928/repos", "events_url": "https://api.github.com/users/zapa1928/events{/privacy}", "received_events_url": "https://api.github.com/users/zapa1928/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T13:53:10Z", "updated_at": "2020-06-26T07:42:24Z", "closed_at": "2020-06-26T07:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "System: \r\n```\r\nLinux beaglebone 4.19.94-ti-r42 #1buster SMP PREEMPT Tue Mar 31 19:38:29 UTC 2020 armv7l GNU/Linux\r\n```\r\n\r\nWhen I execute this script\r\n\r\n```\r\n#!/usr/bin/env python3\r\n\r\nimport pyshark\r\n#import wdb\r\nimport datetime as dt\r\nURB_BULK = 3 \r\n\r\ndef conv_to_ascii(data):\r\n    lst = list(\"\")\r\n    for d in data:\r\n        if (int(d,16) >= 32) and (int(d,16) < 127):\r\n            b = bytes.fromhex(hex(int(d,16))[2:])\r\n            a = b.decode(\"ASCII\")\r\n            lst.append(a)\r\n        else:\r\n            a = (r'\\x'+str(d))\r\n            lst.append(a)\r\n\r\n    return \"\".join(lst)\r\n\r\ndef direction(packet):\r\n    if packet.usb.endpoint_address_direction == '0':\r\n        return 'DEVICE IN'\r\n    if packet.usb.endpoint_address_direction == '1':\r\n        return 'DEVICE OUT'\r\n\r\ndef print_live():\r\n    c= pyshark.LiveCapture(\"usbmon1\")\r\n    #c = pyshark.FileCapture(input_file=\"/home/debian/cap/cap_00002_20200623120000\")\r\n    now = dt.datetime.now()\r\n    timeString = now.strftime(\"%Y%m%d\")\r\n    print(\"Ready to capture data\")\r\n    with open(\"/home/debian/cap/cap_formated{}\".format(timeString),\"a\") as w:\r\n\r\n        for p in c.sniff_continuously():\r\n            # BULK\r\n\r\n\r\n            if int(p.usb.transfer_type,16 ) == URB_BULK:\r\n                try:\r\n                    \r\n                    line = str(p.sniff_time) + \" \\t \"+ direction(p) + \" \\t \"+ str(p.data.usb_capdata) +\" \\t \" + str(conv_to_ascii((str(p.data.usb_capdata)).split(\":\"))) + \"\\n\"\r\n                    print(line)\r\n                    w.write(line)\r\n                    #w.flush()\r\n                    #p.data.\r\n                    #print(p.data.usb_capdata)\r\n                except:\r\n                    pass\r\n                    #print(\"\")\r\n                #wdb.set_trace()\r\n    w.close()\r\n\r\nif __name__ == \"__main__\":\r\n    print(\"Initializing...\")\r\n    print_live()\r\n\r\n```\r\n\r\nI get this output in terminal\r\n\r\n```\r\n> Executing task: sudo /usr/bin/python3 /home/debian/sniffer/usbcap.py <\r\n\r\n[sudo] password for debian: \r\nSorry, try again.\r\n[sudo] password for debian: \r\nInitializing...\r\nReady to capture data\r\n2020-06-23 15:42:20.685250       DEVICE IN       1b:7b:01        \\x1b{\\x01\r\n\r\n2020-06-23 15:42:20.693024       DEVICE IN       1b:40   \\x1b@\r\n\r\n2020-06-23 15:42:20.701651       DEVICE IN       1b:44:04:08:10:14:18:1c:00      \\x1bD\\x04\\x08\\x10\\x14\\x18\\x1c\\x00\r\n\r\n2020-06-23 15:42:20.702267       DEVICE IN       1b:76:00        \\x1bv\\x00\r\n\r\n2020-06-23 15:42:20.706729       DEVICE OUT      24      $\r\n\r\n2020-06-23 15:42:20.725767       DEVICE IN       30      0\r\n\r\n2020-06-23 15:42:20.736467       DEVICE IN       20       \r\n\r\n2020-06-23 15:42:20.752152       DEVICE IN       32      2\r\n\r\n2020-06-23 15:42:20.768144       DEVICE IN       30      0\r\n\r\n2020-06-23 15:42:20.783679       DEVICE IN       32      2\r\n\r\n2020-06-23 15:42:20.799110       DEVICE IN       30      0\r\n\r\n2020-06-23 15:42:20.814263       DEVICE IN       2d      -\r\n\r\n2020-06-23 15:42:20.830150       DEVICE IN       30      0\r\n\r\n2020-06-23 15:42:20.846239       DEVICE IN       36      6\r\n\r\n2020-06-23 15:42:20.861300       DEVICE IN       2d      -\r\n\r\n2020-06-23 15:42:20.877199       DEVICE IN       32      2\r\n\r\n2020-06-23 15:42:20.892157       DEVICE IN       33      3\r\n\r\n2020-06-23 15:42:20.908152       DEVICE IN       20       \r\n\r\n2020-06-23 15:42:20.924140       DEVICE IN       31      1\r\n\r\n2020-06-23 15:42:20.939174       DEVICE IN       35      5\r\n\r\n2020-06-23 15:42:20.955175       DEVICE IN       3a      :\r\n\r\n2020-06-23 15:42:20.970400       DEVICE IN       34      4\r\n\r\n2020-06-23 15:42:20.986280       DEVICE IN       32      2\r\n\r\n2020-06-23 15:42:21.002215       DEVICE IN       3a      :\r\n\r\n2020-06-23 15:42:21.017164       DEVICE IN       30      0\r\n\r\n2020-06-23 15:42:21.033318       DEVICE IN       33      3\r\n\r\n2020-06-23 15:42:21.048182       DEVICE IN       2e      .\r\n\r\n2020-06-23 15:42:21.064494       DEVICE IN       33      3\r\n\r\n2020-06-23 15:42:21.080217       DEVICE IN       32      2\r\n\r\n2020-06-23 15:42:21.095174       DEVICE IN       31      1\r\n\r\n2020-06-23 15:42:21.111175       DEVICE IN       30      0\r\n\r\n2020-06-23 15:42:21.126188       DEVICE IN       32      2\r\n\r\n2020-06-23 15:42:21.142335       DEVICE IN       39      9\r\n\r\n2020-06-23 15:42:21.158195       DEVICE IN       0a      \\x0a\r\n\r\n\r\n```\r\n\r\n\r\nBut I write to a file this\r\n\r\n```\r\n2020-06-23 15:42:20.685234 \t DEVICE IN \t 1b:7b:01 \t \\x1b{\\x01\r\n2020-06-23 15:42:20.685238 \t DEVICE IN \t 1b:7b:01 \t \\x1b{\\x01\r\n2020-06-23 15:42:20.693017 \t DEVICE IN \t 1b:40 \t \\x1b@\r\n2020-06-23 15:42:20.693021 \t DEVICE IN \t 1b:40 \t \\x1b@\r\n2020-06-23 15:42:20.701622 \t DEVICE IN \t 1b:44:04:08:10:14:18:1c:00 \t \\x1bD\\x04\\x08\\x10\\x14\\x18\\x1c\\x00\r\n2020-06-23 15:42:20.701647 \t DEVICE IN \t 1b:44:04:08:10:14:18:1c:00 \t \\x1bD\\x04\\x08\\x10\\x14\\x18\\x1c\\x00\r\n2020-06-23 15:42:20.702262 \t DEVICE IN \t 1b:76:00 \t \\x1bv\\x00\r\n2020-06-23 15:42:20.702265 \t DEVICE IN \t 1b:76:00 \t \\x1bv\\x00\r\n2020-06-23 15:42:20.706676 \t DEVICE OUT \t 24 \t $\r\n2020-06-23 15:42:20.706716 \t DEVICE OUT \t 24 \t $\r\n2020-06-23 15:42:20.725751 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:20.725755 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:20.736452 \t DEVICE IN \t 20 \t  \r\n2020-06-23 15:42:20.736456 \t DEVICE IN \t 20 \t  \r\n2020-06-23 15:42:20.752144 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:20.752131 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:20.768134 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:20.768122 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:20.783668 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:20.783656 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:20.799101 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:20.799088 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:20.814252 \t DEVICE IN \t 2d \t -\r\n2020-06-23 15:42:20.814239 \t DEVICE IN \t 2d \t -\r\n2020-06-23 15:42:20.830140 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:20.830128 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:20.846228 \t DEVICE IN \t 36 \t 6\r\n2020-06-23 15:42:20.846216 \t DEVICE IN \t 36 \t 6\r\n2020-06-23 15:42:20.861289 \t DEVICE IN \t 2d \t -\r\n2020-06-23 15:42:20.861278 \t DEVICE IN \t 2d \t -\r\n2020-06-23 15:42:20.877187 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:20.877174 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:20.892146 \t DEVICE IN \t 33 \t 3\r\n2020-06-23 15:42:20.892135 \t DEVICE IN \t 33 \t 3\r\n2020-06-23 15:42:20.908141 \t DEVICE IN \t 20 \t  \r\n2020-06-23 15:42:20.908129 \t DEVICE IN \t 20 \t  \r\n2020-06-23 15:42:20.924118 \t DEVICE IN \t 31 \t 1\r\n2020-06-23 15:42:20.924130 \t DEVICE IN \t 31 \t 1\r\n2020-06-23 15:42:20.939163 \t DEVICE IN \t 35 \t 5\r\n2020-06-23 15:42:20.939150 \t DEVICE IN \t 35 \t 5\r\n2020-06-23 15:42:20.955153 \t DEVICE IN \t 3a \t :\r\n2020-06-23 15:42:20.955165 \t DEVICE IN \t 3a \t :\r\n2020-06-23 15:42:20.970376 \t DEVICE IN \t 34 \t 4\r\n2020-06-23 15:42:20.970390 \t DEVICE IN \t 34 \t 4\r\n2020-06-23 15:42:20.986257 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:20.986270 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:21.002194 \t DEVICE IN \t 3a \t :\r\n2020-06-23 15:42:21.002206 \t DEVICE IN \t 3a \t :\r\n2020-06-23 15:42:21.017141 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:21.017153 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:21.033296 \t DEVICE IN \t 33 \t 3\r\n2020-06-23 15:42:21.033309 \t DEVICE IN \t 33 \t 3\r\n2020-06-23 15:42:21.048171 \t DEVICE IN \t 2e \t .\r\n2020-06-23 15:42:21.048160 \t DEVICE IN \t 2e \t .\r\n2020-06-23 15:42:21.064484 \t DEVICE IN \t 33 \t 3\r\n2020-06-23 15:42:21.064472 \t DEVICE IN \t 33 \t 3\r\n2020-06-23 15:42:21.080206 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:21.080193 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:21.095165 \t DEVICE IN \t 31 \t 1\r\n2020-06-23 15:42:21.095153 \t DEVICE IN \t 31 \t 1\r\n2020-06-23 15:42:21.111164 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:21.111152 \t DEVICE IN \t 30 \t 0\r\n2020-06-23 15:42:21.126178 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:21.126165 \t DEVICE IN \t 32 \t 2\r\n2020-06-23 15:42:21.142324 \t DEVICE IN \t 39 \t 9\r\n2020-06-23 15:42:21.142311 \t DEVICE IN \t 39 \t 9\r\n2020-06-23 15:42:21.158183 \t DEVICE IN \t 0a \t \\x0a\r\n2020-06-23 15:42:21.158172 \t DEVICE IN \t 0a \t \\x0a\r\n\r\n\r\n```\r\n\r\n\r\nWhy are the packets repeated and why out of order? And why different lines have different timestamps (sniff_time was called once in line 42)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/423", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/423/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/423/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/423", "id": 642730102, "node_id": "MDU6SXNzdWU2NDI3MzAxMDI=", "number": 423, "title": "TShark", "user": {"login": "lshuang1007", "id": 24970047, "node_id": "MDQ6VXNlcjI0OTcwMDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/24970047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lshuang1007", "html_url": "https://github.com/lshuang1007", "followers_url": "https://api.github.com/users/lshuang1007/followers", "following_url": "https://api.github.com/users/lshuang1007/following{/other_user}", "gists_url": "https://api.github.com/users/lshuang1007/gists{/gist_id}", "starred_url": "https://api.github.com/users/lshuang1007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lshuang1007/subscriptions", "organizations_url": "https://api.github.com/users/lshuang1007/orgs", "repos_url": "https://api.github.com/users/lshuang1007/repos", "events_url": "https://api.github.com/users/lshuang1007/events{/privacy}", "received_events_url": "https://api.github.com/users/lshuang1007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-22T03:53:39Z", "updated_at": "2020-07-06T16:30:06Z", "closed_at": "2020-07-06T16:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/420", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/420/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/420/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/420", "id": 638909867, "node_id": "MDU6SXNzdWU2Mzg5MDk4Njc=", "number": 420, "title": "Exception on accessing layer in packet", "user": {"login": "mvdwetering", "id": 732514, "node_id": "MDQ6VXNlcjczMjUxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/732514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvdwetering", "html_url": "https://github.com/mvdwetering", "followers_url": "https://api.github.com/users/mvdwetering/followers", "following_url": "https://api.github.com/users/mvdwetering/following{/other_user}", "gists_url": "https://api.github.com/users/mvdwetering/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvdwetering/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvdwetering/subscriptions", "organizations_url": "https://api.github.com/users/mvdwetering/orgs", "repos_url": "https://api.github.com/users/mvdwetering/repos", "events_url": "https://api.github.com/users/mvdwetering/events{/privacy}", "received_events_url": "https://api.github.com/users/mvdwetering/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-15T14:42:31Z", "updated_at": "2020-07-06T16:29:26Z", "closed_at": "2020-07-06T16:29:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Note: I initially thought this issue was due to having 2 SSL layers in a packet, but I just found out that the first layer is SLL instead of SSL. However the issue is still there.\r\n\r\nI am trying to use pyshark to analyze some pcapng files and I sometimes run into problems when accessing layers in a packet. In my case have have only seen it for the last layer in a packet.\r\n\r\nWhen iterating over the layers in a packet or accessing it by index I get a `RuntimeError: dictionary changed size during iteration`.\r\n\r\nThis is the full trace.\r\n```\r\nTraceback (most recent call last):\r\n  File \"./analyze.py\", line 8, in <module>\r\n    print(layer)\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 123, in __str__\r\n    for field_line in self._get_all_field_lines():\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 152, in _get_all_field_lines\r\n    for line in self._get_field_or_layer_repr(field):\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 158, in _get_field_or_layer_repr\r\n    for line in field._get_all_field_lines():\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 152, in _get_all_field_lines\r\n    for line in self._get_field_or_layer_repr(field):\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 158, in _get_field_or_layer_repr\r\n    for line in field._get_all_field_lines():\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 150, in _get_all_field_lines\r\n    for field in self._get_all_fields_with_alternates():\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 249, in _get_all_fields_with_alternates\r\n    return [self.get_field(name) for name in self.field_names]\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 243, in field_names\r\n    self._convert_showname_field_names_to_field_names()\r\n  File \"/home/michel/.local/lib/python3.6/site-packages/pyshark/packet/layer.py\", line 275, in _convert_showname_field_names_to_field_names\r\n    for field_name in self._all_fields:\r\nRuntimeError: dictionary changed size during iteration\r\n```\r\n\r\nNote that I figured out that it only occurs when using JSON mode, it is not an issue when using normal mode. However since the analysis takes quite a long time it would be nice to use JSON mode as it almost halves the processing time.\r\n\r\nTo reproduce the error use the attached packet and run the script and it will generate the error when printing the last SSL layer. Changing \"use_json\" to False will make it run fine.\r\n\r\n```python\r\n#!/usr/bin/python3\r\nimport pyshark\r\ncap = pyshark.FileCapture(\"double_ssl.pcapng\", use_json=True)\r\nfor packet in cap:\r\n    for layer in packet:\r\n        print(layer)\r\n```\r\n[double_ssl.zip](https://github.com/KimiNewt/pyshark/files/4780869/double_ssl.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/404", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/404/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/404/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/404", "id": 582992109, "node_id": "MDU6SXNzdWU1ODI5OTIxMDk=", "number": 404, "title": "Python 3.7 and 3.8 support ?", "user": {"login": "ShellCode33", "id": 8455652, "node_id": "MDQ6VXNlcjg0NTU2NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8455652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShellCode33", "html_url": "https://github.com/ShellCode33", "followers_url": "https://api.github.com/users/ShellCode33/followers", "following_url": "https://api.github.com/users/ShellCode33/following{/other_user}", "gists_url": "https://api.github.com/users/ShellCode33/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShellCode33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShellCode33/subscriptions", "organizations_url": "https://api.github.com/users/ShellCode33/orgs", "repos_url": "https://api.github.com/users/ShellCode33/repos", "events_url": "https://api.github.com/users/ShellCode33/events{/privacy}", "received_events_url": "https://api.github.com/users/ShellCode33/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-17T12:54:44Z", "updated_at": "2020-06-26T14:00:45Z", "closed_at": "2020-06-19T07:20:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, according to [this](https://pypi.org/project/pyshark/) pyshark supports Python 3.7, but it seems the version is not being tested during CI, see the [travis file](https://github.com/KimiNewt/pyshark/blob/master/.travis.yml). Moreover, I've been using pyshark with Python 3.8 for quite some time now, it seems to be working pretty well. \r\n\r\nHow about we add both of this Python versions to the CI ? And why not also pypy ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/400", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/400/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/400/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/400", "id": 571555086, "node_id": "MDU6SXNzdWU1NzE1NTUwODY=", "number": 400, "title": "Nothing is captured using multiple interfaces on different channels.", "user": {"login": "cmacfarl", "id": 1435639, "node_id": "MDQ6VXNlcjE0MzU2Mzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1435639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmacfarl", "html_url": "https://github.com/cmacfarl", "followers_url": "https://api.github.com/users/cmacfarl/followers", "following_url": "https://api.github.com/users/cmacfarl/following{/other_user}", "gists_url": "https://api.github.com/users/cmacfarl/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmacfarl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmacfarl/subscriptions", "organizations_url": "https://api.github.com/users/cmacfarl/orgs", "repos_url": "https://api.github.com/users/cmacfarl/repos", "events_url": "https://api.github.com/users/cmacfarl/events{/privacy}", "received_events_url": "https://api.github.com/users/cmacfarl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T17:50:38Z", "updated_at": "2020-02-26T18:06:34Z", "closed_at": "2020-02-26T18:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have three wireless interfaces on three different channels.  I pass this list of interfaces to LiveCapture and no packets are captured.  If I put the same three interfaces on the same channel, changing nothing in the python source itself, then packets are captured normally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/392", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/392/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/392/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/392", "id": 556718165, "node_id": "MDU6SXNzdWU1NTY3MTgxNjU=", "number": 392, "title": "DATA decoding: Exception in callback _ProactorReadPipeTransport._loop_reading", "user": {"login": "h3tz", "id": 6421402, "node_id": "MDQ6VXNlcjY0MjE0MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6421402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h3tz", "html_url": "https://github.com/h3tz", "followers_url": "https://api.github.com/users/h3tz/followers", "following_url": "https://api.github.com/users/h3tz/following{/other_user}", "gists_url": "https://api.github.com/users/h3tz/gists{/gist_id}", "starred_url": "https://api.github.com/users/h3tz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h3tz/subscriptions", "organizations_url": "https://api.github.com/users/h3tz/orgs", "repos_url": "https://api.github.com/users/h3tz/repos", "events_url": "https://api.github.com/users/h3tz/events{/privacy}", "received_events_url": "https://api.github.com/users/h3tz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-29T08:48:00Z", "updated_at": "2020-01-29T09:02:51Z", "closed_at": "2020-01-29T09:02:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Open the attached file to reproduce\r\n*file deleted\r\n```\r\ncapture = pyshark.FileCapture('C:/tmp/outfile.pcap')\r\nprint (capture[0])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/389", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/389/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/389/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/389", "id": 548240965, "node_id": "MDU6SXNzdWU1NDgyNDA5NjU=", "number": 389, "title": "UnicodeDecodeError when reading a packet", "user": {"login": "cglewis", "id": 2931079, "node_id": "MDQ6VXNlcjI5MzEwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2931079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cglewis", "html_url": "https://github.com/cglewis", "followers_url": "https://api.github.com/users/cglewis/followers", "following_url": "https://api.github.com/users/cglewis/following{/other_user}", "gists_url": "https://api.github.com/users/cglewis/gists{/gist_id}", "starred_url": "https://api.github.com/users/cglewis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cglewis/subscriptions", "organizations_url": "https://api.github.com/users/cglewis/orgs", "repos_url": "https://api.github.com/users/cglewis/repos", "events_url": "https://api.github.com/users/cglewis/events{/privacy}", "received_events_url": "https://api.github.com/users/cglewis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-10T19:04:45Z", "updated_at": "2020-05-27T16:06:03Z", "closed_at": "2020-05-27T16:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"/usr/local/lib/python3.7/site-packages/pyshark-0.4.2.9-py3.7.egg/pyshark/capture/capture.py\", line 246, in _packets_from_tshark_sync\r\n    got_first_packet=packets_captured > 0))\r\n  File \"/usr/local/Cellar/python/3.7.6/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/base_events.py\", line 583, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/local/lib/python3.7/site-packages/pyshark-0.4.2.9-py3.7.egg/pyshark/capture/capture.py\", line 361, in _get_packet_from_stream\r\n    packet = packet_from_json_packet(packet)\r\n  File \"/usr/local/lib/python3.7/site-packages/pyshark-0.4.2.9-py3.7.egg/pyshark/tshark/tshark_json.py\", line 26, in packet_from_json_packet\r\n    pkt_dict = json.loads(json_pkt.decode('utf-8'), object_pairs_hook=duplicate_object_hook)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x99 in position 20715: invalid start byte\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/382", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/382/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/382/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/382", "id": 521298270, "node_id": "MDU6SXNzdWU1MjEyOTgyNzA=", "number": 382, "title": "How to export an x509 certificate to der format using python?", "user": {"login": "stephenbriley", "id": 22474936, "node_id": "MDQ6VXNlcjIyNDc0OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/22474936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenbriley", "html_url": "https://github.com/stephenbriley", "followers_url": "https://api.github.com/users/stephenbriley/followers", "following_url": "https://api.github.com/users/stephenbriley/following{/other_user}", "gists_url": "https://api.github.com/users/stephenbriley/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenbriley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenbriley/subscriptions", "organizations_url": "https://api.github.com/users/stephenbriley/orgs", "repos_url": "https://api.github.com/users/stephenbriley/repos", "events_url": "https://api.github.com/users/stephenbriley/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenbriley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T02:57:15Z", "updated_at": "2019-11-12T20:13:42Z", "closed_at": "2019-11-12T20:13:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nAppolgies if this is not the proper forum to ask a question.  I'm thinking of using pyshark for a project that requires me to export all of the x509 certificates from a pcap file.  When I access the tls.handshake_certificate attribute, I'm presented with the output below. I'm new to working with certificates and their formats.  Does anyone have an example of how to convert this format presented by tshark/wireshark to der format that can be used for importing to a windows workstation?  If there is some example python code for this that would be great.\r\nThanks,\r\nSteve\r\n\r\n>>> cap[90].tls.handshake_certificate\r\n'30:82:0a:48:30:82:08:30:a0:03:02:01:02:02:13:2d:00:01:45:2b:a5:df:51:33:2a:2a:cc:f9:00:00:00:01:45:2b:30:0d:06:09:2a:86:48:86:f7:0d:01:01:0b:05:00:30:81:8b:31:0b:30:09:06:03:55:04:06:13:02:55:53:31:13:30:11:06:03:55:04:08:13:0a:57:61:73:68:69:6e:67:74:6f:6e:31:10:30:0e:06:03:55:04:07:13:07:52:65:64:6d:6f:6e:64:31:1e:30:1c:06:03:55:04:0a:13:15:4d:69:63:72:6f:73:6f:66:74:20:43:6f:72:70:6f:72:61:74:69:6f:6e:31:15:30:13:06:03:55:04:0b:13:0c:4d:69:63:72:6f:73:6f:66:74:20:49:54:31:1e:30:1c:06:03:55:04:03:13:15:4d:69:63:72:6f:73:6f:66:74:20:49:54:20:54:4c:53:20:43:41:20:35:30:1e:17:0d:31:37:31:31:31:34:32:30:32:30:33:33:5a:17:0d:31:39:31:31:31:34:32:30:32:30:33:33:5a:30:19:31:17:30:15:06:03:55:04:03:13:0e:65:64:67:65:2e:73:6b:79:70:65:2e:63:6f:6d:30:82:01:22:30:0d:06:09:2a:86:48:86:f7:0d:01:01:01:05:00:03:82:01:0f:00:30:82:01:0a:02:82:01:01:00:ca:13:18:4f:c8:6e:10:d7:11:29:fd:dd:04:06:e5:46:8b:cf:39:bc:39:9a:90:31:21:12:ab:56:85:1d:28:3c:43:df:89:4d:9e:54:5e:8b:9b:b0:56:21:6e:ac:f6:0c:1e:b7:66:2b:72:bd:89:f2:bc:9c:23:22:7e:ec:ad:2f:e1:f8:fb:12:bd:67:a3:4e:ae:e3:ba:66:e0:47:ce:6f:4d:9d:e7:89:e9:77:2e:08:ed:ad:fb:43:1b:11:cb:94:97:df:10:c0:83:67:78:17:1d:ef:b5:fe:d3:30:68:60:4a:0d:82:24:a4:54:4e:34:2d:e9:d3:7a:4e:99:a8:3a:d7:01:a4:a5:05:c5:a6:94:0e:0b:10:09:9f:b6:a0:0f:97:66:8b:43:c3:4a:41:8a:db:bd:29:aa:36:af:be:f6:84:c1:74:0c:00:8b:52:f2:d9:16:ac:f1:7b:f4:7f:7e:24:10:35:4b:3a:00:ac:58:be:e2:9d:75:ef:aa:0a:1e:0f:23:a5:9a:8c:bb:f3:cb:12:a5:09:2e:03:02:d1:a1:5a:eb:ad:38:44:4c:e8:b7:0e:9e:26:ea:53:bb:27:92:4a:54:24:55:3c:60:b4:f9:f3:45:e6:72:31:c9:4f:f5:16:f5:0f:52:e1:96:72:5b:cf:85:d5:f6:8f:d1:31:31:02:03:01:00:01:a3:82:06:14:30:82:06:10:30:0b:06:03:55:1d:0f:04:04:03:02:04:b0:30:1d:06:03:55:1d:25:04:16:30:14:06:08:2b:06:01:05:05:07:03:02:06:08:2b:06:01:05:05:07:03:01:30:78:06:09:2a:86:48:86:f7:0d:01:09:0f:04:6b:30:69:30:0e:06:08:2a:86:48:86:f7:0d:03:02:02:02:00:80:30:0e:06:08:2a:86:48:86:f7:0d:03:04:02:02:00:80:30:0b:06:09:60:86:48:01:65:03:04:01:2a:30:0b:06:09:60:86:48:01:65:03:04:01:2d:30:0b:06:09:60:86:48:01:65:03:04:01:02:30:0b:06:09:60:86:48:01:65:03:04:01:05:30:07:06:05:2b:0e:03:02:07:30:0a:06:08:2a:86:48:86:f7:0d:03:07:30:1d:06:03:55:1d:0e:04:16:04:14:d3:37:16:41:19:c0:7a:ef:02:1f:01:fb:9c:2a:08:8e:7a:14:90:53:30:82:03:37:06:03:55:1d:11:04:82:03:2e:30:82:03:2a:82:12:61:2e:63:6f:6e:66:69:67:2e:73:6b:79:70:65:2e:63:6f:6d:82:12:61:2e:63:6f:6e:66:69:67:2e:73:6b:79:70:65:2e:6e:65:74:82:12:62:2e:63:6f:6e:66:69:67:2e:73:6b:79:70:65:2e:63:6f:6d:82:12:62:2e:63:6f:6e:66:69:67:2e:73:6b:79:70:65:2e:6e:65:74:82:0e:65:64:67:65:2e:73:6b:79:70:65:2e:63:6f:6d:82:0e:65:64:67:65:2e:73:6b:79:70:65:2e:6e:65:74:82:13:69:6e:74:2e:65:64:67:65:2e:74:72:6f:75:74:65:72:2e:69:6f:82:14:70:72:6f:64:2e:65:64:67:65:2e:74:72:6f:75:74:65:72:2e:69:6f:82:15:63:6f:6e:66:69:67:2e:65:64:67:65:2e:73:6b:79:70:65:2e:63:6f:6d:82:15:63:6f:6e:66:69:67:2e:65:64:67:65:2e:73:6b:79:70:65:2e:6e:65:74:82:0d:61:70:69:2e:73:6b:79:70:65:2e:63:6f:6d:82:0c:75:69:2e:73:6b:79:70:65:2e:63:6f:6d:82:0f:74:65:61:6d:73:2e:73:6b:79:70:65:2e:63:6f:6d:82:13:61:70:69:2e:74:65:61:6d:73:2e:73:6b:79:70:65:2e:63:6f:6d:82:13:69:6d:67:2e:74:65:61:6d:73:2e:73:6b:79:70:65:2e:63:6f:6d:82:17:73:74:61:74:69:63:73:2e:74:65:61:6d:73:2e:73:6b:79:70:65:2e:63:6f:6d:82:17:77:65:62:68:6f:6f:6b:2e:74:65:61:6d:73:2e:73:6b:79:70:65:2e:63:6f:6d:82:11:2a:2e:74:65:61:6d:73:2e:73:6b:79:70:65:2e:63:6f:6d:82:0e:74:72:61:70:2e:73:6b:79:70:65:2e:63:6f:6d:82:0e:74:72:61:70:2e:73:6b:79:70:65:2e:6e:65:74:82:13:74:65:61:6d:73:2e:6d:69:63:72:6f:73:6f:66:74:2e:63:6f:6d:82:15:2a:2e:74:65:61:6d:73:2e:6d:69:63:72:6f:73:6f:66:74:2e:63:6f:6d:82:16:2a:2e:63:6f:6e:66:69:67:2e:6d:69:63:72:6f:73:6f:66:74:2e:63:6f:6d:82:12:2a:2e:63:6f:6e:66:69:67:2e:73:6b:79:70:65:2e:63:6f:6d:82:12:74:65:61:6d:73:2e:6d:69:63:72:6f:73:6f:66:74:2e:75:73:82:14:2a:2e:74:65:61:6d:73:2e:6d:69:63:72:6f:73:6f:66:74:2e:75:73:82:12:75:72:6c:70:2e:73:66:62:61:73:73:65:74:73:2e:63:6f:6d:82:14:2a:2e:75:72:6c:70:2e:73:66:62:61:73:73:65:74:73:2e:63:6f:6d:82:0b:2a:2e:73:6b:79:70:65:2e:6e:65:74:82:15:2a:2e:74:65:61:6d:73:2e:6d:69:63:72:6f:73:6f:66:74:2e:6e:65:74:82:0f:2a:2e:73:66:62:61:73:73:65:74:73:2e:63:6f:6d:82:0f:2a:2e:73:66:62:61:73:73:65:74:73:2e:6e:65:74:82:0a:2a:2e:6c:79:6e:63:2e:63:6f:6d:82:1c:2a:2e:64:69:61:6c:69:6e:2e:74:65:61:6d:73:2e:6d:69:63:72:6f:73:6f:66:74:2e:6e:65:74:82:26:2a:2e:64:69:61:6c:69:6e:2e:73:65:72:76:69:63:65:73:2e:73:6b:79:70:65:66:6f:72:62:75:73:69:6e:65:73:73:2e:6e:65:74:82:0e:2a:2e:74:69:70:2e:6c:79:6e:63:2e:63:6f:6d:82:12:2a:2e:63:70:63:61:70:69:2e:73:6b:79:70:65:2e:6e:65:74:82:0e:2a:2e:63:71:64:2e:6c:79:6e:63:2e:63:6f:6d:82:13:64:65:76:73:70:61:63:65:73:2e:73:6b:79:70:65:2e:63:6f:6d:82:15:2a:2e:64:65:76:73:70:61:63:65:73:2e:73:6b:79:70:65:2e:63:6f:6d:30:1f:06:03:55:1d:23:04:18:30:16:80:14:08:fe:25:9f:74:ea:87:04:c2:bc:bb:8e:a8:38:5f:33:c6:d1:6c:65:30:81:ac:06:03:55:1d:1f:04:81:a4:30:81:a1:30:81:9e:a0:81:9b:a0:81:98:86:4b:68:74:74:70:3a:2f:2f:6d:73:63:72:6c:2e:6d:69:63:72:6f:73:6f:66:74:2e:63:6f:6d:2f:70:6b:69:2f:6d:73:63:6f:72:70:2f:63:72:6c:2f:4d:69:63:72:6f:73:6f:66:74:25:32:30:49:54:25:32:30:54:4c:53:25:32:30:43:41:25:32:30:35:2e:63:72:6c:86:49:68:74:74:70:3a:2f:2f:63:72:6c:2e:6d:69:63:72:6f:73:6f:66:74:2e:63:6f:6d:2f:70:6b:69:2f:6d:73:63:6f:72:70:2f:63:72:6c:2f:4d:69:63:72:6f:73:6f:66:74:25:32:30:49:54:25:32:30:54:4c:53:25:32:30:43:41:25:32:30:35:2e:63:72:6c:30:81:85:06:08:2b:06:01:05:05:07:01:01:04:79:30:77:30:51:06:08:2b:06:01:05:05:07:30:02:86:45:68:74:74:70:3a:2f:2f:77:77:77:2e:6d:69:63:72:6f:73:6f:66:74:2e:63:6f:6d:2f:70:6b:69:2f:6d:73:63:6f:72:70:2f:4d:69:63:72:6f:73:6f:66:74:25:32:30:49:54:25:32:30:54:4c:53:25:32:30:43:41:25:32:30:35:2e:63:72:74:30:22:06:08:2b:06:01:05:05:07:30:01:86:16:68:74:74:70:3a:2f:2f:6f:63:73:70:2e:6d:73:6f:63:73:70:2e:63:6f:6d:30:3e:06:09:2b:06:01:04:01:82:37:15:07:04:31:30:2f:06:27:2b:06:01:04:01:82:37:15:08:87:da:86:75:83:ee:d9:01:82:c9:85:1b:81:b5:9e:61:85:f4:eb:60:81:5d:84:d2:df:42:82:e7:93:7a:02:01:64:02:01:16:30:4d:06:03:55:1d:20:04:46:30:44:30:42:06:09:2b:06:01:04:01:82:37:2a:01:30:35:30:33:06:08:2b:06:01:05:05:07:02:01:16:27:68:74:74:70:3a:2f:2f:77:77:77:2e:6d:69:63:72:6f:73:6f:66:74:2e:63:6f:6d:2f:70:6b:69:2f:6d:73:63:6f:72:70:2f:63:70:73:30:27:06:09:2b:06:01:04:01:82:37:15:0a:04:1a:30:18:30:0a:06:08:2b:06:01:05:05:07:03:02:30:0a:06:08:2b:06:01:05:05:07:03:01:30:0d:06:09:2a:86:48:86:f7:0d:01:01:0b:05:00:03:82:02:01:00:6e:b2:21:ce:ba:0d:e8:3c:30:d6:e7:ac:ed:fb:d9:0e:a2:2b:56:6b:c6:61:af:73:4e:fd:5b:3d:2d:80:8f:04:e0:a7:ce:94:e8:db:af:54:8c:9d:d2:16:d4:af:23:eb:36:e8:77:ab:bb:29:ed:52:44:34:5b:ad:38:ac:04:85:f7:ad:8d:9f:48:7b:f8:36:4c:bc:cf:d9:ee:1e:1b:68:3f:d7:e1:ee:fb:cd:c9:ca:6c:20:87:f3:8f:40:77:59:23:37:fc:aa:54:d5:98:35:ac:c7:38:63:ad:e9:77:31:25:27:dd:71:e5:e7:fa:61:4e:89:a1:eb:8e:a5:ef:ef:a0:ff:d7:4e:46:08:b0:ae:2f:cd:fe:f0:d7:bd:36:2c:9c:5e:7d:3f:d2:00:15:28:81:85:7b:7d:db:f3:45:81:c5:e5:66:40:dc:4b:1f:17:93:1d:26:e2:e1:95:4e:ed:8d:39:d9:d3:4f:7d:a3:ed:5a:4c:eb:aa:be:a8:fe:80:74:c5:c9:0b:67:78:a3:3b:ee:4f:92:11:75:1b:e2:46:f8:c8:fa:f2:52:74:ca:25:16:b0:f8:b6:3c:a6:81:26:65:d3:a5:66:3b:c8:1b:00:d5:3c:c1:81:c5:48:dd:bf:16:49:18:49:a7:be:53:81:2e:60:8d:5d:1b:0e:ee:3e:5d:0d:2f:ed:58:38:f7:9d:b9:be:76:e5:68:f9:6f:30:dd:00:2d:c9:02:0c:2e:ae:c7:32:da:c6:20:e9:23:5b:bb:ff:fc:15:45:a7:b2:be:31:79:f8:f8:bf:3a:44:4e:7d:a5:53:d0:c8:86:3f:16:05:d2:04:bd:2d:dc:8a:d9:f9:93:c0:09:1c:af:6b:81:d1:47:0c:fb:4b:92:94:17:7a:ba:b9:17:2f:06:ff:78:ce:03:f9:ae:55:78:ab:ab:be:f6:ea:a3:2c:5a:e7:8d:87:6e:06:76:c5:8c:ef:91:18:1a:f2:9d:45:50:19:17:26:be:5a:15:b6:f5:cb:0d:7d:fc:6e:f0:b9:93:61:ea:13:3d:3b:f7:21:4d:12:99:37:73:cc:69:e8:07:b5:47:cb:11:0b:64:85:e7:c1:18:b5:36:47:e7:53:0f:f0:ce:f9:1f:e4:c9:95:1c:ac:d3:e8:d4:b1:61:e4:fa:f3:f2:c2:9a:79:d4:e7:5f:01:f9:8e:57:89:06:b4:4a:b2:a3:9e:96:3a:81:f9:0a:6e:bd:21:0d:15:b7:61:98:d2:e6:dd:2b:31:60:77:35:1b:6c:e3:a5:18:8c:34:ca:03:21:7b:96:00:25:4d:e3:65:12:ab:bc:a9:0e:ac:49:3e:a9:da:fd:be:34:c6:5f:d8:aa'\r\n>>> ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/381", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/381/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/381/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/381", "id": 518430271, "node_id": "MDU6SXNzdWU1MTg0MzAyNzE=", "number": 381, "title": "Incorrect importing of GVSP \"LEADER\" packet", "user": {"login": "Dev-iL", "id": 6509619, "node_id": "MDQ6VXNlcjY1MDk2MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6509619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dev-iL", "html_url": "https://github.com/Dev-iL", "followers_url": "https://api.github.com/users/Dev-iL/followers", "following_url": "https://api.github.com/users/Dev-iL/following{/other_user}", "gists_url": "https://api.github.com/users/Dev-iL/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dev-iL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dev-iL/subscriptions", "organizations_url": "https://api.github.com/users/Dev-iL/orgs", "repos_url": "https://api.github.com/users/Dev-iL/repos", "events_url": "https://api.github.com/users/Dev-iL/events{/privacy}", "received_events_url": "https://api.github.com/users/Dev-iL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-06T12:07:21Z", "updated_at": "2019-11-07T06:38:35Z", "closed_at": "2019-11-06T14:15:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When importing [this](https://github.com/Dev-iL/pcap2matlab/blob/master/gigE_image.pcapng?raw=true) capture file using `pyshark`, the first packet isn't being recognized as having the GVSP protocol, whereas in Wireshark this is shown correctly:\r\n\r\n![image](https://user-images.githubusercontent.com/6509619/68296872-46bf5b00-009e-11ea-9067-938155b79667.png)\r\n\r\n(Screenshot was taken using Wireshark 3.0.6)\r\n\r\nUpon further investigation, when exporting a `.pdml` from Wireshark, we get the following at the end of the 1<sup>st</sup> packet:\r\n\r\n```xml\r\n<packet>\r\n...\r\n  <proto name=\"gvsp\" showname=\"GigE Vision Streaming Protocol\" size=\"44\" pos=\"42\">\r\n    <field name=\"gvsp.status\" showname=\"Status: GEV_STATUS_SUCCESS (0x0000)\" size=\"2\" pos=\"42\" show=\"0\" value=\"0000\"/>\r\n    <field name=\"gvsp.blockid16\" showname=\"Block ID (16 bits): 180\" size=\"2\" pos=\"44\" show=\"180\" value=\"00b4\"/>\r\n    <field name=\"gvsp.format\" showname=\"Format: LEADER (0x01)\" size=\"1\" pos=\"46\" show=\"0x00000001\" value=\"01\"/>\r\n    <field name=\"gvsp.packetid24\" showname=\"Packet ID (24 bits): 0\" size=\"3\" pos=\"47\" show=\"0\" value=\"000000\"/>\r\n    <field name=\"gvsp.fieldinfo\" showname=\"Field Info: 0x00\" size=\"1\" pos=\"50\" show=\"0x00000000\" value=\"00\">\r\n      <field name=\"gvsp.fieldid\" showname=\"0000 .... = Field ID: 0x0\" size=\"1\" pos=\"50\" show=\"0x00000000\" value=\"0\" unmaskedvalue=\"00\"/>\r\n      <field name=\"gvsp.fieldcount\" showname=\".... 0000 = Field Count: 0x0\" size=\"1\" pos=\"50\" show=\"0x00000000\" value=\"0\" unmaskedvalue=\"00\"/>\r\n    </field>\r\n    <field name=\"gvsp.payloadtype\" showname=\"Payload Type: IMAGE (0x0001)\" size=\"2\" pos=\"52\" show=\"1\" value=\"0001\"/>\r\n    <field name=\"gvsp.timestamp\" showname=\"Timestamp: 0x00000002bed0bf56\" size=\"8\" pos=\"54\" show=\"0x00000002bed0bf56\" value=\"00000002bed0bf56\"/>\r\n    <field name=\"gvsp.pixel\" showname=\"Pixel Format: Monochrome 16-bit (0x01100007), Monochrome or Color: Mono\" size=\"4\" pos=\"62\" show=\"17825799\" value=\"01100007\">\r\n      <field name=\"gvsp.pixel.color\" showname=\"0000 0001 .... .... .... .... .... .... = Monochrome or Color: Mono (0x01)\" size=\"4\" pos=\"62\" show=\"0x00000001\" value=\"1\" unmaskedvalue=\"01100007\"/>\r\n      <field name=\"gvsp.pixel.occupy\" showname=\".... .... 0001 0000 .... .... .... .... = Occupy Bits: 16\" size=\"4\" pos=\"62\" show=\"16\" value=\"10\" unmaskedvalue=\"01100007\"/>\r\n      <field name=\"gvsp.pixel.id\" showname=\".... .... .... .... 0000 0000 0000 0111 = ID: 0x0007\" size=\"4\" pos=\"62\" show=\"0x00000007\" value=\"7\" unmaskedvalue=\"01100007\"/>\r\n    </field>\r\n    <field name=\"gvsp.sizex\" showname=\"Size X: 640\" size=\"4\" pos=\"66\" show=\"640\" value=\"00000280\"/>\r\n    <field name=\"gvsp.sizey\" showname=\"Size Y: 513\" size=\"4\" pos=\"70\" show=\"513\" value=\"00000201\"/>\r\n    <field name=\"gvsp.offsetx\" showname=\"Offset X: 0\" size=\"4\" pos=\"74\" show=\"0\" value=\"00000000\"/>\r\n    <field name=\"gvsp.offsety\" showname=\"Offset Y: 0\" size=\"4\" pos=\"78\" show=\"0\" value=\"00000000\"/>\r\n    <field name=\"gvsp.paddingx\" showname=\"Padding X: 0\" size=\"2\" pos=\"82\" show=\"0\" value=\"0000\"/>\r\n    <field name=\"gvsp.paddingy\" showname=\"Padding Y: 0\" size=\"2\" pos=\"84\" show=\"0\" value=\"0000\"/>\r\n  </proto>\r\n</packet>\r\n```\r\n\r\nWhereas in tshark's `pdml` output it's:\r\n\r\n```xml\r\n<packet>\r\n...\r\n  <proto name=\"fake-field-wrapper\">\r\n    <field name=\"data\" value=\"000000b4010000000000000100000002bed0bf56011000070000028000000201000000000000000000000000\">\r\n      <field name=\"data.data\" showname=\"Data: 000000b4010000000000000100000002bed0bf5601100007\\xe2\\x80\\xa6\" size=\"44\" pos=\"42\" show=\"00:00:00:b4:01:00:00:00:00:00:00:01:00:00:00:02:be:d0:bf:56:01:10:00:07:00:00:02:80:00:00:02:01:00:00:00:00:00:00:00:00:00:00:00:00\" value=\"000000b4010000000000000100000002bed0bf56011000070000028000000201000000000000000000000000\"/>\r\n      <field name=\"data.len\" showname=\"Length: 44\" size=\"0\" pos=\"42\" show=\"44\"/>\r\n  </field>\r\n  </proto>\r\n</packet>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/380", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/380/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/380/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/380", "id": 512974699, "node_id": "MDU6SXNzdWU1MTI5NzQ2OTk=", "number": 380, "title": "Type of Service (http , smtp)", "user": {"login": "mhamzamughal86", "id": 55759063, "node_id": "MDQ6VXNlcjU1NzU5MDYz", "avatar_url": "https://avatars2.githubusercontent.com/u/55759063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhamzamughal86", "html_url": "https://github.com/mhamzamughal86", "followers_url": "https://api.github.com/users/mhamzamughal86/followers", "following_url": "https://api.github.com/users/mhamzamughal86/following{/other_user}", "gists_url": "https://api.github.com/users/mhamzamughal86/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhamzamughal86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhamzamughal86/subscriptions", "organizations_url": "https://api.github.com/users/mhamzamughal86/orgs", "repos_url": "https://api.github.com/users/mhamzamughal86/repos", "events_url": "https://api.github.com/users/mhamzamughal86/events{/privacy}", "received_events_url": "https://api.github.com/users/mhamzamughal86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-27T14:37:58Z", "updated_at": "2020-07-09T03:47:24Z", "closed_at": "2020-07-09T03:47:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to extract type of service (smtp, http etc)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/376", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/376/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/376/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/376", "id": 504548576, "node_id": "MDU6SXNzdWU1MDQ1NDg1NzY=", "number": 376, "title": "Field lines not in correct order for Extension Tags", "user": {"login": "Pooventhiran", "id": 29982052, "node_id": "MDQ6VXNlcjI5OTgyMDUy", "avatar_url": "https://avatars2.githubusercontent.com/u/29982052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pooventhiran", "html_url": "https://github.com/Pooventhiran", "followers_url": "https://api.github.com/users/Pooventhiran/followers", "following_url": "https://api.github.com/users/Pooventhiran/following{/other_user}", "gists_url": "https://api.github.com/users/Pooventhiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pooventhiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pooventhiran/subscriptions", "organizations_url": "https://api.github.com/users/Pooventhiran/orgs", "repos_url": "https://api.github.com/users/Pooventhiran/repos", "events_url": "https://api.github.com/users/Pooventhiran/events{/privacy}", "received_events_url": "https://api.github.com/users/Pooventhiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-09T10:08:27Z", "updated_at": "2019-10-15T06:23:01Z", "closed_at": "2019-10-15T06:23:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using PyShark to check the order of elements in the frame. I used \r\n\r\n`layer_obj._get_all_field_lines()`\r\n\r\n to get all lines and process each line for the tag name and number. Extension tags are shown in correct order in wireshark but when I print or use __get_all_field_lines_, those are out of order with other tags (mostly after SSID) so that I am not able to verify the order.\r\n\r\n```\r\neids = []\r\nextids = []\r\nnames = []\r\n\r\nfor fl in pkt[-1]._get_all_field_lines():\r\n    fl = fl.strip()\r\n\r\n    if fl.startswith('Timestamp') or fl.startswith('Beacon Interval') or fl.startswith('Capabilities Information'):\r\n        eids.append('fixed')\r\n        names.append(fl.split(':')[0])\r\n    elif fl.startswith('Tag:'):\r\n        names.append(fl[5:])\r\n    elif fl.startswith('Tag Number:'):\r\n        eids.append(re.search('\\((\\d+)\\)', fl).group(1))\r\n    elif fl.startswith('Ext Tag:'):\r\n        names.append(fl[9:])\r\n    elif fl.startswith('Ext Tag Number:'):\r\n        extids.append(re.search('\\((\\d+)\\)', fl).group(1))\r\n```\r\n\r\n\r\nAfter combining IDs and names, extension tag is not in order.\r\n```\r\nfixed: Timestamp\r\nfixed: Beacon Interval\r\nfixed: Capabilities Information\r\n0: SSID parameter set: 050_hk_5g\r\n1: Reserved (34)\r\n3: Supported Rates 6(B), 9, 12(B), 18, 24(B), 36, 48, 54, [Mbit/sec]\r\n7: DS Parameter set: Current Channel: 149\r\n32: Country Information: Country Code US, Environment Any\r\n37: Power Constraint: 3\r\n35: Channel Switch Announcement Mode: 0, Number: 36 , Count: 4\r\n48: TPC Report Transmit Power: 29, Link Margin: 0\r\n60: RSN Information\r\n45: Extended Channel Switch Announcement\r\n61: HT Capabilities (802.11n D1.10)\r\n74: HT Information (802.11n D1.10)\r\n127: Overlapping BSS Scan Parameters\r\n191: Extended Capabilities (8 octets)\r\n192: VHT Capabilities\r\n195: VHT Operation\r\n196: VHT Tx Power Envelope\r\n194: Channel Switch Wrapper\r\n195: Wide Bandwidth Channel Switch\r\n255/34: VHT Tx Power Envelope\r\n62: Secondary Channel Offset (802.11n D1.10)\r\n```\r\nwhere **Reserved (34)** should come near **255/34**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/373", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/373/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/373/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/373", "id": 499665324, "node_id": "MDU6SXNzdWU0OTk2NjUzMjQ=", "number": 373, "title": "Issues with custom_parameters", "user": {"login": "evuksani", "id": 33382800, "node_id": "MDQ6VXNlcjMzMzgyODAw", "avatar_url": "https://avatars0.githubusercontent.com/u/33382800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evuksani", "html_url": "https://github.com/evuksani", "followers_url": "https://api.github.com/users/evuksani/followers", "following_url": "https://api.github.com/users/evuksani/following{/other_user}", "gists_url": "https://api.github.com/users/evuksani/gists{/gist_id}", "starred_url": "https://api.github.com/users/evuksani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evuksani/subscriptions", "organizations_url": "https://api.github.com/users/evuksani/orgs", "repos_url": "https://api.github.com/users/evuksani/repos", "events_url": "https://api.github.com/users/evuksani/events{/privacy}", "received_events_url": "https://api.github.com/users/evuksani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-27T21:48:00Z", "updated_at": "2019-10-03T12:29:09Z", "closed_at": "2019-10-03T12:27:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attempting to run this code from tshark into pyshark\r\n\r\nTshark code: \r\ntshark -T ek -Y \"dns\" -P -V -x -t e -r capture.pcap | less\r\n\r\nPyshark:\r\n```\r\ncap = pyshark.FileCapture(file_name, use_json=True, display_filter=\"dns\", custom_parameters={\"-T\": \"ek\",\"-t\":\"e\"})\r\nprint(cap.next())\r\n```\r\n\r\nget error: \r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 6, in <module>\r\n  File \"/...../site-packages/pyshark/capture/file_capture.py\", line 64, in next\r\n    packet = self._packet_generator.send(None)\r\nStopIteration\r\n```\r\n\r\nAny ideas why that is? I also tried with all the parameters, but I am not sure how to give the dictionary or the list parameters that end up having no inputs, such as -V. Any help would be greatly appreciated!\r\n\r\n----\r\nWas using it as not intended: -T json/psml is already called as one of the inherent params, so it was having issues with a second -T. However, I think that there should be support for elastic, as is stated in issue https://github.com/KimiNewt/pyshark/issues/374", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/372", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/372/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/372/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/372", "id": 496750534, "node_id": "MDU6SXNzdWU0OTY3NTA1MzQ=", "number": 372, "title": "missing git release tags", "user": {"login": "anthraxx", "id": 203012, "node_id": "MDQ6VXNlcjIwMzAxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/203012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthraxx", "html_url": "https://github.com/anthraxx", "followers_url": "https://api.github.com/users/anthraxx/followers", "following_url": "https://api.github.com/users/anthraxx/following{/other_user}", "gists_url": "https://api.github.com/users/anthraxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthraxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthraxx/subscriptions", "organizations_url": "https://api.github.com/users/anthraxx/orgs", "repos_url": "https://api.github.com/users/anthraxx/repos", "events_url": "https://api.github.com/users/anthraxx/events{/privacy}", "received_events_url": "https://api.github.com/users/anthraxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-22T08:45:05Z", "updated_at": "2019-09-25T06:59:46Z", "closed_at": "2019-09-25T06:59:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like git tags are missing for the latest releases like 0.4.2.9.\r\nCould you please git tag the pypi releases and publish them to github? That would aid the distro packagers life and create transparency which commit belongs to which final pypi artifact.\r\n\r\ncheers,\r\nLevente", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/371", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/371/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/371/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/371", "id": 496648939, "node_id": "MDU6SXNzdWU0OTY2NDg5Mzk=", "number": 371, "title": "is there a simple/common way to access all the layers in that packet capture", "user": {"login": "eswarthammana", "id": 23114153, "node_id": "MDQ6VXNlcjIzMTE0MTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/23114153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eswarthammana", "html_url": "https://github.com/eswarthammana", "followers_url": "https://api.github.com/users/eswarthammana/followers", "following_url": "https://api.github.com/users/eswarthammana/following{/other_user}", "gists_url": "https://api.github.com/users/eswarthammana/gists{/gist_id}", "starred_url": "https://api.github.com/users/eswarthammana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eswarthammana/subscriptions", "organizations_url": "https://api.github.com/users/eswarthammana/orgs", "repos_url": "https://api.github.com/users/eswarthammana/repos", "events_url": "https://api.github.com/users/eswarthammana/events{/privacy}", "received_events_url": "https://api.github.com/users/eswarthammana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-21T12:06:15Z", "updated_at": "2019-09-25T06:55:36Z", "closed_at": "2019-09-25T06:55:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nThanks for pyshark. Currently i am analysing packet data using pyshark. \r\ni used an example below,\r\nfor pkt in pcap:\r\n      pkt['frame_info'] #not working\r\n\r\nfor pkt in pcap:\r\n      pkt.frame_info #working\r\n\r\nby using first approach i decided to access all the field data in the layers with out bothering about the layers in the device type(should work for ipv4 or ipv6 irrespective of layers)\r\n\r\nthrough the first approach able to get 4 or 5 layers but i am missing few layers to access through KeyError.\r\nThe missing one were able to access through the 2nd approach only.\r\n\r\nCloud you please suggest any common way to get field data of the layers with out re writing code if any new layers comes in to the device, which currently i am facing a problem.\r\n\r\nThanks for your time. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/366", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/366/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/366/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/366", "id": 483829640, "node_id": "MDU6SXNzdWU0ODM4Mjk2NDA=", "number": 366, "title": "RuntimeError: This event loop is already running", "user": {"login": "Yilong94", "id": 17191867, "node_id": "MDQ6VXNlcjE3MTkxODY3", "avatar_url": "https://avatars1.githubusercontent.com/u/17191867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yilong94", "html_url": "https://github.com/Yilong94", "followers_url": "https://api.github.com/users/Yilong94/followers", "following_url": "https://api.github.com/users/Yilong94/following{/other_user}", "gists_url": "https://api.github.com/users/Yilong94/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yilong94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yilong94/subscriptions", "organizations_url": "https://api.github.com/users/Yilong94/orgs", "repos_url": "https://api.github.com/users/Yilong94/repos", "events_url": "https://api.github.com/users/Yilong94/events{/privacy}", "received_events_url": "https://api.github.com/users/Yilong94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-22T07:55:15Z", "updated_at": "2019-08-26T07:14:56Z", "closed_at": "2019-08-26T07:14:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Exception ignored in: <bound method Capture.__del__ of <FileCapture sample-pcap/tls/ari.nus.edu.sg_2018-12-24_14-30-02.pcap>>\r\nTraceback (most recent call last):\r\n  File \"/home/foo/bar/baz/venv/lib/python3.6/site-packages/pyshark/capture/capture.py\", line 446, in __del__\r\n    self.close()\r\n  File \"/home/foo/bar/baz/venv/lib/python3.6/site-packages/pyshark/capture/capture.py\", line 437, in close\r\n    self.eventloop.run_until_complete(self.close_async())\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 471, in run_until_complete\r\n    self.run_forever()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 425, in run_forever\r\n    raise RuntimeError('This event loop is already running')\r\nRuntimeError: This event loop is already running\r\n\r\nPython version: 3.6.8\r\nPyshark version: 0.4.2.9\r\n\r\nI encountered a RuntimeError whenever I execute pyshark.FileCapture on more than 1 pcap file. Happens quite randomly with no clear pattern. The RuntimeError is  ignored and the code will run to completion. However, I am just curious as to why this might happen.\r\n\r\nDigging deeper, it seems like pyshark is trying to close the filecapture object, but ended up calling run_forever in asyncio, which seems rather counterintuitive and resulted in asyncio raising the warning that the thread is still running. Perhaps I am not understanding how asyncio interacts with pyshark? Thanks\r\n\r\nCode to run:\r\n`sample_filecapture = pyshark.FileCapture(sample, use_json=True, debug=True)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/361", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/361/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/361/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/361", "id": 480788137, "node_id": "MDU6SXNzdWU0ODA3ODgxMzc=", "number": 361, "title": "Invalid Syntax: packet.6lowpan is not allowing by python parser", "user": {"login": "eswarthammana", "id": 23114153, "node_id": "MDQ6VXNlcjIzMTE0MTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/23114153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eswarthammana", "html_url": "https://github.com/eswarthammana", "followers_url": "https://api.github.com/users/eswarthammana/followers", "following_url": "https://api.github.com/users/eswarthammana/following{/other_user}", "gists_url": "https://api.github.com/users/eswarthammana/gists{/gist_id}", "starred_url": "https://api.github.com/users/eswarthammana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eswarthammana/subscriptions", "organizations_url": "https://api.github.com/users/eswarthammana/orgs", "repos_url": "https://api.github.com/users/eswarthammana/repos", "events_url": "https://api.github.com/users/eswarthammana/events{/privacy}", "received_events_url": "https://api.github.com/users/eswarthammana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-14T17:01:18Z", "updated_at": "2019-08-15T05:14:05Z", "closed_at": "2019-08-14T17:30:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nPyshark really helping me alot for pcap analysis. Currently i am analysis 6lowpan. I am facing an issue. Please look at following details:\r\n\r\npacket.6lowpan is not allowing by python parser, variable should not start with integer.\r\n\r\n`pcap = pyshark.FileCapture(\"xxxx//xx//xxxx.pcapng\")\r\n\r\n    for pkt in pcap:\r\n        print(pkt.6lowpan)`\r\n\r\nInvalid syntax. Python version: 3.7.x, IDE: IDLE\r\n\r\nFor more information please look at the following [Stack Overflow](https://stackoverflow.com/questions/57325755/how-to-extract-raw-data-from-pcap-file-which-of-6lowpan-or-ieee-802-15-4-using-p?noredirect=1#comment101151897_57325755) issue  log.\r\n\r\nPlease help me to resolve the issue. \r\n\r\nRegards,\r\nBala", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/360", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/360/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/360/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/360", "id": 475867546, "node_id": "MDU6SXNzdWU0NzU4Njc1NDY=", "number": 360, "title": "Cannot run the event loop while another loop is running", "user": {"login": "montereyray73", "id": 23242313, "node_id": "MDQ6VXNlcjIzMjQyMzEz", "avatar_url": "https://avatars2.githubusercontent.com/u/23242313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montereyray73", "html_url": "https://github.com/montereyray73", "followers_url": "https://api.github.com/users/montereyray73/followers", "following_url": "https://api.github.com/users/montereyray73/following{/other_user}", "gists_url": "https://api.github.com/users/montereyray73/gists{/gist_id}", "starred_url": "https://api.github.com/users/montereyray73/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montereyray73/subscriptions", "organizations_url": "https://api.github.com/users/montereyray73/orgs", "repos_url": "https://api.github.com/users/montereyray73/repos", "events_url": "https://api.github.com/users/montereyray73/events{/privacy}", "received_events_url": "https://api.github.com/users/montereyray73/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-01T20:12:00Z", "updated_at": "2019-08-15T05:39:14Z", "closed_at": "2019-08-14T17:29:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am running Python 3.7.3 and have installed the latest pyshark.  I have tried to perform basic operations such as:\r\n\r\nimport pyshark\r\ncap = pyshark.FileCapture('all.pcap')\r\n\r\nfor pkt in cap:\r\n      print(cap)\r\nRuntimeError: Cannot run the event loop while another loop is running\r\n\r\ncap[0]\r\nRuntimeError: Cannot run the event loop while another loop is running\r\n\r\n'IP' in cap\r\nRuntimeError: Cannot run the event loop while another loop is running\r\n\r\nI have performed installs on Linux, Mac and Windows 10 and get the same error.  Am I missing something here?  I have not been able to much information about this error.   I'm wondering if I failed to install something additional.\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/356", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/356/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/356/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/356", "id": 472644886, "node_id": "MDU6SXNzdWU0NzI2NDQ4ODY=", "number": 356, "title": "Any code example to show how to use lua script by pyshark?", "user": {"login": "IAMABOY", "id": 4811458, "node_id": "MDQ6VXNlcjQ4MTE0NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4811458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IAMABOY", "html_url": "https://github.com/IAMABOY", "followers_url": "https://api.github.com/users/IAMABOY/followers", "following_url": "https://api.github.com/users/IAMABOY/following{/other_user}", "gists_url": "https://api.github.com/users/IAMABOY/gists{/gist_id}", "starred_url": "https://api.github.com/users/IAMABOY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IAMABOY/subscriptions", "organizations_url": "https://api.github.com/users/IAMABOY/orgs", "repos_url": "https://api.github.com/users/IAMABOY/repos", "events_url": "https://api.github.com/users/IAMABOY/events{/privacy}", "received_events_url": "https://api.github.com/users/IAMABOY/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-25T03:21:38Z", "updated_at": "2019-08-14T17:31:22Z", "closed_at": "2019-08-14T17:31:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "tshark usage:\r\ntshark -X lua_script:http.lua  -r http.pcap -q\r\n\r\nhow to use the command in pyshark?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/352", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/352/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/352/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/352", "id": 468564408, "node_id": "MDU6SXNzdWU0Njg1NjQ0MDg=", "number": 352, "title": "[Rookie Question] How to get tcp packet data size with pyshark LiveCapture? ", "user": {"login": "kakirastern", "id": 26264600, "node_id": "MDQ6VXNlcjI2MjY0NjAw", "avatar_url": "https://avatars3.githubusercontent.com/u/26264600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kakirastern", "html_url": "https://github.com/kakirastern", "followers_url": "https://api.github.com/users/kakirastern/followers", "following_url": "https://api.github.com/users/kakirastern/following{/other_user}", "gists_url": "https://api.github.com/users/kakirastern/gists{/gist_id}", "starred_url": "https://api.github.com/users/kakirastern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kakirastern/subscriptions", "organizations_url": "https://api.github.com/users/kakirastern/orgs", "repos_url": "https://api.github.com/users/kakirastern/repos", "events_url": "https://api.github.com/users/kakirastern/events{/privacy}", "received_events_url": "https://api.github.com/users/kakirastern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-16T10:05:12Z", "updated_at": "2019-07-16T19:00:10Z", "closed_at": "2019-07-16T19:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose I use the following code to capture some tcp packets:\r\n```\r\ncapture = pyshark.LiveCapture(interface=None)\r\ncapture.sniff(timeout=60)\r\n```\r\nHow do I then get the size of the data transmitted? Can I do the following in general?\r\n```\r\nfor packet in capture:\r\ntry:\r\n    output = packet.tcp.data\r\n        except:\r\n    output = None\r\n        raise Exception(\"Cannot determine packet size.\")\r\n```\r\nOr, should I use `pretty_print()` in lieu of the `data` in the code above? \r\n\r\nAny help in this regard would be much appreciated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/349", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/349/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/349/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/349", "id": 458720496, "node_id": "MDU6SXNzdWU0NTg3MjA0OTY=", "number": 349, "title": "Is there an ability to get the protocol of an IP layer packet?", "user": {"login": "willkara", "id": 3278887, "node_id": "MDQ6VXNlcjMyNzg4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3278887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willkara", "html_url": "https://github.com/willkara", "followers_url": "https://api.github.com/users/willkara/followers", "following_url": "https://api.github.com/users/willkara/following{/other_user}", "gists_url": "https://api.github.com/users/willkara/gists{/gist_id}", "starred_url": "https://api.github.com/users/willkara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willkara/subscriptions", "organizations_url": "https://api.github.com/users/willkara/orgs", "repos_url": "https://api.github.com/users/willkara/repos", "events_url": "https://api.github.com/users/willkara/events{/privacy}", "received_events_url": "https://api.github.com/users/willkara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-20T15:18:49Z", "updated_at": "2019-06-20T15:21:30Z", "closed_at": "2019-06-20T15:21:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently trying to grab the protocol for each IP layer packet.\r\n\r\nHere's an example:\r\n\r\n```\r\nfor packet in capture.sniff_continuously(packet_count=554863):\r\n    if 'IP' in packet:\r\n        print(packet.ip)\r\n```\r\n\r\nIs there a way to drill down into the IP layer and grab the protocol?  I've tried\r\n\r\npacket.ip.protocol\r\n\r\nbut that didn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/348", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/348/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/348/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/348", "id": 457960634, "node_id": "MDU6SXNzdWU0NTc5NjA2MzQ=", "number": 348, "title": "Missing parentheses in call to 'print'.", "user": {"login": "new-gen23", "id": 1741662, "node_id": "MDQ6VXNlcjE3NDE2NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1741662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/new-gen23", "html_url": "https://github.com/new-gen23", "followers_url": "https://api.github.com/users/new-gen23/followers", "following_url": "https://api.github.com/users/new-gen23/following{/other_user}", "gists_url": "https://api.github.com/users/new-gen23/gists{/gist_id}", "starred_url": "https://api.github.com/users/new-gen23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/new-gen23/subscriptions", "organizations_url": "https://api.github.com/users/new-gen23/orgs", "repos_url": "https://api.github.com/users/new-gen23/repos", "events_url": "https://api.github.com/users/new-gen23/events{/privacy}", "received_events_url": "https://api.github.com/users/new-gen23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-19T11:34:59Z", "updated_at": "2019-06-19T11:59:01Z", "closed_at": "2019-06-19T11:59:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed pyshark using: \r\n\r\n> pip3 install pyshark\r\n\r\n\"locate\" confirms it is installen in \r\n\r\n> /usr/local/lib/python3.7/dist-packages/pyshark/\r\n\r\nNow when I run \"python3.7\" and enter \"import pyshark\", I get:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyshark/__init__.py\", line 13, in <module>\r\n    from pyshark.capture.live_capture import LiveCapture\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyshark/capture/live_capture.py\", line 5, in <module>\r\n    from pyshark.capture.capture import Capture\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyshark/capture/capture.py\", line 8, in <module>\r\n    import logbook\r\n  File \"/usr/local/lib/python3.7/dist-packages/logbook/__init__.py\", line 14, in <module>\r\n    from .base import (\r\n  File \"/usr/local/lib/python3.7/dist-packages/logbook/base.py\", line 22, in <module>\r\n    from logbook.helpers import (PY2, cached_property, integer_types, iteritems,\r\n  File \"/usr/local/lib/python3.7/dist-packages/logbook/helpers.py\", line 60, in <module>\r\n    from http import client as http_client\r\nImportError: bad magic number in 'http': b'\\x03\\xf3\\r\\n'\r\n```\r\n\r\nI am using: \r\nLinux sw-c-051 4.19.0-2-amd64 #1 SMP Debian 4.19.16-1 (2019-01-17) x86_64 GNU/Linux\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/342", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/342/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/342/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/342", "id": 453457343, "node_id": "MDU6SXNzdWU0NTM0NTczNDM=", "number": 342, "title": "Extract vendor out of received pyshark package", "user": {"login": "ErikPy", "id": 51479518, "node_id": "MDQ6VXNlcjUxNDc5NTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/51479518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErikPy", "html_url": "https://github.com/ErikPy", "followers_url": "https://api.github.com/users/ErikPy/followers", "following_url": "https://api.github.com/users/ErikPy/following{/other_user}", "gists_url": "https://api.github.com/users/ErikPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErikPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErikPy/subscriptions", "organizations_url": "https://api.github.com/users/ErikPy/orgs", "repos_url": "https://api.github.com/users/ErikPy/repos", "events_url": "https://api.github.com/users/ErikPy/events{/privacy}", "received_events_url": "https://api.github.com/users/ErikPy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-07T11:02:28Z", "updated_at": "2019-06-09T15:56:29Z", "closed_at": "2019-06-09T15:56:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI hope anyone can help me...\r\n\r\nCurrently I receive packets by using pyshark.\r\nI can extract a lot of information like: src IP, dst IP, protocoll, portnumber, ...\r\nNow I want to extract the vendor of the src and dst adress. By using tshark or Wireshark its no problem, but I dont know how to extract the vendor out of the received pyshark-package.\r\n\r\nUsing: \"myReceivedPacket.eth._all_fields[\"eth.src_resolved\"]\" gives me as a result only the MAC-Adress of the src-adress but not the vendor name like in tshark or Wireshark...\r\n\r\nHave anyone an idea, how to extract the vendor-name? Is it possible at all?\r\n\r\nThanks in advance!\r\n\r\nregards\r\n\r\nErik", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/334", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/334/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/334/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/334", "id": 441840676, "node_id": "MDU6SXNzdWU0NDE4NDA2NzY=", "number": 334, "title": "LiveCapture, LiveRingCapture not working", "user": {"login": "mikewalshchicago", "id": 46030212, "node_id": "MDQ6VXNlcjQ2MDMwMjEy", "avatar_url": "https://avatars1.githubusercontent.com/u/46030212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikewalshchicago", "html_url": "https://github.com/mikewalshchicago", "followers_url": "https://api.github.com/users/mikewalshchicago/followers", "following_url": "https://api.github.com/users/mikewalshchicago/following{/other_user}", "gists_url": "https://api.github.com/users/mikewalshchicago/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikewalshchicago/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikewalshchicago/subscriptions", "organizations_url": "https://api.github.com/users/mikewalshchicago/orgs", "repos_url": "https://api.github.com/users/mikewalshchicago/repos", "events_url": "https://api.github.com/users/mikewalshchicago/events{/privacy}", "received_events_url": "https://api.github.com/users/mikewalshchicago/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-08T17:16:35Z", "updated_at": "2019-05-08T17:24:00Z", "closed_at": "2019-05-08T17:21:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI must be doing something very wrong, otherwise I'm sure this would be already raised. I am trying to get a basic working LiveRingCapture or LiveCapture working so I can replace pcapy in one of my projects.  I installed pyshark-0.4.2.3 from pip and am in a python3.6 scl environment on Centos7.\r\n\r\nLiveCapture will initialize but never report a received packet.  I set_debug(): on my capture object, and all that is reported is the following:\r\n\r\ntshark: You can't write both raw packet data and dissected packets to the standard output.\r\n\r\nwell, since debug() writes to stdout, I disabled that, and also commented out  my print(\"got packet\") .  I replaced the report with logging.  My sample code looks like this:\r\n#!/usr/bin/env python3.6\r\nimport pyshark\r\n\r\n#logging\r\nimport os\r\nimport logging\r\nimport logging.handlers\r\nlogger = logging.getLogger()\r\nhandler = logging.handlers.WatchedFileHandler(\r\n    os.environ.get(\"LOGFILE\", \"/home/mwalsh/debug.log\"))\r\nformatter = logging.Formatter(fmt='%(asctime)s.%(msecs)03d:%(created).9f %(levelname)-8s (%(threadName)-9s)  %(message)s',\r\n                              datefmt='%Y-%m-%d %H:%M:%S')\r\nhandler.setFormatter(formatter)\r\nlogger.addHandler(handler)\r\nlogger.setLevel(logging.DEBUG)\r\n\r\n\r\ndef connection():\r\n    udpshark = pyshark.LiveCapture(interface='em1')\r\n#    udpshark.set_debug()\r\n    logger.debug(\"starting to listen\")\r\n#    while True:\r\n    for packet in udpshark.sniff_continuously(packet_count=5):\r\n           logger.debug(\"packet received\")\r\n\r\ndef main():\r\n    uconn = connection()\r\n\r\n    return\r\nmain()\r\n\r\n\r\nThe output never gets to 'packet received' in my debug.log:\r\n\r\n2019-05-08 12:06:15.653:1557335175.653063059 DEBUG    (MainThread)  Using selector: EpollSelector\r\n2019-05-08 12:06:15.653:1557335175.653694868 DEBUG    (MainThread)  starting to listen\r\n2019-05-08 12:07:47.360:1557335267.360103130 DEBUG    (MainThread)  Using selector: EpollSelector\r\n2019-05-08 12:07:47.361:1557335267.361787558 DEBUG    (MainThread)  starting to listen\r\n\r\n\"tcpdump -i em1\" returns a lot of traffic on that interface, fwiw\r\n\r\nClearly I'm missing something obvious on how to use pyshark, because this is as simple as i could make it.  Truthfully this is boiled down to the absolute bare minimum - I started with much higher ambitions and would like to get back there.\r\n\r\nCould someone give me a nudge on how to get data reported back from sniff_continuously?\r\n\r\nedit:  oh man, please disregard this issue. I'm a dope and i had a symlink pointing dumpcap to /usr/local/sbin/tshark. My ignorance will forever be immortalized on github now\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/328", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/328/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/328/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/328", "id": 434313926, "node_id": "MDU6SXNzdWU0MzQzMTM5MjY=", "number": 328, "title": "please tag the release 0.4.2.2", "user": {"login": "jonasstein", "id": 298682, "node_id": "MDQ6VXNlcjI5ODY4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/298682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasstein", "html_url": "https://github.com/jonasstein", "followers_url": "https://api.github.com/users/jonasstein/followers", "following_url": "https://api.github.com/users/jonasstein/following{/other_user}", "gists_url": "https://api.github.com/users/jonasstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasstein/subscriptions", "organizations_url": "https://api.github.com/users/jonasstein/orgs", "repos_url": "https://api.github.com/users/jonasstein/repos", "events_url": "https://api.github.com/users/jonasstein/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-17T14:26:38Z", "updated_at": "2019-05-08T11:24:04Z", "closed_at": "2019-05-08T11:24:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/325", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/325/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/325/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/325", "id": 422185774, "node_id": "MDU6SXNzdWU0MjIxODU3NzQ=", "number": 325, "title": "Pyshark doesn't work with tshark v3 in json mode", "user": {"login": "ahgit1", "id": 19227034, "node_id": "MDQ6VXNlcjE5MjI3MDM0", "avatar_url": "https://avatars2.githubusercontent.com/u/19227034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahgit1", "html_url": "https://github.com/ahgit1", "followers_url": "https://api.github.com/users/ahgit1/followers", "following_url": "https://api.github.com/users/ahgit1/following{/other_user}", "gists_url": "https://api.github.com/users/ahgit1/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahgit1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahgit1/subscriptions", "organizations_url": "https://api.github.com/users/ahgit1/orgs", "repos_url": "https://api.github.com/users/ahgit1/repos", "events_url": "https://api.github.com/users/ahgit1/events{/privacy}", "received_events_url": "https://api.github.com/users/ahgit1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-18T12:14:29Z", "updated_at": "2019-05-08T11:23:13Z", "closed_at": "2019-05-08T11:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/324", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/324/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/324/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/324", "id": 419163528, "node_id": "MDU6SXNzdWU0MTkxNjM1Mjg=", "number": 324, "title": "How to dissect mms packet?", "user": {"login": "HuangZhenyang", "id": 17945092, "node_id": "MDQ6VXNlcjE3OTQ1MDky", "avatar_url": "https://avatars2.githubusercontent.com/u/17945092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HuangZhenyang", "html_url": "https://github.com/HuangZhenyang", "followers_url": "https://api.github.com/users/HuangZhenyang/followers", "following_url": "https://api.github.com/users/HuangZhenyang/following{/other_user}", "gists_url": "https://api.github.com/users/HuangZhenyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/HuangZhenyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HuangZhenyang/subscriptions", "organizations_url": "https://api.github.com/users/HuangZhenyang/orgs", "repos_url": "https://api.github.com/users/HuangZhenyang/repos", "events_url": "https://api.github.com/users/HuangZhenyang/events{/privacy}", "received_events_url": "https://api.github.com/users/HuangZhenyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-10T09:06:14Z", "updated_at": "2019-03-24T09:36:51Z", "closed_at": "2019-03-24T09:36:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I need to dissect MMS packets. In tshark,  I can set the profile and use \"-C tshark-mms\" to dissect MMS packets. What should I do to make pyshark have the ability of dissecting mms packets?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/322", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/322/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/322/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/322", "id": 418109138, "node_id": "MDU6SXNzdWU0MTgxMDkxMzg=", "number": 322, "title": "Impossible to use BPF filters with spaces.", "user": {"login": "jnovikov", "id": 13511922, "node_id": "MDQ6VXNlcjEzNTExOTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/13511922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnovikov", "html_url": "https://github.com/jnovikov", "followers_url": "https://api.github.com/users/jnovikov/followers", "following_url": "https://api.github.com/users/jnovikov/following{/other_user}", "gists_url": "https://api.github.com/users/jnovikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnovikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnovikov/subscriptions", "organizations_url": "https://api.github.com/users/jnovikov/orgs", "repos_url": "https://api.github.com/users/jnovikov/repos", "events_url": "https://api.github.com/users/jnovikov/events{/privacy}", "received_events_url": "https://api.github.com/users/jnovikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-07T03:14:21Z", "updated_at": "2019-03-20T22:07:17Z", "closed_at": "2019-03-20T22:07:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When use bpf filter, if filter contains space(something like bpf_filter=\"tcp port 80\") program won't work correctly, because asyncio.create_subprocess_exec will start dumpcap like this:\r\n`dumpcap -q -P -f tcp port 80 -i en0 -w -`\r\nBecause of that, dumpcap wont be started\r\n`dumpcap: Invalid argument: 80`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/321", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/321/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/321/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/321", "id": 415692668, "node_id": "MDU6SXNzdWU0MTU2OTI2Njg=", "number": 321, "title": "Getting field offset within packet doesn't work if use_json is set True", "user": {"login": "Ahmed-Hussein-Karam", "id": 26719865, "node_id": "MDQ6VXNlcjI2NzE5ODY1", "avatar_url": "https://avatars3.githubusercontent.com/u/26719865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ahmed-Hussein-Karam", "html_url": "https://github.com/Ahmed-Hussein-Karam", "followers_url": "https://api.github.com/users/Ahmed-Hussein-Karam/followers", "following_url": "https://api.github.com/users/Ahmed-Hussein-Karam/following{/other_user}", "gists_url": "https://api.github.com/users/Ahmed-Hussein-Karam/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ahmed-Hussein-Karam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ahmed-Hussein-Karam/subscriptions", "organizations_url": "https://api.github.com/users/Ahmed-Hussein-Karam/orgs", "repos_url": "https://api.github.com/users/Ahmed-Hussein-Karam/repos", "events_url": "https://api.github.com/users/Ahmed-Hussein-Karam/events{/privacy}", "received_events_url": "https://api.github.com/users/Ahmed-Hussein-Karam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-28T15:52:40Z", "updated_at": "2019-03-22T15:09:26Z", "closed_at": "2019-03-22T15:09:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description:\r\nIt is possible to get the offset of some field (e.g. source IP address) within the packet. However, this doesn't work if `use_json` is set `True`.\r\n\r\n## Steps to reproduce:\r\n\r\n- Try to print source IP offset when `use_json` is `False`:\r\n\r\n```\r\npackets = pyshark.FileCapture(input_file=pcap_file_path, use_json=False)\r\nprint(packets[0].ip.src.pos) # Prints the offset of source IP\r\n\r\n```\r\n\r\n- Try to print source IP offset when `use_json` is `True`:\r\n\r\n```\r\npackets = pyshark.FileCapture(input_file=pcap_file_path, use_json=True)\r\nprint(packets[0].ip.src.pos) # Prints 'None'!\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/320", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/320/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/320/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/320", "id": 414303117, "node_id": "MDU6SXNzdWU0MTQzMDMxMTc=", "number": 320, "title": "pyshark for capturing USB packets", "user": {"login": "mckay144", "id": 47992410, "node_id": "MDQ6VXNlcjQ3OTkyNDEw", "avatar_url": "https://avatars2.githubusercontent.com/u/47992410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mckay144", "html_url": "https://github.com/mckay144", "followers_url": "https://api.github.com/users/mckay144/followers", "following_url": "https://api.github.com/users/mckay144/following{/other_user}", "gists_url": "https://api.github.com/users/mckay144/gists{/gist_id}", "starred_url": "https://api.github.com/users/mckay144/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mckay144/subscriptions", "organizations_url": "https://api.github.com/users/mckay144/orgs", "repos_url": "https://api.github.com/users/mckay144/repos", "events_url": "https://api.github.com/users/mckay144/events{/privacy}", "received_events_url": "https://api.github.com/users/mckay144/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-25T20:56:23Z", "updated_at": "2020-01-29T15:00:59Z", "closed_at": "2020-01-29T15:00:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use pyShark for capturing USB packets. \r\ntshark -D lists my interfaces, and the one I want to monitor is USBPcap1; HOWEVER, dumpcap -i USBPcap1 fails to open the interface. Therefore, pyshark.LiveCapture() cannot capture any packets.  I am using Windows 10, pyshark 0.4.2.2.  Is there a solution for this?  Thank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/308", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/308/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/308/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/308", "id": 386853022, "node_id": "MDU6SXNzdWUzODY4NTMwMjI=", "number": 308, "title": "Exeption while live capturing in a thread", "user": {"login": "ignagnu", "id": 12729235, "node_id": "MDQ6VXNlcjEyNzI5MjM1", "avatar_url": "https://avatars1.githubusercontent.com/u/12729235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignagnu", "html_url": "https://github.com/ignagnu", "followers_url": "https://api.github.com/users/ignagnu/followers", "following_url": "https://api.github.com/users/ignagnu/following{/other_user}", "gists_url": "https://api.github.com/users/ignagnu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignagnu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignagnu/subscriptions", "organizations_url": "https://api.github.com/users/ignagnu/orgs", "repos_url": "https://api.github.com/users/ignagnu/repos", "events_url": "https://api.github.com/users/ignagnu/events{/privacy}", "received_events_url": "https://api.github.com/users/ignagnu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-03T14:51:50Z", "updated_at": "2019-05-03T14:31:18Z", "closed_at": "2019-05-03T14:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 2.7.15rc1\r\nubuntu 18.04 4.15.0-39-generic\r\nWireshark 2.6.4\r\n\r\nI have this simple code:\r\n```\r\nimport pyshark\r\nfrom collections import deque\r\nimport threading\r\nimport sys\r\n\r\n\r\nclass Sniffer(threading.Thread):\r\n    def __init__(self):\r\n        threading.Thread.__init__(self)\r\n        self.coda = deque()\r\n        self.cap = pyshark.LiveCapture(interface='loopback', only_summaries=1)\r\n\r\n    def listen_for_packet(self, pkt):\r\n        self.coda.append(pkt)\r\n        print(pkt)\r\n        if \"icmp\" in str(pkt):\r\n            print(\"ping\")\r\n        return False\r\n\r\n    def run(self):\r\n        #self.cap.sniff(packet_count=100, timeout=10)\r\n        self.cap.sniff_continuously()\r\n        self.cap.apply_on_packets(self.listen_for_packet)\r\n\r\nif __name__ == \"__main__\":\r\n    monitor = Sniffer()\r\n    monitor.start()\r\n\r\n    while True:\r\n        data = sys.stdin.readline()\r\n        if \"exit\" in data:\r\n            break\r\n    print(\"exit\")\r\n\r\n```\r\nWhen i try to run get this error.\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/home/ignazio/PycharmProjects/gsmtester/modulo_sniffer.py\", line 27, in run\r\n    self.cap.apply_on_packets(self.listen_for_packet)\r\n  File \"/home/ignazio/PycharmProjects/gsmtester/venv/local/lib/python2.7/site-packages/pyshark/capture/capture.py\", line 256, in apply_on_packets\r\n    return self.eventloop.run_until_complete(coro)\r\n  File \"/home/ignazio/PycharmProjects/gsmtester/venv/local/lib/python2.7/site-packages/trollius/base_events.py\", line 300, in run_until_complete\r\n    return future.result()\r\n  File \"/home/ignazio/PycharmProjects/gsmtester/venv/local/lib/python2.7/site-packages/trollius/futures.py\", line 287, in result\r\n    raise self._exception\r\nRuntimeError: There is no current event loop in thread 'Thread-1'\r\n```\r\n\r\nNotice that if i remove the thread part, it works like a sharm. \r\nPs. on python 3 works, but i need python 2 for this project\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/306", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/306/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/306/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/306", "id": 379114526, "node_id": "MDU6SXNzdWUzNzkxMTQ1MjY=", "number": 306, "title": "How to provide a binary packet?", "user": {"login": "wsw70", "id": 1345886, "node_id": "MDQ6VXNlcjEzNDU4ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1345886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsw70", "html_url": "https://github.com/wsw70", "followers_url": "https://api.github.com/users/wsw70/followers", "following_url": "https://api.github.com/users/wsw70/following{/other_user}", "gists_url": "https://api.github.com/users/wsw70/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsw70/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsw70/subscriptions", "organizations_url": "https://api.github.com/users/wsw70/orgs", "repos_url": "https://api.github.com/users/wsw70/repos", "events_url": "https://api.github.com/users/wsw70/events{/privacy}", "received_events_url": "https://api.github.com/users/wsw70/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-09T10:54:00Z", "updated_at": "2018-11-11T10:24:41Z", "closed_at": "2018-11-11T10:24:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I receive binary packets (such as `b'E\\x00\\x00(\\x00\\x00@\\x00@\\x06\\xa2y\\xc0\\xa8\\x0b\\x82\\xc0\\xa8\\x0b\\x84\\xd7\\x9a\\x00\\x16x\\x19\\xd0\\x1f\\x00\\x00\\x00\\x00P\\x04\\x00\\x00\\xf7\\x9f\\x00\\x00'`). This is what `nfq` provides me (a binary version of what is on the wire)\r\n\r\nIs there a way to feed them to pyshark?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/300", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/300/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/300/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/300", "id": 368099979, "node_id": "MDU6SXNzdWUzNjgwOTk5Nzk=", "number": 300, "title": "how to read SIP.SDP Values ?", "user": {"login": "stadelmannj", "id": 24721720, "node_id": "MDQ6VXNlcjI0NzIxNzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/24721720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stadelmannj", "html_url": "https://github.com/stadelmannj", "followers_url": "https://api.github.com/users/stadelmannj/followers", "following_url": "https://api.github.com/users/stadelmannj/following{/other_user}", "gists_url": "https://api.github.com/users/stadelmannj/gists{/gist_id}", "starred_url": "https://api.github.com/users/stadelmannj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stadelmannj/subscriptions", "organizations_url": "https://api.github.com/users/stadelmannj/orgs", "repos_url": "https://api.github.com/users/stadelmannj/repos", "events_url": "https://api.github.com/users/stadelmannj/events{/privacy}", "received_events_url": "https://api.github.com/users/stadelmannj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-09T08:40:27Z", "updated_at": "2018-10-09T08:58:40Z", "closed_at": "2018-10-09T08:58:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pyshark allows you to read out any SIP Header. but can I also read values from SDP body ? for example to filter on Media Port used ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/296", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/296/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/296/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/296", "id": 358240648, "node_id": "MDU6SXNzdWUzNTgyNDA2NDg=", "number": 296, "title": "Suggestion / Query : LiveCapture and (avoiding) the delay while the dumpcap input buffer fills", "user": {"login": "Geoff99", "id": 8340230, "node_id": "MDQ6VXNlcjgzNDAyMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8340230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geoff99", "html_url": "https://github.com/Geoff99", "followers_url": "https://api.github.com/users/Geoff99/followers", "following_url": "https://api.github.com/users/Geoff99/following{/other_user}", "gists_url": "https://api.github.com/users/Geoff99/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geoff99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geoff99/subscriptions", "organizations_url": "https://api.github.com/users/Geoff99/orgs", "repos_url": "https://api.github.com/users/Geoff99/repos", "events_url": "https://api.github.com/users/Geoff99/events{/privacy}", "received_events_url": "https://api.github.com/users/Geoff99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-07T23:31:13Z", "updated_at": "2018-09-24T01:44:53Z", "closed_at": "2018-09-24T01:44:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### LiveCapture and (avoiding) the delay while the dumpcap input buffer fills\r\n\r\nHi @KimiNewt ,\r\n\r\nI am learning lots by reading through the source code of this impressive project,\r\nthough I still have a way to go before I really understand it (and `asyncio`) properly.\r\nMany thanks indeed for all your work on it ! \r\n\r\nThis is a question about the design of LiveCapture / suggestion for an improvement (see the proposed `LiveCaptureNow` subclass of `LiveCapture` listed below), \r\nwhich might help with issues #278 and #254.  Not urgent (for me, as I have an\r\napproach that seems to work) so feel free to ignore, and close this issue if \r\nthere are other priorities that require your attention.\r\n\r\n### Background\r\n\r\nI am using pyshark to listen to an IoT sensor, which transmits small (only 98 bytes of payload)\r\nTCP messages infrequently (every 5 minutes).  I use a bpf_filter setting to \r\nrestrict attention to only the IoT sensor's transmissions (ie I filter out other \r\nnetwork traffic as soon as possible). \r\n\r\n`LiveCapture` uses two subprocesses,\r\n\r\n* `dumpcap` extracts relevant transmissions and then sends them, via a pipe to \r\n* `tshark`.\r\n\r\nAs explained in #278, `dumpcap` waits until its input buffer is full, before \r\nflushing the consolidated traffic to `tshark'.  \r\n\r\nIn my application, that results in a wait of about an hour and a half while \r\ntraffic accumulates in the `dumpcap` input buffer - at which point I receive \r\nupwards of 20 sensor readings in a few seconds - before another wait of an hour \r\nand a half for my next batch of data.\r\n\r\n(Aside, it took me a while before I realised what was happening, \r\ninitially I thought I was failing to capture any packets at all).\r\n\r\nIn practice, I would rather see individual IoT sensor messages every 5 \r\nminutes, as they are sent.\r\n\r\nI have \"solved\" my problem by creating a subclass of `LiveCapture`, \r\nwhich I have called `LiveCaptureNow`.  It works by eliminating the `dumpcap` process,\r\nand using only `tshark` (internally `tshark` appears to run its own `dumpcap` \r\nsubprocess, but `tshark` seems able to instruct its `dumpcap` subprocess to operate \r\nin unbuffered mode.)  See below for the code.\r\n\r\n### The design question about LiveCapture\r\n\r\nIs there some underlying reason that I am missing that makes it advisable to \r\nseparate the `dumpcap` and `tshark` steps the way that pyshark currently does?\r\nFor example, is my scenario (small infrequent packets on a \r\nrelatively quiet network) atypical, and what works for me may be horribly \r\ninefficient in other settings? Or something else entirely (perhaps related to \r\n`asyncio` which I am still working to understand) ?\r\n\r\n### The suggested improvement\r\n\r\nPerhaps (an improved) version of `LiveCaptureNow`, with suitable warnings (based \r\non the answer to the question above) might be added to pyshark for use in \r\nscenarios like the mine?\r\n\r\n### live_capture_now.py\r\n\r\n```\r\nfrom pyshark.capture.live_capture import LiveCapture\r\n\r\nimport asyncio\r\n\r\nclass LiveCaptureNow(LiveCapture):\r\n    \"\"\"\r\n    Live capture on a network interface using only tshark, not dumpcap.\r\n    \r\n    So as to avoid the (long) delays while the dumpcap input buffer fills when \r\n    listening for small infrequent packets on a quiet network.\r\n    \"\"\" \r\n\r\n    # Just default to LiveCapture.__init__\r\n\r\n    def get_parameters(self, packet_count=None):\r\n        \"\"\"\r\n        Returns the special tshark parameters to be used according to the configuration of this class.\r\n        \"\"\"\r\n\r\n        # Use super(LiveCapture ...) NOT super(LiveCaptureNow ...), because that would use dumpcap,\r\n        # which is what I am trying to avoid!\r\n        params = super(LiveCapture, self).get_parameters(packet_count=packet_count)\r\n\r\n        # Don't report packet counts, use pcap format\r\n        params += [\"-q\", \"-P\"]\r\n        if self.bpf_filter:\r\n            params += ['-f', self.bpf_filter]\r\n        if self.monitor_mode:\r\n            params += ['-I']\r\n        for interface in self.interfaces:\r\n            params += ['-i', interface]\r\n        # Send view of decoded output to STDOUT even if -w option is capturing raw pcap output as well\r\n        params += ['-V']\r\n        return params\r\n\r\n    async def _get_tshark_process(self, packet_count=None, stdin=None):\r\n        tshark = await super(LiveCapture, self)._get_tshark_process(packet_count=packet_count, stdin=stdin)\r\n        return tshark\r\n```\r\n### My setup\r\n\r\nIn case it is relevant:\r\n\r\nI am using a Raspberry Pi model 3B, with Raspbian stretch as the operating system.\r\n\r\nI am using `pyshark 0.4.1`, downloaded using pip3.\r\nand\r\n`tshark 2.2.6`, downloaded via apt-get\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/293", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/293/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/293/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/293", "id": 356371135, "node_id": "MDU6SXNzdWUzNTYzNzExMzU=", "number": 293, "title": "Windows 8.1 tshark crash ", "user": {"login": "hanisyuhada", "id": 36223917, "node_id": "MDQ6VXNlcjM2MjIzOTE3", "avatar_url": "https://avatars1.githubusercontent.com/u/36223917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanisyuhada", "html_url": "https://github.com/hanisyuhada", "followers_url": "https://api.github.com/users/hanisyuhada/followers", "following_url": "https://api.github.com/users/hanisyuhada/following{/other_user}", "gists_url": "https://api.github.com/users/hanisyuhada/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanisyuhada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanisyuhada/subscriptions", "organizations_url": "https://api.github.com/users/hanisyuhada/orgs", "repos_url": "https://api.github.com/users/hanisyuhada/repos", "events_url": "https://api.github.com/users/hanisyuhada/events{/privacy}", "received_events_url": "https://api.github.com/users/hanisyuhada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-03T06:19:08Z", "updated_at": "2018-09-04T09:13:52Z", "closed_at": "2018-09-04T09:13:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/289", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/289/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/289/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/289", "id": 351880676, "node_id": "MDU6SXNzdWUzNTE4ODA2NzY=", "number": 289, "title": "(Very minor) typo in capture.py, affecting debug message", "user": {"login": "Geoff99", "id": 8340230, "node_id": "MDQ6VXNlcjgzNDAyMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8340230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geoff99", "html_url": "https://github.com/Geoff99", "followers_url": "https://api.github.com/users/Geoff99/followers", "following_url": "https://api.github.com/users/Geoff99/following{/other_user}", "gists_url": "https://api.github.com/users/Geoff99/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geoff99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geoff99/subscriptions", "organizations_url": "https://api.github.com/users/Geoff99/orgs", "repos_url": "https://api.github.com/users/Geoff99/repos", "events_url": "https://api.github.com/users/Geoff99/events{/privacy}", "received_events_url": "https://api.github.com/users/Geoff99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-19T07:16:48Z", "updated_at": "2019-03-24T09:21:51Z", "closed_at": "2019-03-24T09:21:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @KimiNewt \r\n\r\nFirst, many thanks for this project.  I'm still in the early stages of learning how to use it, but mightily impressed by what I've seen so far.\r\n\r\nI believe there is a minor typo in the current line 375 of capture.py.\r\n\r\nIt currently reads\r\n```\r\nself._log.debug('%s subprocess created', process_name)\r\n```\r\n\r\nI think it should be\r\n```\r\nself._log.debug('%s subprocess created' % process_name)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/288", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/288/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/288/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/288", "id": 348833288, "node_id": "MDU6SXNzdWUzNDg4MzMyODg=", "number": 288, "title": "eventloop parameter missing from Capture subclasses", "user": {"login": "mtis88", "id": 41592005, "node_id": "MDQ6VXNlcjQxNTkyMDA1", "avatar_url": "https://avatars1.githubusercontent.com/u/41592005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtis88", "html_url": "https://github.com/mtis88", "followers_url": "https://api.github.com/users/mtis88/followers", "following_url": "https://api.github.com/users/mtis88/following{/other_user}", "gists_url": "https://api.github.com/users/mtis88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtis88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtis88/subscriptions", "organizations_url": "https://api.github.com/users/mtis88/orgs", "repos_url": "https://api.github.com/users/mtis88/repos", "events_url": "https://api.github.com/users/mtis88/events{/privacy}", "received_events_url": "https://api.github.com/users/mtis88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-08T18:05:45Z", "updated_at": "2018-08-11T07:55:25Z", "closed_at": "2018-08-11T07:55:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The eventloop parameter is only present in the Capture \\_\\_init\\_\\_, it\u2019s missing from all subclasses. \r\n\r\nI need to pass in my own loop to LiveCapture as pyshark it is not running on the main thread. I\u2019ve had to override Capture._setup_eventloop() to achieve this for now. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/287", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/287/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/287/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/287", "id": 347408601, "node_id": "MDU6SXNzdWUzNDc0MDg2MDE=", "number": 287, "title": "Duplicate field names in packet layer", "user": {"login": "AlbertWigmore", "id": 7685170, "node_id": "MDQ6VXNlcjc2ODUxNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7685170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlbertWigmore", "html_url": "https://github.com/AlbertWigmore", "followers_url": "https://api.github.com/users/AlbertWigmore/followers", "following_url": "https://api.github.com/users/AlbertWigmore/following{/other_user}", "gists_url": "https://api.github.com/users/AlbertWigmore/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlbertWigmore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlbertWigmore/subscriptions", "organizations_url": "https://api.github.com/users/AlbertWigmore/orgs", "repos_url": "https://api.github.com/users/AlbertWigmore/repos", "events_url": "https://api.github.com/users/AlbertWigmore/events{/privacy}", "received_events_url": "https://api.github.com/users/AlbertWigmore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-03T14:00:57Z", "updated_at": "2019-10-09T09:25:26Z", "closed_at": "2018-08-06T10:54:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently if there is a duplicate field name within a layer in the packet only one shows up within the layer object.\r\n\r\nThis problem occured when looking at something like GSM SMS where tshark reassembles the message fragments together in the last fragment. \r\n\r\n```xml\r\n<field name=\"gsm_sms.sms_text\" showname=\"SMS text: message 1\" size=\"\" pos=\"\" show=\"\" value=\"\"/>\r\n<field name=\"gsm_sms.sms_text\" showname=\"SMS text: message 2\" size=\"\" pos=\"\" show=\"\" value=\"\"/>\r\n<field name=\"gsm_sms.sms_text\" showname=\"SMS text: message 3\" size=\"\" pos=\"\" show=\"\" value=\"\"/>\r\n```\r\n(I'm unable to share the actual XML I have in full so I've just written out the bit where the problem arises following the same structure but removing data)\r\n\r\nI have managed to solve it by specifying tshark not to reassemble GSM_SMS packets using the argument: \r\n```python\r\npyshark.FileCapture(\r\n    'file.pcap',\r\n    override_prefs={'gsm_sms.reassemble': 'false'},\r\n)\r\n```\r\nIs it worth changing the behaviour of the code to deal with issues like this or leave it up to the user to specify extra arguments to get around it. Not sure whether there are any cases where this can happen where extra arguments wont solve the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/286", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/286/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/286/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/286", "id": 346271003, "node_id": "MDU6SXNzdWUzNDYyNzEwMDM=", "number": 286, "title": "Want to filter probe requests to only telephones", "user": {"login": "tdwoods", "id": 23199494, "node_id": "MDQ6VXNlcjIzMTk5NDk0", "avatar_url": "https://avatars3.githubusercontent.com/u/23199494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdwoods", "html_url": "https://github.com/tdwoods", "followers_url": "https://api.github.com/users/tdwoods/followers", "following_url": "https://api.github.com/users/tdwoods/following{/other_user}", "gists_url": "https://api.github.com/users/tdwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdwoods/subscriptions", "organizations_url": "https://api.github.com/users/tdwoods/orgs", "repos_url": "https://api.github.com/users/tdwoods/repos", "events_url": "https://api.github.com/users/tdwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/tdwoods/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-31T16:48:06Z", "updated_at": "2018-08-06T10:59:15Z", "closed_at": "2018-08-06T10:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking for a way to distinguish the probe requests of mobile phones from the rest of the probe requests gathered by pyshark. In my packet handler I want to add some code to distinguish the packets but I am finding it difficult to locate a packet field that can help me. \r\n\r\nI know I could do it by vendor/OUI but I would still get laptops or computers. Is there any way to solely get mobile phones?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/281", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/281/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/281/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/281", "id": 344513607, "node_id": "MDU6SXNzdWUzNDQ1MTM2MDc=", "number": 281, "title": "Random Mac Resolution", "user": {"login": "tdwoods", "id": 23199494, "node_id": "MDQ6VXNlcjIzMTk5NDk0", "avatar_url": "https://avatars3.githubusercontent.com/u/23199494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdwoods", "html_url": "https://github.com/tdwoods", "followers_url": "https://api.github.com/users/tdwoods/followers", "following_url": "https://api.github.com/users/tdwoods/following{/other_user}", "gists_url": "https://api.github.com/users/tdwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdwoods/subscriptions", "organizations_url": "https://api.github.com/users/tdwoods/orgs", "repos_url": "https://api.github.com/users/tdwoods/repos", "events_url": "https://api.github.com/users/tdwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/tdwoods/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-25T16:17:42Z", "updated_at": "2018-08-06T11:00:00Z", "closed_at": "2018-08-06T11:00:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not really an issue, but some thought. Since iOS 8 and Android Marshmellow, most iPhones and some Android devices are using random locally assigned mac addresses when they broadcast probe requests. \r\n\r\nI am not familiar with how they actually randomize the addresses but is it still possible to resolve the vendor even with this randomization?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/275", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/275/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/275/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/275", "id": 341311334, "node_id": "MDU6SXNzdWUzNDEzMTEzMzQ=", "number": 275, "title": "Timeout Exception", "user": {"login": "Trother555", "id": 17688608, "node_id": "MDQ6VXNlcjE3Njg4NjA4", "avatar_url": "https://avatars1.githubusercontent.com/u/17688608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Trother555", "html_url": "https://github.com/Trother555", "followers_url": "https://api.github.com/users/Trother555/followers", "following_url": "https://api.github.com/users/Trother555/following{/other_user}", "gists_url": "https://api.github.com/users/Trother555/gists{/gist_id}", "starred_url": "https://api.github.com/users/Trother555/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Trother555/subscriptions", "organizations_url": "https://api.github.com/users/Trother555/orgs", "repos_url": "https://api.github.com/users/Trother555/repos", "events_url": "https://api.github.com/users/Trother555/events{/privacy}", "received_events_url": "https://api.github.com/users/Trother555/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-15T10:46:07Z", "updated_at": "2018-11-03T00:24:39Z", "closed_at": "2018-07-16T12:43:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following exception running sniff with timeout:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pyshark\\capture\\capture.py\", line 132, in load_packets\r\n    try:\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pyshark\\capture\\capture.py\", line 247, in apply_on_packets\r\n    coro = asyncio.wait_for(coro, timeout)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\asyncio\\base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\asyncio\\tasks.py\", line 362, in wait_for\r\n    raise futures.TimeoutError()\r\nconcurrent.futures._base.TimeoutError\r\n```\r\n\r\nI've checked capture.py and seen that it tries code that excepts TimeoutError and passes this exception:\r\n ```\r\ntry:\r\n            self.apply_on_packets(keep_packet, timeout=timeout)\r\n            self.loaded = True\r\nexcept TimeoutError:\r\n            pass\r\n```\r\n\r\nBut the thing is that the code throws not TimeoutError, but concurrent.futures._base.TimeoutError. So I worked this problem around by adding this line to capture.py:\r\n\r\n`from concurrent.futures._base import TimeoutError`\r\n\r\nI'd like to know if this is a bug or I'm using it wrong or my python/platform is not supported?\r\n\r\nI'm using\r\n\r\n`Python 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)] on win32`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/273", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/273/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/273/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/273", "id": 337992976, "node_id": "MDU6SXNzdWUzMzc5OTI5NzY=", "number": 273, "title": "Can we update pypi to the 0.4.1 version for python 3.5+", "user": {"login": "Wheaties466", "id": 5346303, "node_id": "MDQ6VXNlcjUzNDYzMDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5346303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wheaties466", "html_url": "https://github.com/Wheaties466", "followers_url": "https://api.github.com/users/Wheaties466/followers", "following_url": "https://api.github.com/users/Wheaties466/following{/other_user}", "gists_url": "https://api.github.com/users/Wheaties466/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wheaties466/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wheaties466/subscriptions", "organizations_url": "https://api.github.com/users/Wheaties466/orgs", "repos_url": "https://api.github.com/users/Wheaties466/repos", "events_url": "https://api.github.com/users/Wheaties466/events{/privacy}", "received_events_url": "https://api.github.com/users/Wheaties466/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-03T17:35:20Z", "updated_at": "2018-07-05T06:42:09Z", "closed_at": "2018-07-05T06:42:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://pypi.org/project/pyshark/#history\r\n\r\nits frustrating that this is not working with 3.7.0 on a new python install on windows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/270", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/270/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/270/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/270", "id": 335641144, "node_id": "MDU6SXNzdWUzMzU2NDExNDQ=", "number": 270, "title": "Parsing data from raw socket instead of pcap file or live capture", "user": {"login": "Phirotest", "id": 39508142, "node_id": "MDQ6VXNlcjM5NTA4MTQy", "avatar_url": "https://avatars2.githubusercontent.com/u/39508142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phirotest", "html_url": "https://github.com/Phirotest", "followers_url": "https://api.github.com/users/Phirotest/followers", "following_url": "https://api.github.com/users/Phirotest/following{/other_user}", "gists_url": "https://api.github.com/users/Phirotest/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phirotest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phirotest/subscriptions", "organizations_url": "https://api.github.com/users/Phirotest/orgs", "repos_url": "https://api.github.com/users/Phirotest/repos", "events_url": "https://api.github.com/users/Phirotest/events{/privacy}", "received_events_url": "https://api.github.com/users/Phirotest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-26T03:05:33Z", "updated_at": "2018-07-05T06:42:33Z", "closed_at": "2018-07-05T06:42:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have coded a sniffer that uses a raw socket to listen for packets. However, is it possible to make use of Pyshark library to identify the protocols in the transport layers(http,ftp,https) for both TCP and UDP that the packets is coming from or connecting to ?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/269", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/269/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/269/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/269", "id": 334941607, "node_id": "MDU6SXNzdWUzMzQ5NDE2MDc=", "number": 269, "title": "raw bytes of a packet", "user": {"login": "dreizehnutters", "id": 7869385, "node_id": "MDQ6VXNlcjc4NjkzODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7869385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreizehnutters", "html_url": "https://github.com/dreizehnutters", "followers_url": "https://api.github.com/users/dreizehnutters/followers", "following_url": "https://api.github.com/users/dreizehnutters/following{/other_user}", "gists_url": "https://api.github.com/users/dreizehnutters/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreizehnutters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreizehnutters/subscriptions", "organizations_url": "https://api.github.com/users/dreizehnutters/orgs", "repos_url": "https://api.github.com/users/dreizehnutters/repos", "events_url": "https://api.github.com/users/dreizehnutters/events{/privacy}", "received_events_url": "https://api.github.com/users/dreizehnutters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-22T16:26:21Z", "updated_at": "2018-06-25T07:11:02Z", "closed_at": "2018-06-25T07:11:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nis it possible to receive the complete raw bytes of a given packet like _scapy_ does it ?\r\n```\r\nbytes(PCAP[0])\r\n> \"\\x01\\x15N\\x00\\x00\\x01\\x08\\x00\\x06\\x9d8@\\x81\\x00\\xe0\\x00\\x88\\xe3\\x00\\x01\\x02\\x12\\xa0\\x00\\x00\\x19\\x99@Iw\\x00\\x00\\x00\\x01\\x00\\x03\\x00F\\x94>\\x01\\x12\\x0e,\\xc3\\xd6\\x87\\xfex\\x9e\\x03\\xa1\\xac\\xdb\\xe5\\xbf\\xcb\\xbc'\\xb6\\x7f\\x06\\x08\\x00\\x06\\x00\\x00\\x00\\x00\\x00\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/267", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/267/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/267/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/267", "id": 333355441, "node_id": "MDU6SXNzdWUzMzMzNTU0NDE=", "number": 267, "title": "Apply a function to each packet while LiveCapture", "user": {"login": "dreizehnutters", "id": 7869385, "node_id": "MDQ6VXNlcjc4NjkzODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7869385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreizehnutters", "html_url": "https://github.com/dreizehnutters", "followers_url": "https://api.github.com/users/dreizehnutters/followers", "following_url": "https://api.github.com/users/dreizehnutters/following{/other_user}", "gists_url": "https://api.github.com/users/dreizehnutters/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreizehnutters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreizehnutters/subscriptions", "organizations_url": "https://api.github.com/users/dreizehnutters/orgs", "repos_url": "https://api.github.com/users/dreizehnutters/repos", "events_url": "https://api.github.com/users/dreizehnutters/events{/privacy}", "received_events_url": "https://api.github.com/users/dreizehnutters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-18T16:57:29Z", "updated_at": "2018-06-18T17:19:51Z", "closed_at": "2018-06-18T17:19:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to have a fully _live_ behavior of my system and want to apply a function to each sniffed packet. The documentation looked as if this is not possible and the capture has to be done before each packet can be handled. \r\nScapy is able to handle this kind of behaviour (because they dont rely on tshark?)\r\n```\r\nfrom scapy.all import sniff\r\ndef foo(packet):\r\n    print(packet)\r\nsniff(iface='eth1',prn=foo)\r\n```\r\ndesired functionality\r\n```\r\nfrom pyshark import LiveCapture\r\ndef bar(packet):\r\n    print(packet)\r\ncapture = LiveCapture(interface='eth1')\r\ncapture.sniff(timeout=50,prn=bar)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/265", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/265/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/265/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/265", "id": 327663000, "node_id": "MDU6SXNzdWUzMjc2NjMwMDA=", "number": 265, "title": "How to stop LiveCapture, when timeout period still remains ?", "user": {"login": "nariram", "id": 17214546, "node_id": "MDQ6VXNlcjE3MjE0NTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/17214546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nariram", "html_url": "https://github.com/nariram", "followers_url": "https://api.github.com/users/nariram/followers", "following_url": "https://api.github.com/users/nariram/following{/other_user}", "gists_url": "https://api.github.com/users/nariram/gists{/gist_id}", "starred_url": "https://api.github.com/users/nariram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nariram/subscriptions", "organizations_url": "https://api.github.com/users/nariram/orgs", "repos_url": "https://api.github.com/users/nariram/repos", "events_url": "https://api.github.com/users/nariram/events{/privacy}", "received_events_url": "https://api.github.com/users/nariram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-30T10:09:29Z", "updated_at": "2018-06-11T06:31:28Z", "closed_at": "2018-06-11T06:31:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "cap = pyshark.LiveCapture(interface = \"wlan0\", outputfile =  \"xyz.pcap\")\r\ncap.sniff(timeout = 100)\r\n\r\nHere, I don't want to capture upto 100 sec time, can I stop live capturing in between the timeout period.\r\nI used 'pkill' except this, any other ways to stop the LiveCapture.\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/264", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/264/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/264/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/264", "id": 323280371, "node_id": "MDU6SXNzdWUzMjMyODAzNzE=", "number": 264, "title": "DATA layer", "user": {"login": "fazega", "id": 2405528, "node_id": "MDQ6VXNlcjI0MDU1Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2405528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fazega", "html_url": "https://github.com/fazega", "followers_url": "https://api.github.com/users/fazega/followers", "following_url": "https://api.github.com/users/fazega/following{/other_user}", "gists_url": "https://api.github.com/users/fazega/gists{/gist_id}", "starred_url": "https://api.github.com/users/fazega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fazega/subscriptions", "organizations_url": "https://api.github.com/users/fazega/orgs", "repos_url": "https://api.github.com/users/fazega/repos", "events_url": "https://api.github.com/users/fazega/events{/privacy}", "received_events_url": "https://api.github.com/users/fazega/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-15T15:54:52Z", "updated_at": "2018-06-25T07:11:42Z", "closed_at": "2018-06-25T07:11:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why does the DATA layer have a special treatment in layer.py ?\r\nIf I do a tshark capture with -V I can see all raw data of the packets. Why can't pyshark get this data ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/263", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/263/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/263/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/263", "id": 321927190, "node_id": "MDU6SXNzdWUzMjE5MjcxOTA=", "number": 263, "title": "Pyshark stops Pycharm debugger from working", "user": {"login": "RichParker734", "id": 18616856, "node_id": "MDQ6VXNlcjE4NjE2ODU2", "avatar_url": "https://avatars1.githubusercontent.com/u/18616856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RichParker734", "html_url": "https://github.com/RichParker734", "followers_url": "https://api.github.com/users/RichParker734/followers", "following_url": "https://api.github.com/users/RichParker734/following{/other_user}", "gists_url": "https://api.github.com/users/RichParker734/gists{/gist_id}", "starred_url": "https://api.github.com/users/RichParker734/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RichParker734/subscriptions", "organizations_url": "https://api.github.com/users/RichParker734/orgs", "repos_url": "https://api.github.com/users/RichParker734/repos", "events_url": "https://api.github.com/users/RichParker734/events{/privacy}", "received_events_url": "https://api.github.com/users/RichParker734/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-10T13:15:41Z", "updated_at": "2018-07-09T10:49:58Z", "closed_at": "2018-06-30T07:09:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am on a Windows 10 machine, using Python 2.7.11 (32Bit), PyShark, and Pycharm as an IDE.  If I include pyshark, place a breakpoint and run the program in the debugger, it will break on the breakpoint.  but try to step after that, it never returns.  This only happens with PyShark for me.\r\n\r\nex: \r\nimport pyshark\r\na = 1\r\nprint a\r\n\r\nset breakpoint on a=1, debug program.  It stops at a=1.  Press 'step' and it never returns.  Remove the import pyshark, and it works as expected.   Also if I use pdb instead, it steps fine even with the include, so looks like something in the import is stalling the PyCharm debugger.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/257", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/257/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/257/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/257", "id": 313494650, "node_id": "MDU6SXNzdWUzMTM0OTQ2NTA=", "number": 257, "title": "pyshark -> scapy interface using raw data and #188", "user": {"login": "ZackAlfakir", "id": 2652713, "node_id": "MDQ6VXNlcjI2NTI3MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2652713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZackAlfakir", "html_url": "https://github.com/ZackAlfakir", "followers_url": "https://api.github.com/users/ZackAlfakir/followers", "following_url": "https://api.github.com/users/ZackAlfakir/following{/other_user}", "gists_url": "https://api.github.com/users/ZackAlfakir/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZackAlfakir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZackAlfakir/subscriptions", "organizations_url": "https://api.github.com/users/ZackAlfakir/orgs", "repos_url": "https://api.github.com/users/ZackAlfakir/repos", "events_url": "https://api.github.com/users/ZackAlfakir/events{/privacy}", "received_events_url": "https://api.github.com/users/ZackAlfakir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-11T21:27:44Z", "updated_at": "2020-02-25T12:44:09Z", "closed_at": "2018-06-25T07:12:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Are you aware of any method of converting a pyshark packet into a scapy packet? I have software built around pyshark but I need some of scapy's features. \r\n\r\nI looked into #188 and put that on a fork, but I was hoping to find a way to get the binary out. It instead seems to just have a \\<LAYER>_RAW duplicated in each packet:\r\n\r\n```\r\nIn [22]: p.layers\r\nOut[22]:\r\n[<RADIOTAP Layer>,\r\n <WLAN_RADIO Layer>,\r\n <WLAN Layer>,\r\n <RADIOTAP_RAW Layer>,\r\n <WLAN_MGT_RAW Layer>,\r\n <WLAN_MGT Layer>,\r\n <FRAME_RAW Layer>,\r\n <WLAN_RAW Layer>]\r\n```\r\n\r\nI need some way of getting the bytes so I can dump them into the scapy constructor. I am willing to work on this PR if advice is given.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/256", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/256/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/256/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/256", "id": 311555173, "node_id": "MDU6SXNzdWUzMTE1NTUxNzM=", "number": 256, "title": "Getting raw data from HTTP packages", "user": {"login": "Tzeny", "id": 6255363, "node_id": "MDQ6VXNlcjYyNTUzNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6255363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tzeny", "html_url": "https://github.com/Tzeny", "followers_url": "https://api.github.com/users/Tzeny/followers", "following_url": "https://api.github.com/users/Tzeny/following{/other_user}", "gists_url": "https://api.github.com/users/Tzeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tzeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tzeny/subscriptions", "organizations_url": "https://api.github.com/users/Tzeny/orgs", "repos_url": "https://api.github.com/users/Tzeny/repos", "events_url": "https://api.github.com/users/Tzeny/events{/privacy}", "received_events_url": "https://api.github.com/users/Tzeny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-05T10:27:11Z", "updated_at": "2018-04-16T07:18:48Z", "closed_at": "2018-04-16T07:18:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to use Pyshark to parse data from a tcp dump from the Android emulator. I don't know how to get the raw data from the packets. Can you point me in the right direction?\r\n\r\nThis is what I have so far:\r\n\r\n        cap = pyshark.FileCapture(self._tcpdump_path, display_filter = 'http.request.method')\r\n\r\n        requests = {}\r\n        data = {}\r\n        \r\n        for c in cap:\r\n            try:\r\n                if c.http.request_method in requests:\r\n                    if c.http.request_full_uri in requests[c.http.request_method]:\r\n                        requests[c.http.request_method][c.http.request_full_uri] += 1\r\n                    else:\r\n                        requests[c.http.request_method][c.http.request_full_uri] = 1\r\n                else:\r\n                    requests[c.http.request_method] = {}\r\n                    requests[c.http.request_method][c.http.request_full_uri] = 1\r\n                #data[c.http.request_full_uri] = c.raw?\r\n                #no idea how to get the raw data\r\n            except:\r\n                pass\r\n\r\nI would be interested in getting the raw data for the first request to each uri. Thank you for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/251", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/251/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/251/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/251", "id": 300084884, "node_id": "MDU6SXNzdWUzMDAwODQ4ODQ=", "number": 251, "title": "How is the Python3 status now?", "user": {"login": "laixintao", "id": 9675939, "node_id": "MDQ6VXNlcjk2NzU5Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9675939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laixintao", "html_url": "https://github.com/laixintao", "followers_url": "https://api.github.com/users/laixintao/followers", "following_url": "https://api.github.com/users/laixintao/following{/other_user}", "gists_url": "https://api.github.com/users/laixintao/gists{/gist_id}", "starred_url": "https://api.github.com/users/laixintao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laixintao/subscriptions", "organizations_url": "https://api.github.com/users/laixintao/orgs", "repos_url": "https://api.github.com/users/laixintao/repos", "events_url": "https://api.github.com/users/laixintao/events{/privacy}", "received_events_url": "https://api.github.com/users/laixintao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-26T01:46:24Z", "updated_at": "2018-02-28T15:33:15Z", "closed_at": "2018-02-28T14:54:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, @KimiNewt , thanks for your work!\r\n\r\nI work on Python3. I have forked your repo and wanted to merge python3 branch into master. but looks like there are few conflicts here: https://github.com/laixintao/pyshark/pull/1/files\r\n\r\nShould I use Python3 branch or master?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/248", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/248/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/248/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/248", "id": 297336107, "node_id": "MDU6SXNzdWUyOTczMzYxMDc=", "number": 248, "title": "Windows 10 tshark crash (raw packet data)", "user": {"login": "AMNeves", "id": 15896513, "node_id": "MDQ6VXNlcjE1ODk2NTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/15896513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AMNeves", "html_url": "https://github.com/AMNeves", "followers_url": "https://api.github.com/users/AMNeves/followers", "following_url": "https://api.github.com/users/AMNeves/following{/other_user}", "gists_url": "https://api.github.com/users/AMNeves/gists{/gist_id}", "starred_url": "https://api.github.com/users/AMNeves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AMNeves/subscriptions", "organizations_url": "https://api.github.com/users/AMNeves/orgs", "repos_url": "https://api.github.com/users/AMNeves/repos", "events_url": "https://api.github.com/users/AMNeves/events{/privacy}", "received_events_url": "https://api.github.com/users/AMNeves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-02-15T05:49:17Z", "updated_at": "2019-06-09T17:08:41Z", "closed_at": "2019-06-09T17:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running:\r\n\r\n```\r\nimport pyshark\r\ncapture = pyshark.LiveCapture(interface=\"Local Area Connection\")\r\ncapture.set_debug()\r\ncapture.sniff(timeout=10)\r\ncapture\r\n```\r\n\r\ni seem to have a problem, i cant sniff any packets and tshark crashes with output:\r\n\r\n```\r\nPS C:\\Users\\amnev\\Documents\\anomaly shark> python .\\packets.py\r\n[2018-02-15 05:46:03.259102] DEBUG: LiveCapture: %s subprocess created\r\n[2018-02-15 05:46:03.260070] DEBUG: LiveCapture: Creating TShark subprocess with parameter\r\n -r -\r\n[2018-02-15 05:46:03.274069] DEBUG: LiveCapture: %s subprocess created\r\n[2018-02-15 05:46:03.275069] DEBUG: LiveCapture: Starting to go through packets\r\ntshark: You can't write both raw packet data and dissected packets to the standard output.\r\n```\r\n\r\nseems to be a problem with the output of tshark any ideas how to solve this i cant run the simple capture code\r\n\r\n**UPDATE**: i can sniff with tshark just not with pyshark", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/247", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/247/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/247/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/247", "id": 290076688, "node_id": "MDU6SXNzdWUyOTAwNzY2ODg=", "number": 247, "title": "`NoneType` object has no attribute `get_debug`", "user": {"login": "skgbanga", "id": 8398696, "node_id": "MDQ6VXNlcjgzOTg2OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8398696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skgbanga", "html_url": "https://github.com/skgbanga", "followers_url": "https://api.github.com/users/skgbanga/followers", "following_url": "https://api.github.com/users/skgbanga/following{/other_user}", "gists_url": "https://api.github.com/users/skgbanga/gists{/gist_id}", "starred_url": "https://api.github.com/users/skgbanga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skgbanga/subscriptions", "organizations_url": "https://api.github.com/users/skgbanga/orgs", "repos_url": "https://api.github.com/users/skgbanga/repos", "events_url": "https://api.github.com/users/skgbanga/events{/privacy}", "received_events_url": "https://api.github.com/users/skgbanga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-19T19:07:49Z", "updated_at": "2018-02-03T18:46:11Z", "closed_at": "2018-02-03T18:46:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am curious if anyone has seen this before.\r\n\r\nI have ~20 pcap files, and I am going through all of them via a `ThreadPool` and adding the packets in a `PriorityQueue`. So here is the rough algorithm:\r\n\r\n```py\r\nqueue = Queue.PriorityQueue()\r\ndef worker(f):\r\n  data = pyshark.FileCapture(f)\r\n  for pkt in data:\r\n    queue.put((pkt.sniff_time, pkt))\r\n```\r\n\r\n`for pkt in data` occasionally (not every time) throws an `AttributeError` with the message `NoneType object has no attribute get_debug`\r\n\r\nIf I catch this exception, and do nothing, my queue has correct number of elements.\r\n\r\nSo my guess is something happens at the end of the file. Wondering if anyone has seen something like this.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/245", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/245/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/245/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/245", "id": 286864962, "node_id": "MDU6SXNzdWUyODY4NjQ5NjI=", "number": 245, "title": "Can't run .exe with pyshark imported", "user": {"login": "Meshi28", "id": 35236960, "node_id": "MDQ6VXNlcjM1MjM2OTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/35236960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Meshi28", "html_url": "https://github.com/Meshi28", "followers_url": "https://api.github.com/users/Meshi28/followers", "following_url": "https://api.github.com/users/Meshi28/following{/other_user}", "gists_url": "https://api.github.com/users/Meshi28/gists{/gist_id}", "starred_url": "https://api.github.com/users/Meshi28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Meshi28/subscriptions", "organizations_url": "https://api.github.com/users/Meshi28/orgs", "repos_url": "https://api.github.com/users/Meshi28/repos", "events_url": "https://api.github.com/users/Meshi28/events{/privacy}", "received_events_url": "https://api.github.com/users/Meshi28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-08T19:53:46Z", "updated_at": "2020-06-11T00:55:27Z", "closed_at": "2018-01-09T19:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been using pyshark to build a program that parses a .pcap file and then returns certain information. The script itself all works fine and when running from IDLE it does as it's supposed to. However now I want to freeze the code into an .exe so I can distrubute it to a few workstations who don't have Python installed. \r\n\r\nI'm using pyinstaller to create the .exe (works with my other projects) which puts it all together, however when running it I get the below. \r\n\r\nTraceback (most recent call last):\r\n  File \"Networking.py\", line 41, in <module>\r\n    udp1 = udp()\r\n  File \"Networking.py\", line 17, in udp\r\n    for pkts in cap:\r\n  File \"site-packages\\pyshark\\capture\\capture.py\", line 208, in _packets_from_tshark_sync\r\n  File \"site-packages\\trollius\\base_events.py\", line 300, in run_until_complete\r\n  File \"site-packages\\trollius\\futures.py\", line 287, in result\r\n  File \"site-packages\\trollius\\tasks.py\", line 255, in _step\r\n  File \"site-packages\\pyshark\\capture\\capture.py\", line 372, in _get_tshark_process\r\n  File \"site-packages\\pyshark\\capture\\capture.py\", line 355, in _get_tshark_path\r\n  File \"site-packages\\pyshark\\tshark\\tshark.py\", line 69, in get_process_path\r\n  File \"site-packages\\pyshark\\config.py\", line 8, in get_config\r\n  File \"site-packages\\py\\_vendored_packages\\apipkg.py\", line 148, in __makeattr\r\n  File \"site-packages\\py\\_vendored_packages\\apipkg.py\", line 69, in importobj\r\nModuleNotFoundError: No module named 'py._vendored_packages.iniconfig'\r\n[7384] Failed to execute script Networking\r\n\r\nSeems to not be seeing the .py files in site-packages\\py\\ and wonder if anyone's run into this problem before or can advise what I might be able to do to resolve it. I've imported specific .py files from the 'py' directory and this will get me further but it will then ask for another module in a subfolder of 'py' e.g. '._path.local'\r\n\r\nI've tested just using a one function code to read a capture with only pyshark imported and get the same issue. I've reinstalled all of Python 32 bit with the modules, tried earlier versions of pyshark. Main machine is Windows 10 however I've also tried from a WIndows 7 machine and a fresh WIndows 7 VM. \r\n\r\nThanks for any suggestions, \r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/235", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/235/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/235/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/235", "id": 270091010, "node_id": "MDU6SXNzdWUyNzAwOTEwMTA=", "number": 235, "title": "Cannot extract wlan.fc_retry field from LiveCapture with arg use_json=True", "user": {"login": "anotherfiz", "id": 2991152, "node_id": "MDQ6VXNlcjI5OTExNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2991152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anotherfiz", "html_url": "https://github.com/anotherfiz", "followers_url": "https://api.github.com/users/anotherfiz/followers", "following_url": "https://api.github.com/users/anotherfiz/following{/other_user}", "gists_url": "https://api.github.com/users/anotherfiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/anotherfiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anotherfiz/subscriptions", "organizations_url": "https://api.github.com/users/anotherfiz/orgs", "repos_url": "https://api.github.com/users/anotherfiz/repos", "events_url": "https://api.github.com/users/anotherfiz/events{/privacy}", "received_events_url": "https://api.github.com/users/anotherfiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-31T19:31:05Z", "updated_at": "2017-11-21T16:52:37Z", "closed_at": "2017-11-21T16:52:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When doing a live capture with the following argument: \r\n\r\n`self.capture = pyshark.LiveCapture(interface=\"mon0\",use_json=True, bpf_filter=bpf_filter)`\r\n\r\nI get the following error:\r\nTraceback (most recent call last):\r\n  File \"./Test.py\", line 253, in process_packet\r\n    retry = packet.wlan.fc_retry\r\n  File \"/usr/lib/python2.7/site-packages/pyshark/packet/layer.py\", line 34, in __getattr__\r\n    val = self.get_field(item)\r\n  File \"/usr/lib/python2.7/site-packages/pyshark/packet/layer.py\", line 236, in get_field\r\n    raise AttributeError(\"No such field %s\" % name)\r\nAttributeError: No such field fc_retry\r\nNo such field fc_retry\r\n\r\nI have tested this on two Ubuntu 16.04 systems as well as Intel Joule embedded system running Yocto@4.9 kernel.  removing the use_Json = true argument allows access of the field.  \r\n\r\nThank you. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/231", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/231/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/231/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/231", "id": 267476461, "node_id": "MDU6SXNzdWUyNjc0NzY0NjE=", "number": 231, "title": "LiveCapture in not working", "user": {"login": "adityasriv22", "id": 9220248, "node_id": "MDQ6VXNlcjkyMjAyNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9220248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityasriv22", "html_url": "https://github.com/adityasriv22", "followers_url": "https://api.github.com/users/adityasriv22/followers", "following_url": "https://api.github.com/users/adityasriv22/following{/other_user}", "gists_url": "https://api.github.com/users/adityasriv22/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityasriv22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityasriv22/subscriptions", "organizations_url": "https://api.github.com/users/adityasriv22/orgs", "repos_url": "https://api.github.com/users/adityasriv22/repos", "events_url": "https://api.github.com/users/adityasriv22/events{/privacy}", "received_events_url": "https://api.github.com/users/adityasriv22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-22T16:02:58Z", "updated_at": "2019-01-06T18:52:42Z", "closed_at": "2017-10-22T16:46:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"p.py\", line 52, in <module>\r\n    capture.sniff(timeout=50)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyshark/capture/capture.py\", line 124, in load_packets\r\n    self.apply_on_packets(keep_packet, timeout=timeout)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyshark/capture/capture.py\", line 243, in apply_on_packets\r\n    return self.eventloop.run_until_complete(coro)\r\n  File \"/usr/local/lib/python2.7/dist-packages/trollius/base_events.py\", line 300, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/local/lib/python2.7/dist-packages/trollius/futures.py\", line 287, in result\r\n    raise self._exception\r\npyshark.tshark.tshark.TSharkNotFoundException: TShark not found. Try adding its location to the configuration file. Search these paths: ['C:\\\\Program Files\\\\Wireshark\\\\tshark.exe', '/home/aditya/bin/dumpcap', '/home/aditya/.local/bin/dumpcap', '/usr/local/sbin/dumpcap', '/usr/local/bin/dumpcap', '/usr/sbin/dumpcap', '/usr/bin/dumpcap', '/sbin/dumpcap', '/bin/dumpcap', '/usr/games/dumpcap', '/usr/local/games/dumpcap', '/snap/bin/dumpcap']\r\n\r\nPlease resolve or provide solution", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/229", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/229/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/229/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/229", "id": 266069361, "node_id": "MDU6SXNzdWUyNjYwNjkzNjE=", "number": 229, "title": "RuntimeError: Program failed to run. Retcode: 127. Cmd: ['/usr/local/bin/tshark', '-v'] ", "user": {"login": "hmchaitra", "id": 31068040, "node_id": "MDQ6VXNlcjMxMDY4MDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/31068040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmchaitra", "html_url": "https://github.com/hmchaitra", "followers_url": "https://api.github.com/users/hmchaitra/followers", "following_url": "https://api.github.com/users/hmchaitra/following{/other_user}", "gists_url": "https://api.github.com/users/hmchaitra/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmchaitra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmchaitra/subscriptions", "organizations_url": "https://api.github.com/users/hmchaitra/orgs", "repos_url": "https://api.github.com/users/hmchaitra/repos", "events_url": "https://api.github.com/users/hmchaitra/events{/privacy}", "received_events_url": "https://api.github.com/users/hmchaitra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-17T10:16:44Z", "updated_at": "2017-10-24T02:47:44Z", "closed_at": "2017-10-24T02:47:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whats the error i am unable to understand can any one help me out??\r\nis this because wireshark path is different", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/220", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/220/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/220/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/220", "id": 255128660, "node_id": "MDU6SXNzdWUyNTUxMjg2NjA=", "number": 220, "title": "Does pyshark support / include 802.11 dissestor ?", "user": {"login": "tim-keithy", "id": 31600794, "node_id": "MDQ6VXNlcjMxNjAwNzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/31600794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-keithy", "html_url": "https://github.com/tim-keithy", "followers_url": "https://api.github.com/users/tim-keithy/followers", "following_url": "https://api.github.com/users/tim-keithy/following{/other_user}", "gists_url": "https://api.github.com/users/tim-keithy/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-keithy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-keithy/subscriptions", "organizations_url": "https://api.github.com/users/tim-keithy/orgs", "repos_url": "https://api.github.com/users/tim-keithy/repos", "events_url": "https://api.github.com/users/tim-keithy/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-keithy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-04T23:34:19Z", "updated_at": "2017-09-12T15:13:09Z", "closed_at": "2017-09-12T15:13:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nDoes pyshark include 802.11 decoder ?  if yes, where can I learn the filter command/syntax?\r\n\r\nFor example in wireshark/tshark:\r\n(wlan.ht.capabilities.short40 == 1) && (wlan.ssid == \"My Network\")\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/219", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/219/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/219/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/219", "id": 255127790, "node_id": "MDU6SXNzdWUyNTUxMjc3OTA=", "number": 219, "title": "Reads pcapng, filters, and writes to new pcapng file ", "user": {"login": "tim-keithy", "id": 31600794, "node_id": "MDQ6VXNlcjMxNjAwNzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/31600794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-keithy", "html_url": "https://github.com/tim-keithy", "followers_url": "https://api.github.com/users/tim-keithy/followers", "following_url": "https://api.github.com/users/tim-keithy/following{/other_user}", "gists_url": "https://api.github.com/users/tim-keithy/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-keithy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-keithy/subscriptions", "organizations_url": "https://api.github.com/users/tim-keithy/orgs", "repos_url": "https://api.github.com/users/tim-keithy/repos", "events_url": "https://api.github.com/users/tim-keithy/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-keithy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-04T23:20:48Z", "updated_at": "2018-09-23T16:20:58Z", "closed_at": "2017-09-12T15:11:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to read the previous captured .pcap, and search/ filter, then save the result to new file.pcapng?\r\n\r\nAny help? the syntax - Thanks\r\n\r\n\r\ncap = pyshark.FileCapture('/tmp/test.pcap')\r\n\r\nfor loop to filter:\r\n  dst.port == 443 and src.port == 23456 \r\n  or src.port == 443 and dst.port == 23456\r\n\r\nsave all the packets that matched filter condition to a file '/tmp/results_443.pcapng'\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/217", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/217/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/217/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/217", "id": 254052296, "node_id": "MDU6SXNzdWUyNTQwNTIyOTY=", "number": 217, "title": "PyShark LiveCapture starts itself.", "user": {"login": "swagluke", "id": 7270414, "node_id": "MDQ6VXNlcjcyNzA0MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7270414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swagluke", "html_url": "https://github.com/swagluke", "followers_url": "https://api.github.com/users/swagluke/followers", "following_url": "https://api.github.com/users/swagluke/following{/other_user}", "gists_url": "https://api.github.com/users/swagluke/gists{/gist_id}", "starred_url": "https://api.github.com/users/swagluke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swagluke/subscriptions", "organizations_url": "https://api.github.com/users/swagluke/orgs", "repos_url": "https://api.github.com/users/swagluke/repos", "events_url": "https://api.github.com/users/swagluke/events{/privacy}", "received_events_url": "https://api.github.com/users/swagluke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T16:00:22Z", "updated_at": "2017-08-31T14:46:34Z", "closed_at": "2017-08-31T14:45:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use the LiveCapture to capture certain amount of time's packets (For example, 15 sec). However, the LiveCapture seems to restart itself when I try to iterate through the packets list, which causes the print/store capture function going nonstop.\r\nIs there a way to just capture certain amount of time's packet? \r\nI've attached my trouble code blow.\r\n\r\n```\r\ncapture = pyshark.LiveCapture(interface='en0')\r\ncapture.sniff(timeout=15)\r\nprint(capture)\r\nfor packet in capture:         #capture seems to restart itself.\r\n     print(packet)\r\n```\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/216", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/216/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/216/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/216", "id": 252069963, "node_id": "MDU6SXNzdWUyNTIwNjk5NjM=", "number": 216, "title": "DNS Answers", "user": {"login": "jhanna01", "id": 4370241, "node_id": "MDQ6VXNlcjQzNzAyNDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4370241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhanna01", "html_url": "https://github.com/jhanna01", "followers_url": "https://api.github.com/users/jhanna01/followers", "following_url": "https://api.github.com/users/jhanna01/following{/other_user}", "gists_url": "https://api.github.com/users/jhanna01/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhanna01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhanna01/subscriptions", "organizations_url": "https://api.github.com/users/jhanna01/orgs", "repos_url": "https://api.github.com/users/jhanna01/repos", "events_url": "https://api.github.com/users/jhanna01/events{/privacy}", "received_events_url": "https://api.github.com/users/jhanna01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-22T19:52:21Z", "updated_at": "2017-10-16T01:46:32Z", "closed_at": "2017-10-16T01:46:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "There doesn't appear to be a way to get all the IP answers sent in a DNS response. \r\nWhile ```dns.count.answers``` gives the correct number of answers, ```dns.a``` will only return the first answer IP, rather than a list of all the answer IPs given. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/211", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/211/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/211/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/211", "id": 243799441, "node_id": "MDU6SXNzdWUyNDM3OTk0NDE=", "number": 211, "title": "BOOTP Fields Are Not Displayed Correctly", "user": {"login": "sitler", "id": 2087097, "node_id": "MDQ6VXNlcjIwODcwOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2087097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sitler", "html_url": "https://github.com/sitler", "followers_url": "https://api.github.com/users/sitler/followers", "following_url": "https://api.github.com/users/sitler/following{/other_user}", "gists_url": "https://api.github.com/users/sitler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sitler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sitler/subscriptions", "organizations_url": "https://api.github.com/users/sitler/orgs", "repos_url": "https://api.github.com/users/sitler/repos", "events_url": "https://api.github.com/users/sitler/events{/privacy}", "received_events_url": "https://api.github.com/users/sitler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-18T17:55:07Z", "updated_at": "2017-07-21T13:42:01Z", "closed_at": "2017-07-21T13:34:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIn tshark, if I run \"-T fields -e bootp.option.request_list_item\" on a DHCP request packet, it returns something like \"1,3,6,15,31,33,43,44,46,47,121,249,252\".  However, if I attempt to get this data from PyShark (with use_json=False), it only returns the first result of \"1\".  The same thing happens if I attempt to retrieve bootp.option.type.  I believe this has something to do with the fact that there are several bootp.option.request_list_items (see Issue #196).\r\n\r\nIn Issue #196, you suggested that a user having a similar problem attempt to use JSON rather than the default XML .  When I set use_json=True, I am then able to retrieve bootp.option.type successfully.  However, bootp.option.request_list_item is not an available field.  Several other bootp fields (such as option_requested_ip_address, option_hostname, fqdn_name, option_vendor_class) are also not available in JSON, but they are in XML.  \r\n\r\nIdeally, I'd like to get bootp.option.request_list_item and bootp.option.type to work with the default setting of XML.  If this is not possible, the next best option would be to get bootp.option.request_list_item and the other fields to return correctly in JSON.\r\n\r\nAny help or direction with this issue would be greatly appreciated.\r\n\r\nThank you,\r\n\r\nMike", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/209", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/209/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/209/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/209", "id": 242964823, "node_id": "MDU6SXNzdWUyNDI5NjQ4MjM=", "number": 209, "title": "Problem with the performance LiveCapture.", "user": {"login": "achaychenko", "id": 5734944, "node_id": "MDQ6VXNlcjU3MzQ5NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5734944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achaychenko", "html_url": "https://github.com/achaychenko", "followers_url": "https://api.github.com/users/achaychenko/followers", "following_url": "https://api.github.com/users/achaychenko/following{/other_user}", "gists_url": "https://api.github.com/users/achaychenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/achaychenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achaychenko/subscriptions", "organizations_url": "https://api.github.com/users/achaychenko/orgs", "repos_url": "https://api.github.com/users/achaychenko/repos", "events_url": "https://api.github.com/users/achaychenko/events{/privacy}", "received_events_url": "https://api.github.com/users/achaychenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-07-14T10:57:54Z", "updated_at": "2018-04-18T19:30:08Z", "closed_at": "2018-04-18T16:27:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tshark dumps per 1 minute 11 files of 200 MB each (*.pcapng)\r\n1 file - 30216 lines in pcapng and 534158 lines after FileCapture - only_summaries=True\r\nSystem - 32 cores etc..\r\n\r\nIf I use - \r\n`cap = pyshark.LiveCapture(interface='eno2', only_summaries=True)\r\n    for packet in cap.sniff_continuously():`\r\n\r\nfor interception the stream. After that output starts to delay print packets. I've tryed to use buffer for accumulation - 100 000 packets - for writing - It doesn't work.\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/207", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/207/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/207/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/207", "id": 242789178, "node_id": "MDU6SXNzdWUyNDI3ODkxNzg=", "number": 207, "title": "TShark crashes when parsing pcap for SSL features", "user": {"login": "Srivathsan-Srinivas", "id": 923893, "node_id": "MDQ6VXNlcjkyMzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/923893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Srivathsan-Srinivas", "html_url": "https://github.com/Srivathsan-Srinivas", "followers_url": "https://api.github.com/users/Srivathsan-Srinivas/followers", "following_url": "https://api.github.com/users/Srivathsan-Srinivas/following{/other_user}", "gists_url": "https://api.github.com/users/Srivathsan-Srinivas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Srivathsan-Srinivas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Srivathsan-Srinivas/subscriptions", "organizations_url": "https://api.github.com/users/Srivathsan-Srinivas/orgs", "repos_url": "https://api.github.com/users/Srivathsan-Srinivas/repos", "events_url": "https://api.github.com/users/Srivathsan-Srinivas/events{/privacy}", "received_events_url": "https://api.github.com/users/Srivathsan-Srinivas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-13T18:24:38Z", "updated_at": "2017-07-13T19:25:12Z", "closed_at": "2017-07-13T19:24:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run in iPython mode (2.7.x):\r\n\r\n```\r\nIn [7]: cap = pyshark.FileCapture('../input/pcaps/89a0f20b73492ffbcb1242437131ba76b6b0fa150782a5149b26da5d55f24dd1.pcap', display_filter='ssl')\r\n\r\nIn [8]: for pkt in cap:\r\n   ...:     print pkt\r\n```\r\n\r\nI am able to see the pkts and their layers. But, when I create a Python program and define a function to do the same, TShark crashes:\r\n\r\n```\r\n(venv) $ python feature-extraction.py /Users/test/signatures/input/pcaps/89a0f20b73492ffbcb1242437131ba76b6b0fa150782a5149b26da5d55f24dd1.pcap\r\n\r\nTraceback (most recent call last):\r\n  File \"feature-extraction.py\", line 292, in <module>\r\n    main()\r\n  File \"feature-extraction.py\", line 286, in main\r\n    ssl_features = get_ssl_features(pcap_file)\r\n  File \"feature-extraction.py\", line 97, in get_ssl_features\r\n    for pkt in cap:\r\n  File \"/Users/test/venv/lib/python2.7/site-packages/pyshark/capture/capture.py\", line 225, in _packets_from_tshark_sync\r\n    self.eventloop.run_until_complete(self._cleanup_subprocess(tshark_process))\r\n  File \"/Users/test/venv/lib/python2.7/site-packages/trollius/base_events.py\", line 300, in run_until_complete\r\n    return future.result()\r\n  File \"/Users/test/venv/lib/python2.7/site-packages/trollius/futures.py\", line 287, in result\r\n    raise self._exception\r\npyshark.capture.capture.TSharkCrashException: TShark seems to have crashed (retcode: 2). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.\r\n(venv) $\r\n```\r\n\r\nNot sure what is happening. Any thoughts why parsing the same pcap in one way is working well (iPython mode) and in another way (Regular Python code) is not working?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/205", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/205/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/205/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/205", "id": 242611637, "node_id": "MDU6SXNzdWUyNDI2MTE2Mzc=", "number": 205, "title": "pyshark crashes under both mac and linux", "user": {"login": "wumin1", "id": 30140646, "node_id": "MDQ6VXNlcjMwMTQwNjQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/30140646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wumin1", "html_url": "https://github.com/wumin1", "followers_url": "https://api.github.com/users/wumin1/followers", "following_url": "https://api.github.com/users/wumin1/following{/other_user}", "gists_url": "https://api.github.com/users/wumin1/gists{/gist_id}", "starred_url": "https://api.github.com/users/wumin1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wumin1/subscriptions", "organizations_url": "https://api.github.com/users/wumin1/orgs", "repos_url": "https://api.github.com/users/wumin1/repos", "events_url": "https://api.github.com/users/wumin1/events{/privacy}", "received_events_url": "https://api.github.com/users/wumin1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-13T07:37:44Z", "updated_at": "2017-07-13T08:30:13Z", "closed_at": "2017-07-13T08:30:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "pyshark crashes while sniff continuously, the error message is following:\r\n\r\n[2017-07-13 03:40:44.028327] DEBUG: LiveRingCapture: %s subprocess created\r\n[2017-07-13 03:40:44.028805] DEBUG: LiveRingCapture: Creating TShark subprocess with parameters: /usr/local/bin/tshark -l -n -T pdml -r - -b filesize:1024 -b files:1 -w /tmp/pyshark.pcap -P\r\n[2017-07-13 03:40:44.031049] DEBUG: LiveRingCapture: %s subprocess created\r\nCapturing on 'Ethernet'\r\nFile: -\r\ntshark: Multiple capture files requested, but a capture isn't being done.\r\n[2017-07-13 03:40:44.150440] DEBUG: LiveRingCapture: EOF reached (sync)\r\nTraceback (most recent call last):\r\n  File \"capture_tst.py\", line 10, in <module>\r\n    for packet in capture.sniff_continuously(packet_count=100):\r\n  File \"/Volumes/PLHome/tmp/pyshark-master/src/pyshark/capture/capture.py\", line 225, in _packets_from_tshark_sync\r\n    self.eventloop.run_until_complete(self._cleanup_subprocess(tshark_process))\r\n  File \"/Library/Python/2.7/site-packages/trollius/base_events.py\", line 300, in run_until_complete\r\n    return future.result()\r\n  File \"/Library/Python/2.7/site-packages/trollius/futures.py\", line 287, in result\r\n    raise self._exception\r\npyshark.capture.capture.TSharkCrashException: TShark seems to have crashed (retcode: 1). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.\r\nException pyshark.capture.capture.TSharkCrashException: TSharkCrashException(u'TShark seems to have crashed (retcode: 1). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.',) in <bound method LiveRingCapture.__del__ of <LiveRingCapture (0 packets)>> ignored\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/204", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/204/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/204/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/204", "id": 240853194, "node_id": "MDU6SXNzdWUyNDA4NTMxOTQ=", "number": 204, "title": "PyShark not working correctly in Unittest  framework", "user": {"login": "adityasiriguppa", "id": 16671334, "node_id": "MDQ6VXNlcjE2NjcxMzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/16671334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityasiriguppa", "html_url": "https://github.com/adityasiriguppa", "followers_url": "https://api.github.com/users/adityasiriguppa/followers", "following_url": "https://api.github.com/users/adityasiriguppa/following{/other_user}", "gists_url": "https://api.github.com/users/adityasiriguppa/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityasiriguppa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityasiriguppa/subscriptions", "organizations_url": "https://api.github.com/users/adityasiriguppa/orgs", "repos_url": "https://api.github.com/users/adityasiriguppa/repos", "events_url": "https://api.github.com/users/adityasiriguppa/events{/privacy}", "received_events_url": "https://api.github.com/users/adityasiriguppa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-06T06:05:35Z", "updated_at": "2020-06-19T07:10:16Z", "closed_at": "2020-06-19T07:10:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "` for i in pkt:\r\nFile \"/usr/local/lib/python2.7/site-packages/pyshark/capture/capture.py\", line 203, in _packets_from_tshark_sync\r\n    tshark_process = existing_process or self.eventloop.run_until_complete(self._get_tshark_process())\r\n  File \"/usr/local/lib/python2.7/site-packages/trollius/base_events.py\", line 300, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/local/lib/python2.7/site-packages/trollius/futures.py\", line 287, in result\r\n    raise self._exception\r\nAttributeError: 'module' object has no attribute 'iniconfig'\r\n`\r\n\r\n`pkt = pyshark.FileCapture(str(proto_path),only_summaries=True)\r\n                proto_list=[]\r\n                print pkt\r\n                for i in pkt:\r\n                    self.c.info(str(i))\r\n                    proto=str(i).split(' ')[4]\r\n                    if proto not in proto_list:\r\n                        proto_list.append(proto)\r\n                        \r\n                protocol=','.join(proto_list)`\r\n\r\nIf i am running the same code separately in  other python file it is running correctly but when i use the same in unittest it is not working.please help me", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/203", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/203/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/203/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/203", "id": 231031521, "node_id": "MDU6SXNzdWUyMzEwMzE1MjE=", "number": 203, "title": "How to write a pcap file with PyShark?", "user": {"login": "mluethi", "id": 917033, "node_id": "MDQ6VXNlcjkxNzAzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/917033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mluethi", "html_url": "https://github.com/mluethi", "followers_url": "https://api.github.com/users/mluethi/followers", "following_url": "https://api.github.com/users/mluethi/following{/other_user}", "gists_url": "https://api.github.com/users/mluethi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mluethi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mluethi/subscriptions", "organizations_url": "https://api.github.com/users/mluethi/orgs", "repos_url": "https://api.github.com/users/mluethi/repos", "events_url": "https://api.github.com/users/mluethi/events{/privacy}", "received_events_url": "https://api.github.com/users/mluethi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-24T12:59:45Z", "updated_at": "2017-05-29T16:41:54Z", "closed_at": "2017-05-29T16:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a captured pcap file which I want to filter for a certain http host. \r\nBecause I not only want the http packets I search first for the http streams and save their stream numbers. \r\nIn a second step I filter the pcap file for these found stream numbers.\r\n\r\nHere is what I do: \r\n\r\n```\r\nimport pyshark \r\nINFILE = './xy_2017-03-30.pcapng'\r\n\r\ndef get_http_streams(host):\r\n    pcap = pyshark.FileCapture(INFILE, only_summaries=False, display_filter=f'http.host contains \"{host}\"')\r\n    streams = set()\r\n    for p in pcap:\r\n        stream_nr = int(p.tcp.stream)\r\n        streams.add(stream_nr)\r\n    print()\r\n    print(f'Found {len(streams)} \"{host}\" streams.')\r\n    return streams\r\n\r\ns = get_http_streams('google') \r\npcap = pyshark.FileCapture(INFILE)\r\n\r\npkt_list = [] \r\nprint('Filtering...')\r\nfor i, p in enumerate(pcap):\r\n    try:\r\n        stream_nr = int(p.tcp.stream)\r\n    except AttributeError:\r\n        stream_nr = -1\r\n    if stream_nr in s:\r\n        pkt_list.append(p)\r\n\r\n# -----------------------------------------------------------------------------\r\n# How to write a pcap file now? pyshark.WriteFile(pkt_list, 'result.pcap') ?!\r\n# -----------------------------------------------------------------------------\r\n\r\nprint('END')\r\n```\r\n\r\nNow I have a list with the filtered packets. \r\nHow would I write them out now to a new pcap file?\r\nI cannot find a way to write a pcap file...\r\n\r\nThanks for any help!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/202", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/202/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/202/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/202", "id": 230807036, "node_id": "MDU6SXNzdWUyMzA4MDcwMzY=", "number": 202, "title": "pip install libxml \"no module\"", "user": {"login": "sharkwheels", "id": 6801378, "node_id": "MDQ6VXNlcjY4MDEzNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6801378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharkwheels", "html_url": "https://github.com/sharkwheels", "followers_url": "https://api.github.com/users/sharkwheels/followers", "following_url": "https://api.github.com/users/sharkwheels/following{/other_user}", "gists_url": "https://api.github.com/users/sharkwheels/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharkwheels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharkwheels/subscriptions", "organizations_url": "https://api.github.com/users/sharkwheels/orgs", "repos_url": "https://api.github.com/users/sharkwheels/repos", "events_url": "https://api.github.com/users/sharkwheels/events{/privacy}", "received_events_url": "https://api.github.com/users/sharkwheels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-23T18:47:21Z", "updated_at": "2017-05-23T21:51:26Z", "closed_at": "2017-05-23T21:51:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just getting a \"Could not find a version that satisfies the requirement libxml (from versions: )\r\nNo matching distribution found for libxml\"\r\n\r\nDid this distribution change recently? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/200", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/200/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/200/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/200", "id": 230190705, "node_id": "MDU6SXNzdWUyMzAxOTA3MDU=", "number": 200, "title": "install error in window subsystem ubuntu", "user": {"login": "hoyeunglee", "id": 5094741, "node_id": "MDQ6VXNlcjUwOTQ3NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5094741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoyeunglee", "html_url": "https://github.com/hoyeunglee", "followers_url": "https://api.github.com/users/hoyeunglee/followers", "following_url": "https://api.github.com/users/hoyeunglee/following{/other_user}", "gists_url": "https://api.github.com/users/hoyeunglee/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoyeunglee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoyeunglee/subscriptions", "organizations_url": "https://api.github.com/users/hoyeunglee/orgs", "repos_url": "https://api.github.com/users/hoyeunglee/repos", "events_url": "https://api.github.com/users/hoyeunglee/events{/privacy}", "received_events_url": "https://api.github.com/users/hoyeunglee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-21T01:46:47Z", "updated_at": "2017-05-21T17:02:51Z", "closed_at": "2017-05-21T17:02:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nCompile failed: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n\r\ncreating tmp\r\n\r\ncc -I/usr/include/libxml2 -c /tmp/xmlXPathInitI8Vgw9.c -o tmp/xmlXPathInitI8Vgw9.o\r\n\r\n/tmp/xmlXPathInitI8Vgw9.c:1:26: fatal error: libxml/xpath.h: No such file or directory\r\n\r\n #include \"libxml/xpath.h\"\r\n\r\n                          ^\r\n\r\ncompilation terminated.\r\n\r\n*********************************************************************************\r\n\r\nCould not find function xmlCheckVersion in library libxml2. Is libxml2 installed?\r\n\r\n*********************************************************************************\r\n\r\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n\r\n----------------------------------------\r\nCleaning up...\r\nCommand /usr/bin/python -c \"import setuptools, tokenize;__file__='/tmp/pip_build_root/lxml/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-1TvIN2-record/install-record.txt --single-version-externally-managed --compile failed with error code 1 in /tmp/pip_build_root/lxml\r\nStoring debug log for failure in /home/martin/.pip/pip.log\r\nmartin@hello-R5M4D:/mnt/c/Users/hello$", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/199", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/199/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/199/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/199", "id": 230190573, "node_id": "MDU6SXNzdWUyMzAxOTA1NzM=", "number": 199, "title": "NameError: global name 'Gen' is not defined", "user": {"login": "hoyeunglee", "id": 5094741, "node_id": "MDQ6VXNlcjUwOTQ3NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5094741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoyeunglee", "html_url": "https://github.com/hoyeunglee", "followers_url": "https://api.github.com/users/hoyeunglee/followers", "following_url": "https://api.github.com/users/hoyeunglee/following{/other_user}", "gists_url": "https://api.github.com/users/hoyeunglee/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoyeunglee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoyeunglee/subscriptions", "organizations_url": "https://api.github.com/users/hoyeunglee/orgs", "repos_url": "https://api.github.com/users/hoyeunglee/repos", "events_url": "https://api.github.com/users/hoyeunglee/events{/privacy}", "received_events_url": "https://api.github.com/users/hoyeunglee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-21T01:42:54Z", "updated_at": "2017-05-21T17:04:19Z", "closed_at": "2017-05-21T17:04:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ncap = pyshark.FileCapture(r'C:\\Users\\martlee2\\Downloads\\dhcp.pcap')\r\ncap[0].show()\r\ncap[0].summary()\r\nresponsepkt = sr1(cap[0])\r\n```\r\n\r\ncan pyshark use with scapy?\r\ni use pyshark to read captured packet \r\nand then send packet with scapy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/196", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/196/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/196/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/196", "id": 224950701, "node_id": "MDU6SXNzdWUyMjQ5NTA3MDE=", "number": 196, "title": "Can only get first field value if same key name (field name) show multiple entries with different value", "user": {"login": "alexandre0119", "id": 8269383, "node_id": "MDQ6VXNlcjgyNjkzODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8269383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandre0119", "html_url": "https://github.com/alexandre0119", "followers_url": "https://api.github.com/users/alexandre0119/followers", "following_url": "https://api.github.com/users/alexandre0119/following{/other_user}", "gists_url": "https://api.github.com/users/alexandre0119/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandre0119/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandre0119/subscriptions", "organizations_url": "https://api.github.com/users/alexandre0119/orgs", "repos_url": "https://api.github.com/users/alexandre0119/repos", "events_url": "https://api.github.com/users/alexandre0119/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandre0119/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-28T00:45:36Z", "updated_at": "2019-11-13T02:03:23Z", "closed_at": "2017-04-28T06:21:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear All,\r\n\r\nI am using Pyshark to parse Wireshark sniffer log, and I used exported Json format file (based on pcapny file) to find field names when use 'get_field_value' function to retrieve field value. \r\n\r\nFor example, in order to get BSSID value:\r\n- In Json format file, this info is displayed as\r\n       \r\n        \"wlan.bssid\": \"11:22:33:44:55:66\"\r\n- Then I could use:\r\n        \r\n        value = packet['wlan'].get_field_value('bssid')\r\n- Result is expected:\r\n\r\n        value == '11:22:33:44:55:66'\r\n- For this case, it is working fine.\r\n\r\n\r\nBut I encounter an issue with below condition when I move to 'wlan_mgt' section in a beacon packet as example showing below:\r\n- In Json format file, it shows:\r\n\r\n          \"wlan_mgt.tagged.all\": {\r\n            \"wlan_mgt.tag\": {\r\n              \"wlan_mgt.tag.number\": \"0\",\r\n              \"wlan_mgt.tag.length\": \"5\",\r\n              \"wlan_mgt.ssid\": \"MWIFI\"\r\n            },\r\n            \"wlan_mgt.tag\": {\r\n              \"wlan_mgt.tag.number\": \"1\",\r\n              \"wlan_mgt.tag.length\": \"6\",\r\n              \"wlan_mgt.supported_rates\": \"24\",\r\n              \"wlan_mgt.supported_rates\": \"164\",\r\n              \"wlan_mgt.supported_rates\": \"48\",\r\n              \"wlan_mgt.supported_rates\": \"72\",\r\n              \"wlan_mgt.supported_rates\": \"96\",\r\n              \"wlan_mgt.supported_rates\": \"108\"\r\n            },\r\n            \"wlan_mgt.tag\": {\r\n              \"wlan_mgt.tag.number\": \"5\",\r\n              \"wlan_mgt.tag.length\": \"7\",\r\n              \"wlan_mgt.tim.dtim_count\": \"0\",\r\n              \"wlan_mgt.tim.dtim_period\": \"1\",\r\n              \"wlan_mgt.tim.bmapctl\": \"0x00000000\",\r\n              \"wlan_mgt.tim.bmapctl_tree\": {\r\n                \"wlan_mgt.tim.bmapctl.multicast\": \"0\",\r\n                \"wlan_mgt.tim.bmapctl.offset\": \"0x00000000\"\r\n              },\r\n              \"wlan_mgt.tim.partial_virtual_bitmap\": \"00:10:00:00\",\r\n              \"wlan.tim.aid\": \"0x0000000c\"\r\n            },\r\n\r\nAs we can see, there are multiple entries for \"wlan_mgt.supported_rates\", the field name (key) are the same, and the value for each entry is different which I will need to get them all. But if I use:\r\n- If I use:\r\n\r\n        value = packet['wlan_mgt'].get_field_value('supported_rates')\r\n- Then it only gives me value '24' which is the value of 1st entry. And I have no idea how to retrieve other entry values since the key name is the same.\r\n\r\nShould it return a list of all values like ['24', '164','48','72','96','108'], rather than only the 1st entry value?\r\nSince based on sniffer log (Json format), there are many other entries with same field name, for example\r\n 'wlan_mgt.tag.number', but different field value, so this issue is a blocker for me.  \r\n \r\nPls advice, and Thanks a lot in advance!\r\n\r\nBR,  \r\nAlex\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/192", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/192/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/192/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/192", "id": 221861708, "node_id": "MDU6SXNzdWUyMjE4NjE3MDg=", "number": 192, "title": "Cannot access fields whose names begin with number", "user": {"login": "elin05", "id": 2956792, "node_id": "MDQ6VXNlcjI5NTY3OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2956792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elin05", "html_url": "https://github.com/elin05", "followers_url": "https://api.github.com/users/elin05/followers", "following_url": "https://api.github.com/users/elin05/following{/other_user}", "gists_url": "https://api.github.com/users/elin05/gists{/gist_id}", "starred_url": "https://api.github.com/users/elin05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elin05/subscriptions", "organizations_url": "https://api.github.com/users/elin05/orgs", "repos_url": "https://api.github.com/users/elin05/repos", "events_url": "https://api.github.com/users/elin05/events{/privacy}", "received_events_url": "https://api.github.com/users/elin05/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-14T18:17:11Z", "updated_at": "2017-04-15T07:11:31Z", "closed_at": "2017-04-15T07:11:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The wlan_radio layer contains fields that begin with numbers (e.g. 11ac_mcs, 11ac_nss), but Python does not allow variables that begin with numbers. How can I get these field values? I am using Python 2.7. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/182", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/182/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/182/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/182", "id": 214693881, "node_id": "MDU6SXNzdWUyMTQ2OTM4ODE=", "number": 182, "title": "error: Unable to find vcvarsall.bat", "user": {"login": "afaucon", "id": 6815739, "node_id": "MDQ6VXNlcjY4MTU3Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6815739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afaucon", "html_url": "https://github.com/afaucon", "followers_url": "https://api.github.com/users/afaucon/followers", "following_url": "https://api.github.com/users/afaucon/following{/other_user}", "gists_url": "https://api.github.com/users/afaucon/gists{/gist_id}", "starred_url": "https://api.github.com/users/afaucon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afaucon/subscriptions", "organizations_url": "https://api.github.com/users/afaucon/orgs", "repos_url": "https://api.github.com/users/afaucon/repos", "events_url": "https://api.github.com/users/afaucon/events{/privacy}", "received_events_url": "https://api.github.com/users/afaucon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-16T12:50:59Z", "updated_at": "2017-03-22T15:49:00Z", "closed_at": "2017-03-22T15:49:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows,\r\nWhen I execute: `pip install pyshark`\r\nI have the error: `Unable to find vcvarsall.bat`\r\n\r\nAccording to Google, stackoverflow,... it seems that i have to install Microsoft Visual C++.\r\nBut I am not familiar with Microsoft products. It is not clear at all which microsoft product I have to install.\r\nDoes Microsoft Visual C++ (needed to install pyshark) come with visual studio community IDE that can be found here: [https://www.visualstudio.com](url) ?\r\n\r\n \r\n`Collecting pyshark\r\n  Downloading pyshark-0.3.6.3.tar.gz\r\nCollecting lxml (from pyshark)\r\n  Downloading lxml-3.7.3-cp35-cp35m-win32.whl (2.8MB)\r\n    100% |################################| 2.8MB 263kB/s\r\nCollecting py (from pyshark)\r\n  Downloading py-1.4.32-py2.py3-none-any.whl (82kB)\r\n    100% |################################| 92kB 2.6MB/s\r\nCollecting trollius==1.0.4 (from pyshark)\r\n  Downloading trollius-1.0.4.tar.gz (259kB)\r\n    100% |################################| 266kB 1.6MB/s\r\nCollecting logbook (from pyshark)\r\n  Downloading Logbook-1.0.0-cp35-cp35m-win32.whl (89kB)\r\n    100% |################################| 92kB 1.6MB/s\r\nInstalling collected packages: lxml, py, trollius, logbook, pyshark\r\n  Running setup.py install for trollius ... error\r\n    Complete output from command c:\\myprogs\\python\\python3.5.1-32bits\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\toto\\\\AppData\\\\Local\\\\Temp\\\\pip-build-qsb2r4yt\\\\trollius\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\Users\\toto\\AppData\\Local\\Temp\\pip-m_4eghy6-record\\install-record.txt --single-version-externally-managed --compile:\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib.win32-3.5\r\n    creating build\\lib.win32-3.5\\trollius\r\n    copying trollius\\base_events.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\base_subprocess.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\compat.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\constants.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\coroutines.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\events.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\executor.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\futures.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\locks.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\log.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\proactor_events.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\protocols.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\py27_weakrefset.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\py33_exceptions.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\py33_winapi.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\py3_ssl.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\queues.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\selectors.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\selector_events.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\streams.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\subprocess.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\tasks.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\test_support.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\test_utils.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\time_monotonic.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\transports.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\unix_events.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\windows_events.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\windows_utils.py -> build\\lib.win32-3.5\\trollius\r\n    copying trollius\\__init__.py -> build\\lib.win32-3.5\\trollius\r\n    running build_ext\r\n    building 'trollius._overlapped' extension\r\n    error: Unable to find vcvarsall.bat\r\n\r\n    ----------------------------------------\r\nCommand \"c:\\myprogs\\python\\python3.5.1-32bits\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\toto\\\\AppData\\\\Local\\\\Temp\\\\pip-build-qsb2r4yt\\\\trollius\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\Users\\toto\\AppData\\Local\\Temp\\pip-m_4eghy6-record\\install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in C:\\Users\\toto\\AppData\\Local\\Temp\\pip-build-qsb2r4yt\\trollius\\`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/180", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/180/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/180/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/180", "id": 214485018, "node_id": "MDU6SXNzdWUyMTQ0ODUwMTg=", "number": 180, "title": "Packet counting using pyshark", "user": {"login": "ivcstudent", "id": 26442165, "node_id": "MDQ6VXNlcjI2NDQyMTY1", "avatar_url": "https://avatars2.githubusercontent.com/u/26442165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivcstudent", "html_url": "https://github.com/ivcstudent", "followers_url": "https://api.github.com/users/ivcstudent/followers", "following_url": "https://api.github.com/users/ivcstudent/following{/other_user}", "gists_url": "https://api.github.com/users/ivcstudent/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivcstudent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivcstudent/subscriptions", "organizations_url": "https://api.github.com/users/ivcstudent/orgs", "repos_url": "https://api.github.com/users/ivcstudent/repos", "events_url": "https://api.github.com/users/ivcstudent/events{/privacy}", "received_events_url": "https://api.github.com/users/ivcstudent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-15T18:30:36Z", "updated_at": "2017-03-22T15:52:40Z", "closed_at": "2017-03-22T15:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nI was trying to create a simple packet counter using pyshark. It should be able to count and display the number of packets on the network at every 1 second interval. I tried the following code:\r\n\r\nl = 0\r\ncap = pyshark.LiveCapture(interface = 'eth0')\r\nwhile True:\r\n\tcap.sniff(timeout = 1)\r\n\tprint((len(cap) - l))\r\n\tl = len(cap)\r\n\r\nHowever, this program seems to be very slow and cannot give proper output for low time intervals (1 s).\r\nPlease suggest modifications or other efficient methods to achieve the objective of counting and displaying the number of packets. I apologize if the problem seems trivial but as I am a beginner, any help would be appreciated.\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/175", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/175/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/175/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/175", "id": 207829330, "node_id": "MDU6SXNzdWUyMDc4MjkzMzA=", "number": 175, "title": "WPAN layer will be skipped", "user": {"login": "jobrud", "id": 25662062, "node_id": "MDQ6VXNlcjI1NjYyMDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/25662062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jobrud", "html_url": "https://github.com/jobrud", "followers_url": "https://api.github.com/users/jobrud/followers", "following_url": "https://api.github.com/users/jobrud/following{/other_user}", "gists_url": "https://api.github.com/users/jobrud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jobrud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jobrud/subscriptions", "organizations_url": "https://api.github.com/users/jobrud/orgs", "repos_url": "https://api.github.com/users/jobrud/repos", "events_url": "https://api.github.com/users/jobrud/events{/privacy}", "received_events_url": "https://api.github.com/users/jobrud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-15T15:05:11Z", "updated_at": "2017-03-22T15:53:17Z", "closed_at": "2017-03-22T15:53:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys,\r\n\r\nI want to use pyshark for post processing of wpan (802.14.5) frames.  I added a sample capture to debug it. If you open this sample with Wireshark/Tshark it is providing you the wpan layer. Unfortunately pyshark is skipping this layer. See below the snipped:\r\n```\r\ncap[0].layers\r\n[<6LOWPAN Layer>, <IPV6 Layer>, <UDP Layer>, <DATA Layer>]\r\n```\r\nIt would be great if someone can help/fix this issue ! I really like this tool...\r\n\r\nThanks, \r\njobrud\r\n\r\n[capture.zip](https://github.com/KimiNewt/pyshark/files/777384/capture.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/173", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/173/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/173/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/173", "id": 203906790, "node_id": "MDU6SXNzdWUyMDM5MDY3OTA=", "number": 173, "title": "Python 3.6 tests not passing", "user": {"login": "cclauss", "id": 3709715, "node_id": "MDQ6VXNlcjM3MDk3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclauss", "html_url": "https://github.com/cclauss", "followers_url": "https://api.github.com/users/cclauss/followers", "following_url": "https://api.github.com/users/cclauss/following{/other_user}", "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions", "organizations_url": "https://api.github.com/users/cclauss/orgs", "repos_url": "https://api.github.com/users/cclauss/repos", "events_url": "https://api.github.com/users/cclauss/events{/privacy}", "received_events_url": "https://api.github.com/users/cclauss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-30T00:00:04Z", "updated_at": "2019-03-07T03:39:58Z", "closed_at": "2019-03-07T03:39:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See: https://github.com/KimiNewt/pyshark/pull/172", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/169", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/169/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/169/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/169", "id": 202140436, "node_id": "MDU6SXNzdWUyMDIxNDA0MzY=", "number": 169, "title": "Issue #63 not fixed yet", "user": {"login": "he2ss", "id": 19668340, "node_id": "MDQ6VXNlcjE5NjY4MzQw", "avatar_url": "https://avatars1.githubusercontent.com/u/19668340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/he2ss", "html_url": "https://github.com/he2ss", "followers_url": "https://api.github.com/users/he2ss/followers", "following_url": "https://api.github.com/users/he2ss/following{/other_user}", "gists_url": "https://api.github.com/users/he2ss/gists{/gist_id}", "starred_url": "https://api.github.com/users/he2ss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/he2ss/subscriptions", "organizations_url": "https://api.github.com/users/he2ss/orgs", "repos_url": "https://api.github.com/users/he2ss/repos", "events_url": "https://api.github.com/users/he2ss/events{/privacy}", "received_events_url": "https://api.github.com/users/he2ss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-20T13:29:49Z", "updated_at": "2018-07-31T14:08:22Z", "closed_at": "2018-07-31T14:08:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThanks for this great project, As explain in the #63 comments, the issue still exist.\r\nYou also have the patch code to fix this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/168", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/168/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/168/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/168", "id": 199260116, "node_id": "MDU6SXNzdWUxOTkyNjAxMTY=", "number": 168, "title": "_cleanup_subprocess in capture.py is not terminating properly leaving a zombie process", "user": {"login": "sekharkancherla", "id": 24964056, "node_id": "MDQ6VXNlcjI0OTY0MDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/24964056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sekharkancherla", "html_url": "https://github.com/sekharkancherla", "followers_url": "https://api.github.com/users/sekharkancherla/followers", "following_url": "https://api.github.com/users/sekharkancherla/following{/other_user}", "gists_url": "https://api.github.com/users/sekharkancherla/gists{/gist_id}", "starred_url": "https://api.github.com/users/sekharkancherla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sekharkancherla/subscriptions", "organizations_url": "https://api.github.com/users/sekharkancherla/orgs", "repos_url": "https://api.github.com/users/sekharkancherla/repos", "events_url": "https://api.github.com/users/sekharkancherla/events{/privacy}", "received_events_url": "https://api.github.com/users/sekharkancherla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-06T18:42:49Z", "updated_at": "2017-10-05T09:19:58Z", "closed_at": "2017-06-29T12:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nPlease follow below steps to reproduce the issue:\r\n\r\nFile: test.pcap\r\n\r\nopen python console on Linux machine:\r\n\r\n>> import pyshark\r\n\r\n>> cap = pyshark.FileCapture(\"test.pcap\")\r\n\r\n>> cap[0] # This will start the tshark process\r\n\r\n>> import os\r\n\r\n>> pid=os.getpid() # Get the PID of the parent process\r\n\r\n>> cap.running_processes # Gives child processes running as a result of cap[0]\r\n\r\n>> cap.close()\r\n\r\nPlease don't exit from the python console.\r\n\r\nsay: pid = 1234\r\n\r\nWhen you run 'ps aux' | grep 'Z' , you can see that tshark process is exited and left as zombie process.\r\n\r\nAlso the file descriptors opened by tshark process are not closed. You can check this with below command:\r\n\r\nls -l /proc/1234/fd    (pid = 1234)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/167", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/167/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/167/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/167", "id": 198865328, "node_id": "MDU6SXNzdWUxOTg4NjUzMjg=", "number": 167, "title": "Pretty Formatting in Pyshark Print vs Query", "user": {"login": "Finnicus", "id": 5546206, "node_id": "MDQ6VXNlcjU1NDYyMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5546206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Finnicus", "html_url": "https://github.com/Finnicus", "followers_url": "https://api.github.com/users/Finnicus/followers", "following_url": "https://api.github.com/users/Finnicus/following{/other_user}", "gists_url": "https://api.github.com/users/Finnicus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Finnicus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Finnicus/subscriptions", "organizations_url": "https://api.github.com/users/Finnicus/orgs", "repos_url": "https://api.github.com/users/Finnicus/repos", "events_url": "https://api.github.com/users/Finnicus/events{/privacy}", "received_events_url": "https://api.github.com/users/Finnicus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-05T02:58:53Z", "updated_at": "2017-01-05T09:08:42Z", "closed_at": "2017-01-05T09:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am relatively new to using Pyshark, and is wondering if anyone can advise on this.\r\n\r\nFor example: I am looking at the results/text messages from **print pkt** vs **print.pkt.tcp.flags**\r\n\r\nHow do I get a value similar to how the print pkt is displaying vs the raw packets?\r\n\r\n_**From print**_\r\nLayer TCP:\r\n\tExpert Info (Warn/Sequence): Connection reset (RST)\r\n\tTCP Flags: *********R**\r\n\tWindow size value: 0\r\n\tConnection reset (RST)\r\n\tSeverity level: Warn\r\n\tFlags: 0x004 (RST)\r\n\r\n_**From attributes**_\r\n0x00000004\r\n\r\nI would like to show RST when I print, versus the raw data instead. \r\nAppreciate the help.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/163", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/163/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/163/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/163", "id": 197027106, "node_id": "MDU6SXNzdWUxOTcwMjcxMDY=", "number": 163, "title": "license for contributions?", "user": {"login": "jlovejoy", "id": 5048659, "node_id": "MDQ6VXNlcjUwNDg2NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5048659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlovejoy", "html_url": "https://github.com/jlovejoy", "followers_url": "https://api.github.com/users/jlovejoy/followers", "following_url": "https://api.github.com/users/jlovejoy/following{/other_user}", "gists_url": "https://api.github.com/users/jlovejoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlovejoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlovejoy/subscriptions", "organizations_url": "https://api.github.com/users/jlovejoy/orgs", "repos_url": "https://api.github.com/users/jlovejoy/repos", "events_url": "https://api.github.com/users/jlovejoy/events{/privacy}", "received_events_url": "https://api.github.com/users/jlovejoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-21T20:36:32Z", "updated_at": "2017-01-31T15:31:46Z", "closed_at": "2017-01-31T15:31:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Am I correct to assume that you accept contributions to the project under MIT (same license as project outbound license)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/159", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/159/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/159/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/159", "id": 188919602, "node_id": "MDU6SXNzdWUxODg5MTk2MDI=", "number": 159, "title": "consider new release (git tag)", "user": {"login": "anthraxx", "id": 203012, "node_id": "MDQ6VXNlcjIwMzAxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/203012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthraxx", "html_url": "https://github.com/anthraxx", "followers_url": "https://api.github.com/users/anthraxx/followers", "following_url": "https://api.github.com/users/anthraxx/following{/other_user}", "gists_url": "https://api.github.com/users/anthraxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthraxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthraxx/subscriptions", "organizations_url": "https://api.github.com/users/anthraxx/orgs", "repos_url": "https://api.github.com/users/anthraxx/repos", "events_url": "https://api.github.com/users/anthraxx/events{/privacy}", "received_events_url": "https://api.github.com/users/anthraxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-12T16:13:36Z", "updated_at": "2016-11-12T16:41:28Z", "closed_at": "2016-11-12T16:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\ncool project :) \r\nI wanted to ask if it would be possible to get a new git tag aka release?\r\nThe last one is from 2015 and there are some nice patches/fixes etc :smile_cat: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/157", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/157/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/157/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/157", "id": 185831890, "node_id": "MDU6SXNzdWUxODU4MzE4OTA=", "number": 157, "title": "pyshark deal Certificate of ssl", "user": {"login": "sharpsec", "id": 18379963, "node_id": "MDQ6VXNlcjE4Mzc5OTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/18379963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharpsec", "html_url": "https://github.com/sharpsec", "followers_url": "https://api.github.com/users/sharpsec/followers", "following_url": "https://api.github.com/users/sharpsec/following{/other_user}", "gists_url": "https://api.github.com/users/sharpsec/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharpsec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharpsec/subscriptions", "organizations_url": "https://api.github.com/users/sharpsec/orgs", "repos_url": "https://api.github.com/users/sharpsec/repos", "events_url": "https://api.github.com/users/sharpsec/events{/privacy}", "received_events_url": "https://api.github.com/users/sharpsec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-28T03:40:31Z", "updated_at": "2019-09-25T07:12:25Z", "closed_at": "2019-09-25T07:12:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\n      when pyshark deal with Certificate,i want to  extract issuer or subject,they all use the \"x509sat_utf8string\" which Can not lead to extract all of them,only one,i need your help,thank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/156", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/156/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/156/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/156", "id": 183528898, "node_id": "MDU6SXNzdWUxODM1Mjg4OTg=", "number": 156, "title": "tshark crashes when output_file assigned to file.", "user": {"login": "aloof-groundhog", "id": 22897362, "node_id": "MDQ6VXNlcjIyODk3MzYy", "avatar_url": "https://avatars0.githubusercontent.com/u/22897362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloof-groundhog", "html_url": "https://github.com/aloof-groundhog", "followers_url": "https://api.github.com/users/aloof-groundhog/followers", "following_url": "https://api.github.com/users/aloof-groundhog/following{/other_user}", "gists_url": "https://api.github.com/users/aloof-groundhog/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloof-groundhog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloof-groundhog/subscriptions", "organizations_url": "https://api.github.com/users/aloof-groundhog/orgs", "repos_url": "https://api.github.com/users/aloof-groundhog/repos", "events_url": "https://api.github.com/users/aloof-groundhog/events{/privacy}", "received_events_url": "https://api.github.com/users/aloof-groundhog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-17T21:11:39Z", "updated_at": "2019-09-25T07:12:14Z", "closed_at": "2019-09-25T07:12:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI apologize if this is a simple issue with my code, but I am wondering what could be causing this issue I'm having.\n\nWhen I try assigning output_file, which is a parameter in live_capture.py, python says that tshark seems to have crashed.  Here is the function I have tried using:\n\n```\ndef log(_interface):\n    log_file = 'PyShark' + datetime.strftime(datetime.now(), '%Y%m%d%s')  + '.pcap' #or whatever file name\n    capture = pyshark.LiveCapture(interface=_interface, only_summaries= True, output_file = log_file)\n    for p in capture.sniff_continuously():\n        print(str(p)) `\n```\n\nThis results in the following:\n\nTraceback\n\n (most recent call last):\n  File \"sniff.py\", line 46, in <module>\n    main()\n  File \"sniff.py\", line 16, in main\n    log(next(args))\n  File \"sniff.py\", line 40, in log\n    for p in capture.sniff_continuously():\n  File \"/usr/local/lib/python3.5/dist-packages/pyshark/capture/capture.py\", line 183, in _packets_from_tshark_sync\n    self._cleanup_subprocess(tshark_process)\n  File \"/usr/local/lib/python3.5/dist-packages/pyshark/capture/capture.py\", line 329, in _cleanup_subprocess\n    raise TSharkCrashException('TShark seems to have crashed (retcode: %d). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.' % process.returncode)\npyshark.capture.capture.TSharkCrashException: TShark seems to have crashed (retcode: 1). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.\nException ignored in: <bound method Capture.__del__ of <LiveCapture (0 packets)>>\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/pyshark/capture/capture.py\", line 337, in **del**\n    self.close()\n  File \"/usr/local/lib/python3.5/dist-packages/pyshark/capture/capture.py\", line 334, in close\n    self._cleanup_subprocess(process)\n  File \"/usr/local/lib/python3.5/dist-packages/pyshark/capture/capture.py\", line 329, in _cleanup_subprocess\n    raise TSharkCrashException('TShark seems to have crashed (retcode: %d). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.' % process.returncode)\npyshark.capture.capture.TSharkCrashException: TShark seems to have crashed (retcode: 1). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/155", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/155/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/155/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/155", "id": 181820844, "node_id": "MDU6SXNzdWUxODE4MjA4NDQ=", "number": 155, "title": "when  only_summaries=True , how to get  the src_port and dst_port about tcp protocol.", "user": {"login": "yashengsun", "id": 13689093, "node_id": "MDQ6VXNlcjEzNjg5MDkz", "avatar_url": "https://avatars2.githubusercontent.com/u/13689093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yashengsun", "html_url": "https://github.com/yashengsun", "followers_url": "https://api.github.com/users/yashengsun/followers", "following_url": "https://api.github.com/users/yashengsun/following{/other_user}", "gists_url": "https://api.github.com/users/yashengsun/gists{/gist_id}", "starred_url": "https://api.github.com/users/yashengsun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yashengsun/subscriptions", "organizations_url": "https://api.github.com/users/yashengsun/orgs", "repos_url": "https://api.github.com/users/yashengsun/repos", "events_url": "https://api.github.com/users/yashengsun/events{/privacy}", "received_events_url": "https://api.github.com/users/yashengsun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-08T11:26:10Z", "updated_at": "2019-09-25T07:11:48Z", "closed_at": "2019-09-25T07:11:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "for faster analysis pcap, we set option only_summaries=True,but how to get source port ??\n\nnow ,The results are as follows\uff1a\n    pcap = pyshark.FileCapture(file_name, only_summaries=True, display_filter=\"tcp\")\n    pcap_all = []\n    for p in  pcap:\n        if p.protocol == r\"TCP\":\n            print p\n\n```\nthe output:\n     240 35.766449 192.168.110.128 192.168.110.129 TCP 60 2015\\xe2\\x86\\x922441 [RST, ACK] Seq=1 Ack=1 Win=0 Len=0\n\nif you can tell me how to add the source port and destination port to object pcap it's very well.\neg:\n    ['__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_field_order', '_fields', 'destination', 'info', 'length', 'no', 'protocol', 'source', 'summary_line', 'time'  ,**'src_port'** ] \nif it like up ,that is perfect!\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/152", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/152/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/152/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/152", "id": 177962786, "node_id": "MDU6SXNzdWUxNzc5NjI3ODY=", "number": 152, "title": "How to switch off promiscuous mode?", "user": {"login": "hranmuthu", "id": 22312244, "node_id": "MDQ6VXNlcjIyMzEyMjQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/22312244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hranmuthu", "html_url": "https://github.com/hranmuthu", "followers_url": "https://api.github.com/users/hranmuthu/followers", "following_url": "https://api.github.com/users/hranmuthu/following{/other_user}", "gists_url": "https://api.github.com/users/hranmuthu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hranmuthu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hranmuthu/subscriptions", "organizations_url": "https://api.github.com/users/hranmuthu/orgs", "repos_url": "https://api.github.com/users/hranmuthu/repos", "events_url": "https://api.github.com/users/hranmuthu/events{/privacy}", "received_events_url": "https://api.github.com/users/hranmuthu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-20T04:43:35Z", "updated_at": "2016-09-26T14:40:24Z", "closed_at": "2016-09-26T14:40:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "pyshark.LiveCapture(interface='eth0') will always put the given interface into promiscuous mode. Is there a way to disable promiscuous mode ?\n\nThanks,\nHarshana\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/151", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/151/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/151/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/151", "id": 177655654, "node_id": "MDU6SXNzdWUxNzc2NTU2NTQ=", "number": 151, "title": "Can I use this to forward a local port (RTP Stream) to a remote ip+port?", "user": {"login": "lylepratt", "id": 49763, "node_id": "MDQ6VXNlcjQ5NzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/49763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lylepratt", "html_url": "https://github.com/lylepratt", "followers_url": "https://api.github.com/users/lylepratt/followers", "following_url": "https://api.github.com/users/lylepratt/following{/other_user}", "gists_url": "https://api.github.com/users/lylepratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/lylepratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lylepratt/subscriptions", "organizations_url": "https://api.github.com/users/lylepratt/orgs", "repos_url": "https://api.github.com/users/lylepratt/repos", "events_url": "https://api.github.com/users/lylepratt/events{/privacy}", "received_events_url": "https://api.github.com/users/lylepratt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-18T14:43:15Z", "updated_at": "2016-11-03T09:30:53Z", "closed_at": "2016-11-03T09:30:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to programmatically forward a local RTP stream to a remote {{ip_address}}:{{port}}. Could I use PyShark for this? Is the performance there?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/150", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/150/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/150/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/150", "id": 175183909, "node_id": "MDU6SXNzdWUxNzUxODM5MDk=", "number": 150, "title": "pychark can't show time ?", "user": {"login": "yashengsun", "id": 13689093, "node_id": "MDQ6VXNlcjEzNjg5MDkz", "avatar_url": "https://avatars2.githubusercontent.com/u/13689093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yashengsun", "html_url": "https://github.com/yashengsun", "followers_url": "https://api.github.com/users/yashengsun/followers", "following_url": "https://api.github.com/users/yashengsun/following{/other_user}", "gists_url": "https://api.github.com/users/yashengsun/gists{/gist_id}", "starred_url": "https://api.github.com/users/yashengsun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yashengsun/subscriptions", "organizations_url": "https://api.github.com/users/yashengsun/orgs", "repos_url": "https://api.github.com/users/yashengsun/repos", "events_url": "https://api.github.com/users/yashengsun/events{/privacy}", "received_events_url": "https://api.github.com/users/yashengsun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-06T08:02:20Z", "updated_at": "2016-10-06T07:48:46Z", "closed_at": "2016-10-06T07:48:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "do you tell me that pychark can decode timestamp?\nwaiting online...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/147", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/147/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/147/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/147", "id": 172976110, "node_id": "MDU6SXNzdWUxNzI5NzYxMTA=", "number": 147, "title": "Pyshark is parsing version numbers wrong, resulting in 'unordable types'", "user": {"login": "baszn", "id": 1439818, "node_id": "MDQ6VXNlcjE0Mzk4MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1439818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baszn", "html_url": "https://github.com/baszn", "followers_url": "https://api.github.com/users/baszn/followers", "following_url": "https://api.github.com/users/baszn/following{/other_user}", "gists_url": "https://api.github.com/users/baszn/gists{/gist_id}", "starred_url": "https://api.github.com/users/baszn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baszn/subscriptions", "organizations_url": "https://api.github.com/users/baszn/orgs", "repos_url": "https://api.github.com/users/baszn/repos", "events_url": "https://api.github.com/users/baszn/events{/privacy}", "received_events_url": "https://api.github.com/users/baszn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-24T15:01:27Z", "updated_at": "2016-08-24T15:58:40Z", "closed_at": "2016-08-24T15:58:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem encountered in Pyshark (0.3.6.1).\n\nWhen doing a livecapture and applying a display filter, the function call will end up in an error state (this also applies to other calls):\n\n``` python\n(...)\n  File \"/home/-/.local/lib/python3.5/site-packages/pyshark/capture/capture.py\", line 345, in get_parameters\n    params += [get_tshark_display_filter_flag(self.tshark_path), self.display_filter]\n  File \"/home/-/.local/lib/python3.5/site-packages/pyshark/tshark/tshark.py\", line 111, in get_tshark_display_filter_flag\n    if LooseVersion(tshark_version) >= LooseVersion(\"1.10.0\"):\n  File \"/usr/lib/python3.5/distutils/version.py\", line 70, in __ge__\n    c = self._cmp(other)\n  File \"/usr/lib/python3.5/distutils/version.py\", line 337, in _cmp\n    if self.version < other.version:\nTypeError: unorderable types: str() < int()\n```\n\nThis is because pyshark retrieves the version number with tshark.py:97 :\n\n``` python\nparameters = [get_tshark_path(tshark_path), '-v']\n```\n\nBut parses it wrong when there is '(Wireshark)' in the name. \n\n``` bash\n:~$ tshark -v\nTShark (Wireshark) 2.0.2 (SVN Rev Unknown from unknown)\n```\n\nIt will think the version number is '(Wireshark)' in this case resulting in an error when comparing it with a real version number (tshark.py:110):\n\n``` python\nif LooseVersion(tshark_version) >= LooseVersion(\"1.10.0\")\n```\n\nSolution would be for example to parse the version number with a regex, circumventing the absolute positioning of the version number.\n\nThis problem is duplicate to:\nhttps://github.com/KimiNewt/pyshark/issues/136\nhttps://github.com/KimiNewt/pyshark/issues/124\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/145", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/145/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/145/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/145", "id": 168798780, "node_id": "MDU6SXNzdWUxNjg3OTg3ODA=", "number": 145, "title": "How can I get the hex string of a packet?", "user": {"login": "meysammahfouzi", "id": 14848008, "node_id": "MDQ6VXNlcjE0ODQ4MDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/14848008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meysammahfouzi", "html_url": "https://github.com/meysammahfouzi", "followers_url": "https://api.github.com/users/meysammahfouzi/followers", "following_url": "https://api.github.com/users/meysammahfouzi/following{/other_user}", "gists_url": "https://api.github.com/users/meysammahfouzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/meysammahfouzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meysammahfouzi/subscriptions", "organizations_url": "https://api.github.com/users/meysammahfouzi/orgs", "repos_url": "https://api.github.com/users/meysammahfouzi/repos", "events_url": "https://api.github.com/users/meysammahfouzi/events{/privacy}", "received_events_url": "https://api.github.com/users/meysammahfouzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-02T04:50:03Z", "updated_at": "2016-11-03T09:34:55Z", "closed_at": "2016-11-03T09:34:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any method which can help me do that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/144", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/144/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/144/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/144", "id": 168013359, "node_id": "MDU6SXNzdWUxNjgwMTMzNTk=", "number": 144, "title": "low performance in parsing pcap file", "user": {"login": "fanbin", "id": 238051, "node_id": "MDQ6VXNlcjIzODA1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/238051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanbin", "html_url": "https://github.com/fanbin", "followers_url": "https://api.github.com/users/fanbin/followers", "following_url": "https://api.github.com/users/fanbin/following{/other_user}", "gists_url": "https://api.github.com/users/fanbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanbin/subscriptions", "organizations_url": "https://api.github.com/users/fanbin/orgs", "repos_url": "https://api.github.com/users/fanbin/repos", "events_url": "https://api.github.com/users/fanbin/events{/privacy}", "received_events_url": "https://api.github.com/users/fanbin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-28T04:49:44Z", "updated_at": "2019-09-25T07:11:28Z", "closed_at": "2019-09-25T07:11:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a pcap file of around 3MB. Parsing it using `pyshark` through `FileCapture(xxx)`(and iterate through it without doing operation) takes around 1min, while using `tshark -r xxx.pcap` takes only several seconds. \n\nMy code is like\n\n```\nfl = FileCapture(fd, keep_packets=False)\nfor packet in fl:\n      xxxx  // this operation is minimum, takes almost no time\n```\n\nI understand `pyshark` will call `tshark` in parsing pcap file, but I do not yet find the reason of the huge performance gap. \n\nIs that a normal case or I misused `pyshark`, any idea how to improve this speed?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/143", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/143/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/143/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/143", "id": 165401614, "node_id": "MDU6SXNzdWUxNjU0MDE2MTQ=", "number": 143, "title": "display_filter option not working in pyshark.LiveCapture() routine", "user": {"login": "pjrobert", "id": 20445706, "node_id": "MDQ6VXNlcjIwNDQ1NzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/20445706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjrobert", "html_url": "https://github.com/pjrobert", "followers_url": "https://api.github.com/users/pjrobert/followers", "following_url": "https://api.github.com/users/pjrobert/following{/other_user}", "gists_url": "https://api.github.com/users/pjrobert/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjrobert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjrobert/subscriptions", "organizations_url": "https://api.github.com/users/pjrobert/orgs", "repos_url": "https://api.github.com/users/pjrobert/repos", "events_url": "https://api.github.com/users/pjrobert/events{/privacy}", "received_events_url": "https://api.github.com/users/pjrobert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-13T19:26:52Z", "updated_at": "2019-09-25T07:11:04Z", "closed_at": "2019-09-25T07:11:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not having any success, getting the 'display_filter' option working in the PyShark  LiveCapture() routine.  I am using PyShark ver:0.3.6.1 with Python ver:3.5.1\n\nEg.\n\n  import pyshark\n  capture = pyshark.LiveCapture( interface=\"Embedded3\", display_filter=\"ntp\" )  #<-Doesn't work\n  capture.sniff(packet_count=10)\n\n  print( capture[0] )\n  print( capture[0].ntp )\n  print( capture[0].ntp.reftime )\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/141", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/141/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/141/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/141", "id": 164005794, "node_id": "MDU6SXNzdWUxNjQwMDU3OTQ=", "number": 141, "title": "Memory increase?", "user": {"login": "tanyewei", "id": 4241905, "node_id": "MDQ6VXNlcjQyNDE5MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4241905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanyewei", "html_url": "https://github.com/tanyewei", "followers_url": "https://api.github.com/users/tanyewei/followers", "following_url": "https://api.github.com/users/tanyewei/following{/other_user}", "gists_url": "https://api.github.com/users/tanyewei/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanyewei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanyewei/subscriptions", "organizations_url": "https://api.github.com/users/tanyewei/orgs", "repos_url": "https://api.github.com/users/tanyewei/repos", "events_url": "https://api.github.com/users/tanyewei/events{/privacy}", "received_events_url": "https://api.github.com/users/tanyewei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-06T06:19:10Z", "updated_at": "2020-06-19T07:16:16Z", "closed_at": "2020-06-19T07:16:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Long time running LiveCapture. tshark memory usage infinitely increasing?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/140", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/140/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/140/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/140", "id": 160105355, "node_id": "MDU6SXNzdWUxNjAxMDUzNTU=", "number": 140, "title": "can not use pyshark module on windows 10, python2.7", "user": {"login": "whxloveyrh", "id": 10508811, "node_id": "MDQ6VXNlcjEwNTA4ODEx", "avatar_url": "https://avatars0.githubusercontent.com/u/10508811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whxloveyrh", "html_url": "https://github.com/whxloveyrh", "followers_url": "https://api.github.com/users/whxloveyrh/followers", "following_url": "https://api.github.com/users/whxloveyrh/following{/other_user}", "gists_url": "https://api.github.com/users/whxloveyrh/gists{/gist_id}", "starred_url": "https://api.github.com/users/whxloveyrh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whxloveyrh/subscriptions", "organizations_url": "https://api.github.com/users/whxloveyrh/orgs", "repos_url": "https://api.github.com/users/whxloveyrh/repos", "events_url": "https://api.github.com/users/whxloveyrh/events{/privacy}", "received_events_url": "https://api.github.com/users/whxloveyrh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-14T06:18:54Z", "updated_at": "2016-06-14T06:53:09Z", "closed_at": "2016-06-14T06:53:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "> > > import pyshark\n\nTraceback (most recent call last):\n  File \"<pyshell#0>\", line 1, in <module>\n    import pyshark\n  File \"D:\\Python27\\lib\\site-packages\\pyshark-0.2.7-py2.7.egg\\pyshark__init__.py\", line 1, in <module>\n    from pyshark.capture.live_capture import LiveCapture\n  File \"D:\\Python27\\lib\\site-packages\\pyshark-0.2.7-py2.7.egg\\pyshark\\capture\\live_capture.py\", line 1, in <module>\n    from pyshark.capture.capture import Capture\n  File \"D:\\Python27\\lib\\site-packages\\pyshark-0.2.7-py2.7.egg\\pyshark\\capture\\capture.py\", line 4, in <module>\n    from pyshark.tshark.tshark import get_tshark_path\n  File \"D:\\Python27\\lib\\site-packages\\pyshark-0.2.7-py2.7.egg\\pyshark\\tshark\\tshark.py\", line 8, in <module>\n    from pyshark.config import get_config\n  File \"D:\\Python27\\lib\\site-packages\\pyshark-0.2.7-py2.7.egg\\pyshark\\config.py\", line 2, in <module>\n    import py\nImportError: No module named py\n\n> > > import py\n\nTraceback (most recent call last):\n  File \"<pyshell#1>\", line 1, in <module>\n    import py\nImportError: No module named py\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/139", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/139/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/139/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/139", "id": 160067926, "node_id": "MDU6SXNzdWUxNjAwNjc5MjY=", "number": 139, "title": "LiveCapture fails under OSX", "user": {"login": "misaka-10032", "id": 3744491, "node_id": "MDQ6VXNlcjM3NDQ0OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3744491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/misaka-10032", "html_url": "https://github.com/misaka-10032", "followers_url": "https://api.github.com/users/misaka-10032/followers", "following_url": "https://api.github.com/users/misaka-10032/following{/other_user}", "gists_url": "https://api.github.com/users/misaka-10032/gists{/gist_id}", "starred_url": "https://api.github.com/users/misaka-10032/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/misaka-10032/subscriptions", "organizations_url": "https://api.github.com/users/misaka-10032/orgs", "repos_url": "https://api.github.com/users/misaka-10032/repos", "events_url": "https://api.github.com/users/misaka-10032/events{/privacy}", "received_events_url": "https://api.github.com/users/misaka-10032/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-13T23:37:41Z", "updated_at": "2017-05-28T03:23:23Z", "closed_at": "2016-06-14T06:52:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "My tshark version is \n\n```\nTShark (Wireshark) 2.0.4 (Git Rev Unknown from unknown)\n```\n\nMy pyshark version is\n\n```\npyshark==0.3.6.1\n```\n\nThe full error is \n\n```\nIn [3]: cap.sniff(timeout=3)\n---------------------------------------------------------------------------\nTSharkCrashException                      Traceback (most recent call last)\n<ipython-input-3-de9eb8ae3a6f> in <module>()\n----> 1 cap.sniff(timeout=3)\n\n/usr/local/lib/python2.7/site-packages/pyshark/capture/capture.pyc in load_packets(self, packet_count, timeout)\n    107 \n    108         try:\n--> 109             self.apply_on_packets(keep_packet, timeout=timeout)\n    110             self.loaded = True\n    111         except TimeoutError:\n\n/usr/local/lib/python2.7/site-packages/pyshark/capture/capture.pyc in apply_on_packets(self, callback, timeout)\n    199         if timeout is not None:\n    200             coro = asyncio.wait_for(coro, timeout)\n--> 201         return self.eventloop.run_until_complete(coro)\n    202 \n    203 \n\n/usr/local/lib/python2.7/site-packages/trollius/base_events.pyc in run_until_complete(self, future)\n    298             raise RuntimeError('Event loop stopped before Future completed.')\n    299 \n--> 300         return future.result()\n    301 \n    302     def stop(self):\n\n/usr/local/lib/python2.7/site-packages/trollius/futures.pyc in result(self)\n    285                 compat.reraise(type(self._exception), self._exception, exc_tb)\n    286             else:\n--> 287                 raise self._exception\n    288         return self._result\n    289 \n\nTSharkCrashException: TShark seems to have crashed (retcode: 1). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.\n\n```\n\n`cap.set_debug()` doesn't give more info.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/137", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/137/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/137/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/137", "id": 159814354, "node_id": "MDU6SXNzdWUxNTk4MTQzNTQ=", "number": 137, "title": "pyshark captures the number of packets fewer than tshark/wireshark", "user": {"login": "mrcheng0910", "id": 15142836, "node_id": "MDQ6VXNlcjE1MTQyODM2", "avatar_url": "https://avatars3.githubusercontent.com/u/15142836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrcheng0910", "html_url": "https://github.com/mrcheng0910", "followers_url": "https://api.github.com/users/mrcheng0910/followers", "following_url": "https://api.github.com/users/mrcheng0910/following{/other_user}", "gists_url": "https://api.github.com/users/mrcheng0910/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrcheng0910/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrcheng0910/subscriptions", "organizations_url": "https://api.github.com/users/mrcheng0910/orgs", "repos_url": "https://api.github.com/users/mrcheng0910/repos", "events_url": "https://api.github.com/users/mrcheng0910/events{/privacy}", "received_events_url": "https://api.github.com/users/mrcheng0910/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-12T08:05:10Z", "updated_at": "2019-09-25T07:10:12Z", "closed_at": "2019-09-25T07:10:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\nI test the pyshark and wireshark to capture the same websites, and i found the numbers of packets that captured by pyshark is fewer.why? where i am wrong?\n\ni use the code:\n`capture = pyshark.LiveCapture(interface=interface)`\n`capture.sniff(timeout=30)`\n`print 'total: ' + str(len(capture))`\n\nthank you very much\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/135", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/135/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/135/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/135", "id": 156745795, "node_id": "MDU6SXNzdWUxNTY3NDU3OTU=", "number": 135, "title": "SIP msg_body is empty with pyshark", "user": {"login": "dyj216", "id": 5015134, "node_id": "MDQ6VXNlcjUwMTUxMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5015134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyj216", "html_url": "https://github.com/dyj216", "followers_url": "https://api.github.com/users/dyj216/followers", "following_url": "https://api.github.com/users/dyj216/following{/other_user}", "gists_url": "https://api.github.com/users/dyj216/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyj216/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyj216/subscriptions", "organizations_url": "https://api.github.com/users/dyj216/orgs", "repos_url": "https://api.github.com/users/dyj216/repos", "events_url": "https://api.github.com/users/dyj216/events{/privacy}", "received_events_url": "https://api.github.com/users/dyj216/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-25T13:06:15Z", "updated_at": "2016-10-11T12:23:59Z", "closed_at": "2016-10-11T12:23:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When opening a packet in Wireshark, I can see a separate part inside the SIP, the Message Body. In my case there is an xml in the Message Body. The pyshark does only have \"Message Body\" in the sip.msg_body attribute. I know, that the sip.msg_hdr contains my needed xml, but I think it should be under sip.msg_body.\n\nI don't know if this is an issue or not, so any clarification would be nice.\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/132", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/132/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/132/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/132", "id": 151358380, "node_id": "MDU6SXNzdWUxNTEzNTgzODA=", "number": 132, "title": "TCP analysis Options", "user": {"login": "GinesGarcia", "id": 5735717, "node_id": "MDQ6VXNlcjU3MzU3MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5735717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GinesGarcia", "html_url": "https://github.com/GinesGarcia", "followers_url": "https://api.github.com/users/GinesGarcia/followers", "following_url": "https://api.github.com/users/GinesGarcia/following{/other_user}", "gists_url": "https://api.github.com/users/GinesGarcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/GinesGarcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GinesGarcia/subscriptions", "organizations_url": "https://api.github.com/users/GinesGarcia/orgs", "repos_url": "https://api.github.com/users/GinesGarcia/repos", "events_url": "https://api.github.com/users/GinesGarcia/events{/privacy}", "received_events_url": "https://api.github.com/users/GinesGarcia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-27T11:02:07Z", "updated_at": "2016-05-04T09:44:03Z", "closed_at": "2016-05-04T09:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\ni'm trying to get some information from tcp packet when parsing pcap files (tcp.analysis in tshark). \u00bfCan you help me with it?\n\nThanks in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/131", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/131/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/131/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/131", "id": 147948874, "node_id": "MDU6SXNzdWUxNDc5NDg4NzQ=", "number": 131, "title": "Crashing on Windows 7 due to XMLSyntaxError", "user": {"login": "martinuray", "id": 6664999, "node_id": "MDQ6VXNlcjY2NjQ5OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6664999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinuray", "html_url": "https://github.com/martinuray", "followers_url": "https://api.github.com/users/martinuray/followers", "following_url": "https://api.github.com/users/martinuray/following{/other_user}", "gists_url": "https://api.github.com/users/martinuray/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinuray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinuray/subscriptions", "organizations_url": "https://api.github.com/users/martinuray/orgs", "repos_url": "https://api.github.com/users/martinuray/repos", "events_url": "https://api.github.com/users/martinuray/events{/privacy}", "received_events_url": "https://api.github.com/users/martinuray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-13T05:19:35Z", "updated_at": "2019-09-25T07:06:28Z", "closed_at": "2019-09-25T07:06:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have troubles executing pyShark on Windows. The same works in Linux quite well.\n\n```\n>>> cap = pyshark.LiveCapture(interface=nwdev)\n>>> cap.sniff(timeout=10)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:\\Users\\mu\\WinPython-32bit-2.7.10.3\\python-2.7.10\n\\lib\\site-packages\\pyshark\\capture\\capture.py\", line 109, in load_packets\n    self.apply_on_packets(keep_packet, timeout=timeout)\n  File \"C:\\Users\\mu\\WinPython-32bit-2.7.10.3\\python-2.7.10\n\\lib\\site-packages\\pyshark\\capture\\capture.py\", line 201, in apply_on_packets\n    return self.eventloop.run_until_complete(coro)\n  File \"C:\\Users\\mu\\WinPython-32bit-2.7.10.3\\python-2.7.10\n\\lib\\site-packages\\trollius\\base_events.py\", line 300, in  un_until_complete\n    return future.result()\n  File \"C:\\Users\\mu\\WinPython-32bit-2.7.10.3\\python-2.7.10\n\\lib\\site-packages\\trollius\\futures.py\", line 287, in result \n    raise self._exception\nlxml.etree.XMLSyntaxError: Input is not proper UTF-8, indicate encoding !\nBytes: 0xE4 0x69 0x73 0x63, line 6, column 69\n>>>\n```\n\nI work on a 32 bit Python version.\n\nI even tried - I know that's very dangerous -\n\n```\nreload(sys)\nsys.setdefaultencoding('utf8')\n```\n\nright in front of my pyshark call and in the parent processes. Without success.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/130", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/130/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/130/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/130", "id": 146988717, "node_id": "MDU6SXNzdWUxNDY5ODg3MTc=", "number": 130, "title": "Pyshark \"Decode_as\" doesn't seem to work", "user": {"login": "HansRingenbach", "id": 18353160, "node_id": "MDQ6VXNlcjE4MzUzMTYw", "avatar_url": "https://avatars0.githubusercontent.com/u/18353160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HansRingenbach", "html_url": "https://github.com/HansRingenbach", "followers_url": "https://api.github.com/users/HansRingenbach/followers", "following_url": "https://api.github.com/users/HansRingenbach/following{/other_user}", "gists_url": "https://api.github.com/users/HansRingenbach/gists{/gist_id}", "starred_url": "https://api.github.com/users/HansRingenbach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HansRingenbach/subscriptions", "organizations_url": "https://api.github.com/users/HansRingenbach/orgs", "repos_url": "https://api.github.com/users/HansRingenbach/repos", "events_url": "https://api.github.com/users/HansRingenbach/events{/privacy}", "received_events_url": "https://api.github.com/users/HansRingenbach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-08T17:25:41Z", "updated_at": "2016-05-04T09:46:11Z", "closed_at": "2016-05-04T09:46:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pyshark, version 0.3.6.1, to decode UDP packets as RTP.   Using wireshark I verified the UDP packets are RTP packets.\n\nI am using the command cap = pyshark.FileCapture(\"my_file.pcap\", {'udp.srcport>1023':'rtp'}, display_filter='ip').     the script runs until I use a command like I[3].marker and then I get an attribute error.\n\nHow can I use pyshark to decode udp packets as RTP?\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/129", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/129/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/129/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/129", "id": 142931380, "node_id": "MDU6SXNzdWUxNDI5MzEzODA=", "number": 129, "title": "Stopping live capture on a condition", "user": {"login": "chadianscot", "id": 18012410, "node_id": "MDQ6VXNlcjE4MDEyNDEw", "avatar_url": "https://avatars2.githubusercontent.com/u/18012410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadianscot", "html_url": "https://github.com/chadianscot", "followers_url": "https://api.github.com/users/chadianscot/followers", "following_url": "https://api.github.com/users/chadianscot/following{/other_user}", "gists_url": "https://api.github.com/users/chadianscot/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadianscot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadianscot/subscriptions", "organizations_url": "https://api.github.com/users/chadianscot/orgs", "repos_url": "https://api.github.com/users/chadianscot/repos", "events_url": "https://api.github.com/users/chadianscot/events{/privacy}", "received_events_url": "https://api.github.com/users/chadianscot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-23T11:15:27Z", "updated_at": "2016-05-04T10:17:50Z", "closed_at": "2016-05-04T10:17:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way I could use the sniff_continuously function to sniff an interface until a condition is met, at which point the capture is stopped?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/KimiNewt/pyshark/issues/128", "repository_url": "https://api.github.com/repos/KimiNewt/pyshark", "labels_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/128/comments", "events_url": "https://api.github.com/repos/KimiNewt/pyshark/issues/128/events", "html_url": "https://github.com/KimiNewt/pyshark/issues/128", "id": 142921330, "node_id": "MDU6SXNzdWUxNDI5MjEzMzA=", "number": 128, "title": "Output live capture to a file", "user": {"login": "chadianscot", "id": 18012410, "node_id": "MDQ6VXNlcjE4MDEyNDEw", "avatar_url": "https://avatars2.githubusercontent.com/u/18012410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadianscot", "html_url": "https://github.com/chadianscot", "followers_url": "https://api.github.com/users/chadianscot/followers", "following_url": "https://api.github.com/users/chadianscot/following{/other_user}", "gists_url": "https://api.github.com/users/chadianscot/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadianscot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadianscot/subscriptions", "organizations_url": "https://api.github.com/users/chadianscot/orgs", "repos_url": "https://api.github.com/users/chadianscot/repos", "events_url": "https://api.github.com/users/chadianscot/events{/privacy}", "received_events_url": "https://api.github.com/users/chadianscot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-23T10:27:24Z", "updated_at": "2016-05-05T08:08:57Z", "closed_at": "2016-05-05T08:08:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error when I try to output my live capture to a file:\n\n`Exception pyshark.capture.capture.TSharkCrashException: TSharkCrashException(u'TShark seems to have crashed (retcode: 1). Try rerunning in debug mode [ capture_obj.set_debug() ] or try updating tshark.',) in <bound method LiveCapture.__del__ of <LiveCapture (0 packets)>> ignored\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/pyshark/capture/capture.py\", line 109, in load_packets\n    self.apply_on_packets(keep_packet, timeout=timeout)\n  File \"/usr/local/lib/python2.7/dist-packages/pyshark/capture/capture.py\", line 201, in apply_on_packets\n    return self.eventloop.run_until_complete(coro)\n  File \"/usr/local/lib/python2.7/dist-packages/trollius/base_events.py\", line 300, in run_until_complete\n    return future.result()\n  File \"/usr/local/lib/python2.7/dist-packages/trollius/futures.py\", line 287, in result\n    raise self._exception\nOSError: [Errno 3] No such process`\n\nMy live capture command is `capture = cap = pyshark.LiveCapture(interface='eth0',output_file=\"test.pcap\",bpf_filter = 'ether[0]=0x00 and ether[1]=0x04 and ether[2]=0xa3')`\n\nIf I remove the bpf_filter though, it works... Any ideas?\n", "performed_via_github_app": null, "score": 1.0}]}