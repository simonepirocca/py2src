{"total_count": 389, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/svinota/pyroute2/issues/731", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/731/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/731/events", "html_url": "https://github.com/svinota/pyroute2/issues/731", "id": 679178901, "node_id": "MDU6SXNzdWU2NzkxNzg5MDE=", "number": 731, "title": "Support for OpenVPN?", "user": {"login": "rgrewe", "id": 31986994, "node_id": "MDQ6VXNlcjMxOTg2OTk0", "avatar_url": "https://avatars2.githubusercontent.com/u/31986994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgrewe", "html_url": "https://github.com/rgrewe", "followers_url": "https://api.github.com/users/rgrewe/followers", "following_url": "https://api.github.com/users/rgrewe/following{/other_user}", "gists_url": "https://api.github.com/users/rgrewe/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgrewe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgrewe/subscriptions", "organizations_url": "https://api.github.com/users/rgrewe/orgs", "repos_url": "https://api.github.com/users/rgrewe/repos", "events_url": "https://api.github.com/users/rgrewe/events{/privacy}", "received_events_url": "https://api.github.com/users/rgrewe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T14:03:29Z", "updated_at": "2020-08-19T09:09:09Z", "closed_at": "2020-08-19T09:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nis there any way to create and manage interfaces using OpenVPN?\r\n\r\nKind regards\r\nRaphael", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/727", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/727/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/727/events", "html_url": "https://github.com/svinota/pyroute2/issues/727", "id": 670125040, "node_id": "MDU6SXNzdWU2NzAxMjUwNDA=", "number": 727, "title": "IPRoute does not provide flags correctly", "user": {"login": "patrickelectric", "id": 1215497, "node_id": "MDQ6VXNlcjEyMTU0OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1215497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patrickelectric", "html_url": "https://github.com/patrickelectric", "followers_url": "https://api.github.com/users/patrickelectric/followers", "following_url": "https://api.github.com/users/patrickelectric/following{/other_user}", "gists_url": "https://api.github.com/users/patrickelectric/gists{/gist_id}", "starred_url": "https://api.github.com/users/patrickelectric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patrickelectric/subscriptions", "organizations_url": "https://api.github.com/users/patrickelectric/orgs", "repos_url": "https://api.github.com/users/patrickelectric/repos", "events_url": "https://api.github.com/users/patrickelectric/events{/privacy}", "received_events_url": "https://api.github.com/users/patrickelectric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-31T19:09:46Z", "updated_at": "2020-08-02T20:17:11Z", "closed_at": "2020-08-02T20:17:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the output of `get_addr()`\r\n```\r\n{   'attrs': [   ('IFA_ADDRESS', '192.168.2.2'),                                                                                                                                  \r\n                     ('IFA_LOCAL', '192.168.2.2'),                                                                                                                                    \r\n                     ('IFA_LABEL', 'enp8s0f3u2u3'),                                                                                                                                   \r\n                     ('IFA_FLAGS', 128),                                                                                                                                              \r\n                     ('IFA_CACHEINFO', {'ifa_preferred': 4294967295, 'ifa_valid': 4294967295, 'cstamp': 35128086, 'tstamp': 35128086})],                                              \r\n        'event': 'RTM_NEWADDR',                                                                                                                                                       \r\n        'family': 2,                                                                                                                                                                  \r\n        'flags': 128,                                                                                                                                                                 \r\n        'header': {   'error': None,                                                                                                                                                  \r\n                      'flags': 2,                                                                                                                                                     \r\n                      'length': 88,                                                                                                                                                   \r\n                      'pid': 3129864100,                                                                                                                                              \r\n                      'sequence_number': 255,                                                                                                                                         \r\n                      'stats': Stats(qsize=0, delta=0, delay=0),                                                                                                                      \r\n                      'target': 'localhost',                                                                                                                                          \r\n                      'type': 20},                                                                                                                                                    \r\n        'index': 9,                                                                                                                                                                   \r\n        'prefixlen': 24,                                                                                                                                                              \r\n        'scope': 0},\r\n```\r\n\r\nFrom ifconfig:\r\n```\r\nenp8s0f3u2u3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\n        inet 192.168.2.2  netmask 255.255.255.0  broadcast 0.0.0.0\r\n        ether 00:e0:4c:36:00:9c  txqueuelen 1000  (Ethernet)\r\n        RX packets 480  bytes 38505 (38.5 KB)\r\n        RX errors 0  dropped 0  overruns 0  frame 0\r\n        TX packets 344  bytes 61602 (61.6 KB)\r\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\r\n```\r\nThe flag of ifconfig is 4163 and `get_addr` flags is 128.\r\nIf that it is the incorrect flag, how can I fetch it from IPRoute ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/721", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/721/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/721/events", "html_url": "https://github.com/svinota/pyroute2/issues/721", "id": 650597108, "node_id": "MDU6SXNzdWU2NTA1OTcxMDg=", "number": 721, "title": "ipr.addr() is asynchronous", "user": {"login": "rubasov", "id": 2798955, "node_id": "MDQ6VXNlcjI3OTg5NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2798955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubasov", "html_url": "https://github.com/rubasov", "followers_url": "https://api.github.com/users/rubasov/followers", "following_url": "https://api.github.com/users/rubasov/following{/other_user}", "gists_url": "https://api.github.com/users/rubasov/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubasov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubasov/subscriptions", "organizations_url": "https://api.github.com/users/rubasov/orgs", "repos_url": "https://api.github.com/users/rubasov/repos", "events_url": "https://api.github.com/users/rubasov/events{/privacy}", "received_events_url": "https://api.github.com/users/rubasov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-03T13:26:45Z", "updated_at": "2020-07-07T08:57:10Z", "closed_at": "2020-07-07T08:57:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "While working with OpenStack Neutron code using pyroute2 I came to a question and depending on the answer I may have found a bug.\r\n\r\nThe existing Neutron code seemingly assumed that pyroute2.NetNS().addr() is synchronous (that is it returns only after the requested address was actually configured). In older use cases this assumption seemed to be correct, but when I started to configure IPv6 link-local addresses with the same code (plus with a few more constraints, please see below) I started to see that it returns before the address got configured therefore a socket.bind() following it closely started to fail with EADDRNOTAVAIL.\r\n\r\nSo my question is: Is it supposed to be synchronous or not? (I did not find an answer clear to me in the docs.)\r\n\r\nIf not, is there a recommended way of synchronizing (blocking until the address gets configured) by the user of pyroute2?\r\n\r\nIf it is then here's how to reproduce the bug:\r\n\r\nversions used:\r\npyroute2 0.5.12\r\nLinux kernel 4.15.0\r\nOpen vSwitch 2.9.5\r\niproute2 ss180129\r\nPython 3.6.9\r\n\r\nThe two scripts below should be placed in the same directory on a Linux system (with netns support) where python3, pyroute2, Open vSwitch and iproute2 are all installed (for example an OpenStack devstack VM, but devstack is not neccessary). Run the .sh as root.\r\n\r\nThis is the output on my system:\r\n```\r\n$ sudo ./pyroute-addr-async.sh\r\nip.addr() ; sleep(0) ; bind()\r\nTraceback (most recent call last):\r\n  File \"./pyroute-addr-async.py\", line 35, in <module>\r\n    s.bind(sockaddr)\r\nOSError: [Errno 99] Cannot assign requested address\r\n\r\nip.addr() ; sleep(5) ; bind()\r\n[no error printed]\r\n```\r\n\r\nI believe that proves that the address gets configured, but only several seconds after ipr.addr() returned.\r\n\r\n```\r\npyroute-addr-async.sh\r\n\r\n#! /bin/bash\r\n\r\n# This script reproduces the following bug:\r\n# ip.addr() of pyroute2 seems to be not synchronous at least when\r\n# the address configured is an IPv6 link-local address put on an\r\n# Open vSwitch port in a namespace.\r\n# Therefore ip.addr() and socket.bind() in short succession may make\r\n# socket.bind() fail, becaues the IP is not configured yet.\r\n# So far I could not reproduce this without using an Open vSwitch port.\r\n\r\nnamespace=\"ns0\"\r\nbridge=\"br0\"\r\ninterface=\"port0\"\r\n\r\n# with sleep(0) bind() fails with EADDRNOTAVAIL:\r\n#     OSError: [Errno 99] Cannot assign requested address\r\n# with sleep(5) bind() succeeds\r\nfor sleep in 0 5\r\ndo\r\n\r\n    ovs-vsctl add-br \"$bridge\"\r\n    ovs-vsctl add-port \"$bridge\" \"$interface\" \\\r\n        -- set Interface \"$interface\" type=internal\r\n\r\n    ip netns add \"$namespace\"\r\n\r\n    ip link set up dev \"$interface\" netns \"$namespace\"\r\n\r\n    echo >&2 \"ip.addr() ; sleep($sleep) ; bind()\"\r\n    ip netns exec ns0 ./pyroute-addr-async.py \"$sleep\"\r\n    echo >&2\r\n\r\n    ovs-vsctl del-port \"$interface\" 2>/dev/null\r\n    ovs-vsctl del-br \"$bridge\" 2>/dev/null\r\n    ip netns del \"$namespace\" 2>/dev/null\r\n\r\ndone\r\n```\r\n\r\n```\r\npyroute-addr-async.py\r\n\r\n#! /usr/bin/python3\r\n\r\nimport pyroute2\r\nimport socket\r\nimport sys\r\nimport time\r\n\r\nnamespace = 'ns0'\r\naddress = 'fe80::a9fe:a9fe'\r\ninterface = 'port0'\r\nport = 80\r\n\r\nsleep = int(sys.argv[1])\r\n\r\nip = pyroute2.NetNS(namespace, flags=0)\r\nidx = ip.link_lookup(ifname=interface)[0]\r\nip.addr(\r\n    'add',\r\n    index=idx,\r\n    address=address,\r\n    mask=64,\r\n    family=socket.AF_INET6,\r\n    scope=253, # cf. /etc/iproute2/rt_scopes\r\n)\r\n\r\ntime.sleep(sleep)\r\n\r\ns = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)\r\nsockaddr = (\r\n    address + '%' + interface,\r\n    port,\r\n    0,\r\n    idx,\r\n)\r\ns.bind(sockaddr)\r\n```\r\n\r\np.s. to Peter: No long time no see. I hope you're doing well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/719", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/719/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/719/events", "html_url": "https://github.com/svinota/pyroute2/issues/719", "id": 645614897, "node_id": "MDU6SXNzdWU2NDU2MTQ4OTc=", "number": 719, "title": "disable logging", "user": {"login": "ekorian", "id": 7439255, "node_id": "MDQ6VXNlcjc0MzkyNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7439255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekorian", "html_url": "https://github.com/ekorian", "followers_url": "https://api.github.com/users/ekorian/followers", "following_url": "https://api.github.com/users/ekorian/following{/other_user}", "gists_url": "https://api.github.com/users/ekorian/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekorian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekorian/subscriptions", "organizations_url": "https://api.github.com/users/ekorian/orgs", "repos_url": "https://api.github.com/users/ekorian/repos", "events_url": "https://api.github.com/users/ekorian/events{/privacy}", "received_events_url": "https://api.github.com/users/ekorian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-25T14:34:25Z", "updated_at": "2020-06-26T06:33:52Z", "closed_at": "2020-06-26T06:33:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using my own logging.Logger and pyroute2. I am getting double output for each log, how do I disable loggers from pyroute2 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/716", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/716/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/716/events", "html_url": "https://github.com/svinota/pyroute2/issues/716", "id": 637063888, "node_id": "MDU6SXNzdWU2MzcwNjM4ODg=", "number": 716, "title": "IPRoute: add support for setting a host route", "user": {"login": "yegorich", "id": 1172125, "node_id": "MDQ6VXNlcjExNzIxMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1172125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yegorich", "html_url": "https://github.com/yegorich", "followers_url": "https://api.github.com/users/yegorich/followers", "following_url": "https://api.github.com/users/yegorich/following{/other_user}", "gists_url": "https://api.github.com/users/yegorich/gists{/gist_id}", "starred_url": "https://api.github.com/users/yegorich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yegorich/subscriptions", "organizations_url": "https://api.github.com/users/yegorich/orgs", "repos_url": "https://api.github.com/users/yegorich/repos", "events_url": "https://api.github.com/users/yegorich/events{/privacy}", "received_events_url": "https://api.github.com/users/yegorich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-11T14:29:32Z", "updated_at": "2020-08-10T05:57:54Z", "closed_at": "2020-08-10T05:57:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "AFAIK it is now not possible to set the host route like this:\r\n\r\n    route add -host 192.168.0.50 dev wlan0\r\n\r\nThe following code throws `pyroute2.netlink.exceptions.NetlinkError: (22, 'Invalid argument')`:\r\n\r\n```python\r\nfrom pyroute2 import IPRoute\r\n\r\nip = IPRoute()\r\nip.route(\"add\", dst=\"192.168.0.50\", gateway=\"192.168.0.3\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/702", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/702/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/702/events", "html_url": "https://github.com/svinota/pyroute2/issues/702", "id": 604889127, "node_id": "MDU6SXNzdWU2MDQ4ODkxMjc=", "number": 702, "title": "Allow to pass the libc when opening a namespace context", "user": {"login": "ralonsoh", "id": 12749437, "node_id": "MDQ6VXNlcjEyNzQ5NDM3", "avatar_url": "https://avatars1.githubusercontent.com/u/12749437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralonsoh", "html_url": "https://github.com/ralonsoh", "followers_url": "https://api.github.com/users/ralonsoh/followers", "following_url": "https://api.github.com/users/ralonsoh/following{/other_user}", "gists_url": "https://api.github.com/users/ralonsoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralonsoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralonsoh/subscriptions", "organizations_url": "https://api.github.com/users/ralonsoh/orgs", "repos_url": "https://api.github.com/users/ralonsoh/repos", "events_url": "https://api.github.com/users/ralonsoh/events{/privacy}", "received_events_url": "https://api.github.com/users/ralonsoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-22T16:22:30Z", "updated_at": "2020-05-15T17:09:25Z", "closed_at": "2020-05-15T17:09:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\"netns.nslink.NetNS\" calls \"netns.setns\". \"setns\" method allows to set explicitly the libc to be used. For example, instead of using CDLL, PyDLL could be used. This could help, when using eventlet, to make calls without releasing the GIL.\r\n\r\nReferences:\r\n- https://review.opendev.org/#/c/717017/\r\n- https://docs.python.org/3.6/library/ctypes.html#ctypes.PyDLL", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/701", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/701/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/701/events", "html_url": "https://github.com/svinota/pyroute2/issues/701", "id": 602267941, "node_id": "MDU6SXNzdWU2MDIyNjc5NDE=", "number": 701, "title": "Conntrack with IPv6 fails with: NetlinkError 22 - Invalid argument", "user": {"login": "derbroti", "id": 1167849, "node_id": "MDQ6VXNlcjExNjc4NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1167849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derbroti", "html_url": "https://github.com/derbroti", "followers_url": "https://api.github.com/users/derbroti/followers", "following_url": "https://api.github.com/users/derbroti/following{/other_user}", "gists_url": "https://api.github.com/users/derbroti/gists{/gist_id}", "starred_url": "https://api.github.com/users/derbroti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derbroti/subscriptions", "organizations_url": "https://api.github.com/users/derbroti/orgs", "repos_url": "https://api.github.com/users/derbroti/repos", "events_url": "https://api.github.com/users/derbroti/events{/privacy}", "received_events_url": "https://api.github.com/users/derbroti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-17T22:31:42Z", "updated_at": "2020-04-18T18:42:26Z", "closed_at": "2020-04-18T12:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am trying to use Conntrack with ipv6 but it does not work.\r\n\r\nVersions:\r\n`pyroute2               0.5.11`\r\n```\r\nPython 3.7.5 (default, Nov 20 2019, 09:21:52)\r\n[GCC 9.2.1 20191008] on linux\r\n```\r\n\r\nCode to reproduce:\r\n```\r\nfrom pyroute2 import Conntrack\r\nfrom pyroute2.netlink.nfnetlink.nfctsocket import NFCTAttrTuple\r\nfrom socket import AF_INET6, IPPROTO_TCP\r\nct = Conntrack()\r\nct.entry('get', tuple_orig=NFCTAttrTuple(family=AF_INET6, saddr='<SRC_IP>', daddr='<DST_IP>', sport=39892, dport=80, proto=IPPROTO_TCP))\r\n```\r\n\r\nResult:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyroute2/netlink/nfnetlink/nfctsocket.py\", line 670, in entry\r\n    terminate=terminate_error_msg)\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyroute2/netlink/nfnetlink/nfctsocket.py\", line 598, in request\r\n    return self.nlm_request(msg, msg_type, **kwargs)\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 375, in nlm_request\r\n    return tuple(self._genlm_request(*argv, **kwarg))\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 867, in nlm_request\r\n    callback=callback):\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 378, in get\r\n    return tuple(self._genlm_get(*argv, **kwarg))\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 703, in get\r\n    raise msg['header']['error']\r\npyroute2.netlink.exceptions.NetlinkError: (22, 'Invalid argument')\r\n```\r\n\r\nNote: With ipv4 it works fine, and I am sure my ipv6 addresses are correct as it would otherwise complain with:\r\n`OSError: illegal IP address string passed to inet_pton`\r\n\r\nI am probably just missing something - any idea?\r\n\r\nThanks!\r\n\r\nAs a side question: How do I get dump_entries() to dump IPv6 entries as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/700", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/700/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/700/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/700/events", "html_url": "https://github.com/svinota/pyroute2/issues/700", "id": 600966635, "node_id": "MDU6SXNzdWU2MDA5NjY2MzU=", "number": 700, "title": "make install fails on README.md", "user": {"login": "jtluka", "id": 5222698, "node_id": "MDQ6VXNlcjUyMjI2OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5222698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtluka", "html_url": "https://github.com/jtluka", "followers_url": "https://api.github.com/users/jtluka/followers", "following_url": "https://api.github.com/users/jtluka/following{/other_user}", "gists_url": "https://api.github.com/users/jtluka/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtluka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtluka/subscriptions", "organizations_url": "https://api.github.com/users/jtluka/orgs", "repos_url": "https://api.github.com/users/jtluka/repos", "events_url": "https://api.github.com/users/jtluka/events{/privacy}", "received_events_url": "https://api.github.com/users/jtluka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T11:26:46Z", "updated_at": "2020-04-17T10:28:09Z", "closed_at": "2020-04-17T10:28:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "With version 1b5131a24cfe9d623151bcb0190235e9f729a036 I am not able to install the pyroute through make install (or python3 setup.py install).\r\n\r\nI was able to workaround this with the following patch:\r\n```\r\ndiff --git a/setup.py b/setup.py\r\nindex 5c387f01..b0f1449e 100644\r\n--- a/setup.py\r\n+++ b/setup.py\r\n@@ -23,7 +23,7 @@ module = __import__(config.get('setup', 'setuplib'),\r\n                     ['setup'], 0)\r\n setup = getattr(module, 'setup')\r\n \r\n-readme = open(\"README.md\", \"r\")\r\n+readme = open(\"README.rst\", \"r\")\r\n \r\n \r\n setup(name='pyroute2',\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/698", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/698/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/698/events", "html_url": "https://github.com/svinota/pyroute2/issues/698", "id": 600794717, "node_id": "MDU6SXNzdWU2MDA3OTQ3MTc=", "number": 698, "title": "possible resource limits issue", "user": {"login": "svinota", "id": 814602, "node_id": "MDQ6VXNlcjgxNDYwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svinota", "html_url": "https://github.com/svinota", "followers_url": "https://api.github.com/users/svinota/followers", "following_url": "https://api.github.com/users/svinota/following{/other_user}", "gists_url": "https://api.github.com/users/svinota/gists{/gist_id}", "starred_url": "https://api.github.com/users/svinota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svinota/subscriptions", "organizations_url": "https://api.github.com/users/svinota/orgs", "repos_url": "https://api.github.com/users/svinota/repos", "events_url": "https://api.github.com/users/svinota/events{/privacy}", "received_events_url": "https://api.github.com/users/svinota/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-16T06:58:06Z", "updated_at": "2020-04-17T10:28:25Z", "closed_at": "2020-04-17T10:28:25Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Related: https://github.com/networkop/docker-topo/issues/39", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/685", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/685/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/685/events", "html_url": "https://github.com/svinota/pyroute2/issues/685", "id": 579854311, "node_id": "MDU6SXNzdWU1Nzk4NTQzMTE=", "number": 685, "title": "When can we expect the next release?", "user": {"login": "mawiegand", "id": 2320926, "node_id": "MDQ6VXNlcjIzMjA5MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2320926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mawiegand", "html_url": "https://github.com/mawiegand", "followers_url": "https://api.github.com/users/mawiegand/followers", "following_url": "https://api.github.com/users/mawiegand/following{/other_user}", "gists_url": "https://api.github.com/users/mawiegand/gists{/gist_id}", "starred_url": "https://api.github.com/users/mawiegand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mawiegand/subscriptions", "organizations_url": "https://api.github.com/users/mawiegand/orgs", "repos_url": "https://api.github.com/users/mawiegand/repos", "events_url": "https://api.github.com/users/mawiegand/events{/privacy}", "received_events_url": "https://api.github.com/users/mawiegand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-12T10:54:16Z", "updated_at": "2020-03-12T23:27:44Z", "closed_at": "2020-03-12T23:27:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are some bug fixes like eebf58da2f0a66c069ec293698311ec896568b07 or bc365a8a6949369cb6c0a21788ba0ed3c04206eb my software relies on.\r\n\r\nAre there any plans for releasing the next version?\r\n\r\nThanks! :smile: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/683", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/683/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/683/events", "html_url": "https://github.com/svinota/pyroute2/issues/683", "id": 577804220, "node_id": "MDU6SXNzdWU1Nzc4MDQyMjA=", "number": 683, "title": "NDB cache management is not thread-safe", "user": {"login": "svet-b", "id": 12831860, "node_id": "MDQ6VXNlcjEyODMxODYw", "avatar_url": "https://avatars3.githubusercontent.com/u/12831860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svet-b", "html_url": "https://github.com/svet-b", "followers_url": "https://api.github.com/users/svet-b/followers", "following_url": "https://api.github.com/users/svet-b/following{/other_user}", "gists_url": "https://api.github.com/users/svet-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/svet-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svet-b/subscriptions", "organizations_url": "https://api.github.com/users/svet-b/orgs", "repos_url": "https://api.github.com/users/svet-b/repos", "events_url": "https://api.github.com/users/svet-b/events{/privacy}", "received_events_url": "https://api.github.com/users/svet-b/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42471876, "node_id": "MDU6TGFiZWw0MjQ3MTg3Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-09T10:29:40Z", "updated_at": "2020-03-15T15:29:59Z", "closed_at": "2020-03-15T15:29:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Situation**:\r\nI have a single pyroute2 NDB object that's shared between threads. Each thread queries the `ndb.neighbours` table to find the IP of a host with a particular MAC address (or vice versa). Different threads sometimes run concurrently.\r\n\r\n**Problem**:\r\nDirectly after a query is executed, a cache cleaning operation takes place - per https://github.com/svinota/pyroute2/blob/0.5.9/pyroute2/ndb/main.py#L322. Occasionally two or more threads will attempt to simultaneously remove the same cache key. The first thread succeeds, but others will throw a KeyError exception, since the cache entry they are trying to remove no longer exists.\r\n\r\n**Potential solution**:\r\nWhile I'm not very familiar with the workings of the NDB cache, a simple/harmless solution in this case would probably be to catch and ignore a KeyError exception on a cache deletion operation. Not sure if there are wider implications for the thread-safety of NDB though.\r\n\r\nI can throw together some reproducer code if helpful, though I hope the issue I'm describing should be fairly clear.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/682", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/682/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/682/events", "html_url": "https://github.com/svinota/pyroute2/issues/682", "id": 577335584, "node_id": "MDU6SXNzdWU1NzczMzU1ODQ=", "number": 682, "title": "question: is it posible to add, delete nftable rules", "user": {"login": "rakafo", "id": 33053647, "node_id": "MDQ6VXNlcjMzMDUzNjQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/33053647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rakafo", "html_url": "https://github.com/rakafo", "followers_url": "https://api.github.com/users/rakafo/followers", "following_url": "https://api.github.com/users/rakafo/following{/other_user}", "gists_url": "https://api.github.com/users/rakafo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rakafo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rakafo/subscriptions", "organizations_url": "https://api.github.com/users/rakafo/orgs", "repos_url": "https://api.github.com/users/rakafo/repos", "events_url": "https://api.github.com/users/rakafo/events{/privacy}", "received_events_url": "https://api.github.com/users/rakafo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42471876, "node_id": "MDU6TGFiZWw0MjQ3MTg3Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-07T13:33:48Z", "updated_at": "2020-03-18T16:50:20Z", "closed_at": "2020-03-18T16:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docs suggest there is some netfilter functionality, but other than this opaque lead I couldn't find any mode details. Would like to do the following - add, remove rules from nftables, accept packets queued in nftables to userspace for further processing (i.e. ... queue num 1)\r\n\r\nAre these things possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/681", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/681/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/681/events", "html_url": "https://github.com/svinota/pyroute2/issues/681", "id": 573135507, "node_id": "MDU6SXNzdWU1NzMxMzU1MDc=", "number": 681, "title": "Missing requirement on Windows: win-inet-pton", "user": {"login": "plazer1", "id": 21986469, "node_id": "MDQ6VXNlcjIxOTg2NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/21986469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plazer1", "html_url": "https://github.com/plazer1", "followers_url": "https://api.github.com/users/plazer1/followers", "following_url": "https://api.github.com/users/plazer1/following{/other_user}", "gists_url": "https://api.github.com/users/plazer1/gists{/gist_id}", "starred_url": "https://api.github.com/users/plazer1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plazer1/subscriptions", "organizations_url": "https://api.github.com/users/plazer1/orgs", "repos_url": "https://api.github.com/users/plazer1/repos", "events_url": "https://api.github.com/users/plazer1/events{/privacy}", "received_events_url": "https://api.github.com/users/plazer1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-29T03:16:52Z", "updated_at": "2020-02-29T17:09:14Z", "closed_at": "2020-02-29T17:09:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> import pyroute2\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Program Files\\Python37\\lib\\site-packages\\pyroute2\\__init__.py\", line 20, in <module>\r\n    import win_inet_pton            # noqa: F401\r\nModuleNotFoundError: No module named 'win_inet_pton'\r\n>>> exit()\r\n\r\nC:\\>pip install win-inet-pton\r\nCollecting win-inet-pton\r\n  Downloading win_inet_pton-1.1.0-py2.py3-none-any.whl (4.8 kB)\r\nInstalling collected packages: win-inet-pton\r\nSuccessfully installed win-inet-pton-1.1.0\r\n\r\nC:\\>python\r\nPython 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 22:22:05) [MSC v.1916 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyroute2\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/678", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/678/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/678/events", "html_url": "https://github.com/svinota/pyroute2/issues/678", "id": 568425098, "node_id": "MDU6SXNzdWU1Njg0MjUwOTg=", "number": 678, "title": "ndb: complete key may work wrong for netns interfaces", "user": {"login": "svinota", "id": 814602, "node_id": "MDQ6VXNlcjgxNDYwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svinota", "html_url": "https://github.com/svinota", "followers_url": "https://api.github.com/users/svinota/followers", "following_url": "https://api.github.com/users/svinota/following{/other_user}", "gists_url": "https://api.github.com/users/svinota/gists{/gist_id}", "starred_url": "https://api.github.com/users/svinota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svinota/subscriptions", "organizations_url": "https://api.github.com/users/svinota/orgs", "repos_url": "https://api.github.com/users/svinota/repos", "events_url": "https://api.github.com/users/svinota/events{/privacy}", "received_events_url": "https://api.github.com/users/svinota/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T16:36:16Z", "updated_at": "2020-03-03T07:48:01Z", "closed_at": "2020-03-03T07:48:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\nIn [6]: ndb.interfaces[{'target': 'test01', 'ifname': 'eth0'}].add_ip('90.0.0.1/24').commit()                                                                                                                                                 \r\n2020-02-20 17:26:15,875    DEBUG pyroute2.ndb.140432418403664.rtnl_object: init\r\n2020-02-20 17:26:15,876    DEBUG pyroute2.ndb.140432418403664.rtnl_object: complete key {'target': 'test01', 'ifname': 'eth0'} from table interfaces\r\n2020-02-20 17:26:15,876    DEBUG pyroute2.ndb.140432418403664.rtnl_object: got {'target': 'test01', 'ifname': 'eth0', 'tflags': 0, 'index': 2}\r\n2020-02-20 17:26:15,877    DEBUG pyroute2.ndb.140432418403664.rtnl_object: load_sql: ('test01', 0, 0, 1, 2, 65731, 4294967295, '5a:7d:1f:71:72:f6', 'ff:ff:ff:ff:ff:ff', 'eth0', 1500, None, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 1, 0, None, None, 0, 65535, 65536, 0, 0, 'up', 'dummy', None)\r\n2020-02-20 17:26:15,877    DEBUG pyroute2.ndb.140432418403664.view.interfaces: cache add (('target', 'test01'), ('tflags', 0), ('index', 2))\r\n2020-02-20 17:26:15,877    DEBUG pyroute2.ndb.140432418403664.rtnl_object: commit: [(1582215975.8760574, 'invalid'), (1582215975.8775373, 'system')]\r\n2020-02-20 17:26:15,877    DEBUG pyroute2.ndb.140432418403664.rtnl_object: init\r\n2020-02-20 17:26:15,878    DEBUG pyroute2.ndb.140432418403664.rtnl_object: complete key OrderedDict([('target', 'test01'), ('tflags', 0), ('index', 2)]) from table interfaces_140432188461520\r\n2020-02-20 17:26:15,878    DEBUG pyroute2.ndb.140432418403664.rtnl_object: got OrderedDict([('target', 'test01'), ('tflags', 0), ('index', 2)])\r\n2020-02-20 17:26:15,878    DEBUG pyroute2.ndb.140432418403664.rtnl_object: load_sql: ('test01', 0, 0, 1, 2, 65731, 4294967295, '5a:7d:1f:71:72:f6', 'ff:ff:ff:ff:ff:ff', 'eth0', 1500, None, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 1, 0, None, None, 0, 65535, 65536, 0, 0, 'up', 'dummy', None)\r\n2020-02-20 17:26:15,880    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot interfaces_140432188461520\r\n2020-02-20 17:26:15,881    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot addresses_140432188461520\r\n2020-02-20 17:26:15,882    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot neighbours_140432188461520\r\n2020-02-20 17:26:15,882    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot routes_140432188461520\r\n2020-02-20 17:26:15,883    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot nh_140432188461520\r\n2020-02-20 17:26:15,884    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot rules_140432188461520\r\n2020-02-20 17:26:15,884    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot netns_140432188461520\r\n2020-02-20 17:26:15,885    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot p2p_140432188461520\r\n2020-02-20 17:26:15,885    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot ifinfo_bridge_140432188461520\r\n2020-02-20 17:26:15,887    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot ifinfo_bond_140432188461520\r\n2020-02-20 17:26:15,888    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot ifinfo_vlan_140432188461520\r\n2020-02-20 17:26:15,889    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot ifinfo_vxlan_140432188461520\r\n2020-02-20 17:26:15,891    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot ifinfo_gre_140432188461520\r\n2020-02-20 17:26:15,892    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot ifinfo_vrf_140432188461520\r\n2020-02-20 17:26:15,893    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot ifinfo_vti_140432188461520\r\n2020-02-20 17:26:15,894    DEBUG pyroute2.ndb.140432418403664.schema: create snapshot ifinfo_vti6_140432188461520\r\n2020-02-20 17:26:15,898    DEBUG pyroute2.ndb.140432418403664.rtnl_object: apply: [(1582215975.8760574, 'invalid'), (1582215975.8775373, 'system')]\r\n2020-02-20 17:26:15,899    DEBUG pyroute2.ndb.140432418403664.rtnl_object: load_sql: ('test01', 0, 0, 1, 2, 65731, 4294967295, '5a:7d:1f:71:72:f6', 'ff:ff:ff:ff:ff:ff', 'eth0', 1500, None, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 1, 0, None, None, 0, 65535, 65536, 0, 0, 'up', 'dummy', None)\r\n2020-02-20 17:26:15,899    DEBUG pyroute2.ndb.140432418403664.rtnl_object: apply req: {'target': 'test01', 'tflags': 0, 'index': 2, 'master': None}\r\n2020-02-20 17:26:15,900    DEBUG pyroute2.ndb.140432418403664.rtnl_object: apply idx_req: {'target': 'test01', 'tflags': 0, 'index': 2}\r\n2020-02-20 17:26:15,900    DEBUG pyroute2.ndb.140432418403664.rtnl_object: apply state: system\r\n2020-02-20 17:26:15,900    DEBUG pyroute2.ndb.140432418403664.rtnl_object: run set ({'target': 'test01', 'tflags': 0, 'index': 2, 'master': None})\r\n2020-02-20 17:26:15,901    DEBUG pyroute2.ndb.140432418403664.rtnl_object: stats: apply set {objid 140432188461520, wtime 0.0, mqsize 0, nqsize 0}\r\n2020-02-20 17:26:15,901    DEBUG pyroute2.ndb.140432418403664.rtnl_object: load_sql: ('test01', 0, 0, 1, 2, 65731, 4294967295, '5a:7d:1f:71:72:f6', 'ff:ff:ff:ff:ff:ff', 'eth0', 1500, None, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 1, 0, None, None, 0, 65535, 65536, 0, 0, 'up', 'dummy', None)\r\n2020-02-20 17:26:15,902    DEBUG pyroute2.ndb.140432418403664.rtnl_object: check: [(1582215975.8760574, 'invalid'), (1582215975.9020474, 'system')]\r\n2020-02-20 17:26:15,902    DEBUG pyroute2.ndb.140432418403664.rtnl_object: check: True\r\n2020-02-20 17:26:15,902    DEBUG pyroute2.ndb.140432418403664.rtnl_object: checked\r\n2020-02-20 17:26:15,902    DEBUG pyroute2.ndb.140432418403664.rtnl_object: stats: 140432188461520 pass\r\n2020-02-20 17:26:15,902    DEBUG pyroute2.ndb.140432418403664.rtnl_object: init\r\n2020-02-20 17:26:15,902    DEBUG pyroute2.ndb.140432418403664.rtnl_object: complete key {'target': 'localhost', 'address': '10.0.0.1', 'prefixlen': 24} from table addresses\r\n2020-02-20 17:26:15,903    DEBUG pyroute2.ndb.140432418403664.rtnl_object: got none\r\n2020-02-20 17:26:15,903    DEBUG pyroute2.ndb.140432418403664.rtnl_object: apply: [(1582215975.9027743, 'invalid')]\r\n2020-02-20 17:26:15,904    DEBUG pyroute2.ndb.140432418403664.rtnl_object: load_sql: None\r\n2020-02-20 17:26:15,904    DEBUG pyroute2.ndb.140432418403664.rtnl_object: apply req: {'target': 'test01', 'prefixlen': 24, 'IFA_ADDRESS': '10.0.0.1', 'address': '10.0.0.1'}\r\n2020-02-20 17:26:15,904    DEBUG pyroute2.ndb.140432418403664.rtnl_object: apply idx_req: {'target': 'test01', 'prefixlen': 24, 'IFA_ADDRESS': '10.0.0.1'}\r\n2020-02-20 17:26:15,904    DEBUG pyroute2.ndb.140432418403664.rtnl_object: apply state: invalid\r\n2020-02-20 17:26:15,904    DEBUG pyroute2.ndb.140432418403664.rtnl_object: run add ({'target': 'test01', 'address': '10.0.0.1', 'prefixlen': 24, 'index': 2})\r\n2020-02-20 17:26:15,908    DEBUG pyroute2.ndb.140432418403664.rtnl_object: stats: apply add {objid 140432190206992, wtime 0.3, mqsize 3, nqsize 0}\r\n2020-02-20 17:26:15,910    DEBUG pyroute2.ndb.140432418403664.rtnl_object: load_sql: None\r\n2020-02-20 17:26:15,910    DEBUG pyroute2.ndb.140432418403664.rtnl_object: check: [(1582215975.9027743, 'invalid')]\r\n2020-02-20 17:26:15,910    DEBUG pyroute2.ndb.140432418403664.rtnl_object: check state: False\r\n2020-02-20 17:26:15,910    DEBUG pyroute2.ndb.140432418403664.rtnl_object: check failed\r\n2020-02-20 17:26:16,211    DEBUG pyroute2.ndb.140432418403664.rtnl_object: run add ({'target': 'test01', 'address': '10.0.0.1', 'prefixlen': 24, 'index': 2})\r\n2020-02-20 17:26:16,214    DEBUG pyroute2.ndb.140432418403664.rtnl_object: error: (17, 'File exists')\r\n2020-02-20 17:26:16,214    DEBUG pyroute2.ndb.140432418403664.rtnl_object: ignore error 17 for {'target': 'localhost', 'address': '10.0.0.1', 'prefixlen': 24}\r\n2020-02-20 17:26:16,214    DEBUG pyroute2.ndb.140432418403664.rtnl_object: run fallback set ({'target': 'test01', 'address': '10.0.0.1', 'prefixlen': 24, 'index': 2})\r\n2020-02-20 17:26:16,215    DEBUG pyroute2.ndb.140432418403664.rtnl_object: stats: apply add {objid 140432190206992, wtime 0.1, mqsize 1, nqsize 0}\r\n2020-02-20 17:26:16,217    DEBUG pyroute2.ndb.140432418403664.rtnl_object: load_sql: ('test01', 0, 2, 24, 128, 0, 2, '10.0.0.1', '10.0.0.1', 'eth0', None, None, None, 128)\r\n2020-02-20 17:26:16,217    DEBUG pyroute2.ndb.140432418403664.rtnl_object: check: [(1582215975.9027743, 'invalid'), (1582215976.2174203, 'system')]\r\n2020-02-20 17:26:16,217    DEBUG pyroute2.ndb.140432418403664.rtnl_object: check: True\r\n2020-02-20 17:26:16,217    DEBUG pyroute2.ndb.140432418403664.rtnl_object: checked\r\n2020-02-20 17:26:16,217    DEBUG pyroute2.ndb.140432418403664.rtnl_object: stats: 140432190206992 pass\r\n\r\n```\r\n\r\nPlease notice\r\n\r\n```\r\n2020-02-20 17:26:15,902    DEBUG pyroute2.ndb.140432418403664.rtnl_object: complete key {'target': 'localhost', 'address': '10.0.0.1', 'prefixlen': 24} from table addresses\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/677", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/677/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/677/events", "html_url": "https://github.com/svinota/pyroute2/issues/677", "id": 567618128, "node_id": "MDU6SXNzdWU1Njc2MTgxMjg=", "number": 677, "title": "import pkg_resources can be very slow", "user": {"login": "charleseidsness", "id": 1932122, "node_id": "MDQ6VXNlcjE5MzIxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1932122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charleseidsness", "html_url": "https://github.com/charleseidsness", "followers_url": "https://api.github.com/users/charleseidsness/followers", "following_url": "https://api.github.com/users/charleseidsness/following{/other_user}", "gists_url": "https://api.github.com/users/charleseidsness/gists{/gist_id}", "starred_url": "https://api.github.com/users/charleseidsness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charleseidsness/subscriptions", "organizations_url": "https://api.github.com/users/charleseidsness/orgs", "repos_url": "https://api.github.com/users/charleseidsness/repos", "events_url": "https://api.github.com/users/charleseidsness/events{/privacy}", "received_events_url": "https://api.github.com/users/charleseidsness/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-19T14:42:55Z", "updated_at": "2020-02-28T13:29:07Z", "closed_at": "2020-02-28T13:29:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running on a little imx6ul processor \"import pkg_resources\" can take 6 seconds or more. It looks like all it is doing is loading the __version__. I've patched it on my system to remove it, something you may want to consider.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/676", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/676/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/676/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/676/events", "html_url": "https://github.com/svinota/pyroute2/issues/676", "id": 564898591, "node_id": "MDU6SXNzdWU1NjQ4OTg1OTE=", "number": 676, "title": "Cannot create bitmap:port ipset", "user": {"login": "resloved", "id": 8146311, "node_id": "MDQ6VXNlcjgxNDYzMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8146311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/resloved", "html_url": "https://github.com/resloved", "followers_url": "https://api.github.com/users/resloved/followers", "following_url": "https://api.github.com/users/resloved/following{/other_user}", "gists_url": "https://api.github.com/users/resloved/gists{/gist_id}", "starred_url": "https://api.github.com/users/resloved/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/resloved/subscriptions", "organizations_url": "https://api.github.com/users/resloved/orgs", "repos_url": "https://api.github.com/users/resloved/repos", "events_url": "https://api.github.com/users/resloved/events{/privacy}", "received_events_url": "https://api.github.com/users/resloved/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-13T19:22:15Z", "updated_at": "2020-02-19T08:41:55Z", "closed_at": "2020-02-19T08:41:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to create a bitmap:port ipset and was receiving an unknown netlink error. So I tried the example shown in ipset.py: https://github.com/svinota/pyroute2/blob/8216d3f84738cf5cc77870a3410f779c60059e49/pyroute2/ipset.py#L398-L400\r\n\r\n```\r\n>>> import pyroute2\r\n>>> ipset = pyroute2.IPSet()\r\n>>> ipset.create(\"bar\", stype=\"bitmap:port\", bitmap_ports_range=(1000, 2000))\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/pyroute2/ipset.py\", line 143, in request\r\n    msg_flags, terminate=terminate)\r\n  File \"/usr/lib/python3/dist-packages/pyroute2/netlink/nlsocket.py\", line 373, in nlm_request\r\n    return tuple(self._genlm_request(*argv, **kwarg))\r\n  File \"/usr/lib/python3/dist-packages/pyroute2/netlink/nlsocket.py\", line 870, in nlm_request\r\n    callback=callback):\r\n  File \"/usr/lib/python3/dist-packages/pyroute2/netlink/nlsocket.py\", line 376, in get\r\n    return tuple(self._genlm_get(*argv, **kwarg))\r\n  File \"/usr/lib/python3/dist-packages/pyroute2/netlink/nlsocket.py\", line 707, in get\r\n    raise msg['header']['error']\r\npyroute2.netlink.exceptions.NetlinkError: (4097, 'Unknown error 4097')\r\n```\r\n\r\nIf I try to create the same ipset normally it works as expected:\r\n\r\n```\r\nroot@l-bon:~# ipset create bar bitmap:port range 1000-2000\r\nroot@l-bon:~# ipset list\r\nName: bar\r\nType: bitmap:port\r\nRevision: 3\r\nHeader: range 1000-2000\r\nSize in memory: 200\r\nReferences: 0\r\nMembers:\r\n```\r\n\r\nI'm using python3 and pyroute2 v0.5.7-1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/672", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/672/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/672/events", "html_url": "https://github.com/svinota/pyroute2/issues/672", "id": 562035120, "node_id": "MDU6SXNzdWU1NjIwMzUxMjA=", "number": 672, "title": "[ERROR]: No module named pyroute2", "user": {"login": "byteshiva", "id": 10637299, "node_id": "MDQ6VXNlcjEwNjM3Mjk5", "avatar_url": "https://avatars0.githubusercontent.com/u/10637299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byteshiva", "html_url": "https://github.com/byteshiva", "followers_url": "https://api.github.com/users/byteshiva/followers", "following_url": "https://api.github.com/users/byteshiva/following{/other_user}", "gists_url": "https://api.github.com/users/byteshiva/gists{/gist_id}", "starred_url": "https://api.github.com/users/byteshiva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byteshiva/subscriptions", "organizations_url": "https://api.github.com/users/byteshiva/orgs", "repos_url": "https://api.github.com/users/byteshiva/repos", "events_url": "https://api.github.com/users/byteshiva/events{/privacy}", "received_events_url": "https://api.github.com/users/byteshiva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-08T15:33:45Z", "updated_at": "2020-03-03T07:48:32Z", "closed_at": "2020-03-03T07:48:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Ubuntu 19.10, I followed all the steps for installation. but still fails to execute the below program. Am i missing something here. I've install bcc etc;\r\n\r\n```\r\npip install pyroute2\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./simple_tc.py\", line 6, in <module>\r\n    from pyroute2 import IPRoute\r\nImportError: No module named pyroute2\r\n\r\n```\r\n\r\n```\r\nchmod 777 simple_tc.py\r\nsudo ./simple_tc.py\r\n```\r\n\r\n**simple_tc.py**\r\n```\r\n#!/usr/bin/python\r\n# Copyright (c) PLUMgrid, Inc.\r\n# Licensed under the Apache License, Version 2.0 (the \"License\")\r\n\r\nfrom bcc import BPF\r\nfrom pyroute2 import IPRoute\r\n\r\nipr = IPRoute()\r\n\r\ntext = \"\"\"\r\nint hello(struct __sk_buff *skb) {\r\n  return 1;\r\n}\r\n\"\"\"\r\n\r\ntry:\r\n    b = BPF(text=text, debug=0)\r\n    fn = b.load_func(\"hello\", BPF.SCHED_CLS)\r\n    ipr.link(\"add\", ifname=\"t1a\", kind=\"veth\", peer=\"t1b\")\r\n    idx = ipr.link_lookup(ifname=\"t1a\")[0]\r\n\r\n    ipr.tc(\"add\", \"ingress\", idx, \"ffff:\")\r\n    ipr.tc(\"add-filter\", \"bpf\", idx, \":1\", fd=fn.fd,\r\n           name=fn.name, parent=\"ffff:\", action=\"ok\", classid=1)\r\n    ipr.tc(\"add\", \"sfq\", idx, \"1:\")\r\n    ipr.tc(\"add-filter\", \"bpf\", idx, \":1\", fd=fn.fd,\r\n           name=fn.name, parent=\"1:\", action=\"ok\", classid=1)\r\nfinally:\r\n    if \"idx\" in locals(): ipr.link(\"del\", index=idx)\r\nprint(\"BPF tc functionality - SCHED_CLS: OK\")\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/669", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/669/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/669/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/669/events", "html_url": "https://github.com/svinota/pyroute2/issues/669", "id": 561507140, "node_id": "MDU6SXNzdWU1NjE1MDcxNDA=", "number": 669, "title": "**pyroute2.netlink.exceptions.NetlinkError: (2, 'No such file or directory')**", "user": {"login": "mnshrr", "id": 47700798, "node_id": "MDQ6VXNlcjQ3NzAwNzk4", "avatar_url": "https://avatars2.githubusercontent.com/u/47700798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnshrr", "html_url": "https://github.com/mnshrr", "followers_url": "https://api.github.com/users/mnshrr/followers", "following_url": "https://api.github.com/users/mnshrr/following{/other_user}", "gists_url": "https://api.github.com/users/mnshrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnshrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnshrr/subscriptions", "organizations_url": "https://api.github.com/users/mnshrr/orgs", "repos_url": "https://api.github.com/users/mnshrr/repos", "events_url": "https://api.github.com/users/mnshrr/events{/privacy}", "received_events_url": "https://api.github.com/users/mnshrr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002345, "node_id": "MDU6TGFiZWwzNTAwMjM0NQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/not%20a%20bug", "name": "not a bug", "color": "e6e6e6", "default": false, "description": ""}, {"id": 35002346, "node_id": "MDU6TGFiZWwzNTAwMjM0Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-07T09:04:53Z", "updated_at": "2020-03-03T07:58:42Z", "closed_at": "2020-03-03T07:58:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "running this code:\r\n```\r\nhttps://github.com/saburhb/eBPF-cast/tree/master/eBPF-switch\r\n```\r\njust modified the python code with the name of my interfaces and virbr0:\r\n```\r\nifc = ipdb.interfaces.enp0s3\r\ndst = ipdb.interfaces.virbr0\r\n```\r\n\r\n```\r\nebpf@ebpf-VirtualBox:~/eBPF/bcc/ME/test_ebpf$ \r\nebpf@ebpf-VirtualBox:~/eBPF/bcc/ME/test_ebpf$ sudo python test_ebpf.py enp0s3 virbr0\r\n2\r\n2\r\n4\r\nOK\r\nTraceback (most recent call last):\r\n  File \"MEtest_ebpf.py\", line 48, in <module>\r\n    ipr.tc(\"del\", \"ingress\", idx, \"ffff:\")\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/iproute/linux.py\", line 1583, in tc\r\n    return tuple(self.nlm_request(msg, msg_type=command, msg_flags=flags))\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 373, in nlm_request\r\n    return tuple(self._genlm_request(*argv, **kwarg))\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 864, in nlm_request\r\n    callback=callback):\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 376, in get\r\n    return tuple(self._genlm_get(*argv, **kwarg))\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 701, in get\r\n    raise msg['header']['error']\r\n**pyroute2.netlink.exceptions.NetlinkError: (2, 'No such file or directory')**\r\n```\r\n\r\nMore info in case:\r\n```\r\nebpf@ebpf-VirtualBox:~/eBPF/bcc/ME/test_ebpf$ brctl show\r\nbridge name\tbridge id\t\tSTP enabled\tinterfaces\r\nvirbr0\t\t8000.08002742d9eb\tno\t\tenp0s8\r\nebpf@ebpf-VirtualBox:~/eBPF/bcc/ME/test_ebpf$ ifconfig\r\nenp0s3    Link encap:Ethernet  HWaddr 08:00:27:eb:2b:bc  \r\n          inet addr:10.0.2.15  Bcast:10.0.2.255  Mask:255.255.255.0\r\n          inet6 addr: fe80::50e7:c44c:1191:5575/64 Scope:Link\r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:8555 errors:0 dropped:0 overruns:0 frame:0\r\n          TX packets:3549 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:7510720 (7.5 MB)  TX bytes:496772 (496.7 KB)\r\n\r\nenp0s8    Link encap:Ethernet  HWaddr 08:00:27:42:d9:eb  \r\n          inet addr:192.168.0.21  Bcast:192.168.0.255  Mask:255.255.255.0\r\n          inet6 addr: 2601:204:c102:ed70:35ac:adee:ca65:1f97/64 Scope:Global\r\n          inet6 addr: fe80::ceeb:de54:5e46:cfb9/64 Scope:Link\r\n          inet6 addr: 2601:204:c102:ed70:ac3b:32a8:2c88:9cf1/64 Scope:Global\r\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\r\n          RX packets:1366 errors:0 dropped:0 overruns:0 frame:0\r\n          TX packets:454 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:144108 (144.1 KB)  TX bytes:44741 (44.7 KB)\r\n\r\nlo        Link encap:Local Loopback  \r\n          inet addr:127.0.0.1  Mask:255.0.0.0\r\n          inet6 addr: ::1/128 Scope:Host\r\n          UP LOOPBACK RUNNING  MTU:65536  Metric:1\r\n          RX packets:1240 errors:0 dropped:0 overruns:0 frame:0\r\n          TX packets:1240 errors:0 dropped:0 overruns:0 carrier:0\r\n          collisions:0 txqueuelen:1000 \r\n          RX bytes:118445 (118.4 KB)  TX bytes:118445 (118.4 KB)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/668", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/668/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/668/events", "html_url": "https://github.com/svinota/pyroute2/issues/668", "id": 561453164, "node_id": "MDU6SXNzdWU1NjE0NTMxNjQ=", "number": 668, "title": "Wireguard endpoint addresses not being set", "user": {"login": "stevekerrison", "id": 630182, "node_id": "MDQ6VXNlcjYzMDE4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/630182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevekerrison", "html_url": "https://github.com/stevekerrison", "followers_url": "https://api.github.com/users/stevekerrison/followers", "following_url": "https://api.github.com/users/stevekerrison/following{/other_user}", "gists_url": "https://api.github.com/users/stevekerrison/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevekerrison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevekerrison/subscriptions", "organizations_url": "https://api.github.com/users/stevekerrison/orgs", "repos_url": "https://api.github.com/users/stevekerrison/repos", "events_url": "https://api.github.com/users/stevekerrison/events{/privacy}", "received_events_url": "https://api.github.com/users/stevekerrison/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-07T06:47:41Z", "updated_at": "2020-02-18T09:08:41Z", "closed_at": "2020-02-18T08:50:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've created a demonstration of my problem in https://github.com/svinota/pyroute2/pull/667 by extending the test case for wireguard.\r\n\r\nIn short: the `endpoint_addr` and `endpoint_port` are not being set.\r\n\r\nRunning in the following environment:\r\n\r\n```\r\nversion: 0.5.7-57-g014e2af3\r\nkernel: 5.3.0-28-generic\r\npython: /usr/local/bin/python [Python 3.7.6]\r\nflake8: /usr/local/bin/flake8 [3.7.9 (mccabe: 0.6.1, pycodestyle: 2.5.0, pyflakes: 2.1.1) CPython 3.7.6 on Linux]\r\n```\r\n\r\nI get this as the output of `wg show ${interface}`:\r\n\r\n```\r\ninterface: pr63c6d68f\r\n  public key: FZ8nQlgAg7JIViZTAarlvMb9/e89jLdZ+mc3LBqAOmI=\r\n  private key: (hidden)\r\n  listening port: 2525\r\n  fwmark: 0x1337\r\n\r\npeer: TGFHcm9zc2VCaWNoZV9DJ2VzdExhUGx1c0JlbGxlPDM=\r\n  allowed ips: 172.16.255.0/24, 172.16.254.0/24\r\n  persistent keepalive: every 15 seconds\r\n```\r\n\r\nThe last part should look more like:\r\n\r\n```\r\npeer: TGFHcm9zc2VCaWNoZV9DJ2VzdExhUGx1c0JlbGxlPDM=\r\n  endpoint: 172.16.254.1:8888\r\n  allowed ips: 172.16.255.0/24, 172.16.254.0/24\r\n  persistent keepalive: every 15 seconds\r\n```\r\n\r\nSo for whatever reason, the endpoint address and port aren't making their way through netlink set properly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/658", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/658/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/658/events", "html_url": "https://github.com/svinota/pyroute2/issues/658", "id": 548802830, "node_id": "MDU6SXNzdWU1NDg4MDI4MzA=", "number": 658, "title": "IPRoute is leaking in v0.5.7", "user": {"login": "YuriGrigorov", "id": 17772148, "node_id": "MDQ6VXNlcjE3NzcyMTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/17772148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuriGrigorov", "html_url": "https://github.com/YuriGrigorov", "followers_url": "https://api.github.com/users/YuriGrigorov/followers", "following_url": "https://api.github.com/users/YuriGrigorov/following{/other_user}", "gists_url": "https://api.github.com/users/YuriGrigorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuriGrigorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuriGrigorov/subscriptions", "organizations_url": "https://api.github.com/users/YuriGrigorov/orgs", "repos_url": "https://api.github.com/users/YuriGrigorov/repos", "events_url": "https://api.github.com/users/YuriGrigorov/events{/privacy}", "received_events_url": "https://api.github.com/users/YuriGrigorov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-13T09:25:51Z", "updated_at": "2020-03-11T18:54:54Z", "closed_at": "2020-03-11T18:54:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using IPRoute to get interface label. After upgrading to v0.5.7 my app started leaking.\r\n\r\nPython version is 2.7.5\r\n\r\nPympler was used to analyze problem.\r\n\r\nRun IPRoute.get_addr() 10000 times\r\n```\r\nfrom pympler import classtracker, muppy, summary\r\nfrom pyroute2 import IPRoute\r\n\r\n\r\ndef get_addr():\r\n    for i in range(10000):\r\n        with IPRoute() as ip:\r\n            ip.get_timeout = 1\r\n            ip.get_addr(label='lo')\r\n\r\n\r\ndef main():\r\n    sum1 = summary.summarize(muppy.get_objects())\r\n    get_addr()\r\n    sum2 = summary.summarize(muppy.get_objects())\r\n    diff = summary.get_diff(sum1, sum2)\r\n    summary.print_(diff)\r\n\r\n    tr = classtracker.ClassTracker()\r\n    tr.track_class(IPRoute)\r\n    tr.create_snapshot()\r\n    get_addr()\r\n    tr.create_snapshot()\r\n    tr.stats.print_summary()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nThe result with pyroute2-**0.5.7**. \r\nWe have 10000 IPRoute objects in memory with 155.04 MB\r\n```\r\n                        types |   # objects |   total size\r\n============================ | =========== | ============\r\n                        dict |      260020 |    124.37 MB\r\n                        list |      113037 |      8.40 MB\r\n           collections.deque |       10000 |      5.95 MB\r\n  builtin_function_or_method |       80000 |      5.49 MB\r\n              instancemethod |       60000 |      4.58 MB\r\n        threading._Condition |       40000 |      2.44 MB\r\n            threading._RLock |       40000 |      2.44 MB\r\n                 thread.lock |       70000 |      2.14 MB\r\n                       tuple |       30005 |      1.83 MB\r\n    pyroute2.common.AddrPool |       20000 |      1.22 MB\r\n           function (_match) |       10000 |      1.14 MB\r\n      function (nlm_request) |       10000 |      1.14 MB\r\n              function (get) |       10000 |      1.14 MB\r\n        socket._socketobject |       10000 |      1.07 MB\r\n                        cell |       20000 |      1.07 MB\r\n---- SUMMARY ------------------------------------------------------------------\r\n                                         active      0     B      average   pct\r\n  pyroute2.iproute.linux.IPRoute              0      0     B      0     B    0%\r\n                                         active      0     B      average   pct\r\n  pyroute2.iproute.linux.IPRoute          10000    155.04 MB     15.88 KB   21%\r\n-------------------------------------------------------------------------------\r\n```\r\n\r\nThe result with pyroute2-**0.5.6**\r\n```\r\n                    types |   # objects |   total size\r\n========================= | =========== | ============\r\n                     list |        3013 |    308.48 KB\r\n                      str |        3021 |    175.22 KB\r\n                     dict |          20 |     15.22 KB\r\n                      int |         320 |      7.50 KB\r\n                     type |           1 |    872     B\r\n       wrapper_descriptor |           4 |    320     B\r\n                    tuple |           3 |    248     B\r\n        member_descriptor |           2 |    144     B\r\n                  weakref |           1 |     88     B\r\n        getset_descriptor |           1 |     72     B\r\n  function (addLevelName) |           0 |      0     B\r\n         function (alloc) |           0 |      0     B\r\n    function (raw_decode) |           0 |      0     B\r\n     _ctypes.PyCArrayType |           0 |      0     B\r\n       datetime.timedelta |           0 |      0     B\r\n---- SUMMARY ------------------------------------------------------------------\r\n                                         active      0     B      average   pct\r\n  pyroute2.iproute.linux.IPRoute              0      0     B      0     B    0%\r\n                                         active      0     B      average   pct\r\n  pyroute2.iproute.linux.IPRoute             11    183.87 KB     16.71 KB    0%\r\n-------------------------------------------------------------------------------\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/644", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/644/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/644/events", "html_url": "https://github.com/svinota/pyroute2/issues/644", "id": 511914820, "node_id": "MDU6SXNzdWU1MTE5MTQ4MjA=", "number": 644, "title": "Instances of Subclass of NetlinkMixin Could Cause Memory Leak in Python2.7", "user": {"login": "edwardbadboy", "id": 307413, "node_id": "MDQ6VXNlcjMwNzQxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/307413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwardbadboy", "html_url": "https://github.com/edwardbadboy", "followers_url": "https://api.github.com/users/edwardbadboy/followers", "following_url": "https://api.github.com/users/edwardbadboy/following{/other_user}", "gists_url": "https://api.github.com/users/edwardbadboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwardbadboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwardbadboy/subscriptions", "organizations_url": "https://api.github.com/users/edwardbadboy/orgs", "repos_url": "https://api.github.com/users/edwardbadboy/repos", "events_url": "https://api.github.com/users/edwardbadboy/events{/privacy}", "received_events_url": "https://api.github.com/users/edwardbadboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-24T12:34:42Z", "updated_at": "2020-03-11T18:51:41Z", "closed_at": "2020-03-11T18:51:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In `pyroute2.netlink.nlsocket.NetlinkMixin.__init__`, it contains the following code:\r\n\r\n```\r\n        if not nlm_generator:\r\n\r\n            def nlm_request(*argv, **kwarg):\r\n                return tuple(self._genlm_request(*argv, **kwarg))\r\n\r\n            def get(*argv, **kwarg):\r\n                return tuple(self._genlm_get(*argv, **kwarg))\r\n\r\n            self._genlm_request = self.nlm_request\r\n            self._genlm_get = self.get\r\n\r\n            self.nlm_request = nlm_request\r\n            self.get = get\r\n```\r\n\r\nAssigning a bound method (`self.get` or `self.nlm_request`) to a data member of the same object would create a circular reference like:\r\n\r\n`objectX --> objectX.__dict__ --> bound method get for objectX --> objectX`\r\n\r\nSince the NetlinkMixin class also provides __del__ method, it would stop the Python2.7 garbage collector from deleting the object (https://docs.python.org/2.7/library/gc.html#gc.garbage). So instances of subclass of NetlinkMixin may lead to memory leak.\r\n\r\nHere is a small script to demonstrate the same symptom.\r\n\r\n```\r\nimport gc\r\n\r\nclass foo(object):\r\n    def __init__(self):\r\n        self.cycle_ref = self.f\r\n\r\n    def f(self):\r\n        print('ok')\r\n\r\n    def __del__(self):\r\n        pass\r\n\r\nfoo()\r\nfoo()\r\ngc.collect()\r\nprint(gc.garbage)\r\n# output:\r\n# [<__main__.foo object at 0x7f1fbbb0b090>, <__main__.foo object at 0x7f1fbbb0b110>]\r\n```\r\n\r\nHere is a script for producing the problem using pyroute2.IPRoute and pyroute2.NetNS (subclass of NetlinkMixin).\r\n\r\n```\r\nimport gc\r\nimport pyroute2\r\n\r\ndef test():\r\n    with pyroute2.IPRoute() as ip:\r\n        pass\r\n    with pyroute2.NetNS('test-ns') as ns:\r\n        pass\r\n\r\nfor i in range(100):\r\n    test()\r\n\r\nprint(gc.garbage)\r\n# It would print lots of IPRoute and NetNS objects\r\n```\r\n\r\nIn Python3 the above two scripts don't print garbage.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/642", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/642/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/642/events", "html_url": "https://github.com/svinota/pyroute2/issues/642", "id": 506074174, "node_id": "MDU6SXNzdWU1MDYwNzQxNzQ=", "number": 642, "title": "Error when setting wireguard peers", "user": {"login": "nickhuber", "id": 407137, "node_id": "MDQ6VXNlcjQwNzEzNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/407137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickhuber", "html_url": "https://github.com/nickhuber", "followers_url": "https://api.github.com/users/nickhuber/followers", "following_url": "https://api.github.com/users/nickhuber/following{/other_user}", "gists_url": "https://api.github.com/users/nickhuber/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickhuber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickhuber/subscriptions", "organizations_url": "https://api.github.com/users/nickhuber/orgs", "repos_url": "https://api.github.com/users/nickhuber/repos", "events_url": "https://api.github.com/users/nickhuber/events{/privacy}", "received_events_url": "https://api.github.com/users/nickhuber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-10-11T21:56:41Z", "updated_at": "2020-02-04T10:34:05Z", "closed_at": "2020-02-04T10:34:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following the instructions on the wireguard file, I get the following exception when trying to call wg.set() to add a peer.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"../bonding/wg-test.py\", line 19, in <module>\r\n    fwmark=0x1337, listen_port=2525, peer=peer)\r\n  File \"/usr/local/lib/python3.7/site-packages/pyroute2/netlink/generic/wireguard.py\", line 295, in set\r\n    raise err\r\npyroute2.netlink.exceptions.NetlinkError: (22, 'Invalid argument')\r\n```\r\n\r\nI tried running the example from https://github.com/svinota/pyroute2/blob/master/pyroute2/netlink/generic/wireguard.py verbatim, and still got the same error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/640", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/640/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/640/events", "html_url": "https://github.com/svinota/pyroute2/issues/640", "id": 504729313, "node_id": "MDU6SXNzdWU1MDQ3MjkzMTM=", "number": 640, "title": "netns: make /var/run/netns bind-mount recursive", "user": {"login": "ralonsoh", "id": 12749437, "node_id": "MDQ6VXNlcjEyNzQ5NDM3", "avatar_url": "https://avatars1.githubusercontent.com/u/12749437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralonsoh", "html_url": "https://github.com/ralonsoh", "followers_url": "https://api.github.com/users/ralonsoh/followers", "following_url": "https://api.github.com/users/ralonsoh/following{/other_user}", "gists_url": "https://api.github.com/users/ralonsoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralonsoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralonsoh/subscriptions", "organizations_url": "https://api.github.com/users/ralonsoh/orgs", "repos_url": "https://api.github.com/users/ralonsoh/repos", "events_url": "https://api.github.com/users/ralonsoh/events{/privacy}", "received_events_url": "https://api.github.com/users/ralonsoh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T15:32:01Z", "updated_at": "2019-10-14T06:03:47Z", "closed_at": "2019-10-14T06:03:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related bug: https://patchwork.ozlabs.org/patch/796300/\r\n\r\nWhen ip netns {add|delete} is first run, it bind-mounts /var/run/netns on top of itself, then marks it as shared. However, if there are already bind-mounts in the directory from other tools, these would not be propagated. Fix this by recursively bind-mounting.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/638", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/638/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/638/events", "html_url": "https://github.com/svinota/pyroute2/issues/638", "id": 500973995, "node_id": "MDU6SXNzdWU1MDA5NzM5OTU=", "number": 638, "title": "NDB() change default route mtu?", "user": {"login": "DaveSeddonVDMS", "id": 40901422, "node_id": "MDQ6VXNlcjQwOTAxNDIy", "avatar_url": "https://avatars3.githubusercontent.com/u/40901422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DaveSeddonVDMS", "html_url": "https://github.com/DaveSeddonVDMS", "followers_url": "https://api.github.com/users/DaveSeddonVDMS/followers", "following_url": "https://api.github.com/users/DaveSeddonVDMS/following{/other_user}", "gists_url": "https://api.github.com/users/DaveSeddonVDMS/gists{/gist_id}", "starred_url": "https://api.github.com/users/DaveSeddonVDMS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DaveSeddonVDMS/subscriptions", "organizations_url": "https://api.github.com/users/DaveSeddonVDMS/orgs", "repos_url": "https://api.github.com/users/DaveSeddonVDMS/repos", "events_url": "https://api.github.com/users/DaveSeddonVDMS/events{/privacy}", "received_events_url": "https://api.github.com/users/DaveSeddonVDMS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-01T15:28:07Z", "updated_at": "2020-03-11T18:56:10Z", "closed_at": "2020-03-11T18:56:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "G'day,\r\n\r\nI hope you are well.\r\n\r\nI'm trying to add MTU=1500 to the default route, but struggling.  Possibly the parsing of the dst is different than expected?\r\n\r\nCan change MTU on an Ethernet interface easily enough.\r\n\r\n```\r\n#!/usr/bin/python3\r\n\r\nimport pyroute2\r\n\r\nif __name__ == \"__main__\":\r\n  with pyroute2.NDB() as ndb:\r\n    (ndb\r\n     .interfaces['enp0s31f6']\r\n     .set('mtu', 1500)\r\n     .commit()) #commit is implied actually, so not really needed\r\n```\r\nThis works nicely! Thanks!\r\n\r\nHowever, changing routes is harder:\r\n```\r\n#!/usr/bin/python3\r\n\r\nimport pyroute2\r\n\r\nif __name__ == \"__main__\":\r\n  with pyroute2.NDB() as ndb:\r\n    with ndb.routes['default'] as route:\r\n      route.set('mtu',1500)\r\n      route.commit()\r\n```\r\n\r\nError - Doesn't like 'default'\r\n```\r\ndas@das-X1-4th:~/Documents/jumbos$ sudo ./python3_pyroute2_play_2019_09_20.py\r\nTraceback (most recent call last):\r\n  File \"./python3_pyroute2_play_2019_09_20.py\", line 11, in <module>\r\n    with ndb.routes['default'] as route:\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/ndb/main.py\", line 309, in __getitem__\r\n    match_pairs=match_pairs)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/ndb/objects/route.py\", line 57, in __init__\r\n    super(Route, self).__init__(*argv, **kwarg)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/ndb/objects/__init__.py\", line 80, in __init__\r\n    ckey = self.complete_key(key)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/ndb/objects/route.py\", line 66, in complete_key\r\n    ret_key['RTA_DST'], ret_key['dst_len'] = key.split('/')\r\nValueError: not enough values to unpack (expected 2, got 1)\r\n```\r\n\r\nDoes find the default route via '/0', but can't update the route.\r\n```\r\n#!/usr/bin/python3\r\n\r\nimport pyroute2\r\n\r\nif __name__ == \"__main__\":\r\n  with pyroute2.NDB() as ndb:\r\n    with ndb.routes['/0'] as route:\r\n      route.set('mtu',1500)\r\n      route.commit()\r\n```\r\n\r\n```\r\ndas@das-X1-4th:~/Documents/jumbos$ sudo ./python3_pyroute2_play_2019_09_20.py\r\nTraceback (most recent call last):\r\n  File \"./python3_pyroute2_play_2019_09_20.py\", line 19, in <module>\r\n    route.commit()\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/ndb/objects/__init__.py\", line 308, in commit\r\n    self.apply()\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/ndb/objects/route.py\", line 90, in apply\r\n    return super(Route, self).apply(rollback)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/ndb/objects/__init__.py\", line 440, in apply\r\n    .api(self.api, method, **req))\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/ndb/source.py\", line 205, in api\r\n    return getattr(self.nl, name)(*argv, **kwarg)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/iproute/linux.py\", line 1694, in route\r\n    ret = tuple(ret)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/netlink/nlsocket.py\", line 861, in nlm_request\r\n    self.put(msg, msg_type, msg_flags, msg_seq=msg_seq)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/netlink/nlsocket.py\", line 612, in put\r\n    self.sendto_gate(msg, addr)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/netlink/rtnl/iprsocket.py\", line 61, in _gate_linux\r\n    msg.encode()\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/netlink/rtnl/rtmsg.py\", line 704, in encode\r\n    super(rtmsg_base, self).encode()\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/netlink/rtnl/rtmsg.py\", line 35, in encode\r\n    return super(nlflags, self).encode()\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/netlink/__init__.py\", line 1073, in encode\r\n    offset = self.encode_nlas(offset)\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/netlink/__init__.py\", line 1382, in encode_nlas\r\n    nla.encode()\r\n  File \"/home/das/.local/lib/python3.7/site-packages/pyroute2/netlink/__init__.py\", line 1712, in encode\r\n    self['value'] = inet_pton(family, self.value)\r\nOSError: illegal IP address string passed to inet_pton\r\n...\r\n```\r\n\r\n```\r\ndas@das-X1-4th:~/Documents/jumbos$ pip3 freeze | grep pyroute\r\npyroute2==0.5.6\r\ndas@das-X1-4th:~/Documents/jumbos$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 19.04\r\nRelease:\t19.04\r\nCodename:\tdisco\r\n```\r\n\r\nThanks in advance.\r\n\r\nKind regards,\r\nDave", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/630", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/630/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/630/events", "html_url": "https://github.com/svinota/pyroute2/issues/630", "id": 480482321, "node_id": "MDU6SXNzdWU0ODA0ODIzMjE=", "number": 630, "title": "IPRoute().flush_routes warnings in kernel log when RTA_PREF present", "user": {"login": "pallas", "id": 848304, "node_id": "MDQ6VXNlcjg0ODMwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/848304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pallas", "html_url": "https://github.com/pallas", "followers_url": "https://api.github.com/users/pallas/followers", "following_url": "https://api.github.com/users/pallas/following{/other_user}", "gists_url": "https://api.github.com/users/pallas/gists{/gist_id}", "starred_url": "https://api.github.com/users/pallas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pallas/subscriptions", "organizations_url": "https://api.github.com/users/pallas/orgs", "repos_url": "https://api.github.com/users/pallas/repos", "events_url": "https://api.github.com/users/pallas/events{/privacy}", "received_events_url": "https://api.github.com/users/pallas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-14T05:03:09Z", "updated_at": "2019-10-08T08:38:48Z", "closed_at": "2019-10-08T08:38:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `flush_routes`, if `get_routes` returns with `RTA_PREF`, the put to `RTM_DELROUTE` results in the following dmesg, at least on Linux 5.0.0:\r\n```\r\nnetlink: 'python3': attribute type 20 has an invalid length.\r\n```\r\nThe routes *are* removed, but this causes future route modifications to fail. Removing `RTA_PREF` from `route['attrs']` fixes the issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/629", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/629/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/629/events", "html_url": "https://github.com/svinota/pyroute2/issues/629", "id": 480028624, "node_id": "MDU6SXNzdWU0ODAwMjg2MjQ=", "number": 629, "title": "[announce] back to work after a long pause", "user": {"login": "svinota", "id": 814602, "node_id": "MDQ6VXNlcjgxNDYwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svinota", "html_url": "https://github.com/svinota", "followers_url": "https://api.github.com/users/svinota/followers", "following_url": "https://api.github.com/users/svinota/following{/other_user}", "gists_url": "https://api.github.com/users/svinota/gists{/gist_id}", "starred_url": "https://api.github.com/users/svinota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svinota/subscriptions", "organizations_url": "https://api.github.com/users/svinota/orgs", "repos_url": "https://api.github.com/users/svinota/repos", "events_url": "https://api.github.com/users/svinota/events{/privacy}", "received_events_url": "https://api.github.com/users/svinota/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-13T08:35:29Z", "updated_at": "2020-03-11T18:51:55Z", "closed_at": "2020-03-11T18:51:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Over a month away from keyboard \u2014 now starting to clean up the issues queue. Pls keep calm.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/628", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/628/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/628/events", "html_url": "https://github.com/svinota/pyroute2/issues/628", "id": 479877920, "node_id": "MDU6SXNzdWU0Nzk4Nzc5MjA=", "number": 628, "title": "NDB: lost sync in apply() (due 'File exists'?) when trying to bring up an interface inside a network namespace", "user": {"login": "rytilahti", "id": 3705853, "node_id": "MDQ6VXNlcjM3MDU4NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3705853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rytilahti", "html_url": "https://github.com/rytilahti", "followers_url": "https://api.github.com/users/rytilahti/followers", "following_url": "https://api.github.com/users/rytilahti/following{/other_user}", "gists_url": "https://api.github.com/users/rytilahti/gists{/gist_id}", "starred_url": "https://api.github.com/users/rytilahti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rytilahti/subscriptions", "organizations_url": "https://api.github.com/users/rytilahti/orgs", "repos_url": "https://api.github.com/users/rytilahti/repos", "events_url": "https://api.github.com/users/rytilahti/events{/privacy}", "received_events_url": "https://api.github.com/users/rytilahti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42471876, "node_id": "MDU6TGFiZWw0MjQ3MTg3Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}, {"id": 35002346, "node_id": "MDU6TGFiZWwzNTAwMjM0Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 45010624, "node_id": "MDU6TGFiZWw0NTAxMDYyNA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/waiting%20for%20input", "name": "waiting for input", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2019-08-12T22:25:59Z", "updated_at": "2020-03-02T20:06:11Z", "closed_at": "2020-03-02T20:06:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi and thanks for the great library!\r\n\r\nI have been experimenting with the NDB interface and network namespaces, and I'm currently struggling to make the network interface inside a netns to go up.\r\n\r\nAs similar procedure works fine with the \"IPDB-way\", I think it is a bug, but I couldn't figure out where should I start looking to fix it. \r\n\r\nP.S. A quick side-question, is it safe to use multiple context managers, ala `with ndb.interfaces[peer_dict] as peer_veth, nbd.interfaces[root_ns_if] as root_veth:`?\r\n\r\n# NDB\r\n\r\n## interface on main namespace\r\n```\r\n1272: prcf30af0d-r@if2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000\r\n    link/ether a6:6f:4e:64:dd:36 brd ff:ff:ff:ff:ff:ff link-netns prcf30af0d\r\n    inet 192.168.233.0/31 scope global prcf30af0d-r\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::a46f:4eff:fe64:dd36/64 scope link \r\n       valid_lft forever preferred_lft forever\r\n```\r\n\r\n## Interface inside the NS\r\n\r\n* Note the smallish index number, potentially related as IPDB assigns a sequantial index?\r\n* On the main namespace that index is reserved for the ethernet adapter.\r\n\r\n```\r\n2: prcf30af0d-p@if1272: <BROADCAST,MULTICAST> mtu 1500 qdisc noqueue state DOWN group default qlen 1000\r\n    link/ether 36:65:27:22:ae:76 brd ff:ff:ff:ff:ff:ff link-netnsid 0\r\n    inet 192.168.233.1/31 scope global prcf30af0d-p\r\n       valid_lft forever preferred_lft forever\r\n```\r\n\r\n## Debug log \r\n\r\n```\r\nDEBUG:pyroute2.ndb.139946316556880.view.interfaces:cache del (('target', 'localhost'), ('tflags', 0), ('index', 1272))\r\nDEBUG:pyroute2.ndb.139946316556880.view.interfaces:cache add (('target', 'prcf30af0d'), ('tflags', 0), ('index', 2))\r\nINFO:__main__:setting peer iface prcf30af0d-p up with 192.168.233.1/31\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:commit: [(1565646783.800148, 'invalid'), (1565646783.8018253, 'system')]\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:init\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:complete key OrderedDict([('target', 'prcf30af0d'), ('tflags', 0), ('index', 2)]) from table interfaces_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:got OrderedDict([('target', 'prcf30af0d'), ('tflags', 0), ('index', 2)])\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 0, 1, 2, 4098, 0, '36:65:27:22:ae:76', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-p', 1500, 1272, 'noop', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 0, 1, 0, None, 0, 65535, 65536, 0, 1, 'down', 'veth', None)\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot interfaces_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot addresses_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot neighbours_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot routes_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot nh_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot rules_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot netns_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot p2p_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot ifinfo_bridge_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot ifinfo_bond_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot ifinfo_vlan_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot ifinfo_vxlan_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot ifinfo_gre_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot ifinfo_vrf_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot ifinfo_vti_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.schema:create snapshot ifinfo_vti6_139946275317232\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:apply: [(1565646783.800148, 'invalid'), (1565646783.8018253, 'system')]\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 0, 1, 2, 4098, 0, '36:65:27:22:ae:76', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-p', 1500, 1272, 'noop', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 0, 1, 0, None, 0, 65535, 65536, 0, 1, 'down', 'veth', None)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:apply req: {'target': 'prcf30af0d', 'tflags': 0, 'index': 2, 'state': 'up', 'master': None}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:apply idx_req: {'target': 'prcf30af0d', 'tflags': 0, 'index': 2}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:apply state: system\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:run set ({'target': 'prcf30af0d', 'tflags': 0, 'index': 2, 'state': 'up', 'master': None})\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:stats: apply set {objid 139946275317232, wtime 0.4, mqsize 4, nqsize 0}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_rtnl: {'length': 1360, 'type': 16, 'flags': 0, 'sequence_number': 0, 'pid': 0, 'error': None, 'stats': Stats(qsize=0, delta=0, delay=0)}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 0, 1, 2, 69635, 1, '36:65:27:22:ae:76', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-p', 1500, 1272, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 1, 2, 0, None, 0, 65535, 65536, 1, 1, 'up', 'veth', None)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 0, 1, 2, 69635, 1, '36:65:27:22:ae:76', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-p', 1500, 1272, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 1, 2, 0, None, 0, 65535, 65536, 1, 1, 'up', 'veth', None)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check: [(1565646783.800148, 'invalid'), (1565646783.844721, 'system')]\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check: True\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:checked\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:stats: 139946275317232 pass\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:init\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:complete key {'target': 'localhost', 'address': '192.168.233.1', 'prefixlen': 31} from table addresses\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_rtnl: {'length': 1360, 'type': 16, 'flags': 0, 'sequence_number': 0, 'pid': 0, 'error': None, 'stats': Stats(qsize=0, delta=0, delay=0)}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('localhost', 0, 0, 1, 1272, 69699, 0, 'a6:6f:4e:64:dd:36', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-r', 1500, 2, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 1, 2, 0, None, 0, 65535, 65536, 1, 1, 'up', 'veth', None)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_rtnl: {'length': 1360, 'type': 16, 'flags': 0, 'sequence_number': 0, 'pid': 0, 'error': None, 'stats': Stats(qsize=0, delta=0, delay=0)}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 0, 1, 2, 69699, 0, '36:65:27:22:ae:76', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-p', 1500, 1272, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 1, 2, 0, None, 0, 65535, 65536, 1, 1, 'up', 'veth', None)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:got none\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:apply: [(1565646783.8450475, 'invalid')]\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: None\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:apply req: {'target': 'prcf30af0d', 'prefixlen': 31, 'IFA_ADDRESS': '192.168.233.1', 'address': '192.168.233.1'}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:apply idx_req: {'target': 'prcf30af0d', 'prefixlen': 31, 'IFA_ADDRESS': '192.168.233.1'}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:apply state: invalid\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:run add ({'target': 'prcf30af0d', 'address': '192.168.233.1', 'prefixlen': 31, 'index': 2})\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:stats: apply add {objid 139946275357616, wtime 0.0, mqsize 0, nqsize 0}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 2, 31, 128, 0, 2, '192.168.233.1', '192.168.233.1', 'prcf30af0d-p', None, None, None, 128)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check: [(1565646783.8450475, 'invalid'), (1565646783.854934, 'system')]\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check changed: {'target'}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check failed\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:run add ({'target': 'prcf30af0d', 'address': '192.168.233.1', 'prefixlen': 31, 'index': 2})\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:error: (17, 'File exists')\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:ignore error 17 for {'target': 'localhost', 'address': '192.168.233.1', 'prefixlen': 31, 'tflags': 0, 'family': 2, 'flags': 128, 'scope': 0, 'index': 2, 'local': '192.168.233.1', 'label': 'prcf30af0d-p', 'broadcast': None, 'anycast': None, 'multicast': None}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:run fallback set ({'target': 'prcf30af0d', 'address': '192.168.233.1', 'prefixlen': 31, 'index': 2})\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:stats: apply add {objid 139946275357616, wtime 0.1, mqsize 1, nqsize 0}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 2, 31, 128, 0, 2, '192.168.233.1', '192.168.233.1', 'prcf30af0d-p', None, None, None, 128)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check: [(1565646783.8450475, 'invalid'), (1565646783.8588128, 'system')]\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check changed: {'target'}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check failed\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:run add ({'target': 'prcf30af0d', 'address': '192.168.233.1', 'prefixlen': 31, 'index': 2})\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:error: (17, 'File exists')\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:ignore error 17 for {'target': 'localhost', 'address': '192.168.233.1', 'prefixlen': 31, 'tflags': 0, 'family': 2, 'flags': 128, 'scope': 0, 'index': 2, 'local': '192.168.233.1', 'label': 'prcf30af0d-p', 'broadcast': None, 'anycast': None, 'multicast': None}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:run fallback set ({'target': 'prcf30af0d', 'address': '192.168.233.1', 'prefixlen': 31, 'index': 2})\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:stats: apply add {objid 139946275357616, wtime 0.2, mqsize 0, nqsize 0}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 2, 31, 128, 0, 2, '192.168.233.1', '192.168.233.1', 'prcf30af0d-p', None, None, None, 128)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check: [(1565646783.8450475, 'invalid'), (1565646783.9650478, 'system')]\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check changed: {'target'}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check failed\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:run add ({'target': 'prcf30af0d', 'address': '192.168.233.1', 'prefixlen': 31, 'index': 2})\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:error: (17, 'File exists')\r\n\r\n<I snipped off some more tries from here>\r\n\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:run set ({'target': 'prcf30af0d', 'tflags': 0, 'index': 2, 'state': 'down', 'master': None})\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:stats: apply set {objid 139946275002032, wtime 0.4, mqsize 4, nqsize 0}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_rtnl: {'length': 1360, 'type': 16, 'flags': 0, 'sequence_number': 0, 'pid': 0, 'error': None, 'stats': Stats(qsize=0, delta=0, delay=0)}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 0, 1, 2, 4098, 1, '36:65:27:22:ae:76', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-p', 1500, 1272, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 0, 3, 0, None, 0, 65535, 65536, 1, 2, 'down', 'veth', None)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('prcf30af0d', 0, 0, 1, 2, 4098, 0, '36:65:27:22:ae:76', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-p', 1500, 1272, 'noop', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 0, 1, 0, None, 0, 65535, 65536, 0, 1, 'down', 'veth', None)\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check: [(1565646783.808394, 'invalid'), (1565646798.4870124, 'system')]\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:check: True\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:checked\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:stats: 139946275002032 pass\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_rtnl: {'length': 1360, 'type': 16, 'flags': 0, 'sequence_number': 0, 'pid': 0, 'error': None, 'stats': Stats(qsize=0, delta=-1, delay=0)}\r\nDEBUG:pyroute2.ndb.139946316556880.rtnl_object:load_sql: ('localhost', 0, 0, 1, 1272, 4099, 0, 'a6:6f:4e:64:dd:36', 'ff:ff:ff:ff:ff:ff', 'prcf30af0d-r', 1500, 2, 'noqueue', None, 1000, 0, None, None, None, 0, None, 0, 1, 1, 0, 3, 0, None, 0, 65535, 65536, 1, 2, 'up', 'veth', None)\r\nTraceback (most recent call last):\r\n  File \"test_ndb.py\", line 65, in <module>\r\n    create_namespace_nbd()\r\n  File \"test_ndb.py\", line 39, in create_namespace_nbd\r\n    _LOGGER.info(f\"setting peer iface {peer_ns_if} up with {peer_ip_w_cidr}\")\r\n  File \"/code/path/lib/pyroute2/pyroute2/ndb/objects/__init__.py\", line 261, in __exit__\r\n    self.commit()\r\n  File \"/code/path/lib/pyroute2/pyroute2/ndb/objects/__init__.py\", line 496, in commit\r\n    self.apply()\r\n  File \"/code/path/lib/pyroute2/pyroute2/ndb/objects/interface.py\", line 315, in apply\r\n    super(Interface, self).apply(rollback)\r\n  File \"/code/path/lib/pyroute2/pyroute2/ndb/objects/__init__.py\", line 715, in apply\r\n    raise ret\r\n  File \"/code/path/lib/pyroute2/pyroute2/ndb/objects/interface.py\", line 211, in do_add_ip\r\n    self.ipaddr.create(spec).apply()\r\n  File \"/code/path/lib/pyroute2/pyroute2/ndb/objects/__init__.py\", line 672, in apply\r\n    raise Exception('lost sync in apply()')\r\nException: lost sync in apply()\r\n```\r\n\r\n# IPDB variant\r\n\r\n* Running the IPDB version works as expected.\r\n* The interface numbers are sequential here.\r\n\r\n## Main namespace\r\n\r\n```\r\n1274: pr5ddf7a81-r@if1273: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000\r\n    link/ether 62:f4:1a:e1:10:23 brd ff:ff:ff:ff:ff:ff link-netns pr5ddf7a81\r\n    inet 192.168.233.0/31 scope global pr5ddf7a81-r\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::60f4:1aff:fee1:1023/64 scope link \r\n       valid_lft forever preferred_lft forever\r\n```\r\n       \r\n## Inside the namespace\r\n\r\n```\r\n1273: pr5ddf7a81-p@if1274: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000\r\n    link/ether d6:80:b2:5a:a0:04 brd ff:ff:ff:ff:ff:ff link-netnsid 0\r\n    inet 192.168.233.1/31 scope global pr5ddf7a81-p\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::d480:b2ff:fe5a:a004/64 scope link \r\n       valid_lft forever preferred_lft forever\r\n```\r\n\r\n# Test script\r\n\r\n* Note, this does not clean the interfaces nor the namespace afterwards, for testing I simple used `ip -all netns delete`.\r\n\r\n```\r\nfrom pyroute2 import IPRoute, netns, NetNS, NDB, IPDB\r\nfrom pyroute2.common import uifname\r\nimport logging\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\n_LOGGER = logging.getLogger(__name__)\r\n\r\nroot_ip, peer_ip = \"192.168.233.0\", \"192.168.233.1\"\r\nroot_ip_w_cidr = f\"{root_ip}/31\"\r\npeer_ip_w_cidr = f\"{peer_ip}/31\"\r\n\r\nnsname = uifname()\r\n\r\nroot_ns_if = f\"{nsname}-r\"\r\npeer_ns_if = f\"{nsname}-p\"\r\n\r\n\r\ndef create_namespace_nbd():\r\n    ndb = NDB(debug=True)\r\n\r\n    ndb.sources.add(netns=nsname)\r\n\r\n    ndb.interfaces.create(\r\n        ifname=root_ns_if, kind=\"veth\", peer={\"ifname\": peer_ns_if, \"net_ns_fd\": nsname}\r\n    ).commit()\r\n\r\n    with ndb.interfaces[root_ns_if] as root_veth:\r\n        root_veth.add_ip(root_ip_w_cidr)\r\n        root_veth[\"state\"] = \"up\"\r\n        _LOGGER.info(f\"setting root iface {root_ns_if} up with {root_ip_w_cidr}\")\r\n\r\n    # need to use net_ns_fd to locate the peer interface\r\n    peer_dict = {\"net_ns_fd\": nsname, \"ifname\": peer_ns_if}\r\n    with ndb.interfaces[peer_dict] as peer_veth:\r\n        peer_veth.add_ip(peer_ip_w_cidr)\r\n        peer_veth[\"state\"] = \"up\"\r\n        _LOGGER.info(f\"setting peer iface {peer_ns_if} up with {peer_ip_w_cidr}\")\r\n\r\n\r\ndef create_namespace_ipr():\r\n    ipdb = IPDB()\r\n\r\n    ns = NetNS(nsname)\r\n\r\n    ipdb.create(ifname=root_ns_if, kind=\"veth\", peer=peer_ns_if).commit()\r\n    with ipdb.interfaces[peer_ns_if] as i:\r\n        i.net_ns_fd = nsname\r\n\r\n    with ipdb.interfaces[root_ns_if] as root_veth:\r\n        root_veth.add_ip(root_ip_w_cidr)\r\n        root_veth.up()\r\n\r\n    ipdb_ns = IPDB(nl=ns)\r\n\r\n    with ipdb_ns.interfaces[peer_ns_if] as peer_veth:\r\n        peer_veth.add_ip(peer_ip_w_cidr)\r\n        peer_veth.up()\r\n\r\n    _LOGGER.info(f\"created successfully.\")\r\n    ipdb_ns.release()\r\n    ns.close()\r\n\r\n\r\n# create_namespace_nbd()\r\ncreate_namespace_ipr()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/623", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/623/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/623/events", "html_url": "https://github.com/svinota/pyroute2/issues/623", "id": 473856909, "node_id": "MDU6SXNzdWU0NzM4NTY5MDk=", "number": 623, "title": "NetNS leaks FDs ", "user": {"login": "ndesh26", "id": 12979163, "node_id": "MDQ6VXNlcjEyOTc5MTYz", "avatar_url": "https://avatars3.githubusercontent.com/u/12979163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndesh26", "html_url": "https://github.com/ndesh26", "followers_url": "https://api.github.com/users/ndesh26/followers", "following_url": "https://api.github.com/users/ndesh26/following{/other_user}", "gists_url": "https://api.github.com/users/ndesh26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndesh26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndesh26/subscriptions", "organizations_url": "https://api.github.com/users/ndesh26/orgs", "repos_url": "https://api.github.com/users/ndesh26/repos", "events_url": "https://api.github.com/users/ndesh26/events{/privacy}", "received_events_url": "https://api.github.com/users/ndesh26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-29T05:31:15Z", "updated_at": "2019-08-15T13:30:59Z", "closed_at": "2019-08-15T13:30:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After the change in behavior of the `Transport` object in the commit 4420185675b9ca9f71f7110653ee77b957ebbbcb, NetNS leaks FDs.\r\n\r\nAfter the commit `Transport.close()` doesn't close the `file_obj` associated with it. We are supposed to close it manually after the call to `close()`. This leads to a FD leak in the `__init__` function.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/620", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/620/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/620/events", "html_url": "https://github.com/svinota/pyroute2/issues/620", "id": 464616763, "node_id": "MDU6SXNzdWU0NjQ2MTY3NjM=", "number": 620, "title": "Hanging routes", "user": {"login": "pyroute2user", "id": 52570183, "node_id": "MDQ6VXNlcjUyNTcwMTgz", "avatar_url": "https://avatars1.githubusercontent.com/u/52570183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyroute2user", "html_url": "https://github.com/pyroute2user", "followers_url": "https://api.github.com/users/pyroute2user/followers", "following_url": "https://api.github.com/users/pyroute2user/following{/other_user}", "gists_url": "https://api.github.com/users/pyroute2user/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyroute2user/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyroute2user/subscriptions", "organizations_url": "https://api.github.com/users/pyroute2user/orgs", "repos_url": "https://api.github.com/users/pyroute2user/repos", "events_url": "https://api.github.com/users/pyroute2user/events{/privacy}", "received_events_url": "https://api.github.com/users/pyroute2user/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-05T12:24:01Z", "updated_at": "2019-08-20T14:42:43Z", "closed_at": "2019-08-20T14:42:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. Why routes are not deleted in the ipdb module when the interface is down. For example:\r\n```\r\npc@user:~$ sudo ip route add 8.8.8.8 via 10.10.3.1 dev enp3s0 table 205\r\npc@user:~$ ip route show table 205\r\n8.8.8.8 via 10.10.3.1 dev enp3s0 linkdown\r\npc@user:~$\r\n```\r\n```\r\nIn [1]: from pyroute2 import IPDB                                                                                                                                                                                    \r\n\r\nIn [2]: ipdb = IPDB()                                                                                                                                                                                                \r\n\r\nIn [3]: print(ipdb.routes.tables[205])                                                                                                                                                                               \r\n[{'family': 2, 'ipdb_priority': 0, 'metrics': {}, 'oif': 7859, 'type': 1, 'dst_len': 32, 'dst': '8.8.8.8/32', 'scope': 0, 'src_len': 0, 'flags': 16, 'tos': 0, 'encap': {}, 'proto': 3, 'ipdb_scope': 'system', 'multipath': (), 'table': 205, 'gateway': '10.10.3.1'}]\r\n```\r\n```\r\npc@user:~$ sudo ip link set enp3s0 down\r\npc@user:~$ ip route show table 205\r\npc@user:~$\r\n```\r\n```\r\nIn [4]: print(ipdb.routes.tables[205])                                                                                                                                                                               \r\n[{'family': 2, 'ipdb_priority': 0, 'metrics': {}, 'oif': 7859, 'type': 1, 'dst_len': 32, 'dst': '8.8.8.8/32', 'scope': 0, 'src_len': 0, 'flags': 16, 'tos': 0, 'encap': {}, 'proto': 3, 'ipdb_scope': 'system', 'multipath': (), 'table': 205, 'gateway': '10.10.3.1'}]\r\n```\r\nThe RoutingTableSet class has method: https://github.com/svinota/pyroute2/blob/6b56aa2f0d313f073caf649df1160afd545a8f8c/pyroute2/ipdb/routes.py#L1219\r\nassociated with the RTM_DELLINK event. But RTM_DELLINK is raised only when interfaces are deleted, not turned off. Is it possible add the following method:\r\n```\r\n    def gc_mark_down(self, msg):\r\n        if msg['family'] != 0 or msg['state'] != 'down':\r\n            return\r\n\r\n        for record in self.filter({'oif': msg['index']}):\r\n            with record['route']._direct_state:\r\n                record['route']['ipdb_scope'] = 'gc'\r\n                record['route']._gctime = time.time()\r\n        for record in self.filter({'iif': msg['index']}):\r\n            with record['route']._direct_state:\r\n                record['route']['ipdb_scope'] = 'gc'\r\n                record['route']._gctime = time.time()\r\n```\r\nand bind it to event RTM_NEWLINK ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/614", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/614/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/614/events", "html_url": "https://github.com/svinota/pyroute2/issues/614", "id": 459185932, "node_id": "MDU6SXNzdWU0NTkxODU5MzI=", "number": 614, "title": "Cannot change interface namespace with NDB module.", "user": {"login": "gryf", "id": 264785, "node_id": "MDQ6VXNlcjI2NDc4NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/264785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gryf", "html_url": "https://github.com/gryf", "followers_url": "https://api.github.com/users/gryf/followers", "following_url": "https://api.github.com/users/gryf/following{/other_user}", "gists_url": "https://api.github.com/users/gryf/gists{/gist_id}", "starred_url": "https://api.github.com/users/gryf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gryf/subscriptions", "organizations_url": "https://api.github.com/users/gryf/orgs", "repos_url": "https://api.github.com/users/gryf/repos", "events_url": "https://api.github.com/users/gryf/events{/privacy}", "received_events_url": "https://api.github.com/users/gryf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42471876, "node_id": "MDU6TGFiZWw0MjQ3MTg3Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}, {"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-21T13:00:16Z", "updated_at": "2019-06-27T18:04:23Z", "closed_at": "2019-06-27T18:04:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to move an interface using NDB module:\r\n\r\n```python\r\n    def move_iface_to_ns(veth, ns):\r\n        with pyroute2.NDB() as ndb:\r\n            ndb.sources.add(netns=ns)\r\n            with ndb.interfaces[veth.tap] as dev:\r\n                dev.update({'target': ns})\r\n```\r\n\r\nIt freezes for couple of seconds, and gives me:\r\n\r\n```\r\nException: lost sync in apply()\r\n```\r\n\r\nmoreover, it will create pair of veth in the namespace. Before calling the function:\r\n\r\n```console\r\n# ip netns exec ns1 ip l\r\n 1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN mode DEFAULT group default qlen 1000\r\n ```\r\nAfter:\r\n\r\n```console\r\n# ip netns exec ns1 ip l\r\n1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN mode DEFAULT group default qlen 1000\r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n43: veth0@veth-1: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\r\n    link/ether da:f7:f1:8b:69:05 brd ff:ff:ff:ff:ff:ff\r\n161: veth-1@veth0: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc noqueue state DOWN mode DEFAULT group default qlen 1000\r\n    link/ether ea:1a:98:d8:42:57 brd ff:ff:ff:ff:ff:ff\r\n```\r\n\r\nwhile I expected, that one end of veth pair will land in the namespace. Using IPRoute() object works.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/613", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/613/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/613/events", "html_url": "https://github.com/svinota/pyroute2/issues/613", "id": 458792332, "node_id": "MDU6SXNzdWU0NTg3OTIzMzI=", "number": 613, "title": "Using IPBatch throws AttributeError: 'IPBatch' object has no attribute '_sendto'", "user": {"login": "evanfoster", "id": 15820709, "node_id": "MDQ6VXNlcjE1ODIwNzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/15820709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evanfoster", "html_url": "https://github.com/evanfoster", "followers_url": "https://api.github.com/users/evanfoster/followers", "following_url": "https://api.github.com/users/evanfoster/following{/other_user}", "gists_url": "https://api.github.com/users/evanfoster/gists{/gist_id}", "starred_url": "https://api.github.com/users/evanfoster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evanfoster/subscriptions", "organizations_url": "https://api.github.com/users/evanfoster/orgs", "repos_url": "https://api.github.com/users/evanfoster/repos", "events_url": "https://api.github.com/users/evanfoster/events{/privacy}", "received_events_url": "https://api.github.com/users/evanfoster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1321954650, "node_id": "MDU6TGFiZWwxMzIxOTU0NjUw", "url": "https://api.github.com/repos/svinota/pyroute2/labels/regression", "name": "regression", "color": "e5c40b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-20T17:57:36Z", "updated_at": "2020-03-11T18:55:39Z", "closed_at": "2020-03-11T18:55:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there!\r\n\r\nI'm trying to use IPBatch to create a bunch of IP addresses on an interface. Unfortunately, I haven't had any luck getting IPBatch to work under any circumstances.\r\n\r\n[Using this example from the docs:](https://docs.pyroute2.org/iproute.html#pyroute2.iproute.linux.IPBatch)\r\n```python\r\nfrom pyroute2 import IPBatch\r\nipb = IPBatch()\r\n# compile requests into the internal buffer\r\nipb.link(\"add\", index=550, ifname=\"test\", kind=\"dummy\")\r\nipb.link(\"set\", index=550, state=\"up\")\r\nipb.addr(\"add\", index=550, address=\"10.0.0.2\", mask=24)\r\n# save the buffer\r\ndata = ipb.batch\r\n# reset the buffer\r\nipb.reset()\r\n```\r\n\r\nThis exception gets thrown:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 4, in <module>\r\n  File \"/opt/python/lib/python3.6/site-packages/pyroute2/iproute/linux.py\", line 1165, in link\r\n    msg_flags=msg_flags)\r\n  File \"/opt/python/lib/python3.6/site-packages/pyroute2/netlink/nlsocket.py\", line 352, in nlm_request\r\n    return tuple(self._genlm_request(*argv, **kwarg))\r\n  File \"/opt/python/lib/python3.6/site-packages/pyroute2/netlink/nlsocket.py\", line 835, in nlm_request\r\n    self.put(msg, msg_type, msg_flags, msg_seq=msg_seq)\r\n  File \"/opt/python/lib/python3.6/site-packages/pyroute2/netlink/nlsocket.py\", line 590, in put\r\n    self.sendto_gate(msg, addr)\r\n  File \"/opt/python/lib/python3.6/site-packages/pyroute2/netlink/rtnl/iprsocket.py\", line 68, in _gate_linux\r\n    return self._sendto(ret['data'], addr)\r\nAttributeError: 'IPBatch' object has no attribute '_sendto'\r\n'IPBatch' object has no attribute '_sendto'\r\n```\r\n\r\nI'm able to reproduce this consistently across two systems:\r\n```shell\r\n# First system\r\nfoo-system:~ $ cat /etc/os-release\r\nNAME=\"Arch Linux\"\r\nPRETTY_NAME=\"Arch Linux\"\r\nID=arch\r\nBUILD_ID=rolling\r\nANSI_COLOR=\"0;36\"\r\nHOME_URL=\"https://www.archlinux.org/\"\r\nDOCUMENTATION_URL=\"https://wiki.archlinux.org/\"\r\nSUPPORT_URL=\"https://bbs.archlinux.org/\"\r\nBUG_REPORT_URL=\"https://bugs.archlinux.org/\"\r\nLOGO=archlinux\r\nfoo-system:~ $ uname -r\r\n5.1.12-zen1-1-zen\r\nfoo-system:~ $ python --version\r\nPython 3.7.3\r\nfoo-system:~ $ pip show pyroute2 | grep Version\r\nVersion: 0.5.6\r\n\r\n# Second system\r\nbar-system:~ $ cat /etc/os-release\r\nNAME=\"SLES\"\r\nVERSION=\"12-SP2\"\r\nVERSION_ID=\"12.2\"\r\nPRETTY_NAME=\"SUSE Linux Enterprise Server 12 SP2\"\r\nID=\"sles\"\r\nANSI_COLOR=\"0;32\"\r\nCPE_NAME=\"cpe:/o:suse:sles:12:sp2\"\r\nbar-system:~ $ uname -r\r\n4.4.120-92.70-default\r\nbar-system:~ $ /opt/python/bin/python3.6 --version\r\nPython 3.6.0\r\nbar-system:~ $ /opt/python/bin/pip3.6 show pyroute2 | grep Version\r\nVersion: 0.5.5\r\n```\r\nI also tried using `pyroute2` directly from master:\r\n```shell\r\npip install -U git+https://github.com/svinota/pyroute2.git@master\r\n```\r\nbut I got the exact same result.\r\n\r\nPlease let me know if you need any other information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/607", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/607/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/607/events", "html_url": "https://github.com/svinota/pyroute2/issues/607", "id": 448091060, "node_id": "MDU6SXNzdWU0NDgwOTEwNjA=", "number": 607, "title": "NDB module, issue creating veth interfaces", "user": {"login": "fernandoroyosanchez", "id": 10130714, "node_id": "MDQ6VXNlcjEwMTMwNzE0", "avatar_url": "https://avatars3.githubusercontent.com/u/10130714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fernandoroyosanchez", "html_url": "https://github.com/fernandoroyosanchez", "followers_url": "https://api.github.com/users/fernandoroyosanchez/followers", "following_url": "https://api.github.com/users/fernandoroyosanchez/following{/other_user}", "gists_url": "https://api.github.com/users/fernandoroyosanchez/gists{/gist_id}", "starred_url": "https://api.github.com/users/fernandoroyosanchez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fernandoroyosanchez/subscriptions", "organizations_url": "https://api.github.com/users/fernandoroyosanchez/orgs", "repos_url": "https://api.github.com/users/fernandoroyosanchez/repos", "events_url": "https://api.github.com/users/fernandoroyosanchez/events{/privacy}", "received_events_url": "https://api.github.com/users/fernandoroyosanchez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-24T10:15:26Z", "updated_at": "2019-06-27T18:09:59Z", "closed_at": "2019-06-27T18:09:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI'm having several problems using NDB on creation of 'veth' interfaces. For bridge ones it works like a charm.\r\n\r\nBasically the scope to reproduce the issue is this config:\r\n\r\n* pyroute2 0.5.5 (stable)\r\n* Init instance of NDB to localhost namespace\r\n* Create bridge and up - OK\r\n* Create bridge and up - OK\r\n* Create veth iface  - Sometimes Timeout problem! and other \r\n\r\n```\r\nfrom pyroute2 import NDB, IPRoute\r\nndb=NDB(sources={'localhost':IPRoute()})\r\nndb.interfaces.add(ifname='br_if', target='localhost', kind='bridge',state='up').commit()\r\nndb.interfaces.add(ifname='veth0', target='localhost', kind='veth', peer='veth0_1', state='down').commit()\r\n```\r\n\r\nThe last command sometimes return Timeout, some other times \r\npyroute2.netlink.exceptions.NetlinkError: (17, 'File exists')\r\n\r\nany comment or issue working with veth using NDB??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/606", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/606/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/606/events", "html_url": "https://github.com/svinota/pyroute2/issues/606", "id": 446512796, "node_id": "MDU6SXNzdWU0NDY1MTI3OTY=", "number": 606, "title": "Pyroute2 breaks the standard logging behavior", "user": {"login": "OnlySlon", "id": 1896553, "node_id": "MDQ6VXNlcjE4OTY1NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1896553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OnlySlon", "html_url": "https://github.com/OnlySlon", "followers_url": "https://api.github.com/users/OnlySlon/followers", "following_url": "https://api.github.com/users/OnlySlon/following{/other_user}", "gists_url": "https://api.github.com/users/OnlySlon/gists{/gist_id}", "starred_url": "https://api.github.com/users/OnlySlon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OnlySlon/subscriptions", "organizations_url": "https://api.github.com/users/OnlySlon/orgs", "repos_url": "https://api.github.com/users/OnlySlon/repos", "events_url": "https://api.github.com/users/OnlySlon/events{/privacy}", "received_events_url": "https://api.github.com/users/OnlySlon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-21T09:29:11Z", "updated_at": "2019-06-27T18:09:33Z", "closed_at": "2019-06-27T18:09:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```\r\nimport logging\r\n\r\nfrom pyroute2 import IPRoute\r\n\r\nlogging.basicConfig(level=logging.INFO)\r\nlogging.info('1')\r\nlogging.debug('2')\r\nlogging.warning('3')\r\nlogging.error('4')\r\n```\r\n\r\nLog nothing.\r\nv.0.5.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/604", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/604/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/604/events", "html_url": "https://github.com/svinota/pyroute2/issues/604", "id": 445662789, "node_id": "MDU6SXNzdWU0NDU2NjI3ODk=", "number": 604, "title": "IPRoute().get_routes(table=0) does not return any routes", "user": {"login": "jimfunk", "id": 1350280, "node_id": "MDQ6VXNlcjEzNTAyODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1350280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimfunk", "html_url": "https://github.com/jimfunk", "followers_url": "https://api.github.com/users/jimfunk/followers", "following_url": "https://api.github.com/users/jimfunk/following{/other_user}", "gists_url": "https://api.github.com/users/jimfunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimfunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimfunk/subscriptions", "organizations_url": "https://api.github.com/users/jimfunk/orgs", "repos_url": "https://api.github.com/users/jimfunk/repos", "events_url": "https://api.github.com/users/jimfunk/events{/privacy}", "received_events_url": "https://api.github.com/users/jimfunk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-18T01:02:58Z", "updated_at": "2019-05-18T19:31:53Z", "closed_at": "2019-05-18T19:18:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Netlink allows for dumping routes in all tables by setting the table to 0. You can do this with iproute2:\r\n\r\n    ip route show table 0\r\n\r\nHowever, this is not possible with get_routes():\r\n\r\n    >>> pyroute2.IPRoute().get_routes(table=0)\r\n    ()\r\n\r\nThe code reveals a way to trick it, but it's non-obvious:\r\n\r\n    >>> pyroute2.IPRoute().route('dump', match={}, table=0, family=255)\r\n    ...all the routes...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/602", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/602/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/602/events", "html_url": "https://github.com/svinota/pyroute2/issues/602", "id": 441417750, "node_id": "MDU6SXNzdWU0NDE0MTc3NTA=", "number": 602, "title": "IPDB : Cannot commit new interface when dhcpcd \"noipv4\" option is set for said interface", "user": {"login": "furest", "id": 6944894, "node_id": "MDQ6VXNlcjY5NDQ4OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6944894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/furest", "html_url": "https://github.com/furest", "followers_url": "https://api.github.com/users/furest/followers", "following_url": "https://api.github.com/users/furest/following{/other_user}", "gists_url": "https://api.github.com/users/furest/gists{/gist_id}", "starred_url": "https://api.github.com/users/furest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/furest/subscriptions", "organizations_url": "https://api.github.com/users/furest/orgs", "repos_url": "https://api.github.com/users/furest/repos", "events_url": "https://api.github.com/users/furest/events{/privacy}", "received_events_url": "https://api.github.com/users/furest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-05-07T19:53:35Z", "updated_at": "2019-05-14T15:03:34Z", "closed_at": "2019-05-14T15:03:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem:\r\nException` pyroute2.ipdb.exceptions.CommitException: target flags is not set` is thrown when committing a new interface with IPDB if dhcpcd.conf option \"noipv4\" is set.\r\n\r\nCurrent environment : \r\n-Raspberry pi 3 B with Raspbian 9 (Stretch)\r\n-Python 3.5.3\r\n-pyroute2 0.5.5\r\nSteps : \r\n- Add following lines to dhcpcd.conf\r\n```\r\ninterface vxlan0\r\nnoipv4\r\n```\r\n- Execute python script :\r\n```\r\nfrom pyroute2 import IPDB\r\nip = IPDB()\r\nwith ip.create(ifname='vxlan0', kind='vxlan', vxlan_id=42, vxlan_group='172.16.1.1', \r\nvxlan_port=4789) as vxlan:\r\n     vxlan.up()\r\n```\r\n\r\nExpected : \r\n\r\n- No error thrown.\r\n\r\nResult : \r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/transactional.py\", line 209, in __exit__\r\n    self.commit()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/interfaces.py\", line 1072, in commit\r\n    raise error\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/interfaces.py\", line 853, in commit\r\n    transaction.wait_all_targets()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/transactional.py\", line 507, in wait_all_targets\r\n    raise CommitException('target %s is not set' % key)\r\npyroute2.ipdb.exceptions.CommitException: target flags is not set\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/601", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/601/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/601/events", "html_url": "https://github.com/svinota/pyroute2/issues/601", "id": 438709509, "node_id": "MDU6SXNzdWU0Mzg3MDk1MDk=", "number": 601, "title": "pyroute2 and logging", "user": {"login": "SnipGhost", "id": 15228256, "node_id": "MDQ6VXNlcjE1MjI4MjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/15228256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SnipGhost", "html_url": "https://github.com/SnipGhost", "followers_url": "https://api.github.com/users/SnipGhost/followers", "following_url": "https://api.github.com/users/SnipGhost/following{/other_user}", "gists_url": "https://api.github.com/users/SnipGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/SnipGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SnipGhost/subscriptions", "organizations_url": "https://api.github.com/users/SnipGhost/orgs", "repos_url": "https://api.github.com/users/SnipGhost/repos", "events_url": "https://api.github.com/users/SnipGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/SnipGhost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-30T10:34:57Z", "updated_at": "2019-05-16T16:07:17Z", "closed_at": "2019-05-16T16:07:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, @svinota! I tried to switch from 0.5.2 version to 0.5.5 and caught some strange thing:\r\n`lsof` didn't show my log file when I use new version of pyroute2. And the log file does not exist!\r\n\r\nHere is a small sample code to reproduce this:\r\n(Yes, IPDB or netns is not used in the script, just import statement from my module where I use it)\r\n```py\r\nimport logging\r\nfrom time import sleep\r\nfrom pyroute2 import netns, IPDB\r\n\r\nlog_file = '/var/log/pyroute2-logging-test.log'\r\n\r\nlogging.basicConfig(\r\n    filename=log_file,\r\n    level=logging.DEBUG,\r\n    format='%(asctime)s [%(levelname)s] %(name)s: %(message)s',\r\n)\r\n\r\nlog = logging.getLogger('TEST')\r\n\r\nwhile True:\r\n    log.debug('TEST-DEBUG')\r\n    log.info('TEST-INFO')\r\n    log.error('TEST-ERROR')\r\n    sleep(1)\r\n```\r\n\r\nwith pyroute2 v0.5.5:\r\n```sh\r\n(env) [root@1 test]# python test.py &\r\n[1] 819441\r\n(env) [root@1 test]# lsof -p 819441 | grep /var/\r\n(env) [root@1 test]# ll /var/log/pyroute2-logging-test.log \r\nls: cannot access /var/log/pyroute2-logging-test.log: No such file or directory\r\n(env) [root@1 test]# python -V\r\nPython 2.7.5\r\n(env) [root@1 test]# pip freeze | grep pyroute2\r\npyroute2==0.5.5\r\n(env) [root@1 test]# cat /etc/redhat-release\r\nCentOS Linux release 7.6.1810 (Core) \r\n```\r\n\r\nwith pyroute2 v0.5.2:\r\n```sh\r\n(env) [root@1 test]# python test.py &\r\n[1] 820114\r\n(env) [root@1 test]# lsof -p 820114 | grep /var/\r\npython  820114 root   10w      REG  253,2      1305  47186053 /var/log/pyroute2-logging-test.log\r\n(env) [root@1 test]# ll /var/log/pyroute2-logging-test.log\r\n-rw-r--r-- 1 root root 43355 Apr 30 13:21 /var/log/pyroute2-logging-test.log\r\n(env) [root@1 test]# python -V\r\nPython 2.7.5\r\n(env) [root@1 test]# pip freeze | grep pyroute2\r\npyroute2==0.5.2\r\n(env) [root@1 test]# cat /etc/redhat-release\r\nCentOS Linux release 7.6.1810 (Core) \r\n```\r\n\r\nHow it works? Maybe I'm doing something wrong? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/600", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/600/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/600/events", "html_url": "https://github.com/svinota/pyroute2/issues/600", "id": 437149553, "node_id": "MDU6SXNzdWU0MzcxNDk1NTM=", "number": 600, "title": "sqlite3 lib is required in host OS even if unused", "user": {"login": "ykvch", "id": 6299601, "node_id": "MDQ6VXNlcjYyOTk2MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6299601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ykvch", "html_url": "https://github.com/ykvch", "followers_url": "https://api.github.com/users/ykvch/followers", "following_url": "https://api.github.com/users/ykvch/following{/other_user}", "gists_url": "https://api.github.com/users/ykvch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ykvch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ykvch/subscriptions", "organizations_url": "https://api.github.com/users/ykvch/orgs", "repos_url": "https://api.github.com/users/ykvch/repos", "events_url": "https://api.github.com/users/ykvch/events{/privacy}", "received_events_url": "https://api.github.com/users/ykvch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-25T11:30:49Z", "updated_at": "2019-07-02T22:54:51Z", "closed_at": "2019-06-27T18:11:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: FreeBSD 12 (without sqlite3 package installed at system level)\r\nPyhton 3.6.1\r\n\r\nSteps:\r\n```\r\nimport pyroute2\r\n```\r\n\r\nExpected:\r\nImport done.\r\n\r\nActual:\r\n```\r\n>>> from pyroute2 import IPRoute\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/home/username/venv/lib/python3.6/site-packages/pyroute2/__init__.py\", line 38, in <module>\r\n    from pyroute2.ndb.main import NDB\r\n  File \"/usr/home/username/venv/lib/python3.6/site-packages/pyroute2/ndb/main.py\", line 145, in <module>\r\n    import sqlite3\r\n  File \"/usr/local/lib/python3.6/sqlite3/__init__.py\", line 23, in <module>\r\n    from sqlite3.dbapi2 import *\r\n  File \"/usr/local/lib/python3.6/sqlite3/dbapi2.py\", line 27, in <module>\r\n    from _sqlite3 import *\r\nModuleNotFoundError: No module named '_sqlite3'\r\n```\r\n\r\nPossible solutions:\r\n* Do not import NDB to top-level (may be compatibility impact, show warning, import inside try block as alternatives).\r\n*  Disable sqlite3 option if import fails https://github.com/svinota/pyroute2/blob/master/pyroute2/ndb/main.py#L606", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/599", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/599/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/599/events", "html_url": "https://github.com/svinota/pyroute2/issues/599", "id": 433356597, "node_id": "MDU6SXNzdWU0MzMzNTY1OTc=", "number": 599, "title": "RuntimeError on add_ip in IPDB", "user": {"login": "dulek", "id": 208288, "node_id": "MDQ6VXNlcjIwODI4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/208288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dulek", "html_url": "https://github.com/dulek", "followers_url": "https://api.github.com/users/dulek/followers", "following_url": "https://api.github.com/users/dulek/following{/other_user}", "gists_url": "https://api.github.com/users/dulek/gists{/gist_id}", "starred_url": "https://api.github.com/users/dulek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dulek/subscriptions", "organizations_url": "https://api.github.com/users/dulek/orgs", "repos_url": "https://api.github.com/users/dulek/repos", "events_url": "https://api.github.com/users/dulek/events{/privacy}", "received_events_url": "https://api.github.com/users/dulek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1321954650, "node_id": "MDU6TGFiZWwxMzIxOTU0NjUw", "url": "https://api.github.com/repos/svinota/pyroute2/labels/regression", "name": "regression", "color": "e5c40b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-15T15:50:46Z", "updated_at": "2019-09-03T11:43:21Z", "closed_at": "2019-09-03T11:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service [-] Error when processing addNetwork request. CNI Params: {'CNI_IFNAME': u'eth0', 'CNI_NETNS': u'/proc/21795/ns/net', 'CNI_PATH': u'/opt/cni/bin', 'CNI_ARGS': u'IgnoreUnknown=1;K8S_POD_NAMESPACE=bigdatastack;K8S_POD_NAME=no3-demo-1-deploy;K8S_POD_INFRA_CONTAINER_ID=c9b18980c4759913b2af304ad5a4123d9258f0dc00a56f37e982b7986e13c44e', 'CNI_DAEMON': u'True', 'CNI_COMMAND': u'ADD', 'CNI_CONTAINERID': u'c9b18980c4759913b2af304ad5a4123d9258f0dc00a56f37e982b7986e13c44e'}: RuntimeError\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service Traceback (most recent call last):\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service   File \"/usr/lib/python2.7/site-packages/kuryr_kubernetes/cni/daemon/service.py\", line 81, in add\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service     vif = self.plugin.add(params)\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service   File \"/usr/lib/python2.7/site-packages/kuryr_kubernetes/cni/plugins/k8s_cni_registry.py\", line 51, in add\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service     vifs = self._do_work(params, b_base.connect)\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service   File \"/usr/lib/python2.7/site-packages/kuryr_kubernetes/cni/plugins/k8s_cni_registry.py\", line 135, in _do_work\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service     container_id=params.CNI_CONTAINERID)\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service   File \"/usr/lib/python2.7/site-packages/kuryr_kubernetes/cni/binding/base.py\", line 101, in connect\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service     _configure_l3(vif, ifname, netns, is_default_gateway)\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service   File \"/usr/lib/python2.7/site-packages/kuryr_kubernetes/cni/binding/base.py\", line 82, in _configure_l3\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service     subnet.cidr.prefixlen))\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service   File \"/usr/lib/python2.7/site-packages/pyroute2/ipdb/transactional.py\", line 209, in __exit__\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service     self.commit()\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service   File \"/usr/lib/python2.7/site-packages/pyroute2/ipdb/interfaces.py\", line 1071, in commit\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service     raise error\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service RuntimeError\r\n2019-04-15 08:44:33.843 134 ERROR kuryr_kubernetes.cni.daemon.service \r\n```\r\n\r\nWe started seeing that starting from 0.5.4. Code triggering this is below, please note that subnet.cidr.version != 6, so whole _enable_ipv6 is not executed.\r\n\r\n```python\r\n    with get_ipdb(netns) as ipdb:\r\n        with ipdb.interfaces[ifname] as iface:\r\n            for subnet in vif.network.subnets.objects:\r\n                if subnet.cidr.version == 6:\r\n                    _enable_ipv6(netns)\r\n                for fip in subnet.ips.objects:\r\n                    iface.add_ip('%s/%s' % (fip.address,\r\n                                            subnet.cidr.prefixlen))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/596", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/596/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/596/events", "html_url": "https://github.com/svinota/pyroute2/issues/596", "id": 426017995, "node_id": "MDU6SXNzdWU0MjYwMTc5OTU=", "number": 596, "title": "RemoteNetNS support", "user": {"login": "nobody-void", "id": 44941570, "node_id": "MDQ6VXNlcjQ0OTQxNTcw", "avatar_url": "https://avatars2.githubusercontent.com/u/44941570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nobody-void", "html_url": "https://github.com/nobody-void", "followers_url": "https://api.github.com/users/nobody-void/followers", "following_url": "https://api.github.com/users/nobody-void/following{/other_user}", "gists_url": "https://api.github.com/users/nobody-void/gists{/gist_id}", "starred_url": "https://api.github.com/users/nobody-void/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nobody-void/subscriptions", "organizations_url": "https://api.github.com/users/nobody-void/orgs", "repos_url": "https://api.github.com/users/nobody-void/repos", "events_url": "https://api.github.com/users/nobody-void/events{/privacy}", "received_events_url": "https://api.github.com/users/nobody-void/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}, {"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-27T15:11:04Z", "updated_at": "2019-03-28T20:45:20Z", "closed_at": "2019-03-28T20:45:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder if there is any plan to support RemoteNetNS like RemoteIPRoute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/595", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/595/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/595/events", "html_url": "https://github.com/svinota/pyroute2/issues/595", "id": 425417251, "node_id": "MDU6SXNzdWU0MjU0MTcyNTE=", "number": 595, "title": "Creating vti interface using IPDB throws CommitException", "user": {"login": "darc1", "id": 10958651, "node_id": "MDQ6VXNlcjEwOTU4NjUx", "avatar_url": "https://avatars2.githubusercontent.com/u/10958651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darc1", "html_url": "https://github.com/darc1", "followers_url": "https://api.github.com/users/darc1/followers", "following_url": "https://api.github.com/users/darc1/following{/other_user}", "gists_url": "https://api.github.com/users/darc1/gists{/gist_id}", "starred_url": "https://api.github.com/users/darc1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darc1/subscriptions", "organizations_url": "https://api.github.com/users/darc1/orgs", "repos_url": "https://api.github.com/users/darc1/repos", "events_url": "https://api.github.com/users/darc1/events{/privacy}", "received_events_url": "https://api.github.com/users/darc1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-26T13:26:58Z", "updated_at": "2019-05-01T07:56:03Z", "closed_at": "2019-04-04T16:45:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to create vti interface using IPDB I get a CommitException.\r\nThis is the code I'm running:\r\n\r\n```\r\nfrom pyroute2 import IPDB\r\nipdb = IPDB()\r\nipdb.create(ifname='vtt', kind='vti', vti_local='192.168.43.238', \r\n    vti_remote='5.4.3.2', vti_ikey=64, vti_okey=72)\r\nipdb.commit()\r\n```\r\n\r\nthe error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/test/.local/lib/python3.6/site-packages/pyroute2/ipdb/main.py\", line 1358, in commit\r\n    commit_mask=phase)\r\n  File \"/home/test/.local/lib/python3.6/site-packages/pyroute2/ipdb/interfaces.py\", line 1071, in commit\r\n    raise error\r\n  File \"/home/test/.local/lib/python3.6/site-packages/pyroute2/ipdb/interfaces.py\", line 852, in commit\r\n    transaction.wait_all_targets()\r\n  File \"/home/test/.local/lib/python3.6/site-packages/pyroute2/ipdb/transactional.py\", line 507, in wait_all_targets\r\n    raise CommitException('target %s is not set' % key)\r\npyroute2.ipdb.exceptions.CommitException: target vti_local is not set\r\n```\r\n\r\nI'm able to use IPRoute to create vti:\r\n\r\n```\r\nfrom pyroute2 import IPRoute\r\nipr = IPRoute()\r\nipr.link('add', ifname='vtt', kind='vti', vti_link=2, \r\n    vti_local='192.168.43.238', vti_remote='5.4.3.2', vti_ikey=64, vti_okey=72)\r\n```\r\nworks as expected.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/594", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/594/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/594/events", "html_url": "https://github.com/svinota/pyroute2/issues/594", "id": 423686092, "node_id": "MDU6SXNzdWU0MjM2ODYwOTI=", "number": 594, "title": "Operation not permitted and <defunct> process when call netns.remove()", "user": {"login": "hetii", "id": 3405461, "node_id": "MDQ6VXNlcjM0MDU0NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3405461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetii", "html_url": "https://github.com/hetii", "followers_url": "https://api.github.com/users/hetii/followers", "following_url": "https://api.github.com/users/hetii/following{/other_user}", "gists_url": "https://api.github.com/users/hetii/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetii/subscriptions", "organizations_url": "https://api.github.com/users/hetii/orgs", "repos_url": "https://api.github.com/users/hetii/repos", "events_url": "https://api.github.com/users/hetii/events{/privacy}", "received_events_url": "https://api.github.com/users/hetii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-21T11:35:50Z", "updated_at": "2019-03-21T21:41:15Z", "closed_at": "2019-03-21T19:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "In function https://github.com/svinota/pyroute2/blob/45a350dd47e803fa9a35afe0d92c3b0ce7abb460/pyroute2/netns/__init__.py#L207\r\nWe have call to os.unlink(), \r\nthe problem can happen for eg in kubernetes (k8s.gcr.io/pause:3.1) where this can raise PermissionError: [Errno 1] Operation not permitted: b'/proc/17066/ns/net'\r\n\r\nAfter that I see in process list, a python process in defunct state.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/584", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/584/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/584/events", "html_url": "https://github.com/svinota/pyroute2/issues/584", "id": 408679656, "node_id": "MDU6SXNzdWU0MDg2Nzk2NTY=", "number": 584, "title": "pkg_resources breaks some pyroute2 use case", "user": {"login": "ffourcot", "id": 17849937, "node_id": "MDQ6VXNlcjE3ODQ5OTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/17849937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffourcot", "html_url": "https://github.com/ffourcot", "followers_url": "https://api.github.com/users/ffourcot/followers", "following_url": "https://api.github.com/users/ffourcot/following{/other_user}", "gists_url": "https://api.github.com/users/ffourcot/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffourcot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffourcot/subscriptions", "organizations_url": "https://api.github.com/users/ffourcot/orgs", "repos_url": "https://api.github.com/users/ffourcot/repos", "events_url": "https://api.github.com/users/ffourcot/events{/privacy}", "received_events_url": "https://api.github.com/users/ffourcot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-02-11T08:42:28Z", "updated_at": "2019-02-11T16:22:46Z", "closed_at": "2019-02-11T16:22:46Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nSince the commit 602295ff8532a6a (ref #576), pyroute2 cannot be used anymore without real installation. I used to run pyroute2 from sources, but it raises now this:\r\n\r\nIn [1]: import pyroute2\r\n[...]\r\nDistributionNotFound: The 'pyroute2' distribution was not found and is required by the application\r\n\r\nWhen I revert the patch, it's working again.\r\n\r\nI understand the need to provide a version number, but could we make this optional?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/581", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/581/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/581/events", "html_url": "https://github.com/svinota/pyroute2/issues/581", "id": 401787732, "node_id": "MDU6SXNzdWU0MDE3ODc3MzI=", "number": 581, "title": "Tox fails on flake8 non-compliance", "user": {"login": "celebdor", "id": 619423, "node_id": "MDQ6VXNlcjYxOTQyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/619423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/celebdor", "html_url": "https://github.com/celebdor", "followers_url": "https://api.github.com/users/celebdor/followers", "following_url": "https://api.github.com/users/celebdor/following{/other_user}", "gists_url": "https://api.github.com/users/celebdor/gists{/gist_id}", "starred_url": "https://api.github.com/users/celebdor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/celebdor/subscriptions", "organizations_url": "https://api.github.com/users/celebdor/orgs", "repos_url": "https://api.github.com/users/celebdor/repos", "events_url": "https://api.github.com/users/celebdor/events{/privacy}", "received_events_url": "https://api.github.com/users/celebdor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-22T14:23:08Z", "updated_at": "2019-01-22T14:28:09Z", "closed_at": "2019-01-22T14:28:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We should fix flake8 warnings so that we have the CI running the tests again", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/578", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/578/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/578/events", "html_url": "https://github.com/svinota/pyroute2/issues/578", "id": 401033298, "node_id": "MDU6SXNzdWU0MDEwMzMyOTg=", "number": 578, "title": "NetNS file descriptors are closed before stopping any other thread using them", "user": {"login": "ralonsoh", "id": 12749437, "node_id": "MDQ6VXNlcjEyNzQ5NDM3", "avatar_url": "https://avatars1.githubusercontent.com/u/12749437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralonsoh", "html_url": "https://github.com/ralonsoh", "followers_url": "https://api.github.com/users/ralonsoh/followers", "following_url": "https://api.github.com/users/ralonsoh/following{/other_user}", "gists_url": "https://api.github.com/users/ralonsoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralonsoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralonsoh/subscriptions", "organizations_url": "https://api.github.com/users/ralonsoh/orgs", "repos_url": "https://api.github.com/users/ralonsoh/repos", "events_url": "https://api.github.com/users/ralonsoh/events{/privacy}", "received_events_url": "https://api.github.com/users/ralonsoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-19T20:47:38Z", "updated_at": "2019-02-08T00:53:10Z", "closed_at": "2019-02-08T00:52:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(Related to https://github.com/svinota/pyroute2/issues/547)\r\n\r\nIn OpenStack Neutron, pyroute2 is used inside a privsep context, to be able to execute root actions. Last oslo.privsep version (1.31.0), introduced the following feature [1]. We found several errors when executing pyroute2 commands when NetNS class is involved [2]. Occasionally, the following error is thrown [3].\r\n\r\nWe solved this issue by:\r\n- Stopping gracefully the NetNS server instead of killing it.\r\n- Stopping the recv and read loops before closing the file descriptor.\r\n\r\nThe following patch is being tested in the OpenStack CI successfully [4].\r\n\r\n[1] https://github.com/openstack/oslo.privsep/commit/f368430f13183c3d09d68c80184d854449da2e87\r\n[2] https://bugs.launchpad.net/neutron/+bug/1811515\r\n[3] http://logs.openstack.org/92/628492/2/check/neutron-tempest-plugin-dvr-multinode-scenario/8c51f22/controller/logs/screen-q-l3.txt.gz#_Jan_13_18_22_39_027287\r\n[4] https://github.com/ralonsoh/pyroute2/commit/e475d442bec8cb17f8868ec7a384b4940cd64da3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/577", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/577/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/577/events", "html_url": "https://github.com/svinota/pyroute2/issues/577", "id": 398601343, "node_id": "MDU6SXNzdWUzOTg2MDEzNDM=", "number": 577, "title": "[announce] sick", "user": {"login": "svinota", "id": 814602, "node_id": "MDQ6VXNlcjgxNDYwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svinota", "html_url": "https://github.com/svinota", "followers_url": "https://api.github.com/users/svinota/followers", "following_url": "https://api.github.com/users/svinota/following{/other_user}", "gists_url": "https://api.github.com/users/svinota/gists{/gist_id}", "starred_url": "https://api.github.com/users/svinota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svinota/subscriptions", "organizations_url": "https://api.github.com/users/svinota/orgs", "repos_url": "https://api.github.com/users/svinota/repos", "events_url": "https://api.github.com/users/svinota/events{/privacy}", "received_events_url": "https://api.github.com/users/svinota/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-12T23:13:26Z", "updated_at": "2019-02-09T09:41:50Z", "closed_at": "2019-02-09T09:41:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Sorry guys for such long time with no news.\r\n\r\nI got seriously sick ~ two months ago and it will take time to repair. I plan to get back to be able to work with the code in two-three weeks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/576", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/576/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/576/events", "html_url": "https://github.com/svinota/pyroute2/issues/576", "id": 398263188, "node_id": "MDU6SXNzdWUzOTgyNjMxODg=", "number": 576, "title": "__version__ support", "user": {"login": "luzik", "id": 6113774, "node_id": "MDQ6VXNlcjYxMTM3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6113774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luzik", "html_url": "https://github.com/luzik", "followers_url": "https://api.github.com/users/luzik/followers", "following_url": "https://api.github.com/users/luzik/following{/other_user}", "gists_url": "https://api.github.com/users/luzik/gists{/gist_id}", "starred_url": "https://api.github.com/users/luzik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luzik/subscriptions", "organizations_url": "https://api.github.com/users/luzik/orgs", "repos_url": "https://api.github.com/users/luzik/repos", "events_url": "https://api.github.com/users/luzik/events{/privacy}", "received_events_url": "https://api.github.com/users/luzik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-11T12:09:57Z", "updated_at": "2019-01-22T14:20:20Z", "closed_at": "2019-01-22T14:20:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please consider supporting pyroute2.__version__", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/575", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/575/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/575/events", "html_url": "https://github.com/svinota/pyroute2/issues/575", "id": 396296058, "node_id": "MDU6SXNzdWUzOTYyOTYwNTg=", "number": 575, "title": "nfnetlink nft_rule_msg regression", "user": {"login": "liam-mcb", "id": 40139679, "node_id": "MDQ6VXNlcjQwMTM5Njc5", "avatar_url": "https://avatars0.githubusercontent.com/u/40139679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liam-mcb", "html_url": "https://github.com/liam-mcb", "followers_url": "https://api.github.com/users/liam-mcb/followers", "following_url": "https://api.github.com/users/liam-mcb/following{/other_user}", "gists_url": "https://api.github.com/users/liam-mcb/gists{/gist_id}", "starred_url": "https://api.github.com/users/liam-mcb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liam-mcb/subscriptions", "organizations_url": "https://api.github.com/users/liam-mcb/orgs", "repos_url": "https://api.github.com/users/liam-mcb/repos", "events_url": "https://api.github.com/users/liam-mcb/events{/privacy}", "received_events_url": "https://api.github.com/users/liam-mcb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-06T21:27:08Z", "updated_at": "2019-03-02T11:36:52Z", "closed_at": "2019-03-02T11:36:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "nft_rule_msg in netlink/nfnetlink/nftsocket.py no longer generates the correct netlink message.\r\n#524 (specifically 254fc3e3aec5a7768fac60acaf82732297a28dbf) changed nla array encoding so that the header type increments with each element.\r\nThe nfnetlink NFTA_RULE_EXPRESSIONS message requires that the header type remain as 1 for all elements in the array.\r\n\r\nFollowing code should add a rule but doesn't.\r\n```\r\nimport pyroute2\r\nfrom pyroute2.nftables.expressions import ipv4addr, verdict\r\nnft = pyroute2.NFTables()\r\nnft.table('add', name='test0')\r\nnft.chain('add', table='test0', name='test_chain0')\r\nnft.rule('add',\r\n         table='test0',\r\n         chain='test_chain0',\r\n         expressions=(ipv4addr(src='192.168.0.0/24'),\r\n                      verdict(code=1)))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/573", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/573/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/573/events", "html_url": "https://github.com/svinota/pyroute2/issues/573", "id": 392426463, "node_id": "MDU6SXNzdWUzOTI0MjY0NjM=", "number": 573, "title": "tcmsg error appears on stdout when no logger setup", "user": {"login": "hetmankp", "id": 728670, "node_id": "MDQ6VXNlcjcyODY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/728670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetmankp", "html_url": "https://github.com/hetmankp", "followers_url": "https://api.github.com/users/hetmankp/followers", "following_url": "https://api.github.com/users/hetmankp/following{/other_user}", "gists_url": "https://api.github.com/users/hetmankp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetmankp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetmankp/subscriptions", "organizations_url": "https://api.github.com/users/hetmankp/orgs", "repos_url": "https://api.github.com/users/hetmankp/repos", "events_url": "https://api.github.com/users/hetmankp/events{/privacy}", "received_events_url": "https://api.github.com/users/hetmankp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}, {"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-19T03:29:56Z", "updated_at": "2019-02-10T10:14:27Z", "closed_at": "2019-02-10T10:14:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently when importing pyroute2 we get an error message being dumped out to stdout when no logger has been setup yet like this:\r\n```\r\ntcmsg: [Errno 2] No such file or directory: '/proc/net/psched'\r\nthe tc subsystem functionality is limited\r\n```\r\n\r\nI would suggest setting up the logging.NullHandler in the root \\_\\_init\\_\\_.py file before all the pyroute2 submodules are imported to prevent this.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/570", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/570/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/570/events", "html_url": "https://github.com/svinota/pyroute2/issues/570", "id": 390202509, "node_id": "MDU6SXNzdWUzOTAyMDI1MDk=", "number": 570, "title": "Python2 \"dict.iteritems\" should be replace with \"dict.items\"", "user": {"login": "ralonsoh", "id": 12749437, "node_id": "MDQ6VXNlcjEyNzQ5NDM3", "avatar_url": "https://avatars1.githubusercontent.com/u/12749437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralonsoh", "html_url": "https://github.com/ralonsoh", "followers_url": "https://api.github.com/users/ralonsoh/followers", "following_url": "https://api.github.com/users/ralonsoh/following{/other_user}", "gists_url": "https://api.github.com/users/ralonsoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralonsoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralonsoh/subscriptions", "organizations_url": "https://api.github.com/users/ralonsoh/orgs", "repos_url": "https://api.github.com/users/ralonsoh/repos", "events_url": "https://api.github.com/users/ralonsoh/events{/privacy}", "received_events_url": "https://api.github.com/users/ralonsoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-12T12:23:58Z", "updated_at": "2019-01-22T14:21:29Z", "closed_at": "2019-01-22T14:21:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In [1], \"dict.iteritems\" should be replaced with \"dict.items\" in order to have Py2/Py3 compatibility.\r\n\r\n[1] https://github.com/svinota/pyroute2/blob/master/pyroute2/netlink/rtnl/rtmsg.py\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/568", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/568/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/568/events", "html_url": "https://github.com/svinota/pyroute2/issues/568", "id": 384302957, "node_id": "MDU6SXNzdWUzODQzMDI5NTc=", "number": 568, "title": "NetNS() is not capable to play with files.", "user": {"login": "hetii", "id": 3405461, "node_id": "MDQ6VXNlcjM0MDU0NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3405461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetii", "html_url": "https://github.com/hetii", "followers_url": "https://api.github.com/users/hetii/followers", "following_url": "https://api.github.com/users/hetii/following{/other_user}", "gists_url": "https://api.github.com/users/hetii/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetii/subscriptions", "organizations_url": "https://api.github.com/users/hetii/orgs", "repos_url": "https://api.github.com/users/hetii/repos", "events_url": "https://api.github.com/users/hetii/events{/privacy}", "received_events_url": "https://api.github.com/users/hetii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002346, "node_id": "MDU6TGFiZWwzNTAwMjM0Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-26T12:12:27Z", "updated_at": "2019-02-28T20:20:18Z", "closed_at": "2019-02-28T20:20:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have such example:\r\n\r\n    from pyroute2 import IPDB\r\n    from pyroute2 import NetNS\r\n    from pyroute2 import NSPopen\r\n\r\n    def main(ns_name):\r\n        with NetNS(ns_name) as my_ns:\r\n            with IPDB(my_ns) as ip:\r\n                # Up loopback interface.\r\n                with ip.interfaces.lo as lo:\r\n                    lo.up()\r\n                with ip.create(ifname=\"veth0p0\", peer=\"veth0p1\", kind='veth') as veth_link:\r\n                        veth_link.up()\r\n                with ip.interfaces.veth0p0 as veth0p0:\r\n                    veth0p0.up()\r\n                with ip.interfaces.veth0p0 as veth0p1:\r\n                    veth0p1.up()\r\n            fh = open(\"/proc/sys/net/ipv4/conf/veth0p0/proxy_arp\",\"w\")\r\n            fh.write(\"1\")\r\n            fh.close()\r\n\r\n    if __name__ == '__main__':\r\n        main(\"ns_xxx_test1\")\r\nbut it raise:\r\n\r\n    python bug.py \r\n    Traceback (most recent call last):\r\n      File \"bug.py\", line 22, in <module>\r\n        main(\"ns_xxx_test1\")\r\n      File \"bug.py\", line 17, in main\r\n        fh = open(\"/proc/sys/net/ipv4/conf/veth0p0/proxy_arp\",\"w\")\r\n    FileNotFoundError: [Errno 2] No such file or directory: '/proc/sys/net/ipv4/conf/veth0p0/proxy_arp'\r\n\r\nbut as we can see the file is there:\r\n\r\n    ip netns exec ns_xxx_test1 cat /proc/sys/net/ipv4/conf/veth0p0/proxy_arp\r\n    0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/567", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/567/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/567/events", "html_url": "https://github.com/svinota/pyroute2/issues/567", "id": 383996334, "node_id": "MDU6SXNzdWUzODM5OTYzMzQ=", "number": 567, "title": "[Question] is there any way to use pyroute2 API for non-root user?", "user": {"login": "Xeite", "id": 8245547, "node_id": "MDQ6VXNlcjgyNDU1NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8245547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xeite", "html_url": "https://github.com/Xeite", "followers_url": "https://api.github.com/users/Xeite/followers", "following_url": "https://api.github.com/users/Xeite/following{/other_user}", "gists_url": "https://api.github.com/users/Xeite/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xeite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xeite/subscriptions", "organizations_url": "https://api.github.com/users/Xeite/orgs", "repos_url": "https://api.github.com/users/Xeite/repos", "events_url": "https://api.github.com/users/Xeite/events{/privacy}", "received_events_url": "https://api.github.com/users/Xeite/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002346, "node_id": "MDU6TGFiZWwzNTAwMjM0Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-24T15:01:12Z", "updated_at": "2019-02-12T09:07:48Z", "closed_at": "2019-02-12T09:07:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. \r\n\r\nWe are trying to use pyroute2 IPRoute() API for OpenStack neutron plugin, and this service is running on 'neutron' user (non-root). I found neutron permission handled by sudoer, so that any normal ('neutron' user) user can execute 'ip' command which requires root permission. As far as I know, pyroute2 requires 0 EUID, I could not help change service script user from 'neutron' to 'root'.\r\n\r\nIs there any way to specify root permission at API level so that sudo user can execute IPRoute command?\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/566", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/566/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/566/events", "html_url": "https://github.com/svinota/pyroute2/issues/566", "id": 383751154, "node_id": "MDU6SXNzdWUzODM3NTExNTQ=", "number": 566, "title": "Duplicated rule, no NetlinkError: (17, 'File exists') raisen", "user": {"login": "ralonsoh", "id": 12749437, "node_id": "MDQ6VXNlcjEyNzQ5NDM3", "avatar_url": "https://avatars1.githubusercontent.com/u/12749437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralonsoh", "html_url": "https://github.com/ralonsoh", "followers_url": "https://api.github.com/users/ralonsoh/followers", "following_url": "https://api.github.com/users/ralonsoh/following{/other_user}", "gists_url": "https://api.github.com/users/ralonsoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralonsoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralonsoh/subscriptions", "organizations_url": "https://api.github.com/users/ralonsoh/orgs", "repos_url": "https://api.github.com/users/ralonsoh/repos", "events_url": "https://api.github.com/users/ralonsoh/events{/privacy}", "received_events_url": "https://api.github.com/users/ralonsoh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002345, "node_id": "MDU6TGFiZWwzNTAwMjM0NQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/not%20a%20bug", "name": "not a bug", "color": "e6e6e6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-23T09:26:04Z", "updated_at": "2019-03-02T00:08:14Z", "closed_at": "2019-03-02T00:08:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When executing a test case in OpenStack Neutron, using pyroute2 to add IP rules, the following error occurs: the same IP rule is added without having an exception.\r\n\r\nHow to reproduce:\r\n> import pyroute2\r\n> ip = pyroute2.NetNS('ns')\r\n> ip.rule('add', iifname='iif_device_1', priority=100, table=100)\r\n> ip.rule('add', iifname='iif_device_1', priority=100, table=100) # No exception risen\r\n> print ip.get_rules()\r\n({'flags': 0, 'dst_len': 0, 'src_len': 0, 'tos': 0, 'res2': 0, 'res1': 0, 'action': 1, 'attrs': {'FRA_SUPPRESS_PREFIXLEN': 4294967295, 'FRA_TABLE': 255}, 'family': 2, 'header': {'flags': 2, 'error': None, 'pid': 23949, 'length': 44, 'type': 32, 'sequence_number': 255}, 'event': 'RTM_NEWRULE', 'table': 255}, {'flags': 0, 'dst_len': 0, 'src_len': 0, 'tos': 0, 'res2': 0, 'res1': 0, 'action': 1, 'attrs': {'FRA_SUPPRESS_PREFIXLEN': 4294967295, 'FRA_IIFNAME': 'iif_device_1', 'FRA_TABLE': 100, 'FRA_PRIORITY': 100}, 'family': 2, 'header': {'flags': 2, 'error': None, 'pid': 23949, 'length': 72, 'type': 32, 'sequence_number': 255}, 'event': 'RTM_NEWRULE', 'table': 100}, {'flags': 0, 'dst_len': 0, 'src_len': 0, 'tos': 0, 'res2': 0, 'res1': 0, 'action': 1, 'attrs': {'FRA_SUPPRESS_PREFIXLEN': 4294967295, 'FRA_IIFNAME': 'iif_device_1', 'FRA_TABLE': 100, 'FRA_PRIORITY': 100}, 'family': 2, 'header': {'flags': 2, 'error': None, 'pid': 23949, 'length': 72, 'type': 32, 'sequence_number': 255}, 'event': 'RTM_NEWRULE', 'table': 100}, {'flags': 0, 'dst_len': 0, 'src_len': 0, 'tos': 0, 'res2': 0, 'res1': 0, 'action': 1, 'attrs': {'FRA_SUPPRESS_PREFIXLEN': 4294967295, 'FRA_TABLE': 254, 'FRA_PRIORITY': 32766}, 'family': 2, 'header': {'flags': 2, 'error': None, 'pid': 23949, 'length': 52, 'type': 32, 'sequence_number': 255}, 'event': 'RTM_NEWRULE', 'table': 254}, {'flags': 0, 'dst_len': 0, 'src_len': 0, 'tos': 0, 'res2': 0, 'res1': 0, 'action': 1, 'attrs': {'FRA_SUPPRESS_PREFIXLEN': 4294967295, 'FRA_TABLE': 253, 'FRA_PRIORITY': 32767}, 'family': 2, 'header': {'flags': 2, 'error': None, 'pid': 23949, 'length': 52, 'type': 32, 'sequence_number': 255}, 'event': 'RTM_NEWRULE', 'table': 253})\r\n\r\nEnvironment:\r\n- OS Version: Ubuntu 16.04 xenial\r\n- pyroute2==0.5.3\r\n\r\nLogs:\r\n- Test case execution: http://paste.openstack.org/show/735962/\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/564", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/564/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/564/events", "html_url": "https://github.com/svinota/pyroute2/issues/564", "id": 380432398, "node_id": "MDU6SXNzdWUzODA0MzIzOTg=", "number": 564, "title": "ipdb: Cannot add IPv4 route directly to interface", "user": {"login": "thardie", "id": 4107299, "node_id": "MDQ6VXNlcjQxMDcyOTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4107299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thardie", "html_url": "https://github.com/thardie", "followers_url": "https://api.github.com/users/thardie/followers", "following_url": "https://api.github.com/users/thardie/following{/other_user}", "gists_url": "https://api.github.com/users/thardie/gists{/gist_id}", "starred_url": "https://api.github.com/users/thardie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thardie/subscriptions", "organizations_url": "https://api.github.com/users/thardie/orgs", "repos_url": "https://api.github.com/users/thardie/repos", "events_url": "https://api.github.com/users/thardie/events{/privacy}", "received_events_url": "https://api.github.com/users/thardie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-13T21:29:58Z", "updated_at": "2019-03-02T14:21:27Z", "closed_at": "2019-03-02T14:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is similar to #408 but doesn't seem to be the same cause:\r\n\r\n```\r\n>>> from pyroute2 import IPDB\r\n>>> ipdb=IPDB()\r\n>>> ipdb.routes.add(dst='103.243.14.1', oif=19).commit()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/ipdb/routes.py\", line 572, in commit\r\n    raise error\r\npyroute2.ipdb.exceptions.CommitException: target family is not set\r\n```\r\n\r\nRunning version 0.5.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/558", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/558/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/558/events", "html_url": "https://github.com/svinota/pyroute2/issues/558", "id": 374419458, "node_id": "MDU6SXNzdWUzNzQ0MTk0NTg=", "number": 558, "title": "IPRoute.get_routes(dst='default') does not return default gateway", "user": {"login": "tomkcook", "id": 1853442, "node_id": "MDQ6VXNlcjE4NTM0NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1853442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomkcook", "html_url": "https://github.com/tomkcook", "followers_url": "https://api.github.com/users/tomkcook/followers", "following_url": "https://api.github.com/users/tomkcook/following{/other_user}", "gists_url": "https://api.github.com/users/tomkcook/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomkcook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomkcook/subscriptions", "organizations_url": "https://api.github.com/users/tomkcook/orgs", "repos_url": "https://api.github.com/users/tomkcook/repos", "events_url": "https://api.github.com/users/tomkcook/events{/privacy}", "received_events_url": "https://api.github.com/users/tomkcook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-26T14:51:42Z", "updated_at": "2019-03-01T08:56:03Z", "closed_at": "2019-03-01T08:54:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "The query `IPRoute.get_routes(dst='default')` or equivalently `dst='0.0.0.0'` returns the following on my system:\r\n\r\n```\r\n>>> pprint(ipr.get_routes(dst='0.0.0.0'))\r\n[{'attrs': [('RTA_TABLE', 254),\r\n            ('RTA_DST', '0.0.0.0'),\r\n            ('RTA_OIF', 1),\r\n            ('RTA_PREFSRC', '127.0.0.1'),\r\n            ('UNKNOWN', {'header': {'length': 8, 'type': 25}}),\r\n            ('RTA_CACHEINFO', {'rta_error': 0, 'rta_id': 0, 'rta_expires': 0, 'rta_ts': 0, 'rta_lastuse': 0, 'rta_tsage': 0, 'rta_used': 0, 'rta_clntref': 1})],\r\n  'dst_len': 32,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 2147484160,\r\n  'header': {'error': None,\r\n             'flags': 0,\r\n             'length': 104,\r\n             'pid': 9265,\r\n             'sequence_number': 258,\r\n             'type': 24},\r\n  'proto': 0,\r\n  'scope': 0,\r\n  'src_len': 0,\r\n  'table': 254,\r\n  'tos': 0,\r\n  'type': 2}]\r\n```\r\nThis does look sort of plausible, except that it has no gateway.  However, querying without the filter returns this (note I've removed a bunch of docker-related routes for clarity):\r\n\r\n```\r\n>>> pprint(ipr.get_routes())\r\n[{'attrs': [('RTA_TABLE', 254),\r\n            ('RTA_PRIORITY', 100),\r\n            ('RTA_GATEWAY', '192.168.14.1'),\r\n            ('RTA_OIF', 2)],\r\n  'dst_len': 0,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 16,\r\n  'scope': 0,\r\n  'src_len': 0,\r\n  'table': 254,\r\n  'tos': 0,\r\n  'type': 1},\r\n {'attrs': [('RTA_TABLE', 254),\r\n            ('RTA_DST', '169.254.0.0'),\r\n            ('RTA_PRIORITY', 1000),\r\n            ('RTA_OIF', 16)],\r\n  'dst_len': 16,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 3,\r\n  'scope': 253,\r\n  'src_len': 0,\r\n  'table': 254,\r\n  'tos': 0,\r\n  'type': 1},\r\n {'attrs': [('RTA_TABLE', 254),\r\n            ('RTA_DST', '192.168.14.0'),\r\n            ('RTA_PRIORITY', 100),\r\n            ('RTA_PREFSRC', '192.168.14.26'),\r\n            ('RTA_OIF', 2)],\r\n  'dst_len': 24,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 68,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 2,\r\n  'scope': 253,\r\n  'src_len': 0,\r\n  'table': 254,\r\n  'tos': 0,\r\n  'type': 1},\r\n {'attrs': [('RTA_TABLE', 255),\r\n            ('RTA_DST', '127.0.0.0'),\r\n            ('RTA_PREFSRC', '127.0.0.1'),\r\n            ('RTA_OIF', 1)],\r\n  'dst_len': 32,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 2,\r\n  'scope': 253,\r\n  'src_len': 0,\r\n  'table': 255,\r\n  'tos': 0,\r\n  'type': 3},\r\n {'attrs': [('RTA_TABLE', 255),\r\n            ('RTA_DST', '127.0.0.0'),\r\n            ('RTA_PREFSRC', '127.0.0.1'),\r\n            ('RTA_OIF', 1)],\r\n  'dst_len': 8,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 2,\r\n  'scope': 254,\r\n  'src_len': 0,\r\n  'table': 255,\r\n  'tos': 0,\r\n  'type': 2},\r\n {'attrs': [('RTA_TABLE', 255),\r\n            ('RTA_DST', '127.0.0.1'),\r\n            ('RTA_PREFSRC', '127.0.0.1'),\r\n            ('RTA_OIF', 1)],\r\n  'dst_len': 32,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 2,\r\n  'scope': 254,\r\n  'src_len': 0,\r\n  'table': 255,\r\n  'tos': 0,\r\n  'type': 2},\r\n {'attrs': [('RTA_TABLE', 255),\r\n            ('RTA_DST', '127.255.255.255'),\r\n            ('RTA_PREFSRC', '127.0.0.1'),\r\n            ('RTA_OIF', 1)],\r\n  'dst_len': 32,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 2,\r\n  'scope': 253,\r\n  'src_len': 0,\r\n  'table': 255,\r\n  'tos': 0,\r\n  'type': 3},\r\n {'attrs': [('RTA_TABLE', 255),\r\n            ('RTA_DST', '192.168.14.0'),\r\n            ('RTA_PREFSRC', '192.168.14.26'),\r\n            ('RTA_OIF', 2)],\r\n  'dst_len': 32,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 2,\r\n  'scope': 253,\r\n  'src_len': 0,\r\n  'table': 255,\r\n  'tos': 0,\r\n  'type': 3},\r\n {'attrs': [('RTA_TABLE', 255),\r\n            ('RTA_DST', '192.168.14.26'),\r\n            ('RTA_PREFSRC', '192.168.14.26'),\r\n            ('RTA_OIF', 2)],\r\n  'dst_len': 32,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 2,\r\n  'scope': 254,\r\n  'src_len': 0,\r\n  'table': 255,\r\n  'tos': 0,\r\n  'type': 2},\r\n {'attrs': [('RTA_TABLE', 255),\r\n            ('RTA_DST', '192.168.14.255'),\r\n            ('RTA_PREFSRC', '192.168.14.26'),\r\n            ('RTA_OIF', 2)],\r\n  'dst_len': 32,\r\n  'event': 'RTM_NEWROUTE',\r\n  'family': 2,\r\n  'flags': 0,\r\n  'header': {'error': None,\r\n             'flags': 2,\r\n             'length': 60,\r\n             'pid': 9265,\r\n             'sequence_number': 257,\r\n             'type': 24},\r\n  'proto': 2,\r\n  'scope': 253,\r\n  'src_len': 0,\r\n  'table': 255,\r\n  'tos': 0,\r\n  'type': 3}]\r\n```\r\nThis has my default route (the first one) but doesn't describe it as a default route - it has no destination.\r\n\r\nThis doesn't look like the expected result to me - `get_routes(dst='default')` ought to return a subset of the routes returned by `get_routes()`, and `get_routes()` ought to return a default route that has 0.0.0.0 as its destination.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/557", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/557/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/557/events", "html_url": "https://github.com/svinota/pyroute2/issues/557", "id": 374281838, "node_id": "MDU6SXNzdWUzNzQyODE4Mzg=", "number": 557, "title": "IFLA_VXLAN_xxx definitions miss some newer elements", "user": {"login": "TheDiveO", "id": 6920158, "node_id": "MDQ6VXNlcjY5MjAxNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6920158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheDiveO", "html_url": "https://github.com/TheDiveO", "followers_url": "https://api.github.com/users/TheDiveO/followers", "following_url": "https://api.github.com/users/TheDiveO/following{/other_user}", "gists_url": "https://api.github.com/users/TheDiveO/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheDiveO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheDiveO/subscriptions", "organizations_url": "https://api.github.com/users/TheDiveO/orgs", "repos_url": "https://api.github.com/users/TheDiveO/repos", "events_url": "https://api.github.com/users/TheDiveO/events{/privacy}", "received_events_url": "https://api.github.com/users/TheDiveO/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}, {"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-26T08:37:59Z", "updated_at": "2019-03-02T02:04:53Z", "closed_at": "2019-03-02T02:04:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "`netlink/rtnl/ifinfmsg/plugins/vxlan.py` misses a few more recent Linux kernel definitions, in particular:\r\n* `IFLA_VXLAN_LABEL` of type `NLA_U32`\r\n* `IFLA_VXLAN_GPE` of type `NLA_FLAG`\r\n* `IFLA_VXLAN_COLLECT_METADATA` of type `NLA_U8`\r\n\r\nSources:\r\n* vxlan attributes: https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/if_link.h#L531\r\n* data types: https://elixir.bootlin.com/linux/latest/source/drivers/net/vxlan.c#L2724", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/556", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/556/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/556/events", "html_url": "https://github.com/svinota/pyroute2/issues/556", "id": 373489761, "node_id": "MDU6SXNzdWUzNzM0ODk3NjE=", "number": 556, "title": "Type of NL80211_ATTR_WDEV is incorrect", "user": {"login": "tomkcook", "id": 1853442, "node_id": "MDQ6VXNlcjE4NTM0NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1853442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomkcook", "html_url": "https://github.com/tomkcook", "followers_url": "https://api.github.com/users/tomkcook/followers", "following_url": "https://api.github.com/users/tomkcook/following{/other_user}", "gists_url": "https://api.github.com/users/tomkcook/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomkcook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomkcook/subscriptions", "organizations_url": "https://api.github.com/users/tomkcook/orgs", "repos_url": "https://api.github.com/users/tomkcook/repos", "events_url": "https://api.github.com/users/tomkcook/events{/privacy}", "received_events_url": "https://api.github.com/users/tomkcook/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T13:42:38Z", "updated_at": "2019-03-01T09:17:14Z", "closed_at": "2019-03-01T09:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "At pyroute2/netlink/nl80211/__init__.py:365, NL80211_ATTR_WDEV is listed as type uint32.  However, this is incorrect; see eg line 346 of net/wireless/nl80211.c in the kernel source:\r\n\r\n\t[NL80211_ATTR_WDEV] = { .type = NLA_U64 },\r\n\r\nThis causes the 32 MSBs of the WDEV to be thrown away eg in the results of `IW.get_interface_by_ifindex`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/554", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/554/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/554/events", "html_url": "https://github.com/svinota/pyroute2/issues/554", "id": 372469214, "node_id": "MDU6SXNzdWUzNzI0NjkyMTQ=", "number": 554, "title": "`IPRoute.get_addr` not returning IP6 addresses for label", "user": {"login": "tomkcook", "id": 1853442, "node_id": "MDQ6VXNlcjE4NTM0NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1853442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomkcook", "html_url": "https://github.com/tomkcook", "followers_url": "https://api.github.com/users/tomkcook/followers", "following_url": "https://api.github.com/users/tomkcook/following{/other_user}", "gists_url": "https://api.github.com/users/tomkcook/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomkcook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomkcook/subscriptions", "organizations_url": "https://api.github.com/users/tomkcook/orgs", "repos_url": "https://api.github.com/users/tomkcook/repos", "events_url": "https://api.github.com/users/tomkcook/events{/privacy}", "received_events_url": "https://api.github.com/users/tomkcook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-22T10:34:01Z", "updated_at": "2019-03-01T09:13:40Z", "closed_at": "2019-03-01T09:13:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "My system has an ethernet port with IP4 and IP6 address assigned:\r\n\r\n```\r\n$ ifconfig eno1\r\neno1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\n        inet 192.168.14.26  netmask 255.255.255.0  broadcast 192.168.14.255\r\n        inet6 fe80::870b:5971:2793:d52d  prefixlen 64  scopeid 0x20<link>\r\n        ether fc:4d:d4:3d:76:9b  txqueuelen 1000  (Ethernet)\r\n        RX packets 238491  bytes 222318854 (222.3 MB)\r\n        RX errors 0  dropped 0  overruns 0  frame 0\r\n        TX packets 85969  bytes 21583575 (21.5 MB)\r\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\r\n        device interrupt 20  memory 0xfb300000-fb320000  \r\n```\r\n\r\nBut `IPRoute.get_addr` doesn't report the IP6 address when filtering by label:\r\n\r\n```\r\n>>> import pyroute2, socket\r\n>>> ipr = pyroute2.IPRoute()\r\n>>> ipr.get_addr(family=socket.AF_INET6, label='eno1')\r\n()\r\n```\r\n\r\nThe IP4 address is correctly reported:\r\n\r\n```\r\n>>> ipr.get_addr(family=socket.AF_INET, label='eno1')\r\n({'index': 2, 'family': 2, 'header': {'pid': 8725, 'length': 88, 'flags': 2, 'error': None, 'type': 20, 'sequence_number': 256}, 'flags': 0, 'attrs': [('IFA_ADDRESS', '192.168.14.26'), ('IFA_LOCAL', '192.168.14.26'), ('IFA_BROADCAST', '192.168.14.255'), ('IFA_LABEL', 'eno1'), ('IFA_FLAGS', 512), ('IFA_CACHEINFO', {'ifa_valid': 683429, 'tstamp': 1356, 'cstamp': 1217, 'ifa_preferred': 683429})], 'prefixlen': 24, 'scope': 0, 'event': 'RTM_NEWADDR'},)\r\n```\r\n\r\nAnd if I don't filter by label then the address is returned:\r\n\r\n```\r\n>>> ipr.get_addr(family=socket.AF_INET6)\r\n({'index': 1, 'family': 10, 'header': {'pid': 8725, 'length': 72, 'flags': 2, 'error': None, 'type': 20, 'sequence_number': 257}, 'flags': 128, 'attrs': [('IFA_ADDRESS', '::1'), ('IFA_CACHEINFO', {'ifa_valid': 4294967295, 'tstamp': 382, 'cstamp': 382, 'ifa_preferred': 4294967295}), ('IFA_FLAGS', 128)], 'prefixlen': 128, 'scope': 254, 'event': 'RTM_NEWADDR'},\r\n{'index': 2, 'family': 10, 'header': {'pid': 8725, 'length': 72, 'flags': 2, 'error': None, 'type': 20, 'sequence_number': 257}, 'flags': 128, 'attrs': [('IFA_ADDRESS', 'fe80::870b:5971:2793:d52d'), ('IFA_CACHEINFO', {'ifa_valid': 4294967295, 'tstamp': 1405, 'cstamp': 1204, 'ifa_preferred': 4294967295}), ('IFA_FLAGS', 640)], 'prefixlen': 64, 'scope': 253, 'event': 'RTM_NEWADDR'})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/553", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/553/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/553/events", "html_url": "https://github.com/svinota/pyroute2/issues/553", "id": 372065231, "node_id": "MDU6SXNzdWUzNzIwNjUyMzE=", "number": 553, "title": "pyroute2 logs \"shutdown in progress\" warning after ipdb.release() is called", "user": {"login": "PaulSD", "id": 74427, "node_id": "MDQ6VXNlcjc0NDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/74427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulSD", "html_url": "https://github.com/PaulSD", "followers_url": "https://api.github.com/users/PaulSD/followers", "following_url": "https://api.github.com/users/PaulSD/following{/other_user}", "gists_url": "https://api.github.com/users/PaulSD/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulSD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulSD/subscriptions", "organizations_url": "https://api.github.com/users/PaulSD/orgs", "repos_url": "https://api.github.com/users/PaulSD/repos", "events_url": "https://api.github.com/users/PaulSD/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulSD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-19T18:21:18Z", "updated_at": "2019-02-28T20:30:24Z", "closed_at": "2019-02-28T20:30:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If ipdb.release() is called (as is specified in the [documentation](https://github.com/svinota/pyroute2/blob/master/pyroute2/ipdb/main.py#L153)), and logging is configured, then pyroute2 always logs \"WARNING:pyroute2.ipdb.main:shutdown in progress\" when python exits:\r\n```\r\n#!/usr/bin/env python\r\nimport logging\r\nlogging.basicConfig(level=logging.INFO)\r\nfrom pyroute2 import IPDB\r\nipdb = IPDB()\r\nipdb.release()\r\n```\r\nIt looks like the problem is:\r\nhttps://github.com/svinota/pyroute2/blob/master/pyroute2/ipdb/main.py#L907\r\nand\r\nhttps://github.com/svinota/pyroute2/blob/master/pyroute2/ipdb/main.py#L1150\r\n\r\nCan cleanup() be updated to skip the call to release() if _stop is True to avoid this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/547", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/547/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/547/events", "html_url": "https://github.com/svinota/pyroute2/issues/547", "id": 368061905, "node_id": "MDU6SXNzdWUzNjgwNjE5MDU=", "number": 547, "title": "Calling IPRoute.link in Multi-thread Programme Triggers NetlinkError: (9, 'Bad file descriptor')", "user": {"login": "edwardbadboy", "id": 307413, "node_id": "MDQ6VXNlcjMwNzQxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/307413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwardbadboy", "html_url": "https://github.com/edwardbadboy", "followers_url": "https://api.github.com/users/edwardbadboy/followers", "following_url": "https://api.github.com/users/edwardbadboy/following{/other_user}", "gists_url": "https://api.github.com/users/edwardbadboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwardbadboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwardbadboy/subscriptions", "organizations_url": "https://api.github.com/users/edwardbadboy/orgs", "repos_url": "https://api.github.com/users/edwardbadboy/repos", "events_url": "https://api.github.com/users/edwardbadboy/events{/privacy}", "received_events_url": "https://api.github.com/users/edwardbadboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-09T06:41:45Z", "updated_at": "2019-03-02T14:25:35Z", "closed_at": "2019-03-02T14:25:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nWe use pyroute2 with python multiprocessing.pool.ThreadPool. We found that sometimes IPRoute.link triggers exception NetlinkError: (9, 'Bad file descriptor').\r\n\r\nReproduce steps:\r\nkernel versions:\r\n  3.10.0-862.3.3.el7.x86_64\r\n  4.4.0-128-generic #154~14.04.1-Ubuntu\r\npyroute2 version: 0.5.3\r\n\r\nHere is the sample script to reproduce the problem.\r\n\r\n```\r\nimport logging\r\nimport os\r\nimport sys\r\nimport time\r\nimport traceback\r\n\r\nimport pyroute2\r\nfrom pyroute2 import netns\r\n\r\nfrom multiprocessing import pool\r\n\r\n\r\ndef worker(netns_path, work_index):\r\n    with pyroute2.IPRoute() as ip, pyroute2.NetNS(netns_path) as ns:\r\n        try:\r\n            veth_outside = 'veth%s-o' % work_index\r\n            veth_inside = 'veth%s-i' % work_index\r\n            ip.link('add', ifname=veth_outside, kind='veth', peer=veth_inside)\r\n            veth_outside_idx = ip.link_lookup(ifname=veth_outside)[0]\r\n            ip.link('set', index=veth_outside_idx, state='up')\r\n            veth_inside_idx = ip.link_lookup(ifname=veth_inside)[0]\r\n            ip.link('set', index=veth_inside_idx, net_ns_fd=netns_path)\r\n            veth_inside_idx = ns.link_lookup(ifname=veth_inside)[0]\r\n            ns.link('set', index=veth_inside_idx, state='up')\r\n        except Exception:\r\n            logging.exception(\r\n                '%s error setting namespace for %s', os.getpid(), veth_inside)\r\n        finally:\r\n            if veth_outside_idx is not None:\r\n                ip.link('del', index=veth_outside_idx)\r\n\r\n\r\ndef main():\r\n    logging.basicConfig(level=logging.DEBUG)\r\n    worker_pool = pool.ThreadPool(64)\r\n\r\n    ns_names = ['testns%i' % i for i in range(5)]\r\n    for ns_name in ns_names:\r\n        pyroute2.NetNS(ns_name)\r\n\r\n    while True:\r\n        for i, ns_name in enumerate(ns_names):\r\n            worker_pool.apply_async(\r\n                worker, args=(netns._get_netnspath(ns_name), i))\r\n        time.sleep(5)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nIt usually prints the following exception after several seconds.\r\n\r\n```\r\nERROR:root:143448 error setting namespace for veth0-i\r\nTraceback (most recent call last):\r\n  File \"race.py\", line 22, in worker\r\n    ip.link('set', index=veth_inside_idx, net_ns_fd=netns_path)\r\n  File \"/home/edward/pyroute2-race/lib/python2.7/site-packages/pyroute2/iproute/linux.py\", line 1115, in link\r\n    msg_flags=msg_flags)\r\n  File \"/home/edward/pyroute2-race/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 352, in nlm_request\r\n    return tuple(self._genlm_request(*argv, **kwarg))\r\n  File \"/home/edward/pyroute2-race/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 836, in nlm_request\r\n    callback=callback):\r\n  File \"/home/edward/pyroute2-race/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 355, in get\r\n    return tuple(self._genlm_get(*argv, **kwarg))\r\n  File \"/home/edward/pyroute2-race/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 679, in get\r\n    raise msg['header']['error']\r\nNetlinkError: (9, 'Bad file descriptor')\r\n```\r\n\r\nAfter some investigation we found some clues.\r\n\r\nstrace shows that when a thread A opens the full path of \"/var/run/netns/testnsX\" and gets an FD, another thread B interrupts and closes that FD. Then when thread A sends the FD to the kernel via netlink socket, kernel replies 'Bad file descriptor' (error code 9 is EBADF).\r\n\r\nThis might because of the following factors combining together.\r\n\r\n1. `netlink/rtnl/ifinfmsg/__init__.py`\r\nIn class netns_fd, when doing encode, if it finds that self.value is an absolute path, it tries to open the path and get an FD, and register a cleanup callback to close that FD.\r\n\r\n2. netlink/nlsocket.py\r\nIn class NetlinkMixin, self.addr_pool = AddrPool(minaddr=0x000000ff, maxaddr=0x0000ffff), so each netlink socket of the respective thread gets a separated AddrPool. This means the msg_seq always starts from 0xff in each thread.\r\n\r\n3. `netlink/__init__.py`\r\nclean_cbs = {}\r\nThe clean_cbs is a global variable. In the implementation of register_clean_cb(), it uses the sequence number as the key, and appends to existing callbacks. \"clean_cbs[seq].append(cb)\"\r\n\r\nSo if two threads happens to have the same seq number, they'll all register the FD under the same clean_cbs[seq]. When the a thread tries to decode kernel response message, it calls all callbacks under that seq, and thus closes all the related FDs including FDs used by other threads.\r\n\r\nThis means pyroute2 is not safe to be used in multi-thread programme. I'd suggest to use thread local to store clean_cbs to solve the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/543", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/543/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/543/events", "html_url": "https://github.com/svinota/pyroute2/issues/543", "id": 362827569, "node_id": "MDU6SXNzdWUzNjI4Mjc1Njk=", "number": 543, "title": "ipdb: IPv6 MP fix breaks handling of tables > 255", "user": {"login": "PaulSD", "id": 74427, "node_id": "MDQ6VXNlcjc0NDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/74427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulSD", "html_url": "https://github.com/PaulSD", "followers_url": "https://api.github.com/users/PaulSD/followers", "following_url": "https://api.github.com/users/PaulSD/following{/other_user}", "gists_url": "https://api.github.com/users/PaulSD/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulSD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulSD/subscriptions", "organizations_url": "https://api.github.com/users/PaulSD/orgs", "repos_url": "https://api.github.com/users/PaulSD/repos", "events_url": "https://api.github.com/users/PaulSD/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulSD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-22T05:13:42Z", "updated_at": "2019-09-26T08:25:21Z", "closed_at": "2019-09-26T08:25:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/svinota/pyroute2/commit/8278ecbae7269e11698e02bf51d2fbe09b1c5698 has broken handling of IPv6 routes in route tables above 255:\r\n\r\n```\r\n# ip -6 route add table 256 1234::/64 dev eth0\r\n# ip route add table 256 1.2.3.0/24 dev eth0\r\n# python\r\n>>> from pyroute2 import IPDB\r\n>>> ipdb = IPDB()\r\n>>> ipdb.routes.tables[256]\r\n[{'metrics': {}, 'oif': 2, 'dst_len': 64, 'family': 10, 'proto': 3, 'tos': 0, 'dst': '1234::/64', 'pref': '00', 'flags': 0, 'ipdb_priority': 0, 'priority': 1024, 'header': {'pid': 3844071573, 'length': 116, 'flags': 2, 'error': None, 'type': 24, 'sequence_number': 257}, 'scope': 0, 'attrs': [('RTA_TABLE', 256), ('RTA_DST', '1234::'), ('RTA_PRIORITY', 1024), ('RTA_OIF', 2), ('RTA_CACHEINFO', {'rta_error': 0, 'rta_id': 0, 'rta_expires': 0, 'rta_ts': 0, 'rta_lastuse': 2159, 'rta_tsage': 0, 'rta_used': 0, 'rta_clntref': 1}), ('RTA_PREF', '00')], 'encap': {}, 'src_len': 0, 'table': 0, 'multipath': (), 'type': 1, 'event': 'RTM_NEWROUTE', 'ipdb_scope': 'system'}, {'oif': 2, 'dst_len': 24, 'family': 2, 'proto': 4, 'tos': 0, 'dst': '1.2.3.0/24', 'ipdb_priority': 0, 'metrics': {}, 'flags': 0, 'encap': {}, 'src_len': 0, 'table': 256, 'multipath': (), 'type': 1, 'scope': 0, 'ipdb_scope': 'system'}]\r\n>>> ipdb.routes.tables[256][0].remove().commit()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/ipdb/routes.py\", line 584, in commit\r\n    raise error\r\npyroute2.netlink.exceptions.NetlinkError: (3, 'No such process')\r\n```\r\n\r\nNotice that the IPv6 Route object hasn't been cleaned up properly (it still has 'header' and 'attrs' fields, the 'table' field hasn't been overwritten by the RTA_TABLE attr, etc), although the IPv4 Route object has been cleaned up.\r\nBecause of this, the remove() call on the IPv6 route fails because the incorrect 'table' value ends up being sent in RTA_TABLE in the netlink message requesting route deletion.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/542", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/542/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/542/events", "html_url": "https://github.com/svinota/pyroute2/issues/542", "id": 359949138, "node_id": "MDU6SXNzdWUzNTk5NDkxMzg=", "number": 542, "title": "failed to open netns - s390x", "user": {"login": "andrewdmcleod", "id": 7427352, "node_id": "MDQ6VXNlcjc0MjczNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7427352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewdmcleod", "html_url": "https://github.com/andrewdmcleod", "followers_url": "https://api.github.com/users/andrewdmcleod/followers", "following_url": "https://api.github.com/users/andrewdmcleod/following{/other_user}", "gists_url": "https://api.github.com/users/andrewdmcleod/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewdmcleod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewdmcleod/subscriptions", "organizations_url": "https://api.github.com/users/andrewdmcleod/orgs", "repos_url": "https://api.github.com/users/andrewdmcleod/repos", "events_url": "https://api.github.com/users/andrewdmcleod/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewdmcleod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-13T15:30:57Z", "updated_at": "2018-09-19T12:59:05Z", "closed_at": "2018-09-19T12:58:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "ARCH: s390x LPAR\r\nOS: Ubuntu 18.04.1 with sources.list.d/cloud-archive.list:deb http://ubuntu-cloud.archive.canonical.com/ubuntu bionic-updates/rocky main\r\n\r\nerror:\r\n\r\n~# python2.7\r\n>>> pyroute2.NetNS(\"qdhcp-e6c8fb75-df0a-4e68-b8e7-05df38730b0e\", flags=0)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3/dist-packages/pyroute2/netns/nslink.py\", line 193, in __init__\r\n    super(NetNS, self).__init__()\r\n  File \"/usr/lib/python3/dist-packages/pyroute2/netlink/nlsocket.py\", line 296, in __init__\r\n    super(NetlinkMixin, self).__init__()\r\n  File \"/usr/lib/python3/dist-packages/pyroute2/remote/__init__.py\", line 253, in __init__\r\n    raise init['error']\r\nOSError: [Errno 22] failed to open netns: 'qdhcp-e6c8fb75-df0a-4e68-b8e7-05df38730b0e'\r\n\r\nThe netns is functional:\r\n\r\n~# ip netns\r\nqdhcp-e6c8fb75-df0a-4e68-b8e7-05df38730b0e\r\n~# ip netns exec qdhcp-e6c8fb75-df0a-4e68-b8e7-05df38730b0e bash\r\n~# ip a\r\n1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN group default qlen 1000\r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n2: gre0@NONE: <NOARP> mtu 1476 qdisc noop state DOWN group default qlen 1000\r\n    link/gre 0.0.0.0 brd 0.0.0.0\r\n3: gretap0@NONE: <BROADCAST,MULTICAST> mtu 1462 qdisc noop state DOWN group default qlen 1000\r\n    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff\r\n4: erspan0@NONE: <BROADCAST,MULTICAST> mtu 1450 qdisc noop state DOWN group default qlen 1000\r\n    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff\r\n\r\nI noticed another open issue with similar error was related to chroot and suggested 'different architectures' as a potentially related issue, but didn't seem pertinent to log it under the same issue as this does not involve chroot, containers, etc.\r\n\r\nfwiw I am only seeing this on s390x, I don't see it with the same config. on amd, arm64, or ppc64el.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/539", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/539/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/539/events", "html_url": "https://github.com/svinota/pyroute2/issues/539", "id": 357533736, "node_id": "MDU6SXNzdWUzNTc1MzM3MzY=", "number": 539, "title": "By using IPDB context manager he don`t close NetNS() instance.", "user": {"login": "hetii", "id": 3405461, "node_id": "MDQ6VXNlcjM0MDU0NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3405461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetii", "html_url": "https://github.com/hetii", "followers_url": "https://api.github.com/users/hetii/followers", "following_url": "https://api.github.com/users/hetii/following{/other_user}", "gists_url": "https://api.github.com/users/hetii/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetii/subscriptions", "organizations_url": "https://api.github.com/users/hetii/orgs", "repos_url": "https://api.github.com/users/hetii/repos", "events_url": "https://api.github.com/users/hetii/events{/privacy}", "received_events_url": "https://api.github.com/users/hetii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-06T07:43:40Z", "updated_at": "2019-05-20T17:09:36Z", "closed_at": "2019-05-20T17:09:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I notice that context manager do not close NetNS() instance when exit.\r\n\r\n    ns = NetNS(\"ns1\")\r\n    with IPDB(nl=ns) as ip:\r\n        pass\r\n    print(ns.closed) #==> False\r\n\r\nRegards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/536", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/536/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/536/events", "html_url": "https://github.com/svinota/pyroute2/issues/536", "id": 354233356, "node_id": "MDU6SXNzdWUzNTQyMzMzNTY=", "number": 536, "title": "Create a new Virtual Network Interface", "user": {"login": "y-luis", "id": 8008773, "node_id": "MDQ6VXNlcjgwMDg3NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8008773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y-luis", "html_url": "https://github.com/y-luis", "followers_url": "https://api.github.com/users/y-luis/followers", "following_url": "https://api.github.com/users/y-luis/following{/other_user}", "gists_url": "https://api.github.com/users/y-luis/gists{/gist_id}", "starred_url": "https://api.github.com/users/y-luis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y-luis/subscriptions", "organizations_url": "https://api.github.com/users/y-luis/orgs", "repos_url": "https://api.github.com/users/y-luis/repos", "events_url": "https://api.github.com/users/y-luis/events{/privacy}", "received_events_url": "https://api.github.com/users/y-luis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-27T08:48:13Z", "updated_at": "2018-09-10T22:59:30Z", "closed_at": "2018-09-10T22:59:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following [this old answer](https://stackoverflow.com/a/28564981/3286487), I get this:\r\n\r\n```\r\n>>> from pyroute2 import IPRoute, IPDB\r\n>>> ip = IPRoute()\r\n>>> index = ip.link_lookup(ifname='enp0s8')[0]\r\n>>> ip.addr('add', index, address='10.22.22.190', mask=32)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/pyroute2/iproute/linux.py\", line 1227, in addr\r\n    terminate=lambda x: x['header']['type'] ==\r\n  File \"/usr/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 351, in nlm_request\r\n    return tuple(self._genlm_request(*argv, **kwarg))\r\n  File \"/usr/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 832, in nlm_request\r\n    callback=callback):\r\n  File \"/usr/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 354, in get\r\n    return tuple(self._genlm_get(*argv, **kwarg))\r\n  File \"/usr/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 675, in get\r\n    raise msg['header']['error']\r\npyroute2.netlink.exceptions.NetlinkError: (1, 'Operation not permitted')\r\n```\r\n\r\nIs still possible to add a virtual network interface using **pyroute2**?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/532", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/532/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/532/events", "html_url": "https://github.com/svinota/pyroute2/issues/532", "id": 345293857, "node_id": "MDU6SXNzdWUzNDUyOTM4NTc=", "number": 532, "title": "Cannot change some GRE attributes", "user": {"login": "ThomasFaivre", "id": 5682339, "node_id": "MDQ6VXNlcjU2ODIzMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5682339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasFaivre", "html_url": "https://github.com/ThomasFaivre", "followers_url": "https://api.github.com/users/ThomasFaivre/followers", "following_url": "https://api.github.com/users/ThomasFaivre/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasFaivre/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasFaivre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasFaivre/subscriptions", "organizations_url": "https://api.github.com/users/ThomasFaivre/orgs", "repos_url": "https://api.github.com/users/ThomasFaivre/repos", "events_url": "https://api.github.com/users/ThomasFaivre/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasFaivre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-27T16:42:47Z", "updated_at": "2018-08-09T08:51:55Z", "closed_at": "2018-08-09T08:51:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\r\n\r\nI haven't tried with other kind of interfaces, but when trying to set the TTL for instance, nothing happens. I traced it back to the type and flags used for the 'set' message:\r\n\r\n```\r\nimport pyroute2\r\n\r\nfrom pyroute2.netlink.rtnl import RTM_SETLINK\r\nfrom pyroute2.netlink.rtnl import RTM_NEWLINK\r\nfrom pyroute2.netlink import NLM_F_ACK\r\nfrom pyroute2.netlink import NLM_F_REQUEST\r\nfrom pyroute2.netlink import NLM_F_CREATE\r\nfrom pyroute2.netlink import NLM_F_EXCL\r\n\r\n\r\nflags_req = NLM_F_REQUEST | NLM_F_ACK\r\nflags_create = flags_req | NLM_F_CREATE | NLM_F_EXCL\r\n\r\nip = pyroute2.IPRoute()\r\nd = {'kind': 'gre', 'gre_local': '10.100.0.1', 'gre_remote': '10.100.0.2'}\r\nip.link('add', ifname='gre1', **d)\r\ngre1 = ip.link_lookup(ifname='gre1')\r\n\r\ndef set_ttl(ttl, command, index, **d):\r\n    print('Checking %s with ttl %d' % (command, ttl))\r\n    try:\r\n        ip.link(command, index=index, gre_ttl=ttl, **d)\r\n        print(ip.get_links(index)[0].get_attr('IFLA_LINKINFO').get_attr('IFLA_INFO_DATA').get_attr('IFLA_GRE_TTL'))\r\n    except:\r\n        print('Exception')\r\n\r\nset_ttl(50, 'set', gre1[0], **d)\r\nset_ttl(52, (RTM_NEWLINK, flags_req), gre1[0], **d)\r\nset_ttl(54, (RTM_NEWLINK, flags_create), gre1[0], **d)\r\nset_ttl(56, (RTM_SETLINK, flags_req), gre1[0], **d)\r\n# set equivalent\r\nset_ttl(58, (RTM_SETLINK, flags_create), gre1[0], **d)\r\n```\r\n\r\nWhen executing this script, we see that TTL change only with (RTM_NEWLINK, flags_req) as command:\r\n\r\n```\r\nroot@ubuntu1804:~# python3 test.py \r\nChecking set with ttl 50\r\n0\r\nChecking (16, 5) with ttl 52\r\n52\r\nChecking (16, 1541) with ttl 54\r\nException\r\nChecking (19, 5) with ttl 56\r\n52\r\nChecking (19, 1541) with ttl 58\r\n52\r\n```\r\n\r\nI can make a patch for IPRouteMixin.link but I see that IPRouteMixin.brport is also using RTM_SETLINK (but with flags_req) and I don't really now what to do with it :/\r\n\r\nAny advise?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/531", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/531/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/531/events", "html_url": "https://github.com/svinota/pyroute2/issues/531", "id": 344517873, "node_id": "MDU6SXNzdWUzNDQ1MTc4NzM=", "number": 531, "title": "GRE tunnel iflags/oflags have the wrong endianness", "user": {"login": "ThomasFaivre", "id": 5682339, "node_id": "MDQ6VXNlcjU2ODIzMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5682339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasFaivre", "html_url": "https://github.com/ThomasFaivre", "followers_url": "https://api.github.com/users/ThomasFaivre/followers", "following_url": "https://api.github.com/users/ThomasFaivre/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasFaivre/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasFaivre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasFaivre/subscriptions", "organizations_url": "https://api.github.com/users/ThomasFaivre/orgs", "repos_url": "https://api.github.com/users/ThomasFaivre/repos", "events_url": "https://api.github.com/users/ThomasFaivre/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasFaivre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-07-25T16:29:54Z", "updated_at": "2018-08-09T09:00:06Z", "closed_at": "2018-08-09T09:00:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\r\n\r\nI am currently using the IPRoute class to create some GRE interfaces, and I noticed that IFLAGS and OFLAGS have the wrong endianness.\r\n\r\nIt was correctly set until commit 2c207c523f99. I believe that issue #214 was misleading because commit c78babbd1e9f was using the correct flag values, and 32 is not one of them.\r\n\r\nAccording to the kernel iflags and oflags are supposed to be 'be16' (it is in 2c207c523f99 commitlog):\r\n * \t    nla_put_be16(skb, IFLA_GRE_IFLAGS, tnl_flags_to_gre_flags(p->i_flags)) ||\r\n * #define GRE_KEY\t\t__cpu_to_be16(0x2000)\r\n\r\nGRE_KEY in little-endianness is the flag used in #214 test, and therefore the test is wrong.\r\n\r\nI suggest reverting commit 2c207c523f99, and informing users that GRE flags should now use their correct value in big endian.\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/529", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/529/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/529/events", "html_url": "https://github.com/svinota/pyroute2/issues/529", "id": 341645551, "node_id": "MDU6SXNzdWUzNDE2NDU1NTE=", "number": 529, "title": "Tests that import iproute are broken on OSX", "user": {"login": "rm-you", "id": 4665421, "node_id": "MDQ6VXNlcjQ2NjU0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4665421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rm-you", "html_url": "https://github.com/rm-you", "followers_url": "https://api.github.com/users/rm-you/followers", "following_url": "https://api.github.com/users/rm-you/following{/other_user}", "gists_url": "https://api.github.com/users/rm-you/gists{/gist_id}", "starred_url": "https://api.github.com/users/rm-you/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rm-you/subscriptions", "organizations_url": "https://api.github.com/users/rm-you/orgs", "repos_url": "https://api.github.com/users/rm-you/repos", "events_url": "https://api.github.com/users/rm-you/events{/privacy}", "received_events_url": "https://api.github.com/users/rm-you/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-07-16T19:22:35Z", "updated_at": "2019-02-19T23:52:21Z", "closed_at": "2019-02-19T23:52:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that in this commit, some logic was added to `pyroute2/iproute/__init__.py` that causes an exception to be raised on anything besides Linux and BSD:\r\nhttps://github.com/svinota/pyroute2/commit/7b88c812e8033b155aec5b7be0c91be1f2f8b737#diff-5ee5b4b3168b121a94de25048bc7f152\r\n\r\nUnfortunately, many people run test suites on OSX, which should work if the appropriate pieces are mocked out -- but now this fails immediately upon import with `ImportError: no IPRoute module for the platform`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/525", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/525/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/525/events", "html_url": "https://github.com/svinota/pyroute2/issues/525", "id": 340854922, "node_id": "MDU6SXNzdWUzNDA4NTQ5MjI=", "number": 525, "title": "TypeError: recv_ft()", "user": {"login": "vinod9987", "id": 23075328, "node_id": "MDQ6VXNlcjIzMDc1MzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/23075328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinod9987", "html_url": "https://github.com/vinod9987", "followers_url": "https://api.github.com/users/vinod9987/followers", "following_url": "https://api.github.com/users/vinod9987/following{/other_user}", "gists_url": "https://api.github.com/users/vinod9987/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinod9987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinod9987/subscriptions", "organizations_url": "https://api.github.com/users/vinod9987/orgs", "repos_url": "https://api.github.com/users/vinod9987/repos", "events_url": "https://api.github.com/users/vinod9987/events{/privacy}", "received_events_url": "https://api.github.com/users/vinod9987/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002343, "node_id": "MDU6TGFiZWwzNTAwMjM0Mw==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-13T01:58:55Z", "updated_at": "2018-07-13T06:15:00Z", "closed_at": "2018-07-13T06:14:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI am getting below error, not able to figure out why. Any help is appreciated. \r\n```\r\nPython 2.7.11 (default, Jun 13 2018, 10:30:02) \r\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-18)] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pyroute2 import IPDB\r\n>>> ip = IPDB()\r\n>>> ip.by_name.keys()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/ipdb/main.py\", line 1004, in __getattribute__\r\n    obj._register()\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/ipdb/interfaces.py\", line 1154, in _register\r\n    links = self.ipdb.nl.get_links()\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/iproute/linux.py\", line 237, in get_links\r\n    result.extend(self.link(cmd, **kwarg))\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/iproute/linux.py\", line 1114, in link\r\n    msg_flags=msg_flags)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 351, in nlm_request\r\n    return tuple(self._genlm_request(*argv, **kwarg))\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 832, in nlm_request\r\n    callback=callback):\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 354, in get\r\n    return tuple(self._genlm_get(*argv, **kwarg))\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 744, in get\r\n    data = self.recv_ft(bufsize)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/netlink/rtnl/iprsocket.py\", line 79, in _p_recv_ft\r\n    data = self._recv_ft(bufsize, flags)\r\nTypeError: recv_ft() takes at most 2 arguments (3 given)\r\n```\r\n\r\nI am using freshly installed Centos 6.9 kernel 2.6.32-696.30.1.el6.x86_64\r\n\r\nThanks,\r\nVinod", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/523", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/523/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/523/events", "html_url": "https://github.com/svinota/pyroute2/issues/523", "id": 337951301, "node_id": "MDU6SXNzdWUzMzc5NTEzMDE=", "number": 523, "title": "Cannot import IPSet from other module", "user": {"login": "Vic063", "id": 5630835, "node_id": "MDQ6VXNlcjU2MzA4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5630835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vic063", "html_url": "https://github.com/Vic063", "followers_url": "https://api.github.com/users/Vic063/followers", "following_url": "https://api.github.com/users/Vic063/following{/other_user}", "gists_url": "https://api.github.com/users/Vic063/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vic063/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vic063/subscriptions", "organizations_url": "https://api.github.com/users/Vic063/orgs", "repos_url": "https://api.github.com/users/Vic063/repos", "events_url": "https://api.github.com/users/Vic063/events{/privacy}", "received_events_url": "https://api.github.com/users/Vic063/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-03T15:32:50Z", "updated_at": "2018-08-27T09:06:37Z", "closed_at": "2018-08-27T09:06:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nas part of my work of adding ematch/ipset filters, I wanted to use the IPSet module and import it from the ematch/ipset module I am writing.\r\n\r\nSadly, it does not work and crashes when simply doing:\r\nfrom pyroute2 import IPSet\r\nIs there any workaround available to do that?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/516", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/516/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/516/events", "html_url": "https://github.com/svinota/pyroute2/issues/516", "id": 330593525, "node_id": "MDU6SXNzdWUzMzA1OTM1MjU=", "number": 516, "title": "[announce] Important: netlink socket methods will return generators", "user": {"login": "svinota", "id": 814602, "node_id": "MDQ6VXNlcjgxNDYwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svinota", "html_url": "https://github.com/svinota", "followers_url": "https://api.github.com/users/svinota/followers", "following_url": "https://api.github.com/users/svinota/following{/other_user}", "gists_url": "https://api.github.com/users/svinota/gists{/gist_id}", "starred_url": "https://api.github.com/users/svinota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svinota/subscriptions", "organizations_url": "https://api.github.com/users/svinota/orgs", "repos_url": "https://api.github.com/users/svinota/repos", "events_url": "https://api.github.com/users/svinota/events{/privacy}", "received_events_url": "https://api.github.com/users/svinota/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-08T09:51:54Z", "updated_at": "2018-06-10T08:59:28Z", "closed_at": "2018-06-10T08:59:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Starting with 0.5.3 (the next after the coming release) **all** netlink socket methods that return now lists of messages will return generators.\r\n\r\n**UPD: as an option, not by default**\r\n\r\nIt is really important as the current design prevents from retrieving huge numbers of netlink objects. E.g. it is almost impossible now to get 500000 routes as the script will run out of memory.\r\n\r\nThe current master and 0.5.2 will allow **some** of the methods to return generators upon request. E.g., right now it is possible to run:\r\n```python\r\nwith IPRoute() as ipr:\r\n    for route in ipr.get_routes(nlm_generator=True):\r\n        do_something_with(route)\r\n```\r\n\r\nBut it is really tough to fit both approaches into one code, so starting with 0.5.3 the generators will be the only available alternative.\r\n\r\nIf you use constructions like `ipr.get_routes()[0]\u2026`, please make sure you explicitly unfold generators like `tuple(ipr.get_routes())[0]\u2026`\r\n\r\n\u2026\r\n\r\nThe same will affect **all** the netlink modules, like ipset, nl80211 etc, etc.\r\n\r\n\u2026\r\n\r\nOne more announce will come with 0.5.2.\r\n\r\nBrace yourself. Generators are coming.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/506", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/506/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/506/events", "html_url": "https://github.com/svinota/pyroute2/issues/506", "id": 324696314, "node_id": "MDU6SXNzdWUzMjQ2OTYzMTQ=", "number": 506, "title": "ipdb-ng: redesign network object containers", "user": {"login": "svinota", "id": 814602, "node_id": "MDQ6VXNlcjgxNDYwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svinota", "html_url": "https://github.com/svinota", "followers_url": "https://api.github.com/users/svinota/followers", "following_url": "https://api.github.com/users/svinota/following{/other_user}", "gists_url": "https://api.github.com/users/svinota/gists{/gist_id}", "starred_url": "https://api.github.com/users/svinota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svinota/subscriptions", "organizations_url": "https://api.github.com/users/svinota/orgs", "repos_url": "https://api.github.com/users/svinota/repos", "events_url": "https://api.github.com/users/svinota/events{/privacy}", "received_events_url": "https://api.github.com/users/svinota/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}, {"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-20T09:38:23Z", "updated_at": "2019-06-27T18:08:44Z", "closed_at": "2019-06-27T18:08:44Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Containers like `interfaces`, `routes` etc must return objects on demand \u2014 they must not store routes as `Transactional` objects as it takes too much memory and CPU resources", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/505", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/505/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/505/events", "html_url": "https://github.com/svinota/pyroute2/issues/505", "id": 324696175, "node_id": "MDU6SXNzdWUzMjQ2OTYxNzU=", "number": 505, "title": "ipdb-ng: IPDB to use multiple input sources", "user": {"login": "svinota", "id": 814602, "node_id": "MDQ6VXNlcjgxNDYwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svinota", "html_url": "https://github.com/svinota", "followers_url": "https://api.github.com/users/svinota/followers", "following_url": "https://api.github.com/users/svinota/following{/other_user}", "gists_url": "https://api.github.com/users/svinota/gists{/gist_id}", "starred_url": "https://api.github.com/users/svinota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svinota/subscriptions", "organizations_url": "https://api.github.com/users/svinota/orgs", "repos_url": "https://api.github.com/users/svinota/repos", "events_url": "https://api.github.com/users/svinota/events{/privacy}", "received_events_url": "https://api.github.com/users/svinota/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}, {"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-20T09:35:58Z", "updated_at": "2019-06-27T18:08:32Z", "closed_at": "2019-06-27T18:08:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "There should be possibility to fetch events from multiple event sources in the main loop.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/501", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/501/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/501/events", "html_url": "https://github.com/svinota/pyroute2/issues/501", "id": 322684995, "node_id": "MDU6SXNzdWUzMjI2ODQ5OTU=", "number": 501, "title": "pyroute2.NetNS leaks FDs on non-existing Network Namespace", "user": {"login": "edwardbadboy", "id": 307413, "node_id": "MDQ6VXNlcjMwNzQxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/307413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwardbadboy", "html_url": "https://github.com/edwardbadboy", "followers_url": "https://api.github.com/users/edwardbadboy/followers", "following_url": "https://api.github.com/users/edwardbadboy/following{/other_user}", "gists_url": "https://api.github.com/users/edwardbadboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwardbadboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwardbadboy/subscriptions", "organizations_url": "https://api.github.com/users/edwardbadboy/orgs", "repos_url": "https://api.github.com/users/edwardbadboy/repos", "events_url": "https://api.github.com/users/edwardbadboy/events{/privacy}", "received_events_url": "https://api.github.com/users/edwardbadboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-14T06:16:12Z", "updated_at": "2018-06-03T08:09:10Z", "closed_at": "2018-06-03T08:09:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, recently I found a problem in the instantiating code of `pyroute2.NetNS`.\r\n\r\nIt's like\r\n```\r\nclass NetNS(IPRouteMixin, RemoteSocket):\r\n    def __init__(self, netns, flags=os.O_CREAT):\r\n        self.netns = netns\r\n        self.flags = flags\r\n        self.cmdch, self._cmdch = config.MpPipe()\r\n        self.brdch, self._brdch = config.MpPipe()\r\n        atexit.register(self.close)\r\n        self.server = config.MpProcess(target=NetNServer,\r\n                                       args=(self.netns,\r\n                                             self._cmdch,\r\n                                             self._brdch,\r\n                                             self.flags))\r\n        self.server.start()\r\n        super(NetNS, self).__init__()\r\n        self.marshal = MarshalRtnl()\r\n```\r\n\r\nIf the given Network Namespaces does not exist, then an OSError would be raised from the line `super(NetNS, self).__init__()`, for example:\r\n\r\n```\r\n>>> import pyroute2\r\n>>> with pyroute2.NetNS('aaa') as ns:\r\n...     print ns\r\n...\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netns/nslink.py\", line 193, in __init__\r\n    super(NetNS, self).__init__()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 296, in __init__\r\n    super(NetlinkMixin, self).__init__()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/remote/__init__.py\", line 253, in __init__\r\n    raise init['error']\r\nOSError: [Errno 1] mount rundir failed: 'aaa'\r\n```\r\n\r\nThen `self.cmdch` and self.`brdch` would remain open in this case, so FDs are leaked.\r\n\r\n`self.cmdch` and `self.brdch` should be deleted and the FD should be closed automatically when the NetNS object is destroyed. However by using  `atexit.register(self.close)`, each instantiating of the class would keep a bound method in `atexit._exithandlers`, so there are reference to `self` of this bound method and `self.cmdch` and `self.brdch` are kept by `self`.\r\n\r\nEven if a successful invocation of NetNS instantiation with a successful `close()` will leave a bounded method registered in atexit. I think it's kind of memory leak:\r\n```\r\n>>> import pyroute2\r\n>>> import atexit\r\n>>> with pyroute2.NetNS('nsx-node-agent') as ns: print ns\r\n...\r\n<pyroute2.netns.nslink.NetNS object at 0x7f1c1a9d2950>\r\n>>> atexit._exithandlers\r\n[(<function shutdown at 0x7f1c1d31ae60>, (), {}), (<function _exit_function at 0x7f1c1aeb5b18>, (), {}), (<bound method NetNS.close of <pyroute2.netns.nslink.NetNS object at 0x7f1c1a9d2950>>, (), {}), (<bound method NetNS.close of <pyroute2.netns.nslink.NetNS object at 0x7f1c1a9d2950>>, (), {})]\r\n```\r\n\r\nA small script to reproduce the problem is as following.\r\n\r\n```\r\n# How to use: run \"ulimit -n 1024\" in shell first to make the script running out FDs faster\r\n# then run the script in the same shell\r\nimport pyroute2\r\n\r\nwhile True:\r\n    try:\r\n        with pyroute2.NetNS('aaa') as ns:\r\n            print ns\r\n    except OSError as e:\r\n        if e.errno == 1:\r\n            pass\r\n        else:\r\n            raise\r\n```\r\n\r\nIt will output error like:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"t.py\", line 5, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netns/nslink.py\", line 185, in __init__\r\n  File \"/usr/lib/python2.7/multiprocessing/__init__.py\", line 107, in Pipe\r\n  File \"/usr/lib/python2.7/multiprocessing/connection.py\", line 191, in Pipe\r\nOSError: [Errno 24] Too many open files\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/500", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/500/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/500/events", "html_url": "https://github.com/svinota/pyroute2/issues/500", "id": 321580509, "node_id": "MDU6SXNzdWUzMjE1ODA1MDk=", "number": 500, "title": "ipdb: ::/64 IPv6 route breaks IPDB", "user": {"login": "svinota", "id": 814602, "node_id": "MDQ6VXNlcjgxNDYwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svinota", "html_url": "https://github.com/svinota", "followers_url": "https://api.github.com/users/svinota/followers", "following_url": "https://api.github.com/users/svinota/following{/other_user}", "gists_url": "https://api.github.com/users/svinota/gists{/gist_id}", "starred_url": "https://api.github.com/users/svinota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svinota/subscriptions", "organizations_url": "https://api.github.com/users/svinota/orgs", "repos_url": "https://api.github.com/users/svinota/repos", "events_url": "https://api.github.com/users/svinota/events{/privacy}", "received_events_url": "https://api.github.com/users/svinota/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-09T13:54:53Z", "updated_at": "2018-05-09T15:22:21Z", "closed_at": "2018-05-09T15:22:21Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\n# ip -6 ro\r\nunreachable ::/64 dev lo proto kernel metric 256 error -101 pref medium\r\n128::/64 dev test0 proto kernel metric 256 pref medium\r\nfe80::/64 dev test0 proto kernel metric 256 pref medium\r\ndefault metric 1024 \r\n\tnexthop via 128::2 dev test0 weight 1 \r\n\tnexthop via 128::3 dev test0 weight 1 \r\n```\r\n\r\n```\r\nIn [6]: ip.routes\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-6-adc4fc19a13c> in <module>()\r\n----> 1 ip.routes\r\n\r\n/home/peet/Projects/pyroute2/pyroute2/ipdb/main.pyc in __getattribute__(self, name)\r\n    903             for obj in register:\r\n    904                 if hasattr(obj, '_register'):\r\n--> 905                     obj._register()\r\n    906                 if hasattr(obj, '_event_map'):\r\n    907                     for event in obj._event_map:\r\n\r\n/home/peet/Projects/pyroute2/pyroute2/ipdb/routes.pyc in _register(self)\r\n    983             self.load_netlink(msg)\r\n    984         for msg in self.ipdb.nl.get_routes(family=AF_INET6):\r\n--> 985             self.load_netlink(msg)\r\n    986         for msg in self.ipdb.nl.get_routes(family=AF_MPLS):\r\n    987             self.load_netlink(msg)\r\n\r\n/home/peet/Projects/pyroute2/pyroute2/ipdb/routes.pyc in load_netlink(self, msg)\r\n   1083                 self.tables[table] = RoutingTable(self.ipdb)\r\n   1084         key = self.tables[table].load(msg)\r\n-> 1085         return self.tables[table][key]\r\n   1086 \r\n   1087     def gc_mark_addr(self, msg):\r\n\r\n/home/peet/Projects/pyroute2/pyroute2/ipdb/routes.pyc in __getitem__(self, key)\r\n    937     def __getitem__(self, key):\r\n    938         with self.lock:\r\n--> 939             return self.describe(key, forward=False)['route']\r\n    940 \r\n    941     def __contains__(self, key):\r\n\r\n/home/peet/Projects/pyroute2/pyroute2/ipdb/routes.pyc in describe(self, target, forward)\r\n    862         if isinstance(target, (tuple, list)):\r\n    863             # full match\r\n--> 864             return self.idx[RouteKey(*target)]\r\n    865 \r\n    866         if isinstance(target, nlmsg):\r\n\r\nKeyError: RouteKey(dst='::/64', table=254, family=10, priority=256, tos=None)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/498", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/498/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/498/events", "html_url": "https://github.com/svinota/pyroute2/issues/498", "id": 321165200, "node_id": "MDU6SXNzdWUzMjExNjUyMDA=", "number": 498, "title": "IPDB: main thread is not notified when monitor thread crashes", "user": {"login": "crosser", "id": 1404921, "node_id": "MDQ6VXNlcjE0MDQ5MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1404921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crosser", "html_url": "https://github.com/crosser", "followers_url": "https://api.github.com/users/crosser/followers", "following_url": "https://api.github.com/users/crosser/following{/other_user}", "gists_url": "https://api.github.com/users/crosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/crosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crosser/subscriptions", "organizations_url": "https://api.github.com/users/crosser/orgs", "repos_url": "https://api.github.com/users/crosser/repos", "events_url": "https://api.github.com/users/crosser/events{/privacy}", "received_events_url": "https://api.github.com/users/crosser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-08T12:26:57Z", "updated_at": "2018-05-15T17:56:24Z", "closed_at": "2018-05-15T17:56:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When monitor thread crashes, main thread (i.e. the user program) has no way to know about that, so it continues to run unaware of the problem.\r\n\r\nOne crash scenario is when IPDB instance reinitialization is attempted, e.g. after an error on the netlink socket. In such case, shutting down is attempted from the monitor thread, that includes joining `self._mthread` which is the currently running thread, so another exception is raised, terminating the monitor thread.  There may be other scenarios.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/496", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/496/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/496/events", "html_url": "https://github.com/svinota/pyroute2/issues/496", "id": 320532837, "node_id": "MDU6SXNzdWUzMjA1MzI4Mzc=", "number": 496, "title": "RTM_GETNSID fails; generates message of size 25 instead of 28", "user": {"login": "TheDiveO", "id": 6920158, "node_id": "MDQ6VXNlcjY5MjAxNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6920158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheDiveO", "html_url": "https://github.com/TheDiveO", "followers_url": "https://api.github.com/users/TheDiveO/followers", "following_url": "https://api.github.com/users/TheDiveO/following{/other_user}", "gists_url": "https://api.github.com/users/TheDiveO/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheDiveO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheDiveO/subscriptions", "organizations_url": "https://api.github.com/users/TheDiveO/orgs", "repos_url": "https://api.github.com/users/TheDiveO/repos", "events_url": "https://api.github.com/users/TheDiveO/events{/privacy}", "received_events_url": "https://api.github.com/users/TheDiveO/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-05T18:53:41Z", "updated_at": "2018-05-14T08:44:27Z", "closed_at": "2018-05-14T08:44:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to do a `IPRoute().nlm_request(req, RTM_GETNSID)`. I'm using pyroute2 0.5.0.\r\n\r\n```python\r\nfrom pyroute2 import IPRoute\r\nimport socket\r\nfrom pyroute2.netlink import NLM_F_REQUEST\r\nimport pyroute2.netlink.rtnl as rtnl\r\nimport pyroute2.netlink.rtnl.nsidmsg as nsidmsg\r\n\r\nnetstack = IPRoute()\r\nwith open('/proc/{}/ns/net'.format(12345), \"r\") as netnsf: # PID 12345\r\n    req = nsidmsg.nsidmsg()\r\n    req['rtgen_family'] = 0\r\n    req['attrs'] = [('NETNSA_FD', netnsf.fileno())]\r\n    req.encode()\r\n    ret = netstack.nlm_request(req, rtnl.RTM_GETNSID, NLM_F_REQUEST)\r\n```\r\n\r\nThe request fails with error 22, invalid argument. Strace shows this, indicating that only 25 octets are indicated in the header:\r\n```\r\nsendto(5, {{len=25, type=0x5a /* NLMSG_??? */, flags=NLM_F_REQUEST, seq=255, pid=31204}, \"\\x00\\x00\\x00\\x00\\x08\\x00\\x03\\x00\\x06\"}, 28, 0, {sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, 12) = 28\r\n```\r\n\r\nAs the FD should be encoded as uint32, I would expect at least three more octets for the FD.\r\n\r\nComparing this to a RTM_GETNSID request from `lsns` I see that the request should have a length of 28.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/495", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/495/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/495/events", "html_url": "https://github.com/svinota/pyroute2/issues/495", "id": 320428012, "node_id": "MDU6SXNzdWUzMjA0MjgwMTI=", "number": 495, "title": "Supporting \"name-less\" network namespaces by identifying them via PID", "user": {"login": "TheDiveO", "id": 6920158, "node_id": "MDQ6VXNlcjY5MjAxNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6920158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheDiveO", "html_url": "https://github.com/TheDiveO", "followers_url": "https://api.github.com/users/TheDiveO/followers", "following_url": "https://api.github.com/users/TheDiveO/following{/other_user}", "gists_url": "https://api.github.com/users/TheDiveO/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheDiveO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheDiveO/subscriptions", "organizations_url": "https://api.github.com/users/TheDiveO/orgs", "repos_url": "https://api.github.com/users/TheDiveO/repos", "events_url": "https://api.github.com/users/TheDiveO/events{/privacy}", "received_events_url": "https://api.github.com/users/TheDiveO/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}, {"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-04T20:59:24Z", "updated_at": "2018-05-16T08:15:47Z", "closed_at": "2018-05-16T08:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the documentation as well as the source code in the netns/ subdirectory, I've got the impression that pyroute2 only supports \"named\" network namespaces that are somewhere registered in the filesystem (/var/run/netns).\r\n\r\nHowever, when working with different container environments, these all tend to use \"name-less\" network namespaces. Would it be possible to support identifying such name-less network namespaces in the same way as, for instance, `nsenter` does: via the PID of any process using that network namespace?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/493", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/493/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/493/events", "html_url": "https://github.com/svinota/pyroute2/issues/493", "id": 319934402, "node_id": "MDU6SXNzdWUzMTk5MzQ0MDI=", "number": 493, "title": "No RX/TX Pckts & Bytes counters ", "user": {"login": "blietaer", "id": 38951944, "node_id": "MDQ6VXNlcjM4OTUxOTQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/38951944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blietaer", "html_url": "https://github.com/blietaer", "followers_url": "https://api.github.com/users/blietaer/followers", "following_url": "https://api.github.com/users/blietaer/following{/other_user}", "gists_url": "https://api.github.com/users/blietaer/gists{/gist_id}", "starred_url": "https://api.github.com/users/blietaer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blietaer/subscriptions", "organizations_url": "https://api.github.com/users/blietaer/orgs", "repos_url": "https://api.github.com/users/blietaer/repos", "events_url": "https://api.github.com/users/blietaer/events{/privacy}", "received_events_url": "https://api.github.com/users/blietaer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-03T14:02:52Z", "updated_at": "2018-05-14T11:38:19Z", "closed_at": "2018-05-09T13:34:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Svinota,\r\nIs there a way in Pyroute2 to retrieve same information than psutil.net_if_stats() ?\r\n\r\nTypically, I am looking for basic stats like RX/TX counters (pckt, bytes, errors,..) but also the Link status (note that Link in psutil is related to interface status but not carrier link status itself... :/ )\r\n\r\nI can find the MTU in the IPDB.dump()[\"interfaces\"] but not thoses...not in NETLINK ?\r\nI could not find their trace in the pyroute2 doc...\r\n\r\nI wish I could drop psutil, especially because I use namespaces and this net_if_stats() behaves poorly in namespace contextes (while other psutil calls don't...)\r\n\r\nThank you for your feedback,\r\nCheers,\r\nBenoit\r\n(Belgium)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/489", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/489/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/489/events", "html_url": "https://github.com/svinota/pyroute2/issues/489", "id": 318700628, "node_id": "MDU6SXNzdWUzMTg3MDA2Mjg=", "number": 489, "title": "Some example needed how to control ARP table by pyroute2.", "user": {"login": "hetii", "id": 3405461, "node_id": "MDQ6VXNlcjM0MDU0NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3405461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetii", "html_url": "https://github.com/hetii", "followers_url": "https://api.github.com/users/hetii/followers", "following_url": "https://api.github.com/users/hetii/following{/other_user}", "gists_url": "https://api.github.com/users/hetii/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetii/subscriptions", "organizations_url": "https://api.github.com/users/hetii/orgs", "repos_url": "https://api.github.com/users/hetii/repos", "events_url": "https://api.github.com/users/hetii/events{/privacy}", "received_events_url": "https://api.github.com/users/hetii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42471876, "node_id": "MDU6TGFiZWw0MjQ3MTg3Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-29T08:44:59Z", "updated_at": "2018-05-15T19:32:22Z", "closed_at": "2018-05-15T19:32:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "For linux ip tool is possible to control ARP table.\r\nWe need some example how to do it by pyroute2.\r\n\r\n```\r\nroot@refactor:~# ip neigh show\r\n192.168.1.1 dev wlan0 lladdr 00:1b:da:29:3a:87 REACHABLE\r\nroot@refactor:~# ip neigh add 192.168.1.2 dev wlan0 lladdr 00:1b:da:29:3a:89\r\nroot@refactor:~# ip neigh show\r\n192.168.1.2 dev wlan0 lladdr 00:1b:da:29:3a:89 PERMANENT\r\n192.168.1.1 dev wlan0 lladdr 00:1b:da:29:3a:87 REACHABLE\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/487", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/487/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/487/events", "html_url": "https://github.com/svinota/pyroute2/issues/487", "id": 318699542, "node_id": "MDU6SXNzdWUzMTg2OTk1NDI=", "number": 487, "title": "Some typo in existing package ip.nl.get_neighbors / ip.nl.get_neighbours", "user": {"login": "hetii", "id": 3405461, "node_id": "MDQ6VXNlcjM0MDU0NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3405461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetii", "html_url": "https://github.com/hetii", "followers_url": "https://api.github.com/users/hetii/followers", "following_url": "https://api.github.com/users/hetii/following{/other_user}", "gists_url": "https://api.github.com/users/hetii/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetii/subscriptions", "organizations_url": "https://api.github.com/users/hetii/orgs", "repos_url": "https://api.github.com/users/hetii/repos", "events_url": "https://api.github.com/users/hetii/events{/privacy}", "received_events_url": "https://api.github.com/users/hetii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-29T08:24:35Z", "updated_at": "2018-04-30T09:39:49Z", "closed_at": "2018-04-30T09:39:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seams some typo exist in IPDB, both return the same result.\r\nip = IPDB()\r\nip.nl.get_neighbors()\r\nip.nl.get_neighbours()\r\nOr is it just there for some compatibility?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/484", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/484/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/484/events", "html_url": "https://github.com/svinota/pyroute2/issues/484", "id": 315043379, "node_id": "MDU6SXNzdWUzMTUwNDMzNzk=", "number": 484, "title": "With IPDB callbacks in use, mass adding and removal of routes cause crash", "user": {"login": "crosser", "id": 1404921, "node_id": "MDQ6VXNlcjE0MDQ5MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1404921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crosser", "html_url": "https://github.com/crosser", "followers_url": "https://api.github.com/users/crosser/followers", "following_url": "https://api.github.com/users/crosser/following{/other_user}", "gists_url": "https://api.github.com/users/crosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/crosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crosser/subscriptions", "organizations_url": "https://api.github.com/users/crosser/orgs", "repos_url": "https://api.github.com/users/crosser/repos", "events_url": "https://api.github.com/users/crosser/events{/privacy}", "received_events_url": "https://api.github.com/users/crosser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-17T12:46:02Z", "updated_at": "2018-05-15T15:51:48Z", "closed_at": "2018-05-15T15:51:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "pyroute2 from today's github master (dc8aa5b), Python 3.5.\r\n\r\nWith open IPDB and registered callback, I add a few thousand routes. All events are eventually processed (very slowly, see separate ticket). Then I remove all the routes, e.g. by flushing the appropriate kernel table. Then this happens:\r\n\r\n```\r\n2018-04-17 14:04:52,802 - ERROR - Restarting IPDB instance after error:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/main.py\", line 1291, in serve_forever\r\n    messages = self.mnl.get()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/netlink/nlsocket.py\", line 718, in get\r\n    data = self.recv_ft(bufsize)\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/netlink/nlsocket.py\", line 973, in recv_plugin\r\n    raise data_in\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/netlink/nlsocket.py\", line 514, in async_recv\r\n    self._sock.recv_into(data, 64000)\r\nOSError: [Errno 105] No buffer space available\r\n\r\n2018-04-17 14:04:52,804 - ERROR - Error restarting DB:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/main.py\", line 1291, in serve_forever\r\n    messages = self.mnl.get()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/netlink/nlsocket.py\", line 718, in get\r\n    data = self.recv_ft(bufsize)\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/netlink/nlsocket.py\", line 973, in recv_plugin\r\n    raise data_in\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/netlink/nlsocket.py\", line 514, in async_recv\r\n    self._sock.recv_into(data, 64000)\r\nOSError: [Errno 105] No buffer space available\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/main.py\", line 1306, in serve_forever\r\n    self.initdb()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/main.py\", line 854, in initdb\r\n    self.release(complete=False)\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/main.py\", line 1032, in release\r\n    self._mthread.join()\r\n  File \"/usr/lib/python3.5/threading.py\", line 1051, in join\r\n    raise RuntimeError(\"cannot join current thread\")\r\nRuntimeError: cannot join current thread\r\n```\r\n\r\nAfter that, I hit Ctrl-C twice (I catch KeryboardInterrupt in the master thread, and try to unregister callback and close IPDB), and it results in this:\r\n\r\n```\r\n^C2018-04-17 14:04:57,499 - INFO - Keyboard interrupt, stop   <<<--- My message\r\n^C2018-04-17 14:04:57,683 - ERROR - Uncaught exception\r\nTraceback (most recent call last):\r\n  File \"pb_route6to4.py\", line 269, in <module>\r\n    main()\r\n  File \"pb_route6to4.py\", line 256, in main\r\n    ipdb.unregister_callback(cuid)\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/main.py\", line 995, in unregister_callback\r\n    with safe.lock:\r\nKeyboardInterrupt\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/483", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/483/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/483/events", "html_url": "https://github.com/svinota/pyroute2/issues/483", "id": 315039009, "node_id": "MDU6SXNzdWUzMTUwMzkwMDk=", "number": 483, "title": "Handling of packet storm does not work well", "user": {"login": "crosser", "id": 1404921, "node_id": "MDQ6VXNlcjE0MDQ5MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1404921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crosser", "html_url": "https://github.com/crosser", "followers_url": "https://api.github.com/users/crosser/followers", "following_url": "https://api.github.com/users/crosser/following{/other_user}", "gists_url": "https://api.github.com/users/crosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/crosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crosser/subscriptions", "organizations_url": "https://api.github.com/users/crosser/orgs", "repos_url": "https://api.github.com/users/crosser/repos", "events_url": "https://api.github.com/users/crosser/events{/privacy}", "received_events_url": "https://api.github.com/users/crosser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}, {"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-17T12:34:05Z", "updated_at": "2018-05-15T15:51:25Z", "closed_at": "2018-05-15T15:51:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "pyroute2 from today's github master (dc8aa5b), Python 3.5.\r\n\r\nI have a daemon that reacts to appearance and disappearance of certain routes by opening IPDB and registering a callback. Normally, rate of routing updates is quite low and everything works perfectly, I can perform the necessary actions within fraction of a second from the routing change. But once in a while, network topology changes and I get a few thousand netlink events within a second or two, and then it's all quiet again.\r\n\r\nThis situation breaks IPDB: right from the first event, callback gets called about once a second. The rest of the time, the system is idle (my master thread just runs `while not sleep(9999): pass` after registering the callback). Obviously, waiting hours for the routing updates to be acted upon is unacceptable.\r\n\r\nI would expect whatever processing slowdown was introduced in response to the packet storm to be lifted ASAP if no new events have arrived in, say, a second, but apparently it is (semi?) permanent.\r\n\r\nEven better if the user could be notified about the storm: in my case it would be actually better to shut down IPDB instance, wait a second or two, and start processing from scratch. Reading a few thousand entries from the kernel table is much faster than processing a few thousand events in any case.\r\n\r\nThere is also a reproducible crash if I add many routes and then remove them, I'll open a separate ticket for that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/470", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/470/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/470/events", "html_url": "https://github.com/svinota/pyroute2/issues/470", "id": 307966115, "node_id": "MDU6SXNzdWUzMDc5NjYxMTU=", "number": 470, "title": "wrong rtnl group flags constant names", "user": {"login": "rjarry", "id": 472286, "node_id": "MDQ6VXNlcjQ3MjI4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/472286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjarry", "html_url": "https://github.com/rjarry", "followers_url": "https://api.github.com/users/rjarry/followers", "following_url": "https://api.github.com/users/rjarry/following{/other_user}", "gists_url": "https://api.github.com/users/rjarry/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjarry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjarry/subscriptions", "organizations_url": "https://api.github.com/users/rjarry/orgs", "repos_url": "https://api.github.com/users/rjarry/repos", "events_url": "https://api.github.com/users/rjarry/events{/privacy}", "received_events_url": "https://api.github.com/users/rjarry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-23T10:01:40Z", "updated_at": "2018-03-23T12:20:20Z", "closed_at": "2018-03-23T12:20:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have noticed that the rtnetlink multicast group flags (to use with `bind()` for kernels before 2.6.14) are declared with the names of the multicast group ids (to be used with `setsockopt(NETLINK_{ADD,DEL}_MEMBERSHIP)` since kernel 2.6.14). They should have a `RTMGRP_` prefix instead of `RTNLGRP_`.\r\n\r\nhttps://github.com/svinota/pyroute2/blob/master/pyroute2/netlink/rtnl/__init__.py#L39\r\nhttps://github.com/torvalds/linux/blob/master/include/uapi/linux/rtnetlink.h#L606\r\n\r\nThis is confusing and when trying to subscribe to a specific multicast group using the constants defined in `pyroute2.netlink.rtnl` with `setsockopt`, we get a `errno=22 invalid argument` error.\r\n\r\nI know that renaming those constants would break the API but I feel this is necessary. I'll submit a PR with a draft patch for review.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/467", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/467/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/467/events", "html_url": "https://github.com/svinota/pyroute2/issues/467", "id": 302725299, "node_id": "MDU6SXNzdWUzMDI3MjUyOTk=", "number": 467, "title": "python3.7 and pyroute2", "user": {"login": "fedya", "id": 598477, "node_id": "MDQ6VXNlcjU5ODQ3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/598477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fedya", "html_url": "https://github.com/fedya", "followers_url": "https://api.github.com/users/fedya/followers", "following_url": "https://api.github.com/users/fedya/following{/other_user}", "gists_url": "https://api.github.com/users/fedya/gists{/gist_id}", "starred_url": "https://api.github.com/users/fedya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fedya/subscriptions", "organizations_url": "https://api.github.com/users/fedya/orgs", "repos_url": "https://api.github.com/users/fedya/repos", "events_url": "https://api.github.com/users/fedya/events{/privacy}", "received_events_url": "https://api.github.com/users/fedya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-03-06T14:36:48Z", "updated_at": "2018-05-29T21:01:46Z", "closed_at": "2018-05-29T21:01:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n-bash-4.4$ /usr/bin/mock -v --configdir=/etc/mock/ --buildsrpm --spec=/home/omv/htop/htop.spec --sources=/home/omv/htop --no-cleanup-after --resultdir=/home/omv/output\r\nTraceback (most recent call last):\r\n  File \"/usr/libexec/mock/mock\", line 79, in <module>\r\n    from mockbuild import util\r\n  File \"/usr/lib/python3.7/site-packages/mockbuild/util.py\", line 41, in <module>\r\n    from pyroute2 import IPRoute\r\n  File \"/usr/lib/python3.7/site-packages/pyroute2/__init__.py\", line 19, in <module>\r\n    from pyroute2.iproute import (IPRoute,\r\n  File \"/usr/lib/python3.7/site-packages/pyroute2/iproute.py\", line 230, in <module>\r\n    from pyroute2.netlink.rtnl.iprsocket import IPRSocket\r\n  File \"/usr/lib/python3.7/site-packages/pyroute2/netlink/rtnl/iprsocket.py\", line 49\r\n    def bind(self, groups=rtnl.RTNL_GROUPS, async=False):\r\n                                                ^\r\nSyntaxError: invalid syntax\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/465", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/465/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/465/events", "html_url": "https://github.com/svinota/pyroute2/issues/465", "id": 302094172, "node_id": "MDU6SXNzdWUzMDIwOTQxNzI=", "number": 465, "title": "Create unencryped AP with pyroute2", "user": {"login": "eiselekd", "id": 1267820, "node_id": "MDQ6VXNlcjEyNjc4MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1267820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eiselekd", "html_url": "https://github.com/eiselekd", "followers_url": "https://api.github.com/users/eiselekd/followers", "following_url": "https://api.github.com/users/eiselekd/following{/other_user}", "gists_url": "https://api.github.com/users/eiselekd/gists{/gist_id}", "starred_url": "https://api.github.com/users/eiselekd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eiselekd/subscriptions", "organizations_url": "https://api.github.com/users/eiselekd/orgs", "repos_url": "https://api.github.com/users/eiselekd/repos", "events_url": "https://api.github.com/users/eiselekd/events{/privacy}", "received_events_url": "https://api.github.com/users/eiselekd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-04T15:24:03Z", "updated_at": "2020-05-15T15:42:20Z", "closed_at": "2020-05-15T15:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to setup a AP using pyroute2 only? This would enable me to skip hostapd while developing. Any leads on where to start?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/463", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/463/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/463/events", "html_url": "https://github.com/svinota/pyroute2/issues/463", "id": 301336022, "node_id": "MDU6SXNzdWUzMDEzMzYwMjI=", "number": 463, "title": "Add support for creation veth and put peer in separate namespace in one call", "user": {"login": "slawqo", "id": 3736918, "node_id": "MDQ6VXNlcjM3MzY5MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3736918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slawqo", "html_url": "https://github.com/slawqo", "followers_url": "https://api.github.com/users/slawqo/followers", "following_url": "https://api.github.com/users/slawqo/following{/other_user}", "gists_url": "https://api.github.com/users/slawqo/gists{/gist_id}", "starred_url": "https://api.github.com/users/slawqo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slawqo/subscriptions", "organizations_url": "https://api.github.com/users/slawqo/orgs", "repos_url": "https://api.github.com/users/slawqo/repos", "events_url": "https://api.github.com/users/slawqo/events{/privacy}", "received_events_url": "https://api.github.com/users/slawqo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42471876, "node_id": "MDU6TGFiZWw0MjQ3MTg3Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-01T09:37:40Z", "updated_at": "2018-06-27T08:39:13Z", "closed_at": "2018-06-12T13:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using \"ip\" tool in linux I can do something like:\r\n\r\n`ip link add veth type veth peer veth netns test-e40d1523-d29b-413e-bfff-91bf32dd042a`\r\n\r\nwhich will create me 2 veth devices (pair) with same names \"veth\" but one will be in \"test-e40d1523-d29b-413e-bfff-91bf32dd042a\"\r\n\r\nSimilar operation is not possible with pyroute2 as I need to do veth pair first and then put one of devices in namespace.\r\n\r\nSuch feature is necessary to switch \"add_veth\" method from OpenStack Neutron to pyroute2: https://github.com/openstack/neutron/blob/master/neutron/agent/linux/ip_lib.py#L173", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/462", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/462/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/462/events", "html_url": "https://github.com/svinota/pyroute2/issues/462", "id": 300537861, "node_id": "MDU6SXNzdWUzMDA1Mzc4NjE=", "number": 462, "title": "find a small bug when using NLA type : 'array'.", "user": {"login": "gengzhikui", "id": 1780278, "node_id": "MDQ6VXNlcjE3ODAyNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1780278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gengzhikui", "html_url": "https://github.com/gengzhikui", "followers_url": "https://api.github.com/users/gengzhikui/followers", "following_url": "https://api.github.com/users/gengzhikui/following{/other_user}", "gists_url": "https://api.github.com/users/gengzhikui/gists{/gist_id}", "starred_url": "https://api.github.com/users/gengzhikui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gengzhikui/subscriptions", "organizations_url": "https://api.github.com/users/gengzhikui/orgs", "repos_url": "https://api.github.com/users/gengzhikui/repos", "events_url": "https://api.github.com/users/gengzhikui/events{/privacy}", "received_events_url": "https://api.github.com/users/gengzhikui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-27T08:43:46Z", "updated_at": "2018-03-18T11:29:15Z", "closed_at": "2018-03-18T11:29:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "**I find a bug when using the pre-defined NLA type : 'array'.**\r\n**in 'pyroute2/netlink/__init__.py', line 1741:**\r\n```\r\n         def encode(self):\r\n              fmt = '%s%i%s' % (self.fmt[:-1], len(self.value), self.fmt[-1:])\r\n             self['value'] = struct.pack(fmt, self.value)\r\n              nla_base.encode(self)\r\n```\r\n\r\n**fixed:**\r\n```\r\n         def encode(self):\r\n              fmt = '%s%i%s' % (self.fmt[:-1], len(self.value), self.fmt[-1:])\r\n             self['value'] = struct.pack(fmt, *self.value)\r\n              nla_base.encode(self)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/460", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/460/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/460/events", "html_url": "https://github.com/svinota/pyroute2/issues/460", "id": 300046420, "node_id": "MDU6SXNzdWUzMDAwNDY0MjA=", "number": 460, "title": "Exception is thrown when try change promiscuity state", "user": {"login": "lets00", "id": 5157983, "node_id": "MDQ6VXNlcjUxNTc5ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5157983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lets00", "html_url": "https://github.com/lets00", "followers_url": "https://api.github.com/users/lets00/followers", "following_url": "https://api.github.com/users/lets00/following{/other_user}", "gists_url": "https://api.github.com/users/lets00/gists{/gist_id}", "starred_url": "https://api.github.com/users/lets00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lets00/subscriptions", "organizations_url": "https://api.github.com/users/lets00/orgs", "repos_url": "https://api.github.com/users/lets00/repos", "events_url": "https://api.github.com/users/lets00/events{/privacy}", "received_events_url": "https://api.github.com/users/lets00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-25T17:55:44Z", "updated_at": "2019-03-01T12:41:34Z", "closed_at": "2019-03-01T09:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWhen I try change promiscuity state on a interface, a Commit Exception is thrown:\r\n```python\r\n>>> import pyroute2\r\n>>> ipdb = pyroute2.IPDB()\r\n>>> ipdb.interfaces['wlp2s0'].set_promiscuity(1).commit()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/pyroute2/ipdb/interfaces.py\", line 1043, in commit\r\n    raise error\r\npyroute2.ipdb.exceptions.CommitException: target promiscuity is not set\r\n```\r\nThe code above is running using su user. But, when I use iproute2 tool CLI (ip), the operation is realized:\r\n```\r\n# netstat -i\r\nTabela de Interfaces do Kernel\r\nIface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\r\nenp1s0    1200        0      0      0 0             0      0      0      0 BMU\r\nlo       65536       26      0      0 0            26      0      0      0 LRU\r\nveth0     1500       28      0      0 0            39      0      0      0 BMPRU\r\nveth1     1500       39      0      0 0            28      0      0      0 BMRU\r\nwlp2s0    1500   178145      0      0 0         77687      0      0      0 BMRU\r\n# ip l set wlp2s0 promisc on\r\n# netstat -i\r\nTabela de Interfaces do Kernel\r\nIface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\r\nenp1s0    1200        0      0      0 0             0      0      0      0 BMU\r\nlo       65536       26      0      0 0            26      0      0      0 LRU\r\nveth0     1500       28      0      0 0            39      0      0      0 BMPRU\r\nveth1     1500       39      0      0 0            28      0      0      0 BMRU\r\nwlp2s0    1500   178190      0      0 0         77693      0      0      0 BMPRU\r\n```\r\nIn wlp2s0, after I run ip command, It appears the letter P, Indicates that promisc mode is enabled.\r\n\r\n**OS usage**: Fedora 27 Workstation\r\n**Kernel version**: 4.15.3-300.fc27.x86_64\r\n**pyroute2 version**: pyroute2==0.4.21", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/458", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/458/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/458/events", "html_url": "https://github.com/svinota/pyroute2/issues/458", "id": 298105688, "node_id": "MDU6SXNzdWUyOTgxMDU2ODg=", "number": 458, "title": "IProute.route(\"add\", \"fc00::1\", oif=1) goes to default IP if no prefix len", "user": {"login": "Zashas", "id": 1949543, "node_id": "MDQ6VXNlcjE5NDk1NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1949543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zashas", "html_url": "https://github.com/Zashas", "followers_url": "https://api.github.com/users/Zashas/followers", "following_url": "https://api.github.com/users/Zashas/following{/other_user}", "gists_url": "https://api.github.com/users/Zashas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zashas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zashas/subscriptions", "organizations_url": "https://api.github.com/users/Zashas/orgs", "repos_url": "https://api.github.com/users/Zashas/repos", "events_url": "https://api.github.com/users/Zashas/events{/privacy}", "received_events_url": "https://api.github.com/users/Zashas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-18T18:21:15Z", "updated_at": "2018-06-12T10:55:21Z", "closed_at": "2018-06-12T10:55:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI spotted the following bug with pyroute2 from master : \r\n\r\n```py\r\nipr = IPRoute()\r\nipr.route('add', dst=\"fc00::1/16\", oif=1)\r\nipr.route('add', dst=\"fc00::2\", oif=1)\r\n```\r\nwill produce from `ip -6 route` : \r\n```\r\nunreachable fc00::/16 dev lo proto static metric 1024 linkdown error -101 pref medium\r\nunreachable default dev lo proto static metric 1024 linkdown error -101 pref medium\r\n```\r\n\r\nThe first line works fine. The second bugs, as it changes the IPv6 address \"fc00::2\" to default. Quite an insidious bug, took me some time to track it down :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/454", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/454/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/454/events", "html_url": "https://github.com/svinota/pyroute2/issues/454", "id": 295082998, "node_id": "MDU6SXNzdWUyOTUwODI5OTg=", "number": 454, "title": "Interface address is case-sensitive, creation fails on uppercase letters", "user": {"login": "eplodn", "id": 32124903, "node_id": "MDQ6VXNlcjMyMTI0OTAz", "avatar_url": "https://avatars0.githubusercontent.com/u/32124903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eplodn", "html_url": "https://github.com/eplodn", "followers_url": "https://api.github.com/users/eplodn/followers", "following_url": "https://api.github.com/users/eplodn/following{/other_user}", "gists_url": "https://api.github.com/users/eplodn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eplodn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eplodn/subscriptions", "organizations_url": "https://api.github.com/users/eplodn/orgs", "repos_url": "https://api.github.com/users/eplodn/repos", "events_url": "https://api.github.com/users/eplodn/events{/privacy}", "received_events_url": "https://api.github.com/users/eplodn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-07T10:26:25Z", "updated_at": "2018-04-11T10:21:28Z", "closed_at": "2018-04-11T10:21:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to create two dummy interfaces with the same MAC, once in uppercase and once in lowercase:\r\n\r\nFirst:\r\n```\r\nIn [3]: ipdb = IPDB()\r\nIn [4]: interface = ipdb.create(ifname=\"test0\", kind=\"dummy\")\r\nIn [5]: interface.address = 'AA:BB:CC:DD:EE:FF'\r\nIn [6]: interface.review()\r\nOut[6]:\r\n{'+ipaddr': (),\r\n '+ports': (),\r\n '+vlans': (),\r\n 'address': 'AA:BB:CC:DD:EE:FF',\r\n 'ifname': 'test0',\r\n 'index': 0,\r\n 'ipdb_priority': 0,\r\n 'ipdb_scope': 'create',\r\n 'kind': 'dummy'}\r\n\r\nIn [7]: interface.commit()\r\n---------------------------------------------------------------------------\r\nCommitException                           Traceback (most recent call last)\r\n<ipython-input-7-6dfaf594f192> in <module>()\r\n----> 1 interface.commit()\r\n\r\n/usr/local/lib/python3.6/dist-packages/pyroute2/ipdb/interfaces.py in commit(self, tid, transaction, commit_phase, commit_mask, newif)\r\n   1064         if error is not None:\r\n   1065             error.debug = debug\r\n-> 1066             raise error\r\n   1067\r\n   1068         # restore dependent routes for successful rollback\r\n\r\n/usr/local/lib/python3.6/dist-packages/pyroute2/ipdb/interfaces.py in commit(self, tid, transaction, commit_phase, commit_mask, newif)\r\n    844\r\n    845             if (wait_all) and (not transaction.partial):\r\n--> 846                 transaction.wait_all_targets()\r\n    847\r\n    848             # 8<---------------------------------------------\r\n\r\n/usr/local/lib/python3.6/dist-packages/pyroute2/ipdb/transactional.py in wait_all_targets(self)\r\n    505                 target.wait(SYNC_TIMEOUT)\r\n    506                 if not target.is_set():\r\n--> 507                     raise CommitException('target %s is not set' % key)\r\n    508\r\n    509     def wait_target(self, key, timeout=SYNC_TIMEOUT):\r\n\r\nCommitException: target address is not set\r\n```\r\nSecond:\r\n```\r\nIn [8]: interface = ipdb.create(ifname=\"test1\", kind=\"dummy\")\r\nIn [9]: interface.address = 'aa:bb:cc:dd:ee:ff'\r\nIn [10]: interface.review()\r\nOut[10]:\r\n{'+ipaddr': (),\r\n '+ports': (),\r\n '+vlans': (),\r\n 'address': 'aa:bb:cc:dd:ee:ff',\r\n 'ifname': 'test1',\r\n 'index': 0,\r\n 'ipdb_priority': 0,\r\n 'ipdb_scope': 'create',\r\n 'kind': 'dummy'}\r\nIn [11]: interface.commit()\r\nOut[11]: {'address': 'aa:bb:cc:dd:ee:ff', 'broadcast': 'ff:ff:ff:ff:ff:ff', 'ifname': 'test1', 'mtu': 1500, 'qdisc': 'noop', 'txqlen': 1000, 'operstate': 'DOWN', 'linkmode': 0, 'group': 0, 'promiscuity': 0, 'num_tx_queues': 1, 'num_rx_queues': 1, 'carrier': 1, 'carrier_changes': 0, 'proto_down': 0, 'index': 10, 'flags': 130, 'kind': 'dummy', 'ipdb_scope': 'system', 'ipdb_priority': 0, 'vlans': (), 'ipaddr': (), 'ports': (), 'family': 0, 'ifi_type': 1, 'neighbours': ()}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/452", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/452/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/452/events", "html_url": "https://github.com/svinota/pyroute2/issues/452", "id": 294867373, "node_id": "MDU6SXNzdWUyOTQ4NjczNzM=", "number": 452, "title": "Unable to move sublvan into new netns", "user": {"login": "twabulldogg", "id": 2362575, "node_id": "MDQ6VXNlcjIzNjI1NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2362575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twabulldogg", "html_url": "https://github.com/twabulldogg", "followers_url": "https://api.github.com/users/twabulldogg/followers", "following_url": "https://api.github.com/users/twabulldogg/following{/other_user}", "gists_url": "https://api.github.com/users/twabulldogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/twabulldogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twabulldogg/subscriptions", "organizations_url": "https://api.github.com/users/twabulldogg/orgs", "repos_url": "https://api.github.com/users/twabulldogg/repos", "events_url": "https://api.github.com/users/twabulldogg/events{/privacy}", "received_events_url": "https://api.github.com/users/twabulldogg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-06T18:35:11Z", "updated_at": "2018-02-07T13:51:19Z", "closed_at": "2018-02-07T13:51:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to create a VLAN sub-interface with an associated macvlan passthru interface to move into a new netns using pyroute2.  I am able to successfully create both the vlan and sub-interface, but I am only able to move the VLAN interface into the new netns.  Here is example code:\r\n\r\n```python\r\ndef createVLAN():                                                      \r\n    extra_create_params = {}                                           \r\n    extra_create_params['macvlan_mode'] = 'passthru'                   \r\n    ipdb = IPDB()                                                      \r\n    parent_if = ipdb.create(ifname=\"eth1.3700\",                        \r\n                           kind='vlan',                                \r\n                           link=ipdb.interfaces.get(\"eth1\"),           \r\n                           vlan_protocol=0x8100,#0x88a8                \r\n                           vlan_id=3700                                \r\n                           )                                           \r\n    parent_if.up().commit()                                            \r\n    child_if = ipdb.create(ifname=\"host_eth1.3700\",                    \r\n                           kind='macvlan',                             \r\n                           link=\"eth1.3700\",                           \r\n                           **extra_create_params                       \r\n                           )                                           \r\n    nl=NetNS(\"test\")                                                   \r\n    child_if.net_ns_fd = \"test\"                                        \r\n    child_if.up().commit()                                             \r\n    nl.release()                                                       \r\n    ipdb.release()                                                     \r\n                                                                       \r\n                                                                       \r\ndef createSubVLAN():                                                   \r\n    extra_create_params = {}                                           \r\n    extra_create_params['macvlan_mode'] = 'passthru'                   \r\n    ipdb = IPDB()                                                      \r\n    parent_if = ipdb.create(ifname=\"eth1.3700.8\",                      \r\n                           kind='vlan',                                \r\n                           link=ipdb.interfaces.get(\"eth1.3700\"),      \r\n                           vlan_protocol=0x8100,                       \r\n                           vlan_id=8                                   \r\n                           )                                           \r\n    parent_if.up().commit()                                            \r\n                                                                       \r\n    child_if = ipdb.create(ifname=\"host_eth1.3700.8\",                  \r\n                           kind='macvlan',                             \r\n                           link=\"eth1.3700.8\",                         \r\n                           **extra_create_params                       \r\n                           )                                                    \r\n    child_if.net_ns_fd = \"test\"                                        \r\n    child_if.up().commit()                                             \r\n                                                                       \r\n                                                                       \r\nif __name__ == \"__main__\":                                             \r\n    createVLAN()                                                       \r\n    createSubVLAN() \r\n```\r\n\r\nThe results of the script are:\r\n```\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 108, in <module>\r\n    createSubVLAN()\r\n  File \"./test.py\", line 103, in createSubVLAN\r\n    child_if.up().commit()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/ipdb/interfaces.py\", line 572, in commit\r\n    self.nl.link('add', **request)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/iproute.py\", line 1310, in link\r\n    msg_flags=msg_flags)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 804, in nlm_request\r\n    return do_try()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 783, in do_try\r\n    callback=callback)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyroute2/netlink/nlsocket.py\", line 648, in get\r\n    raise msg['header']['error']\r\npyroute2.netlink.exceptions.NetlinkError: (34, 'Numerical result out of range')\r\n```\r\n\r\nAm I missing something when moving the VLAN sub-interface into the new netns that is different from the VLAN interface?  \r\n\r\nI tried with 0x8100 and 0x88a8 as the VLAN protocol and double checked the creation of the sub-interface from issue #361 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/451", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/451/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/451/events", "html_url": "https://github.com/svinota/pyroute2/issues/451", "id": 293172876, "node_id": "MDU6SXNzdWUyOTMxNzI4NzY=", "number": 451, "title": "Unable to get whole v4 and v6 routes at once.", "user": {"login": "RiccardoManfrin", "id": 3090891, "node_id": "MDQ6VXNlcjMwOTA4OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3090891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RiccardoManfrin", "html_url": "https://github.com/RiccardoManfrin", "followers_url": "https://api.github.com/users/RiccardoManfrin/followers", "following_url": "https://api.github.com/users/RiccardoManfrin/following{/other_user}", "gists_url": "https://api.github.com/users/RiccardoManfrin/gists{/gist_id}", "starred_url": "https://api.github.com/users/RiccardoManfrin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RiccardoManfrin/subscriptions", "organizations_url": "https://api.github.com/users/RiccardoManfrin/orgs", "repos_url": "https://api.github.com/users/RiccardoManfrin/repos", "events_url": "https://api.github.com/users/RiccardoManfrin/events{/privacy}", "received_events_url": "https://api.github.com/users/RiccardoManfrin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42471876, "node_id": "MDU6TGFiZWw0MjQ3MTg3Ng==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-31T14:15:40Z", "updated_at": "2018-05-09T13:39:51Z", "closed_at": "2018-05-09T13:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> [x.get_attr('RTA_DST') for x in ip.get_routes(family=socket.AF_INET)]\r\n['10.120.0.0']\r\n>>> [x.get_attr('RTA_DST') for x in ip.get_routes(family=socket.AF_INET6)]\r\n[None, 'fe81::']\r\n>>> [x.get_attr('RTA_DST') for x in ip.get_routes()]\r\n['10.120.0.0']\r\n```\r\n\r\nReading from doc here http://docs.pyroute2.org/iproute.html \r\n```\r\nExample:\r\n\r\nip.get_routes()  # get all the routes for all families\r\nip.get_routes(family=AF_INET6)  # get only IPv6 routes\r\nip.get_routes(table=254)  # get routes from 254 table\r\n```\r\nI would expect the 3rd call (without parameters) to return the union of the former two.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/450", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/450/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/450/events", "html_url": "https://github.com/svinota/pyroute2/issues/450", "id": 293120325, "node_id": "MDU6SXNzdWUyOTMxMjAzMjU=", "number": 450, "title": "failed to add IPv6 address (veth", "user": {"login": "landgraf", "id": 266706, "node_id": "MDQ6VXNlcjI2NjcwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/266706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/landgraf", "html_url": "https://github.com/landgraf", "followers_url": "https://api.github.com/users/landgraf/followers", "following_url": "https://api.github.com/users/landgraf/following{/other_user}", "gists_url": "https://api.github.com/users/landgraf/gists{/gist_id}", "starred_url": "https://api.github.com/users/landgraf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/landgraf/subscriptions", "organizations_url": "https://api.github.com/users/landgraf/orgs", "repos_url": "https://api.github.com/users/landgraf/repos", "events_url": "https://api.github.com/users/landgraf/events{/privacy}", "received_events_url": "https://api.github.com/users/landgraf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 35002345, "node_id": "MDU6TGFiZWwzNTAwMjM0NQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/not%20a%20bug", "name": "not a bug", "color": "e6e6e6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-31T11:16:29Z", "updated_at": "2018-06-12T10:58:21Z", "closed_at": "2018-06-12T10:58:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Haven't checked with newest version (if any) but python2-pyroute2-0.4.13-1.fc26.noarch gives me the error.\r\n\r\nCode:\r\n```\r\nfrom pyroute2 import IPDB, NetNS\r\n\r\ndb = IPDB(nl = NetNS(\"test\"))\r\n\r\ndb.create(ifname=\"veth1\", kind='veth', peer=\"veth2\").commit()\r\n\r\nwith db.interfaces.veth1 as iface:\r\n    iface.add_ip(\"2001:DB8::2:2/64\")\r\n    iface.up()\r\n```\r\nError:\r\n\r\n> Traceback (most recent call last):\r\n>   File \"./repro.py\", line 11, in <module>\r\n>     iface.up()\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/ipdb/transactional.py\", line 194, in __exit__\r\n>     self.commit()\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/ipdb/interface.py\", line 925, in commit\r\n>     raise error\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/ipdb/interface.py\", line 803, in commit\r\n>     **kwarg if kwarg else {})\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/ipdb/interface.py\", line 463, in _run\r\n>     raise error\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/ipdb/interface.py\", line 458, in _run\r\n>     return cmd(*argv, **kwarg)\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/iproute.py\", line 1363, in addr\r\n>     terminate=lambda x: x['header']['type'] ==\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/netlink/nlsocket.py\", line 805, in nlm_request\r\n>     return do_try()\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/netlink/nlsocket.py\", line 784, in do_try\r\n>     callback=callback)\r\n>   File \"/usr/lib/python3.6/site-packages/pyroute2/netlink/nlsocket.py\", line 649, in get\r\n>     raise msg['header']['error']\r\n> pyroute2.netlink.exceptions.NetlinkError: (17, 'File exists')\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/448", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/448/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/448/events", "html_url": "https://github.com/svinota/pyroute2/issues/448", "id": 290533904, "node_id": "MDU6SXNzdWUyOTA1MzM5MDQ=", "number": 448, "title": "setns leaks FDs", "user": {"login": "itdaniher", "id": 22683, "node_id": "MDQ6VXNlcjIyNjgz", "avatar_url": "https://avatars2.githubusercontent.com/u/22683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itdaniher", "html_url": "https://github.com/itdaniher", "followers_url": "https://api.github.com/users/itdaniher/followers", "following_url": "https://api.github.com/users/itdaniher/following{/other_user}", "gists_url": "https://api.github.com/users/itdaniher/gists{/gist_id}", "starred_url": "https://api.github.com/users/itdaniher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itdaniher/subscriptions", "organizations_url": "https://api.github.com/users/itdaniher/orgs", "repos_url": "https://api.github.com/users/itdaniher/repos", "events_url": "https://api.github.com/users/itdaniher/events{/privacy}", "received_events_url": "https://api.github.com/users/itdaniher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-22T16:42:44Z", "updated_at": "2018-05-16T08:16:18Z", "closed_at": "2018-05-16T08:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "minimal test script: https://gist.github.com/itdaniher/5308c0905ed76189381861964ac974aa\r\n\r\nprints:\r\n\r\n``` python\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 7, in <module>\r\n  File \"/home/username/.virtualenvs/venv/lib/python3.5/site-packages/pyroute2/netns/__init__.py\", line 225, in setns\r\n  File \"/home/username/.virtualenvs/venv/lib/python3.5/site-packages/pyroute2/netns/__init__.py\", line 132, in listnetns\r\nOSError: [Errno 24] Too many open files: '/proc/1/ns'\r\n1021\r\n```\r\n\r\nexpected result: no limit to number of times pyroute2.netns.setns can be called with the same path.\r\n\r\nactual result: each invocation of setns with a string creates an FD which is not cleaned, limiting the number of setns calls to the number of available FDs for the process (1024 or so on most systems)\r\n\r\npotential solution: cache FDs in a mapping of {path: fd_int} in pyroute2.netns, using existant FDs for future calls to setns if possible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/447", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/447/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/447/events", "html_url": "https://github.com/svinota/pyroute2/issues/447", "id": 286591228, "node_id": "MDU6SXNzdWUyODY1OTEyMjg=", "number": 447, "title": ":functionality status: socket stats", "user": {"login": "cherusk", "id": 10729954, "node_id": "MDQ6VXNlcjEwNzI5OTU0", "avatar_url": "https://avatars3.githubusercontent.com/u/10729954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherusk", "html_url": "https://github.com/cherusk", "followers_url": "https://api.github.com/users/cherusk/followers", "following_url": "https://api.github.com/users/cherusk/following{/other_user}", "gists_url": "https://api.github.com/users/cherusk/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherusk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherusk/subscriptions", "organizations_url": "https://api.github.com/users/cherusk/orgs", "repos_url": "https://api.github.com/users/cherusk/repos", "events_url": "https://api.github.com/users/cherusk/events{/privacy}", "received_events_url": "https://api.github.com/users/cherusk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002344, "node_id": "MDU6TGFiZWwzNTAwMjM0NA==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fr", "name": "fr", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-07T19:08:39Z", "updated_at": "2018-03-03T16:09:11Z", "closed_at": "2018-03-03T16:09:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Any specific plans to progress on completing the socket stats core? Only rudiments perceivable so far.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/444", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/444/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/444/events", "html_url": "https://github.com/svinota/pyroute2/issues/444", "id": 282305191, "node_id": "MDU6SXNzdWUyODIzMDUxOTE=", "number": 444, "title": "IPRoute.get() can deadlock indefinitely due to internal exceptions", "user": {"login": "hetmankp", "id": 728670, "node_id": "MDQ6VXNlcjcyODY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/728670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetmankp", "html_url": "https://github.com/hetmankp", "followers_url": "https://api.github.com/users/hetmankp/followers", "following_url": "https://api.github.com/users/hetmankp/following{/other_user}", "gists_url": "https://api.github.com/users/hetmankp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetmankp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetmankp/subscriptions", "organizations_url": "https://api.github.com/users/hetmankp/orgs", "repos_url": "https://api.github.com/users/hetmankp/repos", "events_url": "https://api.github.com/users/hetmankp/events{/privacy}", "received_events_url": "https://api.github.com/users/hetmankp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-15T02:55:15Z", "updated_at": "2018-05-15T21:22:09Z", "closed_at": "2018-05-15T21:22:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the method defined in netlink.nlsocket.NetlinkMixin.get() does not cleanly release locks when an exception is encountered internally (for example, an exception when calling recv() on the socket, etc). The result is that an IPRoute instance can enter a locked up state in which is it unable to receive any more messages via the get() method.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/437", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/437/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/437/events", "html_url": "https://github.com/svinota/pyroute2/issues/437", "id": 272222012, "node_id": "MDU6SXNzdWUyNzIyMjIwMTI=", "number": 437, "title": "Cannot initialize IPRoute: Address family not supported by protocol family", "user": {"login": "ianfiske", "id": 135570, "node_id": "MDQ6VXNlcjEzNTU3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/135570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianfiske", "html_url": "https://github.com/ianfiske", "followers_url": "https://api.github.com/users/ianfiske/followers", "following_url": "https://api.github.com/users/ianfiske/following{/other_user}", "gists_url": "https://api.github.com/users/ianfiske/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianfiske/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianfiske/subscriptions", "organizations_url": "https://api.github.com/users/ianfiske/orgs", "repos_url": "https://api.github.com/users/ianfiske/repos", "events_url": "https://api.github.com/users/ianfiske/events{/privacy}", "received_events_url": "https://api.github.com/users/ianfiske/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-08T14:40:16Z", "updated_at": "2017-11-09T14:41:03Z", "closed_at": "2017-11-09T14:40:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to use pyroute2, starting with the following simple lines, I get an error:\r\n\r\n```\r\nfrom pyroute2 import IPRoute\r\nip = IPRoute()\r\n```\r\ngives\r\n```\r\nFile \"/Users/ifiske/PycharmProjects/routaround/routaround.py\", line 2, in <module>\r\n    ip = IPRoute()\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/netlink/rtnl/iprsocket.py\", line 26, in __init__\r\n    all_ns=all_ns)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 341, in __init__\r\n    self.post_init()\r\n  File \"/usr/local/lib/python2.7/site-packages/pyroute2/netlink/nlsocket.py\", line 874, in post_init\r\n    self._fileno)\r\n  File \"/usr/local/Cellar/python/2.7.14/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py\", line 191, in __init__\r\n    _sock = _realsocket(family, type, proto)\r\nsocket.error: [Errno 47] Address family not supported by protocol family\r\n```\r\nI get the same error with both Python 2.7.14 and 3.6.2.  I am using 0.4.21 on Mac OS X 10.12.6.\r\n\r\nPlacing a debugger in the code gives these additional details for the failed 'address family' and 'protocol family':\r\n\r\n- proto: 0\r\n- family: 16\r\n\r\ninside of `socket.__init__()`.\r\n\r\nPlease let me know if I can provide any additional info to help debug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/436", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/436/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/436/events", "html_url": "https://github.com/svinota/pyroute2/issues/436", "id": 271533717, "node_id": "MDU6SXNzdWUyNzE1MzM3MTc=", "number": 436, "title": "IPDB and multipath routes", "user": {"login": "crosser", "id": 1404921, "node_id": "MDQ6VXNlcjE0MDQ5MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1404921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crosser", "html_url": "https://github.com/crosser", "followers_url": "https://api.github.com/users/crosser/followers", "following_url": "https://api.github.com/users/crosser/following{/other_user}", "gists_url": "https://api.github.com/users/crosser/gists{/gist_id}", "starred_url": "https://api.github.com/users/crosser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crosser/subscriptions", "organizations_url": "https://api.github.com/users/crosser/orgs", "repos_url": "https://api.github.com/users/crosser/repos", "events_url": "https://api.github.com/users/crosser/events{/privacy}", "received_events_url": "https://api.github.com/users/crosser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-06T16:21:23Z", "updated_at": "2018-05-15T15:55:21Z", "closed_at": "2018-05-15T15:55:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Checked with todays's master.\r\n\r\nWhen you create a multipath route:\r\n```\r\n# ip -6 route add ::ffff:9.8.7.6/128 table 64 nexthop dev eno1 weight 1 nexthop dev dhcp-s weight 1\r\n```\r\nit is shown as two routes by `ip route list`:\r\n```\r\n# ip -6 route list table 64\r\n::ffff:9.8.7.6 dev eno1  metric 1024  pref medium\r\n::ffff:9.8.7.6 dev dhcp-s  metric 1024  pref medium\r\n```\r\nbut IPDB displays only one route:\r\n```\r\n>>> from pyroute2 import IPDB\r\n>>> db=IPDB()\r\n>>> for r in db.routes.tables[64]:\r\n...     print(r)\r\n... \r\n{'tos': 0, 'flags': 0, 'multipath': (), 'encap': {}, 'table': 64, 'dst_len': 128, 'pref': '00', 'proto': 3, 'ipdb_priority': 0, 'metrics': {}, 'dst': '::ffff:9.8.7.6/128', 'type': 1, 'family': 10, 'oif': 11, 'scope': 0, 'ipdb_scope': 'system', 'src_len': 0, 'priority': 1024}\r\n>>>\r\n```\r\nIf you delete one of these routes:\r\n```\r\n# ip -6 route del ::ffff:9.8.7.6/128 table 64 dev eno1\r\n```\r\nthe other one is left in the kernel:\r\n```\r\n# ip -6 route list table 64\r\n::ffff:9.8.7.6 dev dhcp-s  metric 1024  pref medium\r\n```\r\nbut IPDB thinks that there are no routes:\r\n```\r\n>>> for r in db.routes.tables[64]:\r\n...     print(r)\r\n... \r\n>>> \r\n```\r\nuntil you re-instantiate IPDB. After re-instantiation, it shows one route again. So on both occasions IPDB \"sees\" less routes than there are in the kernel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/434", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/434/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/434/events", "html_url": "https://github.com/svinota/pyroute2/issues/434", "id": 268165851, "node_id": "MDU6SXNzdWUyNjgxNjU4NTE=", "number": 434, "title": "ipdb: route `family` must be specified when `gateway` is `None`", "user": {"login": "PaulSD", "id": 74427, "node_id": "MDQ6VXNlcjc0NDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/74427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulSD", "html_url": "https://github.com/PaulSD", "followers_url": "https://api.github.com/users/PaulSD/followers", "following_url": "https://api.github.com/users/PaulSD/following{/other_user}", "gists_url": "https://api.github.com/users/PaulSD/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulSD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulSD/subscriptions", "organizations_url": "https://api.github.com/users/PaulSD/orgs", "repos_url": "https://api.github.com/users/PaulSD/repos", "events_url": "https://api.github.com/users/PaulSD/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulSD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-24T19:58:36Z", "updated_at": "2017-10-30T09:56:46Z", "closed_at": "2017-10-27T16:02:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Routes for directly-attached networks have `gateway` set to `None`.  If `family` is not specified when adding/updating a directly-attached IPv4 route, then an exception is thrown by https://github.com/svinota/pyroute2/blob/master/pyroute2/ipdb/routes.py#L998 because `.find(':')` cannot be called on None.  I think this needs to be changed to something like:\r\n            if (spec.get('dst', '').find(':') > -1) or \\\r\n                    (spec.get('gateway', '') is not None and spec.get('gateway', '').find(':') > -1):\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/433", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/433/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/433/events", "html_url": "https://github.com/svinota/pyroute2/issues/433", "id": 267984838, "node_id": "MDU6SXNzdWUyNjc5ODQ4Mzg=", "number": 433, "title": "Thread crashes with LWT bpf routes", "user": {"login": "Zashas", "id": 1949543, "node_id": "MDQ6VXNlcjE5NDk1NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1949543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zashas", "html_url": "https://github.com/Zashas", "followers_url": "https://api.github.com/users/Zashas/followers", "following_url": "https://api.github.com/users/Zashas/following{/other_user}", "gists_url": "https://api.github.com/users/Zashas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zashas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zashas/subscriptions", "organizations_url": "https://api.github.com/users/Zashas/orgs", "repos_url": "https://api.github.com/users/Zashas/repos", "events_url": "https://api.github.com/users/Zashas/events{/privacy}", "received_events_url": "https://api.github.com/users/Zashas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-24T10:50:05Z", "updated_at": "2017-10-31T14:55:48Z", "closed_at": "2017-10-30T10:04:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI spotted the following bug in pyroute2 after having installed a LWT bpf route : \r\n\r\n`sudo ip -6 route add fc00::/16 encap bpf out obj acl_bpf.o sec lwt_acl dev lo`\r\n\r\n(acl_bpf.o can be compiled or downloaded from here https://github.com/Zashas/bpf_stuff/tree/master/lwt_acl\r\n\r\n```\r\n$ python\r\nPython 2.7.14 (default, Sep 20 2017, 01:25:59) \r\n[GCC 7.2.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyroute2\r\n>>> ip = pyroute2.IPDB()\r\n>>> ip.routes\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/math/.local/share/virtualenvs/segway-yeSBDavQ/lib/python2.7/site-packages/pyroute2/ipdb/main.py\", line 900, in __getattribute__\r\n    obj._register()\r\n  File \"/home/math/.local/share/virtualenvs/segway-yeSBDavQ/lib/python2.7/site-packages/pyroute2/ipdb/routes.py\", line 997, in _register\r\n    self.load_netlink(msg)\r\n  File \"/home/math/.local/share/virtualenvs/segway-yeSBDavQ/lib/python2.7/site-packages/pyroute2/ipdb/routes.py\", line 1095, in load_netlink\r\n    key = self.tables[table].load(msg)\r\n  File \"/home/math/.local/share/virtualenvs/segway-yeSBDavQ/lib/python2.7/site-packages/pyroute2/ipdb/routes.py\", line 920, in load\r\n    self[key] = msg\r\n  File \"/home/math/.local/share/virtualenvs/segway-yeSBDavQ/lib/python2.7/site-packages/pyroute2/ipdb/routes.py\", line 932, in __setitem__\r\n    record['route'].load_netlink(value)\r\n  File \"/home/math/.local/share/virtualenvs/segway-yeSBDavQ/lib/python2.7/site-packages/pyroute2/ipdb/routes.py\", line 307, in load_netlink\r\n    for l in value.get_attr('MPLS_IPTUNNEL_DST'):\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\nI'm running kernel 4.13.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/svinota/pyroute2/issues/432", "repository_url": "https://api.github.com/repos/svinota/pyroute2", "labels_url": "https://api.github.com/repos/svinota/pyroute2/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/svinota/pyroute2/issues/432/comments", "events_url": "https://api.github.com/repos/svinota/pyroute2/issues/432/events", "html_url": "https://github.com/svinota/pyroute2/issues/432", "id": 267893113, "node_id": "MDU6SXNzdWUyNjc4OTMxMTM=", "number": 432, "title": "ipdb iterating on mutable self.tables.values()", "user": {"login": "itdaniher", "id": 22683, "node_id": "MDQ6VXNlcjIyNjgz", "avatar_url": "https://avatars2.githubusercontent.com/u/22683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itdaniher", "html_url": "https://github.com/itdaniher", "followers_url": "https://api.github.com/users/itdaniher/followers", "following_url": "https://api.github.com/users/itdaniher/following{/other_user}", "gists_url": "https://api.github.com/users/itdaniher/gists{/gist_id}", "starred_url": "https://api.github.com/users/itdaniher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itdaniher/subscriptions", "organizations_url": "https://api.github.com/users/itdaniher/orgs", "repos_url": "https://api.github.com/users/itdaniher/repos", "events_url": "https://api.github.com/users/itdaniher/events{/privacy}", "received_events_url": "https://api.github.com/users/itdaniher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 35002342, "node_id": "MDU6TGFiZWwzNTAwMjM0Mg==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 42487849, "node_id": "MDU6TGFiZWw0MjQ4Nzg0OQ==", "url": "https://api.github.com/repos/svinota/pyroute2/labels/fixed", "name": "fixed", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-24T04:24:27Z", "updated_at": "2017-10-26T15:19:56Z", "closed_at": "2017-10-26T15:19:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 38, in <module>\r\n    ipdb_ns.interfaces[wan].add_ip('192.168.1.3/24').up().commit()\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/interfaces.py\", line 653, in commit\r\n    for record in self.ipdb.routes.filter({'oif': self['index']}):\r\n  File \"/usr/local/lib/python3.5/dist-packages/pyroute2/ipdb/routes.py\", line 1184, in filter\r\n    for table in self.tables.values():\r\nRuntimeError: dictionary changed size during iteration\r\n```\r\n\r\npyroute2 0.4.21 / py3.5.2 / ubuntu 16.04\r\n\r\nupgraded to git master and haven't reproduced yet, but behavior is somewhat stateful and I don't have a concise test case asof yet.\r\n\r\ncheers!", "performed_via_github_app": null, "score": 1.0}]}