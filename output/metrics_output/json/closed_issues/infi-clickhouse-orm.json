{"total_count": 80, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/151", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/151/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/151/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/151", "id": 655274231, "node_id": "MDU6SXNzdWU2NTUyNzQyMzE=", "number": 151, "title": "Does this ORM have a support for External Dictionaries?", "user": {"login": "tirsky", "id": 3495267, "node_id": "MDQ6VXNlcjM0OTUyNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3495267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirsky", "html_url": "https://github.com/tirsky", "followers_url": "https://api.github.com/users/tirsky/followers", "following_url": "https://api.github.com/users/tirsky/following{/other_user}", "gists_url": "https://api.github.com/users/tirsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirsky/subscriptions", "organizations_url": "https://api.github.com/users/tirsky/orgs", "repos_url": "https://api.github.com/users/tirsky/repos", "events_url": "https://api.github.com/users/tirsky/events{/privacy}", "received_events_url": "https://api.github.com/users/tirsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-11T20:30:08Z", "updated_at": "2020-07-16T04:26:32Z", "closed_at": "2020-07-16T04:26:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to do requests, filtering, aggregating with external dict.\r\n\r\nraw SQL:\r\n\r\n`        select dictGetString('schema.table_in_postgres', 'field_in_postgres', tuple(id_in_clickhouse))`\r\n\r\nLike this:\r\n\r\n`Person.objects.filter(F.isIn(Person.dict_field = 1)) `or queryset `qs = qs.aggregate(Person.dict_field1, Person.dict_field2, ...)`\r\n\r\nNow I'm using a simple hack:\r\n\r\n1. Create \r\n\r\n```\r\nFakeFieldClass(Model):\r\n        dict_field = model.StringField()\r\n```\r\n\r\n2. Then I create a model class `Person(FakeFieldClass)`\r\n\r\n3. And do it like this `queryset.filter(Person.dict_field)`\r\n\r\n4. Then convert it to raw sql and replace dict_field with `select dictGetString('schema.table_in_postgres', 'field_in_postgres', tuple(id_in_clickhouse))` in python\r\n\r\n5. Then do `data = clickhouse_db.select(query, Person)`\r\n\r\nProfit11!\r\n\r\nP.S. Of course I can do replacing in class, but for me `.replace` is better in code", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/149", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/149/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/149/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/149", "id": 641756803, "node_id": "MDU6SXNzdWU2NDE3NTY4MDM=", "number": 149, "title": "How can I use nested?", "user": {"login": "vladimirteddy", "id": 29521357, "node_id": "MDQ6VXNlcjI5NTIxMzU3", "avatar_url": "https://avatars0.githubusercontent.com/u/29521357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimirteddy", "html_url": "https://github.com/vladimirteddy", "followers_url": "https://api.github.com/users/vladimirteddy/followers", "following_url": "https://api.github.com/users/vladimirteddy/following{/other_user}", "gists_url": "https://api.github.com/users/vladimirteddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimirteddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimirteddy/subscriptions", "organizations_url": "https://api.github.com/users/vladimirteddy/orgs", "repos_url": "https://api.github.com/users/vladimirteddy/repos", "events_url": "https://api.github.com/users/vladimirteddy/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimirteddy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-19T07:07:29Z", "updated_at": "2020-06-25T04:57:16Z", "closed_at": "2020-06-25T04:57:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Doc in ClickHouse: https://clickhouse.tech/docs/en/sql-reference/data-types/nested-data-structures/nested/\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/146", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/146/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/146/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/146", "id": 628291716, "node_id": "MDU6SXNzdWU2MjgyOTE3MTY=", "number": 146, "title": "Lowercase of name table in objects_in.", "user": {"login": "vladimirteddy", "id": 29521357, "node_id": "MDQ6VXNlcjI5NTIxMzU3", "avatar_url": "https://avatars0.githubusercontent.com/u/29521357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladimirteddy", "html_url": "https://github.com/vladimirteddy", "followers_url": "https://api.github.com/users/vladimirteddy/followers", "following_url": "https://api.github.com/users/vladimirteddy/following{/other_user}", "gists_url": "https://api.github.com/users/vladimirteddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladimirteddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladimirteddy/subscriptions", "organizations_url": "https://api.github.com/users/vladimirteddy/orgs", "repos_url": "https://api.github.com/users/vladimirteddy/repos", "events_url": "https://api.github.com/users/vladimirteddy/events{/privacy}", "received_events_url": "https://api.github.com/users/vladimirteddy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-01T09:33:46Z", "updated_at": "2020-06-02T15:18:22Z", "closed_at": "2020-06-02T15:18:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used ```qs = ThinkPad.objects_in(database)```. I ```print(qs)```, I saw my query is ```SELECT Id, Name, StockAge FROM thinkpad```. How can I use \"ThinkPad\" not \"thinkpad\"? Because my table in database is \"ThinkPad\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/145", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/145/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/145/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/145", "id": 622318604, "node_id": "MDU6SXNzdWU2MjIzMTg2MDQ=", "number": 145, "title": "DateTime64 type support", "user": {"login": "druidfund", "id": 48118383, "node_id": "MDQ6VXNlcjQ4MTE4Mzgz", "avatar_url": "https://avatars2.githubusercontent.com/u/48118383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/druidfund", "html_url": "https://github.com/druidfund", "followers_url": "https://api.github.com/users/druidfund/followers", "following_url": "https://api.github.com/users/druidfund/following{/other_user}", "gists_url": "https://api.github.com/users/druidfund/gists{/gist_id}", "starred_url": "https://api.github.com/users/druidfund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/druidfund/subscriptions", "organizations_url": "https://api.github.com/users/druidfund/orgs", "repos_url": "https://api.github.com/users/druidfund/repos", "events_url": "https://api.github.com/users/druidfund/events{/privacy}", "received_events_url": "https://api.github.com/users/druidfund/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-21T07:49:58Z", "updated_at": "2020-06-23T08:23:40Z", "closed_at": "2020-06-23T08:23:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Clickhouse support Datetime64 type, but clickhouse-orm do not support. do you consider to add support of this type to clickhouse-orm? thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/144", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/144/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/144/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/144", "id": 617536053, "node_id": "MDU6SXNzdWU2MTc1MzYwNTM=", "number": 144, "title": "Can't insert into table", "user": {"login": "snake302", "id": 1431423, "node_id": "MDQ6VXNlcjE0MzE0MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1431423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snake302", "html_url": "https://github.com/snake302", "followers_url": "https://api.github.com/users/snake302/followers", "following_url": "https://api.github.com/users/snake302/following{/other_user}", "gists_url": "https://api.github.com/users/snake302/gists{/gist_id}", "starred_url": "https://api.github.com/users/snake302/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snake302/subscriptions", "organizations_url": "https://api.github.com/users/snake302/orgs", "repos_url": "https://api.github.com/users/snake302/repos", "events_url": "https://api.github.com/users/snake302/events{/privacy}", "received_events_url": "https://api.github.com/users/snake302/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T15:16:26Z", "updated_at": "2020-06-19T04:29:06Z", "closed_at": "2020-05-13T15:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI have spend 3 hours with your library, but everything ends when I am trying to insert something into DB:\r\n\r\n> Traceback (most recent call last):\r\n  File \"/var/python/clickhouse.py\", line 90, in <module>\r\n    doubler()\r\n  File \"/var/python/clickhouse.py\", line 83, in doubler\r\n    appid])\r\n  File \"/usr/local/lib/python3.6/dist-packages/infi/clickhouse_orm/database.py\", line 199, in insert\r\n    if first_instance.is_read_only() or first_instance.is_system_model():\r\nAttributeError: 'str' object has no attribute 'is_read_only'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/139", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/139/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/139/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/139", "id": 549345266, "node_id": "MDU6SXNzdWU1NDkzNDUyNjY=", "number": 139, "title": "Maximum length of get request", "user": {"login": "qq420821129", "id": 19994358, "node_id": "MDQ6VXNlcjE5OTk0MzU4", "avatar_url": "https://avatars2.githubusercontent.com/u/19994358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qq420821129", "html_url": "https://github.com/qq420821129", "followers_url": "https://api.github.com/users/qq420821129/followers", "following_url": "https://api.github.com/users/qq420821129/following{/other_user}", "gists_url": "https://api.github.com/users/qq420821129/gists{/gist_id}", "starred_url": "https://api.github.com/users/qq420821129/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qq420821129/subscriptions", "organizations_url": "https://api.github.com/users/qq420821129/orgs", "repos_url": "https://api.github.com/users/qq420821129/repos", "events_url": "https://api.github.com/users/qq420821129/events{/privacy}", "received_events_url": "https://api.github.com/users/qq420821129/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-14T05:39:46Z", "updated_at": "2020-01-14T05:42:14Z", "closed_at": "2020-01-14T05:42:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/137", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/137/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/137/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/137", "id": 536850737, "node_id": "MDU6SXNzdWU1MzY4NTA3Mzc=", "number": 137, "title": "Reading without a Model doesn't work with LowCardinality type", "user": {"login": "coonglinh", "id": 54620784, "node_id": "MDQ6VXNlcjU0NjIwNzg0", "avatar_url": "https://avatars0.githubusercontent.com/u/54620784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coonglinh", "html_url": "https://github.com/coonglinh", "followers_url": "https://api.github.com/users/coonglinh/followers", "following_url": "https://api.github.com/users/coonglinh/following{/other_user}", "gists_url": "https://api.github.com/users/coonglinh/gists{/gist_id}", "starred_url": "https://api.github.com/users/coonglinh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coonglinh/subscriptions", "organizations_url": "https://api.github.com/users/coonglinh/orgs", "repos_url": "https://api.github.com/users/coonglinh/repos", "events_url": "https://api.github.com/users/coonglinh/events{/privacy}", "received_events_url": "https://api.github.com/users/coonglinh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-12T09:18:36Z", "updated_at": "2020-02-08T08:42:26Z", "closed_at": "2020-02-08T08:42:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a table with LowCardinality(String) type.\r\nReading without a model is not work with this datatype:\r\n\r\n- Function\r\n`db.select('SELECT my_lowcardinality_string FROM my_table')`\r\n\r\n- Error:\r\n`\r\n  File \"/home/linh/.local/lib/python3.6/site-packages/infi/clickhouse_orm/models.py\", line 94, in create_ad_hoc_field\r\n    raise NotImplementedError('No field class for %s' % db_type)\r\nNotImplementedError: No field class for LowCardinality(String)\r\n`\r\n\r\nAre you going to support it in the future ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/135", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/135/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/135/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/135", "id": 512504544, "node_id": "MDU6SXNzdWU1MTI1MDQ1NDQ=", "number": 135, "title": "Missing tags for 1.1.0 and 1.2.0 PyPI releases", "user": {"login": "Jamim", "id": 5607572, "node_id": "MDQ6VXNlcjU2MDc1NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5607572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jamim", "html_url": "https://github.com/Jamim", "followers_url": "https://api.github.com/users/Jamim/followers", "following_url": "https://api.github.com/users/Jamim/following{/other_user}", "gists_url": "https://api.github.com/users/Jamim/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jamim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jamim/subscriptions", "organizations_url": "https://api.github.com/users/Jamim/orgs", "repos_url": "https://api.github.com/users/Jamim/repos", "events_url": "https://api.github.com/users/Jamim/events{/privacy}", "received_events_url": "https://api.github.com/users/Jamim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-25T13:03:28Z", "updated_at": "2019-12-12T20:24:40Z", "closed_at": "2019-12-12T20:24:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI found that there are no tags for [1.1.0](https://pypi.org/project/infi.clickhouse_orm/1.1.0/) and [1.2.0](https://pypi.org/project/infi.clickhouse_orm/1.2.0/) releases in this repository.\r\nCould you please push missing tags to this repo?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/133", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/133/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/133/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/133", "id": 491141730, "node_id": "MDU6SXNzdWU0OTExNDE3MzA=", "number": 133, "title": "Add support for update and delete", "user": {"login": "ishirav", "id": 615559, "node_id": "MDQ6VXNlcjYxNTU1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/615559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishirav", "html_url": "https://github.com/ishirav", "followers_url": "https://api.github.com/users/ishirav/followers", "following_url": "https://api.github.com/users/ishirav/following{/other_user}", "gists_url": "https://api.github.com/users/ishirav/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishirav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishirav/subscriptions", "organizations_url": "https://api.github.com/users/ishirav/orgs", "repos_url": "https://api.github.com/users/ishirav/repos", "events_url": "https://api.github.com/users/ishirav/events{/privacy}", "received_events_url": "https://api.github.com/users/ishirav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-09T14:44:48Z", "updated_at": "2020-07-16T04:27:11Z", "closed_at": "2020-07-16T04:27:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://www.altinity.com/blog/2018/10/16/updates-in-clickhouse\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/131", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/131/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/131/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/131", "id": 474022761, "node_id": "MDU6SXNzdWU0NzQwMjI3NjE=", "number": 131, "title": "cannot get the response text from Cursor.execute(is_response=False)", "user": {"login": "JackWyj", "id": 5419620, "node_id": "MDQ6VXNlcjU0MTk2MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5419620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackWyj", "html_url": "https://github.com/JackWyj", "followers_url": "https://api.github.com/users/JackWyj/followers", "following_url": "https://api.github.com/users/JackWyj/following{/other_user}", "gists_url": "https://api.github.com/users/JackWyj/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackWyj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackWyj/subscriptions", "organizations_url": "https://api.github.com/users/JackWyj/orgs", "repos_url": "https://api.github.com/users/JackWyj/repos", "events_url": "https://api.github.com/users/JackWyj/events{/privacy}", "received_events_url": "https://api.github.com/users/JackWyj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-29T12:27:18Z", "updated_at": "2019-07-29T12:51:19Z", "closed_at": "2019-07-29T12:51:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, When i want to fetch raw response text from Cursor.execute, the text seems not saved in self._data or return directly, will there a way to handle it.\r\n\r\n```  \r\ndef execute(self, operation, parameters=None, is_response=True):\r\n        \"\"\"Prepare and execute a database operation (query or command). \"\"\"\r\n        if parameters is None or not parameters:\r\n            sql = operation\r\n        else:\r\n            sql = operation % _escaper.escape_args(parameters)\r\n        self._reset_state()\r\n\r\n        self._state = self._STATE_RUNNING\r\n        self._uuid = uuid.uuid1()\r\n\r\n        if is_response:\r\n            response = self._db.select(sql, settings={'query_id': self._uuid})\r\n            self._process_response(response)\r\n        else:\r\n            self._db.raw(sql)\r\n```\r\nShould i use `connector.Connection.raw(cmd)` to solve that, is it a better way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/127", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/127/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/127/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/127", "id": 471471727, "node_id": "MDU6SXNzdWU0NzE0NzE3Mjc=", "number": 127, "title": "Do we need something like Zookeeper to replicate table?", "user": {"login": "linrl3", "id": 16595991, "node_id": "MDQ6VXNlcjE2NTk1OTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/16595991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linrl3", "html_url": "https://github.com/linrl3", "followers_url": "https://api.github.com/users/linrl3/followers", "following_url": "https://api.github.com/users/linrl3/following{/other_user}", "gists_url": "https://api.github.com/users/linrl3/gists{/gist_id}", "starred_url": "https://api.github.com/users/linrl3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linrl3/subscriptions", "organizations_url": "https://api.github.com/users/linrl3/orgs", "repos_url": "https://api.github.com/users/linrl3/repos", "events_url": "https://api.github.com/users/linrl3/events{/privacy}", "received_events_url": "https://api.github.com/users/linrl3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-23T03:42:19Z", "updated_at": "2019-07-23T04:46:57Z", "closed_at": "2019-07-23T04:46:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just see some blogs saying that Zookeeper is required for replication, because ```<internal_replication>true</internal_replication>``` would cause problems for replication.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/126", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/126/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/126/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/126", "id": 470990000, "node_id": "MDU6SXNzdWU0NzA5OTAwMDA=", "number": 126, "title": "Do we have ReplicatedMergeTree engine?", "user": {"login": "linrl3", "id": 16595991, "node_id": "MDQ6VXNlcjE2NTk1OTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/16595991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linrl3", "html_url": "https://github.com/linrl3", "followers_url": "https://api.github.com/users/linrl3/followers", "following_url": "https://api.github.com/users/linrl3/following{/other_user}", "gists_url": "https://api.github.com/users/linrl3/gists{/gist_id}", "starred_url": "https://api.github.com/users/linrl3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linrl3/subscriptions", "organizations_url": "https://api.github.com/users/linrl3/orgs", "repos_url": "https://api.github.com/users/linrl3/repos", "events_url": "https://api.github.com/users/linrl3/events{/privacy}", "received_events_url": "https://api.github.com/users/linrl3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-22T09:30:08Z", "updated_at": "2019-07-23T03:38:08Z", "closed_at": "2019-07-23T03:38:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/125", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/125/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/125/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/125", "id": 469727650, "node_id": "MDU6SXNzdWU0Njk3Mjc2NTA=", "number": 125, "title": "What parameters should I put in MergeTree()?", "user": {"login": "linrl3", "id": 16595991, "node_id": "MDQ6VXNlcjE2NTk1OTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/16595991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linrl3", "html_url": "https://github.com/linrl3", "followers_url": "https://api.github.com/users/linrl3/followers", "following_url": "https://api.github.com/users/linrl3/following{/other_user}", "gists_url": "https://api.github.com/users/linrl3/gists{/gist_id}", "starred_url": "https://api.github.com/users/linrl3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linrl3/subscriptions", "organizations_url": "https://api.github.com/users/linrl3/orgs", "repos_url": "https://api.github.com/users/linrl3/repos", "events_url": "https://api.github.com/users/linrl3/events{/privacy}", "received_events_url": "https://api.github.com/users/linrl3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-18T11:54:51Z", "updated_at": "2019-07-22T09:29:26Z", "closed_at": "2019-07-22T09:29:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using ```MergeTree()``` engine. Does anyone know what parameters should I put in it? Could you give a example?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/124", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/124/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/124/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/124", "id": 468513279, "node_id": "MDU6SXNzdWU0Njg1MTMyNzk=", "number": 124, "title": "How could I integrate Python django with Clickhouse database?", "user": {"login": "linrl3", "id": 16595991, "node_id": "MDQ6VXNlcjE2NTk1OTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/16595991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linrl3", "html_url": "https://github.com/linrl3", "followers_url": "https://api.github.com/users/linrl3/followers", "following_url": "https://api.github.com/users/linrl3/following{/other_user}", "gists_url": "https://api.github.com/users/linrl3/gists{/gist_id}", "starred_url": "https://api.github.com/users/linrl3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linrl3/subscriptions", "organizations_url": "https://api.github.com/users/linrl3/orgs", "repos_url": "https://api.github.com/users/linrl3/repos", "events_url": "https://api.github.com/users/linrl3/events{/privacy}", "received_events_url": "https://api.github.com/users/linrl3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-07-16T08:19:16Z", "updated_at": "2019-07-17T02:30:04Z", "closed_at": "2019-07-17T02:30:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on a project with Django and clickhouse. I was wondering how could I integrate them since there is no option for clickhouse in ```django.db.backends```. What should I put in the DATABASE field in setting.py?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/123", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/123/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/123/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/123", "id": 468507148, "node_id": "MDU6SXNzdWU0Njg1MDcxNDg=", "number": 123, "title": "How could I integrate Python django with Clickhouse database?", "user": {"login": "linrl3", "id": 16595991, "node_id": "MDQ6VXNlcjE2NTk1OTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/16595991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linrl3", "html_url": "https://github.com/linrl3", "followers_url": "https://api.github.com/users/linrl3/followers", "following_url": "https://api.github.com/users/linrl3/following{/other_user}", "gists_url": "https://api.github.com/users/linrl3/gists{/gist_id}", "starred_url": "https://api.github.com/users/linrl3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linrl3/subscriptions", "organizations_url": "https://api.github.com/users/linrl3/orgs", "repos_url": "https://api.github.com/users/linrl3/repos", "events_url": "https://api.github.com/users/linrl3/events{/privacy}", "received_events_url": "https://api.github.com/users/linrl3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-16T08:04:01Z", "updated_at": "2019-07-16T08:44:40Z", "closed_at": "2019-07-16T08:44:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on a project with Django and clickhouse. I was wondering how could I integrate them since there is no option for clickhouse in ```django.db.backends```. What should I put in the DATABASE field in setting.py?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/121", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/121/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/121/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/121", "id": 463211877, "node_id": "MDU6SXNzdWU0NjMyMTE4Nzc=", "number": 121, "title": "Cannot SELECT WHERE has(field, value)", "user": {"login": "Chocorean", "id": 11725034, "node_id": "MDQ6VXNlcjExNzI1MDM0", "avatar_url": "https://avatars2.githubusercontent.com/u/11725034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chocorean", "html_url": "https://github.com/Chocorean", "followers_url": "https://api.github.com/users/Chocorean/followers", "following_url": "https://api.github.com/users/Chocorean/following{/other_user}", "gists_url": "https://api.github.com/users/Chocorean/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chocorean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chocorean/subscriptions", "organizations_url": "https://api.github.com/users/Chocorean/orgs", "repos_url": "https://api.github.com/users/Chocorean/repos", "events_url": "https://api.github.com/users/Chocorean/events{/privacy}", "received_events_url": "https://api.github.com/users/Chocorean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-02T12:52:31Z", "updated_at": "2020-01-26T23:38:41Z", "closed_at": "2020-01-26T23:38:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to do this kind of query:\r\n```sql\r\nSELECT * FROM table WHERE has(field, value)\r\n```\r\n`field` is an array of UInt8 and `value` is a number. There is currently no operator to do this and I don't find a quick fix.\r\n\r\nEDIT: made myself a few lines for adding it but I would be great to see it in your code. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/120", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/120/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/120/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/120", "id": 455537744, "node_id": "MDU6SXNzdWU0NTU1Mzc3NDQ=", "number": 120, "title": "test_merge fails on ClickHouse v19.8.3", "user": {"login": "ishirav", "id": 615559, "node_id": "MDQ6VXNlcjYxNTU1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/615559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishirav", "html_url": "https://github.com/ishirav", "followers_url": "https://api.github.com/users/ishirav/followers", "following_url": "https://api.github.com/users/ishirav/following{/other_user}", "gists_url": "https://api.github.com/users/ishirav/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishirav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishirav/subscriptions", "organizations_url": "https://api.github.com/users/ishirav/orgs", "repos_url": "https://api.github.com/users/ishirav/repos", "events_url": "https://api.github.com/users/ishirav/events{/privacy}", "received_events_url": "https://api.github.com/users/ishirav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-13T05:10:57Z", "updated_at": "2019-06-13T14:28:52Z", "closed_at": "2019-06-13T14:28:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/119", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/119/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/119/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/119", "id": 451358993, "node_id": "MDU6SXNzdWU0NTEzNTg5OTM=", "number": 119, "title": "Error while insertion: ConnectionError", "user": {"login": "Chocorean", "id": 11725034, "node_id": "MDQ6VXNlcjExNzI1MDM0", "avatar_url": "https://avatars2.githubusercontent.com/u/11725034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chocorean", "html_url": "https://github.com/Chocorean", "followers_url": "https://api.github.com/users/Chocorean/followers", "following_url": "https://api.github.com/users/Chocorean/following{/other_user}", "gists_url": "https://api.github.com/users/Chocorean/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chocorean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chocorean/subscriptions", "organizations_url": "https://api.github.com/users/Chocorean/orgs", "repos_url": "https://api.github.com/users/Chocorean/repos", "events_url": "https://api.github.com/users/Chocorean/events{/privacy}", "received_events_url": "https://api.github.com/users/Chocorean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-03T08:39:30Z", "updated_at": "2019-06-03T09:55:13Z", "closed_at": "2019-06-03T09:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've met an issue while inserting data into my CH.  I have a CLI which psots a request to an API. The API turns the request data, which is a json, into a csv file, insert it into the CH database and return a response code to the CLI. I decided that files weight cannot be above 64Mo.\r\nI use `db.raw(INSERT INTO mytable FORMAT CSV %s % (csv_content))`\r\nThis is the error I get on the API side:\r\n```\r\n  File \"/home/bchocot/EyeAieOuille/api/insert.py\", line 47, in _insert_buffer\r\n    db.raw(\"INSERT INTO mytable FORMAT CSV %s\" % \"\\n\".join(buffer))\r\n  File \"/usr/local/lib/python3.6/dist-packages/infi/clickhouse_orm/database.py\", line 259, in raw\r\n    return self._send(query, settings=settings, stream=stream).text\r\n  File \"/usr/local/lib/python3.6/dist-packages/infi/clickhouse_orm/database.py\", line 329, in _send\r\n    r = self.request_session.post(self.db_url, params=params, data=data, stream=stream, timeout=self.timeout)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 567, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 520, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 630, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/adapters.py\", line 490, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response',))\r\n```\r\n\r\nReading this, I thought first it was the consequence to the default timeout of requests from the `requests` package. So I put to half an hour the following timeouts:\r\n* post request from CLI to API\r\n* `max_session_timeout` CH parameter: 3600\r\n* `default_session_timeout` CH parameter: 1800\r\n\r\nStill getting the ConnectionError. Is there something I did wrong or could this be a bug ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/116", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/116/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/116/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/116", "id": 440694523, "node_id": "MDU6SXNzdWU0NDA2OTQ1MjM=", "number": 116, "title": "Tests fail for readonly user", "user": {"login": "Chocorean", "id": 11725034, "node_id": "MDQ6VXNlcjExNzI1MDM0", "avatar_url": "https://avatars2.githubusercontent.com/u/11725034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chocorean", "html_url": "https://github.com/Chocorean", "followers_url": "https://api.github.com/users/Chocorean/followers", "following_url": "https://api.github.com/users/Chocorean/following{/other_user}", "gists_url": "https://api.github.com/users/Chocorean/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chocorean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chocorean/subscriptions", "organizations_url": "https://api.github.com/users/Chocorean/orgs", "repos_url": "https://api.github.com/users/Chocorean/repos", "events_url": "https://api.github.com/users/Chocorean/events{/privacy}", "received_events_url": "https://api.github.com/users/Chocorean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-06T13:15:48Z", "updated_at": "2019-05-13T06:28:21Z", "closed_at": "2019-05-13T06:28:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI've tried to run tests in order to submit a merge request for #115 but tests fail for readonly mode. I've clone the project today and my clickhouse-server version is 19.5.3.8\r\n\r\nThe issue is the error message displayed by clickhouse is different than the one excepted by the test, so the test fails even if the code has the excepted behavior : \r\n\r\n```\r\nFAIL: test_invalid_user (tests.test_database.DatabaseTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/baptiste/Desktop/infi.clickhouse_orm/tests/test_database.py\", line 153, in test_invalid_user\r\n    self.assertEqual(exc.message, 'Wrong password for user default')\r\nAssertionError: 'Cannot insert into table in readonly mode (version 19.5.3.8 (official build))' != 'Cannot insert into table in readonly mode'\r\n- Cannot insert into table in readonly mode (version 19.5.3.8 (official build))\r\n+ Cannot insert into table in readonly mode\r\n```\r\n\r\nI suspect I enabled something which displays the version but I did not find what. I also took a lot at official doc but I did not find anything useful. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/115", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/115/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/115/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/115", "id": 433139433, "node_id": "MDU6SXNzdWU0MzMxMzk0MzM=", "number": 115, "title": "Cannot specify compression codec", "user": {"login": "Chocorean", "id": 11725034, "node_id": "MDQ6VXNlcjExNzI1MDM0", "avatar_url": "https://avatars2.githubusercontent.com/u/11725034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chocorean", "html_url": "https://github.com/Chocorean", "followers_url": "https://api.github.com/users/Chocorean/followers", "following_url": "https://api.github.com/users/Chocorean/following{/other_user}", "gists_url": "https://api.github.com/users/Chocorean/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chocorean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chocorean/subscriptions", "organizations_url": "https://api.github.com/users/Chocorean/orgs", "repos_url": "https://api.github.com/users/Chocorean/repos", "events_url": "https://api.github.com/users/Chocorean/events{/privacy}", "received_events_url": "https://api.github.com/users/Chocorean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-15T07:45:33Z", "updated_at": "2020-02-08T08:43:40Z", "closed_at": "2020-02-08T08:43:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "First thanks for your work. It's so pleasant to have such a great project with a lot of documentation.\r\n\r\nMy problem is that your orm does not allow to specify the compression codec to use when creating a table, and I need to. I'll just use this version for now and wait to see if there is an update.\r\n\r\nSee the [Clickhouse documentation](https://clickhouse.yandex/docs/en/query_language/create/#column-compression-codecs) for details. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/114", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/114/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/114/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/114", "id": 431905239, "node_id": "MDU6SXNzdWU0MzE5MDUyMzk=", "number": 114, "title": "does it not support PRIMARY key for MergeTree?", "user": {"login": "li-bit", "id": 13388843, "node_id": "MDQ6VXNlcjEzMzg4ODQz", "avatar_url": "https://avatars1.githubusercontent.com/u/13388843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-bit", "html_url": "https://github.com/li-bit", "followers_url": "https://api.github.com/users/li-bit/followers", "following_url": "https://api.github.com/users/li-bit/following{/other_user}", "gists_url": "https://api.github.com/users/li-bit/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-bit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-bit/subscriptions", "organizations_url": "https://api.github.com/users/li-bit/orgs", "repos_url": "https://api.github.com/users/li-bit/repos", "events_url": "https://api.github.com/users/li-bit/events{/privacy}", "received_events_url": "https://api.github.com/users/li-bit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-11T08:53:10Z", "updated_at": "2020-05-29T13:28:44Z", "closed_at": "2020-05-29T13:28:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/110", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/110/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/110/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/110", "id": 413360090, "node_id": "MDU6SXNzdWU0MTMzNjAwOTA=", "number": 110, "title": "DateField range", "user": {"login": "trthhrtz", "id": 13679724, "node_id": "MDQ6VXNlcjEzNjc5NzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/13679724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trthhrtz", "html_url": "https://github.com/trthhrtz", "followers_url": "https://api.github.com/users/trthhrtz/followers", "following_url": "https://api.github.com/users/trthhrtz/following{/other_user}", "gists_url": "https://api.github.com/users/trthhrtz/gists{/gist_id}", "starred_url": "https://api.github.com/users/trthhrtz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trthhrtz/subscriptions", "organizations_url": "https://api.github.com/users/trthhrtz/orgs", "repos_url": "https://api.github.com/users/trthhrtz/repos", "events_url": "https://api.github.com/users/trthhrtz/events{/privacy}", "received_events_url": "https://api.github.com/users/trthhrtz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-22T11:21:35Z", "updated_at": "2019-02-26T20:23:53Z", "closed_at": "2019-02-26T20:23:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "DateField Range is 1970-01-01 to 2038-01-19 (https://github.com/Infinidat/infi.clickhouse_orm/blob/4f4ce697e4b2a7d3b8f906741a2d095c4efc4375/docs/field_types.md)\r\nHowever in official documentation it is till 2106 year (https://clickhouse.yandex/docs/en/data_types/date/)\r\n\r\nPlease expand.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/108", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/108/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/108/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/108", "id": 410707033, "node_id": "MDU6SXNzdWU0MTA3MDcwMzM=", "number": 108, "title": "In clickhouse 19.3.3 error code is parsed incorrectly", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-15T10:41:09Z", "updated_at": "2019-06-13T14:29:16Z", "closed_at": "2019-06-13T14:29:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After upgrading to clickhouse 19.3.3 from 19.1.1 ServerError is always returned with code=0.\r\nI get 'Code: 60, e.displayText() = DB::Exception: Table test.django_clickhouse_migrations doesn\\\\'t exist.' message from clickhouse, which is not parsed by [regexp](https://github.com/Infinidat/infi.clickhouse_orm/blob/develop/src/infi/clickhouse_orm/database.py#L43)(it doesn't have `e.what`)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/107", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/107/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/107/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/107", "id": 404607696, "node_id": "MDU6SXNzdWU0MDQ2MDc2OTY=", "number": 107, "title": "Pagination: asking for the last page (-1) causes an error when the query returns no records", "user": {"login": "ishirav", "id": 615559, "node_id": "MDQ6VXNlcjYxNTU1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/615559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishirav", "html_url": "https://github.com/ishirav", "followers_url": "https://api.github.com/users/ishirav/followers", "following_url": "https://api.github.com/users/ishirav/following{/other_user}", "gists_url": "https://api.github.com/users/ishirav/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishirav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishirav/subscriptions", "organizations_url": "https://api.github.com/users/ishirav/orgs", "repos_url": "https://api.github.com/users/ishirav/repos", "events_url": "https://api.github.com/users/ishirav/events{/privacy}", "received_events_url": "https://api.github.com/users/ishirav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-30T05:26:04Z", "updated_at": "2019-06-13T14:29:50Z", "closed_at": "2019-06-13T14:29:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/106", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/106/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/106/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/106", "id": 403689336, "node_id": "MDU6SXNzdWU0MDM2ODkzMzY=", "number": 106, "title": "Migrations - cannot add a new materialized field after a regular field", "user": {"login": "ishirav", "id": 615559, "node_id": "MDQ6VXNlcjYxNTU1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/615559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishirav", "html_url": "https://github.com/ishirav", "followers_url": "https://api.github.com/users/ishirav/followers", "following_url": "https://api.github.com/users/ishirav/following{/other_user}", "gists_url": "https://api.github.com/users/ishirav/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishirav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishirav/subscriptions", "organizations_url": "https://api.github.com/users/ishirav/orgs", "repos_url": "https://api.github.com/users/ishirav/repos", "events_url": "https://api.github.com/users/ishirav/events{/privacy}", "received_events_url": "https://api.github.com/users/ishirav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-28T07:58:39Z", "updated_at": "2019-01-28T08:37:40Z", "closed_at": "2019-01-28T08:37:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/105", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/105/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/105/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/105", "id": 402076902, "node_id": "MDU6SXNzdWU0MDIwNzY5MDI=", "number": 105, "title": "Don't use http authentication parameters", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-23T05:25:56Z", "updated_at": "2019-06-13T14:29:58Z", "closed_at": "2019-06-13T14:29:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi.\r\nIt's not a good idea to pass authentication params in GET url. For instance, Sentry shows full url on error, and so all passwords are logged to Sentry. May be it's better to use basic auth? Described [here](https://clickhouse.yandex/docs/en/interfaces/http/)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/102", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/102/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/102/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/102", "id": 391822845, "node_id": "MDU6SXNzdWUzOTE4MjI4NDU=", "number": 102, "title": "UUID doesn't work, getting infi.clickhouse_orm.database.ServerError: Too large value for FixedString(16)", "user": {"login": "kpotehin", "id": 2035388, "node_id": "MDQ6VXNlcjIwMzUzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2035388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpotehin", "html_url": "https://github.com/kpotehin", "followers_url": "https://api.github.com/users/kpotehin/followers", "following_url": "https://api.github.com/users/kpotehin/following{/other_user}", "gists_url": "https://api.github.com/users/kpotehin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpotehin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpotehin/subscriptions", "organizations_url": "https://api.github.com/users/kpotehin/orgs", "repos_url": "https://api.github.com/users/kpotehin/repos", "events_url": "https://api.github.com/users/kpotehin/events{/privacy}", "received_events_url": "https://api.github.com/users/kpotehin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-17T17:49:16Z", "updated_at": "2019-06-13T14:30:47Z", "closed_at": "2019-06-13T14:30:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey!\r\n\r\nI've defined the custom uuid field type as described in docs but it doesn't work. It's easy to check using existing tests, function `test_uuid_field`.\r\nhttps://github.com/Infinidat/infi.clickhouse_orm/blob/84fc270e0ef04f057c981cd84cbe782eadf2d83c/tests/test_custom_fields.py\r\n\r\nIf you replace `{12345678-1234-5678-1234-567812345678}` at line 41 with `{5250a2ff-dac5-4c78-b429-d0fd079dc410}` (just a random valid uuid v4) it won't work. The error stack is below:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"<input>\", line 38, in test_uuid_field\r\n  File \"/lib/python3.6/site-packages/infi/clickhouse_orm/database.py\", line 206, in insert\r\n    self._send(gen())\r\n  File \"/lib/python3.6/site-packages/infi/clickhouse_orm/database.py\", line 324, in _send\r\n    raise ServerError(r.text)\r\ninfi.clickhouse_orm.database.ServerError: Too large value for FixedString(16).\r\n\r\nRow 1:\r\nColumn 0,   name: i, type: Int16,           parsed text: \"0\"\r\nColumn 1,   name: f, type: FixedString(16), parsed text: \"RP\u00a2\u00ff\u00da\u00c5Lx\u00b4)\u00d0\u00fd<0x07>\u009d\u00c4<0x10>\"ERROR\r\n```\r\n\r\nIs it possible to use built-in `UUIDStringToNum` and `UUIDNumToString` functions upon inserting uuid?\r\n\r\nI'm using Python 3.6.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/101", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/101/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/101/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/101", "id": 391004348, "node_id": "MDU6SXNzdWUzOTEwMDQzNDg=", "number": 101, "title": "Add option to not verify the server's SSL certificate ", "user": {"login": "ishirav", "id": 615559, "node_id": "MDQ6VXNlcjYxNTU1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/615559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishirav", "html_url": "https://github.com/ishirav", "followers_url": "https://api.github.com/users/ishirav/followers", "following_url": "https://api.github.com/users/ishirav/following{/other_user}", "gists_url": "https://api.github.com/users/ishirav/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishirav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishirav/subscriptions", "organizations_url": "https://api.github.com/users/ishirav/orgs", "repos_url": "https://api.github.com/users/ishirav/repos", "events_url": "https://api.github.com/users/ishirav/events{/privacy}", "received_events_url": "https://api.github.com/users/ishirav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-14T08:00:47Z", "updated_at": "2019-01-28T08:37:57Z", "closed_at": "2019-01-28T08:37:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "When connecting via HTTPS, the server's certificate could be self signed. In this case, we need to let requests know that it shouldn't verify the certificate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/100", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/100/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/100/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/100", "id": 391003997, "node_id": "MDU6SXNzdWUzOTEwMDM5OTc=", "number": 100, "title": "Use requests Session object for better performance", "user": {"login": "ishirav", "id": 615559, "node_id": "MDQ6VXNlcjYxNTU1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/615559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishirav", "html_url": "https://github.com/ishirav", "followers_url": "https://api.github.com/users/ishirav/followers", "following_url": "https://api.github.com/users/ishirav/following{/other_user}", "gists_url": "https://api.github.com/users/ishirav/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishirav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishirav/subscriptions", "organizations_url": "https://api.github.com/users/ishirav/orgs", "repos_url": "https://api.github.com/users/ishirav/repos", "events_url": "https://api.github.com/users/ishirav/events{/privacy}", "received_events_url": "https://api.github.com/users/ishirav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-14T07:59:21Z", "updated_at": "2019-01-28T08:38:13Z", "closed_at": "2019-01-28T08:38:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/98", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/98/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/98/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/98", "id": 390610767, "node_id": "MDU6SXNzdWUzOTA2MTA3Njc=", "number": 98, "title": "SystemPart QuerySet doesn't work", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-13T10:22:17Z", "updated_at": "2019-06-13T14:30:55Z", "closed_at": "2019-06-13T14:30:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi\r\n```python\r\nfrom infi.clickhouse_orm import SystemPart\r\nbool(SystemPart.objects_in(db).filter(name='my_part'))\r\n```\r\nraises an exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/code.py\", line 91, in runcode\r\n    exec(code, self.locals)\r\n  File \"<input>\", line 2, in <module>\r\n  File \"/home/vagrant/venv/lib/python3.6/site-packages/infi/clickhouse_orm/query.py\", line 257, in __bool__\r\n    return bool(self.count())\r\n  File \"/home/vagrant/venv/lib/python3.6/site-packages/infi/clickhouse_orm/query.py\", line 325, in count\r\n    return self._database.count(self._model_cls, self.conditions_as_sql())\r\n  File \"/home/vagrant/venv/lib/python3.6/site-packages/infi/clickhouse_orm/database.py\", line 219, in count\r\n    r = self._send(query)\r\n  File \"/home/vagrant/venv/lib/python3.6/site-packages/infi/clickhouse_orm/database.py\", line 324, in _send\r\n    raise ServerError(r.text)\r\ninfi.clickhouse_orm.database.ServerError: Table carrot_new.`system.parts` doesn't exist. (60)\r\n```\r\nDatabase name shouldn't be appended automatically for system models.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/93", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/93/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/93/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/93", "id": 386532391, "node_id": "MDU6SXNzdWUzODY1MzIzOTE=", "number": 93, "title": "Tests fail on python 3.6", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-12-02T06:36:32Z", "updated_at": "2020-05-29T13:29:16Z", "closed_at": "2020-05-29T13:29:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi.\r\nI've tried running tests on Python 3.6.5.\r\nCalling `bin/nosetests` raises error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"bin/nosetests\", line 47, in <module>\r\n    import nose\r\n  File \"/projects/venvs/venv36/lib/python3.6/site-packages/nose/__init__.py\", line 1, in <module>\r\n    from nose.core import collector, main, run, run_exit, runmodule\r\n  File \"/projects/venvs/venv36/lib/python3.6/site-packages/nose/core.py\", line 5, in <module>\r\n    import logging\r\n  File \"/usr/lib/python3.6/logging/__init__.py\", line 26, in <module>\r\n    import sys, os, time, io, traceback, warnings, weakref, collections\r\n  File \"/usr/lib/python3.6/traceback.py\", line 5, in <module>\r\n    import linecache\r\n  File \"/projects/venvs/venv36/lib/python3.6/linecache.py\", line 11, in <module>\r\n    import tokenize\r\n  File \"/projects/venvs/venv36/lib/python3.6/tokenize.py\", line 33, in <module>\r\n    import re\r\n  File \"/projects/venvs/venv36/lib/python3.6/re.py\", line 142, in <module>\r\n    class RegexFlag(enum.IntFlag):\r\nAttributeError: module 'enum' has no attribute 'IntFlag'\r\n```\r\nAccording to [this](https://stackoverflow.com/questions/43124775/why-python-3-6-1-throws-attributeerror-module-enum-has-no-attribute-intflag) flow, it means enum has been redeclared.\r\nI've found `join(base, 'eggs/enum34-1.1.6-py3.6.egg')` in `bin/nosetests` file. \r\nCommenting this line makes tests run fine. But I get:\r\n```\r\n(venv36) ubuntu@ubuntu-xenial:/projects/infi.clickhouse_orm$ bin/nosetests \r\n\r\n----------------------------------------------------------------------\r\nRan 0 tests in 0.850s\r\n\r\nOK\r\n```\r\nMy questions are:\r\n1) Is enum34 library really needed? As it's causing a problem on last python versions\r\n2) What is wrong with tests running?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/92", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/92/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/92/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/92", "id": 385360324, "node_id": "MDU6SXNzdWUzODUzNjAzMjQ=", "number": 92, "title": "FINAL", "user": {"login": "noisywiz", "id": 1072110, "node_id": "MDQ6VXNlcjEwNzIxMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noisywiz", "html_url": "https://github.com/noisywiz", "followers_url": "https://api.github.com/users/noisywiz/followers", "following_url": "https://api.github.com/users/noisywiz/following{/other_user}", "gists_url": "https://api.github.com/users/noisywiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/noisywiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noisywiz/subscriptions", "organizations_url": "https://api.github.com/users/noisywiz/orgs", "repos_url": "https://api.github.com/users/noisywiz/repos", "events_url": "https://api.github.com/users/noisywiz/events{/privacy}", "received_events_url": "https://api.github.com/users/noisywiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-28T16:47:40Z", "updated_at": "2019-01-28T08:38:46Z", "closed_at": "2019-01-28T08:38:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great if the ORM supported FINAL modifier (CollapsingMergeTree, ReplacingMergeTree) https://clickhouse.yandex/docs/en/query_language/select/ ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/90", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/90/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/90/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/90", "id": 381731029, "node_id": "MDU6SXNzdWUzODE3MzEwMjk=", "number": 90, "title": "How to check whether a select query returns empty?", "user": {"login": "q0987", "id": 16629186, "node_id": "MDQ6VXNlcjE2NjI5MTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/16629186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/q0987", "html_url": "https://github.com/q0987", "followers_url": "https://api.github.com/users/q0987/followers", "following_url": "https://api.github.com/users/q0987/following{/other_user}", "gists_url": "https://api.github.com/users/q0987/gists{/gist_id}", "starred_url": "https://api.github.com/users/q0987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/q0987/subscriptions", "organizations_url": "https://api.github.com/users/q0987/orgs", "repos_url": "https://api.github.com/users/q0987/repos", "events_url": "https://api.github.com/users/q0987/events{/privacy}", "received_events_url": "https://api.github.com/users/q0987/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-16T19:30:48Z", "updated_at": "2019-06-13T05:14:54Z", "closed_at": "2019-06-13T05:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "`res = db.select(\"select distinct(partition) from system.parts where name='not_exist'\")`\r\n\r\nQuestion> How to check whether res contains empty query results?\r\n\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/89", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/89/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/89/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/89", "id": 381482732, "node_id": "MDU6SXNzdWUzODE0ODI3MzI=", "number": 89, "title": "Database.drop_database() method doesn't set Database.db_exists attribute to False", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-16T07:45:08Z", "updated_at": "2018-12-14T07:23:48Z", "closed_at": "2018-12-14T07:23:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/87", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/87/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/87/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/87", "id": 373689046, "node_id": "MDU6SXNzdWUzNzM2ODkwNDY=", "number": 87, "title": "Best way to do insert with select?", "user": {"login": "letfoolsdie", "id": 8996139, "node_id": "MDQ6VXNlcjg5OTYxMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8996139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letfoolsdie", "html_url": "https://github.com/letfoolsdie", "followers_url": "https://api.github.com/users/letfoolsdie/followers", "following_url": "https://api.github.com/users/letfoolsdie/following{/other_user}", "gists_url": "https://api.github.com/users/letfoolsdie/gists{/gist_id}", "starred_url": "https://api.github.com/users/letfoolsdie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letfoolsdie/subscriptions", "organizations_url": "https://api.github.com/users/letfoolsdie/orgs", "repos_url": "https://api.github.com/users/letfoolsdie/repos", "events_url": "https://api.github.com/users/letfoolsdie/events{/privacy}", "received_events_url": "https://api.github.com/users/letfoolsdie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-24T21:42:35Z", "updated_at": "2018-10-25T08:24:44Z", "closed_at": "2018-10-25T08:24:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to do someting like:\r\n\r\n```\r\ninsert into some_table\r\nselect col_1, col_2 from another_table\r\n```\r\n\r\nIt seems like to do this with infi, I have to separately get data with select query, then define model and run db.insert().\r\nWhich is too much work and unnecessary data transfer (first download then upload to server).\r\n\r\nIs there a simpler way to do it?\r\n\r\nI fixed it locally with a dirty hack by adding argument to database.select\r\n```\r\n    def select(self, query, model_class=None, settings=None, insert_with_select=False):\r\n\r\n        if not insert_with_select:\r\n            query += ' FORMAT TabSeparatedWithNamesAndTypes'\r\n```\r\n\r\nand then passing my insert query to this function.  \r\nBut maybe there's a way to do it without such hacks?         ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/86", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/86/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/86/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/86", "id": 368930790, "node_id": "MDU6SXNzdWUzNjg5MzA3OTA=", "number": 86, "title": "timeout is not set in request.post", "user": {"login": "lo5twind", "id": 8359220, "node_id": "MDQ6VXNlcjgzNTkyMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8359220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lo5twind", "html_url": "https://github.com/lo5twind", "followers_url": "https://api.github.com/users/lo5twind/followers", "following_url": "https://api.github.com/users/lo5twind/following{/other_user}", "gists_url": "https://api.github.com/users/lo5twind/gists{/gist_id}", "starred_url": "https://api.github.com/users/lo5twind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lo5twind/subscriptions", "organizations_url": "https://api.github.com/users/lo5twind/orgs", "repos_url": "https://api.github.com/users/lo5twind/repos", "events_url": "https://api.github.com/users/lo5twind/events{/privacy}", "received_events_url": "https://api.github.com/users/lo5twind/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-11T02:50:34Z", "updated_at": "2019-01-28T08:39:12Z", "closed_at": "2019-01-28T08:39:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using infi.clickhouse_orm to connect and insert data to a remote clickhouse-server, but the running program is stucked occasionally. I find that the program is stucked at **insert** function and **requests.post** is called by _send in function **insert**.\r\n\r\n```py\r\n    def _send(self, data, settings=None, stream=False):\r\n        if isinstance(data, string_types):\r\n            data = data.encode('utf-8')\r\n        params = self._build_params(settings)\r\n        r = requests.post(self.db_url, params=params, data=data, stream=stream)\r\n        if r.status_code != 200:\r\n            raise ServerError(r.text)\r\n        return r\r\n```\r\n\r\n> You can tell Requests to stop waiting for a response after a given number of seconds with the timeout parameter. Nearly all production code should use this parameter in nearly all requests. Failure to do so can cause your program to hang indefinitely\r\n\r\nComment about timeout is found at http://docs.python-requests.org/en/master/user/quickstart/#timeouts \r\n\r\nShould I add an timeout param to solve hanging problem? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/85", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/85/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/85/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/85", "id": 368522991, "node_id": "MDU6SXNzdWUzNjg1MjI5OTE=", "number": 85, "title": "Decimal support", "user": {"login": "noisywiz", "id": 1072110, "node_id": "MDQ6VXNlcjEwNzIxMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noisywiz", "html_url": "https://github.com/noisywiz", "followers_url": "https://api.github.com/users/noisywiz/followers", "following_url": "https://api.github.com/users/noisywiz/following{/other_user}", "gists_url": "https://api.github.com/users/noisywiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/noisywiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noisywiz/subscriptions", "organizations_url": "https://api.github.com/users/noisywiz/orgs", "repos_url": "https://api.github.com/users/noisywiz/repos", "events_url": "https://api.github.com/users/noisywiz/events{/privacy}", "received_events_url": "https://api.github.com/users/noisywiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-10T07:11:43Z", "updated_at": "2018-10-24T13:37:32Z", "closed_at": "2018-10-24T13:36:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Docs](https://clickhouse.yandex/docs/en/data_types/decimal/)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/83", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/83/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/83/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/83", "id": 365073644, "node_id": "MDU6SXNzdWUzNjUwNzM2NDQ=", "number": 83, "title": "Is it possible to fetch columns of data ?", "user": {"login": "healiseu", "id": 14239698, "node_id": "MDQ6VXNlcjE0MjM5Njk4", "avatar_url": "https://avatars1.githubusercontent.com/u/14239698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/healiseu", "html_url": "https://github.com/healiseu", "followers_url": "https://api.github.com/users/healiseu/followers", "following_url": "https://api.github.com/users/healiseu/following{/other_user}", "gists_url": "https://api.github.com/users/healiseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/healiseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/healiseu/subscriptions", "organizations_url": "https://api.github.com/users/healiseu/orgs", "repos_url": "https://api.github.com/users/healiseu/repos", "events_url": "https://api.github.com/users/healiseu/events{/privacy}", "received_events_url": "https://api.github.com/users/healiseu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-28T23:43:27Z", "updated_at": "2018-12-30T00:42:24Z", "closed_at": "2018-12-30T00:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I want to fetch columns of data, i.e. not to transform the rows you normally fetch from the server to columns. How is that possible with your ORM client ?  Let me give you an example with [clickhouse-driver][2] \r\n\r\n\r\n#### Row Format\r\n`client.execute('select * from Floats limit 5')`\r\n```python\r\nOut[6]: \r\n[(0, 288542, 2000.013427734375),\r\n (1, 355625, 2000.032958984375),\r\n (2, 27808, 2000.0435791015625),\r\n (3, 220464, 2000.0506591796875),\r\n (4, 279648, 2000.060546875)]\r\n```\r\n#### Column Format\r\n`client.execute('select * from Floats limit 5', columnar=True)`\r\n```python\r\n[(0, 1, 2, 3, 4),\r\n (288542, 355625, 27808, 220464, 279648),\r\n (2000.013427734375,\r\n  2000.032958984375,\r\n  2000.0435791015625,\r\n  2000.0506591796875,\r\n  2000.060546875)]\r\n```\r\n\r\nAccording to Clickhouse documentation on the [Native input and output format][1] you can read blocks in binary format. This format is columnar, i.e. I do not want to convert columns to rows and then back to columns again. \r\n\r\nI tried \r\n```python\r\nfrom infi.clickhouse_orm.database import Database\r\n\r\ndb = Database('default')\r\n\r\nfor obj in db.select('select * from Floats limit 3 format Native'): print(obj)\r\n```\r\n\r\nBut I got a ServerError\r\nServerError: Syntax error: failed at position 37: Native FORMAT TabSeparatedWithNamesAndTypes. Expected identifier (62)\r\n\r\nIt looks like infini-orm is trying to use the [TabSeparatedWithNamesAndTypes][3] format instead of the Native one I specified inside the query string.\r\n\r\nSo, is that possible with the current release and if not can you add this feature ? \r\nThat will be great.\r\n\r\n[1]: https://clickhouse.yandex/docs/en/interfaces/formats/#native\r\n[2]: https://github.com/mymarilyn/clickhouse-driver#miscellaneous\r\n[3]: https://clickhouse.yandex/docs/en/interfaces/formats/#tabseparatedwithnamesandtypes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/80", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/80/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/80/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/80", "id": 360220053, "node_id": "MDU6SXNzdWUzNjAyMjAwNTM=", "number": 80, "title": "Support for using LIMIT N BY feature", "user": {"login": "kalombos", "id": 1648548, "node_id": "MDQ6VXNlcjE2NDg1NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1648548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalombos", "html_url": "https://github.com/kalombos", "followers_url": "https://api.github.com/users/kalombos/followers", "following_url": "https://api.github.com/users/kalombos/following{/other_user}", "gists_url": "https://api.github.com/users/kalombos/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalombos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalombos/subscriptions", "organizations_url": "https://api.github.com/users/kalombos/orgs", "repos_url": "https://api.github.com/users/kalombos/repos", "events_url": "https://api.github.com/users/kalombos/events{/privacy}", "received_events_url": "https://api.github.com/users/kalombos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-14T09:09:14Z", "updated_at": "2020-02-07T11:23:37Z", "closed_at": "2020-02-07T11:23:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Here](https://clickhouse.yandex/docs/en/query_language/select/#limit-n-by-clause) is the description. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/79", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/79/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/79/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/79", "id": 353738423, "node_id": "MDU6SXNzdWUzNTM3Mzg0MjM=", "number": 79, "title": "QuerySet count() ignores slicing and ordering", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-24T10:57:53Z", "updated_at": "2018-10-24T13:36:53Z", "closed_at": "2018-10-24T13:36:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi.\r\nI've found a bug in QuerySets, it looks like it fully ignores slices and ordering when I do count().\r\nI've found a hacky solution, adding distinct() to qs, which makes it doing a subquery, but that looks strange =)\r\n```python\r\nqs = MyModel.objects_in(settings.CLICKHOUSE_DB).order_by('created')[100:200]\r\nprint(qs.count())\r\n# returns 59, but correct is 0\r\n\r\nqs = qs.distinct()\r\nprint(qs.count())\r\n# returns 0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/78", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/78/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/78/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/78", "id": 348718321, "node_id": "MDU6SXNzdWUzNDg3MTgzMjE=", "number": 78, "title": "Initializing Database with autocreate=false leads to errors in create_database", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-08T13:08:27Z", "updated_at": "2019-07-13T17:59:37Z", "closed_at": "2018-10-13T06:35:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi.\r\nWhat I wanted was to init Database object without creating database (it may exist or not) and then call `db.create_database()` which will create it if not already exists. Supprise:\r\n```python\r\n# Create database object\r\ndb = Database('test', autocreate=False)\r\n\r\n# Create database, it doesn't exist at the moment\r\ndb.create_database()\r\n# And...\r\n# infi.clickhouse_orm.database.ServerError: Database test doesn't exist (81)\r\n# Serious?\r\n```\r\nThe problem is that when autocreate is False, flag db.db_exists is True. But it's not correct - it's value is unknown on object init. Ok, I add db.db_exists = False before create and get:\r\n```python\r\n# Create database, it doesn't exist at the moment\r\ndb.db_exists = False\r\ndb.create_database()\r\n# infi.clickhouse_orm.database.DatabaseException: Custom partitioning is not supported before ClickHouse 1.1.54310. Please update your server or use date_col syntax.https://clickhouse.yandex/docs/en/table_engines/custom_partitioning_key/\r\n```\r\nBut I know my clickhouse support it! I have version 1.1.54388. The reason of this error, is that server version was fetched once in init, it returned error (no database found) and set version to 1.1.0. I suppose, it's reasonable to update server version after database creation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/76", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/76/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/76/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/76", "id": 338900304, "node_id": "MDU6SXNzdWUzMzg5MDAzMDQ=", "number": 76, "title": "1.0.0 breaks sqlalchemy-clickhouse", "user": {"login": "zyclonite", "id": 674137, "node_id": "MDQ6VXNlcjY3NDEzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/674137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyclonite", "html_url": "https://github.com/zyclonite", "followers_url": "https://api.github.com/users/zyclonite/followers", "following_url": "https://api.github.com/users/zyclonite/following{/other_user}", "gists_url": "https://api.github.com/users/zyclonite/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyclonite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyclonite/subscriptions", "organizations_url": "https://api.github.com/users/zyclonite/orgs", "repos_url": "https://api.github.com/users/zyclonite/repos", "events_url": "https://api.github.com/users/zyclonite/events{/privacy}", "received_events_url": "https://api.github.com/users/zyclonite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-06T11:11:24Z", "updated_at": "2019-09-21T21:28:00Z", "closed_at": "2019-09-21T21:28:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "since the upgrade from 0.9.8 to 1.0.0 the following problem occurs\r\n\r\n#### reproducer\r\n```\r\nfrom sqlalchemy import create_engine\r\nimport pandas as pd\r\n\r\nengine = create_engine('clickhouse://127.0.0.1:8123')\r\nconn = engine.connect()\r\nresult = pd.read_sql_query(\"SELECT * FROM test\", conn)\r\nconn.close()\r\n```\r\n#### exception\r\n```\r\nTraceback (most recent call last):\r\n  File \"query.py\", line 6, in <module>\r\n    result = pd.read_sql_query(\"SELECT * FROM test\", conn)\r\n  File \"/usr/local/lib/python3.6/site-packages/pandas/io/sql.py\", line 332, in read_sql_query\r\n    parse_dates=parse_dates, chunksize=chunksize)\r\n  File \"/usr/local/lib/python3.6/site-packages/pandas/io/sql.py\", line 1092, in read_query\r\n    result = self.execute(*args)\r\n  File \"/usr/local/lib/python3.6/site-packages/pandas/io/sql.py\", line 983, in execute\r\n    return self.connectable.execute(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 942, in execute\r\n    return self._execute_text(object, multiparams, params)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1104, in _execute_text\r\n    statement, parameters\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1200, in _execute_context\r\n    context)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1416, in _handle_dbapi_exception\r\n    util.reraise(*exc_info)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 187, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1193, in _execute_context\r\n    context)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 507, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy_clickhouse/connector.py\", line 209, in execute\r\n    self._process_response(response)\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy_clickhouse/connector.py\", line 342, in _process_response\r\n    cols = [(f[0], f[1].db_type) for f in r._fields]\r\n  File \"/usr/local/lib/python3.6/site-packages/sqlalchemy_clickhouse/connector.py\", line 342, in <listcomp>\r\n    cols = [(f[0], f[1].db_type) for f in r._fields]\r\nAttributeError: 'str' object has no attribute 'db_type'\r\n```\r\n#### versions used\r\n* sqlalchemy-clickhouse 0.1.3.post0\r\n* SQLAlchemy 1.2.2\r\n* pandas 0.22.0\r\n#### referenced issues\r\nhttps://github.com/apache/incubator-superset/issues/5345", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/75", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/75/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/75/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/75", "id": 335797767, "node_id": "MDU6SXNzdWUzMzU3OTc3Njc=", "number": 75, "title": "Got an error while building package", "user": {"login": "kalombos", "id": 1648548, "node_id": "MDQ6VXNlcjE2NDg1NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1648548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalombos", "html_url": "https://github.com/kalombos", "followers_url": "https://api.github.com/users/kalombos/followers", "following_url": "https://api.github.com/users/kalombos/following{/other_user}", "gists_url": "https://api.github.com/users/kalombos/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalombos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalombos/subscriptions", "organizations_url": "https://api.github.com/users/kalombos/orgs", "repos_url": "https://api.github.com/users/kalombos/repos", "events_url": "https://api.github.com/users/kalombos/events{/privacy}", "received_events_url": "https://api.github.com/users/kalombos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-26T12:32:45Z", "updated_at": "2018-06-27T05:02:47Z", "closed_at": "2018-06-27T05:02:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After ```projector devenv build``` command:\r\n\r\n```\r\nExecuting /usr/bin/buildout bootstrap\r\nExecuting buildout bootstrap\r\nExecuting bin/buildout buildout:develop= install setup.py __version__.py\r\nb'warning: no files found matching \\'shootout.cfg\\'\\nWhile:\\n  Installing.\\n  Loading extensions.\\n\\nAn internal error occurred due to a bug in either zc.buildout or in a\\nrecipe being used:\\nTraceback (most recent call last):\\n  File \"/home/kalombo/projects/infi.clickhouse_orm/eggs/zc.buildout-2.11.5-py3.5.egg/zc/buildout/buildout.py\", line 2127, in main\\n    getattr(buildout, command)(args)\\n  File \"/home/kalombo/projects/infi.clickhouse_orm/eggs/zc.buildout-2.11.5-py3.5.egg/zc/buildout/buildout.py\", line 638, in install\\n    self._load_extensions()\\n  File \"/home/kalombo/projects/infi.clickhouse_orm/eggs/zc.buildout-2.11.5-py3.5.egg/zc/buildout/buildout.py\", line 1174, in _load_extensions\\n    ep.load()(self)\\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2229, in load\\n    return self.resolve()\\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2235, in resolve\\n    module = __import__(self.module_name, fromlist=[\\'__name__\\'], level=0)\\n  File \"/home/kalombo/projects/infi.clickhouse_orm/eggs/buildout.wheel-0.2.0-py3.5.egg/buildout/wheel/__init__.py\", line 9, in <module>\\n    import pip.pep425tags\\nImportError: No module named \\'pip.pep425tags\\'\\n'\r\nTraceback (most recent call last):\r\n  File \"/home/kalombo/.virtualenvs/infi/bin/projector\", line 11, in <module>\r\n    load_entry_point('infi.projector==1.0.5', 'console_scripts', 'projector')()\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/scripts/__init__.py\", line 10, in projector\r\n    parse_commandline_arguments(argv)\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/commandline_parser/__init__.py\", line 124, in parse_commandline_arguments\r\n    if not any(selected_plugin.parse_commandline_arguments(arguments) for selected_plugin in selected_plugins):\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/commandline_parser/__init__.py\", line 124, in <genexpr>\r\n    if not any(selected_plugin.parse_commandline_arguments(arguments) for selected_plugin in selected_plugins):\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/plugins/__init__.py\", line 27, in parse_commandline_arguments\r\n    method()\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/plugins/builtins/devenv/__init__.py\", line 216, in build\r\n    self.create_setup_py()\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/plugins/builtins/devenv/__init__.py\", line 104, in create_setup_py\r\n    self.install_sections_by_recipe(\"infi.recipe.template.version\")\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/plugins/builtins/devenv/__init__.py\", line 90, in install_sections_by_recipe\r\n    utils.execute_with_buildout(\"install {}\".format(' '.join(sections_to_install)), stripped=stripped)\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/helper/utils/__init__.py\", line 163, in execute_with_buildout\r\n    execute_assert_success([buildout] + BUILDOUT_PARAMETERS + args, env=_env)\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/infi.projector-1.0.5-py3.5.egg/infi/projector/helper/utils/__init__.py\", line 72, in execute_assert_success\r\n    raise PrettyExecutionError(result)\r\ninfi.projector.helper.utils.PrettyExecutionError: Execution of ['bin/buildout', 'buildout:develop=', 'install', 'setup.py', '__version__.py'] failed!\r\nresult=1\r\nstdout=Getting distribution for 'buildout.wheel'.\r\nGot buildout.wheel 0.2.0.\r\n\r\nstderr=warning: no files found matching 'shootout.cfg'\r\nWhile:\r\n  Installing.\r\n  Loading extensions.\r\n\r\nAn internal error occurred due to a bug in either zc.buildout or in a\r\nrecipe being used:\r\nTraceback (most recent call last):\r\n  File \"/home/kalombo/projects/infi.clickhouse_orm/eggs/zc.buildout-2.11.5-py3.5.egg/zc/buildout/buildout.py\", line 2127, in main\r\n    getattr(buildout, command)(args)\r\n  File \"/home/kalombo/projects/infi.clickhouse_orm/eggs/zc.buildout-2.11.5-py3.5.egg/zc/buildout/buildout.py\", line 638, in install\r\n    self._load_extensions()\r\n  File \"/home/kalombo/projects/infi.clickhouse_orm/eggs/zc.buildout-2.11.5-py3.5.egg/zc/buildout/buildout.py\", line 1174, in _load_extensions\r\n    ep.load()(self)\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2229, in load\r\n    return self.resolve()\r\n  File \"/home/kalombo/.virtualenvs/infi/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2235, in resolve\r\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n  File \"/home/kalombo/projects/infi.clickhouse_orm/eggs/buildout.wheel-0.2.0-py3.5.egg/buildout/wheel/__init__.py\", line 9, in <module>\r\n    import pip.pep425tags\r\nImportError: No module named 'pip.pep425tags'\r\n```\r\n\r\nPython 3.5.2, pip 10.0.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/73", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/73/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/73/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/73", "id": 334836762, "node_id": "MDU6SXNzdWUzMzQ4MzY3NjI=", "number": 73, "title": "Support for using functions in filters", "user": {"login": "kalombos", "id": 1648548, "node_id": "MDQ6VXNlcjE2NDg1NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1648548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalombos", "html_url": "https://github.com/kalombos", "followers_url": "https://api.github.com/users/kalombos/followers", "following_url": "https://api.github.com/users/kalombos/following{/other_user}", "gists_url": "https://api.github.com/users/kalombos/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalombos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalombos/subscriptions", "organizations_url": "https://api.github.com/users/kalombos/orgs", "repos_url": "https://api.github.com/users/kalombos/repos", "events_url": "https://api.github.com/users/kalombos/events{/privacy}", "received_events_url": "https://api.github.com/users/kalombos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-06-22T10:59:28Z", "updated_at": "2020-05-29T13:29:59Z", "closed_at": "2020-05-29T13:29:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think it would be great to have an opportunity to use functions in queries. For example:\r\n\r\n```\r\nselect count(*) from storageunithistory where pointInPolygon((lat, lon), ...)\r\n```\r\nIs there a workaround for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/72", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/72/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/72/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/72", "id": 334798800, "node_id": "MDU6SXNzdWUzMzQ3OTg4MDA=", "number": 72, "title": "Q object does not build query properly", "user": {"login": "kalombos", "id": 1648548, "node_id": "MDQ6VXNlcjE2NDg1NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1648548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalombos", "html_url": "https://github.com/kalombos", "followers_url": "https://api.github.com/users/kalombos/followers", "following_url": "https://api.github.com/users/kalombos/following{/other_user}", "gists_url": "https://api.github.com/users/kalombos/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalombos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalombos/subscriptions", "organizations_url": "https://api.github.com/users/kalombos/orgs", "repos_url": "https://api.github.com/users/kalombos/repos", "events_url": "https://api.github.com/users/kalombos/events{/privacy}", "received_events_url": "https://api.github.com/users/kalombos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701977, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzc=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-22T08:55:34Z", "updated_at": "2018-10-24T13:37:14Z", "closed_at": "2018-10-24T13:37:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\n>>> qs = StorageUnitHistory.objects.filter(onlineprice=5)\\\r\n.filter(Q(brandname_id=4) | Q(brandname_id=5) | Q(brandname_id=6))\r\n>>> qs.conditions_as_sql()\r\nonlineprice = 5.0 AND ((brandname_id = 4) OR (brandname_id = 5)) OR (brandname_id = 6)\r\n```\r\nIt is wrong because i need: \r\n```\r\nonlineprice = 5.0 AND ((brandname_id = 4) OR (brandname_id = 5) OR (brandname_id = 6))\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/71", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/71/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/71/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/71", "id": 334753148, "node_id": "MDU6SXNzdWUzMzQ3NTMxNDg=", "number": 71, "title": "Filtering null values support", "user": {"login": "kalombos", "id": 1648548, "node_id": "MDQ6VXNlcjE2NDg1NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1648548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalombos", "html_url": "https://github.com/kalombos", "followers_url": "https://api.github.com/users/kalombos/followers", "following_url": "https://api.github.com/users/kalombos/following{/other_user}", "gists_url": "https://api.github.com/users/kalombos/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalombos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalombos/subscriptions", "organizations_url": "https://api.github.com/users/kalombos/orgs", "repos_url": "https://api.github.com/users/kalombos/repos", "events_url": "https://api.github.com/users/kalombos/events{/privacy}", "received_events_url": "https://api.github.com/users/kalombos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-22T05:44:30Z", "updated_at": "2018-10-13T06:33:09Z", "closed_at": "2018-10-13T06:33:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, I didn't find the way how to implement this query:\r\n\r\n```\r\nSELECT *\r\nFROM units \r\nWHERE isNull(parent)\r\n```\r\n\r\nUnits.objects_in(ch_models.db).filter(parent=None) raises an error\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/66", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/66/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/66/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/66", "id": 315034840, "node_id": "MDU6SXNzdWUzMTUwMzQ4NDA=", "number": 66, "title": "Raw sql query fails", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-17T12:21:30Z", "updated_at": "2018-06-11T10:38:01Z", "closed_at": "2018-06-11T10:38:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi\r\nAn error occures making raw sql query with infi.clickhouse_orm 0.9.8 and ClickHouse 1.1.54370\r\n```Python\r\nError\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\r\n    testMethod()\r\n  File \"/home/sergei/cqapi/messages/tests/test_ch_models.py\", line 1055, in test_get_stats_message\r\n    stats = CHSendingsInteraction.get_stats(msg.app, start, start, group_range='hour', message=msg)\r\n  File \"/home/sergei/cqapi/messages/ch_models.py\", line 1220, in get_stats\r\n    start_date, end_date)\r\n  File \"/home/sergei/cqapi/messages/ch_models.py\", line 1128, in _format_stat_result\r\n    for item in ch_data:\r\n  File \"/home/sergei/infi.clickhouse_orm/src/infi/clickhouse_orm/database.py\", line 166, in select\r\n    model_class = model_class or ModelBase.create_ad_hoc_model(zip(field_names, field_types))\r\n  File \"/home/sergei/infi.clickhouse_orm/src/infi/clickhouse_orm/models.py\", line 48, in create_ad_hoc_model\r\n    attrs[name] = cls.create_ad_hoc_field(db_type)\r\n  File \"/home/sergei/infi.clickhouse_orm/src/infi/clickhouse_orm/models.py\", line 75, in create_ad_hoc_field\r\n    raise NotImplementedError('No field class for %s' % db_type)\r\nNotImplementedError: No field class for DateTime('Asia/Yekaterinburg')\r\n```\r\n\r\nThe reason is displayed here:\r\n![image](https://user-images.githubusercontent.com/2315339/38869206-52ffa17c-4263-11e8-8d51-e8e782b40483.png)\r\n\r\nIt seems that TabSeparatedWithNamesAndTypes returns format description with timezone, which is not parsed well in (It is handled as simple field and add Field after brackets):\r\n\r\n```Python\r\n    @classmethod\r\n    def create_ad_hoc_field(cls, db_type):\r\n        import infi.clickhouse_orm.fields as orm_fields\r\n        # Enums\r\n        if db_type.startswith('Enum'):\r\n            return orm_fields.BaseEnumField.create_ad_hoc_field(db_type)\r\n        # Arrays\r\n        if db_type.startswith('Array'):\r\n            inner_field = cls.create_ad_hoc_field(db_type[6 : -1])\r\n            return orm_fields.ArrayField(inner_field)\r\n        # FixedString\r\n        if db_type.startswith('FixedString'):\r\n            length = int(db_type[12 : -1])\r\n            return orm_fields.FixedStringField(length)\r\n        # Nullable\r\n        if db_type.startswith('Nullable'):\r\n            inner_field = cls.create_ad_hoc_field(db_type[9 : -1])\r\n            return orm_fields.NullableField(inner_field)\r\n        # Simple fields\r\n        name = db_type + 'Field'\r\n        if not hasattr(orm_fields, name):\r\n            raise NotImplementedError('No field class for %s' % db_type)\r\n        return getattr(orm_fields, name)()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/64", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/64/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/64/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/64", "id": 313313705, "node_id": "MDU6SXNzdWUzMTMzMTM3MDU=", "number": 64, "title": "test_engines.EnginesTestCase.test_merge_tree_with_sampling fails on Clickhouse 1.1.54370", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-11T13:01:44Z", "updated_at": "2018-04-11T13:17:18Z", "closed_at": "2018-04-11T13:17:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "ClickHouse version: 1.1.54370\r\ninfi.clickhouse_orm: master\r\n```\r\nError\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/usr/lib/python3.6/unittest/case.py\", line 605, in run\r\n    testMethod()\r\n  File \"/home/sergei/infi.clickhouse_orm/tests/test_engines.py\", line 35, in test_merge_tree_with_sampling\r\n    self._create_and_insert(TestModel)\r\n  File \"/home/sergei/infi.clickhouse_orm/tests/test_engines.py\", line 22, in _create_and_insert\r\n    self.database.create_table(model_class)\r\n  File \"/home/sergei/infi.clickhouse_orm/src/infi/clickhouse_orm/database.py\", line 80, in create_table\r\n    self._send(model_class.create_table_sql(self.db_name))\r\n  File \"/home/sergei/infi.clickhouse_orm/src/infi/clickhouse_orm/database.py\", line 253, in _send\r\n    raise DatabaseException(r.text)\r\nException: Code: 36, e.displayText() = DB::Exception: Sampling expression must be present in the primary key, e.what() = DB::Exception\r\n\r\n-------------------- >> begin captured logging << --------------------\r\nurllib3.connectionpool: DEBUG: Starting new HTTP connection (1): localhost\r\nurllib3.connectionpool: DEBUG: http://localhost:8123 \"POST / HTTP/1.1\" 200 None\r\nurllib3.connectionpool: DEBUG: Starting new HTTP connection (1): localhost\r\nurllib3.connectionpool: DEBUG: http://localhost:8123 \"POST /?database=test-db HTTP/1.1\" 200 None\r\nurllib3.connectionpool: DEBUG: Starting new HTTP connection (1): localhost\r\nurllib3.connectionpool: DEBUG: http://localhost:8123 \"POST /?database=test-db HTTP/1.1\" 500 None\r\nurllib3.connectionpool: DEBUG: Starting new HTTP connection (1): localhost\r\nurllib3.connectionpool: DEBUG: http://localhost:8123 \"POST /?database=test-db HTTP/1.1\" 200 None\r\n--------------------- >> end captured logging << ---------------------\r\n```\r\nIs it a test bug (just add sampling expression to PK in test) or it's better to add python assertion? I may fix it along with developing [custom partitioning](https://clickhouse.yandex/docs/en/table_engines/custom_partitioning_key/).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/63", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/63/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/63/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/63", "id": 290138306, "node_id": "MDU6SXNzdWUyOTAxMzgzMDY=", "number": 63, "title": "how to install infi.clickhouse_orm, i run python setup.py install ,but not run please help me", "user": {"login": "elipoke", "id": 27793995, "node_id": "MDQ6VXNlcjI3NzkzOTk1", "avatar_url": "https://avatars2.githubusercontent.com/u/27793995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elipoke", "html_url": "https://github.com/elipoke", "followers_url": "https://api.github.com/users/elipoke/followers", "following_url": "https://api.github.com/users/elipoke/following{/other_user}", "gists_url": "https://api.github.com/users/elipoke/gists{/gist_id}", "starred_url": "https://api.github.com/users/elipoke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elipoke/subscriptions", "organizations_url": "https://api.github.com/users/elipoke/orgs", "repos_url": "https://api.github.com/users/elipoke/repos", "events_url": "https://api.github.com/users/elipoke/events{/privacy}", "received_events_url": "https://api.github.com/users/elipoke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-19T23:32:36Z", "updated_at": "2018-04-21T14:26:17Z", "closed_at": "2018-04-21T14:26:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to install infi.clickhouse_orm, i run python setup.py install ,but not run please help me", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/60", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/60/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/60/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/60", "id": 277367971, "node_id": "MDU6SXNzdWUyNzczNjc5NzE=", "number": 60, "title": "OR operator", "user": {"login": "desile", "id": 7103075, "node_id": "MDQ6VXNlcjcxMDMwNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7103075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/desile", "html_url": "https://github.com/desile", "followers_url": "https://api.github.com/users/desile/followers", "following_url": "https://api.github.com/users/desile/following{/other_user}", "gists_url": "https://api.github.com/users/desile/gists{/gist_id}", "starred_url": "https://api.github.com/users/desile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/desile/subscriptions", "organizations_url": "https://api.github.com/users/desile/orgs", "repos_url": "https://api.github.com/users/desile/repos", "events_url": "https://api.github.com/users/desile/events{/privacy}", "received_events_url": "https://api.github.com/users/desile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-28T12:32:09Z", "updated_at": "2018-06-11T10:39:07Z", "closed_at": "2018-06-11T10:39:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! \r\nThanks for library!\r\n\r\nI try to implement support of complex filters, but  the current way of filtration is not very suitable for this.\r\nDo you plan to change it?\r\n\r\nI made hotfix for myself, that acting like Q class, but self._fovs has hierarchical structure and init method expect hierarchical structure like this for example:\r\n\r\n                {\r\n                    'operation': 'AND',\r\n                    'operands': [\r\n                        {\r\n                            'field': 'field1',\r\n                            'type': 'in',\r\n                            'value': ['a','b', 'c']\r\n                        },\r\n                        {\r\n                            'field': 'field2',\r\n                            'type': 'eq',\r\n                            'value': 3\r\n                        },\r\n                        {\r\n                            'operation': 'OR',\r\n                            'operands': [\r\n                                {\r\n                                   'field': 'field3',\r\n                                   'type': 'eq',\r\n                                   'value': 'asdf'\r\n                                },\r\n                                {\r\n                                    'field': 'field4',\r\n                                    'type': 'lt',\r\n                                    'value': 0\r\n                                }\r\n                           ]\r\n                        }\r\n                    ]\r\n                }\r\n\r\nI could not think of another solution that would fit in.\r\nIf you have any ideas of proper solution, but have not time for implementing it - I could help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/59", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/59/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/59/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/59", "id": 264276156, "node_id": "MDU6SXNzdWUyNjQyNzYxNTY=", "number": 59, "title": "Inserting IPv6", "user": {"login": "Romamo", "id": 5600783, "node_id": "MDQ6VXNlcjU2MDA3ODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5600783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Romamo", "html_url": "https://github.com/Romamo", "followers_url": "https://api.github.com/users/Romamo/followers", "following_url": "https://api.github.com/users/Romamo/following{/other_user}", "gists_url": "https://api.github.com/users/Romamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Romamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Romamo/subscriptions", "organizations_url": "https://api.github.com/users/Romamo/orgs", "repos_url": "https://api.github.com/users/Romamo/repos", "events_url": "https://api.github.com/users/Romamo/events{/privacy}", "received_events_url": "https://api.github.com/users/Romamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-10T15:36:33Z", "updated_at": "2018-04-21T14:27:07Z", "closed_at": "2018-04-21T14:27:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nHow do you insert IPv6 into FixedString(16)?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/56", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/56/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/56/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/56", "id": 262772118, "node_id": "MDU6SXNzdWUyNjI3NzIxMTg=", "number": 56, "title": "select query fails, if query contains '$' symbol", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-04T12:41:12Z", "updated_at": "2017-10-30T14:23:45Z", "closed_at": "2017-10-30T14:23:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`list(db.select(\"SELECT value FROM $table WHERE key ='$utm_source'\", model_class=CHEventProperty))`\r\nraises Exception\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/code.py\", line 91, in runcode\r\n    exec(code, self.locals)\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/home/sergei/venv36/lib/python3.6/site-packages/infi/clickhouse_orm/database.py\", line 157, in select\r\n    query = self._substitute(query, model_class)\r\n  File \"/home/sergei/venv36/lib/python3.6/site-packages/infi/clickhouse_orm/database.py\", line 273, in _substitute\r\n    query = Template(query).substitute(mapping)\r\n  File \"/usr/lib/python3.6/string.py\", line 126, in substitute\r\n    return self.pattern.sub(convert, self.template)\r\n  File \"/usr/lib/python3.6/string.py\", line 119, in convert\r\n    return str(mapping[named])\r\nKeyError: 'utm_source'\r\n```\r\n\r\nThe problem is `database._substitute()` method which uses `Template(query).substitute(mapping)`. Template expects all keys mentioned in query being in mapping. Suppose, [safe_substitute()](https://docs.python.org/2/library/string.html#string.Template.safe_substitute) method should be used here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/53", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/53/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/53/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/53", "id": 260601051, "node_id": "MDU6SXNzdWUyNjA2MDEwNTE=", "number": 53, "title": "Support operator \"Limit\"", "user": {"login": "denis-sukhoverkhov", "id": 11704073, "node_id": "MDQ6VXNlcjExNzA0MDcz", "avatar_url": "https://avatars0.githubusercontent.com/u/11704073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denis-sukhoverkhov", "html_url": "https://github.com/denis-sukhoverkhov", "followers_url": "https://api.github.com/users/denis-sukhoverkhov/followers", "following_url": "https://api.github.com/users/denis-sukhoverkhov/following{/other_user}", "gists_url": "https://api.github.com/users/denis-sukhoverkhov/gists{/gist_id}", "starred_url": "https://api.github.com/users/denis-sukhoverkhov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denis-sukhoverkhov/subscriptions", "organizations_url": "https://api.github.com/users/denis-sukhoverkhov/orgs", "repos_url": "https://api.github.com/users/denis-sukhoverkhov/repos", "events_url": "https://api.github.com/users/denis-sukhoverkhov/events{/privacy}", "received_events_url": "https://api.github.com/users/denis-sukhoverkhov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-26T12:13:51Z", "updated_at": "2017-10-30T14:07:08Z", "closed_at": "2017-10-30T14:07:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to do this\r\n`first_obj_voice_call = VoiceCallSessionNemo.objects_in(db).\\\r\n                        filter(project_id=self.id).order_by('start_time').only('start_time').limit(1)`\r\nbut i getting an error\r\n`'QuerySet' object has no attribute 'limit'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/52", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/52/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/52/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/52", "id": 259243610, "node_id": "MDU6SXNzdWUyNTkyNDM2MTA=", "number": 52, "title": "Support DataBase.check_exists(Model)", "user": {"login": "vsmelov", "id": 9407507, "node_id": "MDQ6VXNlcjk0MDc1MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9407507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsmelov", "html_url": "https://github.com/vsmelov", "followers_url": "https://api.github.com/users/vsmelov/followers", "following_url": "https://api.github.com/users/vsmelov/following{/other_user}", "gists_url": "https://api.github.com/users/vsmelov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsmelov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsmelov/subscriptions", "organizations_url": "https://api.github.com/users/vsmelov/orgs", "repos_url": "https://api.github.com/users/vsmelov/repos", "events_url": "https://api.github.com/users/vsmelov/events{/privacy}", "received_events_url": "https://api.github.com/users/vsmelov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-20T17:34:44Z", "updated_at": "2018-10-13T06:34:13Z", "closed_at": "2018-10-13T06:34:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes, when I dump some analytical data to ClickHouse I want to be sure, that now there is no such table in DataBase.\r\nAppend-mode is not satisfy me\r\nDrop-And-Create too, because I afraid to drop someone important data.\r\n\r\nSo, now, I need to make workaround\r\n```\r\n    try:\r\n        resp = db.raw('select * from {} limit 0'.format(Model.table_name()))\r\n        assert resp == ''\r\n    except DatabaseException:\r\n        exists = False\r\n    else:\r\n        exists = True\r\n```\r\n\r\nMay be there is more elegant way to do it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/48", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/48/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/48/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/48", "id": 255398816, "node_id": "MDU6SXNzdWUyNTUzOTg4MTY=", "number": 48, "title": "Add support \"distinct\"", "user": {"login": "denis-sukhoverkhov", "id": 11704073, "node_id": "MDQ6VXNlcjExNzA0MDcz", "avatar_url": "https://avatars0.githubusercontent.com/u/11704073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denis-sukhoverkhov", "html_url": "https://github.com/denis-sukhoverkhov", "followers_url": "https://api.github.com/users/denis-sukhoverkhov/followers", "following_url": "https://api.github.com/users/denis-sukhoverkhov/following{/other_user}", "gists_url": "https://api.github.com/users/denis-sukhoverkhov/gists{/gist_id}", "starred_url": "https://api.github.com/users/denis-sukhoverkhov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denis-sukhoverkhov/subscriptions", "organizations_url": "https://api.github.com/users/denis-sukhoverkhov/orgs", "repos_url": "https://api.github.com/users/denis-sukhoverkhov/repos", "events_url": "https://api.github.com/users/denis-sukhoverkhov/events{/privacy}", "received_events_url": "https://api.github.com/users/denis-sukhoverkhov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-05T20:28:32Z", "updated_at": "2017-09-13T09:26:31Z", "closed_at": "2017-09-13T09:26:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The query does not work:\r\n`gsm_count = ScanningNemo.objects_in(self.db).filter(project_id=self.project.id). \\\r\n                distinct('arfcn').count()`\r\nError text:\r\n`QuerySet' object has no attribute 'distinct'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/47", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/47/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/47/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/47", "id": 253963732, "node_id": "MDU6SXNzdWUyNTM5NjM3MzI=", "number": 47, "title": "Can't modify enum choices", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-30T11:20:10Z", "updated_at": "2017-10-30T14:23:44Z", "closed_at": "2017-10-30T14:23:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I try to add choices to fields.Enum8Field with migrations.AlterTable and get:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/sergei/.pycharm_helpers/pycharm/django_manage.py\", line 43, in <module>\r\n    run_module(manage_file, None, '__main__', True)\r\n  File \"/usr/lib/python3.5/runpy.py\", line 196, in run_module\r\n    return _run_module_code(code, init_globals, run_name, mod_spec)\r\n  File \"/usr/lib/python3.5/runpy.py\", line 96, in _run_module_code\r\n    mod_name, mod_spec, pkg_name, script_name)\r\n  File \"/usr/lib/python3.5/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/sergei/cqapi/manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/sergei/venv/lib/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/sergei/venv/lib/python3.5/site-packages/django/core/management/__init__.py\", line 359, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/sergei/venv/lib/python3.5/site-packages/django/core/management/base.py\", line 294, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/sergei/venv/lib/python3.5/site-packages/django/core/management/base.py\", line 345, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/sergei/cqapi/utils/management/commands/ch_migrate.py\", line 60, in handle\r\n    self._apply_migrations(p)\r\n  File \"/home/sergei/cqapi/utils/management/commands/ch_migrate.py\", line 21, in _apply_migrations\r\n    settings.CLICKHOUSE_DB.migrate(package_name)\r\n  File \"/home/sergei/venv/lib/python3.5/site-packages/infi.clickhouse_orm-0.7.2.post84-py3.5.egg/infi/clickhouse_orm/database.py\", line 151, in migrate\r\n    operation.apply(self)\r\n  File \"/home/sergei/venv/lib/python3.5/site-packages/infi.clickhouse_orm-0.7.2.post84-py3.5.egg/infi/clickhouse_orm/migrations.py\", line 77, in apply\r\n    assert model_field[0] == table_field[0], 'Model fields and table columns in disagreement'\r\nAssertionError: Model fields and table columns in disagreement\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/45", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/45/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/45/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/45", "id": 251250676, "node_id": "MDU6SXNzdWUyNTEyNTA2NzY=", "number": 45, "title": "pip3 error", "user": {"login": "ainich", "id": 7910484, "node_id": "MDQ6VXNlcjc5MTA0ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7910484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ainich", "html_url": "https://github.com/ainich", "followers_url": "https://api.github.com/users/ainich/followers", "following_url": "https://api.github.com/users/ainich/following{/other_user}", "gists_url": "https://api.github.com/users/ainich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ainich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ainich/subscriptions", "organizations_url": "https://api.github.com/users/ainich/orgs", "repos_url": "https://api.github.com/users/ainich/repos", "events_url": "https://api.github.com/users/ainich/events{/privacy}", "received_events_url": "https://api.github.com/users/ainich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-18T13:47:58Z", "updated_at": "2017-08-23T11:50:18Z", "closed_at": "2017-08-23T11:50:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nFile \"/usr/lib/python3.4/site-packages/infi/clickhouse_orm/query.py\", line 193\r\n        print self.as_sql()\r\n                 ^\r\n    SyntaxError: invalid syntax", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/43", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/43/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/43/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/43", "id": 245362457, "node_id": "MDU6SXNzdWUyNDUzNjI0NTc=", "number": 43, "title": "Support for more datetime formats", "user": {"login": "tsionyx", "id": 2960061, "node_id": "MDQ6VXNlcjI5NjAwNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2960061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsionyx", "html_url": "https://github.com/tsionyx", "followers_url": "https://api.github.com/users/tsionyx/followers", "following_url": "https://api.github.com/users/tsionyx/following{/other_user}", "gists_url": "https://api.github.com/users/tsionyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsionyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsionyx/subscriptions", "organizations_url": "https://api.github.com/users/tsionyx/orgs", "repos_url": "https://api.github.com/users/tsionyx/repos", "events_url": "https://api.github.com/users/tsionyx/events{/privacy}", "received_events_url": "https://api.github.com/users/tsionyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-25T10:52:42Z", "updated_at": "2017-10-30T14:23:44Z", "closed_at": "2017-10-30T14:23:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm currently working with dates serialized with [isoformat()](https://docs.python.org/3.6/library/datetime.html#datetime.datetime.isoformat). But the serializer for DateTimeField fails on values like ''2017-07-25T10:38:15\", because of using only one format ['%Y-%m-%d %H:%M:%S'](https://github.com/Infinidat/infi.clickhouse_orm/blob/cb6c329d32f571936bd34881710ea11efb4e5014/src/infi/clickhouse_orm/fields.py#L161).\r\n\r\nIs this an intended behaviour, i.e. do you force the user of your library to use only supported formats for DateTimeField, or you just didn't faced this problem before?\r\n\r\nNow I'm using this workaround (depends on python-dateutil):\r\n```python\r\nclass DateTimeField(fields.DateTimeField):\r\n    def to_python(self, value, timezone_in_use):\r\n        import pytz\r\n        # noinspection PyPackageRequirements\r\n        from dateutil import parser as dt_parser\r\n\r\n        try:\r\n            return super(DateTimeField, self).to_python(value, timezone_in_use)\r\n        except ValueError as e:\r\n            if 'does not match format' in text_type(e):\r\n                LOGGER.warning(\"Default datetime serializer failed on '%s'\", value)\r\n                dt = dt_parser.parse(value)\r\n                return timezone_in_use.localize(dt).astimezone(pytz.utc)\r\n            raise\r\n```\r\n\r\nIf this code is acceptable I can make a PR to enhance current DateTimeField.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/41", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/41/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/41/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/41", "id": 234261611, "node_id": "MDU6SXNzdWUyMzQyNjE2MTE=", "number": 41, "title": "Return AdHocModel for QuerySet", "user": {"login": "tsionyx", "id": 2960061, "node_id": "MDQ6VXNlcjI5NjAwNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2960061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsionyx", "html_url": "https://github.com/tsionyx", "followers_url": "https://api.github.com/users/tsionyx/followers", "following_url": "https://api.github.com/users/tsionyx/following{/other_user}", "gists_url": "https://api.github.com/users/tsionyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsionyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsionyx/subscriptions", "organizations_url": "https://api.github.com/users/tsionyx/orgs", "repos_url": "https://api.github.com/users/tsionyx/repos", "events_url": "https://api.github.com/users/tsionyx/events{/privacy}", "received_events_url": "https://api.github.com/users/tsionyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-07T16:04:27Z", "updated_at": "2017-06-15T11:51:34Z", "closed_at": "2017-06-15T11:51:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it reasonable to return custom model when projecting `QuerySet` using `only` method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/40", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/40/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/40/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/40", "id": 234260764, "node_id": "MDU6SXNzdWUyMzQyNjA3NjQ=", "number": 40, "title": "Why ORDER BY in QuerySet by default?", "user": {"login": "tsionyx", "id": 2960061, "node_id": "MDQ6VXNlcjI5NjAwNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2960061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsionyx", "html_url": "https://github.com/tsionyx", "followers_url": "https://api.github.com/users/tsionyx/followers", "following_url": "https://api.github.com/users/tsionyx/following{/other_user}", "gists_url": "https://api.github.com/users/tsionyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsionyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsionyx/subscriptions", "organizations_url": "https://api.github.com/users/tsionyx/orgs", "repos_url": "https://api.github.com/users/tsionyx/repos", "events_url": "https://api.github.com/users/tsionyx/events{/privacy}", "received_events_url": "https://api.github.com/users/tsionyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-07T16:01:51Z", "updated_at": "2017-06-15T11:52:01Z", "closed_at": "2017-06-15T11:52:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Why do you need to ORDER BY all fields in `QuerySet` even when no `order_by` explicitly called. I think this reduces performance of a query.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/39", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/39/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/39/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/39", "id": 234182395, "node_id": "MDU6SXNzdWUyMzQxODIzOTU=", "number": 39, "title": "Why CREATE DATABASE on connect?", "user": {"login": "ratb3rt", "id": 10510120, "node_id": "MDQ6VXNlcjEwNTEwMTIw", "avatar_url": "https://avatars3.githubusercontent.com/u/10510120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ratb3rt", "html_url": "https://github.com/ratb3rt", "followers_url": "https://api.github.com/users/ratb3rt/followers", "following_url": "https://api.github.com/users/ratb3rt/following{/other_user}", "gists_url": "https://api.github.com/users/ratb3rt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ratb3rt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ratb3rt/subscriptions", "organizations_url": "https://api.github.com/users/ratb3rt/orgs", "repos_url": "https://api.github.com/users/ratb3rt/repos", "events_url": "https://api.github.com/users/ratb3rt/events{/privacy}", "received_events_url": "https://api.github.com/users/ratb3rt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-07T11:48:26Z", "updated_at": "2017-06-15T11:52:44Z", "closed_at": "2017-06-15T11:52:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems strange to automatically try to create a database if it doesn't exist, instead of throwing an error. I have had to clean up misspelt empty databases from ClickHouse after users have got names slightly wrong... Is there a particular core reason for doing this, or could it be changed to not do this in future? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/37", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/37/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/37/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/37", "id": 232039273, "node_id": "MDU6SXNzdWUyMzIwMzkyNzM=", "number": 37, "title": "Cannot SELECT FROM JOIN", "user": {"login": "tsionyx", "id": 2960061, "node_id": "MDQ6VXNlcjI5NjAwNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2960061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsionyx", "html_url": "https://github.com/tsionyx", "followers_url": "https://api.github.com/users/tsionyx/followers", "following_url": "https://api.github.com/users/tsionyx/following{/other_user}", "gists_url": "https://api.github.com/users/tsionyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsionyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsionyx/subscriptions", "organizations_url": "https://api.github.com/users/tsionyx/orgs", "repos_url": "https://api.github.com/users/tsionyx/repos", "events_url": "https://api.github.com/users/tsionyx/events{/privacy}", "received_events_url": "https://api.github.com/users/tsionyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-29T14:34:45Z", "updated_at": "2017-06-15T11:55:31Z", "closed_at": "2017-06-15T11:55:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "How can I get the result from two tables' JOIN? I've prepared a sample to show that even when I specify \"$db\" the query is still invalid:\r\n``` python\r\n# -*- coding: utf-8 -*-\r\n\r\nfrom __future__ import unicode_literals, print_function\r\n\r\nimport json\r\nimport logging\r\n\r\nfrom infi.clickhouse_orm import database, engines, fields, models\r\n\r\nlogging.getLogger(\"requests.packages.urllib3\").setLevel(logging.WARNING)\r\nLOGGER = logging.getLogger()\r\nlogging.basicConfig(\r\n        format=\"%(levelname)s  -> %(message)s\", level=logging.DEBUG)\r\n\r\n\r\nclass Foo(models.Model):\r\n    engine = engines.Memory()\r\n    id = fields.UInt8Field()\r\n\r\n\r\nclass Bar(Foo):\r\n    b = fields.UInt8Field()\r\n\r\n\r\ndef print_res(query):\r\n    LOGGER.debug(query)\r\n    try:\r\n        print(json.dumps([row.to_dict() for row in DB.select(query)]))\r\n    except database.DatabaseException as e:\r\n        LOGGER.error(e)\r\n\r\n\r\nif __name__ == '__main__':\r\n    DB = database.Database(db_name='test')\r\n    DB.drop_table(Foo)\r\n    DB.drop_table(Bar)\r\n    DB.create_table(Foo)\r\n    DB.create_table(Bar)\r\n    N = 3\r\n\r\n    DB.insert([Foo(id=i) for i in range(3)])\r\n    DB.insert([Bar(id=i, b=i * i) for i in range(3)])\r\n    LOGGER.info(\"Without $db specifier\")\r\n    print_res(\"SELECT * FROM {}\".format(Foo.table_name()))\r\n    print_res(\"SELECT * FROM {}\".format(Bar.table_name()))\r\n    print_res(\r\n        \"SELECT b FROM {} ALL LEFT JOIN {} USING id\".format(Foo.table_name(), Bar.table_name()))\r\n\r\n    LOGGER.info(\"With $db specifier\")\r\n    print_res(\"SELECT * FROM $db.{}\".format(Foo.table_name()))\r\n    print_res(\"SELECT * FROM $db.{}\".format(Bar.table_name()))\r\n    print_res(\r\n        \"SELECT b FROM $db.{} ALL LEFT JOIN $db.{} USING id\".format(Foo.table_name(), Bar.table_name()))\r\n```\r\n\r\noutputs this\r\n\r\n```\r\nINFO  -> Without $db specifier\r\nDEBUG  -> SELECT * FROM foo\r\nERROR  -> Code: 60, e.displayText() = DB::Exception: Table default.foo doesn't exist., e.what() = DB::Exception\r\n\r\nDEBUG  -> SELECT * FROM bar\r\nERROR  -> Code: 60, e.displayText() = DB::Exception: Table default.bar doesn't exist., e.what() = DB::Exception\r\n\r\nDEBUG  -> SELECT b FROM foo ALL LEFT JOIN bar USING id\r\nERROR  -> Code: 60, e.displayText() = DB::Exception: Table default.foo doesn't exist., e.what() = DB::Exception\r\n\r\nINFO  -> With $db specifier\r\nDEBUG  -> SELECT * FROM $db.foo\r\n[{\"id\": 0}, {\"id\": 1}, {\"id\": 2}]\r\nDEBUG  -> SELECT * FROM $db.bar\r\n[{\"b\": 0, \"id\": 0}, {\"b\": 1, \"id\": 1}, {\"b\": 4, \"id\": 2}]\r\nDEBUG  -> SELECT b FROM $db.foo ALL LEFT JOIN $db.bar USING id\r\nERROR  -> Code: 60, e.displayText() = DB::Exception: Table default.test.bar doesn't exist., e.what() = DB::Exception\r\n```\r\n\r\nHowever, the JOINed query should output result like that:\r\n```\r\n$ clickhouse-client --database=test --query=\"SELECT b FROM foo ALL LEFT JOIN bar USING id\"\r\n0\r\n1\r\n4\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/36", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/36/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/36/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/36", "id": 231979050, "node_id": "MDU6SXNzdWUyMzE5NzkwNTA=", "number": 36, "title": "Support for function-based DEFAULT values, not only literals", "user": {"login": "tsionyx", "id": 2960061, "node_id": "MDQ6VXNlcjI5NjAwNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2960061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsionyx", "html_url": "https://github.com/tsionyx", "followers_url": "https://api.github.com/users/tsionyx/followers", "following_url": "https://api.github.com/users/tsionyx/following{/other_user}", "gists_url": "https://api.github.com/users/tsionyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsionyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsionyx/subscriptions", "organizations_url": "https://api.github.com/users/tsionyx/orgs", "repos_url": "https://api.github.com/users/tsionyx/repos", "events_url": "https://api.github.com/users/tsionyx/events{/privacy}", "received_events_url": "https://api.github.com/users/tsionyx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398701979, "node_id": "MDU6TGFiZWwzOTg3MDE5Nzk=", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1090359824, "node_id": "MDU6TGFiZWwxMDkwMzU5ODI0", "url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/labels/in%20progress", "name": "in progress", "color": "ff9900", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-05-29T09:59:24Z", "updated_at": "2020-05-29T13:30:52Z", "closed_at": "2020-05-29T13:30:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to create this simple table:\r\n\r\n```\r\nCREATE TABLE foo\r\n(\r\n    date Date DEFAULT now(), \r\n    a UInt8\r\n) ENGINE = MergeTree(date, a, 8192)\r\n```\r\n\r\nso I use the following:\r\n\r\n```\r\nclass Foo(models.Model):\r\n    engine = engines.MergeTree('date', ['a'])\r\n    date = fields.DateField(default=\"now()\")\r\n    a = fields.UInt8Field()\r\n```\r\n\r\nand get the error:\r\n```\r\n...\r\n     return escape(value.isoformat(), quote)\r\nTypeError: 'str' object is not callable\r\n```\r\n\r\nEven if I changed to this\r\n```\r\nclass Foo(models.Model):\r\n    engine = engines.MergeTree('date', ['a'])\r\n    date = fields.DateField(default=type('', (), {'isoformat': lambda: \"now()\"}))\r\n    a = fields.UInt8Field()\r\n```\r\n\r\nI still get the error (due to quoting):\r\n```\r\ninfi.clickhouse_orm.database.DatabaseException: Code: 38, e.displayText() = DB::Exception: Cannot parse date now(): Cannot parse Date from String, e.what() = DB::Exception\r\n```\r\n\r\nHow can I achieve the desired behaviour?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/35", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/35/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/35/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/35", "id": 230434027, "node_id": "MDU6SXNzdWUyMzA0MzQwMjc=", "number": 35, "title": "how to create and query data that save in  ENGINE is Distributed?", "user": {"login": "qietingfengling", "id": 9961712, "node_id": "MDQ6VXNlcjk5NjE3MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9961712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qietingfengling", "html_url": "https://github.com/qietingfengling", "followers_url": "https://api.github.com/users/qietingfengling/followers", "following_url": "https://api.github.com/users/qietingfengling/following{/other_user}", "gists_url": "https://api.github.com/users/qietingfengling/gists{/gist_id}", "starred_url": "https://api.github.com/users/qietingfengling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qietingfengling/subscriptions", "organizations_url": "https://api.github.com/users/qietingfengling/orgs", "repos_url": "https://api.github.com/users/qietingfengling/repos", "events_url": "https://api.github.com/users/qietingfengling/events{/privacy}", "received_events_url": "https://api.github.com/users/qietingfengling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-22T15:30:39Z", "updated_at": "2017-06-15T11:56:13Z", "closed_at": "2017-06-15T11:56:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello, how to create and query data that save in  ENGINE is Distributed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/32", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/32/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/32/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/32", "id": 228554769, "node_id": "MDU6SXNzdWUyMjg1NTQ3Njk=", "number": 32, "title": "IPython 6.0+ does not support Python 2.6, 2.7, 3.0, 3.1, or 3.2", "user": {"login": "TvoroG", "id": 1325161, "node_id": "MDQ6VXNlcjEzMjUxNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1325161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TvoroG", "html_url": "https://github.com/TvoroG", "followers_url": "https://api.github.com/users/TvoroG/followers", "following_url": "https://api.github.com/users/TvoroG/following{/other_user}", "gists_url": "https://api.github.com/users/TvoroG/gists{/gist_id}", "starred_url": "https://api.github.com/users/TvoroG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TvoroG/subscriptions", "organizations_url": "https://api.github.com/users/TvoroG/orgs", "repos_url": "https://api.github.com/users/TvoroG/repos", "events_url": "https://api.github.com/users/TvoroG/events{/privacy}", "received_events_url": "https://api.github.com/users/TvoroG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-14T17:10:25Z", "updated_at": "2018-05-30T08:39:31Z", "closed_at": "2017-05-15T11:23:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've tried to build a develop version of project using `python 2.7` and failed.\r\n\r\nHere is the steps to reproduce:\r\n``` shell\r\ngit clone https://github.com/Infinidat/infi.clickhouse_orm.git\r\neasy_install -U infi.projector\r\ncd infi.clickhouse_orm\r\nprojector devenv build\r\n```\r\n\r\nOutput of last command:\r\n```\r\n$ projector devenv build\r\nExecuting /nix/store/7z5xc3xlpzq6w694p9mnxdbdp0rsskvs-python-2.7.13/bin/buildout bootstrap\r\nExecuting buildout bootstrap\r\nExecuting bin/buildout buildout:develop= install setup.py __version__.py\r\nExecuting bin/buildout install development-scripts\r\nzip_safe flag not set; analyzing archive contents...\r\nemport.__init__: module references __path__\r\n\r\nIPython 6.0+ does not support Python 2.6, 2.7, 3.0, 3.1, or 3.2.\r\nWhen using Python 2.7, please install IPython 5.x LTS Long Term Support version.\r\nBeginning with IPython 6.0, Python 3.3 and above is required.\r\n\r\nSee IPython `README.rst` file for more information:\r\n\r\n    https://github.com/ipython/ipython/blob/master/README.rst\r\n\r\nPython sys.version_info(major=2, minor=7, micro=13, releaselevel='final', serial=0) detected.\r\n\r\n\r\nerror: Setup script exited with 1\r\nWhile:\r\n  Installing development-scripts.\r\n  Getting distribution for 'ipython'.\r\n\r\nAn internal error occurred due to a bug in either zc.buildout or in a\r\nrecipe being used:\r\nTraceback (most recent call last):\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/buildout.py\", line 2123, in main\r\n    getattr(buildout, command)(args)\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/buildout.py\", line 796, in install\r\n    installed_files = self[part]._call(recipe.install)\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/buildout.py\", line 1553, in _call\r\n    return f()\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/infi.recipe.console_scripts-0.4-py2.7.egg/infi/recipe/console_scripts/__init__.py\", line 26, in install\r\n    installed_files = super(Scripts, self).install()\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.recipe.egg-2.0.3-py2.7.egg/zc/recipe/egg/egg.py\", line 126, in install\r\n    reqs, ws = self.working_set()\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.recipe.egg-2.0.3-py2.7.egg/zc/recipe/egg/egg.py\", line 84, in working_set\r\n    allow_hosts=self.allow_hosts)\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/easy_install.py\", line 913, in install\r\n    return installer.install(specs, working_set)\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/easy_install.py\", line 665, in install\r\n    for dist in self._get_dist(requirement, ws):\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/easy_install.py\", line 563, in _get_dist\r\n    dists = [_move_to_eggs_dir_and_compile(dist, self._dest)]\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/easy_install.py\", line 1699, in _move_to_eggs_dir_and_compile\r\n    [tmp_loc] = glob.glob(os.path.join(tmp_dest, '*'))\r\nValueError: need more than 0 values to unpack\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/user/.virtualenvs/chorm_test2/bin/projector\", line 11, in <module>\r\n    load_entry_point('infi.projector==1.0.2', 'console_scripts', 'projector')()\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/scripts/__init__.py\", line 10, in projector\r\n    parse_commandline_arguments(argv)\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/commandline_parser/__init__.py\", line 124, in parse_commandline_arguments\r\n    if not any(selected_plugin.parse_commandline_arguments(arguments) for selected_plugin in selected_plugins):\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/commandline_parser/__init__.py\", line 124, in <genexpr>\r\n    if not any(selected_plugin.parse_commandline_arguments(arguments) for selected_plugin in selected_plugins):\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/plugins/__init__.py\", line 27, in parse_commandline_arguments\r\n    method()\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/plugins/builtins/devenv/__init__.py\", line 215, in build\r\n    self.create_scripts()\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/plugins/builtins/devenv/__init__.py\", line 114, in create_scripts\r\n    self.install_sections_by_recipe(\"infi.recipe.console_scripts\")\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/plugins/builtins/devenv/__init__.py\", line 89, in install_sections_by_recipe\r\n    utils.execute_with_buildout(\"install {}\".format(' '.join(sections_to_install)), stripped=stripped)\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/helper/utils/__init__.py\", line 163, in execute_with_buildout\r\n    execute_assert_success([buildout] + BUILDOUT_PARAMETERS + args, env=_env)\r\n  File \"/home/user/.virtualenvs/chorm_test2/lib/python2.7/site-packages/infi.projector-1.0.2-py2.7.egg/infi/projector/helper/utils/__init__.py\", line 72, in execute_assert_success\r\n    raise PrettyExecutionError(result)\r\ninfi.projector.helper.utils.PrettyExecutionError: Execution of ['bin/buildout', 'install', 'development-scripts'] failed!\r\nresult=1\r\nstdout=Develop: '/home/user/programming/test/infi.clickhouse_orm/.'\r\nGetting distribution for 'infi.recipe.console_scripts'.\r\nGot infi.recipe.console-scripts 0.4.\r\nGetting distribution for 'zc.recipe.egg>=2.0.0a3'.\r\nGot zc.recipe.egg 2.0.3.\r\nGetting distribution for 'z3c.recipe.scripts'.\r\nGot z3c.recipe.scripts 1.0.1.\r\nGetting distribution for 'infi.pyutils'.\r\nGot infi.pyutils 1.1.3.\r\nGetting distribution for 'emport'.\r\nGot emport 1.2.0.\r\nGetting distribution for 'mock'.\r\n\r\nInstalled /tmp/easy_install-AZWAS0/mock-2.0.0/.eggs/pbr-3.0.0-py2.7.egg\r\nGot mock 2.0.0.\r\nGetting distribution for 'Logbook>=0.11.0'.\r\nGot Logbook 1.0.0.\r\nGetting distribution for 'pbr>=0.11'.\r\nGot pbr 3.0.0.\r\nGetting distribution for 'funcsigs>=1'.\r\nGot funcsigs 1.0.2.\r\nInstalling development-scripts.\r\nGetting distribution for 'ipython'.\r\nAn error occurred when trying to install /home/user/programming/test/infi.clickhouse_orm/.cache/dist/ipython-6.0.0.tar.gz. Look above this message for any errors that were output by easy_install.\r\n\r\nstderr=zip_safe flag not set; analyzing archive contents...\r\nemport.__init__: module references __path__\r\n\r\nIPython 6.0+ does not support Python 2.6, 2.7, 3.0, 3.1, or 3.2.\r\nWhen using Python 2.7, please install IPython 5.x LTS Long Term Support version.\r\nBeginning with IPython 6.0, Python 3.3 and above is required.\r\n\r\nSee IPython `README.rst` file for more information:\r\n\r\n    https://github.com/ipython/ipython/blob/master/README.rst\r\n\r\nPython sys.version_info(major=2, minor=7, micro=13, releaselevel='final', serial=0) detected.\r\n\r\n\r\nerror: Setup script exited with 1\r\nWhile:\r\n  Installing development-scripts.\r\n  Getting distribution for 'ipython'.\r\n\r\nAn internal error occurred due to a bug in either zc.buildout or in a\r\nrecipe being used:\r\nTraceback (most recent call last):\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/buildout.py\", line 2123, in main\r\n    getattr(buildout, command)(args)\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/buildout.py\", line 796, in install\r\n    installed_files = self[part]._call(recipe.install)\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/buildout.py\", line 1553, in _call\r\n    return f()\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/infi.recipe.console_scripts-0.4-py2.7.egg/infi/recipe/console_scripts/__init__.py\", line 26, in install\r\n    installed_files = super(Scripts, self).install()\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.recipe.egg-2.0.3-py2.7.egg/zc/recipe/egg/egg.py\", line 126, in install\r\n    reqs, ws = self.working_set()\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.recipe.egg-2.0.3-py2.7.egg/zc/recipe/egg/egg.py\", line 84, in working_set\r\n    allow_hosts=self.allow_hosts)\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/easy_install.py\", line 913, in install\r\n    return installer.install(specs, working_set)\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/easy_install.py\", line 665, in install\r\n    for dist in self._get_dist(requirement, ws):\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/easy_install.py\", line 563, in _get_dist\r\n    dists = [_move_to_eggs_dir_and_compile(dist, self._dest)]\r\n  File \"/home/user/programming/test/infi.clickhouse_orm/eggs/zc.buildout-2.9.3-py2.7.egg/zc/buildout/easy_install.py\", line 1699, in _move_to_eggs_dir_and_compile\r\n    [tmp_loc] = glob.glob(os.path.join(tmp_dest, '*'))\r\nValueError: need more than 0 values to unpack\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/31", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/31/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/31/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/31", "id": 224512518, "node_id": "MDU6SXNzdWUyMjQ1MTI1MTg=", "number": 31, "title": "Pandas interface", "user": {"login": "kszucs", "id": 961747, "node_id": "MDQ6VXNlcjk2MTc0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/961747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszucs", "html_url": "https://github.com/kszucs", "followers_url": "https://api.github.com/users/kszucs/followers", "following_url": "https://api.github.com/users/kszucs/following{/other_user}", "gists_url": "https://api.github.com/users/kszucs/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszucs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszucs/subscriptions", "organizations_url": "https://api.github.com/users/kszucs/orgs", "repos_url": "https://api.github.com/users/kszucs/repos", "events_url": "https://api.github.com/users/kszucs/events{/privacy}", "received_events_url": "https://api.github.com/users/kszucs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-26T15:40:30Z", "updated_at": "2017-05-02T07:57:36Z", "closed_at": "2017-05-02T07:57:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance to implement a pandas connector?\r\nAfterwards I intend to use with dask distributed, see issue https://github.com/dask/distributed/issues/337", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/30", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/30/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/30/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/30", "id": 224056354, "node_id": "MDU6SXNzdWUyMjQwNTYzNTQ=", "number": 30, "title": "FixedString field", "user": {"login": "kszucs", "id": 961747, "node_id": "MDQ6VXNlcjk2MTc0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/961747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kszucs", "html_url": "https://github.com/kszucs", "followers_url": "https://api.github.com/users/kszucs/followers", "following_url": "https://api.github.com/users/kszucs/following{/other_user}", "gists_url": "https://api.github.com/users/kszucs/gists{/gist_id}", "starred_url": "https://api.github.com/users/kszucs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kszucs/subscriptions", "organizations_url": "https://api.github.com/users/kszucs/orgs", "repos_url": "https://api.github.com/users/kszucs/repos", "events_url": "https://api.github.com/users/kszucs/events{/privacy}", "received_events_url": "https://api.github.com/users/kszucs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-25T08:12:21Z", "updated_at": "2017-05-11T02:53:37Z", "closed_at": "2017-05-11T02:53:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would You please provide a field for FixedString type?\r\n\r\n```python\r\nNotImplementedError: No field class for FixedString(7)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/29", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/29/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/29/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/29", "id": 223856564, "node_id": "MDU6SXNzdWUyMjM4NTY1NjQ=", "number": 29, "title": "Readonly mode broken", "user": {"login": "tswr", "id": 535720, "node_id": "MDQ6VXNlcjUzNTcyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/535720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswr", "html_url": "https://github.com/tswr", "followers_url": "https://api.github.com/users/tswr/followers", "following_url": "https://api.github.com/users/tswr/following{/other_user}", "gists_url": "https://api.github.com/users/tswr/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswr/subscriptions", "organizations_url": "https://api.github.com/users/tswr/orgs", "repos_url": "https://api.github.com/users/tswr/repos", "events_url": "https://api.github.com/users/tswr/events{/privacy}", "received_events_url": "https://api.github.com/users/tswr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-04-24T15:21:23Z", "updated_at": "2017-05-11T02:54:40Z", "closed_at": "2017-05-11T02:54:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Commit https://github.com/Infinidat/infi.clickhouse_orm/commit/5b03e660486c30222583311dabbc5b170019b5b4 breaks the simplest case of even creating a real Database object with readonly=True.\r\n\r\nResults in `Code: 164, e.displayText() = DB::Exception: Setting 'readonly' cannot be overrided in readonly mode, e.what() = DB::Exception`\r\n\r\n@emakarov please consider reverting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/27", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/27/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/27/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/27", "id": 219700026, "node_id": "MDU6SXNzdWUyMTk3MDAwMjY=", "number": 27, "title": "ModuleNotFoundError: No module named 'cStringIO'", "user": {"login": "moelius", "id": 11311614, "node_id": "MDQ6VXNlcjExMzExNjE0", "avatar_url": "https://avatars2.githubusercontent.com/u/11311614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moelius", "html_url": "https://github.com/moelius", "followers_url": "https://api.github.com/users/moelius/followers", "following_url": "https://api.github.com/users/moelius/following{/other_user}", "gists_url": "https://api.github.com/users/moelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/moelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moelius/subscriptions", "organizations_url": "https://api.github.com/users/moelius/orgs", "repos_url": "https://api.github.com/users/moelius/repos", "events_url": "https://api.github.com/users/moelius/events{/privacy}", "received_events_url": "https://api.github.com/users/moelius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-05T20:08:39Z", "updated_at": "2017-04-06T12:15:24Z", "closed_at": "2017-04-06T12:15:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, after 0.8.1 i have error in database.py: No module named 'cStringIO' with python 3.x\r\nAs i know cStringIO no longer exists in 3.x. May be you can use io.StringIO.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/26", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/26/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/26/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/26", "id": 219552592, "node_id": "MDU6SXNzdWUyMTk1NTI1OTI=", "number": 26, "title": "Very long inserts and MemoryError", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-04-05T11:31:55Z", "updated_at": "2017-04-06T12:15:43Z", "closed_at": "2017-04-06T12:15:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Bulk inserts work very slow via ORM.\r\nI insert 1k of rows into table. Here is the time measure of code:\r\n```\r\nt2 = time.time()\r\nstatsd.timing(statsd_key_prefix + '.import_clickhouse_model_objects.convert', t2 - t1)\r\n\r\nfor model_group in convert_items.values():\r\n     settings.CLICKHOUSE_DB.insert(model_group, batch_size=batch_size)\r\nt3 = time.time()\r\n```\r\nI know, that `convert_items `dict contains only 1 item. So, in fact, only insert is measured.\r\nbatch_size is 1000 here. There are 1000 elements in the list.\r\nI've also tried making batch_size=10000, but the query failed with MemoryError on backend size...\r\n\r\nClickHouse server is not loaded at all (8 cores, 16gb memory). htop doesn't show any activity practically.\r\n\r\nHere is the graph, where you can see inserts are executed 60-100 seconds... Very very slow.\r\n![screenshot](https://cloud.githubusercontent.com/assets/2315339/24703337/43e4b60c-1a1c-11e7-8526-6fcfc872a6b3.png)\r\n\r\nAnother query in my code makes insert from select via `settings.CLICKHOUSE_DB.raw(query)`. It inserts 200 rows and executes for 1-2 seconds only\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/25", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/25/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/25/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/25", "id": 218094004, "node_id": "MDU6SXNzdWUyMTgwOTQwMDQ=", "number": 25, "title": "Bulk import parsing fails", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-30T06:31:38Z", "updated_at": "2017-06-15T12:04:36Z", "closed_at": "2017-06-15T12:04:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying importing multiple data rows into clickhouse. And it is failing with the following error:\r\n```\r\ninfi.clickhouse_orm.database.DatabaseException: Code: 27, e.displayText() = DB::Exception: Cannot parse input: expected \\t before: \\n0\\t52\\t1490853195\\t1490854241\\t471\\t1115\\t8\\t1490854107\\t1490854194\\t1490854194\\t3392\\t1\\n0\\t53\\t1490854114\\t1490854241\\t471\\t1116\\t8\\t1490854114\\t1490854183\\t1490854186\\t3388\\t1\\n0\\t5: (at row 51)\r\n\r\nRow 50:\r\nColumn 0,   name: _version,               type: UInt8,    parsed text: \"0\"\r\nColumn 1,   name: id,                     type: UInt64,   parsed text: \"50\"\r\nColumn 2,   name: created,                type: DateTime, parsed text: \"1490790250\"\r\nColumn 3,   name: closed,                 type: DateTime, parsed text: \"0\"\r\nColumn 4,   name: user_id,                type: UInt64,   parsed text: \"367\"\r\nColumn 5,   name: conversation_id,        type: UInt64,   parsed text: \"1114\"\r\nColumn 6,   name: app_id,                 type: UInt64,   parsed text: \"8\"\r\nColumn 7,   name: first_user_reply_time,  type: DateTime, parsed text: \"0\"\r\nColumn 8,   name: admin_answer_time,      type: DateTime, parsed text: \"0\"\r\nColumn 9,   name: admin_last_answer_time, type: DateTime, parsed text: \"1490790250\"\r\nColumn 10,  name: admin_last_answer_id,   type: UInt64,   parsed text: \"3362\"\r\nColumn 11,  name: sign,                   type: Int8,     parsed text: \"1\"\r\n\r\nRow 51:\r\nColumn 0,   name: _version,               type: UInt8,    parsed text: \"0\"\r\nColumn 1,   name: id,                     type: UInt64,   parsed text: \"51\"\r\nColumn 2,   name: created,                type: DateTime, parsed text: \"1490791652\"\r\nColumn 3,   name: closed,                 type: DateTime, parsed text: \"0<TAB>11<TAB>13<TAB>1<TAB>0<TAB>0<TAB>0<TAB>0<TAB>1\"\r\nERROR: Line feed found where tab is expected. It's like your file has less columns than expected.\r\nAnd if your file have right number of columns, maybe it have unescaped backslash in value before tab, which cause tab has escaped.\r\n\r\n, e.what() = DB::Exception\r\n```\r\nHere are rows 50-52 from my PostgreSQL database:\r\n![screen](https://cloud.githubusercontent.com/assets/2315339/24490536/6cb786b6-153c-11e7-8392-d891dcb4a8d5.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/20", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/20/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/20/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/20", "id": 211885616, "node_id": "MDU6SXNzdWUyMTE4ODU2MTY=", "number": 20, "title": "Native format and simple mapping", "user": {"login": "hunty", "id": 2558143, "node_id": "MDQ6VXNlcjI1NTgxNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2558143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunty", "html_url": "https://github.com/hunty", "followers_url": "https://api.github.com/users/hunty/followers", "following_url": "https://api.github.com/users/hunty/following{/other_user}", "gists_url": "https://api.github.com/users/hunty/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunty/subscriptions", "organizations_url": "https://api.github.com/users/hunty/orgs", "repos_url": "https://api.github.com/users/hunty/repos", "events_url": "https://api.github.com/users/hunty/events{/privacy}", "received_events_url": "https://api.github.com/users/hunty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-04T15:24:24Z", "updated_at": "2017-04-06T12:16:12Z", "closed_at": "2017-04-06T12:16:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using TabSeparatedWithNames format is slower than using Native.\r\nIs it any way to use it?\r\nAlso, I don't need sometimes to use models to fetch data. Just get some collection of str or int\r\nIs it possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/18", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/18/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/18/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/18", "id": 211085846, "node_id": "MDU6SXNzdWUyMTEwODU4NDY=", "number": 18, "title": "Is it possible to create MATERIALIZED fields?", "user": {"login": "hunty", "id": 2558143, "node_id": "MDQ6VXNlcjI1NTgxNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2558143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunty", "html_url": "https://github.com/hunty", "followers_url": "https://api.github.com/users/hunty/followers", "following_url": "https://api.github.com/users/hunty/following{/other_user}", "gists_url": "https://api.github.com/users/hunty/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunty/subscriptions", "organizations_url": "https://api.github.com/users/hunty/orgs", "repos_url": "https://api.github.com/users/hunty/repos", "events_url": "https://api.github.com/users/hunty/events{/privacy}", "received_events_url": "https://api.github.com/users/hunty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-01T13:47:50Z", "updated_at": "2017-04-06T12:16:27Z", "closed_at": "2017-04-06T12:16:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to create MATERIAL fields like `\"createdDate MATERIAL toDate(createdAt)\"`?\r\nIn docs I can find only how to create simple fields with defined types but not expressions.\r\nHow I can describe it in model?\r\nI need such structure:\r\n```\r\nCREATE TABLE subscriptions\r\n   (\r\n       Date DateTime,\r\n       Email String,\r\n       ListId Int32,\r\n       ListName String,\r\n       DateKey Date MATERIALIZED toDate(Date)\r\n   ) ENGINE = MergeTree(DateKey, (Date, Email, ListId), 8192)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/17", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/17/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/17/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/17", "id": 210317040, "node_id": "MDU6SXNzdWUyMTAzMTcwNDA=", "number": 17, "title": "batch size", "user": {"login": "berghauz", "id": 6894941, "node_id": "MDQ6VXNlcjY4OTQ5NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6894941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berghauz", "html_url": "https://github.com/berghauz", "followers_url": "https://api.github.com/users/berghauz/followers", "following_url": "https://api.github.com/users/berghauz/following{/other_user}", "gists_url": "https://api.github.com/users/berghauz/gists{/gist_id}", "starred_url": "https://api.github.com/users/berghauz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berghauz/subscriptions", "organizations_url": "https://api.github.com/users/berghauz/orgs", "repos_url": "https://api.github.com/users/berghauz/repos", "events_url": "https://api.github.com/users/berghauz/events{/privacy}", "received_events_url": "https://api.github.com/users/berghauz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-26T13:05:07Z", "updated_at": "2017-02-26T16:57:14Z", "closed_at": "2017-02-26T16:57:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nWhat reason in batch_size inside\r\ndef insert(self, model_instances, batch_size=1000) if it don't split whole request in batches actually?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/13", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/13/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/13/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/13", "id": 204513003, "node_id": "MDU6SXNzdWUyMDQ1MTMwMDM=", "number": 13, "title": "Invalid datetime conversion (timezone)", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-02-01T07:16:37Z", "updated_at": "2017-02-22T08:57:16Z", "closed_at": "2017-02-22T08:57:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey.\r\n1) I set '2017-01-01 10:00:00' to field, save it to ClickHouse\r\n2) I receive it back, and get datetime(2017, 01, 01 05:00:00).\r\nP. s. my timezone is UTC+05:00 as you understood.\r\nThe reason is in DateTimeField:\r\n```\r\n    def to_db_string(self, value, quote=True):\r\n        return escape(int(time.mktime(value.timetuple())), quote)\r\n```\r\nMethod [time.mktime](https://docs.python.org/2/library/time.html#time.mktime) converts local time, not UTC. \r\nAs I read from clickhouse_orm docs:\r\n> DateTimeField. Always in UTC\r\n\r\nUsing [calendar.timegm](https://docs.python.org/2/library/calendar.html#calendar.timegm) will fix the problem, e. g.:\r\n`calendar.timegm(value.timetuple())`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/10", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/10/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/10/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/10", "id": 203330698, "node_id": "MDU6SXNzdWUyMDMzMzA2OTg=", "number": 10, "title": "Contributing", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-26T09:55:24Z", "updated_at": "2017-01-26T11:08:39Z", "closed_at": "2017-01-26T11:08:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey again, I've written a patch with Materialized and Alias fields, and ready to upload it. But this repo doesn't give me premission to create my own branches. Should I upload to develop? Or how can I gain permissions? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/9", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/9/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/9/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/9", "id": 203080581, "node_id": "MDU6SXNzdWUyMDMwODA1ODE=", "number": 9, "title": "Running tests", "user": {"login": "M1ha-Shvn", "id": 2315339, "node_id": "MDQ6VXNlcjIzMTUzMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2315339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M1ha-Shvn", "html_url": "https://github.com/M1ha-Shvn", "followers_url": "https://api.github.com/users/M1ha-Shvn/followers", "following_url": "https://api.github.com/users/M1ha-Shvn/following{/other_user}", "gists_url": "https://api.github.com/users/M1ha-Shvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/M1ha-Shvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M1ha-Shvn/subscriptions", "organizations_url": "https://api.github.com/users/M1ha-Shvn/orgs", "repos_url": "https://api.github.com/users/M1ha-Shvn/repos", "events_url": "https://api.github.com/users/M1ha-Shvn/events{/privacy}", "received_events_url": "https://api.github.com/users/M1ha-Shvn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-25T11:42:38Z", "updated_at": "2017-01-26T08:37:46Z", "closed_at": "2017-01-26T08:37:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey\r\nI want to add Alias and Materizlized field types to the project.\r\nI've installed everything, written in \"Development\" docs section. Now I'm trying to run tests with:\r\n`bin/nosetests`\r\nAnd receive:\r\n```\r\nRan 0 tests in 0.000s\r\nOK\r\n```\r\nMay be I missed something? Why 0 tests?\r\nWhy can't i run them simply by using unittest?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/8", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/8/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/8/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/8", "id": 193347582, "node_id": "MDU6SXNzdWUxOTMzNDc1ODI=", "number": 8, "title": "SQLAlchemy", "user": {"login": "tomsej", "id": 6624716, "node_id": "MDQ6VXNlcjY2MjQ3MTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6624716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomsej", "html_url": "https://github.com/tomsej", "followers_url": "https://api.github.com/users/tomsej/followers", "following_url": "https://api.github.com/users/tomsej/following{/other_user}", "gists_url": "https://api.github.com/users/tomsej/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomsej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomsej/subscriptions", "organizations_url": "https://api.github.com/users/tomsej/orgs", "repos_url": "https://api.github.com/users/tomsej/repos", "events_url": "https://api.github.com/users/tomsej/events{/privacy}", "received_events_url": "https://api.github.com/users/tomsej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-04T12:13:57Z", "updated_at": "2016-12-05T08:46:39Z", "closed_at": "2016-12-05T08:46:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are you going to support SQLAlchemy? It would be really great!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/4", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/4/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/4/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/4", "id": 175555599, "node_id": "MDU6SXNzdWUxNzU1NTU1OTk=", "number": 4, "title": "batch insert", "user": {"login": "fengyuncrawl", "id": 1631980, "node_id": "MDQ6VXNlcjE2MzE5ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1631980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fengyuncrawl", "html_url": "https://github.com/fengyuncrawl", "followers_url": "https://api.github.com/users/fengyuncrawl/followers", "following_url": "https://api.github.com/users/fengyuncrawl/following{/other_user}", "gists_url": "https://api.github.com/users/fengyuncrawl/gists{/gist_id}", "starred_url": "https://api.github.com/users/fengyuncrawl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fengyuncrawl/subscriptions", "organizations_url": "https://api.github.com/users/fengyuncrawl/orgs", "repos_url": "https://api.github.com/users/fengyuncrawl/repos", "events_url": "https://api.github.com/users/fengyuncrawl/events{/privacy}", "received_events_url": "https://api.github.com/users/fengyuncrawl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-07T17:01:02Z", "updated_at": "2017-01-25T12:23:08Z", "closed_at": "2017-01-25T12:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use Python client to batch insert 10 million data into stand-alone clickhouse, The time spent avg 16min,why so slowly? Compared to use clickhouse-client spent avg 30 secs.\n\ncreate table\uff08id Int64,name String,open_time Date\uff09MergeTree('open_time', ('id','name'))\nwhen I use python client insert list to DB \uff08for example: db.insert([p1,p2,p3...])\uff09\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/2", "repository_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm", "labels_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/2/comments", "events_url": "https://api.github.com/repos/Infinidat/infi.clickhouse_orm/issues/2/events", "html_url": "https://github.com/Infinidat/infi.clickhouse_orm/issues/2", "id": 168505279, "node_id": "MDU6SXNzdWUxNjg1MDUyNzk=", "number": 2, "title": "can't find utils when running with python3 ", "user": {"login": "marekjs", "id": 331691, "node_id": "MDQ6VXNlcjMzMTY5MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/331691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marekjs", "html_url": "https://github.com/marekjs", "followers_url": "https://api.github.com/users/marekjs/followers", "following_url": "https://api.github.com/users/marekjs/following{/other_user}", "gists_url": "https://api.github.com/users/marekjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/marekjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marekjs/subscriptions", "organizations_url": "https://api.github.com/users/marekjs/orgs", "repos_url": "https://api.github.com/users/marekjs/repos", "events_url": "https://api.github.com/users/marekjs/events{/privacy}", "received_events_url": "https://api.github.com/users/marekjs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-31T06:58:25Z", "updated_at": "2016-08-02T07:27:41Z", "closed_at": "2016-08-02T07:27:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can't create table with commands:\n\n```\ndb = Database('analityka')\ndb.create_table(Auction)\n```\n\nI got an error:\n\n```\nfrom infi.clickhouse_orm import models, fields, engines\n  File \"/usr/local/lib/python3.4/dist-packages/infi/clickhouse_orm/models.py\", line 1, in <module>\n    from utils import escape, parse_tsv\nImportError: No module named 'utils'\n```\n\nUbuntu 14.04, Python 3.4\n", "performed_via_github_app": null, "score": 1.0}]}