{"total_count": 171, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/422", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/422/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/422/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/422", "id": 679237606, "node_id": "MDU6SXNzdWU2NzkyMzc2MDY=", "number": 422, "title": "New release needed to work with latest pytest-xdist", "user": {"login": "kbattocchi", "id": 3801192, "node_id": "MDQ6VXNlcjM4MDExOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3801192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbattocchi", "html_url": "https://github.com/kbattocchi", "followers_url": "https://api.github.com/users/kbattocchi/followers", "following_url": "https://api.github.com/users/kbattocchi/following{/other_user}", "gists_url": "https://api.github.com/users/kbattocchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbattocchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbattocchi/subscriptions", "organizations_url": "https://api.github.com/users/kbattocchi/orgs", "repos_url": "https://api.github.com/users/kbattocchi/repos", "events_url": "https://api.github.com/users/kbattocchi/events{/privacy}", "received_events_url": "https://api.github.com/users/kbattocchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-08-14T15:33:51Z", "updated_at": "2020-08-18T17:44:36Z", "closed_at": "2020-08-14T17:21:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Summary\r\n\r\nIf I pip install the latest pytest-xdist and pytest-cov, then I will get failures when running `pytest -n auto --cov=<my directory>` because the latest released pytest-cov (2.10.0) is not compatible with pytest-xdist 2.0.0; this has been fixed by #412 but this PR hasn't made it into any release.\r\n\r\n## Versions\r\n\r\npytest-xdist 2.0.0\r\npytest-cov 2.10.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/417", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/417/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/417/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/417", "id": 649980816, "node_id": "MDU6SXNzdWU2NDk5ODA4MTY=", "number": 417, "title": "LocalPath has no attribute startswith in pytest_load_initial_conftests", "user": {"login": "Erotemic", "id": 3186211, "node_id": "MDQ6VXNlcjMxODYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erotemic", "html_url": "https://github.com/Erotemic", "followers_url": "https://api.github.com/users/Erotemic/followers", "following_url": "https://api.github.com/users/Erotemic/following{/other_user}", "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions", "organizations_url": "https://api.github.com/users/Erotemic/orgs", "repos_url": "https://api.github.com/users/Erotemic/repos", "events_url": "https://api.github.com/users/Erotemic/events{/privacy}", "received_events_url": "https://api.github.com/users/Erotemic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-02T14:35:25Z", "updated_at": "2020-07-12T12:52:03Z", "closed_at": "2020-07-12T12:52:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Summary\r\n\r\nIn my latest version of xdoctest my dashboards are failing in pytest-cov with the error:\r\n\r\n```python\r\n    @pytest.mark.tryfirst\r\n    def pytest_load_initial_conftests(early_config, parser, args):\r\n        options = early_config.known_args_namespace\r\n        no_cov = options.no_cov_should_warn = False\r\n        for arg in args:\r\n            # arg = str(arg)\r\n            if arg == '--no-cov':\r\n                no_cov = True\r\n>           elif arg.startswith('--cov') and no_cov:\r\nE           AttributeError: 'LocalPath' object has no attribute 'startswith'\r\n\r\n/home/joncrall/.local/conda/envs/py38/lib/python3.8/site-packages/pytest_cov/plugin.py:121: AttributeError\r\n```\r\n\r\nThe traceback can be seen here: \r\nhttps://app.circleci.com/pipelines/github/Erotemic/xdoctest/360/workflows/81333393-b945-4d01-9714-4039305e7dce/jobs/1856/steps\r\n\r\n## Expected vs actual result\r\n\r\nI'm not sure if this is a pytest-cov error or not, pytest figures are incredibly hard to debug as they don't really allow for IPython embedding, and you can't make instances of them without running inside the pytest entry point. For whatever reason the `args` passed to the pytest-cov function:\r\n\r\n```python\r\n@pytest.mark.tryfirst\r\ndef pytest_load_initial_conftests(early_config, parser, args):\r\n    options = early_config.known_args_namespace\r\n    no_cov = options.no_cov_should_warn = False\r\n    for arg in args:\r\n        if arg == '--no-cov':\r\n            no_cov = True\r\n        elif arg.startswith('--cov') and no_cov:\r\n            options.no_cov_should_warn = True\r\n            break\r\n\r\n    if early_config.known_args_namespace.cov_source:\r\n        plugin = CovPlugin(options, early_config.pluginmanager)\r\n        early_config.pluginmanager.register(plugin, '_cov')\r\n```\r\n\r\nincludes a non-string LocalPath object, which does not have the startswith method. If we simply force the arg to be a string by adding: `arg = str(arg)` as the first line of the loop everything works as expected. \r\n\r\nAny advice on if this is a pytest-cov bug, a pytest-bug, or a bug in the way I'm using them in xdoctest would be greatly appreciated. I can't seem to find anything in xdoctest that would trigger it, but I also don't see this error report anywhere else, so my suspicion is that its something on my end. But I guess it could also be that I'm the first one to find this, so I figured it wouldn't hurt to submit a bug report. \r\n\r\n\r\n# Reproducer\r\nThis can be reproduced by \r\n\r\n```\r\nmkdir -p $HOME/tmp\r\ncd $HOME/tmp\r\ngit clone git@github.com:Erotemic/xdoctest.git -b dev/0.13.0 $HOME/tmp/xdoctest_0_13_0\r\ncd $HOME/tmp/xdoctest_0_13_0\r\npip install -r requirements.txt -U\r\npytest testing/test_plugin.py::TestXDoctestModuleLevel::test_collect_module_two_doctest_no_modulelevel\r\n```\r\n\r\n## Versions\r\n\r\n```\r\n(py38) joncrall@Ooo:~/tmp/xdoctest_0_13_0$ pytest --version\r\nThis is pytest version 5.4.3, imported from /home/joncrall/.local/conda/envs/py38/lib/python3.8/site-packages/pytest/__init__.py\r\nsetuptools registered plugins:\r\n  pytest-cov-2.10.0 at /home/joncrall/.local/conda/envs/py38/lib/python3.8/site-packages/pytest_cov/plugin.py\r\n  pytest-timeout-1.3.4 at /home/joncrall/.local/conda/envs/py38/lib/python3.8/site-packages/pytest_timeout.py\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/411", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/411/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/411/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/411", "id": 638170955, "node_id": "MDU6SXNzdWU2MzgxNzA5NTU=", "number": 411, "title": "Upcoming incompatibility in pytest-xdist 2.0: \"slave\" aliases removed", "user": {"login": "nicoddemus", "id": 1085180, "node_id": "MDQ6VXNlcjEwODUxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoddemus", "html_url": "https://github.com/nicoddemus", "followers_url": "https://api.github.com/users/nicoddemus/followers", "following_url": "https://api.github.com/users/nicoddemus/following{/other_user}", "gists_url": "https://api.github.com/users/nicoddemus/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoddemus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoddemus/subscriptions", "organizations_url": "https://api.github.com/users/nicoddemus/orgs", "repos_url": "https://api.github.com/users/nicoddemus/repos", "events_url": "https://api.github.com/users/nicoddemus/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoddemus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-13T14:25:11Z", "updated_at": "2020-06-15T09:20:53Z", "closed_at": "2020-06-15T09:20:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi!\r\n\r\nAs per https://github.com/pytest-dev/pytest-xdist/pull/541, pytest-xdist 2.0 will remove the deprecated \"slave\" \r\naliases, which have been replaced by \"worker\" since pytest-xdist 1.22.\r\n\r\nTo avoid breakage, the team suggests to update your package to use the new terms, and make a new release to avoid sudden breakages once pytest-xdist 2.0 is released.\r\n\r\ncc @Zac-HD @RonnyPfannschmidt\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/397", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/397/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/397/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/397", "id": 584109637, "node_id": "MDU6SXNzdWU1ODQxMDk2Mzc=", "number": 397, "title": "Coverage is no longer reported correctly when I register my project as a pytest plugin", "user": {"login": "retr0h", "id": 9895, "node_id": "MDQ6VXNlcjk4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retr0h", "html_url": "https://github.com/retr0h", "followers_url": "https://api.github.com/users/retr0h/followers", "following_url": "https://api.github.com/users/retr0h/following{/other_user}", "gists_url": "https://api.github.com/users/retr0h/gists{/gist_id}", "starred_url": "https://api.github.com/users/retr0h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retr0h/subscriptions", "organizations_url": "https://api.github.com/users/retr0h/orgs", "repos_url": "https://api.github.com/users/retr0h/repos", "events_url": "https://api.github.com/users/retr0h/events{/privacy}", "received_events_url": "https://api.github.com/users/retr0h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T01:58:13Z", "updated_at": "2020-03-19T05:22:29Z", "closed_at": "2020-03-19T05:22:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Summary\r\n\r\nCoverage is no longer reported correctly when I register my project as a pytest plugin\r\n\r\n## Expected vs actual result\r\n\r\nCoverage should not be impacted\r\n\r\n# Reproducer\r\n\r\n## Versions\r\n\r\n* pytest version 5.4.1\r\n* pytest-mock-2.0.0 \r\n* pytest-cov-2.8.1 \r\n\r\n## Config\r\n\r\n```\r\n[pytest]\r\ntestpaths = test/\r\naddopts = -v -rxXs --doctest-modules --cov biased_utils --cov-report term-missing --showlocals\r\nnorecursedirs = dist doc build .tox .eggs\r\n```\r\n\r\n## Code\r\n\r\nWhen simply adding the following to my setup.cfg and execute tests, my coverage is completely thrown off.  I have also removed the contents of `biased_utils/hook/plugin.py`, so it's simply loading the pytest11 entry point, and throwing off coverage.\r\n\r\n```\r\n[options.entry_points]\r\npytest11 =\r\n    pytest11.biased_utils = biased_utils.hook.plugin\r\n```\r\n\r\n```\r\n---------- coverage: platform darwin, python 3.7.3-final-0 -----------\r\nName                       Stmts   Miss  Cover   Missing\r\n--------------------------------------------------------\r\nbiased_utils/__init__.py       6      6     0%   1-8\r\nbiased_utils/cli.py           12      8    33%   1-4, 16, 27, 40, 52-59\r\nbiased_utils/io.py             5      3    40%   1-5\r\nbiased_utils/yaml.py           9      5    44%   1-6, 15, 25\r\n--------------------------------------------------------\r\nTOTAL                         32     22    31%\r\n```\r\n\r\nHowever, if I remove that section from setup.cfg.\r\n\r\n```\r\n---------- coverage: platform darwin, python 3.7.3-final-0 -----------\r\nName                       Stmts   Miss  Cover   Missing\r\n--------------------------------------------------------\r\nbiased_utils/__init__.py       6      0   100%\r\nbiased_utils/cli.py           12      2    83%   58-59\r\nbiased_utils/io.py             5      0   100%\r\nbiased_utils/yaml.py           9      0   100%\r\n--------------------------------------------------------\r\nTOTAL                         32      2    94%\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/394", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/394/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/394/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/394", "id": 577672778, "node_id": "MDU6SXNzdWU1Nzc2NzI3Nzg=", "number": 394, "title": "How could pytest-cov's xml report contains \u201cmethods\u201d keyword\uff1f", "user": {"login": "leafonsword", "id": 1754580, "node_id": "MDQ6VXNlcjE3NTQ1ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1754580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leafonsword", "html_url": "https://github.com/leafonsword", "followers_url": "https://api.github.com/users/leafonsword/followers", "following_url": "https://api.github.com/users/leafonsword/following{/other_user}", "gists_url": "https://api.github.com/users/leafonsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/leafonsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leafonsword/subscriptions", "organizations_url": "https://api.github.com/users/leafonsword/orgs", "repos_url": "https://api.github.com/users/leafonsword/repos", "events_url": "https://api.github.com/users/leafonsword/events{/privacy}", "received_events_url": "https://api.github.com/users/leafonsword/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T05:43:16Z", "updated_at": "2020-03-09T16:27:32Z", "closed_at": "2020-03-09T16:27:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use pytest-cov's xml report to combine with jenkins and Cobertura to generate code coverage rate, and command is `pytest -v --cov=app/controllers/p0_basement/  --cov-report=xml ci_api_test.py`~\r\n\r\nBut Java and maven's xml report contains 6 indexes:\r\n![image](https://user-images.githubusercontent.com/1754580/76185833-6791eb80-620b-11ea-9067-1394f26e527e.png)\r\n\r\nWhile Python and pytest-cov's xml report just contains 5 indexes:\r\n![image](https://user-images.githubusercontent.com/1754580/76185996-e0914300-620b-11ea-82e7-eaa5958243a4.png)\r\n\r\n\r\n\r\nSo could  pytest-cov's xml report contains \u201cmethods\u201d keyword\uff1f\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/392", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/392/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/392/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/392", "id": 573277693, "node_id": "MDU6SXNzdWU1NzMyNzc2OTM=", "number": 392, "title": "Does pytest-cov follow semver?", "user": {"login": "alvassin", "id": 1497444, "node_id": "MDQ6VXNlcjE0OTc0NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1497444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvassin", "html_url": "https://github.com/alvassin", "followers_url": "https://api.github.com/users/alvassin/followers", "following_url": "https://api.github.com/users/alvassin/following{/other_user}", "gists_url": "https://api.github.com/users/alvassin/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvassin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvassin/subscriptions", "organizations_url": "https://api.github.com/users/alvassin/orgs", "repos_url": "https://api.github.com/users/alvassin/repos", "events_url": "https://api.github.com/users/alvassin/events{/privacy}", "received_events_url": "https://api.github.com/users/alvassin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-29T11:28:18Z", "updated_at": "2020-03-02T07:03:32Z", "closed_at": "2020-03-02T07:03:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this package use [semantic versioning](https://semver.org) ([PEP 440](https://www.python.org/dev/peps/pep-0440/#semantic-versioning))? \r\nIs it safe to use ~= requirement operator?\r\n```\r\npytest-cov~=2.8.1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/390", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/390/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/390/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/390", "id": 560193273, "node_id": "MDU6SXNzdWU1NjAxOTMyNzM=", "number": 390, "title": "pytest-cov doesn't read pyproject.toml as coverage config", "user": {"login": "frostming", "id": 16336606, "node_id": "MDQ6VXNlcjE2MzM2NjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/16336606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frostming", "html_url": "https://github.com/frostming", "followers_url": "https://api.github.com/users/frostming/followers", "following_url": "https://api.github.com/users/frostming/following{/other_user}", "gists_url": "https://api.github.com/users/frostming/gists{/gist_id}", "starred_url": "https://api.github.com/users/frostming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frostming/subscriptions", "organizations_url": "https://api.github.com/users/frostming/orgs", "repos_url": "https://api.github.com/users/frostming/repos", "events_url": "https://api.github.com/users/frostming/events{/privacy}", "received_events_url": "https://api.github.com/users/frostming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-05T07:37:49Z", "updated_at": "2020-02-05T10:51:49Z", "closed_at": "2020-02-05T10:51:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Summary\r\n\r\n## Expected vs actual result\r\n\r\nRead pyproject.toml as converage.py does.\r\n\r\n# Reproducer\r\n\r\n## Versions\r\n\r\nOutput of relevant packages `pip list`, `python --version`, `pytest --version` etc.\r\n\r\nMake sure you include complete output of `tox` if you use it (it will show versions of various things).\r\n\r\n## Config\r\n\r\nInclude your `tox.ini`, `pytest.ini`, `.coveragerc`, `setup.cfg` or any relevant configuration.\r\n\r\n## Code\r\n\r\nLink to your repository, gist, pastebin or just paste raw code that illustrates the issue.\r\n\r\nIf you paste raw code make sure you quote it, eg:\r\n\r\n```python\r\ndef foobar():\r\n    pass\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/389", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/389/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/389/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/389", "id": 555078060, "node_id": "MDU6SXNzdWU1NTUwNzgwNjA=", "number": 389, "title": "option to silence coverage console output", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-25T12:09:06Z", "updated_at": "2020-01-25T17:51:14Z", "closed_at": "2020-01-25T17:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "While we want to produce coverage reports we do not want to display anything on console about them. At this moment I seen no option for silenting coverage execution , I always get something like:\r\n\r\n```\r\n---------- coverage: platform darwin, python 2.7.16-final-0 ----------\r\nCoverage XML written to file /Users/ssbarnea/c/os/molecule/.tox/py27-ansible28-unit/log/coverage.xml\r\n```\r\n\r\nI am not if that this counts as a feature request or a request to document a feature but any help would be appreciated. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/386", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/386/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/386/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/386", "id": 550674593, "node_id": "MDU6SXNzdWU1NTA2NzQ1OTM=", "number": 386, "title": "Combine issues in tox examples for coverage 5", "user": {"login": "joshringer", "id": 504709, "node_id": "MDQ6VXNlcjUwNDcwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/504709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshringer", "html_url": "https://github.com/joshringer", "followers_url": "https://api.github.com/users/joshringer/followers", "following_url": "https://api.github.com/users/joshringer/following{/other_user}", "gists_url": "https://api.github.com/users/joshringer/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshringer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshringer/subscriptions", "organizations_url": "https://api.github.com/users/joshringer/orgs", "repos_url": "https://api.github.com/users/joshringer/repos", "events_url": "https://api.github.com/users/joshringer/events{/privacy}", "received_events_url": "https://api.github.com/users/joshringer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-01-16T09:17:53Z", "updated_at": "2020-05-25T06:28:36Z", "closed_at": "2020-05-25T06:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Re: https://github.com/pytest-dev/pytest-cov/commit/d3daf7608a327c10f8b77de462791078a0596434\r\n\r\nI have been looking into this a bit today. It appears from the latest coveragepy source that the only reference to the `[paths]` config\u2014or at least the only reference I could find\u2014is [here](https://github.com/nedbat/coveragepy/blob/coverage-5.0.3/coverage/control.py#L673).\r\nThis means that the filepaths are not combined properly somehow when merely doing `--cov-append` (I'm guessing this difference has something to do with the new db format for the _.coverage_ data file).\r\n\r\nI have managed a workaround by setting a different data file per environment and then combining during the report step, i.e. for _examples/src-layout/tox.ini_:\r\n```ini\r\n...\r\n[testenv]\r\ncommands = pytest --cov {posargs:-vv}\r\nsetenv = \r\n    {py27,py38}: COVERAGE_FILE=.coverage.{envname}\r\n\r\n...\r\n[testenv:report]\r\ncommands =\r\n    coverage combine\r\n    ...\r\n```\r\n\r\nI suspect the \"correct\" fix here is to have pytest-cov respect the `[run] parallel` flag and add a suffix to the data file as vanilla coverage does. This would at least remove the need for the ugly `setenv` above. It would kinda break old behaviour though, needing to add a `coverage combine` down there, so it would probably have to wait for pytest-cov 3.0...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/378", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/378/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/378/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/378", "id": 546160265, "node_id": "MDU6SXNzdWU1NDYxNjAyNjU=", "number": 378, "title": "warning \"Module x was never imported\" when running with xdist (reopen)", "user": {"login": "cjolowicz", "id": 653941, "node_id": "MDQ6VXNlcjY1Mzk0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/653941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjolowicz", "html_url": "https://github.com/cjolowicz", "followers_url": "https://api.github.com/users/cjolowicz/followers", "following_url": "https://api.github.com/users/cjolowicz/following{/other_user}", "gists_url": "https://api.github.com/users/cjolowicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjolowicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjolowicz/subscriptions", "organizations_url": "https://api.github.com/users/cjolowicz/orgs", "repos_url": "https://api.github.com/users/cjolowicz/repos", "events_url": "https://api.github.com/users/cjolowicz/events{/privacy}", "received_events_url": "https://api.github.com/users/cjolowicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-07T08:58:18Z", "updated_at": "2020-05-10T18:21:35Z", "closed_at": "2020-05-10T18:21:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may be the same issue as #212. If you prefer to reopen that issue, I can repost there.\r\n\r\nWhen using `pytest-cov` with `pytest-xdist`, Coverage.py displays the warnings `module-not-imported` and `no-data-collected`, even though coverage does get collected and reported:\r\n\r\n```\r\n$ pytest --cov=foobar -n auto\r\n\r\n=== test session starts ===\r\nplatform darwin -- Python 3.8.1, pytest-5.3.2, py-1.8.1, pluggy-0.13.1\r\nrootdir: /private/tmp/foobar\r\nplugins: xdist-1.31.0, forked-1.1.3, cov-2.8.1\r\ngw0 [1] / gw1 [1] / gw2 [1] / gw3 [1]\r\n.   [100%]\r\nCoverage.py warning: Module foobar was never imported. (module-not-imported)\r\nCoverage.py warning: No data was collected. (no-data-collected)\r\n\r\n\r\n--- coverage: platform darwin, python 3.8.1-final-0 ---\r\nName                                                   Stmts   Miss  Cover\r\n---\r\n.venv/lib/python3.8/site-packages/foobar/__init__.py       1      0   100%\r\n\r\n=== 1 passed in 0.98s ===\r\n```\r\n\r\nRepro: https://github.com/cjolowicz/pytest-cov-issue-378\r\n\r\n```sh\r\ngit clone https://github.com/cjolowicz/pytest-cov-issue-378.git\r\ncd pytest-cov-issue-378/\r\npyenv local 3.8.1\r\npython -m venv .venv\r\nsource .venv/bin/activate\r\npip install -r requirements.txt\r\npip install .\r\npytest --cov=foobar -n auto\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/375", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/375/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/375/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/375", "id": 542376258, "node_id": "MDU6SXNzdWU1NDIzNzYyNTg=", "number": 375, "title": "Example in docs does not paste", "user": {"login": "kpinc", "id": 3226082, "node_id": "MDQ6VXNlcjMyMjYwODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3226082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpinc", "html_url": "https://github.com/kpinc", "followers_url": "https://api.github.com/users/kpinc/followers", "following_url": "https://api.github.com/users/kpinc/following{/other_user}", "gists_url": "https://api.github.com/users/kpinc/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpinc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpinc/subscriptions", "organizations_url": "https://api.github.com/users/kpinc/orgs", "repos_url": "https://api.github.com/users/kpinc/repos", "events_url": "https://api.github.com/users/kpinc/events{/privacy}", "received_events_url": "https://api.github.com/users/kpinc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-25T19:02:55Z", "updated_at": "2019-12-26T10:10:34Z", "closed_at": "2019-12-26T10:10:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThe example command line in:\r\nhttps://pytest-cov.readthedocs.io/en/latest/plugins.html\r\n\r\ndoes not paste.  The double dashes are converted\r\nto some sort of unicode codepoint.\r\n\r\nI have not looked elsewhere in the docs to see if\r\nthere are other similar problems.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/374", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/374/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/374/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/374", "id": 538334202, "node_id": "MDU6SXNzdWU1MzgzMzQyMDI=", "number": 374, "title": "Possibility to avoid .coverage generation", "user": {"login": "roipoussiere", "id": 1665542, "node_id": "MDQ6VXNlcjE2NjU1NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1665542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roipoussiere", "html_url": "https://github.com/roipoussiere", "followers_url": "https://api.github.com/users/roipoussiere/followers", "following_url": "https://api.github.com/users/roipoussiere/following{/other_user}", "gists_url": "https://api.github.com/users/roipoussiere/gists{/gist_id}", "starred_url": "https://api.github.com/users/roipoussiere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roipoussiere/subscriptions", "organizations_url": "https://api.github.com/users/roipoussiere/orgs", "repos_url": "https://api.github.com/users/roipoussiere/repos", "events_url": "https://api.github.com/users/roipoussiere/events{/privacy}", "received_events_url": "https://api.github.com/users/roipoussiere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-16T10:50:49Z", "updated_at": "2020-01-17T15:53:52Z", "closed_at": "2019-12-16T15:41:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "With this command:\r\n\r\n```\r\npytest --cov=app --cov-report=xml --junitxml $PYTEST_XML_PATH\r\n```\r\n\r\nI explicitly want to generate an xml file, but a `.coverage` file is also generated. It could be nice to have the possibility to don't generate this file, for instance with a `--no-cov-file` (or similar) option.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/372", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/372/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/372/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/372", "id": 537710989, "node_id": "MDU6SXNzdWU1Mzc3MTA5ODk=", "number": 372, "title": "Failure to capture correct coverage of pytest plugin", "user": {"login": "adamtheturtle", "id": 797801, "node_id": "MDQ6VXNlcjc5NzgwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/797801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamtheturtle", "html_url": "https://github.com/adamtheturtle", "followers_url": "https://api.github.com/users/adamtheturtle/followers", "following_url": "https://api.github.com/users/adamtheturtle/following{/other_user}", "gists_url": "https://api.github.com/users/adamtheturtle/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamtheturtle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamtheturtle/subscriptions", "organizations_url": "https://api.github.com/users/adamtheturtle/orgs", "repos_url": "https://api.github.com/users/adamtheturtle/repos", "events_url": "https://api.github.com/users/adamtheturtle/events{/privacy}", "received_events_url": "https://api.github.com/users/adamtheturtle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-13T18:47:49Z", "updated_at": "2020-01-14T15:03:37Z", "closed_at": "2020-01-14T15:03:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "## My use case\r\n\r\n* I am developing a new pytest plugin, and am a happy user of `pytest-cov` in many projects (:pray:).\r\n* I wish to enforce 100% line coverage for the plugin, and measure this with `pytest-cov`.\r\n* Problem: import lines and function definition lines are not counted for a file which is a `pytest11` entry point. I believe that this is a bug but maybe I need some different configuration?\r\n\r\n## Small sample reproducer\r\n\r\n### Files for reproducer\r\n\r\n```\r\n.\r\n\u251c\u2500\u2500 new_plugin_package\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my_plugin.py\r\n\u251c\u2500\u2500 setup.py\r\n\u2514\u2500\u2500 tests\r\n    \u2514\u2500\u2500 test_example.py\r\n```\r\n\r\n#### `setup.py`\r\n\r\n```python\r\nfrom setuptools import setup\r\n\r\nsetup(\r\n    packages=['new_plugin_package'],\r\n    install_requires=['pytest', 'pytest-cov'],\r\n    entry_points={'pytest11': ['new_plugin = new_plugin_package.my_plugin']},\r\n)\r\n```\r\n\r\n#### `tests/test_example.py`\r\n\r\n```python\r\ndef test_new_fixture(new_fixture: int) -> None:\r\n    assert new_fixture == 10\r\n```\r\n\r\n#### `new_plugin_package/my_plugin.py`\r\n\r\n```python\r\nimport pytest\r\n\r\n@pytest.fixture()\r\ndef new_fixture() -> int:\r\n    return 10\r\n```\r\n\r\n### Error reproduction\r\n\r\n```\r\n# In a Python 3.7 virtualenv\r\n$ pip install --editable .\r\n...\r\n$ pytest --cov tests/ --cov new_plugin_package/ --cov-report term-missing\r\n============================================================================================= test session starts ==============================================================================================\r\nplatform darwin -- Python 3.7.5, pytest-5.3.1, py-1.8.0, pluggy-0.13.1\r\nrootdir: /Users/adam/Desktop/pytest-cov-example\r\nplugins: cov-2.8.1, UNKNOWN-0.0.0\r\ncollected 1 item                                                                                                                                                                                               \r\n\r\ntests/test_example.py .                                                                                                                                                                                  [100%]\r\n\r\n---------- coverage: platform darwin, python 3.7.5-final-0 -----------\r\nName                              Stmts   Miss  Cover   Missing\r\n---------------------------------------------------------------\r\nnew_plugin_package/my_plugin.py       4      3    25%   1-4\r\ntests/test_example.py                 2      0   100%\r\n---------------------------------------------------------------\r\nTOTAL                                 6      3    50%\r\n\r\n\r\n============================================================================================== 1 passed in 0.03s ===============================================================================================\r\n```\r\n\r\nExpectation: Both files show 100% coverage.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/368", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/368/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/368/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/368", "id": 528769067, "node_id": "MDU6SXNzdWU1Mjg3NjkwNjc=", "number": 368, "title": "Branch coverage on `continue` statement", "user": {"login": "ludaavics", "id": 1891756, "node_id": "MDQ6VXNlcjE4OTE3NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1891756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ludaavics", "html_url": "https://github.com/ludaavics", "followers_url": "https://api.github.com/users/ludaavics/followers", "following_url": "https://api.github.com/users/ludaavics/following{/other_user}", "gists_url": "https://api.github.com/users/ludaavics/gists{/gist_id}", "starred_url": "https://api.github.com/users/ludaavics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ludaavics/subscriptions", "organizations_url": "https://api.github.com/users/ludaavics/orgs", "repos_url": "https://api.github.com/users/ludaavics/repos", "events_url": "https://api.github.com/users/ludaavics/events{/privacy}", "received_events_url": "https://api.github.com/users/ludaavics/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-26T14:40:42Z", "updated_at": "2019-11-26T22:01:46Z", "closed_at": "2019-11-26T22:01:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nNot sure if this is a feature or a bug, but the following snippet reports `3->5` as missing coverage  ...\r\n```python\r\ndef my_func(x):\r\n    for i in range(10):\r\n        if i > 3:\r\n            print(\"Doing some work\")\r\n        continue\r\n\r\n\r\n# in the test suite\r\nimport foo\r\n\r\ndef test_foo():\r\n    bar = foo.my_func(5)\r\n```\r\n\r\n... while the following code gives 100% branch test coverage\r\n```python\r\ndef my_func(x):\r\n    for i in range(10):\r\n        if i > 3:\r\n            print(\"Doing some work\")\r\n        print(\"Doing nothing\")\r\n        continue\r\n```\r\n\r\n\r\nI realize the example above is a bit contrived, since there is nothing after the `continue`, but seems like the first snippet should have full test coverage?\r\n\r\n\r\nIt seems there is something about the no-op statements, since the following also report missing coverage:\r\n\r\n```python\r\ndef my_func(x):\r\n    for i in range(10):\r\n        if i > 3:\r\n            print(\"Doing some work\")\r\n        pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/365", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/365/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/365/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/365", "id": 527461779, "node_id": "MDU6SXNzdWU1Mjc0NjE3Nzk=", "number": 365, "title": "Fix CI", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-22T23:26:18Z", "updated_at": "2020-01-12T18:07:11Z", "closed_at": "2020-01-12T18:07:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "CI is currently broken.\r\n\r\nOne of the main reasons might be https://github.com/pytest-dev/pytest-xdist/pull/448#discussion_r330989777, but it looks like there is more.\r\n\r\nThis is meant to keep track of issues in this regard, and IMHO should have high priority, since it makes even trivial PRs unnecessarily \"red\" / failing, and even the latests PRs and releases have been done with red CI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/362", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/362/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/362/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/362", "id": 525230862, "node_id": "MDU6SXNzdWU1MjUyMzA4NjI=", "number": 362, "title": "Improve debuggability in event of test failure", "user": {"login": "ellbosch", "id": 4683017, "node_id": "MDQ6VXNlcjQ2ODMwMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4683017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellbosch", "html_url": "https://github.com/ellbosch", "followers_url": "https://api.github.com/users/ellbosch/followers", "following_url": "https://api.github.com/users/ellbosch/following{/other_user}", "gists_url": "https://api.github.com/users/ellbosch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellbosch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellbosch/subscriptions", "organizations_url": "https://api.github.com/users/ellbosch/orgs", "repos_url": "https://api.github.com/users/ellbosch/repos", "events_url": "https://api.github.com/users/ellbosch/events{/privacy}", "received_events_url": "https://api.github.com/users/ellbosch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-11-19T19:55:45Z", "updated_at": "2019-11-19T23:32:58Z", "closed_at": "2019-11-19T22:56:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "pytest with code coverage enabled won't provide useful contextual information provided normally by pytest. This makes debugging failures especially difficult.\r\n\r\nAs an example: with code coverage enabled I may see the following failure:\r\n```\r\n        try:\r\n            list(client.execute_query(create_stored_proc))\r\n            row_counts = []\r\n            for rows, _, _, _, is_error in client.execute_query(exec_stored_proc):\r\n                row_counts.append(len(rows))\r\n>           assert row_counts[0] != 2\r\nE           assert 2 != 2\r\n\r\ntests/test_mssqlcliclient.py:190: AssertionError\r\n```\r\n\r\nBut if I run the same test without coverage reports (normal `pytest` call) I get a lot of great info for debugging:\r\n```\r\n        try:\r\n            list(client.execute_query(create_stored_proc))\r\n            row_counts = []\r\n            for rows, _, _, _, is_error in client.execute_query(exec_stored_proc):\r\n                row_counts.append(len(rows))\r\n>           assert row_counts[0] != 2\r\nE           assert 2 != 2\r\n\r\n_          = 'EXEC sp_mssqlcli_multiple_results'\r\nclient     = <mssqlcli.mssqlcliclient.MssqlCliClient object at 0x102ff6d90>\r\ncreate_stored_proc = \"CREATE PROC sp_mssqlcli_multiple_results AS BEGIN SELECT 'Morning' as [Name] UNION ALL select 'Evening' SELECT 'Dawn' as [Name] UNION ALL select 'Dusk' UNION ALL select 'Midnight' END\"\r\ndel_stored_proc = 'DROP PROCEDURE sp_mssqlcli_multiple_results'\r\nexec_stored_proc = 'EXEC sp_mssqlcli_multiple_results'\r\nis_error   = False\r\nrow_counts = [2, 3]\r\nrows       = [['Dawn'], ['Dusk'], ['Midnight']]\r\n\r\ntests/test_mssqlcliclient.py:190: AssertionError\r\n```\r\n\r\nIs there any way I can get a stack trace similar to the below example?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/359", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/359/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/359/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/359", "id": 520025926, "node_id": "MDU6SXNzdWU1MjAwMjU5MjY=", "number": 359, "title": "Coverage report missed \u00abimport time\u00bb statements on pytest plugin project", "user": {"login": "pohmelie", "id": 2385765, "node_id": "MDQ6VXNlcjIzODU3NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2385765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pohmelie", "html_url": "https://github.com/pohmelie", "followers_url": "https://api.github.com/users/pohmelie/followers", "following_url": "https://api.github.com/users/pohmelie/following{/other_user}", "gists_url": "https://api.github.com/users/pohmelie/gists{/gist_id}", "starred_url": "https://api.github.com/users/pohmelie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pohmelie/subscriptions", "organizations_url": "https://api.github.com/users/pohmelie/orgs", "repos_url": "https://api.github.com/users/pohmelie/repos", "events_url": "https://api.github.com/users/pohmelie/events{/privacy}", "received_events_url": "https://api.github.com/users/pohmelie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-08T13:51:58Z", "updated_at": "2019-11-08T14:27:45Z", "closed_at": "2019-11-08T14:27:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I write a plugin for pytest. Register it with `pytest` entrypoint in my setup.cfg file. Wrote some tests which works as expected, but coverage report shows that missed lines are those which evaluates at import time (decorators, `def`, `async def`, imports, etc.).  \r\nAFAIR, since this is a plugin for pytest and it is actually installed (in editable mode `-e`) import happens on pytest load and not counts by coverage plugin.  \r\nI hope this is known problem and there is an easy solution, since other plugin projects works somehow with coverage.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/355", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/355/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/355/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/355", "id": 514197738, "node_id": "MDU6SXNzdWU1MTQxOTc3Mzg=", "number": 355, "title": "exclude coverage report from command line?", "user": {"login": "SHxKM", "id": 6573474, "node_id": "MDQ6VXNlcjY1NzM0NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6573474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SHxKM", "html_url": "https://github.com/SHxKM", "followers_url": "https://api.github.com/users/SHxKM/followers", "following_url": "https://api.github.com/users/SHxKM/following{/other_user}", "gists_url": "https://api.github.com/users/SHxKM/gists{/gist_id}", "starred_url": "https://api.github.com/users/SHxKM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SHxKM/subscriptions", "organizations_url": "https://api.github.com/users/SHxKM/orgs", "repos_url": "https://api.github.com/users/SHxKM/repos", "events_url": "https://api.github.com/users/SHxKM/events{/privacy}", "received_events_url": "https://api.github.com/users/SHxKM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-29T20:20:56Z", "updated_at": "2019-10-29T21:12:43Z", "closed_at": "2019-10-29T21:12:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Everytime I invoke pytest from the command-line:\r\n\r\n```\r\npytest -k \"some_example\"\r\n```\r\n\r\nMy coverage report is reset to reflect that only tests matching \"some_example\" are covered. This is understandable given my `pytest.ini` file:\r\n\r\n```ini\r\naddopts = --cov=. --cov-report=html\r\n```\r\n\r\nHow can I keep the settings in my `ini` but still have the ability to skip `cov` on-demand?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/352", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/352/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/352/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/352", "id": 512126932, "node_id": "MDU6SXNzdWU1MTIxMjY5MzI=", "number": 352, "title": "pytest-cov fails if we use os.chdir without changing it back to original working dir before tests finish running", "user": {"login": "jcuna", "id": 5770133, "node_id": "MDQ6VXNlcjU3NzAxMzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5770133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcuna", "html_url": "https://github.com/jcuna", "followers_url": "https://api.github.com/users/jcuna/followers", "following_url": "https://api.github.com/users/jcuna/following{/other_user}", "gists_url": "https://api.github.com/users/jcuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcuna/subscriptions", "organizations_url": "https://api.github.com/users/jcuna/orgs", "repos_url": "https://api.github.com/users/jcuna/repos", "events_url": "https://api.github.com/users/jcuna/events{/privacy}", "received_events_url": "https://api.github.com/users/jcuna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-24T19:07:05Z", "updated_at": "2019-10-24T20:52:58Z", "closed_at": "2019-10-24T20:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you run tests on a script that performs `os.chdir` and does not return to original working dir, your pytest-cov will throw `INTERNALERROR` exceptions. A workaround is just to return to the original directory at the end of the script being tested.\r\n\r\nI think that the pytest engine should itself save the initial working dir and return to it if it changed. I do not know yet if there're other side effects to this but if there are, then make the debug trace explain that the initial working dir changed since running the tests.\r\n\r\n~~~~\r\n\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 213, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 257, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pytest_cov/plugin.py\", line 254, in pytest_runtestloop\r\nINTERNALERROR>     self.cov_controller.finish()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pytest_cov/engine.py\", line 197, in finish\r\nINTERNALERROR>     self.cov.stop()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/coverage/control.py\", line 675, in load\r\nINTERNALERROR>     self._init()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/coverage/control.py\", line 223, in _init\r\nINTERNALERROR>     set_relative_directory()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/coverage/files.py\", line 28, in set_relative_directory\r\nINTERNALERROR>     RELATIVE_DIR = os.path.normcase(abs_file(os.curdir) + os.sep)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/coverage/files.py\", line 163, in abs_file\r\nINTERNALERROR>     path = os.path.realpath(path)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/posixpath.py\", line 396, in realpath\r\nINTERNALERROR>     return abspath(path)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/posixpath.py\", line 383, in abspath\r\nINTERNALERROR>     cwd = os.getcwd()\r\nINTERNALERROR> FileNotFoundError: [Errno 2] No such file or directory\r\n\r\n~~~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/348", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/348/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/348/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/348", "id": 502762630, "node_id": "MDU6SXNzdWU1MDI3NjI2MzA=", "number": 348, "title": "pytest-cov 2.8.0 --cov-fail-under reports 0% coverage on Python 3", "user": {"login": "interifter", "id": 6599715, "node_id": "MDQ6VXNlcjY1OTk3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6599715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/interifter", "html_url": "https://github.com/interifter", "followers_url": "https://api.github.com/users/interifter/followers", "following_url": "https://api.github.com/users/interifter/following{/other_user}", "gists_url": "https://api.github.com/users/interifter/gists{/gist_id}", "starred_url": "https://api.github.com/users/interifter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/interifter/subscriptions", "organizations_url": "https://api.github.com/users/interifter/orgs", "repos_url": "https://api.github.com/users/interifter/repos", "events_url": "https://api.github.com/users/interifter/events{/privacy}", "received_events_url": "https://api.github.com/users/interifter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-10-04T17:44:39Z", "updated_at": "2019-12-09T15:25:53Z", "closed_at": "2019-10-05T15:01:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "This was working well. up to v2.7.1.\r\nMy actual code coverage is 82%, which is accurately reported when I don't include --cov-fail-under\r\n**Command:** pytest tests/unit -v --cov mypkg --cov-report=html -r s -n 4 --cov-fail-under 80 --junit-xml=unit_test_results.xml\r\n\r\n**Error:**  FAIL Required test coverage of 80% not reached. Total coverage: 0.00%\r\n\r\n**Environment/s Reproduced in:**\r\n* Local: Windows 10 RS3 / Python 3.7.4\r\n* Cloudbees Jenkins: Windows Server 2016 / Python 3.6\r\n\r\n**To Reproduce:**\r\n\r\n1. python -m venv venv\r\n2. venv/scripts/activate\r\n3. pip install -e \".[test]\" --upgrade (see setup.py)\r\n4. pytest tests/unit -v --cov mypkg --cov-report=html -r s -n 4 --cov-fail-under 80 --junit-xml=unit_test_results.xml\r\n5. Observe failure.\r\n\r\n**To Work Around:**\r\n1. Remove --cov-fail-under 80 from command\r\n2. Observe coverage report provides correct coverage.\r\nsetup.py:\r\n\r\n\r\n```\r\nBUILD_NUM = os.environ.get('BUILD_NUMBER', '0')\r\nVERSION = \"0.2.0.{}\".format(BUILD_NUM)\r\n\r\n# setting pytest-cov to 2.7.1 to avoid issue\r\nTEST_REQUIREMENTS = ['pytest', 'pytest-xdist', 'coverage', 'pytest-cov<=2.7.1', 'pylint-fail-under', 'pylint']\r\n\r\nsetup(\r\n        name=\"mypkg\",\r\n        version=VERSION,\r\n        description=\"description\",\r\n        packages=find_packages(\r\n            exclude='tests/'\r\n        ),\r\n        tests_require=TEST_REQUIREMENTS,\r\n        install_requires=[\r\n            'requests',\r\n            'requests_negotiate_sspi',\r\n            'wincertstore',\r\n            'click'\r\n            ],\r\n        extras_require={\r\n\r\n\r\n            'test':TEST_REQUIREMENTS,\r\n            'prototyping':'jupyter',\r\n        })\r\n```\r\n\r\npip list\r\n```\r\nPackage                 Version   Location\r\n----------------------- --------- ----------------------------\r\napipkg                  1.5\r\nasn1crypto              0.24.0\r\nastroid                 2.2.5\r\natomicwrites            1.3.0\r\nattrs                   19.1.0\r\nbackcall                0.1.0\r\nbcrypt                  3.1.7\r\nbleach                  3.1.0\r\ncertifi                 2019.6.16\r\ncffi                    1.12.3\r\nchardet                 3.0.4\r\nClick                   7.0\r\ncolorama                0.4.1\r\ncoverage                4.5.4\r\ncryptography            2.7\r\ndecorator               4.4.0\r\ndefusedxml              0.6.0\r\nentrypoints             0.3\r\nexecnet                 1.7.1\r\nidna                    2.8\r\nimportlib-metadata      0.21\r\nipykernel               5.1.2\r\nipython                 7.8.0\r\nipython-genutils        0.2.0\r\nipywidgets              7.5.1\r\nisort                   4.3.21\r\njedi                    0.15.1\r\nJinja2                  2.10.1\r\njsonschema              3.0.2\r\njupyter                 1.0.0\r\njupyter-client          5.3.1\r\njupyter-console         6.0.0\r\njupyter-core            4.5.0\r\nlazy-object-proxy       1.4.2\r\nMarkupSafe              1.1.1\r\nmccabe                  0.6.1\r\nmistune                 0.8.4\r\nmore-itertools          7.2.0\r\nnbconvert               5.6.0\r\nnbformat                4.4.0\r\nnotebook                6.0.1\r\npackaging               19.1\r\npandocfilters           1.4.2\r\nparamiko                2.6.0\r\nparso                   0.5.1\r\npickleshare             0.7.5\r\npip                     19.0.3\r\npluggy                  0.13.0\r\nprometheus-client       0.7.1\r\nprompt-toolkit          2.0.9\r\npy                      1.8.0\r\nmypkg               0.2.0.0   d:\\code\\owr\\devops\\mypkg\r\npycparser               2.19\r\nPygments                2.4.2\r\npylint                  2.3.1\r\npylint-fail-under       0.2.0\r\nPyNaCl                  1.3.0\r\npyparsing               2.4.2\r\npypiwin32               223\r\npyrsistent              0.15.4\r\npytest                  5.1.2\r\npytest-cov              2.8.0 # directly upgraded to repro locally\r\npytest-forked           1.0.2\r\npytest-xdist            1.29.0\r\npython-dateutil         2.8.0\r\npywin32                 224\r\npywinpty                0.5.5\r\npyzmq                   18.1.0\r\nqtconsole               4.5.5\r\nrequests                2.22.0\r\nrequests-negotiate-sspi 0.5.2\r\nSend2Trash              1.5.0\r\nsetuptools              40.8.0\r\nsix                     1.12.0\r\nterminado               0.8.2\r\ntestpath                0.4.2\r\ntornado                 6.0.3\r\ntraitlets               4.3.2\r\ntyped-ast               1.4.0\r\nurllib3                 1.25.3\r\nwcwidth                 0.1.7\r\nwebencodings            0.5.1\r\nwidgetsnbextension      3.5.1\r\nwincertstore            0.2\r\nwrapt                   1.11.2\r\nzipp                    0.6.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/346", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/346/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/346/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/346", "id": 501583483, "node_id": "MDU6SXNzdWU1MDE1ODM0ODM=", "number": 346, "title": "Error: FileNotFoundError: [Errno 2] No such file or directory", "user": {"login": "prsolucoes", "id": 395096, "node_id": "MDQ6VXNlcjM5NTA5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/395096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prsolucoes", "html_url": "https://github.com/prsolucoes", "followers_url": "https://api.github.com/users/prsolucoes/followers", "following_url": "https://api.github.com/users/prsolucoes/following{/other_user}", "gists_url": "https://api.github.com/users/prsolucoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/prsolucoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prsolucoes/subscriptions", "organizations_url": "https://api.github.com/users/prsolucoes/orgs", "repos_url": "https://api.github.com/users/prsolucoes/repos", "events_url": "https://api.github.com/users/prsolucoes/events{/privacy}", "received_events_url": "https://api.github.com/users/prsolucoes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-02T16:03:30Z", "updated_at": "2019-10-24T20:52:49Z", "closed_at": "2019-10-24T20:52:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im getting the following error and i don't know why:\r\n\r\n```\r\nplatform darwin -- Python 3.7.4, pytest-5.2.0, py-1.7.0, pluggy-0.13.0\r\nrootdir: /Users/paulo/Developer/workspaces/python/mytool\r\nplugins: cov-2.7.1\r\ncollected 27 items                                                                                                                                                                                         \r\n\r\ntests/test_cli.py ...                                                                                                                                                                                [ 11%]\r\ntests/commands/test_base.py .                                                                                                                                                                        [ 14%]\r\ntests/commands/test_generate.py ....                                                                                                                                                                 [ 29%]\r\ntests/models/test_constants.py .                                                                                                                                                                     [ 33%]\r\ntests/models/test_logger.py .........                                                                                                                                                                [ 66%]\r\ntests/models/util/test_file_util.py .......                                                                                                                                                          [ 92%]\r\ntests/models/util/test_generator_util.py ..                                                                                                                                                          [100%]\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 191, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 235, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pytest_cov/plugin.py\", line 229, in pytest_runtestloop\r\nINTERNALERROR>     self.cov_controller.finish()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pytest_cov/engine.py\", line 171, in finish\r\nINTERNALERROR>     self.cov.stop()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/coverage/control.py\", line 675, in load\r\nINTERNALERROR>     self._init()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/coverage/control.py\", line 223, in _init\r\nINTERNALERROR>     set_relative_directory()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/coverage/files.py\", line 28, in set_relative_directory\r\nINTERNALERROR>     RELATIVE_DIR = os.path.normcase(abs_file(os.curdir) + os.sep)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/coverage/files.py\", line 163, in abs_file\r\nINTERNALERROR>     path = os.path.realpath(path)\r\nINTERNALERROR>   File \"/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/posixpath.py\", line 396, in realpath\r\nINTERNALERROR>     return abspath(path)\r\nINTERNALERROR>   File \"/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/posixpath.py\", line 383, in abspath\r\nINTERNALERROR>     cwd = os.getcwd()\r\nINTERNALERROR> FileNotFoundError: [Errno 2] No such file or directory\r\n\r\n============================================================================================ 27 passed in 3.10s ============================================================================================\r\nmake: *** [test-cov] Error 3\r\n```\r\n\r\nCan anyone help me?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/340", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/340/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/340/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/340", "id": 495090140, "node_id": "MDU6SXNzdWU0OTUwOTAxNDA=", "number": 340, "title": "When run the pytest i got the issue", "user": {"login": "thileepand", "id": 20831633, "node_id": "MDQ6VXNlcjIwODMxNjMz", "avatar_url": "https://avatars0.githubusercontent.com/u/20831633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thileepand", "html_url": "https://github.com/thileepand", "followers_url": "https://api.github.com/users/thileepand/followers", "following_url": "https://api.github.com/users/thileepand/following{/other_user}", "gists_url": "https://api.github.com/users/thileepand/gists{/gist_id}", "starred_url": "https://api.github.com/users/thileepand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thileepand/subscriptions", "organizations_url": "https://api.github.com/users/thileepand/orgs", "repos_url": "https://api.github.com/users/thileepand/repos", "events_url": "https://api.github.com/users/thileepand/events{/privacy}", "received_events_url": "https://api.github.com/users/thileepand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-18T09:05:30Z", "updated_at": "2019-09-23T07:16:01Z", "closed_at": "2019-09-22T18:29:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "INTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/_pytest/main.py\", line 213, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/_pytest/main.py\", line 256, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/pluggy/hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/_pytest/main.py\", line 266, in pytest_collection\r\nINTERNALERROR>     return session.perform_collect()\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/_pytest/main.py\", line 460, in perform_collect\r\nINTERNALERROR>     self.config.pluginmanager.check_pending()\r\nINTERNALERROR>   File \"/home/thileepan/api/lib/python3.5/site-packages/pluggy/manager.py\", line 270, in check_pending\r\nINTERNALERROR>     % (name, hookimpl.plugin),\r\nINTERNALERROR> pluggy.manager.PluginValidationError: unknown hook 'pytest_namespace' in plugin <module 'allure.pytest_plugin' from '/home/thileepan/api/lib/python3.5/site-packages/allure/pytest_plugin.py'>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/329", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/329/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/329/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/329", "id": 487581707, "node_id": "MDU6SXNzdWU0ODc1ODE3MDc=", "number": 329, "title": "Coverage report run under docker reports incorrect source", "user": {"login": "mcaulifn", "id": 16712138, "node_id": "MDQ6VXNlcjE2NzEyMTM4", "avatar_url": "https://avatars0.githubusercontent.com/u/16712138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcaulifn", "html_url": "https://github.com/mcaulifn", "followers_url": "https://api.github.com/users/mcaulifn/followers", "following_url": "https://api.github.com/users/mcaulifn/following{/other_user}", "gists_url": "https://api.github.com/users/mcaulifn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcaulifn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcaulifn/subscriptions", "organizations_url": "https://api.github.com/users/mcaulifn/orgs", "repos_url": "https://api.github.com/users/mcaulifn/repos", "events_url": "https://api.github.com/users/mcaulifn/events{/privacy}", "received_events_url": "https://api.github.com/users/mcaulifn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-30T16:56:48Z", "updated_at": "2019-09-24T19:27:42Z", "closed_at": "2019-09-24T19:27:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to generate a coverage report for SonarQube. The project is built and tested using a container. The xml file has the source listed `<source>/build/project</source>` where as the actual files are under `/data/jenkins/workspace/project/lambda`. Is there a way to re-write the source when generating the report? python and libraries are not available outside the container as this is a Jenkins instance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/312", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/312/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/312/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/312", "id": 475139842, "node_id": "MDU6SXNzdWU0NzUxMzk4NDI=", "number": 312, "title": "Support for dynamic contexts", "user": {"login": "sidps", "id": 9342606, "node_id": "MDQ6VXNlcjkzNDI2MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9342606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidps", "html_url": "https://github.com/sidps", "followers_url": "https://api.github.com/users/sidps/followers", "following_url": "https://api.github.com/users/sidps/following{/other_user}", "gists_url": "https://api.github.com/users/sidps/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidps/subscriptions", "organizations_url": "https://api.github.com/users/sidps/orgs", "repos_url": "https://api.github.com/users/sidps/repos", "events_url": "https://api.github.com/users/sidps/events{/privacy}", "received_events_url": "https://api.github.com/users/sidps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-31T13:18:22Z", "updated_at": "2019-07-31T14:24:20Z", "closed_at": "2019-07-31T14:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Coverage.py supports [dynamic contexts](https://coverage.readthedocs.io/en/latest/contexts.html#dynamic-contexts).\r\n\r\nHowever, setting those options in `.coveragerc`, while using with the `pytest-cov` plugin, throws errors like so:\r\n```\r\ncoverage.misc.CoverageException: Unrecognized option '[run] dynamic_context=' in config file .coveragerc\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/310", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/310/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/310/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/310", "id": 472566300, "node_id": "MDU6SXNzdWU0NzI1NjYzMDA=", "number": 310, "title": "Confusing behaviour with any(\u2026) and a generator", "user": {"login": "alexwlchan", "id": 301220, "node_id": "MDQ6VXNlcjMwMTIyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexwlchan", "html_url": "https://github.com/alexwlchan", "followers_url": "https://api.github.com/users/alexwlchan/followers", "following_url": "https://api.github.com/users/alexwlchan/following{/other_user}", "gists_url": "https://api.github.com/users/alexwlchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexwlchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexwlchan/subscriptions", "organizations_url": "https://api.github.com/users/alexwlchan/orgs", "repos_url": "https://api.github.com/users/alexwlchan/repos", "events_url": "https://api.github.com/users/alexwlchan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexwlchan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-07-24T22:11:34Z", "updated_at": "2019-08-15T21:32:33Z", "closed_at": "2019-08-15T21:32:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following example test:\r\n\r\n```python\r\n# repro.py\r\n\r\nbasket = [\"apple\", \"banana\", \"cherry\"]\r\n\r\ndef test_basket_contains_b():\r\n    assert any(\"b\" in fruit for fruit in basket)\r\n```\r\n\r\n```ini\r\n# .coveragerc\r\n[run]\r\nbranch = True\r\n\r\n[report]\r\nshow_missing = True\r\n```\r\n\r\nIf I run this test under pytest-cov, and print a report, it tells me that `8->exit` isn\u2019t covered:\r\n\r\n```console\r\n$ pytest --cov=repro repro.py ; coverage report\r\n[\u2026]\r\nName       Stmts   Miss Branch BrPart  Cover   Missing\r\n------------------------------------------------------\r\nrepro.py       3      0      2      1    80%   8->exit\r\n```\r\n\r\nIf I wrap the generator comprehension in a list, coverage is happy:\r\n\r\n```python\r\n    assert any([\"b\" in fruit for fruit in basket])\r\n```\r\n\r\nIf I run the body of that function under plain coverage, it doesn't complain, so it looks like this is something to do with the interactions with py.test?\r\n\r\n```console\r\n$ cat repro2.py\r\nbasket = [\"apple\", \"banana\", \"cherry\"]\r\n\r\nassert any([\"b\" in fruit for fruit in basket])\r\n\r\n$ coverage run repro2.py\r\n\r\n$ coverage report\r\nName       Stmts   Miss Branch BrPart  Cover   Missing\r\n------------------------------------------------------\r\nrepro2.py      2      0      2      0   100%\r\n```\r\n\r\nI'm not sure if this is a bug per se, and it's not blocking my work \u2013 I can wrap my `any(\u2026)` calls with a list \u2013 but it was confusing, and I thought it worth flagging the discrepancy between vanilla coverage and pytest-cov.\r\n\r\n### Setup\r\n\r\nPython 3.7.2 running on macOS. pytest-cov 2.7.1. I'm running in a fresh virtualenv with these dependencies:\r\n\r\n```console\r\n$ pip freeze\r\natomicwrites==1.3.0\r\nattrs==19.1.0\r\ncoverage==4.5.3\r\nimportlib-metadata==0.18\r\nmore-itertools==7.2.0\r\npackaging==19.0\r\npluggy==0.12.0\r\npy==1.8.0\r\npyparsing==2.4.0\r\npytest==5.0.1\r\npytest-cov==2.7.1\r\nsix==1.12.0\r\nwcwidth==0.1.7\r\nzipp==0.5.2\r\n```\r\n\r\n### Duplicates\r\n\r\nI tried to look for existing bug reports, but \"any\" is such a common keyword I couldn't find anything useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/306", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/306/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/306/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/306", "id": 467053914, "node_id": "MDU6SXNzdWU0NjcwNTM5MTQ=", "number": 306, "title": "Deleted working directory in pytest-cov 2.6.0+", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 93282803, "node_id": "MDU6TGFiZWw5MzI4MjgwMw==", "url": "https://api.github.com/repos/pytest-dev/pytest-cov/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-11T18:56:21Z", "updated_at": "2020-05-22T17:08:58Z", "closed_at": "2020-05-22T17:08:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "For `pytest-cov>=2.6`, the following error results at the end of execution:\r\n\r\n```\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/_pytest/main.py\", line 213, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/_pytest/main.py\", line 257, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/pluggy/hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/pytest_cov/plugin.py\", line 229, in pytest_runtestloop\r\nINTERNALERROR>     self.cov_controller.finish()\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/pytest_cov/engine.py\", line 171, in finish\r\nINTERNALERROR>     self.cov.stop()\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/coverage/control.py\", line 675, in load\r\nINTERNALERROR>     self._init()\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/coverage/control.py\", line 223, in _init\r\nINTERNALERROR>     set_relative_directory()\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/coverage/files.py\", line 28, in set_relative_directory\r\nINTERNALERROR>     RELATIVE_DIR = os.path.normcase(abs_file(os.curdir) + os.sep)\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/site-packages/coverage/files.py\", line 163, in abs_file\r\nINTERNALERROR>     path = os.path.realpath(path)\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/posixpath.py\", line 389, in realpath\r\nINTERNALERROR>     return abspath(path)\r\nINTERNALERROR>   File \"/usr/local/miniconda/lib/python3.7/posixpath.py\", line 376, in abspath\r\nINTERNALERROR>     cwd = os.getcwd()\r\nINTERNALERROR> FileNotFoundError: [Errno 2] No such file or directory\r\n```\r\n\r\nThis appears to indicate that somewhere we change directories, then that directory gets deleted, and then `os.getcwd()` gets called via `coverage.coverage(...).stop()` before any `chdir` to an existing directory.\r\n\r\nDowngrading to 2.5.1 resolves the problem. For reference, our call looks like:\r\n\r\n```\r\npytest --junit-xml=/tmp/pytest.xml \\\r\n         --cov niworkflows --cov-report xml:/tmp/unittests.xml \\\r\n         --ignore=/src/niworkflows/niworkflows/tests/ \\\r\n         --ignore=/src/niworkflows/niworkflows/interfaces/ants.py \\\r\n         /src/niworkflows/niworkflows\r\n```\r\n\r\nRelated: nedbat/coveragepy#750", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/305", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/305/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/305/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/305", "id": 464344088, "node_id": "MDU6SXNzdWU0NjQzNDQwODg=", "number": 305, "title": "[Question] Append prefix to filename", "user": {"login": "akdasa", "id": 22368151, "node_id": "MDQ6VXNlcjIyMzY4MTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/22368151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akdasa", "html_url": "https://github.com/akdasa", "followers_url": "https://api.github.com/users/akdasa/followers", "following_url": "https://api.github.com/users/akdasa/following{/other_user}", "gists_url": "https://api.github.com/users/akdasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/akdasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akdasa/subscriptions", "organizations_url": "https://api.github.com/users/akdasa/orgs", "repos_url": "https://api.github.com/users/akdasa/repos", "events_url": "https://api.github.com/users/akdasa/events{/privacy}", "received_events_url": "https://api.github.com/users/akdasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-07-04T16:41:38Z", "updated_at": "2019-07-05T15:13:58Z", "closed_at": "2019-07-05T15:13:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good getlocaltime()!\r\n\r\nIs it possible to append some prefix to a generated report?\r\n```xml\r\n/// cov.xml\r\n<class filename=\"{PREFIX_HERE}main.py\" line-rate=\"1\" name=\"main.py\">\r\n```\r\n\r\nI'm running  coverage like this:\r\n```bash\r\npytest --cov-report=xml --cov=.\r\n```\r\n\r\nWhy I need it? I'm using [codecov](https://codecov.io/) and multiple projects in one repo, so I want to distinguish these projects for codecov.\r\n\r\nHere is an example:\r\n```\r\nmonorepo:\r\n  project1:\r\n    main.py\r\n  project2:\r\n    main.js\r\n```\r\n\r\nSo I have two coverage reports:\r\n```\r\n/// for codecov there are two files in a root folder. But it's actually not. \r\n<class filename=\"{WANT_PREFIX_HERE}main.js\" line-rate=\"1\" name=\"main.js\">\r\n<class filename=\"{WANT_PREFIX_HERE}main.py\" line-rate=\"1\" name=\"main.py\">\r\n```\r\n\r\nIn order to distinguish them, I want to add some prefixes.\r\nIs it possible to do it somehow? Or is there a better way? (Sorry for my terrible English :) )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/303", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/303/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/303/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/303", "id": 459814023, "node_id": "MDU6SXNzdWU0NTk4MTQwMjM=", "number": 303, "title": "Concurrency option support", "user": {"login": "KHN190", "id": 2914792, "node_id": "MDQ6VXNlcjI5MTQ3OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2914792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KHN190", "html_url": "https://github.com/KHN190", "followers_url": "https://api.github.com/users/KHN190/followers", "following_url": "https://api.github.com/users/KHN190/following{/other_user}", "gists_url": "https://api.github.com/users/KHN190/gists{/gist_id}", "starred_url": "https://api.github.com/users/KHN190/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KHN190/subscriptions", "organizations_url": "https://api.github.com/users/KHN190/orgs", "repos_url": "https://api.github.com/users/KHN190/repos", "events_url": "https://api.github.com/users/KHN190/events{/privacy}", "received_events_url": "https://api.github.com/users/KHN190/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-24T10:29:40Z", "updated_at": "2019-06-25T03:31:51Z", "closed_at": "2019-06-25T03:31:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was running coverage with a `--concurrency` option to correctly cover eventlet related code:\r\n\r\n```bash\r\n$coverage --concurrency=eventlet run all_tests.py\r\n```\r\n\r\nBut after I switched to pytests, I don't see the option is provided anymore. And some coverage is missing. Is this a missing feature? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/302", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/302/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/302/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/302", "id": 459790875, "node_id": "MDU6SXNzdWU0NTk3OTA4NzU=", "number": 302, "title": "pytest-cov does not output to xml in this case", "user": {"login": "BruceZhang1993", "id": 6873988, "node_id": "MDQ6VXNlcjY4NzM5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6873988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BruceZhang1993", "html_url": "https://github.com/BruceZhang1993", "followers_url": "https://api.github.com/users/BruceZhang1993/followers", "following_url": "https://api.github.com/users/BruceZhang1993/following{/other_user}", "gists_url": "https://api.github.com/users/BruceZhang1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/BruceZhang1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BruceZhang1993/subscriptions", "organizations_url": "https://api.github.com/users/BruceZhang1993/orgs", "repos_url": "https://api.github.com/users/BruceZhang1993/repos", "events_url": "https://api.github.com/users/BruceZhang1993/events{/privacy}", "received_events_url": "https://api.github.com/users/BruceZhang1993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T09:38:43Z", "updated_at": "2019-06-24T10:00:56Z", "closed_at": "2019-06-24T10:00:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: Arch Linux x86_64 rolling\r\nPython 3.7.3\r\npytest: 4.4.2\r\ncov: 2.7.1\r\n\r\n---\r\n\r\nCommand: `pytest -v --cov --cov-report xml`\r\n\r\nTests: [All tests](https://github.com/BruceZhang1993/index-generator/tree/master/tests)\r\n\r\nAnd when I **remove the test_app_template_not_found test**, the coverage.xml is printed normally.\r\n\r\nOutput:\r\n\r\n```\r\n# ... ...\r\ntests/test_entries.py::test_sizeof_fmt PASSED                                                                                                                [ 16%]\r\ntests/test_entries.py::test_entry PASSED                                                                                                                     [ 33%]\r\ntests/test_main.py::test_app_version PASSED                                                                                                                  [ 50%]\r\ntests/test_main.py::test_app_missing_argument PASSED                                                                                                         [ 66%]\r\ntests/test_main.py::test_app_template_not_found PASSED                                                                                                       [ 83%]\r\ntests/test_main.py::test_app_path_not_exists PASSED                                                                                                          [100%]\r\n========================================================================= warnings summary =========================================================================\r\n/usr/lib/python3.7/site-packages/jinja2/utils.py:485\r\n  /usr/lib/python3.7/site-packages/jinja2/utils.py:485: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import MutableMapping\r\n\r\n/usr/lib/python3.7/site-packages/jinja2/runtime.py:318\r\n  /usr/lib/python3.7/site-packages/jinja2/runtime.py:318: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import Mapping\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n\r\n----------- coverage: platform linux, python 3.7.3-final-0 -----------\r\nCoverage XML written to file coverage.xml\r\n\r\n=============================================================== 6 passed, 2 warnings in 0.39 seconds ===============================================================\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/301", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/301/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/301/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/301", "id": 459097371, "node_id": "MDU6SXNzdWU0NTkwOTczNzE=", "number": 301, "title": "Decorator Function marked as Missed", "user": {"login": "psdon", "id": 31410348, "node_id": "MDQ6VXNlcjMxNDEwMzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/31410348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psdon", "html_url": "https://github.com/psdon", "followers_url": "https://api.github.com/users/psdon/followers", "following_url": "https://api.github.com/users/psdon/following{/other_user}", "gists_url": "https://api.github.com/users/psdon/gists{/gist_id}", "starred_url": "https://api.github.com/users/psdon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psdon/subscriptions", "organizations_url": "https://api.github.com/users/psdon/orgs", "repos_url": "https://api.github.com/users/psdon/repos", "events_url": "https://api.github.com/users/psdon/events{/privacy}", "received_events_url": "https://api.github.com/users/psdon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-21T09:15:12Z", "updated_at": "2019-07-08T23:29:09Z", "closed_at": "2019-07-08T23:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "pytest-cov always missed Decorator Functions from submodules\r\n\r\n------------------------------\r\nsetup.cfg\r\n> [tool:pytest]\r\ntestpaths = tests\r\naddopts = --cov=app --cov-report html --driver Firefox --driver-path ./geckodriver\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/300", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/300/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/300/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/300", "id": 454401515, "node_id": "MDU6SXNzdWU0NTQ0MDE1MTU=", "number": 300, "title": "Combine multiple xml report", "user": {"login": "pankajmalhotra", "id": 7905778, "node_id": "MDQ6VXNlcjc5MDU3Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7905778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pankajmalhotra", "html_url": "https://github.com/pankajmalhotra", "followers_url": "https://api.github.com/users/pankajmalhotra/followers", "following_url": "https://api.github.com/users/pankajmalhotra/following{/other_user}", "gists_url": "https://api.github.com/users/pankajmalhotra/gists{/gist_id}", "starred_url": "https://api.github.com/users/pankajmalhotra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pankajmalhotra/subscriptions", "organizations_url": "https://api.github.com/users/pankajmalhotra/orgs", "repos_url": "https://api.github.com/users/pankajmalhotra/repos", "events_url": "https://api.github.com/users/pankajmalhotra/events{/privacy}", "received_events_url": "https://api.github.com/users/pankajmalhotra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-10T22:31:38Z", "updated_at": "2019-07-05T14:52:40Z", "closed_at": "2019-07-05T14:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running pytest and generating xml report. Is there a way I can combine all the xml report?\r\nexample:\r\npytest --cov=. --cov-report=xml:report1.xml\r\npytest --cov=. --cov-report=xml:report2.xml\r\n\r\nIs it possible to combine report1.xml and report2.xml?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/297", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/297/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/297/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/297", "id": 446903555, "node_id": "MDU6SXNzdWU0NDY5MDM1NTU=", "number": 297, "title": "\\n in regex is not recognized by exclude_lines", "user": {"login": "dmcnulla", "id": 338813, "node_id": "MDQ6VXNlcjMzODgxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/338813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmcnulla", "html_url": "https://github.com/dmcnulla", "followers_url": "https://api.github.com/users/dmcnulla/followers", "following_url": "https://api.github.com/users/dmcnulla/following{/other_user}", "gists_url": "https://api.github.com/users/dmcnulla/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmcnulla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmcnulla/subscriptions", "organizations_url": "https://api.github.com/users/dmcnulla/orgs", "repos_url": "https://api.github.com/users/dmcnulla/repos", "events_url": "https://api.github.com/users/dmcnulla/events{/privacy}", "received_events_url": "https://api.github.com/users/dmcnulla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T02:28:20Z", "updated_at": "2019-07-05T14:40:33Z", "closed_at": "2019-07-05T14:40:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to skip the entire main for coverage. But I can't figure out what the regex should be. \r\nfrom setup.cfg\r\n```\r\n[report]\r\nexclude_lines = if __name__ == .__main__.\\:.*(\\n.*)+\r\n```\r\n\r\ncode\r\n```\r\ndef whatever():\r\n\treturn 1\r\n\t\r\nif __name__ == \"__main__\":\r\n\tprint(whatever())\r\n```\r\nThe print statement always show as not being covered. Hopefully I'm just doing it wrong.\r\nI've also tried `exclude_lines = if __name__ == .__main__.\\:.*\\n.*` which didn't work.\r\nAnd I verified both in a [regex tester](https://regexr.com/) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/296", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/296/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/296/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/296", "id": 446876693, "node_id": "MDU6SXNzdWU0NDY4NzY2OTM=", "number": 296, "title": "Skip coverage for a unittest", "user": {"login": "artgoldberg", "id": 33882, "node_id": "MDQ6VXNlcjMzODgy", "avatar_url": "https://avatars2.githubusercontent.com/u/33882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artgoldberg", "html_url": "https://github.com/artgoldberg", "followers_url": "https://api.github.com/users/artgoldberg/followers", "following_url": "https://api.github.com/users/artgoldberg/following{/other_user}", "gists_url": "https://api.github.com/users/artgoldberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/artgoldberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artgoldberg/subscriptions", "organizations_url": "https://api.github.com/users/artgoldberg/orgs", "repos_url": "https://api.github.com/users/artgoldberg/repos", "events_url": "https://api.github.com/users/artgoldberg/events{/privacy}", "received_events_url": "https://api.github.com/users/artgoldberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-22T00:10:34Z", "updated_at": "2019-05-22T12:53:35Z", "closed_at": "2019-05-22T12:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to change the working directory to run a unit test. This generates an INTERNALERROR in pytest/pytest-cov. Is it possible to decorate the unittest so coverage is turned off while the test is run?\r\n\r\nThanks\r\nArthur", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/294", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/294/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/294/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/294", "id": 444443924, "node_id": "MDU6SXNzdWU0NDQ0NDM5MjQ=", "number": 294, "title": "Possible RecursionError during signal cleanup", "user": {"login": "encukou", "id": 302922, "node_id": "MDQ6VXNlcjMwMjkyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/encukou", "html_url": "https://github.com/encukou", "followers_url": "https://api.github.com/users/encukou/followers", "following_url": "https://api.github.com/users/encukou/following{/other_user}", "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}", "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/encukou/subscriptions", "organizations_url": "https://api.github.com/users/encukou/orgs", "repos_url": "https://api.github.com/users/encukou/repos", "events_url": "https://api.github.com/users/encukou/events{/privacy}", "received_events_url": "https://api.github.com/users/encukou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-15T13:37:16Z", "updated_at": "2019-09-20T14:17:12Z", "closed_at": "2019-09-20T14:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried running the test suite with Python **3.8.0a3** (on Fedora 30, pytest-cov master, pytest==4.5.0, coverage==4.5.3). While digging into failures I noticed the following race condition.\r\nSolving it doesn't quite fix the tests for me, but I believe it's valid.\r\n\r\n[`cleanup()`](https://github.com/pytest-dev/pytest-cov/blob/7557f675349a8934d0185c517987e24a7e4c7c01/src/pytest_cov/embed.py#L90) and the signal handler [`_signal_cleanup_handler()`](https://github.com/pytest-dev/pytest-cov/blob/7557f675349a8934d0185c517987e24a7e4c7c01/src/pytest_cov/embed.py#L111) can enter an infinite recursion if a signal is delivered at the wrong time.\r\n\r\nTrace when `cleanup` is called (with `_cleanup_in_progress` False and `_pending_signal` None):\r\n\r\n* `_cleanup_in_progress = True`\r\n* *a signal is delivered now*\r\n  * `_signal_cleanup_handler` runs\r\n  * `_cleanup_in_progress` is True, so the handler only sets `_pending_signal`\r\n* `_cleanup(_active_cov)` runs\r\n* `_active_cov = None`\r\n* `_cleanup_in_progress = False`\r\n* `_pending_signal` is set, so we call `_signal_cleanup_handler()`, with `_cleanup_in_progress` False and `_pending_signal` set:\r\n  * `_cleanup_in_progress` is False, so we call `cleanup()`:\r\n    * `_cleanup_in_progress = True`\r\n    * `_cleanup(_active_cov)`\r\n    * `_active_cov = None`\r\n    * `_cleanup_in_progress = False`\r\n    * `_pending_signal` is *still set*, so call `_signal_cleanup_handler()`, again with `_cleanup_in_progress` False and `_pending_signal` set. This leads to infinite recursion.\r\n\r\nThe solution could be setting `_cleanup_in_progress = False` after the `if _pending_signal` block, or setting `_pending_signal = None` before calling `_signal_cleanup_handler`.\r\nI'm not very familiar with the code and what it's trying to do, so I don't know what a good fix would be (if any).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/293", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/293/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/293/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/293", "id": 443893581, "node_id": "MDU6SXNzdWU0NDM4OTM1ODE=", "number": 293, "title": "Why do coverage reports always crash?", "user": {"login": "voldemortX", "id": 32259501, "node_id": "MDQ6VXNlcjMyMjU5NTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/32259501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voldemortX", "html_url": "https://github.com/voldemortX", "followers_url": "https://api.github.com/users/voldemortX/followers", "following_url": "https://api.github.com/users/voldemortX/following{/other_user}", "gists_url": "https://api.github.com/users/voldemortX/gists{/gist_id}", "starred_url": "https://api.github.com/users/voldemortX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voldemortX/subscriptions", "organizations_url": "https://api.github.com/users/voldemortX/orgs", "repos_url": "https://api.github.com/users/voldemortX/repos", "events_url": "https://api.github.com/users/voldemortX/events{/privacy}", "received_events_url": "https://api.github.com/users/voldemortX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-14T12:43:36Z", "updated_at": "2019-05-15T02:22:49Z", "closed_at": "2019-05-15T02:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use:\r\n`pytest`\r\nIt's absolutely fine.\r\nHowever, if I add '**--cov**=whatever', Python just crashes.\r\nI'm using stackless-python 3.6.6 on Windows 10.\r\nActually, even the old 'coverage' package doesn't work as well, so I'm not even sure that I should be asking about this here...\r\nAnyways, I'll just submit an issue and hope for some luck.\r\nI have 2 files in the same folder(main.py & test_main.py).\r\nmain.py:\r\n```\r\ndef road(x, y):\r\n    return 1\r\n```\r\n\r\ntest_main.py:\r\n```\r\nfrom main import road\r\n\r\n\r\nclass TestModels(object):\r\n    def setup_class(self):\r\n        # Init\r\n        print('hi')\r\n\r\n    def teardown_class(self):\r\n        print('haha')\r\n\r\n    def test_exist(self):\r\n        assert road(0, 0) == 1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/292", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/292/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/292/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/292", "id": 443429721, "node_id": "MDU6SXNzdWU0NDM0Mjk3MjE=", "number": 292, "title": "Abort Error Msg", "user": {"login": "LienM", "id": 5683985, "node_id": "MDQ6VXNlcjU2ODM5ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5683985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LienM", "html_url": "https://github.com/LienM", "followers_url": "https://api.github.com/users/LienM/followers", "following_url": "https://api.github.com/users/LienM/following{/other_user}", "gists_url": "https://api.github.com/users/LienM/gists{/gist_id}", "starred_url": "https://api.github.com/users/LienM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LienM/subscriptions", "organizations_url": "https://api.github.com/users/LienM/orgs", "repos_url": "https://api.github.com/users/LienM/repos", "events_url": "https://api.github.com/users/LienM/events{/privacy}", "received_events_url": "https://api.github.com/users/LienM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-13T14:26:17Z", "updated_at": "2019-05-14T07:49:55Z", "closed_at": "2019-05-14T07:49:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Every since installing pytest-cov, whenever I try to run pytest I get the following error msg:\r\n\r\n```\r\n(develop) \u279c  event-tracking-api git: pytest tests/\r\n============================================================================================================================== test session starts ==============================================================================================================================\r\nplatform darwin -- Python 3.7.3, pytest-4.5.0, py-1.8.0, pluggy-0.11.0\r\nrootdir: ~/code/event-tracking-api\r\nplugins: cov-2.7.1\r\ncollecting ... [1]    47787 abort      pytest tests/\r\n\r\n```\r\n\r\nI have no idea why. Ive tried:\r\n\r\npytest tests/\r\npytest\r\npytest --no-cov.\r\n\r\nAll of the result in the same \"abort\" message. Any ideas why? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/290", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/290/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/290/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/290", "id": 443383773, "node_id": "MDU6SXNzdWU0NDMzODM3NzM=", "number": 290, "title": "Ok, it appears to be as you explained in https://github.com/pytest-dev/pytest-cov/issues/285#issuecomment-488733091", "user": {"login": "TauPan", "id": 289597, "node_id": "MDQ6VXNlcjI4OTU5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/289597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TauPan", "html_url": "https://github.com/TauPan", "followers_url": "https://api.github.com/users/TauPan/followers", "following_url": "https://api.github.com/users/TauPan/following{/other_user}", "gists_url": "https://api.github.com/users/TauPan/gists{/gist_id}", "starred_url": "https://api.github.com/users/TauPan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TauPan/subscriptions", "organizations_url": "https://api.github.com/users/TauPan/orgs", "repos_url": "https://api.github.com/users/TauPan/repos", "events_url": "https://api.github.com/users/TauPan/events{/privacy}", "received_events_url": "https://api.github.com/users/TauPan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-13T12:57:15Z", "updated_at": "2019-05-13T12:57:43Z", "closed_at": "2019-05-13T12:57:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ok, it appears to be as you explained in https://github.com/pytest-dev/pytest-cov/issues/285#issuecomment-488733091\r\n\r\nin fact against current master the following patch is sufficient to not cause an error:\r\n```diff\r\ndiff --git a/proj/app/__init__.py b/proj/app/__init__.py\r\nindex e69de29..7ec32ee 100644\r\n--- a/proj/app/__init__.py\r\n+++ b/proj/app/__init__.py\r\n@@ -0,0 +1 @@\r\n+from . import templatetags\r\ndiff --git a/proj/app/templatetags/__init__.py b/proj/app/templatetags/__init__.py\r\nindex e69de29..2e046b5 100644\r\n--- a/proj/app/templatetags/__init__.py\r\n+++ b/proj/app/templatetags/__init__.py\r\n@@ -0,0 +1 @@\r\n+from . import tags\r\n```\r\n\r\n`pytest --cov -n2` completes green with the following result:\r\n```\r\n============================================================================ test session starts =============================================================================\r\nplatform linux -- Python 3.6.8, pytest-4.4.1, py-1.8.0, pluggy-0.9.0\r\nDjango settings: proj.settings (from environment variable)\r\nrootdir: /home/friedel/git/pytest-django-xdist-cov-bug\r\nplugins: xdist-1.28.0, forked-1.0.2, django-3.4.8, cov-2.7.1\r\ngw0 [2] / gw1 [2]\r\n..                                                                                                                                                                     [100%]\r\n\r\n----------- coverage: platform linux, python 3.6.8-final-0 -----------\r\nName                                Stmts   Miss  Cover\r\n-------------------------------------------------------\r\nproj/app/__init__.py                    1      0   100%\r\nproj/app/admin.py                       1      0   100%\r\nproj/app/models.py                      1      0   100%\r\nproj/app/templatetags/__init__.py       1      0   100%\r\nproj/app/templatetags/tags.py           4      0   100%\r\nproj/app/views.py                       3      0   100%\r\nproj/proj/__init__.py                   0      0   100%\r\nproj/proj/urls.py                       4      0   100%\r\n-------------------------------------------------------\r\nTOTAL                                  15      0   100%\r\n\r\n========================================================================== 2 passed in 2.16 seconds ==========================================================================\r\n```\r\n\r\nBut the result raises more questions (which is probably a good thing):\r\n\r\n1.) home.html is not only reported with coverage of 0% (probably because of  https://github.com/nedbat/django_coverage_plugin/issues/36 ) but omitted completely.\r\n\r\n2.) https://docs.djangoproject.com/en/2.2/howto/custom-template-tags/ (or 1.11 or any version) does not mention that templatetags libraries need to be imported anywhere. I'm not sure if any of the relevant modules mentions that (pytest-cov, pytest-xdist, pytest-django or  django_coverage_plugin). Since production code runs without those imports (and `--cov` and `-n2` on their own as well) I suspect there's still a bug somewhere and importing those modules explicitly is just a workaround, with the advantage that it's simpler than my initial workaround of moving the busines code of the template tags and filters out of the tag library module and testing it separately.\r\n\r\nYou seem sure that there's no bug in pytest-cov, so I suspect there might be one in pytest-django or pytest_coverage_plugin.\r\n\r\nIn any case, thanks for your assistance!\r\n\r\n_Originally posted by @TauPan in https://github.com/pytest-dev/pytest-cov/issues/285#issuecomment-489447382_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/286", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/286/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/286/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/286", "id": 439334457, "node_id": "MDU6SXNzdWU0MzkzMzQ0NTc=", "number": 286, "title": " example", "user": {"login": "isvoboda", "id": 8103900, "node_id": "MDQ6VXNlcjgxMDM5MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8103900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isvoboda", "html_url": "https://github.com/isvoboda", "followers_url": "https://api.github.com/users/isvoboda/followers", "following_url": "https://api.github.com/users/isvoboda/following{/other_user}", "gists_url": "https://api.github.com/users/isvoboda/gists{/gist_id}", "starred_url": "https://api.github.com/users/isvoboda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isvoboda/subscriptions", "organizations_url": "https://api.github.com/users/isvoboda/orgs", "repos_url": "https://api.github.com/users/isvoboda/repos", "events_url": "https://api.github.com/users/isvoboda/events{/privacy}", "received_events_url": "https://api.github.com/users/isvoboda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-01T21:31:48Z", "updated_at": "2019-05-01T21:34:21Z", "closed_at": "2019-05-01T21:34:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/285", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/285/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/285/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/285", "id": 438749313, "node_id": "MDU6SXNzdWU0Mzg3NDkzMTM=", "number": 285, "title": "Tests for template tags with pytest-xdist and pytest-cov break view tests using the template tags", "user": {"login": "TauPan", "id": 289597, "node_id": "MDQ6VXNlcjI4OTU5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/289597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TauPan", "html_url": "https://github.com/TauPan", "followers_url": "https://api.github.com/users/TauPan/followers", "following_url": "https://api.github.com/users/TauPan/following{/other_user}", "gists_url": "https://api.github.com/users/TauPan/gists{/gist_id}", "starred_url": "https://api.github.com/users/TauPan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TauPan/subscriptions", "organizations_url": "https://api.github.com/users/TauPan/orgs", "repos_url": "https://api.github.com/users/TauPan/repos", "events_url": "https://api.github.com/users/TauPan/events{/privacy}", "received_events_url": "https://api.github.com/users/TauPan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-04-30T12:20:27Z", "updated_at": "2019-05-05T17:40:25Z", "closed_at": "2019-05-05T11:54:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "This was a weird one for me to figure out, but it should be simple to reproduce:\r\n\r\n1.) You have a template tag library \"foo\"\r\n2.) You have a view using a template using that library via `load foo`\r\n3.) Being a thorough tester, you decide you need a test for the template tag library, which means you have to `from app.templatetags import foo` in your test.\r\n4.) And of course you need to test the view using the templatetag.\r\n5.) And maybe you have to test the templatetag before the view (not sure if this is relevant) e.g. pytest discovery puts it before the view test.\r\n6.) And since you have many tests, you run `pytest --cov -n 2`\r\n\r\nWhich results in an error like the following:\r\n```\r\ndjango.template.exceptions.TemplateSyntaxError: 'foo' is not a registered tag library.\r\n```\r\n\r\n(maybe related to #110, but I don't see any of the problems described in that issue)\r\n\r\nWorkaround:\r\n\r\n- You put the business code you want to test in a different module (one that is *not* imported from a template) and register the tags manually via\r\n```python\r\nfrom django import template\r\nfrom ._foo import (tag1, tag2)\r\n\r\nregister = template.Library()\r\n\r\nregister.filter(is_safe=True)(tag1)\r\nregister.tag()(tag2)\r\n```\r\n\r\nAnd of course you `import _foo` in your test, instead of the template library.\r\n\r\nI'm not sure if I should file this with pytest-xdist or pytest-cov, since it definitely *only* occurs if *both* are used. I'm filing this here first and we can figure out if it really is xdist's fault.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/284", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/284/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/284/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/284", "id": 438612279, "node_id": "MDU6SXNzdWU0Mzg2MTIyNzk=", "number": 284, "title": "pytest gives \"Coverage disabled via --no-cov switch!\" warning even --no-cov is not given!!", "user": {"login": "iamabigstone", "id": 5056313, "node_id": "MDQ6VXNlcjUwNTYzMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5056313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iamabigstone", "html_url": "https://github.com/iamabigstone", "followers_url": "https://api.github.com/users/iamabigstone/followers", "following_url": "https://api.github.com/users/iamabigstone/following{/other_user}", "gists_url": "https://api.github.com/users/iamabigstone/gists{/gist_id}", "starred_url": "https://api.github.com/users/iamabigstone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iamabigstone/subscriptions", "organizations_url": "https://api.github.com/users/iamabigstone/orgs", "repos_url": "https://api.github.com/users/iamabigstone/repos", "events_url": "https://api.github.com/users/iamabigstone/events{/privacy}", "received_events_url": "https://api.github.com/users/iamabigstone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-04-29T21:25:07Z", "updated_at": "2020-05-21T10:43:25Z", "closed_at": "2019-05-03T21:43:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "- [x] a detailed description of the bug or suggestion\r\nI have not set --no-cov in any cli or configs, but it is given me the warning \"Coverage disabled via --no-cov switch!\". Even worse, I have enabled coverage in pytest.ini:\r\n```\r\n[pytest]\r\naddopts = --cov=mypackage -vvv -s\r\n```\r\nBut coverage is not running!\r\n\r\nHere is output:\r\n```\r\n(ENV) $ python -m pytest\r\n=================================================== test session starts ====================================================\r\nplatform darwin -- Python 2.7.15, pytest-4.4.1, py-1.8.0, pluggy-0.9.0 -- /Users/local/myrepo_new/ENV/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Users/local/myrepo_new, inifile: pytest.ini\r\nplugins: cov-2.6.1\r\ncollected 1 item                                                                                                           \r\n\r\ntest/test_myrepo.py::test_x PASSED\r\nWARNING: Coverage disabled via --no-cov switch!\r\n\r\n===================================================== warnings summary =====================================================\r\nENV/lib/python2.7/site-packages/pytest_cov/plugin.py:253\r\n  /Users/local/myrepo_new/ENV/lib/python2.7/site-packages/pytest_cov/plugin.py:253: PytestWarning: Coverage disabled via --no-cov switch!\r\n    warnings.warn(pytest.PytestWarning(message))\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n=========================================== 1 passed, 1 warnings in 0.03 seconds ===========================================\r\n```\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```\r\n(ENV)$ pip list\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.\r\nPackage        Version\r\n-------------- -------\r\natomicwrites   1.3.0  \r\nattrs          19.1.0 \r\ncoverage       4.5.3  \r\nfuncsigs       1.0.2  \r\nmore-itertools 5.0.0  \r\npathlib2       2.3.3  \r\npip            19.1   \r\npluggy         0.9.0  \r\npy             1.8.0  \r\npytest         4.4.1  \r\npytest-cov     2.6.1  \r\nscandir        1.10.0 \r\nsetuptools     41.0.1 \r\nsix            1.12.0 \r\nwheel          0.33.1 \r\n```\r\n\r\n- [x] pytest and operating system versions\r\n```\r\n(ENV) $ pytest --version\r\nThis is pytest version 4.4.1, imported from /Users/local/myrepo_new/ENV/lib/python2.7/site-packages/pytest.pyc\r\nsetuptools registered plugins:\r\n  pytest-cov-2.6.1 at /Users/local/myrepo_new/ENV/lib/python2.7/site-packages/pytest_cov/plugin.py\r\n(ENV)$ plutil -p /System/Library/CoreServices/SystemVersion.plist\r\n{\r\n  \"iOSSupportVersion\" => \"12.0\"\r\n  \"ProductBuildVersion\" => \"18D25\"\r\n  \"ProductCopyright\" => \"1983-2018 Apple Inc.\"\r\n  \"ProductName\" => \"Mac OS X\"\r\n  \"ProductUserVisibleVersion\" => \"10.14.3\"\r\n  \"ProductVersion\" => \"10.14.3\"\r\n}\r\n```\r\n\r\n- [x] minimal example if possible\r\n[myrepo_new.zip](https://github.com/pytest-dev/pytest/files/3129252/myrepo_new.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/280", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/280/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/280/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/280", "id": 425091473, "node_id": "MDU6SXNzdWU0MjUwOTE0NzM=", "number": 280, "title": "Fails to load on Python 3.4", "user": {"login": "s-m-e", "id": 16851110, "node_id": "MDQ6VXNlcjE2ODUxMTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/16851110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s-m-e", "html_url": "https://github.com/s-m-e", "followers_url": "https://api.github.com/users/s-m-e/followers", "following_url": "https://api.github.com/users/s-m-e/following{/other_user}", "gists_url": "https://api.github.com/users/s-m-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/s-m-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s-m-e/subscriptions", "organizations_url": "https://api.github.com/users/s-m-e/orgs", "repos_url": "https://api.github.com/users/s-m-e/repos", "events_url": "https://api.github.com/users/s-m-e/events{/privacy}", "received_events_url": "https://api.github.com/users/s-m-e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-25T20:05:47Z", "updated_at": "2019-03-25T20:21:37Z", "closed_at": "2019-03-25T20:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just found this in the logs of one of my tests of a module of mine on Travis. It's running on Python 3.4.6. Package versions of pytest, pytest-cov and converage are the latest as of today (i.e. what you get if you pip-install them). The identical setup runs fine on Python 3.5.x or newer.\r\n\r\n```\r\npytest --cov=zugbruecke --cov-config=setup.cfg\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 510, in load_setuptools_entrypoints\r\n    plugin = ep.load()\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2301, in load\r\n    self.require(*args, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2324, in require\r\n    items = working_set.resolve(reqs, env, installer, extras=self.extras)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 859, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.VersionConflict: (pytest 3.0.7 (/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages), Requirement.parse('pytest>=3.6'))\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.4.6/bin/pytest\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/config.py\", line 47, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/config.py\", line 156, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\n    return _wrapped_call(hook_impl.function(*args), self.execute)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 250, in _wrapped_call\r\n    wrap_controller.send(call_outcome)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/helpconfig.py\", line 32, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\n    self.result = func()\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\n    res = hook_impl.function(*args)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/config.py\", line 924, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/config.py\", line 1082, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/config.py\", line 1044, in _preparse\r\n    self.pluginmanager.load_setuptools_entrypoints(entrypoint_name)\r\n  File \"/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 515, in load_setuptools_entrypoints\r\n    \"Plugin %r could not be loaded: %s!\" % (ep.name, e))\r\n_pytest.vendored_packages.pluggy.PluginValidationError: Plugin 'pytest_cov' could not be loaded: (pytest 3.0.7 (/home/travis/virtualenv/python3.4.6/lib/python3.4/site-packages), Requirement.parse('pytest>=3.6'))!\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/275", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/275/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/275/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/275", "id": 420948961, "node_id": "MDU6SXNzdWU0MjA5NDg5NjE=", "number": 275, "title": "Option to hide terminal coverage report on test failure", "user": {"login": "bluenote10", "id": 3620703, "node_id": "MDQ6VXNlcjM2MjA3MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3620703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluenote10", "html_url": "https://github.com/bluenote10", "followers_url": "https://api.github.com/users/bluenote10/followers", "following_url": "https://api.github.com/users/bluenote10/following{/other_user}", "gists_url": "https://api.github.com/users/bluenote10/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluenote10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluenote10/subscriptions", "organizations_url": "https://api.github.com/users/bluenote10/orgs", "repos_url": "https://api.github.com/users/bluenote10/repos", "events_url": "https://api.github.com/users/bluenote10/events{/privacy}", "received_events_url": "https://api.github.com/users/bluenote10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 93282805, "node_id": "MDU6TGFiZWw5MzI4MjgwNQ==", "url": "https://api.github.com/repos/pytest-dev/pytest-cov/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-14T10:49:50Z", "updated_at": "2019-03-25T10:44:06Z", "closed_at": "2019-03-25T10:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a feature request related to the term/term-missing reporters. In general I would like to use\r\n\r\n```\r\naddopts =\r\n    --cov=myproject --cov-report term-missing\r\n```\r\n\r\nso that co-developers automatically see coverage stats on stdout. However, for big projects, the coverage reports fills more than an entire page on the screen. In case all tests were successful this is fine, because here the coverage is the most relevant information for the developer. However, if a test fails, coverage isn't so relevant and the user has to scroll back up to get information on the failed test. This can get annoying to the point that I often turn off the reporter during development.\r\n\r\nIt would be nice to have the option to report coverage to terminal only in the success case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/274", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/274/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/274/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/274", "id": 419617337, "node_id": "MDU6SXNzdWU0MTk2MTczMzc=", "number": 274, "title": "pytest-cov==2.3.0 + pytest==4.3.0: unknown hook 'pytest_funcarg__cov'", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-11T18:23:04Z", "updated_at": "2019-03-11T18:23:07Z", "closed_at": "2019-03-11T18:23:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Self reporting and closing in case it affects someone else:\r\n\r\n# fix: upgrade pytest-cov\r\n\r\n### stacktrace\r\n\r\n```console\r\n$ pytest t.py \r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.6.7, pytest-4.3.0, py-1.8.0, pluggy-0.9.0\r\nrootdir: /tmp/x, inifile:\r\nplugins: cov-2.3.0\r\ncollecting ... INTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/_pytest/main.py\", line 210, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/_pytest/main.py\", line 249, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/pluggy/hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/pluggy/manager.py\", line 68, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/pluggy/manager.py\", line 62, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/_pytest/main.py\", line 259, in pytest_collection\r\nINTERNALERROR>     return session.perform_collect()\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/_pytest/main.py\", line 487, in perform_collect\r\nINTERNALERROR>     self.config.pluginmanager.check_pending()\r\nINTERNALERROR>   File \"/tmp/x/venv/lib/python3.6/site-packages/pluggy/manager.py\", line 251, in check_pending\r\nINTERNALERROR>     % (name, hookimpl.plugin),\r\nINTERNALERROR> pluggy.manager.PluginValidationError: unknown hook 'pytest_funcarg__cov' in plugin <module 'pytest_cov.plugin' from '/tmp/x/venv/lib/python3.6/site-packages/pytest_cov/plugin.py'>\r\n\r\n========================= no tests ran in 0.02 seconds =========================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/270", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/270/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/270/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/270", "id": 418607097, "node_id": "MDU6SXNzdWU0MTg2MDcwOTc=", "number": 270, "title": "Local test failure: ModuleNotFoundError: No module named 'helper'", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-08T02:45:40Z", "updated_at": "2019-03-09T17:33:54Z", "closed_at": "2019-03-09T17:07:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am seeing the following test failure locally, also when using tox, even from\r\na fresh git clone:\r\n\r\n```\r\nplatform linux -- Python 3.7.2, pytest-4.3.0, py-1.8.0, pluggy-0.9.0\r\nrootdir: \u2026/Vcs/pytest-cov, inifile: setup.cfg\r\nplugins: forked-1.0.2, cov-2.6.1\r\ncollected 113 items\r\n\r\ntests/test_pytest_cov.py F\r\n\r\n=========================================================================================== FAILURES ===========================================================================================\r\n____________________________________________________________________________________ test_central[branch2x] ____________________________________________________________________________________\r\n\u2026/Vcs/pytest-cov/tests/test_pytest_cov.py:187: in test_central\r\n    '*10 passed*'\r\nE   Failed: nomatch: '*- coverage: platform *, python * -*'\r\nE       and: '============================= test session starts =============================='\r\nE       and: 'platform linux -- Python 3.7.2, pytest-4.3.0, py-1.8.0, pluggy-0.9.0 -- \u2026/Vcs/pytest-cov/.venv/bin/python'\r\nE       and: 'cachedir: .pytest_cache'\r\nE       and: 'rootdir: /tmp/pytest-of-user/pytest-647/test_central0, inifile:'\r\nE       and: 'plugins: forked-1.0.2, cov-2.6.1'\r\nE       and: 'collecting ... collected 0 items / 1 errors'\r\nE       and: ''\r\nE       and: '==================================== ERRORS ===================================='\r\nE       and: '_______________________ ERROR collecting test_central.py _______________________'\r\nE       and: \"ImportError while importing test module '/tmp/pytest-of-user/pytest-647/test_central0/test_central.py'.\"\r\nE       and: 'Hint: make sure your test modules/packages have valid Python names.'\r\nE       and: 'Traceback:'\r\nE       and: 'test_central.py:1: in <module>'\r\nE       and: '    import sys, helper'\r\nE       and: \"E   ModuleNotFoundError: No module named 'helper'\"\r\nE       and: ''\r\nE   fnmatch: '*- coverage: platform *, python * -*'\r\nE      with: '----------- coverage: platform linux, python 3.7.2-final-0 -----------'\r\nE   nomatch: 'test_central* 9 * 85% *'\r\nE       and: 'Name              Stmts   Miss Branch BrPart  Cover   Missing'\r\nE       and: '-------------------------------------------------------------'\r\nE       and: 'test_central.py       9      8      4      0     8%   3-11'\r\nE       and: ''\r\nE       and: '!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!'\r\nE       and: '=========================== 1 error in 0.05 seconds ============================'\r\nE   remains unmatched: 'test_central* 9 * 85% *'\r\n------------------------------------------------------------------------------------- Captured stdout call -------------------------------------------------------------------------------------\r\nrunning: \u2026/Vcs/pytest-cov/.venv/bin/python -mpytest --basetemp=/tmp/pytest-of-user/pytest-647/test_central0/runpytest-0 -v --cov=/tmp/pytest-of-user/pytest-647/test_central0 --cov-report=term-missing /tmp/pytest-of-user/pytest-647/test_central0/test_central.py --cov-branch --basetemp=/tmp/pytest-of-user/pytest-647/basetemp\r\n     in: /tmp/pytest-of-user/pytest-647/test_central0\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.2, pytest-4.3.0, py-1.8.0, pluggy-0.9.0 -- \u2026/Vcs/pytest-cov/.venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /tmp/pytest-of-user/pytest-647/test_central0, inifile:\r\nplugins: forked-1.0.2, cov-2.6.1\r\ncollecting ... collected 0 items / 1 errors\r\n\r\n==================================== ERRORS ====================================\r\n_______________________ ERROR collecting test_central.py _______________________\r\nImportError while importing test module '/tmp/pytest-of-user/pytest-647/test_central0/test_central.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\ntest_central.py:1: in <module>\r\n    import sys, helper\r\nE   ModuleNotFoundError: No module named 'helper'\r\n\r\n----------- coverage: platform linux, python 3.7.2-final-0 -----------\r\nName              Stmts   Miss Branch BrPart  Cover   Missing\r\n-------------------------------------------------------------\r\ntest_central.py       9      8      4      0     8%   3-11\r\n\r\n!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!\r\n=========================== 1 error in 0.05 seconds ============================\r\n=================================================================================== short test summary info ====================================================================================\r\nFAILED tests/test_pytest_cov.py::test_central[branch2x]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/261", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/261/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/261/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/261", "id": 404387791, "node_id": "MDU6SXNzdWU0MDQzODc3OTE=", "number": 261, "title": "pytest-cov causes pytest to hang after completing all tests", "user": {"login": "BoPeng", "id": 9889312, "node_id": "MDQ6VXNlcjk4ODkzMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9889312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoPeng", "html_url": "https://github.com/BoPeng", "followers_url": "https://api.github.com/users/BoPeng/followers", "following_url": "https://api.github.com/users/BoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/BoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoPeng/subscriptions", "organizations_url": "https://api.github.com/users/BoPeng/orgs", "repos_url": "https://api.github.com/users/BoPeng/repos", "events_url": "https://api.github.com/users/BoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/BoPeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-29T16:53:26Z", "updated_at": "2019-02-16T20:11:38Z", "closed_at": "2019-02-16T20:11:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "After a great deal of detective work, we figured out why our tests fail to exit after they appear to be completed on travis. In summary,\r\n\r\n1. With `coverage-cov` 2.6 installed, our test would hang after `pytest` exits.\r\n2. The problem appears even if we use normal [`python test.py`](https://github.com/vatlab/SoS/issues/1196#issuecomment-458609062) when `pytest` is not used.\r\n3. pytest exits normally with `pytest-cov` uninstalled.\r\n4. The problem was found in travis VM but we could reproduce it locally after installing `pytest-cov`.\r\n\r\nThe program being tested uses multiprocessing, but the processes exit normally. I am reporting the problem here and try to figure out\r\n\r\n1. What has caused the tests to hang after pytest exits?\r\n2. Why `pytest-cov` affects normal python unit tests when they are not triggered by `pytest`?\r\n\r\n\r\nEdit:\r\n\r\nTo reproduce the problem\r\n\r\n1. Install python 3.6+, then `pip install sos`\r\n2. Save the test script [`here`](https://github.com/vatlab/SoS/issues/1196#issuecomment-458609062) in a file, say, `test.py`.\r\n3. Run `python test.py` or `pytest test.py` should pass\r\n4. Install `pytest-cov`\r\n5. `python test.py` or `pytest test.py` will hang", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/260", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/260/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/260/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/260", "id": 404276494, "node_id": "MDU6SXNzdWU0MDQyNzY0OTQ=", "number": 260, "title": "--cov-fail-under support float values", "user": {"login": "hulucc", "id": 4343900, "node_id": "MDQ6VXNlcjQzNDM5MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4343900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hulucc", "html_url": "https://github.com/hulucc", "followers_url": "https://api.github.com/users/hulucc/followers", "following_url": "https://api.github.com/users/hulucc/following{/other_user}", "gists_url": "https://api.github.com/users/hulucc/gists{/gist_id}", "starred_url": "https://api.github.com/users/hulucc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hulucc/subscriptions", "organizations_url": "https://api.github.com/users/hulucc/orgs", "repos_url": "https://api.github.com/users/hulucc/repos", "events_url": "https://api.github.com/users/hulucc/events{/privacy}", "received_events_url": "https://api.github.com/users/hulucc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-29T12:51:47Z", "updated_at": "2019-09-02T16:34:35Z", "closed_at": "2019-09-02T16:18:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/258", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/258/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/258/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/258", "id": 397824679, "node_id": "MDU6SXNzdWUzOTc4MjQ2Nzk=", "number": 258, "title": "Difference in branch coverage for list comprehensions between Python 2.7 and Python 3.6", "user": {"login": "lexotero", "id": 3699954, "node_id": "MDQ6VXNlcjM2OTk5NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3699954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lexotero", "html_url": "https://github.com/lexotero", "followers_url": "https://api.github.com/users/lexotero/followers", "following_url": "https://api.github.com/users/lexotero/following{/other_user}", "gists_url": "https://api.github.com/users/lexotero/gists{/gist_id}", "starred_url": "https://api.github.com/users/lexotero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lexotero/subscriptions", "organizations_url": "https://api.github.com/users/lexotero/orgs", "repos_url": "https://api.github.com/users/lexotero/repos", "events_url": "https://api.github.com/users/lexotero/events{/privacy}", "received_events_url": "https://api.github.com/users/lexotero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-10T13:13:23Z", "updated_at": "2019-01-10T15:11:25Z", "closed_at": "2019-01-10T15:10:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the same test with the same version of `pytest` and `pytest-cov` but with Python 2.7 and with Python 3.6 produces different report of branch coverage when the source code contains list comprehensions.\r\n\r\nI expected to see the same report but it seems that the report when running with Python 2.7 does not consider list comprehensions as a branch and Python 3.6 does.\r\n\r\n**Versions**\r\n\r\n- Python 2.7.15 and Python 3.6.6\r\n- `pytest` 4.0.2\r\n- `pytest-cov` 2.6.0\r\n\r\n**Reproduction steps**\r\n\r\n1. Create two virtualenvs, one with Python 2.7 and other with Python 3.6.\r\n2. Install `pytest` 4.0.2 and `pytest-cov` 2.6.0 in both virtualenvs.\r\n3. Create the files described bellow.\r\n4. Run the `pytest` command (also bellow) twice, once in every virtualenv. Make sure you produce coverage reports with different names for each virtualenv.\r\n\r\n**Code**\r\n\r\nA simple code to reproduce it:\r\n\r\n`even_number.py`\r\n\r\n```python\r\nfrom __future__ import absolute_import, division, print_function, unicode_literals                                                                                                                                 \r\n\r\n\r\ndef even_numbers():\r\n    even_numbers = [number for number in range(0, 10) if number % 2 == 0]\r\n    return even_numbers\r\n```\r\n\r\n`test_even_number.py`\r\n\r\n```python\r\nfrom __future__ import absolute_import, division, print_function, unicode_literals\r\n\r\nfrom even_numbers import even_numbers\r\n\r\n\r\nclass TestEvenNumbers(object):\r\n\r\n    def test_even_numbers_with_no_args_check_return_even_numbers(self):\r\n        numbers = even_numbers()\r\n        assert numbers == [0, 2, 4, 6, 8]\r\n```\r\n\r\n**Command**\r\n\r\n```bash\r\npytest test_even_numbers.py --cov even_numbers --cov-branch --cov-report xml:report-<venv>.xml\r\n```\r\n\r\nMake sure the `--cov-report` argument changes for each virtualenv, so you don't overwrite the same file when running the command twice.\r\n\r\n**My reports**\r\n\r\n```xml\r\n<!-- In Python 2.7 environment -->\r\n<class branch-rate=\"1\" complexity=\"0\" filename=\"even_numbers.py\" line-rate=\"1\" name=\"even_numbers.py\">\r\n  <methods/>\r\n    <lines>\r\n      <line hits=\"1\" number=\"1\"/>\r\n      <line hits=\"1\" number=\"4\"/>\r\n      <line hits=\"1\" number=\"5\"/>\r\n      <line hits=\"1\" number=\"6\"/>\r\n    </lines>\r\n</class>\r\n```\r\n\r\n```xml\r\n<!-- In Python 3.6 environment -->\r\n<class branch-rate=\"1\" complexity=\"0\" filename=\"even_numbers.py\" line-rate=\"1\" name=\"even_numbers.py\">\r\n  <methods/>\r\n    <lines>\r\n      <line hits=\"1\" number=\"1\"/>\r\n      <line hits=\"1\" number=\"4\"/>\r\n      <line branch=\"true\" condition-coverage=\"100% (2/2)\" hits=\"1\" number=\"5\"/>\r\n      <line hits=\"1\" number=\"6\"/>\r\n    </lines>\r\n</class>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/257", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/257/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/257/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/257", "id": 396809951, "node_id": "MDU6SXNzdWUzOTY4MDk5NTE=", "number": 257, "title": "huge dependency change between 2.6.0 and 2.6.1", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-08T09:07:06Z", "updated_at": "2019-02-11T21:35:47Z", "closed_at": "2019-01-08T09:16:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 2.6.1 pytest version >=3.6 is required, it was not the case in 2.6.0.\r\n\r\nThis made three of my [pytest plugin projects](https://github.com/smarie/OVERVIEW#tests) builds fail simultaneously yesterday :) indeed their Travis build matrix tests compliance with pytest 2.x and 3.x. \r\n\r\nOf course it is not a bad thing to use the latest versions available, my comment is just about the very hazardous choice of using a \"patch\" version number increment for such huge change.\r\n\r\n(No action is required from this ticket, I now use hardcoded `pytest-cov` versions in my builds. You can close this after reading :) )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/256", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/256/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/256/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/256", "id": 396496044, "node_id": "MDU6SXNzdWUzOTY0OTYwNDQ=", "number": 256, "title": "Does not report coverage for sub packages", "user": {"login": "drcrook1", "id": 6099287, "node_id": "MDQ6VXNlcjYwOTkyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6099287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drcrook1", "html_url": "https://github.com/drcrook1", "followers_url": "https://api.github.com/users/drcrook1/followers", "following_url": "https://api.github.com/users/drcrook1/following{/other_user}", "gists_url": "https://api.github.com/users/drcrook1/gists{/gist_id}", "starred_url": "https://api.github.com/users/drcrook1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drcrook1/subscriptions", "organizations_url": "https://api.github.com/users/drcrook1/orgs", "repos_url": "https://api.github.com/users/drcrook1/repos", "events_url": "https://api.github.com/users/drcrook1/events{/privacy}", "received_events_url": "https://api.github.com/users/drcrook1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-07T13:55:12Z", "updated_at": "2019-01-07T14:18:04Z", "closed_at": "2019-01-07T14:18:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Folks,\r\n\r\nI'm not sure it is related to this: https://github.com/pytest-dev/pytest-cov/issues/117 ; I don't believe it is, but it could be.\r\n\r\nI have a test structure like this:\r\napp\r\n  __init__.py\r\n  RootModule1\r\n  RootModule2\r\n  - FolderA\r\n      - __init__.py\r\n      - ModuleA1\r\n      - ModuleA2\r\n  - Folder B\r\n       - __init__.py\r\n       - ModuleB1\r\n       - ModuleB2\r\n \r\ntests\r\n  test_RootModule1\r\n  test_RootModule2\r\n  - test_FolderA\r\n      - test_ModuleA1\r\n      - test_ModuleA2\r\n  - test_Folder B\r\n       - test_ModuleB1\r\n       - test_ModuleB2\r\n\r\npytest appears to effectively find all of my tests and run them.  The problem is with coverage.  My coverage report looks as follows:\r\n\r\napp\r\n  __init__.py              100%\r\n  RootModule1        100%\r\n  RootModule2        100%\r\n  - FolderA\r\n      - __init__.py        100%\r\n      - ModuleA1           0%\r\n      - ModuleA2           0%\r\n  - Folder B\r\n       - __init__.py        100%\r\n       - ModuleB1            0%\r\n       - ModuleB2            0%\r\n\r\nThe init files are all empty (no code).  Based on my own counting of lines running the various sub packages should be covered by ~50-75% for each one I have but they are reporting at 0%.\r\n\r\nMy test command is as such:\r\n\r\npytest --doctest-modules --junitxml=/tests/junit/test-results.xml --cov=app /tests --cov-report=xml:/tests/junit/coverage.xml --cov-report=html:/tests/junit/cov_html\r\n\r\nAny assistance is greatly appreciated; I'm working on documenting how to set all this up inside containers as part of automated build processes for python projects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/254", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/254/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/254/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/254", "id": 396291524, "node_id": "MDU6SXNzdWUzOTYyOTE1MjQ=", "number": 254, "title": "pytest 4.1.0 may have broken pytest-cov", "user": {"login": "canyon289", "id": 7213793, "node_id": "MDQ6VXNlcjcyMTM3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7213793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canyon289", "html_url": "https://github.com/canyon289", "followers_url": "https://api.github.com/users/canyon289/followers", "following_url": "https://api.github.com/users/canyon289/following{/other_user}", "gists_url": "https://api.github.com/users/canyon289/gists{/gist_id}", "starred_url": "https://api.github.com/users/canyon289/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canyon289/subscriptions", "organizations_url": "https://api.github.com/users/canyon289/orgs", "repos_url": "https://api.github.com/users/canyon289/repos", "events_url": "https://api.github.com/users/canyon289/events{/privacy}", "received_events_url": "https://api.github.com/users/canyon289/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-01-06T20:29:30Z", "updated_at": "2019-01-08T10:56:48Z", "closed_at": "2019-01-06T20:58:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the [ArviZ project](https://github.com/arviz-devs/arviz) we started getting test failures when using pytest-cov 2.6.0 with pytest 4.1.0 which was released yesterday.\r\n\r\nTravisCI UUID 476024505\r\nhttps://travis-ci.org/arviz-devs/arviz/jobs/476024505#L2089\r\nhttps://travis-ci.org/arviz-devs/arviz/jobs/476024505#L2795\r\n\r\nPinning pytest back to 4.0.2 seems to have worked locally. When I get a TravisCI build that shows this I'll post links here as well.\r\n\r\nPlease forgive me for not having a minimally reproducible example. If this description isn't enough I can follow up with more information.\r\n\r\nAnd thank you for maintaining this plugin. Its absolutely fantastic", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/252", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/252/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/252/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/252", "id": 396268926, "node_id": "MDU6SXNzdWUzOTYyNjg5MjY=", "number": 252, "title": "AttributeError: 'Function' object has no attribute 'get_marker'", "user": {"login": "rossmacarthur", "id": 17109887, "node_id": "MDQ6VXNlcjE3MTA5ODg3", "avatar_url": "https://avatars3.githubusercontent.com/u/17109887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossmacarthur", "html_url": "https://github.com/rossmacarthur", "followers_url": "https://api.github.com/users/rossmacarthur/followers", "following_url": "https://api.github.com/users/rossmacarthur/following{/other_user}", "gists_url": "https://api.github.com/users/rossmacarthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossmacarthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossmacarthur/subscriptions", "organizations_url": "https://api.github.com/users/rossmacarthur/orgs", "repos_url": "https://api.github.com/users/rossmacarthur/repos", "events_url": "https://api.github.com/users/rossmacarthur/events{/privacy}", "received_events_url": "https://api.github.com/users/rossmacarthur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2019-01-06T15:43:03Z", "updated_at": "2019-07-15T17:22:28Z", "closed_at": "2019-01-06T19:13:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just started getting the following error with pytest-cov v2.6.0, pytest v4.1.0 on Python 3.4.6, PyPy, and PyPy3\r\n\r\n```\r\nself = <pytest_cov.plugin.CovPlugin object at 0x110f365c0>, item = <Function test_x>\r\n\r\n    @compat.hookwrapper\r\n    def pytest_runtest_call(self, item):\r\n>       if (item.get_marker('no_cover')\r\n                or 'no_cover' in getattr(item, 'fixturenames', ())):\r\nE               AttributeError: 'Function' object has no attribute 'get_marker'\r\n\r\n../.pyenv/versions/3.4.9/envs/venv/lib/python3.4/site-packages/pytest_cov/plugin.py:289: AttributeError\r\n```\r\n\r\n## How to replicate\r\n\r\n- Create a virtualenv with Python 3.4.9\r\n- `pip install pytest==4.1.0 pytest-cov==2.6.0`\r\n\r\n- Create `something.py` with the following contents:\r\n\r\n```python\r\ndef test_x():\r\n    assert True\r\n```\r\n\r\n- Run `pytest --cov=something something.py`\r\n\r\n## Pytest output\r\n\r\n```\r\n========================================================== test session starts ===========================================================\r\nplatform darwin -- Python 3.4.9, pytest-4.1.0, py-1.7.0, pluggy-0.8.0 -- /Users/ross/.pyenv/versions/3.4.9/envs/venv/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /Users/ross/temp, inifile:\r\nplugins: cov-2.6.0\r\ncollected 1 item\r\n\r\nsomething.py::test_x FAILED                                                                                                        [100%]\r\n\r\n================================================================ FAILURES ================================================================\r\n_________________________________________________________________ test_x _________________________________________________________________\r\n\r\nself = <pytest_cov.plugin.CovPlugin object at 0x110f365c0>, item = <Function test_x>\r\n\r\n    @compat.hookwrapper\r\n    def pytest_runtest_call(self, item):\r\n>       if (item.get_marker('no_cover')\r\n                or 'no_cover' in getattr(item, 'fixturenames', ())):\r\nE               AttributeError: 'Function' object has no attribute 'get_marker'\r\n\r\n../.pyenv/versions/3.4.9/envs/venv/lib/python3.4/site-packages/pytest_cov/plugin.py:289: AttributeError\r\n\r\n---------- coverage: platform darwin, python 3.4.9-final-0 -----------\r\nName           Stmts   Miss  Cover\r\n----------------------------------\r\nsomething.py       2      1    50%\r\n\r\n======================================================== 1 failed in 0.07 seconds ========================================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/250", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/250/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/250/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/250", "id": 393909175, "node_id": "MDU6SXNzdWUzOTM5MDkxNzU=", "number": 250, "title": "Pytest-cov leaves .coverage.hostname.number.number data files if running tests against multiprocessing.Pool", "user": {"login": "manycoding", "id": 10396557, "node_id": "MDQ6VXNlcjEwMzk2NTU3", "avatar_url": "https://avatars0.githubusercontent.com/u/10396557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manycoding", "html_url": "https://github.com/manycoding", "followers_url": "https://api.github.com/users/manycoding/followers", "following_url": "https://api.github.com/users/manycoding/following{/other_user}", "gists_url": "https://api.github.com/users/manycoding/gists{/gist_id}", "starred_url": "https://api.github.com/users/manycoding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manycoding/subscriptions", "organizations_url": "https://api.github.com/users/manycoding/orgs", "repos_url": "https://api.github.com/users/manycoding/repos", "events_url": "https://api.github.com/users/manycoding/events{/privacy}", "received_events_url": "https://api.github.com/users/manycoding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-12-24T16:44:42Z", "updated_at": "2020-05-21T12:34:40Z", "closed_at": "2019-03-09T15:57:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running pytest with coverage for tests against multiprocessing.Pool generates several data files, but not all of them are cleaned after. It looks similar to #100.\r\n`Pool.join()` doesn't seem to change anything.\r\nExample filename `.coverage.myhost.local.7582.948066`\r\n\r\nHere's the repository to reproduce: https://github.com/manycoding/pytest_cov_pool_datafiles_250\r\n\r\n**Your operating system name and version:**\r\nMac OS Mojave 10.14 (18A391)\r\n\r\n**Any details about your local setup that might be helpful in troubleshooting:**\r\n\r\n    pipenv shell; pipenv install\r\n\r\nPipfile\r\n```\r\npytest = \"*\"\r\npytest-cov = \"*\"\r\npytest-mock = \"*\"\r\ntox-pipenv = \"*\"\r\npytest-pythonpath = \"*\"\r\n```\r\n**Detailed steps to reproduce the bug:**\r\n\r\n    pytest --cov=src --cov-report=term-missing  tests/test_cov_pool.py\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/249", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/249/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/249/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/249", "id": 392787664, "node_id": "MDU6SXNzdWUzOTI3ODc2NjQ=", "number": 249, "title": "pytest-cov doesn't seem to work on Windows 10", "user": {"login": "shelldweller", "id": 451485, "node_id": "MDQ6VXNlcjQ1MTQ4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/451485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shelldweller", "html_url": "https://github.com/shelldweller", "followers_url": "https://api.github.com/users/shelldweller/followers", "following_url": "https://api.github.com/users/shelldweller/following{/other_user}", "gists_url": "https://api.github.com/users/shelldweller/gists{/gist_id}", "starred_url": "https://api.github.com/users/shelldweller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shelldweller/subscriptions", "organizations_url": "https://api.github.com/users/shelldweller/orgs", "repos_url": "https://api.github.com/users/shelldweller/repos", "events_url": "https://api.github.com/users/shelldweller/events{/privacy}", "received_events_url": "https://api.github.com/users/shelldweller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-19T21:40:00Z", "updated_at": "2019-01-14T18:06:03Z", "closed_at": "2019-01-14T18:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing `pytest-cov` on Windows 10, pytest stops working. Any pytest command (even `pytest --help`) stalls forever. After running `pip uninstall pytest-cov` everything is back to normal.\r\n\r\nWhen I run `python -v -m pytest` I get this far:\r\n```\r\n...\r\nimport 'pytest_cov' # <_frozen_importlib_external.SourceFileLoader object at 0x000001FBD0B18588>\r\n```\r\nAnd then it sits there forever. I tried installing an earlier version (2.5.1) - same result.\r\n\r\nVersions I have:\r\ncoverage==4.5.2\r\npytest==4.0.1\r\npytest-cov==2.6.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/247", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/247/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/247/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/247", "id": 392355950, "node_id": "MDU6SXNzdWUzOTIzNTU5NTA=", "number": 247, "title": "Test \"test_cover_looponfail\" fails against pytest-3.9.0+", "user": {"login": "stanislavlevin", "id": 31205609, "node_id": "MDQ6VXNlcjMxMjA1NjA5", "avatar_url": "https://avatars2.githubusercontent.com/u/31205609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanislavlevin", "html_url": "https://github.com/stanislavlevin", "followers_url": "https://api.github.com/users/stanislavlevin/followers", "following_url": "https://api.github.com/users/stanislavlevin/following{/other_user}", "gists_url": "https://api.github.com/users/stanislavlevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanislavlevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanislavlevin/subscriptions", "organizations_url": "https://api.github.com/users/stanislavlevin/orgs", "repos_url": "https://api.github.com/users/stanislavlevin/repos", "events_url": "https://api.github.com/users/stanislavlevin/events{/privacy}", "received_events_url": "https://api.github.com/users/stanislavlevin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-18T22:06:28Z", "updated_at": "2018-12-19T23:46:17Z", "closed_at": "2018-12-19T23:46:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Pytest 3.9.0 changed API for ``Testdir.runpytest_subprocess()``  and ``Testdir.run()``.\r\nThis resulted in:\r\n```\r\n========================================== FAILURES ===========================================\r\n____________________________________ test_cover_looponfail ____________________________________\r\n/usr/src/RPM/BUILD/python-module-pytest-cov-2.6.0/tests/test_pytest_cov.py:1041: in test_cover_looponfail\r\n    script) as process:\r\n/usr/lib/python2.7/site-packages/_pytest/pytester.py:914: in runpytest\r\n    return self._runpytest_method(*args, **kwargs)\r\nE   TypeError: <lambda>() got an unexpected keyword argument 'timeout'\r\n=================================== short test summary info ===================================\r\nFAIL tests/test_pytest_cov.py::test_cover_looponfail\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/243", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/243/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/243/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/243", "id": 383147129, "node_id": "MDU6SXNzdWUzODMxNDcxMjk=", "number": 243, "title": "Internal error \"Can't combine line data with arc data\" for code using subprocesses", "user": {"login": "skirpichev", "id": 2155800, "node_id": "MDQ6VXNlcjIxNTU4MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2155800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skirpichev", "html_url": "https://github.com/skirpichev", "followers_url": "https://api.github.com/users/skirpichev/followers", "following_url": "https://api.github.com/users/skirpichev/following{/other_user}", "gists_url": "https://api.github.com/users/skirpichev/gists{/gist_id}", "starred_url": "https://api.github.com/users/skirpichev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skirpichev/subscriptions", "organizations_url": "https://api.github.com/users/skirpichev/orgs", "repos_url": "https://api.github.com/users/skirpichev/repos", "events_url": "https://api.github.com/users/skirpichev/events{/privacy}", "received_events_url": "https://api.github.com/users/skirpichev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-21T14:37:30Z", "updated_at": "2018-11-22T12:30:55Z", "closed_at": "2018-11-22T12:30:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "While updating travis-ci config of the [diofant](https://github.com/diofant/diofant) from dist:trusty to dist:xenial I noticed [build failures like this](https://travis-ci.org/diofant/diofant/jobs/456008742) for jobs with coverage profiling enabled.\r\n\r\nLittle debugging shows, that problem seems to be related with ``autowrap()`` function calls. For example, in this scenario:\r\n```\r\n$ pip install .[exports,develop]\r\n$ cat diofant/tests/test-cov-bug.py \r\nfrom diofant.abc import x\r\nfrom diofant.utilities.autowrap import autowrap\r\ndef test_1():\r\n    assert str(x) == 'x'\r\ndef test_2():\r\n    f = autowrap(x)\r\n    assert f(0.1) == 0.1\r\n$ py.test --cov diofant diofant/tests/test-cov-bug.py\r\n========================================================= test session starts ==========================================================\r\nplatform linux -- Python 3.5.3, pytest-4.0.0, py-1.7.0, pluggy-0.8.0\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/sk/src/diofant/.hypothesis/examples')\r\ncache: True\r\nground types: gmpy\r\nrootdir: /home/sk/src/diofant, inifile: setup.cfg\r\nplugins: xdist-1.24.1, timeout-1.3.3, forked-0.2, cov-2.6.0, hypothesis-3.82.1\r\ntimeout: 600.0s\r\ntimeout method: signal\r\ntimeout func_only: False\r\ncollected 2 items                                                                                                                      \r\ndiofant/tests/test-cov-bug.py ..                                                                                                 [100%]\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/_pytest/main.py\", line 185, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/_pytest/main.py\", line 225, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/pluggy/hooks.py\", line 284, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/pytest_cov/plugin.py\", line 228, in pytest_runtestloop\r\nINTERNALERROR>     self.cov_controller.finish()\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/pytest_cov/engine.py\", line 167, in finish\r\nINTERNALERROR>     self.cov.stop()\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/coverage/control.py\", line 818, in combine\r\nINTERNALERROR>     self.data, aliases=aliases, data_paths=data_paths, strict=strict,\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/coverage/data.py\", line 736, in combine_parallel_data\r\nINTERNALERROR>     data.update(new_data, aliases=aliases)\r\nINTERNALERROR>   File \"/home/sk/venv/dev/lib/python3.5/site-packages/coverage/data.py\", line 488, in update\r\nINTERNALERROR>     raise CoverageException(\"Can't combine line data with arc data\")\r\nINTERNALERROR> coverage.misc.CoverageException: Can't combine line data with arc data\r\n======================================================= 2 passed in 3.66 seconds =======================================================\r\n```\r\nAfter such test run there are files like ``.coverage.hostname.1234``, which left on the system:\r\n```\r\n$ cat .coverage.note.3431.337550\r\n!coverage.py: This is a private format, don't read it directly!{\"lines\":{}}(dev) \r\n```\r\n\r\nProblem related with the ``test_2()``, if you blacklist this test by ``-k 'not test_2`` - there will be no internal error.  Also, as you can see, ``test_2`` itself was passed, problem happens only for coverage builds.\r\n\r\nNot sure why everything was working on Trusty's Travis builds (see e.g. [this](https://travis-ci.org/diofant/diofant/jobs/456869343) and [coverage for autowrap.py](https://codecov.io/gh/diofant/diofant/src/master/diofant/utilities/autowrap.py) seems to be enabled and around 91%), the problem happens to me for all local test runs with same CPython/packages versions as on Travis-CI.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/242", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/242/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/242/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/242", "id": 381548438, "node_id": "MDU6SXNzdWUzODE1NDg0Mzg=", "number": 242, "title": "$ pytest --cov causes some tests to fail", "user": {"login": "alichtman", "id": 20600565, "node_id": "MDQ6VXNlcjIwNjAwNTY1", "avatar_url": "https://avatars2.githubusercontent.com/u/20600565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alichtman", "html_url": "https://github.com/alichtman", "followers_url": "https://api.github.com/users/alichtman/followers", "following_url": "https://api.github.com/users/alichtman/following{/other_user}", "gists_url": "https://api.github.com/users/alichtman/gists{/gist_id}", "starred_url": "https://api.github.com/users/alichtman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alichtman/subscriptions", "organizations_url": "https://api.github.com/users/alichtman/orgs", "repos_url": "https://api.github.com/users/alichtman/repos", "events_url": "https://api.github.com/users/alichtman/events{/privacy}", "received_events_url": "https://api.github.com/users/alichtman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-16T10:52:17Z", "updated_at": "2018-11-18T09:41:42Z", "closed_at": "2018-11-18T09:41:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run `py.test`, all the tests pass. When I run `py.test --cov`, some tests fail.\r\n\r\nHere's a repo you can (hopefully) reproduce this with: https://github.com/alichtman/shallow-backup\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/238", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/238/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/238/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/238", "id": 381150644, "node_id": "MDU6SXNzdWUzODExNTA2NDQ=", "number": 238, "title": "--no-cov on pytest 4.0.0 produces warning", "user": {"login": "sybrenstuvel", "id": 1092128, "node_id": "MDQ6VXNlcjEwOTIxMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1092128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sybrenstuvel", "html_url": "https://github.com/sybrenstuvel", "followers_url": "https://api.github.com/users/sybrenstuvel/followers", "following_url": "https://api.github.com/users/sybrenstuvel/following{/other_user}", "gists_url": "https://api.github.com/users/sybrenstuvel/gists{/gist_id}", "starred_url": "https://api.github.com/users/sybrenstuvel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sybrenstuvel/subscriptions", "organizations_url": "https://api.github.com/users/sybrenstuvel/orgs", "repos_url": "https://api.github.com/users/sybrenstuvel/repos", "events_url": "https://api.github.com/users/sybrenstuvel/events{/privacy}", "received_events_url": "https://api.github.com/users/sybrenstuvel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 93282803, "node_id": "MDU6TGFiZWw5MzI4MjgwMw==", "url": "https://api.github.com/repos/pytest-dev/pytest-cov/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T13:00:21Z", "updated_at": "2018-11-15T14:43:24Z", "closed_at": "2018-11-15T14:43:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pytest-cov 2.6.0 and pytest 4.0.0, running `py.test --no-cov` logs a long traceback with a warning that `config.warn` is deprecated:\r\n\r\n```\r\n% pipenv run py.test --no-cov\r\n======================================================================================================== test session starts ========================================================================================================\r\nplatform linux -- Python 3.6.6, pytest-4.0.0, py-1.7.0, pluggy-0.8.0 -- /home/sybren/.virtualenvs/demo-VU2p87vc/bin/python3\r\ncachedir: .pytest_cache\r\nrootdir: /home/sybren/tmp/demo, inifile: setup.cfg\r\nplugins: cov-2.6.0\r\ncollected 1 item                                                                                                                                                                                                                    \r\n\r\ntest_dummy.py::test_this PASSED                                                                                                                                                                                               [100%]\r\nWARNING: Coverage disabled via --no-cov switch!\r\nTraceback (most recent call last):\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/bin/py.test\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/_pytest/config/__init__.py\", line 77, in main\r\n    return config.hook.pytest_cmdline_main(config=config)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\n    return outcome.get_result()\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/_pytest/main.py\", line 218, in pytest_cmdline_main\r\n    return wrap_session(config, _main)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/_pytest/main.py\", line 211, in wrap_session\r\n    session=session, exitstatus=session.exitstatus\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/_pytest/terminal.py\", line 639, in pytest_sessionfinish\r\n    terminalreporter=self, exitstatus=exitstatus\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\n    return outcome.get_result()\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/pytest_cov/plugin.py\", line 248, in pytest_terminal_summary\r\n    terminalreporter.config.warn(code='COV-1', message=message)\r\n  File \"/home/sybren/.virtualenvs/demo-VU2p87vc/lib/python3.6/site-packages/_pytest/config/__init__.py\", line 662, in warn\r\n    lineno=lineno,\r\n_pytest.warning_types.RemovedInPytest4Warning: config.warn has been deprecated, use warnings.warn instead\r\n```\r\n\r\nThis can be reproduced by taking the attached [demo.tar.gz](https://github.com/pytest-dev/pytest-cov/files/2585373/demo.tar.gz) and running `pipenv run py.test --no-cov`. I used Python 3.6.6 and Ubuntu 18.04. Note that `py.test` options are set in the `setup.cfg` file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/235", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/235/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/235/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/235", "id": 377867311, "node_id": "MDU6SXNzdWUzNzc4NjczMTE=", "number": 235, "title": "Can't run coverage with pytest 3.10.0", "user": {"login": "albertodonato", "id": 3472143, "node_id": "MDQ6VXNlcjM0NzIxNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3472143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertodonato", "html_url": "https://github.com/albertodonato", "followers_url": "https://api.github.com/users/albertodonato/followers", "following_url": "https://api.github.com/users/albertodonato/following{/other_user}", "gists_url": "https://api.github.com/users/albertodonato/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertodonato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertodonato/subscriptions", "organizations_url": "https://api.github.com/users/albertodonato/orgs", "repos_url": "https://api.github.com/users/albertodonato/repos", "events_url": "https://api.github.com/users/albertodonato/events{/privacy}", "received_events_url": "https://api.github.com/users/albertodonato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-06T14:20:02Z", "updated_at": "2018-11-06T16:29:27Z", "closed_at": "2018-11-06T16:29:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading to pytest 3.10.0, `pytest --cov` now fails with the following error:\r\n\r\n```\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/_pytest/main.py\", line 185, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/_pytest/main.py\", line 225, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/_pytest/main.py\", line 246, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/_pytest/runner.py\", line 78, in pytest_runtest_protocol\r\nINTERNALERROR>     item.ihook.pytest_runtest_logfinish(nodeid=item.nodeid, location=item.location)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/manager.py\", line 67, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/manager.py\", line 61, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/ack/prj/.ve/lib/python3.6/site-packages/_pytest/terminal.py\", line 432, in pytest_runtest_logfinish\r\nINTERNALERROR>     len(self._progress_nodeids_reported) == self._session.testscollected\r\nINTERNALERROR> AttributeError: 'NoneType' object has no attribute 'testscollected'\r\n```\r\n\r\nIt worked fine with pytest 3.9.3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/234", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/234/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/234/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/234", "id": 377492429, "node_id": "MDU6SXNzdWUzNzc0OTI0Mjk=", "number": 234, "title": "Coverage report generation incompatible with pytest `tmpdir` feature", "user": {"login": "bluenote10", "id": 3620703, "node_id": "MDQ6VXNlcjM2MjA3MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3620703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluenote10", "html_url": "https://github.com/bluenote10", "followers_url": "https://api.github.com/users/bluenote10/followers", "following_url": "https://api.github.com/users/bluenote10/following{/other_user}", "gists_url": "https://api.github.com/users/bluenote10/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluenote10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluenote10/subscriptions", "organizations_url": "https://api.github.com/users/bluenote10/orgs", "repos_url": "https://api.github.com/users/bluenote10/repos", "events_url": "https://api.github.com/users/bluenote10/events{/privacy}", "received_events_url": "https://api.github.com/users/bluenote10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/2", "html_url": "https://github.com/pytest-dev/pytest-cov/milestone/2", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/2/labels", "id": 3946746, "node_id": "MDk6TWlsZXN0b25lMzk0Njc0Ng==", "number": 2, "title": "v2.7", "description": "", "creator": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-01-07T12:39:01Z", "updated_at": "2019-03-25T01:47:16Z", "due_on": null, "closed_at": null}, "comments": 16, "created_at": "2018-11-05T16:59:49Z", "updated_at": "2020-01-14T16:14:34Z", "closed_at": "2019-03-25T01:46:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given a project structure like:\r\n\r\n```\r\nmyproject\r\n\u251c\u2500\u2500 myproject\r\n\u2502   \u2514\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 tests\r\n\u2502   \u2514\u2500\u2500 myproject\r\n\u2502       \u2514\u2500\u2500 test.py\r\n\u2514\u2500\u2500 setup.cfg\r\n```\r\n\r\nI'm running the command in the toplevel `myproject` directory:\r\n```\r\npy.test --cov=myproject --cov-report html\r\n```\r\n\r\nOn stdout I can see the log output:\r\n\r\n```\r\nCoverage HTML written to dir htmlcov\r\n```\r\n\r\nHowever no output has been written, i.e., the `myproject` directory does not contain `htmlcov` (and neither of its subdirectories). Even a `find / -name \"*htmlcov*\"` reveals nothing.\r\n\r\nNotes:\r\n- The output is written if I use `--cov-report html:/absolute/path/to/myproject/htmlcov`.\r\n- I get the same issue for `--cov-report xml`.\r\n- My tests `chdir` a lot -- can this mess up pytest-cov?\r\n\r\nVersions:\r\n- pytest: 3.8.1\r\n- pytest-cov: 2.6.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/233", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/233/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/233/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/233", "id": 370338812, "node_id": "MDU6SXNzdWUzNzAzMzg4MTI=", "number": 233, "title": "--cov-fail-under writes a nice message, but dosen't fail the test", "user": {"login": "TheoAndersen", "id": 319963, "node_id": "MDQ6VXNlcjMxOTk2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/319963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheoAndersen", "html_url": "https://github.com/TheoAndersen", "followers_url": "https://api.github.com/users/TheoAndersen/followers", "following_url": "https://api.github.com/users/TheoAndersen/following{/other_user}", "gists_url": "https://api.github.com/users/TheoAndersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheoAndersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheoAndersen/subscriptions", "organizations_url": "https://api.github.com/users/TheoAndersen/orgs", "repos_url": "https://api.github.com/users/TheoAndersen/repos", "events_url": "https://api.github.com/users/TheoAndersen/events{/privacy}", "received_events_url": "https://api.github.com/users/TheoAndersen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-15T20:51:53Z", "updated_at": "2018-10-28T19:02:03Z", "closed_at": "2018-10-15T21:13:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use ```cov_fail_under```, which writes a nice 'Fail'-message - but it doesnt fail the tests.\r\n\r\nIt would be nice if it did also fail the tests - i am especially using logic based on test failure or passing, and am needing to count on this to act as a test-error as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/231", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/231/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/231/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/231", "id": 363617600, "node_id": "MDU6SXNzdWUzNjM2MTc2MDA=", "number": 231, "title": "--cov-config not working as expected", "user": {"login": "lbdreyer", "id": 8101163, "node_id": "MDQ6VXNlcjgxMDExNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8101163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbdreyer", "html_url": "https://github.com/lbdreyer", "followers_url": "https://api.github.com/users/lbdreyer/followers", "following_url": "https://api.github.com/users/lbdreyer/following{/other_user}", "gists_url": "https://api.github.com/users/lbdreyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbdreyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbdreyer/subscriptions", "organizations_url": "https://api.github.com/users/lbdreyer/orgs", "repos_url": "https://api.github.com/users/lbdreyer/repos", "events_url": "https://api.github.com/users/lbdreyer/events{/privacy}", "received_events_url": "https://api.github.com/users/lbdreyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-25T14:48:10Z", "updated_at": "2018-09-26T10:44:49Z", "closed_at": "2018-09-26T10:44:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running pytest with coverage I am in a different directory to where the python project I'm testing and its .coveragerc live. I tried to point pytest-cov to my .coveragerc file with the `--cov-config` argument, as follows\r\n```\r\ncoverage run -m pytest --pyargs stratify --cov-config=/path/to/python-stratify/.coveragerc\r\n```\r\nbut it doesn't seem to work.\r\n\r\nI get the output:\r\n```\r\n$ coverage run -m pytest --pyargs stratify --cov-config=/path/to/python-stratify/.coveragerc && coverage report\r\n================================== test session starts ==================================\r\nplatform linux -- Python 3.6.6, pytest-3.7.4, py-1.6.0, pluggy-0.7.1\r\nrootdir:/path/to/python-stratify, inifile:\r\nplugins: cov-2.6.0\r\ncollected 68 items\r\n...\r\nName                                                                                          Stmts   Miss  Cover\r\n-----------------------------------------------------------------------------------------------------------------\r\n/path/to/python-stratify/stratify/__init__.py                         4      0   100%\r\n/path/to/python-stratify/stratify/_bounded_vinterp.py                52      0   100%\r\n/path/to/python-stratify/stratify/tests/__init__.py                   0      0   100%\r\n/path/to/python-stratify/stratify/tests/test_bounded_vinterp.py     129      1    99%\r\n/path/to/python-stratify/stratify/tests/test_vinterp.py             287      1    99%\r\n-----------------------------------------------------------------------------------------------------------------\r\nTOTAL                                                                                           472      2    99%\r\n```\r\n\r\nThis is not what I would expect as my .coveragerc is as follows:\r\n```\r\n[run]\r\nbranch = True\r\nomit = \r\n    */stratify/tests/*\r\nplugins = Cython.Coverage\r\n```\r\nbut the test files are not omited and the cython files are not handled\r\n\r\nIf I copy the .coveragerc into the directory I'm running pytest from it works fine:\r\n```\r\n$ coverage run -m pytest --pyargs stratify --cov-config=/path/to/python-stratify/.coveragerc && coverage report\r\n================================== test session starts ==================================\r\nplatform linux -- Python 3.6.6, pytest-3.7.4, py-1.6.0, pluggy-0.7.1\r\nrootdir: /path/to/python-stratify/, inifile:\r\nplugins: cov-2.6.0\r\ncollected 68 items\r\n...\r\n\r\nName                                                                                Stmts   Miss Branch BrPart  Cover\r\n---------------------------------------------------------------------------------------------------------------------\r\n/path/to/python-stratify/stratify/__init__.py               4      0      0      0   100%\r\n/path/to/python-stratify/stratify/_bounded_vinterp.py      52      0     12      0   100%\r\n/path/to/python-stratify/stratify/_conservative.pyx        32      2      0      0    94%\r\n/path/to/python-stratify/stratify/_vinterp.pyx            247     39      0      0    84%\r\n---------------------------------------------------------------------------------------------------------------------\r\nTOTAL                                                                                 335     41     12      0    88%\r\n```\r\n\r\nI'd like to avoid having to copy the .coveragerc into the directory I'm working from. Is there a way to point to a coveragerc that isn't in the directory you're working in?\r\n\r\nIf it helps, the repo I'm working with is available here: https://github.com/lbdreyer/python-stratify/tree/add_coveralls_mine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/219", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/219/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/219/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/219", "id": 352691561, "node_id": "MDU6SXNzdWUzNTI2OTE1NjE=", "number": 219, "title": "pytest.mark.no_cover not working as expected", "user": {"login": "nlgranger", "id": 3764009, "node_id": "MDQ6VXNlcjM3NjQwMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlgranger", "html_url": "https://github.com/nlgranger", "followers_url": "https://api.github.com/users/nlgranger/followers", "following_url": "https://api.github.com/users/nlgranger/following{/other_user}", "gists_url": "https://api.github.com/users/nlgranger/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlgranger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlgranger/subscriptions", "organizations_url": "https://api.github.com/users/nlgranger/orgs", "repos_url": "https://api.github.com/users/nlgranger/repos", "events_url": "https://api.github.com/users/nlgranger/events{/privacy}", "received_events_url": "https://api.github.com/users/nlgranger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-21T20:12:01Z", "updated_at": "2018-09-05T19:59:35Z", "closed_at": "2018-09-05T19:59:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI don't know if this is an issue with my understanding of the doc or with the functionality, but I'm having troubles using `pytest.mark.no_cover`.\r\nI have a test which involves timing and that must run as fast as possible. I'd like to disable coverage during the execution of that test, so I decorated the test with `pytest.mark.no_cover` (btw it is mark and not marker as written in the doc).\r\nThen I ran my test with:\r\n```sh\r\npytest --cov=\"seqtools\" --cov-config=\"setup.cfg\" tests/test_evaluation.py::test_prefetch_timing\r\n```\r\nThe test fails to terminate in time and the coverage report is not 0% as I expected.\r\n\r\nCould you please enlighten me on this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/218", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/218/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/218/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/218", "id": 351213698, "node_id": "MDU6SXNzdWUzNTEyMTM2OTg=", "number": 218, "title": "doc: example: coverage combine not needed?", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 93282803, "node_id": "MDU6TGFiZWw5MzI4MjgwMw==", "url": "https://api.github.com/repos/pytest-dev/pytest-cov/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-16T13:48:33Z", "updated_at": "2019-03-25T01:46:30Z", "closed_at": "2019-03-25T01:46:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think the following line is not needed, is it?\r\n\r\nhttps://github.com/pytest-dev/pytest-cov/blame/115155d34fc8661268c864238bc07b37938bbd0c/example/tox.ini#L29", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/216", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/216/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/216/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/216", "id": 346168376, "node_id": "MDU6SXNzdWUzNDYxNjgzNzY=", "number": 216, "title": "Pluggy incompatibility with pytest==3.7.0 when using pipenv", "user": {"login": "benhowes", "id": 471170, "node_id": "MDQ6VXNlcjQ3MTE3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/471170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benhowes", "html_url": "https://github.com/benhowes", "followers_url": "https://api.github.com/users/benhowes/followers", "following_url": "https://api.github.com/users/benhowes/following{/other_user}", "gists_url": "https://api.github.com/users/benhowes/gists{/gist_id}", "starred_url": "https://api.github.com/users/benhowes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benhowes/subscriptions", "organizations_url": "https://api.github.com/users/benhowes/orgs", "repos_url": "https://api.github.com/users/benhowes/repos", "events_url": "https://api.github.com/users/benhowes/events{/privacy}", "received_events_url": "https://api.github.com/users/benhowes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-31T12:37:01Z", "updated_at": "2018-08-01T08:11:46Z", "closed_at": "2018-08-01T08:11:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When updating in pipenv today:\r\n\r\n```\r\n$> pipenv install\r\nPipfile.lock (bd627c) out of date, updating to (5f00e3)...\r\nLocking [dev-packages] dependencies...\r\n\r\nWarning: Your dependencies could not be resolved. You likely have a mismatch in your sub-dependencies.\r\n  You can use $ pipenv install --skip-lock to bypass this mechanism, then run $ pipenv graph to inspect the situation.\r\n  Hint: try $ pipenv lock --pre if it is a pre-release dependency.\r\nCould not find a version that matches pluggy<0.7,>=0.5,>=0.7\r\nTried: 0.3.0, 0.3.0, 0.3.1, 0.3.1, 0.4.0, 0.4.0, 0.5.0, 0.5.1, 0.5.1, 0.5.2, 0.5.2, 0.6.0, 0.6.0, 0.6.0, 0.7.1, 0.7.1\r\nThere are incompatible versions in the resolved dependencies.\r\n```\r\nI cannot see a way in which pytest-cov directly depends on pluggy though?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/215", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/215/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/215/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/215", "id": 344774798, "node_id": "MDU6SXNzdWUzNDQ3NzQ3OTg=", "number": 215, "title": "Coverage is not measured with Python 3.7.0", "user": {"login": "volans-", "id": 6888121, "node_id": "MDQ6VXNlcjY4ODgxMjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6888121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volans-", "html_url": "https://github.com/volans-", "followers_url": "https://api.github.com/users/volans-/followers", "following_url": "https://api.github.com/users/volans-/following{/other_user}", "gists_url": "https://api.github.com/users/volans-/gists{/gist_id}", "starred_url": "https://api.github.com/users/volans-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volans-/subscriptions", "organizations_url": "https://api.github.com/users/volans-/orgs", "repos_url": "https://api.github.com/users/volans-/repos", "events_url": "https://api.github.com/users/volans-/events{/privacy}", "received_events_url": "https://api.github.com/users/volans-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-07-26T09:54:49Z", "updated_at": "2019-10-25T23:56:49Z", "closed_at": "2018-10-23T13:16:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've noticed that `pytest-cov` doesn't report properly the coverage with Python 3.7.0. Here a simple repro:\r\n\r\n### Directory structure\r\n```\r\n|-- foo\r\n|   |-- __init__.py\r\n|   `-- bar.py\r\n`-- tests\r\n    |-- __init__.py\r\n    `-- test_baz.py\r\n```\r\n\r\n### Files content\r\n\r\nAll `__init__.py` files are empty.\r\n#### `bar.py`\r\n```\r\ndef baz():\r\n    print('baz')\r\n```\r\n\r\n#### `test_baz.py`\r\n```\r\nfrom foo import bar\r\n\r\n\r\ndef test_foo():\r\n    bar.baz()\r\n```\r\n\r\n### `pip freeze` for both Python 3.6.5 and 3.7.0 environments\r\n```\r\n$ pip freeze\r\natomicwrites==1.1.5\r\nattrs==18.1.0\r\ncoverage==4.5.1\r\nmore-itertools==4.2.0\r\npluggy==0.6.0\r\npy==1.5.4\r\npytest==3.6.3\r\npytest-cov==2.5.1\r\nsix==1.11.0\r\n```\r\n\r\n### Test results with Python 3.6.5 (correct result)\r\n```\r\n$ py.test -p no:logging --strict --cov-report=term-missing --cov=foo tests\r\n=========================================== test session starts ============================================\r\nplatform darwin -- Python 3.6.5, pytest-3.6.3, py-1.5.4, pluggy-0.6.0\r\nrootdir: /private/tmp/foo, inifile:\r\nplugins: cov-2.5.1\r\ncollected 1 item\r\n\r\ntests/test_baz.py .                                                                                  [100%]\r\n\r\n---------- coverage: platform darwin, python 3.6.5-final-0 -----------\r\nName              Stmts   Miss  Cover   Missing\r\n-----------------------------------------------\r\nfoo/__init__.py       0      0   100%\r\nfoo/bar.py            2      0   100%\r\n-----------------------------------------------\r\nTOTAL                 2      0   100%\r\n\r\n\r\n========================================= 1 passed in 0.03 seconds =========================================\r\n```\r\n\r\n### Test results with Python 3.7.0 (incorrect result)\r\n```\r\n$ py.test -p no:logging --strict --cov-report=term-missing --cov=foo tests\r\n=========================================== test session starts ============================================\r\nplatform darwin -- Python 3.7.0, pytest-3.6.3, py-1.5.4, pluggy-0.6.0\r\nrootdir: /private/tmp/foo, inifile:\r\nplugins: cov-2.5.1\r\ncollected 1 item\r\n\r\ntests/test_baz.py .                                                                                  [100%]\r\n\r\n---------- coverage: platform darwin, python 3.7.0-final-0 -----------\r\nName              Stmts   Miss  Cover   Missing\r\n-----------------------------------------------\r\nfoo/__init__.py       0      0   100%\r\nfoo/bar.py            2      2     0%   1-2\r\n-----------------------------------------------\r\nTOTAL                 2      2     0%\r\n\r\n\r\n========================================= 1 passed in 0.03 seconds =========================================\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/212", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/212/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/212/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/212", "id": 338593354, "node_id": "MDU6SXNzdWUzMzg1OTMzNTQ=", "number": 212, "title": "warning \"Module x was never imported\" when running with xdist", "user": {"login": "anthrotype", "id": 6939968, "node_id": "MDQ6VXNlcjY5Mzk5Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6939968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthrotype", "html_url": "https://github.com/anthrotype", "followers_url": "https://api.github.com/users/anthrotype/followers", "following_url": "https://api.github.com/users/anthrotype/following{/other_user}", "gists_url": "https://api.github.com/users/anthrotype/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthrotype/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthrotype/subscriptions", "organizations_url": "https://api.github.com/users/anthrotype/orgs", "repos_url": "https://api.github.com/users/anthrotype/repos", "events_url": "https://api.github.com/users/anthrotype/events{/privacy}", "received_events_url": "https://api.github.com/users/anthrotype/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-05T14:14:41Z", "updated_at": "2020-06-20T11:34:34Z", "closed_at": "2019-03-25T01:46:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I install pytest-xdist plugin, and run `pytest --cov` with some `-n` number of parallel processes (even with `-n 1`), I get this warnings at the end:\r\n\r\n```\r\nCoverage.py warning: Module psautohint was never imported. (module-not-imported)\r\nCoverage.py warning: No data was collected. (no-data-collected)\r\n```\r\n\r\nHowever, the data is collected, the `.coverage.*` data file is created, and a report is printed correctly despite the warnings.\r\n\r\nIf I run without passing the -n xdist option, so not in parallel, I don't get any such warnings.\r\nSimilarly I don't get those warning if I run `coverage run -m pytest` instead of `pytest --cov`.\r\n\r\nI have a .coveragerc file in the root of the repository which contains this:\r\n\r\n```\r\nsource = psautohint\r\n\r\n[paths]\r\nsource =\r\n    src/psautohint\r\n    .tox/*/lib/python*/site-packages/psautohint\r\n    .tox/*/lib/site-packages/psautohint\r\n    .tox/pypy*/site-packages/psautohint\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/211", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/211/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/211/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/211", "id": 338360779, "node_id": "MDU6SXNzdWUzMzgzNjA3Nzk=", "number": 211, "title": "\"Module already imported so cannot be rewritten\" warning with COV_CORE_SOURCE", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-04T19:21:52Z", "updated_at": "2018-12-07T21:34:18Z", "closed_at": "2018-12-07T21:34:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using the following in pytest-django's tox.ini (via the suggestion in https://github.com/pytest-dev/pytest-django/pull/412#issuecomment-340077539):\r\n\r\n```\r\nCOV_CORE_SOURCE={toxinidir}\r\nCOV_CORE_CONFIG={toxinidir}/.coveragerc\r\nCOV_CORE_DATAFILE={toxinidir}/.coverage.eager\r\n```\r\n\r\nHowever, this requires to unset `COV_CORE_SOURCE` for the inner test runs\r\n(which uses `runpytest_subprocess`).\r\n\r\nI've noticed this because of a warning from pytest:\r\n\r\n> <undetermined location>\r\n>   Module already imported so cannot be rewritten: pytest_cov\r\n\r\nThis warning however is still triggered by the outer pytest.\r\n\r\nIt makes sense, but I wonder if there is a better way to load pytest-cov eagerly by now (mentioned in the thread with #412), or if I should just configure the outer pytest to ignore this warning?\r\n\r\nRelated issue https://github.com/pytest-dev/pytest-cov/issues/148.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/210", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/210/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/210/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/210", "id": 334206765, "node_id": "MDU6SXNzdWUzMzQyMDY3NjU=", "number": 210, "title": "flake8 and coverage interaction slows things down unnecessarily", "user": {"login": "timj", "id": 60622, "node_id": "MDQ6VXNlcjYwNjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/60622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timj", "html_url": "https://github.com/timj", "followers_url": "https://api.github.com/users/timj/followers", "following_url": "https://api.github.com/users/timj/following{/other_user}", "gists_url": "https://api.github.com/users/timj/gists{/gist_id}", "starred_url": "https://api.github.com/users/timj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timj/subscriptions", "organizations_url": "https://api.github.com/users/timj/orgs", "repos_url": "https://api.github.com/users/timj/repos", "events_url": "https://api.github.com/users/timj/events{/privacy}", "received_events_url": "https://api.github.com/users/timj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-20T18:53:43Z", "updated_at": "2018-09-16T11:02:07Z", "closed_at": "2018-09-16T11:02:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are noticing that enabling flake8 and coverage testing with pytest is slowing test execution down by a factor of 4. In one example, the tests run in 7 seconds without either plugin. Adding coverage slows down test execution to 13 seconds. Adding flake8 (no coverage) is 15 seconds, and using both is 30 seconds.\r\n\r\nIs there any way that coverage can be disabled for flake8 testing? Or is coverage enabled for everything in the python process (including pytest itself) so it's fundamentally impossible to pick and choose which tests have coverage enabled?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/208", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/208/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/208/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/208", "id": 329393120, "node_id": "MDU6SXNzdWUzMjkzOTMxMjA=", "number": 208, "title": "No coverage on passed tests", "user": {"login": "RaiVaibhav", "id": 22278438, "node_id": "MDQ6VXNlcjIyMjc4NDM4", "avatar_url": "https://avatars3.githubusercontent.com/u/22278438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RaiVaibhav", "html_url": "https://github.com/RaiVaibhav", "followers_url": "https://api.github.com/users/RaiVaibhav/followers", "following_url": "https://api.github.com/users/RaiVaibhav/following{/other_user}", "gists_url": "https://api.github.com/users/RaiVaibhav/gists{/gist_id}", "starred_url": "https://api.github.com/users/RaiVaibhav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RaiVaibhav/subscriptions", "organizations_url": "https://api.github.com/users/RaiVaibhav/orgs", "repos_url": "https://api.github.com/users/RaiVaibhav/repos", "events_url": "https://api.github.com/users/RaiVaibhav/events{/privacy}", "received_events_url": "https://api.github.com/users/RaiVaibhav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-05T10:22:05Z", "updated_at": "2018-06-12T15:16:19Z", "closed_at": "2018-06-12T15:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "During testing of a function ( this fucntion takes a `Pdb` object name `dbg` and call the method runcall to debug any external function --> 'fucn', `debug_mode_function` is created to debug the generators)\r\n\r\n```python\r\ndef debug_mode_function(func, dbg, *args, **kwargs):\r\n    results = []\r\n    bear_results = dbg.runcall(func, *args, **kwargs)\r\n    if isinstance(bear_results, collections.Iterable):\r\n        try:\r\n            iterator = iter(bear_results)\r\n            while True:\r\n                result = dbg.runcall(next, iterator)\r\n                results.append(result)\r\n        except StopIteration:\r\n            return results\r\n    else:\r\n        return results\r\n```\r\nSo to test it I have created a test using `StringIO` as I am caputing the value which I will get and after that asserting the string value \r\n\r\n```python\r\ndef test_debug_mode_function(self):\r\n    args = {}\r\n    kwargs = {}\r\n    def fun(*args, **kwargs):\r\n        yield 1\r\n        yield 2\r\n    input = StringIO('q\\nq\\nq')\r\n    output = StringIO()\r\n    dbg = Pdb(stdin=input ,stdout=output)\r\n    dbg.do_q = dbg.do_continue\r\n    self.assertEqual(debug_mode_function(fun, dbg, *args, **kwargs), [1,2])\r\n    output = output.getvalue()\r\n    self.assertEqual(output.split('\\n')[1], '-> yield 1')\r\n    self.assertEqual(output.split('\\n')[3], '-> yield 2')\r\n    output.close()\r\n```\r\n**But problem is when I add this test with my current test folder those test which runs after the above test are losing there coverage** , and when I remove the above test all works fine i.e., coverage of previous fles comes back to 100%.\r\nthere is not any problem of **test failing, all the test are passing**, \r\n\r\nVersion check\r\n```\r\n(2) vaibhav@Vaibhav:~/coala$ pytest --version\r\nThis is pytest version 3.1.3, imported from /home/vaibhav/2/lib/python3.6/site-packages/pytest.py\r\nsetuptools registered plugins:\r\n  requests-mock-1.5.0 at /home/vaibhav/2/lib/python3.6/site-packages/requests_mock/contrib/_pytest_plugin.py\r\n  pytest-xdist-1.20.1 at /home/vaibhav/2/lib/python3.6/site-packages/xdist/plugin.py\r\n  pytest-xdist-1.20.1 at /home/vaibhav/2/lib/python3.6/site-packages/xdist/looponfail.py\r\n  pytest-timeout-1.2.1 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_timeout.py\r\n  pytest-reqs-0.0.7 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_reqs.py\r\n  pytest-reorder-0.1.0 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_reorder/hook.py\r\n  pytest-mock-1.10.0 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_mock.py\r\n  pytest-instafail-0.3.0 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_instafail.py\r\n  pytest-forked-0.2 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_forked/__init__.py\r\n  pytest-error-for-skips-1.0.0 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_error_for_skips.py\r\n  pytest-env-0.6.2 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_env/plugin.py\r\n  pytest-cov-2.5.1 at /home/vaibhav/2/lib/python3.6/site-packages/pytest_cov/plugin.py\r\n````\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/207", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/207/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/207/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/207", "id": 327273149, "node_id": "MDU6SXNzdWUzMjcyNzMxNDk=", "number": 207, "title": "Don't measure coverage from certain lines", "user": {"login": "pckroon", "id": 12967865, "node_id": "MDQ6VXNlcjEyOTY3ODY1", "avatar_url": "https://avatars1.githubusercontent.com/u/12967865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pckroon", "html_url": "https://github.com/pckroon", "followers_url": "https://api.github.com/users/pckroon/followers", "following_url": "https://api.github.com/users/pckroon/following{/other_user}", "gists_url": "https://api.github.com/users/pckroon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pckroon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pckroon/subscriptions", "organizations_url": "https://api.github.com/users/pckroon/orgs", "repos_url": "https://api.github.com/users/pckroon/repos", "events_url": "https://api.github.com/users/pckroon/events{/privacy}", "received_events_url": "https://api.github.com/users/pckroon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-29T11:09:02Z", "updated_at": "2019-09-22T22:08:56Z", "closed_at": "2019-09-22T22:08:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI have a project that, on import, reads some datafiles. pytest-cov (and coverage) measure this code as being covered, even though it isn't actually tested (so long as it doesn't error). So my question, is there anyway to prevent coverage from measuring (not just reporting) those import snippets? Is it possible to record a \"background\" that should be substracted from the actual test results?\r\nI know this is probably more of an issue for coverage than pytest-cov, but maybe a solution is known here as well.\r\n\r\nPeter", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/203", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/203/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/203/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/203", "id": 319475519, "node_id": "MDU6SXNzdWUzMTk0NzU1MTk=", "number": 203, "title": "Option to fold multiple tox environment installs into one report?", "user": {"login": "madig", "id": 380829, "node_id": "MDQ6VXNlcjM4MDgyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/380829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madig", "html_url": "https://github.com/madig", "followers_url": "https://api.github.com/users/madig/followers", "following_url": "https://api.github.com/users/madig/following{/other_user}", "gists_url": "https://api.github.com/users/madig/gists{/gist_id}", "starred_url": "https://api.github.com/users/madig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madig/subscriptions", "organizations_url": "https://api.github.com/users/madig/orgs", "repos_url": "https://api.github.com/users/madig/repos", "events_url": "https://api.github.com/users/madig/events{/privacy}", "received_events_url": "https://api.github.com/users/madig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-02T09:19:09Z", "updated_at": "2019-02-05T13:17:20Z", "closed_at": "2019-02-05T13:17:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to switch from using coverage directly to pytest-cov because I can't get subprocess coverage to work. I currently have\r\n```\r\n[...]\r\n[paths]\r\nsource =\r\n    Lib/mypkg\r\n    .tox/*/Lib/python*/site-packages/mypkg\r\n    .tox/*/Lib/site-packages/mypkg\r\n[...]\r\n```\r\nin my `.coveragerc` file -- the last line is necessary on Windows because there, stuff gets installed to `.tox/py36/Lib/site-packages` instead of `.tox/py36/Lib/python3.6/site-packages` as on Linux. The documentation says the option in the rc file is ignored, so how do I add the path I need?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/201", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/201/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/201/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/201", "id": 314448833, "node_id": "MDU6SXNzdWUzMTQ0NDg4MzM=", "number": 201, "title": "identifying most relevant failure / integrations & public API", "user": {"login": "dchudz", "id": 1222726, "node_id": "MDQ6VXNlcjEyMjI3MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1222726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dchudz", "html_url": "https://github.com/dchudz", "followers_url": "https://api.github.com/users/dchudz/followers", "following_url": "https://api.github.com/users/dchudz/following{/other_user}", "gists_url": "https://api.github.com/users/dchudz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dchudz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dchudz/subscriptions", "organizations_url": "https://api.github.com/users/dchudz/orgs", "repos_url": "https://api.github.com/users/dchudz/repos", "events_url": "https://api.github.com/users/dchudz/events{/privacy}", "received_events_url": "https://api.github.com/users/dchudz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-15T20:27:22Z", "updated_at": "2019-01-09T02:13:35Z", "closed_at": "2019-01-09T02:13:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm interested in creating functionality for identifying the most relevant among a bunch of failures (by finding the failure whose covered lines are a subset of all other failures' covered lines).\r\n\r\nI've done this in a small prototype package (https://github.com/dchudz/besttest) by subclassing pytest-cov's `CovPlugin` and `Central` controller.\r\n\r\nThat's kinda gross, so I'm wondering:\r\n\r\n- is this a feature you'd be interested in for pytest-cov itself (off by default)?\r\n- if not, do you have any suggestions for integrating with pytest-cov?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/198", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/198/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/198/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/198", "id": 313514536, "node_id": "MDU6SXNzdWUzMTM1MTQ1MzY=", "number": 198, "title": "Missing coverage for mixin class when testing derived class?", "user": {"login": "BrendanDrew", "id": 10503185, "node_id": "MDQ6VXNlcjEwNTAzMTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/10503185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrendanDrew", "html_url": "https://github.com/BrendanDrew", "followers_url": "https://api.github.com/users/BrendanDrew/followers", "following_url": "https://api.github.com/users/BrendanDrew/following{/other_user}", "gists_url": "https://api.github.com/users/BrendanDrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrendanDrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrendanDrew/subscriptions", "organizations_url": "https://api.github.com/users/BrendanDrew/orgs", "repos_url": "https://api.github.com/users/BrendanDrew/repos", "events_url": "https://api.github.com/users/BrendanDrew/events{/privacy}", "received_events_url": "https://api.github.com/users/BrendanDrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-11T22:50:29Z", "updated_at": "2018-04-13T22:14:31Z", "closed_at": "2018-04-13T22:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is a bug or not.\r\n\r\nScenario:\r\nI have an implementation of Levenberg-Marquard that I'm using to \"invert\" a function. Because I am interested in the broad category of all such functions (not just one particular form), I thought I'd be \"clever\" and implement this particular portion as a mixin that can be freely inherited by client classes. Unfortunately, the mixin itself is not directly testable (it requires that client classes provide certain key pieces of information, such as gradients and the forward operation which I am attempting to invert). \r\n\r\nWhen I look at test coverage reports, I see clear indication that I have run tests which exercise calls to the mixin's methods via its concrete subclasses / clients (I know because I currently have tests that fail after making these calls -- d'oh!). What is confusing to me is that when I look at the coverage reports, I see the entire mixin being marked as uncovered. \r\n\r\nWhat are reasonable expectations in this case? I can imagine an implementation that, were a test to fail, pytest / pytest-cov may drop any information related to that test (such as coverage) and that once those tests pass, I /should/ see the coverage on the base class? If not, what are the \"right\" ways to go about testing classes which are not directly instantiatable (e.g. mixins, traditional OO abstract base classes, ...) in a way that produces true estimates of test coverage for those classes? \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/197", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/197/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/197/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/197", "id": 313473359, "node_id": "MDU6SXNzdWUzMTM0NzMzNTk=", "number": 197, "title": "Absolute paths in report when using pytest and ./setup.py install", "user": {"login": "homm", "id": 128982, "node_id": "MDQ6VXNlcjEyODk4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/128982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/homm", "html_url": "https://github.com/homm", "followers_url": "https://api.github.com/users/homm/followers", "following_url": "https://api.github.com/users/homm/following{/other_user}", "gists_url": "https://api.github.com/users/homm/gists{/gist_id}", "starred_url": "https://api.github.com/users/homm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/homm/subscriptions", "organizations_url": "https://api.github.com/users/homm/orgs", "repos_url": "https://api.github.com/users/homm/repos", "events_url": "https://api.github.com/users/homm/events{/privacy}", "received_events_url": "https://api.github.com/users/homm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-11T20:19:21Z", "updated_at": "2019-03-25T01:46:21Z", "closed_at": "2019-03-25T01:46:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I'm working on Pillow and after transiting from nose to pytest we are faced with the problem that all reports are looks like this one:\r\n\r\nhttps://travis-ci.org/python-pillow/Pillow/jobs/365242667#L4305\r\n\r\n```\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImageMode.py                24      0   100%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImageMorph.py              104      0   100%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImageOps.py                205     18    91%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImagePalette.py            117      3    97%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImagePath.py                 2      0   100%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImageQt.py                 101     78    23%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImageSequence.py            23      1    96%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImageShow.py                96     40    58%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImageStat.py                88      0   100%\r\n/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/Pillow-5.2.0.dev0-py3.6-linux-x86_64.egg/PIL/ImageTk.py                 128    102    20%\r\n```\r\n\r\nAll paths are absolute. And these paths are sent in Coveralls, that why we have hundreds of source files in Coveralls reports with duplicates for each python versions we have:\r\n\r\nhttps://coveralls.io/builds/16466459#source-files-datatable\r\n\r\nWe are building the library using [./setup.py build_ext and install](https://github.com/python-pillow/Pillow/blob/master/Makefile#L59) commands and then [runing pytest this way](https://github.com/python-pillow/Pillow/blob/master/.travis/script.sh#L10).\r\n\r\nI also check pytest with `./setup.py install` on different repo, it behaves exactly the same: paths are absolute:\r\n\r\n```\r\n$ pytest --cov pillow_lut\r\n===================================================== test session starts ======================================================\r\nplatform linux2 -- Python 2.7.6, pytest-3.5.0, py-1.5.3, pluggy-0.6.0\r\nrootdir: /home/homm/Code/pillow-lut-tools, inifile:\r\nplugins: cov-2.5.1, django-webtest-1.9.2, celery-4.1.0\r\ncollected 36 items                                                                                                             \r\n\r\ntests/test_generators.py ..........                                                                                      [ 27%]\r\ntests/test_loaders.py ........                                                                                           [ 50%]\r\ntests/test_operations.py ..................                                                                              [100%]\r\n\r\n---------- coverage: platform linux2, python 2.7.6-final-0 -----------\r\nName                                                                                                     Stmts   Miss  Cover\r\n----------------------------------------------------------------------------------------------------------------------------\r\n/home/homm/env/env_ucare/lib/python2.7/site-packages/pillow_lut-1.0-py2.7.egg/pillow_lut/__init__.py         6      0   100%\r\n/home/homm/env/env_ucare/lib/python2.7/site-packages/pillow_lut-1.0-py2.7.egg/pillow_lut/generators.py     220      0   100%\r\n/home/homm/env/env_ucare/lib/python2.7/site-packages/pillow_lut-1.0-py2.7.egg/pillow_lut/loaders.py         69      1    99%\r\n/home/homm/env/env_ucare/lib/python2.7/site-packages/pillow_lut-1.0-py2.7.egg/pillow_lut/operations.py     123      0   100%\r\n/home/homm/env/env_ucare/lib/python2.7/site-packages/pillow_lut-1.0-py2.7.egg/pillow_lut/utils.py            9      5    44%\r\n----------------------------------------------------------------------------------------------------------------------------\r\nTOTAL                                                                                                      427      6    99%\r\n\r\n\r\n============================================ 36 passed in 2.50 seconds =============================================\r\n\r\n\r\n\r\n$ nosetests Tests --with-coverage --cover-package=pillow_lut\r\n....................................\r\nName                       Stmts   Miss  Cover\r\n----------------------------------------------\r\npillow_lut/__init__.py         6      0   100%\r\npillow_lut/generators.py     220      0   100%\r\npillow_lut/loaders.py         69      1    99%\r\npillow_lut/operations.py     123      0   100%\r\npillow_lut/utils.py            9      5    44%\r\n----------------------------------------------\r\nTOTAL                        427      6    99%\r\n----------------------------------------------------------------------\r\nRan 36 tests in 1.986s\r\n\r\nOK\r\n```\r\n\r\n\r\nDo you have any advises how to avoid this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/196", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/196/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/196/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/196", "id": 310270209, "node_id": "MDU6SXNzdWUzMTAyNzAyMDk=", "number": 196, "title": "pytest-cov fails on travis", "user": {"login": "jgirardet", "id": 30120358, "node_id": "MDQ6VXNlcjMwMTIwMzU4", "avatar_url": "https://avatars3.githubusercontent.com/u/30120358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgirardet", "html_url": "https://github.com/jgirardet", "followers_url": "https://api.github.com/users/jgirardet/followers", "following_url": "https://api.github.com/users/jgirardet/following{/other_user}", "gists_url": "https://api.github.com/users/jgirardet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgirardet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgirardet/subscriptions", "organizations_url": "https://api.github.com/users/jgirardet/orgs", "repos_url": "https://api.github.com/users/jgirardet/repos", "events_url": "https://api.github.com/users/jgirardet/events{/privacy}", "received_events_url": "https://api.github.com/users/jgirardet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-31T20:35:17Z", "updated_at": "2018-06-03T22:46:33Z", "closed_at": "2018-06-03T22:46:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hellor,\r\nEverything goeas, great, all test passes and then I have this message :\r\n``` log\r\n\r\n1.89s$ make test-coverage\r\npipenv run py.test  --cov pythonthesorimed --cov-report term-missing --cov-report html\r\nCourtesy Notice: Pipenv found itself running within a virtual environment, so it will automatically use that environment, instead of creating its own for any project.\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.6.3, pytest-3.3.0, py-1.5.2, pluggy-0.6.0\r\nrootdir: /home/travis/build/jgirardet/pythonthesorimed, inifile: pytest.ini\r\nplugins: timeit-0.3.0, pythonpath-0.7.2, cov-2.5.1\r\ncollected 34 items                                                             \r\nrun-last-failure: run all (no recorded failures)\r\ntests/test_parseur.py ..................                                 [ 52%]\r\ntests/test_thesoitem.py ................                                 [100%]\r\n\r\n> INTERNALERROR> Traceback (most recent call last):\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/main.py\", line 103, in wrap_session\r\n> INTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/main.py\", line 141, in _main\r\n> INTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/__init__.py\", line 617, in __call__\r\n> INTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/__init__.py\", line 222, in _hookexec\r\n> INTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/__init__.py\", line 216, in <lambda>\r\n> INTERNALERROR>     firstresult=hook.spec_opts.get('firstresult'),\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/callers.py\", line 196, in _multicall\r\n> INTERNALERROR>     gen.send(outcome)\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pytest_cov/plugin.py\", line 239, in pytest_runtestloop\r\n> INTERNALERROR>     self.cov_total = self.cov_controller.summary(self.cov_report)\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pytest_cov/engine.py\", line 115, in summary\r\n> INTERNALERROR>     total = self.cov.html_report(ignore_errors=True, directory=self.cov_report['html'])\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/control.py\", line 1014, in html_report\r\n> INTERNALERROR>     return reporter.report(morfs)\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/html.py\", line 135, in report\r\n> INTERNALERROR>     self.report_files(self.html_file, morfs, self.config.html_dir)\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/report.py\", line 75, in report_files\r\n> INTERNALERROR>     report_fn(fr, self.coverage._analyze(fr))\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/control.py\", line 891, in _analyze\r\n> INTERNALERROR>     return Analysis(self.data, it)\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/results.py\", line 28, in __init__\r\n> INTERNALERROR>     self._arc_possibilities = sorted(self.file_reporter.arcs())\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/python.py\", line 165, in arcs\r\n> INTERNALERROR>     return self.parser.arcs()\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/parser.py\", line 238, in arcs\r\n> INTERNALERROR>     for l1, l2 in self.byte_parser._all_arcs():\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/parser.py\", line 624, in _all_arcs\r\n> INTERNALERROR>     arcs.update(bp._arcs())\r\n> INTERNALERROR>   File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coverage/parser.py\", line 590, in _arcs\r\n> INTERNALERROR>     next_chunk = byte_chunks[ex]\r\n> INTERNALERROR> KeyError: 32055\r\n```\r\nI really don't have any idea, what to do whith that. Does it come from travis or pytest-cov, I don't know.\r\n\r\npytest.ini\r\n``` ini\r\ntestpaths = tests\r\naddopts = --last-failed --exitfirst \r\npython_paths = .\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/194", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/194/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/194/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/194", "id": 305083093, "node_id": "MDU6SXNzdWUzMDUwODMwOTM=", "number": 194, "title": "Does pytest-cov co-works with pytest if a test is marked with @pytest.mark.skipif?", "user": {"login": "eundoosong", "id": 35110445, "node_id": "MDQ6VXNlcjM1MTEwNDQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/35110445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eundoosong", "html_url": "https://github.com/eundoosong", "followers_url": "https://api.github.com/users/eundoosong/followers", "following_url": "https://api.github.com/users/eundoosong/following{/other_user}", "gists_url": "https://api.github.com/users/eundoosong/gists{/gist_id}", "starred_url": "https://api.github.com/users/eundoosong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eundoosong/subscriptions", "organizations_url": "https://api.github.com/users/eundoosong/orgs", "repos_url": "https://api.github.com/users/eundoosong/repos", "events_url": "https://api.github.com/users/eundoosong/events{/privacy}", "received_events_url": "https://api.github.com/users/eundoosong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-14T09:36:07Z", "updated_at": "2018-03-17T17:06:45Z", "closed_at": "2018-03-17T17:06:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a test is disabled due to skipif mark provided by pytest, I think it shouldn't check the coverage as well.\r\nBut I can't find any option in pytest-cov that makes it available.\r\nI found, only options provided is adding \"exclude list\" into .coveragerc or \"# pragma: no cover\"  for code in each file.\r\n```python\r\n@pytest.mark.skipif('moduleA' not in sys.modules,\r\n                    reason=\"requires moduleA library\")\r\ndef test_A(self):\r\n        # Some test code with assert\r\n```\r\nIf it doesn't co-work with pytest in such case, does pytest-cov support a conditional api for excluding  test  as \"pytest.mark.skipif\" does?\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/193", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/193/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/193/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/193", "id": 302789887, "node_id": "MDU6SXNzdWUzMDI3ODk4ODc=", "number": 193, "title": "Excluding files/folder from code coverage", "user": {"login": "javixeneize", "id": 12761574, "node_id": "MDQ6VXNlcjEyNzYxNTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/12761574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javixeneize", "html_url": "https://github.com/javixeneize", "followers_url": "https://api.github.com/users/javixeneize/followers", "following_url": "https://api.github.com/users/javixeneize/following{/other_user}", "gists_url": "https://api.github.com/users/javixeneize/gists{/gist_id}", "starred_url": "https://api.github.com/users/javixeneize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javixeneize/subscriptions", "organizations_url": "https://api.github.com/users/javixeneize/orgs", "repos_url": "https://api.github.com/users/javixeneize/repos", "events_url": "https://api.github.com/users/javixeneize/events{/privacy}", "received_events_url": "https://api.github.com/users/javixeneize/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 93282808, "node_id": "MDU6TGFiZWw5MzI4MjgwOA==", "url": "https://api.github.com/repos/pytest-dev/pytest-cov/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-06T17:16:29Z", "updated_at": "2019-05-23T13:25:22Z", "closed_at": "2019-04-03T20:43:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nIm running pytest to check the code coverage. However its analysing some files that i dont want to analyse, as i have stubbed version of it in a different folder\r\n\r\nIs there any argument to exclude files or folders from code coverage?\r\n\r\nThe command im running is python -m pytest --cov=src\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/192", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/192/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/192/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/192", "id": 302655511, "node_id": "MDU6SXNzdWUzMDI2NTU1MTE=", "number": 192, "title": "Latest released version does not work with gevent", "user": {"login": "abbec", "id": 455022, "node_id": "MDQ6VXNlcjQ1NTAyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/455022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abbec", "html_url": "https://github.com/abbec", "followers_url": "https://api.github.com/users/abbec/followers", "following_url": "https://api.github.com/users/abbec/following{/other_user}", "gists_url": "https://api.github.com/users/abbec/gists{/gist_id}", "starred_url": "https://api.github.com/users/abbec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abbec/subscriptions", "organizations_url": "https://api.github.com/users/abbec/orgs", "repos_url": "https://api.github.com/users/abbec/repos", "events_url": "https://api.github.com/users/abbec/events{/privacy}", "received_events_url": "https://api.github.com/users/abbec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-06T11:00:43Z", "updated_at": "2018-07-09T12:46:10Z", "closed_at": "2018-07-09T12:46:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Gevent was fixed for `coverage >= 4` (https://bitbucket.org/ned/coveragepy/issue/149/coverage-gevent-looks-broken) but the latest released version of pytest-cov still uses `coverage < 4` which makes this not work unless it is run like this: https://stackoverflow.com/questions/22890779/determining-test-coverage-with-py-test-gevent.\r\n\r\nIt looks like a master uses `coverage 4.4` so I guess a new release would fix this. Is there one coming up?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/191", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/191/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/191/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/191", "id": 300212956, "node_id": "MDU6SXNzdWUzMDAyMTI5NTY=", "number": 191, "title": "`slaveoutput` and `slaveinput` are now called `workeroutput` and `workerinput` in pytest-xdist", "user": {"login": "martinmaillard", "id": 1334124, "node_id": "MDQ6VXNlcjEzMzQxMjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1334124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinmaillard", "html_url": "https://github.com/martinmaillard", "followers_url": "https://api.github.com/users/martinmaillard/followers", "following_url": "https://api.github.com/users/martinmaillard/following{/other_user}", "gists_url": "https://api.github.com/users/martinmaillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinmaillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinmaillard/subscriptions", "organizations_url": "https://api.github.com/users/martinmaillard/orgs", "repos_url": "https://api.github.com/users/martinmaillard/repos", "events_url": "https://api.github.com/users/martinmaillard/events{/privacy}", "received_events_url": "https://api.github.com/users/martinmaillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 93282808, "node_id": "MDU6TGFiZWw5MzI4MjgwOA==", "url": "https://api.github.com/repos/pytest-dev/pytest-cov/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-26T12:06:56Z", "updated_at": "2018-02-26T21:52:22Z", "closed_at": "2018-02-26T21:44:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the latest version of pytest-xdist (1.22.1), the \"master/slave\" terminology has been replaced by \"master/worker\" (https://github.com/pytest-dev/pytest-xdist/pull/268).\r\n\r\nI noticed the issue because I kept getting the following warning:\r\n> The following slaves failed to return coverage data, ensure that pytest-cov is installed on these slaves.\r\n\r\nThey provide aliases for backward compatibility but they don't seem to be available everywhere...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/189", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/189/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/189/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/189", "id": 295534918, "node_id": "MDU6SXNzdWUyOTU1MzQ5MTg=", "number": 189, "title": "Omitting conftest.py in the root dir doesn't work", "user": {"login": "olexandr-klymenko", "id": 2428944, "node_id": "MDQ6VXNlcjI0Mjg5NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2428944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olexandr-klymenko", "html_url": "https://github.com/olexandr-klymenko", "followers_url": "https://api.github.com/users/olexandr-klymenko/followers", "following_url": "https://api.github.com/users/olexandr-klymenko/following{/other_user}", "gists_url": "https://api.github.com/users/olexandr-klymenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/olexandr-klymenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olexandr-klymenko/subscriptions", "organizations_url": "https://api.github.com/users/olexandr-klymenko/orgs", "repos_url": "https://api.github.com/users/olexandr-klymenko/repos", "events_url": "https://api.github.com/users/olexandr-klymenko/events{/privacy}", "received_events_url": "https://api.github.com/users/olexandr-klymenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-08T14:37:04Z", "updated_at": "2018-02-09T10:05:43Z", "closed_at": "2018-02-09T10:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Versions of pytest and plugins:\r\n```\r\nThis is pytest version 3.4.0, imported from /usr/local/lib/python3.6/dist-packages/pytest.py\r\nsetuptools registered plugins:\r\n  pytest-sugar-0.9.1 at /usr/local/lib/python3.6/dist-packages/pytest_sugar.py\r\n  pytest-cov-2.5.1 at /usr/local/lib/python3.6/dist-packages/pytest_cov/plugin.py\r\n  pytest-asyncio-0.8.0 at /usr/local/lib/python3.6/dist-packages/pytest_asyncio/plugin.py\r\n```\r\n\r\n.coveragerc:\r\n```[html]\r\ndirectory=.htmlcov\r\n\r\n[run]\r\nomit =\r\n    */tasks.py\r\n    */tsdb.py\r\n    */__init__.py\r\n    */tests/*\r\n    *conftest*\r\n```\r\n\r\ncommand line:\r\n```\r\npytest --cov-report=html --cov-append --cov=.\r\n```\r\n\r\nExcpected:\r\n```\r\nconftest.py doesn't show up in the coverage report\r\n```\r\n\r\nResult:\r\n```\r\ncoverage report includes conftest.py \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/187", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/187/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/187/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/187", "id": 287996797, "node_id": "MDU6SXNzdWUyODc5OTY3OTc=", "number": 187, "title": "Miss module scope coverages when `python setup.py test` sometimes", "user": {"login": "yanqd0", "id": 8525143, "node_id": "MDQ6VXNlcjg1MjUxNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8525143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanqd0", "html_url": "https://github.com/yanqd0", "followers_url": "https://api.github.com/users/yanqd0/followers", "following_url": "https://api.github.com/users/yanqd0/following{/other_user}", "gists_url": "https://api.github.com/users/yanqd0/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanqd0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanqd0/subscriptions", "organizations_url": "https://api.github.com/users/yanqd0/orgs", "repos_url": "https://api.github.com/users/yanqd0/repos", "events_url": "https://api.github.com/users/yanqd0/events{/privacy}", "received_events_url": "https://api.github.com/users/yanqd0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-12T03:22:34Z", "updated_at": "2018-01-12T13:54:44Z", "closed_at": "2018-01-12T13:54:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When working with `pytest`, it is OK. But if working with `python setup.py test` and without pytest-cov installed explicitly, the module scope coverages will be missing.\r\n\r\nThis bug can be reproducted in any platform. For example:\r\n\r\n```sh\r\ngit clone https://github.com/yanqd0/csft.git\r\ncd csft\r\npip install . -r requirements.txt\r\n```\r\n\r\nThe test result is something like this:\r\n\r\n```console\r\n$ python setup.py test\r\nName               Stmts   Miss  Cover\r\n--------------------------------------\r\ncsft/__init__.py      17      7    59%\r\ncsft/__main__.py      43     14    67%\r\ncsft/_csft.py         52      1    98%\r\n--------------------------------------\r\nTOTAL                112     22    80%\r\n```\r\n\r\nThis is OK.\r\n\r\nBut if I uninstall `pytest-cov`, and run `python setup.py test` again, the result will change.\r\n\r\n```console\r\n$ pip uninstall pytest-cov -y\r\nUninstalling pytest-cov-2.5.1:\r\n  Successfully uninstalled pytest-cov-2.5.1\r\n$ python setup.py test\r\nName               Stmts   Miss  Cover\r\n--------------------------------------\r\ncsft/__init__.py      17     17     0%\r\ncsft/__main__.py      43     15    65%\r\ncsft/_csft.py         52     18    65%\r\n--------------------------------------\r\nTOTAL                112     50    55%\r\n```\r\n\r\nThe missing parts are all in module scope, like imports and defs.\r\nThere is a related demo page in [codecov](https://codecov.io/gh/yanqd0/csft/tree/9ff975d0448b1befb779984ebf0cc26a54c04640/csft). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/186", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/186/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/186/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/186", "id": 287934256, "node_id": "MDU6SXNzdWUyODc5MzQyNTY=", "number": 186, "title": "xml report file is empty", "user": {"login": "petobens", "id": 2583971, "node_id": "MDQ6VXNlcjI1ODM5NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2583971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petobens", "html_url": "https://github.com/petobens", "followers_url": "https://api.github.com/users/petobens/followers", "following_url": "https://api.github.com/users/petobens/following{/other_user}", "gists_url": "https://api.github.com/users/petobens/gists{/gist_id}", "starred_url": "https://api.github.com/users/petobens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petobens/subscriptions", "organizations_url": "https://api.github.com/users/petobens/orgs", "repos_url": "https://api.github.com/users/petobens/repos", "events_url": "https://api.github.com/users/petobens/events{/privacy}", "received_events_url": "https://api.github.com/users/petobens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-01-11T21:43:24Z", "updated_at": "2018-01-12T17:07:28Z", "closed_at": "2018-01-12T17:07:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the following command:\r\n```commandline\r\npytest --cov-report xml --cov-report html --cov=. tests/\r\n```\r\nthe html coverage report is generated under `htmlcov/` but the `coverage.xml` file  is empty.\r\nCan you reproduce this behaviour? I'm using:\r\n```\r\npytest (3.3.2)\r\npytest-cov (2.5.1)\r\ncoverage (4.4.2)\r\n```\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/180", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/180/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/180/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/180", "id": 270989042, "node_id": "MDU6SXNzdWUyNzA5ODkwNDI=", "number": 180, "title": "Omiting folders for coverage from setup.cfg", "user": {"login": "sebastian-code", "id": 5254850, "node_id": "MDQ6VXNlcjUyNTQ4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5254850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastian-code", "html_url": "https://github.com/sebastian-code", "followers_url": "https://api.github.com/users/sebastian-code/followers", "following_url": "https://api.github.com/users/sebastian-code/following{/other_user}", "gists_url": "https://api.github.com/users/sebastian-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastian-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastian-code/subscriptions", "organizations_url": "https://api.github.com/users/sebastian-code/orgs", "repos_url": "https://api.github.com/users/sebastian-code/repos", "events_url": "https://api.github.com/users/sebastian-code/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastian-code/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-03T14:04:18Z", "updated_at": "2018-10-30T01:16:50Z", "closed_at": "2018-10-30T01:16:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running on my project PyTest and Coverage, and I'm trying to implement this plugin, the issue I'm having is than I haven't been able to make it run omitting some folders, and I haven't been able to make it run as automated as I want.\r\n\r\nPerhaps what I need is more help than reporting an issue, but up to now I haven't been able to find a way it picks the `omit=` line, perhaps is related to additional configurations.\r\n\r\nMy libraries:\r\n```\r\nPython 3.5.2\r\ncoverage==4.0.3\r\npytest==3.2.3\r\npytest-cov==2.5.1\r\npytest-django==2.9.1\r\npytest-flake8==0.9.1\r\npytest-sugar==0.7.1\r\ndjango-coverage-plugin==1.3\r\n```\r\nMy `setup.cfg` file (Partially, the last part is for PyLint and is really long):\r\n\r\n```\r\n[tool:pytest]\r\nDJANGO_SETTINGS_MODULE=config.settings.local\r\npython_files=tests.py test_*.py *_tests.py\r\naddopts=--cov=accountant --cov-config setup.cfg\r\n\r\n[coverage:run]\r\nsource=accountant/*\r\nomit=*/migrations/*,*/tests/*\r\nplugins=django_coverage_plugin\r\n\r\n[flake8]\r\nmax-line-length=80\r\nexclude=.tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,build,dist,*.egg-info\r\nstatistics=True\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/179", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/179/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/179/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/179", "id": 269918077, "node_id": "MDU6SXNzdWUyNjk5MTgwNzc=", "number": 179, "title": "pytest-cov coverage.xml does not reflect multiple hits of a line", "user": {"login": "nikhilh-20", "id": 9674215, "node_id": "MDQ6VXNlcjk2NzQyMTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9674215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilh-20", "html_url": "https://github.com/nikhilh-20", "followers_url": "https://api.github.com/users/nikhilh-20/followers", "following_url": "https://api.github.com/users/nikhilh-20/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilh-20/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilh-20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilh-20/subscriptions", "organizations_url": "https://api.github.com/users/nikhilh-20/orgs", "repos_url": "https://api.github.com/users/nikhilh-20/repos", "events_url": "https://api.github.com/users/nikhilh-20/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilh-20/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-31T11:05:07Z", "updated_at": "2017-10-31T11:31:23Z", "closed_at": "2017-10-31T11:24:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "All information with respect to pytest version 3.0.7 on a RHEL 2.6.32-504.3.3.el6.x86_64\r\n\r\nI'm working on getting the coverage data of test files.\r\nHere's my pytest setup:\r\n\r\nbasic.py\r\n```\r\nclass Basic():\r\n    def __init__(self):\r\n        print ('Basic initialized')\r\n    def add_num(self, num1, num2):\r\n        counter = 0\r\n        while (counter < 5):\r\n            print (counter)\r\n            counter = counter + 1\r\n        return (num1 + num2)\r\n\r\n```\r\n\r\ntest_basic.py\r\n```\r\nclass TestCalculator():\r\n    def test_calculator(self):\r\n        from basic import Basic\r\n        basic_obj = Basic()\r\n        sum_nums = basic_obj.add_num(1,2)\r\n```\r\n\r\n.coveragerc\r\n```\r\n[run]\r\nbranch = 1\r\n\r\n[report]\r\nfail_under = 95\r\nshow_missing = True\r\nprecision = 2\r\n\r\n[xml]\r\noutput = coverage.xml\r\n```\r\n\r\nI'm running pytest as:\r\n`py.test --cov-report xml --cov=test/lib test/lib/test_basic.py`\r\n\r\nThis is a snippet of the data that coverage.xml contains:\r\n```\r\n<classes>\r\n<class branch-rate=\"1\" complexity=\"0\" filename=\"test/lib/basic.py\" line-rate=\"1\" name=\"test/lib/basic\">\r\n    <methods/>\r\n    <lines>\r\n        ...\r\n        ...\r\n        <line hits=\"1\" number=\"5\"/>\r\n        <line branch=\"true\" condition-coverage=\"100% (2/2)\" hits=\"1\" number=\"6\"/>\r\n        <line hits=\"1\" number=\"7\"/>\r\n        <line hits=\"1\" number=\"8\"/>\r\n        ...\r\n        ...\r\n```\r\n\r\nIn basic.py, line 6,7,8 are executed multiple times (6, 5, 5 times respectively). \r\ncoverage.xml `line hits` does not reflect this number. Is there any development on this? Or is there any available hack that I can use?\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/177", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/177/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/177/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/177", "id": 269274612, "node_id": "MDU6SXNzdWUyNjkyNzQ2MTI=", "number": 177, "title": "Document dealing with covering plugins", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/1", "html_url": "https://github.com/pytest-dev/pytest-cov/milestone/1", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/1/labels", "id": 2871122, "node_id": "MDk6TWlsZXN0b25lMjg3MTEyMg==", "number": 1, "title": "v2.6", "description": "", "creator": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2017-10-28T01:03:23Z", "updated_at": "2019-01-07T12:44:29Z", "due_on": null, "closed_at": "2019-01-07T12:38:57Z"}, "comments": 0, "created_at": "2017-10-28T01:45:27Z", "updated_at": "2017-11-24T17:23:26Z", "closed_at": "2017-11-24T17:23:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(the `--append` / the `COV_CORE_` trio)\r\n\r\n(also, https://github.com/pytest-dev/pytest/issues/935#issuecomment-245107960)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/176", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/176/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/176/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/176", "id": 269272593, "node_id": "MDU6SXNzdWUyNjkyNzI1OTM=", "number": 176, "title": "Document source/paths/include vs project layout/installation", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/2", "html_url": "https://github.com/pytest-dev/pytest-cov/milestone/2", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/2/labels", "id": 3946746, "node_id": "MDk6TWlsZXN0b25lMzk0Njc0Ng==", "number": 2, "title": "v2.7", "description": "", "creator": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-01-07T12:39:01Z", "updated_at": "2019-03-25T01:47:16Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2017-10-28T01:12:03Z", "updated_at": "2019-03-25T01:47:16Z", "closed_at": "2019-03-25T01:47:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Basically there are two problems:\r\n- how to do path aliasing using src layout (code is run from site-packages, needs to be aliased to src for pretty reports)\r\n- how to deal with ad-hoc layout problems\r\n\r\nAlso, mention significance of `.coveragerc` vs `tox.ini`/`setup.cfg` name (using `tox.ini`/`setup.cfg` without `--cov-config` will create create problems if tests change CWD).\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/174", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/174/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/174/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/174", "id": 266883578, "node_id": "MDU6SXNzdWUyNjY4ODM1Nzg=", "number": 174, "title": "coverage data seems to be combined too early", "user": {"login": "nilleb", "id": 3499719, "node_id": "MDQ6VXNlcjM0OTk3MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3499719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nilleb", "html_url": "https://github.com/nilleb", "followers_url": "https://api.github.com/users/nilleb/followers", "following_url": "https://api.github.com/users/nilleb/following{/other_user}", "gists_url": "https://api.github.com/users/nilleb/gists{/gist_id}", "starred_url": "https://api.github.com/users/nilleb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nilleb/subscriptions", "organizations_url": "https://api.github.com/users/nilleb/orgs", "repos_url": "https://api.github.com/users/nilleb/repos", "events_url": "https://api.github.com/users/nilleb/events{/privacy}", "received_events_url": "https://api.github.com/users/nilleb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-19T15:22:12Z", "updated_at": "2017-10-20T07:15:21Z", "closed_at": "2017-10-20T07:15:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ pytest server/analytics -n 8  --cov=server --cov-report xml:../coverage.xml\r\n\r\nplatform darwin -- Python 2.7.13, pytest-3.0.5, py-1.4.31, pluggy-0.4.0\r\nmetadata: {'Python': '2.7.13', 'Platform': 'Darwin-17.0.0-x86_64-i386-64bit', 'Packages': {'py': '1.4.31', 'pytest': '3.0.5', 'pluggy': '0.4.0'}, 'Plugins': {'cov': '2.5.1', 'html': '1.16.0', 'xdist': '1.15.0', 'mock': '1.5.0', 'metadata': '1.5.0'}}\r\nrootdir: /Users/nilleb/dev/project, inifile: pytest.ini\r\nplugins: xdist-1.15.0, mock-1.5.0, metadata-1.5.0, html-1.16.0, cov-2.5.1\r\ngw0 [70] / gw1 [70] / gw2 [70] / gw3 [70] / gw4 [70] / gw5 [70] / gw6 [70] / gw7 [70]\r\nscheduling tests via LoadScheduling\r\n.....................................................................Coverage.py warning: Couldn't read data from '/Users/nilleb/dev/project/app/.coverage.lumal13.local.1690.467794': CoverageException: Doesn't seem to be a coverage.py data file\r\nCoverage.py warning: Couldn't read data from '/Users/nilleb/dev/project/app/.coverage.lumal13.local.1689.673704': CoverageException: Doesn't seem to be a coverage.py data file\r\nCoverage.py warning: Couldn't read data from '/Users/nilleb/dev/project/app/.coverage.lumal13.local.1690.467794': CoverageException: Doesn't seem to be a coverage.py data file\r\nCoverage.py warning: Couldn't read data from '/Users/nilleb/dev/project/app/.coverage.lumal13.local.1688.905141': ValueError: Expecting object: line 1 column 65473 (char 65472)\r\nCoverage.py warning: Couldn't read data from '/Users/nilleb/dev/project/app/.coverage.lumal13.local.1688.905141': ValueError: Expecting object: line 1 column 65473 (char 65472)\r\n```\r\nbut when I execute a \r\n`coverage combine` in the `/Users/nilleb/dev/project/app/` folder, I get the .coverage file I would expect to get.\r\n\r\n\r\nI am a python developer, I am going to have a look at your code. Any hint about where to start is welcome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/173", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/173/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/173/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/173", "id": 266492014, "node_id": "MDU6SXNzdWUyNjY0OTIwMTQ=", "number": 173, "title": "Coverage of remote services", "user": {"login": "TheFriendlyCoder", "id": 5114350, "node_id": "MDQ6VXNlcjUxMTQzNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5114350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheFriendlyCoder", "html_url": "https://github.com/TheFriendlyCoder", "followers_url": "https://api.github.com/users/TheFriendlyCoder/followers", "following_url": "https://api.github.com/users/TheFriendlyCoder/following{/other_user}", "gists_url": "https://api.github.com/users/TheFriendlyCoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheFriendlyCoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheFriendlyCoder/subscriptions", "organizations_url": "https://api.github.com/users/TheFriendlyCoder/orgs", "repos_url": "https://api.github.com/users/TheFriendlyCoder/repos", "events_url": "https://api.github.com/users/TheFriendlyCoder/events{/privacy}", "received_events_url": "https://api.github.com/users/TheFriendlyCoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-10-18T13:25:49Z", "updated_at": "2017-10-19T12:47:19Z", "closed_at": "2017-10-19T12:47:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more of a question than a defect, but I'm just wondering if there is any way to use pytest-cov, maybe with the `--dist` flag, to gather metrics from code stored and executed on a remote server?\r\n\r\nHere's the use case I have: I have a Python library I'm writing which interacts with a third party service. To test my library I have a pytest framework that launches a Docker container with the third party service installed on it, then I install my library inside the container, then I execute my test code. The testing logic then interacts with the third party service to flex the behavior of my library.\r\n\r\nThe problem here is that the Python runtime running my library isn't on my host / local machine, it's inside the docker container... and my scripts are invoked directly by the test API, but rather indirectly via the third party service running in the container.\r\n\r\nSo my question is: is there any way for me to set up the Python environment inside the Docker container to somehow run pytest and track the coverage metrics of any and all calls made to my library, and then accumulate those metrics and report them by the pytest runner running on the host?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/172", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/172/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/172/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/172", "id": 262005389, "node_id": "MDU6SXNzdWUyNjIwMDUzODk=", "number": 172, "title": "Recursion error while installing", "user": {"login": "daegontaven", "id": 8206808, "node_id": "MDQ6VXNlcjgyMDY4MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8206808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daegontaven", "html_url": "https://github.com/daegontaven", "followers_url": "https://api.github.com/users/daegontaven/followers", "following_url": "https://api.github.com/users/daegontaven/following{/other_user}", "gists_url": "https://api.github.com/users/daegontaven/gists{/gist_id}", "starred_url": "https://api.github.com/users/daegontaven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daegontaven/subscriptions", "organizations_url": "https://api.github.com/users/daegontaven/orgs", "repos_url": "https://api.github.com/users/daegontaven/repos", "events_url": "https://api.github.com/users/daegontaven/events{/privacy}", "received_events_url": "https://api.github.com/users/daegontaven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-02T07:50:01Z", "updated_at": "2017-10-02T08:47:45Z", "closed_at": "2017-10-02T08:47:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to test my application using pytest. I only have pytest-cov as dependency for the tests even though I'm not actually using it. However, for some reason it's not installing on travis for python 3.5. It  displays a recursion error while installing. This issue does not exist on python 3.6.\r\n\r\nThe full log can be viewed [here](https://travis-ci.org/AlphaHooks/AlphaHooks/jobs/281456582#L569).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/170", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/170/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/170/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/170", "id": 260893417, "node_id": "MDU6SXNzdWUyNjA4OTM0MTc=", "number": 170, "title": "Document how to use append", "user": {"login": "oppianmatt", "id": 48596, "node_id": "MDQ6VXNlcjQ4NTk2", "avatar_url": "https://avatars0.githubusercontent.com/u/48596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oppianmatt", "html_url": "https://github.com/oppianmatt", "followers_url": "https://api.github.com/users/oppianmatt/followers", "following_url": "https://api.github.com/users/oppianmatt/following{/other_user}", "gists_url": "https://api.github.com/users/oppianmatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/oppianmatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oppianmatt/subscriptions", "organizations_url": "https://api.github.com/users/oppianmatt/orgs", "repos_url": "https://api.github.com/users/oppianmatt/repos", "events_url": "https://api.github.com/users/oppianmatt/events{/privacy}", "received_events_url": "https://api.github.com/users/oppianmatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/2", "html_url": "https://github.com/pytest-dev/pytest-cov/milestone/2", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/2/labels", "id": 3946746, "node_id": "MDk6TWlsZXN0b25lMzk0Njc0Ng==", "number": 2, "title": "v2.7", "description": "", "creator": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-01-07T12:39:01Z", "updated_at": "2019-03-25T01:47:16Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2017-09-27T08:44:46Z", "updated_at": "2019-03-25T01:44:38Z", "closed_at": "2019-03-25T01:44:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a section in the docs:\r\n\r\n> Coverage Data File\r\n> \r\n> The data file is erased at the beginning of testing to ensure clean data for each test run. If you need to combine the coverage of several test runs you can use the --cov-append option to append this coverage data to coverage data from previous test runs.\r\n> \r\n> The data file is left at the end of testing so that it is possible to use normal coverage tools to examine it.\r\n\r\nBut it's very light on details. What data file is left over?\r\n\r\nMy use case is as follows. I split my tests into groups for running in parallel using cloud instances using https://github.com/mark-adams/pytest-test-groups\r\n\r\nThis produces a separate report for each group. I would like to have a step that combined all the reports into one at the end. Is this possible?\r\n\r\nReading about cov-append seems to indicate so. I just need to know what data files it needs to be persisted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/169", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/169/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/169/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/169", "id": 258835075, "node_id": "MDU6SXNzdWUyNTg4MzUwNzU=", "number": 169, "title": "Document/implement how to specify multiple sources", "user": {"login": "altendky", "id": 543719, "node_id": "MDQ6VXNlcjU0MzcxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/543719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/altendky", "html_url": "https://github.com/altendky", "followers_url": "https://api.github.com/users/altendky/followers", "following_url": "https://api.github.com/users/altendky/following{/other_user}", "gists_url": "https://api.github.com/users/altendky/gists{/gist_id}", "starred_url": "https://api.github.com/users/altendky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/altendky/subscriptions", "organizations_url": "https://api.github.com/users/altendky/orgs", "repos_url": "https://api.github.com/users/altendky/repos", "events_url": "https://api.github.com/users/altendky/events{/privacy}", "received_events_url": "https://api.github.com/users/altendky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/2", "html_url": "https://github.com/pytest-dev/pytest-cov/milestone/2", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/milestones/2/labels", "id": 3946746, "node_id": "MDk6TWlsZXN0b25lMzk0Njc0Ng==", "number": 2, "title": "v2.7", "description": "", "creator": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2019-01-07T12:39:01Z", "updated_at": "2019-03-25T01:47:16Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2017-09-19T14:10:06Z", "updated_at": "2019-03-25T01:44:37Z", "closed_at": "2019-03-25T01:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Presently `README.rst` states:\r\n\r\n```\r\nNote that this plugin controls some options and setting the option in the config file will have no effect. These include specifying source to be measured (source option) and all data file handling (data_file and parallel options).\r\n```\r\n\r\nI also find no reference to passing multiple source specifications to `--cov`.  This leaves no apparent ability to specify multiple sources such as your package and also the tests themselves.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/165", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/165/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/165/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/165", "id": 243517711, "node_id": "MDU6SXNzdWUyNDM1MTc3MTE=", "number": 165, "title": "Windows: coverage through multiprocessing not catched correctly", "user": {"login": "Makman2", "id": 6023916, "node_id": "MDQ6VXNlcjYwMjM5MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6023916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Makman2", "html_url": "https://github.com/Makman2", "followers_url": "https://api.github.com/users/Makman2/followers", "following_url": "https://api.github.com/users/Makman2/following{/other_user}", "gists_url": "https://api.github.com/users/Makman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Makman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Makman2/subscriptions", "organizations_url": "https://api.github.com/users/Makman2/orgs", "repos_url": "https://api.github.com/users/Makman2/repos", "events_url": "https://api.github.com/users/Makman2/events{/privacy}", "received_events_url": "https://api.github.com/users/Makman2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-07-17T20:29:56Z", "updated_at": "2017-07-30T20:00:05Z", "closed_at": "2017-07-30T20:00:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ;)\r\n\r\nRecently I'm trying to get the test coverage to 100% on a windows machine, but it doesn't want to. My code under test uses an event-loop driven by a `concurrent.futures.ProcessPoolExecutor`. Coverage is 100% on a Linux machine, but not on Windows.\r\n\r\nPR:\r\nhttps://github.com/coala/coala/pull/4475\r\nBuild on AppVeyor:\r\nhttps://ci.appveyor.com/project/coala/coala/build/1.0.7774\r\nSame build but on Linux (Travis):\r\nhttps://travis-ci.org/coala/coala/builds/254572218?utm_source=github_status&utm_medium=notification\r\nRelevant Python module/components under test:\r\nhttps://github.com/coala/coala/tree/8f4113a2f471acf4c0121199c6ebb9b29dfa84ff/coalib/core, specificially\r\n- https://github.com/coala/coala/blob/8f4113a2f471acf4c0121199c6ebb9b29dfa84ff/coalib/core/FileBear.py\r\n- https://github.com/coala/coala/blob/8f4113a2f471acf4c0121199c6ebb9b29dfa84ff/coalib/core/ProjectBear.py\r\n\r\nThe missing lines are the ones inside `def execute_task`.\r\n\r\n`setup.cfg` (and yes, coverage is enabled ;D):\r\nhttps://github.com/coala/coala/blob/8f4113a2f471acf4c0121199c6ebb9b29dfa84ff/setup.cfg#L32\r\n\r\nExchanging the `ProcessPoolExecutor` with a `ThreadPoolExecutor` does the trick and produces full coverage. However it would be nice to have everything being tested with a `ProcessPoolExecutor` (especially due to possible pickling issues on Windows for subprocesses).\r\n\r\nNot proven assumption:\r\nI have the feeling that other parts of the code only run through a subprocess is measured properly, only those two modules under test don't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/164", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/164/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/164/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/164", "id": 243073738, "node_id": "MDU6SXNzdWUyNDMwNzM3Mzg=", "number": 164, "title": "Request for command line argument to set data_file path", "user": {"login": "BlacKCaT27", "id": 5241313, "node_id": "MDQ6VXNlcjUyNDEzMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5241313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlacKCaT27", "html_url": "https://github.com/BlacKCaT27", "followers_url": "https://api.github.com/users/BlacKCaT27/followers", "following_url": "https://api.github.com/users/BlacKCaT27/following{/other_user}", "gists_url": "https://api.github.com/users/BlacKCaT27/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlacKCaT27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlacKCaT27/subscriptions", "organizations_url": "https://api.github.com/users/BlacKCaT27/orgs", "repos_url": "https://api.github.com/users/BlacKCaT27/repos", "events_url": "https://api.github.com/users/BlacKCaT27/events{/privacy}", "received_events_url": "https://api.github.com/users/BlacKCaT27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-14T18:22:06Z", "updated_at": "2017-07-17T13:30:04Z", "closed_at": "2017-07-17T13:30:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the only option for setting the data_file path is to use either the COVERAGE_FILE environment variable or set the data_file field in .coveragerc. However, neither of these work well for my use case.\r\n\r\nIn my setup, I'm using Visual Studio Code and have a plugin which runs commands I specify when certain events are triggered. I've configured the following command to run my unit tests and run coverage using pytest-cov: \r\n\r\n`\"python -m pytest --cov=Scripts --cov-config ${workspaceRoot}/.coveragerc --cov-report html:${workspaceRoot}/locale/coverage_html --cov-report xml:${workspaceRoot}/local/coverage.xml --cov-report annotate:${workspaceRoot}/local/coverage_annotate ${workspaceRoot}/UnitTests/\"`\r\n\r\nThe issue that because it's VS Codes plugin system performing the actual execution of the command, the working directory at time of execution is C:\\Program Files\\Microsoft VS Code\\, not the directorying containing my Scripts module. This results in Coverage throwing an exception since that area of the file system is write-protected. \r\n\r\nIf there were a command line argument to set the data_file path, I could set that in my command here and be all set, and not have to use an environment variable, which I'd like to avoid as it makes the solution harder to migrate to other systems (e.g. our CI system).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/162", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/162/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/162/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/162", "id": 240108124, "node_id": "MDU6SXNzdWUyNDAxMDgxMjQ=", "number": 162, "title": "code that is executed in the doctests is not covered.", "user": {"login": "thisch", "id": 206581, "node_id": "MDQ6VXNlcjIwNjU4MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/206581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisch", "html_url": "https://github.com/thisch", "followers_url": "https://api.github.com/users/thisch/followers", "following_url": "https://api.github.com/users/thisch/following{/other_user}", "gists_url": "https://api.github.com/users/thisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisch/subscriptions", "organizations_url": "https://api.github.com/users/thisch/orgs", "repos_url": "https://api.github.com/users/thisch/repos", "events_url": "https://api.github.com/users/thisch/events{/privacy}", "received_events_url": "https://api.github.com/users/thisch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-03T08:58:16Z", "updated_at": "2017-07-03T11:45:31Z", "closed_at": "2017-07-03T11:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "If parts of your code are only tested in doctests but not in conventional unit tests then the code that is called by the doctests is marked as not covered. Note that I'm not speaking of the code in the doctest itself.\r\n\r\nIt would be nice if the code called by the doctests could be considered for the final coverage. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/161", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/161/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/161/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/161", "id": 237678171, "node_id": "MDU6SXNzdWUyMzc2NzgxNzE=", "number": 161, "title": "More tolerant in certain circumstances where report generation was failed", "user": {"login": "huyphan", "id": 95884, "node_id": "MDQ6VXNlcjk1ODg0", "avatar_url": "https://avatars3.githubusercontent.com/u/95884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huyphan", "html_url": "https://github.com/huyphan", "followers_url": "https://api.github.com/users/huyphan/followers", "following_url": "https://api.github.com/users/huyphan/following{/other_user}", "gists_url": "https://api.github.com/users/huyphan/gists{/gist_id}", "starred_url": "https://api.github.com/users/huyphan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huyphan/subscriptions", "organizations_url": "https://api.github.com/users/huyphan/orgs", "repos_url": "https://api.github.com/users/huyphan/repos", "events_url": "https://api.github.com/users/huyphan/events{/privacy}", "received_events_url": "https://api.github.com/users/huyphan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-06-21T22:05:51Z", "updated_at": "2017-08-01T12:17:20Z", "closed_at": "2017-07-30T15:55:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Back in version 2.2.1 [we were more tolerant](https://github.com/pytest-dev/pytest-cov/blob/0696bc72ad6f5ce0017d6904c04141376e291467/src/pytest_cov/plugin.py#L194-L198) when something went wrong with coverage report generation: \r\n\r\n```\r\n        if not (self.failed and self.options.no_cov_on_fail):\r\n            try:\r\n                total = self.cov_controller.summary(terminalreporter.writer)\r\n            except CoverageException as exc:\r\n                terminalreporter.writer.write('Failed to generate report: %s\\n' % exc)\r\n                total = 0\r\n```\r\nWith 2.5.1, we raise exception instead:\r\n```\r\n        if not self._is_slave(session) and self._should_report():\r\n            try:\r\n                self.cov_total = self.cov_controller.summary(self.cov_report)\r\n            except CoverageException as exc:\r\n                raise pytest.UsageError(\r\n                    'Failed to generate report: %s\\n' % exc\r\n                )\r\n            assert self.cov_total is not None, 'Test coverage should never be `None`'\r\n```\r\n\r\nDo you think it would make sense if we make it to be tolerant like the old days? I'm having some projects that are built on multiple Python implementations with the same code base. One of the implementation (Jython) doesn't support code coverage and will cause CoverageException. If we re-raise the exception here, the whole test will fail. \r\n\r\nI can send a PR for this, but I would like to get some opinions first. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/160", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/160/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/160/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/160", "id": 236073457, "node_id": "MDU6SXNzdWUyMzYwNzM0NTc=", "number": 160, "title": "I dont understand how to use. ", "user": {"login": "realsby", "id": 1173351, "node_id": "MDQ6VXNlcjExNzMzNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1173351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realsby", "html_url": "https://github.com/realsby", "followers_url": "https://api.github.com/users/realsby/followers", "following_url": "https://api.github.com/users/realsby/following{/other_user}", "gists_url": "https://api.github.com/users/realsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/realsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realsby/subscriptions", "organizations_url": "https://api.github.com/users/realsby/orgs", "repos_url": "https://api.github.com/users/realsby/repos", "events_url": "https://api.github.com/users/realsby/events{/privacy}", "received_events_url": "https://api.github.com/users/realsby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-15T04:22:21Z", "updated_at": "2017-06-15T11:07:36Z", "closed_at": "2017-06-15T10:55:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I dont have coverageerc or something like in my tornado project. \r\nI installed pytest-cov and typed in root folder `py.test test/`\r\n\r\nIt started tests and show me this results only.. No any other information or warning. :\r\n============================================= test session starts =============================================\r\n                                                                                                               \r\nplatform linux -- Python 3.6.1, pytest-3.0.7, py-1.4.34, pluggy-0.4.0                                          \r\nrootdir: /vagrant/flasky-tornado, inifile:                                                                     \r\nplugins: cov-2.5.1                                                                                             \r\ncollected 27 items                                                                                             \r\n                                                                                                               \r\ntest/test_di_container.py .....                                                                                \r\ntest/test_hooks.py ....                                                                                        \r\ntest/test_maybe_coroutine.py .                                                                                 \r\ntest/test_namespace.py ..                                                                                      \r\ntest/test_parameter.py ...............                                                                         \r\n                                                                                                               \r\n========================================== 27 passed in 0.63 seconds ==========================================\r\n\r\nWhere is the coverage information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/159", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/159/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/159/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/159", "id": 228423956, "node_id": "MDU6SXNzdWUyMjg0MjM5NTY=", "number": 159, "title": "4-5x slowdown using pytest-cov", "user": {"login": "jwineinger", "id": 287161, "node_id": "MDQ6VXNlcjI4NzE2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/287161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwineinger", "html_url": "https://github.com/jwineinger", "followers_url": "https://api.github.com/users/jwineinger/followers", "following_url": "https://api.github.com/users/jwineinger/following{/other_user}", "gists_url": "https://api.github.com/users/jwineinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwineinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwineinger/subscriptions", "organizations_url": "https://api.github.com/users/jwineinger/orgs", "repos_url": "https://api.github.com/users/jwineinger/repos", "events_url": "https://api.github.com/users/jwineinger/events{/privacy}", "received_events_url": "https://api.github.com/users/jwineinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-12T22:37:09Z", "updated_at": "2017-05-13T03:48:40Z", "closed_at": "2017-05-13T03:48:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason, I'm seeing a significant slowdown when using pytest-cov. The following test runs were literally one right after another.\r\n\r\nFWIW, I'm running these in a docker-compose environment on docker for mac.\r\n\r\nwith coverage:\r\n```bash\r\n# py.test tests/ --durations=100 --junitxml=/tmp/xunit.xml --cov my_module --cov-report term-missing\r\n=== test session starts ===\r\nplatform linux2 -- Python 2.7.13, pytest-3.0.7, py-1.4.33, pluggy-0.4.0\r\nDjango settings: settings_override (from environment variable)\r\nrootdir: /my/path, inifile:\r\nplugins: xdist-1.16.0, mock-1.6.0, django-3.1.2, cov-2.5.1\r\ncollected 888 items \r\n<snip>\r\n=== slowest 100 test durations ===\r\n18.87s setup    ...\r\n3.43s call     ...\r\n3.20s call     ...\r\n2.43s call     ...\r\n<snip>\r\n=== 870 passed, 17 skipped, 1 xfailed in 271.88 seconds ====\r\n```\r\n\r\nwithout coverage:\r\n```bash\r\n# py.test tests/ --durations=100 --junitxml=/tmp/xunit.xml\r\n==== test session starts ===\r\nplatform linux2 -- Python 2.7.13, pytest-3.0.7, py-1.4.33, pluggy-0.4.0\r\nDjango settings: settings_override (from environment variable)\r\nrootdir: /opt/sps/identity-service, inifile:\r\nplugins: xdist-1.16.0, mock-1.6.0, django-3.1.2, cov-2.5.1\r\ncollected 888 items \r\n<snip>\r\n=== slowest 100 test durations ===\r\n7.69s setup    ...\r\n1.17s teardown ...\r\n0.32s call     ...\r\n0.30s call     ...\r\n<snip>\r\n=== 870 passed, 17 skipped, 1 xfailed in 58.74 seconds ===\r\n```\r\n\r\nIdeas on how to debug this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/157", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/157/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/157/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/157", "id": 227720377, "node_id": "MDU6SXNzdWUyMjc3MjAzNzc=", "number": 157, "title": "pytest-cov 2.5 doesn't seem to work with xdist", "user": {"login": "tgs", "id": 229502, "node_id": "MDQ6VXNlcjIyOTUwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/229502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgs", "html_url": "https://github.com/tgs", "followers_url": "https://api.github.com/users/tgs/followers", "following_url": "https://api.github.com/users/tgs/following{/other_user}", "gists_url": "https://api.github.com/users/tgs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgs/subscriptions", "organizations_url": "https://api.github.com/users/tgs/orgs", "repos_url": "https://api.github.com/users/tgs/repos", "events_url": "https://api.github.com/users/tgs/events{/privacy}", "received_events_url": "https://api.github.com/users/tgs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-10T15:30:42Z", "updated_at": "2017-05-12T15:50:33Z", "closed_at": "2017-05-11T18:45:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems to cause an endless loop of restarting the workers, which immediately fail each time.\r\n\r\nSteps to reproduce:\r\n```\r\nvirtualenv -p python3.4 env\r\nsource env/bin/activate\r\npip install pytest pytest-cov==2.5 pytest-xdist\r\ncat > test_things.py <<END\r\ndef test_a():\r\n    assert '1' == '1'\r\n\r\ndef test_b():\r\n    assert '2' == '2'\r\nEND\r\npy.test test_things.py  --dist=load --tx=\"2*popen//python=`which python`\" -v --cov --cov-report=term\r\n```\r\n\r\nThis succeeds with pytest-cov 2.4, but fails with 2.5.  The backtrace is something like this:\r\n\r\n```\r\n=================================== test session starts ===================================\r\nplatform linux -- Python 3.4.5, pytest-3.0.7, py-1.4.33, pluggy-0.4.0 -- /home/smithtg/.virtualenvs/ptc/bin/python3.4\r\ncachedir: .cache\r\nrootdir: /home/smithtg/.virtualenvs/ptc, inifile:\r\nplugins: xdist-1.16.0, cov-2.5.0\r\n[gw0] linux Python 3.4.5 cwd: /home/smithtg/.virtualenvs/ptc\r\n[gw1] linux Python 3.4.5 cwd: /home/smithtg/.virtualenvs/ptc\r\ngw0 C / gw1 CTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"<string>\", line 1539, in <module>\r\n  File \"<string>\", line 1534, in serve\r\n  File \"<string>\", line 1047, in serve\r\n  File \"<string>\", line 259, in integrate_as_primary_thread\r\n  File \"<string>\", line 277, in _perform_spawn\r\n  File \"<string>\", line 219, in run\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\nException ignored in: Error in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\nError in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\n[gw0] node down: Not properly terminated\r\nReplacing crashed slave gw0\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"<string>\", line 1539, in <module>\r\n  File \"<string>\", line 1534, in serve\r\n  File \"<string>\", line 1047, in serve\r\n  File \"<string>\", line 259, in integrate_as_primary_thread\r\n[gw2] linux Python 3.4.5 cwd: /home/smithtg/.virtualenvs/ptc\r\ngw2 C / gw1 C  File \"<string>\", line 277, in _perform_spawn\r\n  File \"<string>\", line 219, in run\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\nException ignored in: Error in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\nError in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\n[gw1] node down: Not properly terminated\r\nReplacing crashed slave gw1\r\n[gw3] linux Python 3.4.5 cwd: /home/smithtg/.virtualenvs/ptc\r\ngw2 C / gw3 CTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"<string>\", line 1539, in <module>\r\n  File \"<string>\", line 1534, in serve\r\n  File \"<string>\", line 1047, in serve\r\n  File \"<string>\", line 259, in integrate_as_primary_thread\r\n  File \"<string>\", line 277, in _perform_spawn\r\n  File \"<string>\", line 219, in run\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\nException ignored in: Error in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\nError in atexit._run_exitfuncs:\r\nTraceback (most recent call last):\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 585, in _should_trace\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 530, in _should_trace_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/control.py\", line 551, in _check_include_omit_etc_internal\r\n  File \"/home/smithtg/.virtualenvs/ptc/lib/python3.4/site-packages/coverage/files.py\", line 242, in match\r\nTypeError: startswith first arg must be str or a tuple of str, not bool\r\n[gw2] node down: Not properly terminated\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/152", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/152/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/152/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/152", "id": 212736113, "node_id": "MDU6SXNzdWUyMTI3MzYxMTM=", "number": 152, "title": "[feature-request] support nbval plugin", "user": {"login": "marscher", "id": 170287, "node_id": "MDQ6VXNlcjE3MDI4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/170287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marscher", "html_url": "https://github.com/marscher", "followers_url": "https://api.github.com/users/marscher/followers", "following_url": "https://api.github.com/users/marscher/following{/other_user}", "gists_url": "https://api.github.com/users/marscher/gists{/gist_id}", "starred_url": "https://api.github.com/users/marscher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marscher/subscriptions", "organizations_url": "https://api.github.com/users/marscher/orgs", "repos_url": "https://api.github.com/users/marscher/repos", "events_url": "https://api.github.com/users/marscher/events{/privacy}", "received_events_url": "https://api.github.com/users/marscher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-08T13:37:58Z", "updated_at": "2017-03-09T16:39:44Z", "closed_at": "2017-03-09T16:39:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Background: the nbval plugin executes code cells from Jupyter notebooks as test cases. It would be very nice to have support for code coverage too.\r\n\r\nThank you for considering this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/151", "repository_url": "https://api.github.com/repos/pytest-dev/pytest-cov", "labels_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/151/comments", "events_url": "https://api.github.com/repos/pytest-dev/pytest-cov/issues/151/events", "html_url": "https://github.com/pytest-dev/pytest-cov/issues/151", "id": 209795700, "node_id": "MDU6SXNzdWUyMDk3OTU3MDA=", "number": 151, "title": "AttributeError raised if --cov enabled twice", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-23T15:33:35Z", "updated_at": "2017-03-15T23:14:41Z", "closed_at": "2017-03-15T22:44:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "If `--cov` is enabled twice, without specifying paths each time, the following backtrace occurs.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.5/runpy.py\", line 170, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib64/python3.5/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/lib/python3.5/site-packages/pytest.py\", line 17, in <module>\r\n    raise SystemExit(pytest.main())\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/config.py\", line 47, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/config.py\", line 156, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\n    return _wrapped_call(hook_impl.function(*args), self.execute)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 250, in _wrapped_call\r\n    wrap_controller.send(call_outcome)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/helpconfig.py\", line 32, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\n    self.result = func()\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\n    res = hook_impl.function(*args)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/config.py\", line 923, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/config.py\", line 1080, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/config.py\", line 1051, in _preparse\r\n    args=args, parser=self._parser)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\n    return _wrapped_call(hook_impl.function(*args), self.execute)\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 254, in _wrapped_call\r\n    return call_outcome.get_result()\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\n    self.result = func()\r\n  File \"/usr/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\n    res = hook_impl.function(*args)\r\n  File \"/usr/lib/python3.5/site-packages/pytest_cov/plugin.py\", line 95, in pytest_load_initial_conftests\r\n    plugin = CovPlugin(ns, early_config.pluginmanager)\r\n  File \"/usr/lib/python3.5/site-packages/pytest_cov/plugin.py\", line 150, in __init__\r\n    self.start(engine.Central)\r\n  File \"/usr/lib/python3.5/site-packages/pytest_cov/plugin.py\", line 171, in start\r\n    self.cov_controller.start()\r\n  File \"/usr/lib/python3.5/site-packages/pytest_cov/engine.py\", line 141, in start\r\n    self.cov.erase()\r\n  File \"/usr/lib/python3.5/site-packages/coverage/control.py\", line 727, in erase\r\n    self._init()\r\n  File \"/usr/lib/python3.5/site-packages/coverage/control.py\", line 246, in _init\r\n    self.source.append(files.canonical_filename(src))\r\n  File \"/usr/lib/python3.5/site-packages/coverage/files.py\", line 61, in canonical_filename\r\n    if not os.path.isabs(filename):\r\n  File \"/usr/lib64/python3.5/posixpath.py\", line 64, in isabs\r\n    return s.startswith(sep)\r\nAttributeError: 'bool' object has no attribute 'startswith'\r\n```\r\n\r\nI encountered this after adding the following to setup.cfg, which also using `--cov` on the command line.\r\n```\r\n[tool:pytest]\r\naddopts =  --cov\r\n```\r\n\r\nThe problem is the rather simple handling of multiple `--cov` at https://github.com/pytest-dev/pytest-cov/blob/master/src/pytest_cov/plugin.py#L87", "performed_via_github_app": null, "score": 1.0}]}