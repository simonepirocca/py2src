{"total_count": 67, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pipermerriam/flex/issues/220", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/220/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/220/events", "html_url": "https://github.com/pipermerriam/flex/issues/220", "id": 409836513, "node_id": "MDU6SXNzdWU0MDk4MzY1MTM=", "number": 220, "title": "PyYAML vulnerability", "user": {"login": "python273", "id": 3097956, "node_id": "MDQ6VXNlcjMwOTc5NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3097956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/python273", "html_url": "https://github.com/python273", "followers_url": "https://api.github.com/users/python273/followers", "following_url": "https://api.github.com/users/python273/following{/other_user}", "gists_url": "https://api.github.com/users/python273/gists{/gist_id}", "starred_url": "https://api.github.com/users/python273/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/python273/subscriptions", "organizations_url": "https://api.github.com/users/python273/orgs", "repos_url": "https://api.github.com/users/python273/repos", "events_url": "https://api.github.com/users/python273/events{/privacy}", "received_events_url": "https://api.github.com/users/python273/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-13T14:39:27Z", "updated_at": "2019-02-13T14:40:56Z", "closed_at": "2019-02-13T14:40:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Known\u00a0high severity\u00a0security vulnerability detected in\u00a0pyyaml < 4.2b1\u00a0defined in\u00a0Pipfile.lock.\r\n\r\nhttps://github.com/pipermerriam/flex/blob/523d51eed47e5cc0cfed73c8e20f7a47d35fd44a/setup.py#L30", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/212", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/212/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/212/events", "html_url": "https://github.com/pipermerriam/flex/issues/212", "id": 396328888, "node_id": "MDU6SXNzdWUzOTYzMjg4ODg=", "number": 212, "title": "need upgrade pyyaml", "user": {"login": "gusibi", "id": 1282277, "node_id": "MDQ6VXNlcjEyODIyNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1282277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gusibi", "html_url": "https://github.com/gusibi", "followers_url": "https://api.github.com/users/gusibi/followers", "following_url": "https://api.github.com/users/gusibi/following{/other_user}", "gists_url": "https://api.github.com/users/gusibi/gists{/gist_id}", "starred_url": "https://api.github.com/users/gusibi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gusibi/subscriptions", "organizations_url": "https://api.github.com/users/gusibi/orgs", "repos_url": "https://api.github.com/users/gusibi/repos", "events_url": "https://api.github.com/users/gusibi/events{/privacy}", "received_events_url": "https://api.github.com/users/gusibi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-07T02:48:29Z", "updated_at": "2019-02-12T21:52:24Z", "closed_at": "2019-02-12T21:52:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "CVE-2017-18342 https://nvd.nist.gov/vuln/detail/CVE-2017-18342\r\n\r\nVulnerable versions: < 4.2b1\r\nPatched version: 4.2b1\r\n\r\nIn PyYAML before 4.1, the yaml.load() API could execute arbitrary code. In other words, yaml.safe_load is not used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/208", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/208/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/208/events", "html_url": "https://github.com/pipermerriam/flex/issues/208", "id": 370205493, "node_id": "MDU6SXNzdWUzNzAyMDU0OTM=", "number": 208, "title": "Typo in generated maximum validation messages", "user": {"login": "eugenedruy", "id": 14283241, "node_id": "MDQ6VXNlcjE0MjgzMjQx", "avatar_url": "https://avatars0.githubusercontent.com/u/14283241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugenedruy", "html_url": "https://github.com/eugenedruy", "followers_url": "https://api.github.com/users/eugenedruy/followers", "following_url": "https://api.github.com/users/eugenedruy/following{/other_user}", "gists_url": "https://api.github.com/users/eugenedruy/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugenedruy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugenedruy/subscriptions", "organizations_url": "https://api.github.com/users/eugenedruy/orgs", "repos_url": "https://api.github.com/users/eugenedruy/repos", "events_url": "https://api.github.com/users/eugenedruy/events{/privacy}", "received_events_url": "https://api.github.com/users/eugenedruy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-15T15:00:53Z", "updated_at": "2020-01-07T19:00:18Z", "closed_at": "2020-01-07T19:00:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "validate_maximum in validation/common.py makes comparison_text  equal to either string\r\n\"less than\"\r\nor \r\n\"less than or equal to\"\r\nThen comparison_text is inserted into a preformatted error message\r\n\"{0} must be {1} than {2}\"\r\n(see error_messages.py  :  MINIMUM_AND_MAXIMUM_MESSAGES)\r\nresulting to a message like\r\n\"<value name> must be less than or equal to _**than**_ <value>\"\r\nPlease remove 'than' from the format string for \"invalid\" entry for MINIMUM_AND_MAXIMUM_MESSAGES\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/203", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/203/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/203/events", "html_url": "https://github.com/pipermerriam/flex/issues/203", "id": 338192164, "node_id": "MDU6SXNzdWUzMzgxOTIxNjQ=", "number": 203, "title": "Python 3.7", "user": {"login": "ivlevdenis", "id": 7171587, "node_id": "MDQ6VXNlcjcxNzE1ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7171587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivlevdenis", "html_url": "https://github.com/ivlevdenis", "followers_url": "https://api.github.com/users/ivlevdenis/followers", "following_url": "https://api.github.com/users/ivlevdenis/following{/other_user}", "gists_url": "https://api.github.com/users/ivlevdenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivlevdenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivlevdenis/subscriptions", "organizations_url": "https://api.github.com/users/ivlevdenis/orgs", "repos_url": "https://api.github.com/users/ivlevdenis/repos", "events_url": "https://api.github.com/users/ivlevdenis/events{/privacy}", "received_events_url": "https://api.github.com/users/ivlevdenis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-04T09:09:23Z", "updated_at": "2019-02-13T07:18:33Z", "closed_at": "2019-02-13T07:18:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error when install in py3.7 env.\r\nNeed update req in setup.py, \"PyYAML>=3.11,<4\" to \"PyYAML>=3.11\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/202", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/202/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/202/events", "html_url": "https://github.com/pipermerriam/flex/issues/202", "id": 337528044, "node_id": "MDU6SXNzdWUzMzc1MjgwNDQ=", "number": 202, "title": "Is \"multipart/form-data\" request supported?", "user": {"login": "mishbahr", "id": 1264089, "node_id": "MDQ6VXNlcjEyNjQwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1264089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mishbahr", "html_url": "https://github.com/mishbahr", "followers_url": "https://api.github.com/users/mishbahr/followers", "following_url": "https://api.github.com/users/mishbahr/following{/other_user}", "gists_url": "https://api.github.com/users/mishbahr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mishbahr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mishbahr/subscriptions", "organizations_url": "https://api.github.com/users/mishbahr/orgs", "repos_url": "https://api.github.com/users/mishbahr/repos", "events_url": "https://api.github.com/users/mishbahr/events{/privacy}", "received_events_url": "https://api.github.com/users/mishbahr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-02T13:51:25Z", "updated_at": "2019-02-13T07:29:30Z", "closed_at": "2019-02-13T07:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling `flex.validation.request.validate_request` for a `multipart-form/data` POST request raises `NotImplementedError: No parser for content type`\r\n\r\n```python\r\n# tests.py\r\n\r\nfrom django.test import TestCase, RequestFactory\r\nfrom django.core.files.uploadedfile import SimpleUploadedFile\r\n\r\nfrom flex.core import normalize_request, validate_request\r\n\r\n\r\nclass TestFlexRequestValidation(TestCase):\r\n\r\n    schema = {\r\n        'paths': {\r\n            '/api/': {\r\n                'post': {\r\n                    'operationId': 'SomeOperationId',\r\n                    'consumes': [\r\n                        'multipart-form/data'\r\n                    ],\r\n                    'parameters': [\r\n                        {\r\n                            'in': 'formData',\r\n                            'name': 'form_input',\r\n                            'type': 'string'\r\n                        },\r\n                        {\r\n                            'in': 'formData',\r\n                            'name': 'file_input',\r\n                            'type': 'file',\r\n                        },\r\n                    ],\r\n                },\r\n                'responses': {}\r\n            }\r\n        }\r\n    }\r\n\r\n    def test_flex_validate_request(self):\r\n        factory = RequestFactory()\r\n        payload = {\r\n            'form_input': 'value',\r\n            'file_input': SimpleUploadedFile('my_file.pdf', 'file-content', content_type='application/pdf')\r\n        }\r\n        request = factory.post('/api/', data=payload, content_type='multipart/form-data; boundary=boundary')\r\n\r\n        flex_request = normalize_request(request)\r\n        # raises NotImplementedError: No parser for content type\r\n        validate_request(flex_request, self.schema)\r\n```\r\n\r\nor am I doing something silly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/197", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/197/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/197/events", "html_url": "https://github.com/pipermerriam/flex/issues/197", "id": 311906893, "node_id": "MDU6SXNzdWUzMTE5MDY4OTM=", "number": 197, "title": "How mature/complete is flex ?", "user": {"login": "sys-git", "id": 2901435, "node_id": "MDQ6VXNlcjI5MDE0MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2901435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sys-git", "html_url": "https://github.com/sys-git", "followers_url": "https://api.github.com/users/sys-git/followers", "following_url": "https://api.github.com/users/sys-git/following{/other_user}", "gists_url": "https://api.github.com/users/sys-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/sys-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sys-git/subscriptions", "organizations_url": "https://api.github.com/users/sys-git/orgs", "repos_url": "https://api.github.com/users/sys-git/repos", "events_url": "https://api.github.com/users/sys-git/events{/privacy}", "received_events_url": "https://api.github.com/users/sys-git/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634610, "node_id": "MDU6TGFiZWwxMzg2MzQ2MTA=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-06T09:25:32Z", "updated_at": "2020-01-07T19:27:13Z", "closed_at": "2020-01-07T19:27:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Just to clarify:\r\n\r\n`It is currently at a very early stage in development and thus is likely to have plenty of bugs.`\r\n\r\nsetup.py says `pre-alpha`\r\n\r\nbut...\r\n\r\nversion at `6.x`\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/195", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/195/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/195/events", "html_url": "https://github.com/pipermerriam/flex/issues/195", "id": 310697552, "node_id": "MDU6SXNzdWUzMTA2OTc1NTI=", "number": 195, "title": "KeyError on Content-Type when normalizing responses", "user": {"login": "Place1", "id": 11731350, "node_id": "MDQ6VXNlcjExNzMxMzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/11731350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Place1", "html_url": "https://github.com/Place1", "followers_url": "https://api.github.com/users/Place1/followers", "following_url": "https://api.github.com/users/Place1/following{/other_user}", "gists_url": "https://api.github.com/users/Place1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Place1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Place1/subscriptions", "organizations_url": "https://api.github.com/users/Place1/orgs", "repos_url": "https://api.github.com/users/Place1/repos", "events_url": "https://api.github.com/users/Place1/events{/privacy}", "received_events_url": "https://api.github.com/users/Place1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-03T05:19:17Z", "updated_at": "2018-04-06T16:00:41Z", "closed_at": "2018-04-06T16:00:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue pops up when a view returns a response with no Content-Type header, something that django rest framework's viewsets do by default for an HTTP 204 No Content response (usually the result of an HTTP Delete request).\r\n\r\nThe problem happens here: https://github.com/pipermerriam/flex/blob/cf87e400da28ec6118062c5e45fdcaf966204a85/flex/http.py#L355\r\n\r\nAccessing `response['Content-Type']` throws a key error when the property doesn't exist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/175", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/175/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/175/events", "html_url": "https://github.com/pipermerriam/flex/issues/175", "id": 237139584, "node_id": "MDU6SXNzdWUyMzcxMzk1ODQ=", "number": 175, "title": "AttributeError: err.message ", "user": {"login": "heappro", "id": 26594042, "node_id": "MDQ6VXNlcjI2NTk0MDQy", "avatar_url": "https://avatars3.githubusercontent.com/u/26594042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heappro", "html_url": "https://github.com/heappro", "followers_url": "https://api.github.com/users/heappro/followers", "following_url": "https://api.github.com/users/heappro/following{/other_user}", "gists_url": "https://api.github.com/users/heappro/gists{/gist_id}", "starred_url": "https://api.github.com/users/heappro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heappro/subscriptions", "organizations_url": "https://api.github.com/users/heappro/orgs", "repos_url": "https://api.github.com/users/heappro/repos", "events_url": "https://api.github.com/users/heappro/events{/privacy}", "received_events_url": "https://api.github.com/users/heappro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-20T09:00:59Z", "updated_at": "2017-12-05T19:06:09Z", "closed_at": "2017-12-05T19:06:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got exception in flex code:\r\n```\r\n            try:\r\n                operation_definition = validate_request_method_to_operation(\r\n                    request_method=request_method,\r\n                    path_definition=path_definition,\r\n                )\r\n            except ValidationError as err:\r\n>               errors['method'].append(err.message)\r\nE               AttributeError: 'ValidationError' object has no attribute 'message'\r\n/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/flex/validation/response.py:222: AttributeError\r\n```\r\n\r\nI think it should be err.detail or err.messages.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/165", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/165/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/165/events", "html_url": "https://github.com/pipermerriam/flex/issues/165", "id": 221594708, "node_id": "MDU6SXNzdWUyMjE1OTQ3MDg=", "number": 165, "title": "Provide richer error objects", "user": {"login": "petedmarsh", "id": 1192314, "node_id": "MDQ6VXNlcjExOTIzMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petedmarsh", "html_url": "https://github.com/petedmarsh", "followers_url": "https://api.github.com/users/petedmarsh/followers", "following_url": "https://api.github.com/users/petedmarsh/following{/other_user}", "gists_url": "https://api.github.com/users/petedmarsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/petedmarsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petedmarsh/subscriptions", "organizations_url": "https://api.github.com/users/petedmarsh/orgs", "repos_url": "https://api.github.com/users/petedmarsh/repos", "events_url": "https://api.github.com/users/petedmarsh/events{/privacy}", "received_events_url": "https://api.github.com/users/petedmarsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-13T15:15:57Z", "updated_at": "2017-04-13T19:02:10Z", "closed_at": "2017-04-13T19:02:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When a request is validated against a schema any and all of the errors that are generated are bundled into a single `ValidationError` as strings, this works well for human-readability as the errors look something like this:\r\n\r\n```\r\nValidationError: 'method':\r\n    - 'parameters':\r\n        - 'request_body':\r\n            - '$ref':\r\n                - 'additionalProperties':\r\n                    - u\"When `additionalProperties` is False, no unspecified properties are allowed.  The following unspecified properties were found:\\n\\t`set([u'this'])`\"\r\n                - 'required':\r\n                    - 'name':\r\n                        - u'This value is required'\r\n```\r\n\r\nHowever, it's difficult/messy to extract further details from the errors programatically - getting the set of additional properties for example.\r\n\r\nIt would be great if the errors were richer objects so they're easier to program against.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/162", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/162/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/162/events", "html_url": "https://github.com/pipermerriam/flex/issues/162", "id": 218958118, "node_id": "MDU6SXNzdWUyMTg5NTgxMTg=", "number": 162, "title": "Extend formats to allow values to be modified (rather than just validated)", "user": {"login": "petedmarsh", "id": 1192314, "node_id": "MDQ6VXNlcjExOTIzMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petedmarsh", "html_url": "https://github.com/petedmarsh", "followers_url": "https://api.github.com/users/petedmarsh/followers", "following_url": "https://api.github.com/users/petedmarsh/following{/other_user}", "gists_url": "https://api.github.com/users/petedmarsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/petedmarsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petedmarsh/subscriptions", "organizations_url": "https://api.github.com/users/petedmarsh/orgs", "repos_url": "https://api.github.com/users/petedmarsh/repos", "events_url": "https://api.github.com/users/petedmarsh/events{/privacy}", "received_events_url": "https://api.github.com/users/petedmarsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-03T14:48:47Z", "updated_at": "2017-04-03T15:38:42Z", "closed_at": "2017-04-03T15:38:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to be able to define a custom format that's  able to convert a value to something else, rather than just checking it matches a format. I think it'd be nice to be able to do this with flex as it has the type/format information available to it, and it's already has to walk through the input to validate it - it avoids passing along the type information to some other piece of code of code and going through the input data again.\r\n\r\nThis does move away from pure swagger validation, but I think it would be useful - the most common case I can think of is converting date/times in JSON from strings to `datetime.datetime`s, and I'm sure there are more.\r\n\r\nI'd be happy to implement this - I don't think it would be too difficult, but I wondered if you felt it would be appropriate for this project and, if so, what you thought the API would look like? My initial thoughts were something like this:\r\n\r\n```python\r\n#...\r\nfrom flex.formats import register\r\n@register('title-case', 'string')\r\ndef title_case_format_validator(value, coerce=False):\r\n     if coerce:\r\n         return value.title()\r\n     if not value == value.title():\r\n         raise ValidationError(\"Must be title cased\")\r\n\r\n#...\r\nvalidate(schema, request, coerce_formats=True)\r\n```\r\n\r\nHowever, I'm sure there's room for improvement.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/152", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/152/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/152/events", "html_url": "https://github.com/pipermerriam/flex/issues/152", "id": 215171809, "node_id": "MDU6SXNzdWUyMTUxNzE4MDk=", "number": 152, "title": "Response validations incorrectly reports failure when basePath is set to /", "user": {"login": "ahartoto", "id": 4220414, "node_id": "MDQ6VXNlcjQyMjA0MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4220414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartoto", "html_url": "https://github.com/ahartoto", "followers_url": "https://api.github.com/users/ahartoto/followers", "following_url": "https://api.github.com/users/ahartoto/following{/other_user}", "gists_url": "https://api.github.com/users/ahartoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartoto/subscriptions", "organizations_url": "https://api.github.com/users/ahartoto/orgs", "repos_url": "https://api.github.com/users/ahartoto/repos", "events_url": "https://api.github.com/users/ahartoto/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-18T07:01:19Z", "updated_at": "2017-03-21T18:28:23Z", "closed_at": "2017-03-21T18:28:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related to issue #143\r\n\r\nWhen `basePath` is set to `/`, we are getting an exception due to unable to correctly validate the response. The `target_path` is set to be a path with missing `/` in the beginning, while the `api_path` still has `/`.\r\n\r\nTo generalize, if we have `basePath`, we need to actually compile regular expression that matches a combination of `basePath` and `api_call`, and also leave the `target_path` as is.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/150", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/150/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/150/events", "html_url": "https://github.com/pipermerriam/flex/issues/150", "id": 215003229, "node_id": "MDU6SXNzdWUyMTUwMDMyMjk=", "number": 150, "title": "Parameter in the uri segment matters.", "user": {"login": "Fufuhu", "id": 8606080, "node_id": "MDQ6VXNlcjg2MDYwODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8606080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fufuhu", "html_url": "https://github.com/Fufuhu", "followers_url": "https://api.github.com/users/Fufuhu/followers", "following_url": "https://api.github.com/users/Fufuhu/following{/other_user}", "gists_url": "https://api.github.com/users/Fufuhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fufuhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fufuhu/subscriptions", "organizations_url": "https://api.github.com/users/Fufuhu/orgs", "repos_url": "https://api.github.com/users/Fufuhu/repos", "events_url": "https://api.github.com/users/Fufuhu/events{/privacy}", "received_events_url": "https://api.github.com/users/Fufuhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-17T13:28:39Z", "updated_at": "2017-03-21T18:22:49Z", "closed_at": "2017-03-21T18:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI faced a problem when I tried to get summary statement under paths.\r\nSample swagger snippet is following.\r\n\r\n```\r\n   /api/v1/search/:\r\n        post:\r\n            summary: search\r\n            description: |\r\n               search something\r\n            consumes:\r\n                - application/json\r\n            produces:\r\n                - application/json\r\n            responses:\r\n                200:\r\n                    description: success\r\n                500:\r\n                    description: failure\r\n\r\n    /api/v1/{vxlan_id}/:\r\n        get:\r\n            summary: id check\r\n            description: |\r\n                Check id.\r\n            consumes:\r\n                - application/json\r\n            produces:\r\n                - application/json\r\n            parameters:\r\n                - name: vxlan_id\r\n                  in: path\r\n                  description: logical_switch_id\r\n                  required: true\r\n                  type: string\r\n                  pattern: ^[a-z]{1}[a-z0-9\\-_]{0,63}$\r\n                  maxLength: 64\r\n                  minLength: 1\r\n            responses:\r\n                200:\r\n                    description: success\r\n                500:\r\n                    description: failure\r\n```\r\n\r\nWhen I want to know the summary statement of '/api/v1/search/',\r\nI use match_path_to_api_path('/api/v1/search/') to get the statements under '/api/v1/search/:'.\r\n\r\nHowever, match_path_to_api_path('/api/v1/search/') returns '/api/v1/{vxlan_id}/' \r\nbecause maybe '/api/v1/{vxlan_id}/' is longer than '/api/v1/search/' by 4 characters.\r\n\r\nI don't know the specification of swagger well, but simple comparison should \r\ntake priority over regular expression comparison, I think.\r\n\r\nI'm not accustomed to using English, so there might be problems to understand.\r\nIn the case, please ask a question.\r\n\r\nTo solve this issue I made a PR.\r\n\r\nRegards,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/149", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/149/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/149/events", "html_url": "https://github.com/pipermerriam/flex/issues/149", "id": 215003003, "node_id": "MDU6SXNzdWUyMTUwMDMwMDM=", "number": 149, "title": "Best way to specify we only want to validate the response?", "user": {"login": "harrisj", "id": 2044, "node_id": "MDQ6VXNlcjIwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harrisj", "html_url": "https://github.com/harrisj", "followers_url": "https://api.github.com/users/harrisj/followers", "following_url": "https://api.github.com/users/harrisj/following{/other_user}", "gists_url": "https://api.github.com/users/harrisj/gists{/gist_id}", "starred_url": "https://api.github.com/users/harrisj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harrisj/subscriptions", "organizations_url": "https://api.github.com/users/harrisj/orgs", "repos_url": "https://api.github.com/users/harrisj/repos", "events_url": "https://api.github.com/users/harrisj/events{/privacy}", "received_events_url": "https://api.github.com/users/harrisj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-17T13:27:52Z", "updated_at": "2017-03-31T13:41:56Z", "closed_at": "2017-03-31T13:41:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Things have been working great for 200 responses from my API, but I am interested in using flex to validate API responses for invalid inputs like when a query parameter is not within an enum. The issue I have right now is that the validator rejects the request as being malformed (which it is by design) before it verifies the response. I'd like to file a PR to allow me to just validate the response, but it seems like there are a few options I can explore:\r\n\r\n1. Call `validate_response` directly, but this seems like I am violating the abstraction, and I would also need to normalize the response before I pass it in. But this would work now without any changes, I think\r\n2. Refactor the `validate_api_call` method to call a `validate_api_response` method that is a wrapper around the `normalize_response` and `validate_response` methods that I could just call from methods where I want to validate the response.\r\n3. Add a parameter like `only=` to `validate_api_call` that takes either `response` or `request` as arguments and uses that for calling the validation.\r\n\r\nI was leaning towards the third option at first, but I realized that people might think they don't have to pass in a request object when `only=response` but we still need that request object to know the HTTP method we are validating the response for. So I am kinda leaning towards the second option since it makes that more explicit. What do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/146", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/146/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/146/events", "html_url": "https://github.com/pipermerriam/flex/issues/146", "id": 212167168, "node_id": "MDU6SXNzdWUyMTIxNjcxNjg=", "number": 146, "title": "Validation for the $ref part of the schema under allOf is broken", "user": {"login": "haizaar", "id": 58201, "node_id": "MDQ6VXNlcjU4MjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/58201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haizaar", "html_url": "https://github.com/haizaar", "followers_url": "https://api.github.com/users/haizaar/followers", "following_url": "https://api.github.com/users/haizaar/following{/other_user}", "gists_url": "https://api.github.com/users/haizaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/haizaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haizaar/subscriptions", "organizations_url": "https://api.github.com/users/haizaar/orgs", "repos_url": "https://api.github.com/users/haizaar/repos", "events_url": "https://api.github.com/users/haizaar/events{/privacy}", "received_events_url": "https://api.github.com/users/haizaar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-06T16:02:28Z", "updated_at": "2018-04-06T16:05:18Z", "closed_at": "2018-04-06T16:05:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Validation on properties defines through $ref under allOff seems to work only once. Here is the full reproduction:\r\n\r\n```\r\nimport requests\r\nfrom flex.core import load, validate_api_request\r\nimport flex.exceptions\r\n\r\nraw_schema = \"\"\"\r\nswagger: \"2.0\"\r\ninfo:\r\n  title: API\r\n  description: API\r\n  version: \"1.0\"\r\nbasePath: /api/v1\r\nconsumes:\r\n  - application/json\r\n\r\npaths:\r\n  /users:\r\n    post:\r\n      summary: Create a new user\r\n      parameters:\r\n        - name: body\r\n          in: body\r\n          required: true\r\n          schema:\r\n            $ref: \"#/definitions/UserPost\"\r\n      responses:\r\n        \"201\":\r\n          description: OK\r\n\r\ndefinitions:\r\n  UserBase:\r\n    type: object\r\n    description: Base object for users\r\n    properties:\r\n      name:\r\n        type: string\r\n        maxLength: 100\r\n    required: [\"name\"]\r\n\r\n  UserPost:\r\n    type: object\r\n    description: An object to create a user\r\n    allOf:\r\n      - $ref: \"#/definitions/UserBase\"  # <---- This is the part of schema that gets ignored starting from the second invokcation.\r\n      - properties:\r\n          user_id:\r\n            type: string\r\n            description: ID of a user\r\n            maxLength: 128\r\n        required: [\"user_id\"]\r\n\"\"\"\r\n\r\n\r\ndef validate(schema, request):\r\n    try:\r\n        validate_api_request(schema, raw_request=request)\r\n    except flex.exceptions.ValidationError:\r\n        pass\r\n    else:\r\n        raise Exception(\"False positive\")\r\n\r\nschema = load(raw_schema)\r\nresponse = requests.post(\"http://example.com/api/v1/users\", json={\"user_id\": \"asdf\"})\r\nvalidate(schema, response.request)\r\nprint(\"First pass OK\")\r\nvalidate(schema, response.request)\r\n```\r\n\r\nHere the *first* call to `validate_api_request` properly raises `ValidationError` about missing `name` parameter. However the second call goes silent. If I reload the schema, it comes back to life, but its obviously not a way to go.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nP.S. Thanks for the awesome lib.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/143", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/143/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/143/events", "html_url": "https://github.com/pipermerriam/flex/issues/143", "id": 210223181, "node_id": "MDU6SXNzdWUyMTAyMjMxODE=", "number": 143, "title": "Cannot find path when base_path is /", "user": {"login": "ahartoto", "id": 4220414, "node_id": "MDQ6VXNlcjQyMjA0MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4220414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartoto", "html_url": "https://github.com/ahartoto", "followers_url": "https://api.github.com/users/ahartoto/followers", "following_url": "https://api.github.com/users/ahartoto/following{/other_user}", "gists_url": "https://api.github.com/users/ahartoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartoto/subscriptions", "organizations_url": "https://api.github.com/users/ahartoto/orgs", "repos_url": "https://api.github.com/users/ahartoto/repos", "events_url": "https://api.github.com/users/ahartoto/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T09:18:07Z", "updated_at": "2017-03-13T19:00:46Z", "closed_at": "2017-03-13T19:00:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the swagger specification has `base_path` = `/`, the transformation of path to search for the matching schema is done in a way that when the path starts with `/`, the matching for a path will fail.\r\n\r\nThe problem is that the `swagger.json` or `swagger.yaml` is generated (from annotation), so we have a workaround, but it's not ideal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/140", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/140/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/140/events", "html_url": "https://github.com/pipermerriam/flex/issues/140", "id": 210221059, "node_id": "MDU6SXNzdWUyMTAyMjEwNTk=", "number": 140, "title": "Fix documentation", "user": {"login": "ahartoto", "id": 4220414, "node_id": "MDQ6VXNlcjQyMjA0MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4220414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartoto", "html_url": "https://github.com/ahartoto", "followers_url": "https://api.github.com/users/ahartoto/followers", "following_url": "https://api.github.com/users/ahartoto/following{/other_user}", "gists_url": "https://api.github.com/users/ahartoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartoto/subscriptions", "organizations_url": "https://api.github.com/users/ahartoto/orgs", "repos_url": "https://api.github.com/users/ahartoto/repos", "events_url": "https://api.github.com/users/ahartoto/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T08:31:35Z", "updated_at": "2017-03-13T19:04:24Z", "closed_at": "2017-03-13T19:04:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The documentation isn't correctly generated. For instance, this [page](http://flex-swagger.readthedocs.io/en/latest/py-modindex.html) is missing.\r\n\r\nThe version and copyright information is also not updated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/139", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/139/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/139/events", "html_url": "https://github.com/pipermerriam/flex/issues/139", "id": 210196357, "node_id": "MDU6SXNzdWUyMTAxOTYzNTc=", "number": 139, "title": "False negative on response status code", "user": {"login": "ahartoto", "id": 4220414, "node_id": "MDQ6VXNlcjQyMjA0MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4220414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartoto", "html_url": "https://github.com/ahartoto", "followers_url": "https://api.github.com/users/ahartoto/followers", "following_url": "https://api.github.com/users/ahartoto/following{/other_user}", "gists_url": "https://api.github.com/users/ahartoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartoto/subscriptions", "organizations_url": "https://api.github.com/users/ahartoto/orgs", "repos_url": "https://api.github.com/users/ahartoto/repos", "events_url": "https://api.github.com/users/ahartoto/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-25T00:59:16Z", "updated_at": "2017-03-13T19:05:07Z", "closed_at": "2017-03-13T19:05:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Settings:\r\n1. `flex` is asked to load a `YAML` file\r\n2. `flex` reports that the `status_code` `'200'` is not part of dictionary keys: `200, 400, 404`.\r\n\r\nThe bug is really because `flex` converts the `status_code` to `str`, but when it loads the `responses` from the schema, it never converted the keys to `str` (`YAML` parser by default treats these as integers). Hence, the false negative.\r\n\r\nI'll probably submit a pull request later, and here is the cute animals \"picture\": \ud83d\udc30 \ud83d\ude38 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/133", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/133/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/133/events", "html_url": "https://github.com/pipermerriam/flex/issues/133", "id": 197175289, "node_id": "MDU6SXNzdWUxOTcxNzUyODk=", "number": 133, "title": "json load error", "user": {"login": "lmeroc", "id": 7081360, "node_id": "MDQ6VXNlcjcwODEzNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7081360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmeroc", "html_url": "https://github.com/lmeroc", "followers_url": "https://api.github.com/users/lmeroc/followers", "following_url": "https://api.github.com/users/lmeroc/following{/other_user}", "gists_url": "https://api.github.com/users/lmeroc/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmeroc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmeroc/subscriptions", "organizations_url": "https://api.github.com/users/lmeroc/orgs", "repos_url": "https://api.github.com/users/lmeroc/repos", "events_url": "https://api.github.com/users/lmeroc/events{/privacy}", "received_events_url": "https://api.github.com/users/lmeroc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-22T13:32:41Z", "updated_at": "2019-02-13T07:25:15Z", "closed_at": "2019-02-13T07:25:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "why i always get the following error:\r\n'type':\r\n    - u\"Got value `None` of type `null`.  Value must be of type(s): `(u'object',)`\"\r\n\r\n\r\n\r\n json file contents:\r\n            {\r\n    \"swagger\": \"2.0\",\r\n    \"info\": {\r\n        \"contact\": {\r\n            \"name\": \"Group Inc.\",\r\n            \"email\": \"lxxxxx@xxxxxxxxx.com\"\r\n        },\r\n        \"license\": {\r\n            \"name\": \"CNS\"\r\n        },\r\n        \"version\": \"0.1.0\",\r\n        \"title\": \"API\",\r\n        \"description\": \"TODO(description)\"\r\n    },\r\n    \"host\": \"123456\",\r\n    \"basePath\": \"/\",\r\n    \"schemes\": [\r\n        \"http\"\r\n    ],\r\n    \"produces\": [\r\n        \"application/xml\"\r\n    ],\r\n    \"consumes\": [\r\n        \"application/xml\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"name\": \"onlineroute\"\r\n        },\r\n        {\r\n            \"name\": \"debugroute\"\r\n        }\r\n    ],\r\n    \"paths\": {\r\n        \"/onlineroute\": {\r\n            \"get\": {\r\n                \"tags\": [\r\n                    \"onlineroute\"\r\n                ],\r\n                \"description\": \"set  route status.\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"name\": \"OP\",\r\n                        \"in\": \"query\",\r\n                        \"description\": \"srs;op of the request.\",\r\n                        \"type\": \"string\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"name\": \"DriveID\",\r\n                        \"in\": \"query\",\r\n                        \"description\": \"0000000000H004760;drive id of the vehicle.\",\r\n                        \"type\": \"string\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"name\": \"RouteID\",\r\n                        \"in\": \"query\",\r\n                        \"description\": \"VSB3NlBGQVAMQKCD11;route id of the route\",\r\n                        \"type\": \"string\",\r\n                        \"required\": true\r\n                    },\r\n                    {\r\n                        \"name\": \"Action\",\r\n                        \"in\": \"query\",\r\n                        \"description\": \"0;status to be set.\",\r\n                        \"type\": \"string\",\r\n                        \"required\": true\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"request successfully.\",\r\n                        \"schema\": {\r\n                            \"type\": \"string\"\r\n                        },\r\n                        \"headers\": {\r\n                            \"App-Code\": {\r\n                                \"description\": \"status code of the application\",\r\n                                \"type\": \"string\"\r\n                            },\r\n                            \"App-Version\": {\r\n                                \"description\": \"application version\",\r\n                                \"type\": \"string\"\r\n                            },\r\n                            \"Cache-Control\": {\r\n                                \"description\": \"no-store\",\r\n                                \"type\": \"string\"\r\n                            },\r\n                            \"Pragma\": {\r\n                                \"description\": \"no-cache\",\r\n                                \"type\": \"string\"\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/124", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/124/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/124/events", "html_url": "https://github.com/pipermerriam/flex/issues/124", "id": 173381871, "node_id": "MDU6SXNzdWUxNzMzODE4NzE=", "number": 124, "title": "The validation will not work if there is `$ref` in swagger file.", "user": {"login": "cosven", "id": 4962134, "node_id": "MDQ6VXNlcjQ5NjIxMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4962134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cosven", "html_url": "https://github.com/cosven", "followers_url": "https://api.github.com/users/cosven/followers", "following_url": "https://api.github.com/users/cosven/following{/other_user}", "gists_url": "https://api.github.com/users/cosven/gists{/gist_id}", "starred_url": "https://api.github.com/users/cosven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cosven/subscriptions", "organizations_url": "https://api.github.com/users/cosven/orgs", "repos_url": "https://api.github.com/users/cosven/repos", "events_url": "https://api.github.com/users/cosven/events{/privacy}", "received_events_url": "https://api.github.com/users/cosven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-26T06:50:06Z", "updated_at": "2016-10-21T01:00:50Z", "closed_at": "2016-09-08T07:12:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I use `$ref` in a swaggger file, I cant use flex to do validation.\n\nHere is my example: I have a swagger file like this.\n\n```\n{\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"version\": \"0.0.1\",\n        \"title\": \"api-schema-workflow\"\n    },\n    \"definitions\": {\n        \"Person\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"single\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        }\n    },\n    \"paths\": {\n        \"/persons\": {\n            \"get\": {\n                \"description\": \"Gets `Person` objects.\\nOptional query param of **size** determines\\nsize of returned array\\n\",\n                \"parameters\": [\n                    {\n                        \"name\": \"size\",\n                        \"in\": \"query\",\n                        \"description\": \"Size of array\",\n                        \"required\": true,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful response\",\n                        \"schema\": {\n                            \"title\": \"ArrayOfPersons\",\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/Person\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n``` python\nfrom flex.core import load, validate\n\ndata = [{'name': 'test', 'single': True}]\nschema = load('swagger.json')\n# can not do validation here because flex do not parse ref.\n```\n\nSo, I was wondering if flex can parse `$ref` when flex load a swagger file, or there is another way to do the validation.\nThanks a lot.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/122", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/122/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/122/events", "html_url": "https://github.com/pipermerriam/flex/issues/122", "id": 167491983, "node_id": "MDU6SXNzdWUxNjc0OTE5ODM=", "number": 122, "title": "load fails on a schema that has a parameter of type `file`", "user": {"login": "maroux", "id": 3266934, "node_id": "MDQ6VXNlcjMyNjY5MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3266934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maroux", "html_url": "https://github.com/maroux", "followers_url": "https://api.github.com/users/maroux/followers", "following_url": "https://api.github.com/users/maroux/following{/other_user}", "gists_url": "https://api.github.com/users/maroux/gists{/gist_id}", "starred_url": "https://api.github.com/users/maroux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maroux/subscriptions", "organizations_url": "https://api.github.com/users/maroux/orgs", "repos_url": "https://api.github.com/users/maroux/repos", "events_url": "https://api.github.com/users/maroux/events{/privacy}", "received_events_url": "https://api.github.com/users/maroux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-25T23:54:33Z", "updated_at": "2019-02-13T07:32:17Z", "closed_at": "2019-02-13T07:32:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example:\n\n```\n  /media/:\n    post:\n      summary: Upload media\n      operationId: operation\n      description: upload a file and reference it using a url.\n      consumes: [ multipart/form-data ]\n      parameters:\n        - name: photo\n          in: formData\n          description: Photo to upload\n          required: true\n          type: file\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/120", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/120/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/120/events", "html_url": "https://github.com/pipermerriam/flex/issues/120", "id": 164977981, "node_id": "MDU6SXNzdWUxNjQ5Nzc5ODE=", "number": 120, "title": "Flex breaks in Python 3.5.2", "user": {"login": "nickdirienzo", "id": 723567, "node_id": "MDQ6VXNlcjcyMzU2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/723567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickdirienzo", "html_url": "https://github.com/nickdirienzo", "followers_url": "https://api.github.com/users/nickdirienzo/followers", "following_url": "https://api.github.com/users/nickdirienzo/following{/other_user}", "gists_url": "https://api.github.com/users/nickdirienzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickdirienzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickdirienzo/subscriptions", "organizations_url": "https://api.github.com/users/nickdirienzo/orgs", "repos_url": "https://api.github.com/users/nickdirienzo/repos", "events_url": "https://api.github.com/users/nickdirienzo/events{/privacy}", "received_events_url": "https://api.github.com/users/nickdirienzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-07-12T01:58:41Z", "updated_at": "2019-03-05T14:41:35Z", "closed_at": "2019-02-13T07:22:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there!\n\nJust updated to 3.5.2 and `flex` throws this stack trace:\n\n```\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/ndirienzo/code/frontdoor/frontdoor/utils.py\", line 83, in compile_all\n    schema = flex.load(schema_file)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/core.py\", line 99, in load\n    return parse(raw_schema)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/core.py\", line 84, in parse\n    swagger_definitions = definitions_validator(raw_schema, context=context)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/validation/common.py\", line 361, in validate_object\n    schema_validators.validate_object(obj, context=context)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/datastructures.py\", line 75, in validate_object\n    validator(obj, **kwargs)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/datastructures.py\", line 46, in __call__\n    return self.validate_object(*args, **kwargs)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/datastructures.py\", line 41, in validate_object\n    validator(obj, **kwargs)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/decorators.py\", line 52, in inner\n    return func(value, *args, **kwargs)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/decorators.py\", line 37, in inner\n    return func(value, *args, **kwargs)\n  File \"/Users/ndirienzo/.virtualenvs/api/lib/python3.5/site-packages/flex-5.6.0-py3.5.egg/flex/functional.py\", line 9, in chain_reduce\n    value = function(value, **kwargs)\nTypeError: methodcaller does not take keyword arguments\n```\n\nThe `function` at this execution step is: `(operator.methodcaller('get', 'parameters', <flex.constants.Empty object at 0x105589358>)`. It's strange, though, because it doesn't look like `operator` changed between the releases of 3.5.1 and 3.5.2; it also looks like `operator.methodcaller` takes kwargs, so not sure what's happening.\n\nAnyone have any ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/118", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/118/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/118/events", "html_url": "https://github.com/pipermerriam/flex/issues/118", "id": 161527467, "node_id": "MDU6SXNzdWUxNjE1Mjc0Njc=", "number": 118, "title": "Validation fails when schema uses multi collection type for inquery parameters", "user": {"login": "YuChem", "id": 58654, "node_id": "MDQ6VXNlcjU4NjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/58654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuChem", "html_url": "https://github.com/YuChem", "followers_url": "https://api.github.com/users/YuChem/followers", "following_url": "https://api.github.com/users/YuChem/following{/other_user}", "gists_url": "https://api.github.com/users/YuChem/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuChem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuChem/subscriptions", "organizations_url": "https://api.github.com/users/YuChem/orgs", "repos_url": "https://api.github.com/users/YuChem/repos", "events_url": "https://api.github.com/users/YuChem/events{/privacy}", "received_events_url": "https://api.github.com/users/YuChem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-21T20:08:14Z", "updated_at": "2017-04-10T22:10:32Z", "closed_at": "2017-04-10T22:10:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When validating document described by schema having this fragment\n\n``` json\n \"parameters\": [\n      {\n          \"name\": \"id\",\n          \"in\": \"query\",\n          \"description\": \"Filter the results by id. Multiple ids may be supplied.\",\n          \"type\": \"array\",\n          \"items\": { \"type\": \"integer\" },\n          \"collectionFormat\": \"multi\"\n      },\n```\n\nvalidator throws an exception:\n\n```\npython3.5/site-packages/flex/validation/common.py\", line 407, in generate_value_processor\n    delimeter = DELIMETERS[collectionFormat]\nKeyError: 'multi'\n```\n\nswagger spec file is validated by swagger.io\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/117", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/117/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/117/events", "html_url": "https://github.com/pipermerriam/flex/issues/117", "id": 160063379, "node_id": "MDU6SXNzdWUxNjAwNjMzNzk=", "number": 117, "title": "Content-type header encoding handling", "user": {"login": "YuChem", "id": 58654, "node_id": "MDQ6VXNlcjU4NjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/58654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuChem", "html_url": "https://github.com/YuChem", "followers_url": "https://api.github.com/users/YuChem/followers", "following_url": "https://api.github.com/users/YuChem/following{/other_user}", "gists_url": "https://api.github.com/users/YuChem/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuChem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuChem/subscriptions", "organizations_url": "https://api.github.com/users/YuChem/orgs", "repos_url": "https://api.github.com/users/YuChem/repos", "events_url": "https://api.github.com/users/YuChem/events{/privacy}", "received_events_url": "https://api.github.com/users/YuChem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-13T22:59:50Z", "updated_at": "2019-02-13T07:27:10Z", "closed_at": "2019-02-13T07:27:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error on valid according to [RFC-2045 #5.1](https://www.ietf.org/rfc/rfc2045.txt) header `Content-Type: application/json; charset=utf-8` . The  error message:\n\n```\nNotImplementedError: No content negotiation for this content type\n```\n\nThe code in question is `http.py`\n\n``` python\n        if self.content is EMPTY:\n            return self.content\n        elif self.content_type == 'application/json':\n            if isinstance(self.content, six.binary_type):\n                return json.loads(six.text_type(self.content, encoding='utf-8'))\n            else:\n                return json.loads(self.content)\n        raise NotImplementedError(\"No content negotiation for this content type\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/114", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/114/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/114/events", "html_url": "https://github.com/pipermerriam/flex/issues/114", "id": 152669634, "node_id": "MDU6SXNzdWUxNTI2Njk2MzQ=", "number": 114, "title": "Add array splitting to query param validation", "user": {"login": "maroux", "id": 3266934, "node_id": "MDQ6VXNlcjMyNjY5MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3266934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maroux", "html_url": "https://github.com/maroux", "followers_url": "https://api.github.com/users/maroux/followers", "following_url": "https://api.github.com/users/maroux/following{/other_user}", "gists_url": "https://api.github.com/users/maroux/gists{/gist_id}", "starred_url": "https://api.github.com/users/maroux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maroux/subscriptions", "organizations_url": "https://api.github.com/users/maroux/orgs", "repos_url": "https://api.github.com/users/maroux/repos", "events_url": "https://api.github.com/users/maroux/events{/privacy}", "received_events_url": "https://api.github.com/users/maroux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-02T23:36:31Z", "updated_at": "2016-05-04T15:09:38Z", "closed_at": "2016-05-04T15:09:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For a parameter declaration like so:\n\n```\n  user_id__in:\n    name: user_id__in\n    in: query\n    type: array\n    items:\n      type: string\n    collectionFormat: csv\n```\n\nFlex should be able to validate the query param: `user_id__in=b75125a456387da15b964122,bb0a9dfd9a9401429b71ad4d,259f6471b2b2f1793c4aa2cf` by splitting it into an array based on the type declaration. Thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/112", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/112/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/112/events", "html_url": "https://github.com/pipermerriam/flex/issues/112", "id": 151652572, "node_id": "MDU6SXNzdWUxNTE2NTI1NzI=", "number": 112, "title": "Query Parameter Validation Error - Invalid data type", "user": {"login": "xuejiezhang", "id": 4226549, "node_id": "MDQ6VXNlcjQyMjY1NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4226549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuejiezhang", "html_url": "https://github.com/xuejiezhang", "followers_url": "https://api.github.com/users/xuejiezhang/followers", "following_url": "https://api.github.com/users/xuejiezhang/following{/other_user}", "gists_url": "https://api.github.com/users/xuejiezhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuejiezhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuejiezhang/subscriptions", "organizations_url": "https://api.github.com/users/xuejiezhang/orgs", "repos_url": "https://api.github.com/users/xuejiezhang/repos", "events_url": "https://api.github.com/users/xuejiezhang/events{/privacy}", "received_events_url": "https://api.github.com/users/xuejiezhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-28T14:15:35Z", "updated_at": "2016-05-03T15:27:38Z", "closed_at": "2016-05-03T15:27:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using V5.4.0.\nIn swagger.json, the query parameter is defined as follows:\n  \"parameters\": {\n    \"countQuery\": {\n      \"default\": 10,\n      \"description\": \"Get this number of objects from the collection. Valid values are 1 to 100, default 10.\",\n      \"in\": \"query\",\n      \"minimum\": 1,\n      \"name\": \"count\",\n      \"type\": \"integer\"\n    },\n\nwhen accessing the following URL: http://***/subscriptions?count=1, got the following error:\n\n 'parameters':\n        - 'query':\n            - 'count':\n                - 'type': \n                  - \\\"Got value `'1'` of type `string`.  Value must be of type(s): `('integer',)`\\\"\",\n\nThanks,\nJeff\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/110", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/110/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/110/events", "html_url": "https://github.com/pipermerriam/flex/issues/110", "id": 148799274, "node_id": "MDU6SXNzdWUxNDg3OTkyNzQ=", "number": 110, "title": "Question: Flask/Werkzeug request validation", "user": {"login": "ivan-c", "id": 5333433, "node_id": "MDQ6VXNlcjUzMzM0MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5333433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-c", "html_url": "https://github.com/ivan-c", "followers_url": "https://api.github.com/users/ivan-c/followers", "following_url": "https://api.github.com/users/ivan-c/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-c/subscriptions", "organizations_url": "https://api.github.com/users/ivan-c/orgs", "repos_url": "https://api.github.com/users/ivan-c/repos", "events_url": "https://api.github.com/users/ivan-c/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-c/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-16T00:27:47Z", "updated_at": "2017-05-10T16:39:02Z", "closed_at": "2017-05-10T16:39:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has support for [Flask](https://flask.readthedocs.org/en/latest/api/#flask.Request)/[Werkzeug](http://werkzeug.pocoo.org/docs/0.11/wrappers/) request/response classes ever been considered?\n\nIt looks trivial to add a new [REQUEST_NORMALIZER](https://github.com/pipermerriam/flex/blob/ed3d7ddbbb694002a58030561d43a223f8ac785c/flex/http.py#L151) but I thought I'd ask before getting over my head.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/108", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/108/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/108/events", "html_url": "https://github.com/pipermerriam/flex/issues/108", "id": 146810594, "node_id": "MDU6SXNzdWUxNDY4MTA1OTQ=", "number": 108, "title": "Response status code validation doesn't work", "user": {"login": "maroux", "id": 3266934, "node_id": "MDQ6VXNlcjMyNjY5MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3266934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maroux", "html_url": "https://github.com/maroux", "followers_url": "https://api.github.com/users/maroux/followers", "following_url": "https://api.github.com/users/maroux/following{/other_user}", "gists_url": "https://api.github.com/users/maroux/gists{/gist_id}", "starred_url": "https://api.github.com/users/maroux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maroux/subscriptions", "organizations_url": "https://api.github.com/users/maroux/orgs", "repos_url": "https://api.github.com/users/maroux/repos", "events_url": "https://api.github.com/users/maroux/events{/privacy}", "received_events_url": "https://api.github.com/users/maroux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-04-08T04:32:27Z", "updated_at": "2016-05-03T23:17:43Z", "closed_at": "2016-04-08T17:04:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`validate_api_call` doesn't normalize the requests correctly - swagger responses objects keys are strings, not integers whereas flex expects them to be integers and thus isn't able to correctly validate.\n\nI was able to get around this issue by setting `response.status_code` as a string value.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/106", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/106/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/106/events", "html_url": "https://github.com/pipermerriam/flex/issues/106", "id": 145303732, "node_id": "MDU6SXNzdWUxNDUzMDM3MzI=", "number": 106, "title": "Match path to basePath", "user": {"login": "amygdalama", "id": 3143117, "node_id": "MDQ6VXNlcjMxNDMxMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3143117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amygdalama", "html_url": "https://github.com/amygdalama", "followers_url": "https://api.github.com/users/amygdalama/followers", "following_url": "https://api.github.com/users/amygdalama/following{/other_user}", "gists_url": "https://api.github.com/users/amygdalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/amygdalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amygdalama/subscriptions", "organizations_url": "https://api.github.com/users/amygdalama/orgs", "repos_url": "https://api.github.com/users/amygdalama/repos", "events_url": "https://api.github.com/users/amygdalama/events{/privacy}", "received_events_url": "https://api.github.com/users/amygdalama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-01T22:50:48Z", "updated_at": "2016-04-04T19:08:36Z", "closed_at": "2016-04-04T17:48:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The OAS specification says that [\"The path is appended to the `basePath` in order to construct the full URL.\"](http://swagger.io/specification/#pathsObject)\n\nThis (to me) implies that, to match a path defined in an OAS schema, a path would need to include the `basePath`. But in flex, [if a path doesn't include the `basePath`, it's matched to the schema paths anyway.](https://github.com/pipermerriam/flex/blob/8419783f293632258b5ce15c0737e620f9271bd3/flex/paths.py#L134)\n\nThe impact of this is, if an app has two endpoints: `/cat` and `/v1/cat`, and an OAS schema with a `basePath` of `'v1'`, responses from `/cat` could be validated against the schema for `/v1/cat`. Instead, I'd expect attempting to validate a response from `/cat` to raise a `LookUpError` with no matching paths found.\n\nI'd be happy to fix this if you agree that it's a bug.\n\nHere's my kitten:\nhttps://dl.dropboxusercontent.com/content_link/7W3bWo0D1uOYXG5MlUtSOKBIIKsPoPZgBjiTZtZla3UxkDY8hqALMqNRqMsFDPqK/file\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/101", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/101/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/101/events", "html_url": "https://github.com/pipermerriam/flex/issues/101", "id": 129887625, "node_id": "MDU6SXNzdWUxMjk4ODc2MjU=", "number": 101, "title": "Allow/disallow additional properties option", "user": {"login": "amygdalama", "id": 3143117, "node_id": "MDQ6VXNlcjMxNDMxMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3143117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amygdalama", "html_url": "https://github.com/amygdalama", "followers_url": "https://api.github.com/users/amygdalama/followers", "following_url": "https://api.github.com/users/amygdalama/following{/other_user}", "gists_url": "https://api.github.com/users/amygdalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/amygdalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amygdalama/subscriptions", "organizations_url": "https://api.github.com/users/amygdalama/orgs", "repos_url": "https://api.github.com/users/amygdalama/repos", "events_url": "https://api.github.com/users/amygdalama/events{/privacy}", "received_events_url": "https://api.github.com/users/amygdalama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-29T21:30:16Z", "updated_at": "2016-01-30T00:05:34Z", "closed_at": "2016-01-30T00:05:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With JSON Schema's [`additionalProperties`](http://spacetelescope.github.io/understanding-json-schema/reference/object.html#properties), by default any additional properties are allowed. However, I'd like to enforce the opposite -- additional properties are disallowed unless `additionalProperties` is specified.\n\nFor implementation, I was thinking I could add an argument `allow_additional_properties` to [`validate`](https://github.com/pipermerriam/flex/blob/1f995dbdad577ad5264bd090ddddbdd08417d1e5/flex/core.py#L102). `allow_additional_properties` would default to `True`, preserving the current default behavior. Then I'd pass that option through to `construct_schema_validators` to where we check [if `additionalProperties` is `False`](https://github.com/pipermerriam/flex/blob/1f995dbdad577ad5264bd090ddddbdd08417d1e5/flex/validation/schema.py#L223), and modify that conditional to also disallow `additionalProperties` if `allow_additional_properties` is `False`. Seems like this would work for `validate`, but I'd also want to add the option to `validate_response`. I'll need to do some more digging to see how to do that, since it looks like it doesn't call `construct_schema_validators`, but maybe I'm wrong about that.\n\nDoes this feature interest you? What do you think about the suggested implementation? I'd be happy to take a stab at it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/97", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/97/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/97/events", "html_url": "https://github.com/pipermerriam/flex/issues/97", "id": 129529036, "node_id": "MDU6SXNzdWUxMjk1MjkwMzY=", "number": 97, "title": "Unique constraint on arrays containing objects raises exception", "user": {"login": "amygdalama", "id": 3143117, "node_id": "MDQ6VXNlcjMxNDMxMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3143117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amygdalama", "html_url": "https://github.com/amygdalama", "followers_url": "https://api.github.com/users/amygdalama/followers", "following_url": "https://api.github.com/users/amygdalama/following{/other_user}", "gists_url": "https://api.github.com/users/amygdalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/amygdalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amygdalama/subscriptions", "organizations_url": "https://api.github.com/users/amygdalama/orgs", "repos_url": "https://api.github.com/users/amygdalama/repos", "events_url": "https://api.github.com/users/amygdalama/events{/privacy}", "received_events_url": "https://api.github.com/users/amygdalama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-28T18:07:17Z", "updated_at": "2016-01-28T23:30:56Z", "closed_at": "2016-01-28T23:30:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We have a response for an endpoint defined as follows in our spec:\n\n```\n        responses:\n          200:\n            description: list of payment methods\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  type: array\n                  uniqueItems: true\n                  items:\n                    $ref: '#/definitions/PaymentMethod'\n```\n\nThe important thing to note is that `data` here is an array containing objects. When validating a response from this endpoint, we get this exception raised:\n\n```\n TypeError: unhashable type: 'dict'\n```\n\nI'm thinking that this is because when validating uniqueness, flex uses a counter [here](https://github.com/pipermerriam/flex/blob/a8ddfae3393aea596b390022bb7263d2ca408937/flex/validation/common.py#L244), which [requires hashable types](https://docs.python.org/2/library/collections.html#collections.Counter).\n\nHere's the full stacktrace:\n\n```\n /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/validation/response.py line 241 in validate_response\n      response_validator(response, context=schema)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/validation/common.py line 322 in validate_object\n      schema_validators.validate_object(obj, context=context)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 75 in validate_object\n      validator(obj, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 46 in __call__\n      return self.validate_object(*args, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 41 in validate_object\n      validator(obj, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/functional.py line 9 in chain_reduce\n      value = function(value, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/validation/common.py line 322 in validate_object\n      schema_validators.validate_object(obj, context=context)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 75 in validate_object\n      validator(obj, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 46 in __call__\n      return self.validate_object(*args, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 41 in validate_object\n      validator(obj, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/decorators.py line 52 in inner\n      return func(value, *args, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/decorators.py line 37 in inner\n      return func(value, *args, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/functional.py line 9 in chain_reduce\n      value = function(value, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/validation/common.py line 322 in validate_object\n      schema_validators.validate_object(obj, context=context)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 75 in validate_object\n      validator(obj, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 46 in __call__\n      return self.validate_object(*args, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/datastructures.py line 41 in validate_object\n      validator(obj, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/decorators.py line 52 in inner\n      return func(value, *args, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/decorators.py line 37 in inner\n      return func(value, *args, **kwargs)\n    /app/shared/virtualenvs/venmo_platform27/local/lib/python2.7/site-packages/flex/validation/common.py line 245 in validate_unique_items\n      (v, type(v)) for v in value\n    /usr/lib/python2.7/collections.py line 419 in __init__\n      self.update(iterable, **kwds)\n    /usr/lib/python2.7/collections.py line 501 in update\n      self[elem] = self_get(elem, 0) + 1\n   TypeError: unhashable type: 'dict'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/96", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/96/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/96/events", "html_url": "https://github.com/pipermerriam/flex/issues/96", "id": 129513795, "node_id": "MDU6SXNzdWUxMjk1MTM3OTU=", "number": 96, "title": "support `responses.default`", "user": {"login": "simon-weber", "id": 950506, "node_id": "MDQ6VXNlcjk1MDUwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/950506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-weber", "html_url": "https://github.com/simon-weber", "followers_url": "https://api.github.com/users/simon-weber/followers", "following_url": "https://api.github.com/users/simon-weber/following{/other_user}", "gists_url": "https://api.github.com/users/simon-weber/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-weber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-weber/subscriptions", "organizations_url": "https://api.github.com/users/simon-weber/orgs", "repos_url": "https://api.github.com/users/simon-weber/repos", "events_url": "https://api.github.com/users/simon-weber/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-weber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-28T17:08:13Z", "updated_at": "2016-01-28T22:09:38Z", "closed_at": "2016-01-28T22:09:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According [to the responses spec](http://swagger.io/specification/#responsesObject), a `default` key should be used to validate any response codes not explicitly declared. Right now, though, flex will raise `invalid_status_code` without checking for the presence of `default`.\n\nThis should be an easy fix: the check for default can be done [here](https://github.com/pipermerriam/flex/blob/a8ddfae3393aea596b390022bb7263d2ca408937/flex/validation/response.py#L46).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/93", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/93/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/93/events", "html_url": "https://github.com/pipermerriam/flex/issues/93", "id": 127469661, "node_id": "MDU6SXNzdWUxMjc0Njk2NjE=", "number": 93, "title": "Please rename the command line tool", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-19T15:22:51Z", "updated_at": "2016-01-19T16:42:13Z", "closed_at": "2016-01-19T16:14:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you please rename the command line tool to avoid the conflict with this tool?\nhttps://en.wikipedia.org/wiki/Flex_(lexical_analyser_generator)\n\nI see that this name conflict was already discussed in\nhttps://github.com/pipermerriam/flex/issues/18#issuecomment-63671100\nbut didn't result in a change?\n\nThis came up here: https://github.com/sherpa/sherpa/issues/146\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/92", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/92/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/92/events", "html_url": "https://github.com/pipermerriam/flex/issues/92", "id": 127418499, "node_id": "MDU6SXNzdWUxMjc0MTg0OTk=", "number": 92, "title": "'contact' validation", "user": {"login": "giacbrd", "id": 497264, "node_id": "MDQ6VXNlcjQ5NzI2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/497264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giacbrd", "html_url": "https://github.com/giacbrd", "followers_url": "https://api.github.com/users/giacbrd/followers", "following_url": "https://api.github.com/users/giacbrd/following{/other_user}", "gists_url": "https://api.github.com/users/giacbrd/gists{/gist_id}", "starred_url": "https://api.github.com/users/giacbrd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giacbrd/subscriptions", "organizations_url": "https://api.github.com/users/giacbrd/orgs", "repos_url": "https://api.github.com/users/giacbrd/repos", "events_url": "https://api.github.com/users/giacbrd/events{/privacy}", "received_events_url": "https://api.github.com/users/giacbrd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-19T10:48:25Z", "updated_at": "2019-02-13T07:27:41Z", "closed_at": "2019-02-13T07:27:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The 'contact' field should be an object, according to https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#contact-object .\nWhen I try to load a schema with the contacts defined as in the above documentation, I receive an exception. \n(Is this the file to fix? https://github.com/pipermerriam/flex/blob/master/flex/loading/schema/info.py) \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/91", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/91/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/91/events", "html_url": "https://github.com/pipermerriam/flex/issues/91", "id": 122083039, "node_id": "MDU6SXNzdWUxMjIwODMwMzk=", "number": 91, "title": "Allow nullable values", "user": {"login": "LucasRoesler", "id": 891889, "node_id": "MDQ6VXNlcjg5MTg4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/891889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucasRoesler", "html_url": "https://github.com/LucasRoesler", "followers_url": "https://api.github.com/users/LucasRoesler/followers", "following_url": "https://api.github.com/users/LucasRoesler/following{/other_user}", "gists_url": "https://api.github.com/users/LucasRoesler/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucasRoesler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucasRoesler/subscriptions", "organizations_url": "https://api.github.com/users/LucasRoesler/orgs", "repos_url": "https://api.github.com/users/LucasRoesler/repos", "events_url": "https://api.github.com/users/LucasRoesler/events{/privacy}", "received_events_url": "https://api.github.com/users/LucasRoesler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-12-14T16:51:06Z", "updated_at": "2017-02-20T14:31:38Z", "closed_at": "2016-05-04T15:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to add a way to validate nullable values.  I thought that the format validation might allow me to do this, but it is separate from the type validation.   I don't mind submitting the code, but I would love a pointer on where to start.  \n\nThe biggest potential issue is that swagger does not officially define nullable fields. In fact, `null` isn't allowed in the spec. So either a spec would need to be picked or it would need to be configurable. We have been using `x-nullable: true` in our specs.   For example,\n\n``` yaml\nproperties:\n  id:\n    type: integer\n    format: int32\n  organization_id:\n    type: integer\n    format: int32\n  email:\n    type: string\n  first_name:\n    type: string\n    x-nullable: true\n```\n\nAs per https://github.com/swagger-api/swagger-spec/issues/229, `x-nullable` and `x-isnullable` seem to be popular choices for people with nullable fields. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/87", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/87/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/87/events", "html_url": "https://github.com/pipermerriam/flex/issues/87", "id": 97753312, "node_id": "MDU6SXNzdWU5Nzc1MzMxMg==", "number": 87, "title": "Flex is not validating correctly an url with query parameter", "user": {"login": "roselmamendes", "id": 3411473, "node_id": "MDQ6VXNlcjM0MTE0NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3411473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roselmamendes", "html_url": "https://github.com/roselmamendes", "followers_url": "https://api.github.com/users/roselmamendes/followers", "following_url": "https://api.github.com/users/roselmamendes/following{/other_user}", "gists_url": "https://api.github.com/users/roselmamendes/gists{/gist_id}", "starred_url": "https://api.github.com/users/roselmamendes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roselmamendes/subscriptions", "organizations_url": "https://api.github.com/users/roselmamendes/orgs", "repos_url": "https://api.github.com/users/roselmamendes/repos", "events_url": "https://api.github.com/users/roselmamendes/events{/privacy}", "received_events_url": "https://api.github.com/users/roselmamendes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-28T16:57:31Z", "updated_at": "2015-07-28T17:18:17Z", "closed_at": "2015-07-28T17:17:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "We added a new url with query parameter on our project, and we would like check this using Flex.\nBut we noticed when url with query parameter is not specified into swagger file, Flex doesn't validate correctly. \nWe have created a test to that before make any adding to swagger file, and Flex act as test is fine.\nWe assumed hope that Flex would show a error if this is trying call a url with query parameter, if this one is not specified in the swagger file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/84", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/84/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/84/events", "html_url": "https://github.com/pipermerriam/flex/issues/84", "id": 95701568, "node_id": "MDU6SXNzdWU5NTcwMTU2OA==", "number": 84, "title": "Improve the maxLength validation message", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-17T17:12:41Z", "updated_at": "2015-07-17T17:42:58Z", "closed_at": "2015-07-17T17:40:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @pipermerriam I found something that seems an error\n\n``` yaml\namount:\n    type: string\n    maxLength: 2\n```\n\nBut when I send an amount of 5 characters, I got the validation message:\n\n``` ssh\nflex.exceptions.ValidationError: 'response':\n    - 'body':\n        - 'schema':\n            - '$ref':\n                - 'amount':\n                    - 'maxLength':\n                        - 'value must be no greater than 5 characters in length.'\n```\n\nThe message should be something like `value must be no greater than 2 characters in length`\nI am using the last version of flex.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/82", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/82/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/82/events", "html_url": "https://github.com/pipermerriam/flex/issues/82", "id": 89278533, "node_id": "MDU6SXNzdWU4OTI3ODUzMw==", "number": 82, "title": "Validation incorrectly allows additional properties", "user": {"login": "gaaf", "id": 5906877, "node_id": "MDQ6VXNlcjU5MDY4Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5906877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaaf", "html_url": "https://github.com/gaaf", "followers_url": "https://api.github.com/users/gaaf/followers", "following_url": "https://api.github.com/users/gaaf/following{/other_user}", "gists_url": "https://api.github.com/users/gaaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaaf/subscriptions", "organizations_url": "https://api.github.com/users/gaaf/orgs", "repos_url": "https://api.github.com/users/gaaf/repos", "events_url": "https://api.github.com/users/gaaf/events{/privacy}", "received_events_url": "https://api.github.com/users/gaaf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634605, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDU=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-06-18T12:19:34Z", "updated_at": "2015-06-30T21:38:02Z", "closed_at": "2015-06-30T21:32:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Validation allows additional properties if \"additionalProperties\" is set to False in the schema. Instead, the validator should raise an exception. The JSON Schema validation specification, [section 5.4.4.4](http://json-schema.org/latest/json-schema-validation.html#anchor68) contains the rules on how to handle \"additionalProperties\".\n\n``` python\nfrom flex.core import validate\nschema = {\n  'type': 'object',\n  'additionalProperties': False,\n  'properties': {\n    'name': {\n      'type': 'string',\n      'minLength': 3,\n    },\n  }\n}\ndata = {\n  'wrong': 10,\n}\nvalidate(schema, data)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/81", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/81/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/81/events", "html_url": "https://github.com/pipermerriam/flex/issues/81", "id": 86681116, "node_id": "MDU6SXNzdWU4NjY4MTExNg==", "number": 81, "title": "Support for model composition", "user": {"login": "rasoliveira", "id": 47824, "node_id": "MDQ6VXNlcjQ3ODI0", "avatar_url": "https://avatars3.githubusercontent.com/u/47824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasoliveira", "html_url": "https://github.com/rasoliveira", "followers_url": "https://api.github.com/users/rasoliveira/followers", "following_url": "https://api.github.com/users/rasoliveira/following{/other_user}", "gists_url": "https://api.github.com/users/rasoliveira/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasoliveira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasoliveira/subscriptions", "organizations_url": "https://api.github.com/users/rasoliveira/orgs", "repos_url": "https://api.github.com/users/rasoliveira/repos", "events_url": "https://api.github.com/users/rasoliveira/events{/privacy}", "received_events_url": "https://api.github.com/users/rasoliveira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-06-09T17:57:40Z", "updated_at": "2016-03-02T16:50:05Z", "closed_at": "2016-03-02T16:50:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "What about the feature of using discriminator and extends?\n\nhttps://github.com/swagger-api/swagger-spec/blob/master/fixtures/v2.0/json/models/modelWithComposition.json\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/80", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/80/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/80/events", "html_url": "https://github.com/pipermerriam/flex/issues/80", "id": 83433042, "node_id": "MDU6SXNzdWU4MzQzMzA0Mg==", "number": 80, "title": "Flex doesn't correctly parse Reference Object in Parameters section. It's not parsing the referenced Parameter object?", "user": {"login": "EBichel", "id": 5231763, "node_id": "MDQ6VXNlcjUyMzE3NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5231763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EBichel", "html_url": "https://github.com/EBichel", "followers_url": "https://api.github.com/users/EBichel/followers", "following_url": "https://api.github.com/users/EBichel/following{/other_user}", "gists_url": "https://api.github.com/users/EBichel/gists{/gist_id}", "starred_url": "https://api.github.com/users/EBichel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EBichel/subscriptions", "organizations_url": "https://api.github.com/users/EBichel/orgs", "repos_url": "https://api.github.com/users/EBichel/repos", "events_url": "https://api.github.com/users/EBichel/events{/privacy}", "received_events_url": "https://api.github.com/users/EBichel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-01T10:46:34Z", "updated_at": "2015-06-01T13:52:59Z", "closed_at": "2015-06-01T13:52:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI've found that flex doesn't correctly validate a referenced parameter object.\nAn example to reproduce the error:\n\n``` json\n{\n  \"swagger\" : \"2.0\",\n  \"info\" : {\n    \"version\" : \"0.1\",\n    \"title\" : \"SampleAPI\"\n  },\n  \"basePath\" : \"/rest\",\n  \"schemes\" : [ \"http\" ],\n  \"consumes\" : [ \"application/json\" ],\n  \"produces\" : [ \"application/json\" ],\n  \"paths\" : {\n    \"/resource\": {\n      \"post\" : {\n        \"parameters\" : [\n            {\"$ref\" : \"#/parameters/ParameterObject\"}\n        ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"ok\"\n          }\n        }\n      }\n    }\n\n  },\n  \"parameters\" : {\n    \"ParameterObject\" : {\n      \"name\" : \"Parameter Object\",\n      \"description\" : \"Fancy description\",\n      \"in\" : \"body\",\n      \"required\" : true,\n      \"schema\" : {\n        \"type\" : \"object\",\n        \"properties\" : {\n          \"ArrayOfItems\" : {\n            \"type\" : \"array\",\n            \"items\" : {\n              \"$ref\" : \"#/definitions/RandomObject\"\n            }\n          }\n        }\n      }\n    }\n\n  },\n  \"definitions\" : {\n\n    \"RandomObject\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\"\n        },\n        \"name\" : {\n          \"type\" : \"string\"\n        },\n        \"version\" : {\n          \"type\" : \"string\"\n        }\n      }\n    }\n  }\n}\n```\n\nI get the following output from flex: \n\n```\nError: 'paths':\n    - u'/resource':\n        - 'post':\n            - 'parameters':\n                - 'required':\n                    - 'name':\n                        - u'This value is required'\n                    - 'in':\n                        - u'This value is required'\n```\n\nObviously `name` and `in` are existing. I think this is easy to fix, since it seems to me that the reference object is validated instead of the parameter object that is referenced.\nThanks a lot for the good work and fast feedback!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/78", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/78/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/78/events", "html_url": "https://github.com/pipermerriam/flex/issues/78", "id": 72303244, "node_id": "MDU6SXNzdWU3MjMwMzI0NA==", "number": 78, "title": "Response validation of required fields does not work properly with references.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-30T22:54:09Z", "updated_at": "2015-05-01T20:35:32Z", "closed_at": "2015-05-01T20:35:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The following schema will throw errors when it should not.\n\n``` yaml\npaths:\n    /foo/:\n        responses:\n            200:\n                $ref: SuccessResponse\nresponses:\n    SuccessResponse:\n        description: A successful response\n```\n\nIt will think that the description field is missing when in fact it is present on the reference.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/76", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/76/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/76/events", "html_url": "https://github.com/pipermerriam/flex/issues/76", "id": 69833663, "node_id": "MDU6SXNzdWU2OTgzMzY2Mw==", "number": 76, "title": "Petstore example broken", "user": {"login": "kvlahromei", "id": 8177370, "node_id": "MDQ6VXNlcjgxNzczNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8177370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvlahromei", "html_url": "https://github.com/kvlahromei", "followers_url": "https://api.github.com/users/kvlahromei/followers", "following_url": "https://api.github.com/users/kvlahromei/following{/other_user}", "gists_url": "https://api.github.com/users/kvlahromei/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvlahromei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvlahromei/subscriptions", "organizations_url": "https://api.github.com/users/kvlahromei/orgs", "repos_url": "https://api.github.com/users/kvlahromei/repos", "events_url": "https://api.github.com/users/kvlahromei/events{/privacy}", "received_events_url": "https://api.github.com/users/kvlahromei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-04-21T12:28:39Z", "updated_at": "2015-08-12T14:10:46Z", "closed_at": "2015-08-10T16:21:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [petstore example](http://petstore.swagger.io) is pretty popular for newbies at swagger.io because it's simple and often used. Unfortunatly flex 4.01 seems to have problems with the current [specs. file](http://petstore.swagger.io/v2/swagger.json):\n\n```\nValidationError: 'info':\n    - 'contact':\n        - 'type':\n            - u\"Got value `{u'email': u'apiteam@wordnik.com'}` of type `object`.\n  Value must be of type(s): `(u'string',)`\"\n    - 'license':\n        - 'type':\n            - u\"Got value `{u'url': u'http://www.apache.org/licenses/LICENSE-2.0\n.html', u'name': u'Apache 2.0'}` of type `object`.  Value must be of type(s): `(\nu'string',)`\"\n'paths':\n    - u'/pet/findByStatus':\n        - 'get':\n            - 'parameters':\n                - 'default':\n                    - u\"The value of `default` must be of one of the declared ty\npes for the schema.  `available` is not one of `[u'array']`\"\n    - u'/pet/{petId}/uploadImage':\n        - 'post':\n            - 'parameters':\n                - 'type':\n                    - 'type':\n                        - 'enum':\n                            - u\"Invalid value.  file is not one of the available\n options ([u'null', u'boolean', u'integer', u'number', u'string', u'array'])\"\n```\n\nCan anybody please tell if this is already in focus (and maybe covered by other issues) ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/74", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/74/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/74/events", "html_url": "https://github.com/pipermerriam/flex/issues/74", "id": 69252744, "node_id": "MDU6SXNzdWU2OTI1Mjc0NA==", "number": 74, "title": "ImportError: cannot import name PipSession", "user": {"login": "jmaclabs", "id": 799192, "node_id": "MDQ6VXNlcjc5OTE5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/799192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmaclabs", "html_url": "https://github.com/jmaclabs", "followers_url": "https://api.github.com/users/jmaclabs/followers", "following_url": "https://api.github.com/users/jmaclabs/following{/other_user}", "gists_url": "https://api.github.com/users/jmaclabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmaclabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmaclabs/subscriptions", "organizations_url": "https://api.github.com/users/jmaclabs/orgs", "repos_url": "https://api.github.com/users/jmaclabs/repos", "events_url": "https://api.github.com/users/jmaclabs/events{/privacy}", "received_events_url": "https://api.github.com/users/jmaclabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-04-18T01:36:18Z", "updated_at": "2015-04-18T05:40:17Z", "closed_at": "2015-04-18T04:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Excited to try out flex but it's failing on the `pip install flex` with ImportError: cannot import name PipSession\n\nI attempted to install while in an active virtualenvs. When I deactivated, it worked.\n\nfull pip.log:\n\n``` python\n-----------------------------------------------------------\n/Users/jmac/.virtualenvs/test/bin/pip run on Fri Apr 17 18:26:11 2015\nDownloading/unpacking flex\n\n  Getting page https://pypi.python.org/simple/flex/\n  URLs to search for versions for flex:\n  * https://pypi.python.org/simple/flex/\n  Analyzing links from page https://pypi.python.org/simple/flex/\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-2.1.0-py2-none-any.whl#md5=96236f480e1275a49ba9c5722436eaf1 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-2.2.0-py2-none-any.whl#md5=06e87bb689e08d0ca05a3a65fc6dfd92 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-2.3.0-py2-none-any.whl#md5=0cacdc8e292edce2b88848a3f8ac20d1 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-2.4.0-py2-none-any.whl#md5=9e1bfc45eef93e5709cce185ae7fcdb7 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-2.5.0-py2-none-any.whl#md5=6f5ad0400661857795fe3b346c8cc330 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-2.6.0-py2-none-any.whl#md5=07a3ac34578d68d6dbfd427fe0a8a2fe (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-2.7.0-py2-none-any.whl#md5=91d8817890ed6f3a99f47b28573eaef1 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-2.8.0-py2-none-any.whl#md5=20d4f475b3acce2e7275f60a82d116fe (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-3.0.0-py2-none-any.whl#md5=b5c2edbd7be990094dae4cc1484f2929 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-3.1.0-py2-none-any.whl#md5=e2ddbdeea959a0749a6c7ac90b3ea35f (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-3.2.0-py2-none-any.whl#md5=3d31251d2afdfae4f966d779dcf4b4c7 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-3.3.0-py2-none-any.whl#md5=b3f2c604a7b4f4589a36d48bb2d63e6d (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-3.4.0-py2-none-any.whl#md5=cc79fec9685c985af5218fb64ed7052d (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-3.4.1-py2-none-any.whl#md5=ab53845d2ac011598b8b7dcba429cf45 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-3.5.0-py2-none-any.whl#md5=5c7ca5489714e68a071afe2a2ca6caf5 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-3.5.1-py2-none-any.whl#md5=ceba56bd41f8dc152cb89b1197957d93 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Skipping link https://pypi.python.org/packages/2.7/f/flex/flex-4.0.0-py2-none-any.whl#md5=2053d494350eff51530c11dade68b4b3 (from https://pypi.python.org/simple/flex/); unknown archive format: .whl\n    Found link https://pypi.python.org/packages/any/f/flex/flex-2.1.0.macosx-10.10-x86_64.tar.gz#md5=acf62f066411583b0e1df4ab7e98e692 (from https://pypi.python.org/simple/flex/), version: 2.1.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-2.2.0.macosx-10.10-x86_64.tar.gz#md5=6e28c39eb689fbed209cd6ff0161466a (from https://pypi.python.org/simple/flex/), version: 2.2.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-2.3.0.macosx-10.10-x86_64.tar.gz#md5=2560721ec8a7101206bec2a02e8c1328 (from https://pypi.python.org/simple/flex/), version: 2.3.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-2.4.0.macosx-10.10-x86_64.tar.gz#md5=a2b14268022ba352c46cb0fc3f6ce609 (from https://pypi.python.org/simple/flex/), version: 2.4.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-2.5.0.macosx-10.10-x86_64.tar.gz#md5=49e95273d23a8c83bf2b6060a11bfe0d (from https://pypi.python.org/simple/flex/), version: 2.5.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-2.6.0.macosx-10.10-x86_64.tar.gz#md5=cbd8a7b5a71d6274ff70d5e1683c382f (from https://pypi.python.org/simple/flex/), version: 2.6.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-2.7.0.macosx-10.10-x86_64.tar.gz#md5=13cb539d02c1043453ac9fbea606ccbe (from https://pypi.python.org/simple/flex/), version: 2.7.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-2.8.0.macosx-10.10-x86_64.tar.gz#md5=d8d3f2ef2c71a8de8347f96e37fdce9d (from https://pypi.python.org/simple/flex/), version: 2.8.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-3.0.0.macosx-10.10-x86_64.tar.gz#md5=6631a3f76049a0b22992f1b11dc99f59 (from https://pypi.python.org/simple/flex/), version: 3.0.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-3.1.0.macosx-10.10-x86_64.tar.gz#md5=7539da3bccd62093be1b096094f7fc44 (from https://pypi.python.org/simple/flex/), version: 3.1.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-3.2.0.macosx-10.10-x86_64.tar.gz#md5=9e59c628faaecbbf93f62cb3d85dd46b (from https://pypi.python.org/simple/flex/), version: 3.2.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-3.3.0.macosx-10.10-x86_64.tar.gz#md5=52fe0f56aa3b3a13fe83f687474d4a99 (from https://pypi.python.org/simple/flex/), version: 3.3.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-3.4.0.macosx-10.10-x86_64.tar.gz#md5=9a91c29cfd6999f35af588b6714c6bdd (from https://pypi.python.org/simple/flex/), version: 3.4.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-3.4.1.macosx-10.10-x86_64.tar.gz#md5=9a0ae5b77f7fece64a3a6635872a5bd0 (from https://pypi.python.org/simple/flex/), version: 3.4.1.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-3.5.0.macosx-10.10-x86_64.tar.gz#md5=a1156524b44be68627d0e0e8cdd4efee (from https://pypi.python.org/simple/flex/), version: 3.5.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-3.5.1.macosx-10.10-x86_64.tar.gz#md5=cb4bad77109acd19bd4649289f99d697 (from https://pypi.python.org/simple/flex/), version: 3.5.1.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/any/f/flex/flex-4.0.0.macosx-10.10-x86_64.tar.gz#md5=e9a8f78e5011594f574affd2cf285c18 (from https://pypi.python.org/simple/flex/), version: 4.0.0.macosx-10.10-x86_64\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.0.0.tar.gz#md5=1018702e4443d0a7a9d9bd2107310b94 (from https://pypi.python.org/simple/flex/), version: 1.0.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.1.0.tar.gz#md5=30495feb0099a178dcdc5e49c51fa425 (from https://pypi.python.org/simple/flex/), version: 1.1.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.2.0.tar.gz#md5=d736158d9df43474679114d43058097d (from https://pypi.python.org/simple/flex/), version: 1.2.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.3.0.tar.gz#md5=249b7c00dc4245a712d1de580f29ea2c (from https://pypi.python.org/simple/flex/), version: 1.3.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.4.0.tar.gz#md5=6b7987bb7099da118c374951a6d53ae7 (from https://pypi.python.org/simple/flex/), version: 1.4.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.5.0.tar.gz#md5=9a295ffaf15875c8c132368cee45866f (from https://pypi.python.org/simple/flex/), version: 1.5.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.6.0.tar.gz#md5=4526002b71e95a224d6190f38e16edc9 (from https://pypi.python.org/simple/flex/), version: 1.6.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.7.0.tar.gz#md5=448391a732d90d2cee4e7c74e2b8fbd0 (from https://pypi.python.org/simple/flex/), version: 1.7.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.8.0.tar.gz#md5=e3c3d4fb0a21e2bf64cd0795751bf6a8 (from https://pypi.python.org/simple/flex/), version: 1.8.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-1.9.0.tar.gz#md5=4311508b8b5f08b6ce1e042ee864c44d (from https://pypi.python.org/simple/flex/), version: 1.9.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.0.0.tar.gz#md5=f7c529d270cbb4304d6cc8cd04ea5214 (from https://pypi.python.org/simple/flex/), version: 2.0.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.1.0.tar.gz#md5=8809a0bbe1627ad80212e0956c2825cc (from https://pypi.python.org/simple/flex/), version: 2.1.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.2.0.tar.gz#md5=151661ef30d890445cc0159690fc9545 (from https://pypi.python.org/simple/flex/), version: 2.2.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.3.0.tar.gz#md5=73e5614ec8b756a64d975cf565885df3 (from https://pypi.python.org/simple/flex/), version: 2.3.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.4.0.tar.gz#md5=78119930f6f66b9c804c1dfe47827d71 (from https://pypi.python.org/simple/flex/), version: 2.4.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.5.0.tar.gz#md5=f844ae18856c44eb73533ea2a127f7e6 (from https://pypi.python.org/simple/flex/), version: 2.5.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.6.0.tar.gz#md5=79bb821c782226e81bd988bad2e40b15 (from https://pypi.python.org/simple/flex/), version: 2.6.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.7.0.tar.gz#md5=c9f344f547974998885011478cbc892e (from https://pypi.python.org/simple/flex/), version: 2.7.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-2.8.0.tar.gz#md5=be62c79489715f00f93686344b5a500e (from https://pypi.python.org/simple/flex/), version: 2.8.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-3.0.0.tar.gz#md5=f6fd7589ad19e62cc5b3664cc2f54509 (from https://pypi.python.org/simple/flex/), version: 3.0.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-3.1.0.tar.gz#md5=9031eefd1079733bb3bd8f7aa84cdaee (from https://pypi.python.org/simple/flex/), version: 3.1.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-3.2.0.tar.gz#md5=169b6c22645f1b5c97cba503ef95cede (from https://pypi.python.org/simple/flex/), version: 3.2.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-3.3.0.tar.gz#md5=ab8cdc7c543e500a7a4347e93ae90aa8 (from https://pypi.python.org/simple/flex/), version: 3.3.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-3.4.0.tar.gz#md5=f568a75e5b92989353585a1a67ec9ac6 (from https://pypi.python.org/simple/flex/), version: 3.4.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-3.4.1.tar.gz#md5=54f1a23de11974853a8166912ec48ceb (from https://pypi.python.org/simple/flex/), version: 3.4.1\n    Found link https://pypi.python.org/packages/source/f/flex/flex-3.5.0.tar.gz#md5=b69478a737007bed231a05b249f5e5b1 (from https://pypi.python.org/simple/flex/), version: 3.5.0\n    Found link https://pypi.python.org/packages/source/f/flex/flex-3.5.1.tar.gz#md5=dc495484eb7d54c51ab3fa12731583a7 (from https://pypi.python.org/simple/flex/), version: 3.5.1\n    Found link https://pypi.python.org/packages/source/f/flex/flex-4.0.0.tar.gz#md5=73aefc1363cc545f61a01e69a8be9d29 (from https://pypi.python.org/simple/flex/), version: 4.0.0\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-2.1.0.macosx-10.10-x86_64.tar.gz#md5=acf62f066411583b0e1df4ab7e98e692 (from https://pypi.python.org/simple/flex/), version 2.1.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-2.2.0.macosx-10.10-x86_64.tar.gz#md5=6e28c39eb689fbed209cd6ff0161466a (from https://pypi.python.org/simple/flex/), version 2.2.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-2.3.0.macosx-10.10-x86_64.tar.gz#md5=2560721ec8a7101206bec2a02e8c1328 (from https://pypi.python.org/simple/flex/), version 2.3.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-2.4.0.macosx-10.10-x86_64.tar.gz#md5=a2b14268022ba352c46cb0fc3f6ce609 (from https://pypi.python.org/simple/flex/), version 2.4.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-2.5.0.macosx-10.10-x86_64.tar.gz#md5=49e95273d23a8c83bf2b6060a11bfe0d (from https://pypi.python.org/simple/flex/), version 2.5.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-2.6.0.macosx-10.10-x86_64.tar.gz#md5=cbd8a7b5a71d6274ff70d5e1683c382f (from https://pypi.python.org/simple/flex/), version 2.6.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-2.7.0.macosx-10.10-x86_64.tar.gz#md5=13cb539d02c1043453ac9fbea606ccbe (from https://pypi.python.org/simple/flex/), version 2.7.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-2.8.0.macosx-10.10-x86_64.tar.gz#md5=d8d3f2ef2c71a8de8347f96e37fdce9d (from https://pypi.python.org/simple/flex/), version 2.8.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-3.0.0.macosx-10.10-x86_64.tar.gz#md5=6631a3f76049a0b22992f1b11dc99f59 (from https://pypi.python.org/simple/flex/), version 3.0.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-3.1.0.macosx-10.10-x86_64.tar.gz#md5=7539da3bccd62093be1b096094f7fc44 (from https://pypi.python.org/simple/flex/), version 3.1.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-3.2.0.macosx-10.10-x86_64.tar.gz#md5=9e59c628faaecbbf93f62cb3d85dd46b (from https://pypi.python.org/simple/flex/), version 3.2.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-3.3.0.macosx-10.10-x86_64.tar.gz#md5=52fe0f56aa3b3a13fe83f687474d4a99 (from https://pypi.python.org/simple/flex/), version 3.3.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-3.4.0.macosx-10.10-x86_64.tar.gz#md5=9a91c29cfd6999f35af588b6714c6bdd (from https://pypi.python.org/simple/flex/), version 3.4.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-3.4.1.macosx-10.10-x86_64.tar.gz#md5=9a0ae5b77f7fece64a3a6635872a5bd0 (from https://pypi.python.org/simple/flex/), version 3.4.1.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-3.5.0.macosx-10.10-x86_64.tar.gz#md5=a1156524b44be68627d0e0e8cdd4efee (from https://pypi.python.org/simple/flex/), version 3.5.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-3.5.1.macosx-10.10-x86_64.tar.gz#md5=cb4bad77109acd19bd4649289f99d697 (from https://pypi.python.org/simple/flex/), version 3.5.1.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Ignoring link https://pypi.python.org/packages/any/f/flex/flex-4.0.0.macosx-10.10-x86_64.tar.gz#md5=e9a8f78e5011594f574affd2cf285c18 (from https://pypi.python.org/simple/flex/), version 4.0.0.macosx-10.10-x86_64 is a pre-release (use --pre to allow).\n  Using version 4.0.0 (newest of versions: 4.0.0, 3.5.1, 3.5.0, 3.4.1, 3.4.0, 3.3.0, 3.2.0, 3.1.0, 3.0.0, 2.8.0, 2.7.0, 2.6.0, 2.5.0, 2.4.0, 2.3.0, 2.2.0, 2.1.0, 2.0.0, 1.9.0, 1.8.0, 1.7.0, 1.6.0, 1.5.0, 1.4.0, 1.3.0, 1.2.0, 1.1.0, 1.0.0)\n  Downloading flex-4.0.0.tar.gz\n\n  Downloading from URL https://pypi.python.org/packages/source/f/flex/flex-4.0.0.tar.gz#md5=73aefc1363cc545f61a01e69a8be9d29 (from https://pypi.python.org/simple/flex/)\n  Running setup.py egg_info for package flex\n\n    Traceback (most recent call last):\n\n      File \"<string>\", line 16, in <module>\n\n      File \"/Users/jmac/.virtualenvs/test/build/flex/setup.py\", line 4, in <module>\n\n        from pip.download import PipSession\n\n    ImportError: cannot import name PipSession\n\n    Complete output from command python setup.py egg_info:\n\n    Traceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"/Users/jmac/.virtualenvs/test/build/flex/setup.py\", line 4, in <module>\n\n    from pip.download import PipSession\n\nImportError: cannot import name PipSession\n\n----------------------------------------\n\nCleaning up...\n\n  Removing temporary dir /Users/jmac/.virtualenvs/test/build...\nCommand python setup.py egg_info failed with error code 1 in /Users/jmac/.virtualenvs/test/build/flex\n\nException information:\nTraceback (most recent call last):\n  File \"/Users/jmac/.virtualenvs/test/lib/python2.7/site-packages/pip/basecommand.py\", line 134, in main\n    status = self.run(options, args)\n  File \"/Users/jmac/.virtualenvs/test/lib/python2.7/site-packages/pip/commands/install.py\", line 236, in run\n    requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\n  File \"/Users/jmac/.virtualenvs/test/lib/python2.7/site-packages/pip/req.py\", line 1134, in prepare_files\n    req_to_install.run_egg_info()\n  File \"/Users/jmac/.virtualenvs/test/lib/python2.7/site-packages/pip/req.py\", line 259, in run_egg_info\n    command_desc='python setup.py egg_info')\n  File \"/Users/jmac/.virtualenvs/test/lib/python2.7/site-packages/pip/util.py\", line 670, in call_subprocess\n    % (command_desc, proc.returncode, cwd))\nInstallationError: Command python setup.py egg_info failed with error code 1 in /Users/jmac/.virtualenvs/test/build/flex\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/71", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/71/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/71/events", "html_url": "https://github.com/pipermerriam/flex/issues/71", "id": 65958637, "node_id": "MDU6SXNzdWU2NTk1ODYzNw==", "number": 71, "title": "Fix validation of externalDocs keyword.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-02T16:02:33Z", "updated_at": "2015-04-02T19:34:50Z", "closed_at": "2015-04-02T19:34:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#external-documentation-object\n\nCurrently this is being validated as a string.  It's supposed to be an object with `url` and `description` keywords.\n\ncc @MattiSG \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/68", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/68/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/68/events", "html_url": "https://github.com/pipermerriam/flex/issues/68", "id": 65923418, "node_id": "MDU6SXNzdWU2NTkyMzQxOA==", "number": 68, "title": "AttributeError: 'int' object has no attribute 'get'", "user": {"login": "MattiSG", "id": 222463, "node_id": "MDQ6VXNlcjIyMjQ2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/222463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattiSG", "html_url": "https://github.com/MattiSG", "followers_url": "https://api.github.com/users/MattiSG/followers", "following_url": "https://api.github.com/users/MattiSG/following{/other_user}", "gists_url": "https://api.github.com/users/MattiSG/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattiSG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattiSG/subscriptions", "organizations_url": "https://api.github.com/users/MattiSG/orgs", "repos_url": "https://api.github.com/users/MattiSG/repos", "events_url": "https://api.github.com/users/MattiSG/events{/privacy}", "received_events_url": "https://api.github.com/users/MattiSG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-04-02T13:23:26Z", "updated_at": "2015-04-03T08:12:25Z", "closed_at": "2015-04-02T16:30:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ flex --source http://openfisca.sgmap.fr/api/1/swagger\nTraceback (most recent call last):\n\u2026\n  File \"/usr/local/lib/python2.7/site-packages/flex/decorators.py\", line 112, in inner\n    kwargs[key] = obj.get(key, EMPTY)\nAttributeError: 'int' object has no attribute 'get'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/66", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/66/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/66/events", "html_url": "https://github.com/pipermerriam/flex/issues/66", "id": 65202112, "node_id": "MDU6SXNzdWU2NTIwMjExMg==", "number": 66, "title": "Flex doesn't find referenced definitions", "user": {"login": "EBichel", "id": 5231763, "node_id": "MDQ6VXNlcjUyMzE3NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5231763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EBichel", "html_url": "https://github.com/EBichel", "followers_url": "https://api.github.com/users/EBichel/followers", "following_url": "https://api.github.com/users/EBichel/following{/other_user}", "gists_url": "https://api.github.com/users/EBichel/gists{/gist_id}", "starred_url": "https://api.github.com/users/EBichel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EBichel/subscriptions", "organizations_url": "https://api.github.com/users/EBichel/orgs", "repos_url": "https://api.github.com/users/EBichel/repos", "events_url": "https://api.github.com/users/EBichel/events{/privacy}", "received_events_url": "https://api.github.com/users/EBichel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634605, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDU=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-03-30T12:37:50Z", "updated_at": "2015-04-20T14:13:52Z", "closed_at": "2015-04-17T16:31:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am encountering a reference bug with flex (3.5.0).. It doesn't find referenced types in \"#/definitions\".. A sample:\n\n``` json\n {\n  \"swagger\" : \"2.0\",\n  \"info\" : {\n    \"version\" : \"1.0\",\n    \"title\" : \"Sample Rest API\"\n  },\n  \"basePath\" : \"/\",\n  \"schemes\" : [ \"http\" ],\n  \"consumes\" : [ \"application/json\" ],\n  \"produces\" : [ \"application/json\" ],\n  \"paths\" : {\n    \"/status\" : {\n      \"post\" : {\n        \"parameters\" : [ {\n                        \"in\":\"body\",\n                        \"name\": \"token\",\n                        \"schema\" : {\"$ref\" : \"#/definitions/TokenObj\"}\n          }\n         ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"retrieves the status\"\n          }\n        }\n      }\n    }\n  },\n  \"definitions\" : {\n    \"TokenObj\" : {\n      \"required\" : [ \"magic\", \"timestamp\" ],\n      \"properties\" : {\n        \"magic\" : {\n          \"type\" : \"string\"\n        },\n        \"timestamp\" : {\n          \"type\" : \"string\"\n        }\n      },\n      \"type\" : \"object\"\n    }\n  }\n}\n```\n\nI receive the following output:\n\n```\nValidationError: 'paths':\n    - u'/status':\n        - 'post':\n            - 'parameters':\n                - 'schema':\n                    - '$ref':\n                        - u'Unknown definition reference `#/definitions/TokenObj`'\n```\n\nThis is only the simplest sample I could produce. References to #/parameters are working, but anything referencing items in #/definitions seems to be failing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/62", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/62/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/62/events", "html_url": "https://github.com/pipermerriam/flex/issues/62", "id": 60389222, "node_id": "MDU6SXNzdWU2MDM4OTIyMg==", "number": 62, "title": "required fields", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-09T18:34:20Z", "updated_at": "2015-03-11T17:08:58Z", "closed_at": "2015-03-11T01:42:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @pipermerriam, I found something that maybe we can improve. \nAt this moment the required fields should be set like this:\n\n``` yaml\nPet:\n    properties:\n      id:\n        type: integer\n        required: true\n        format: int64\n      name:\n        type: string\n        required: true\n```\n\nBut I saw the [swagger specification](https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#simple-model) and some [examples](https://github.com/swagger-api/swagger-spec/blob/master/examples/v2.0/yaml/petstore-expanded.yaml) and they do something like this:\n\n``` yaml\nPet:\n    required:\n      - id\n      - name\n    properties:\n      id:\n        type: integer\n        format: int64\n      name:\n        type: string\n```\n\nMy problem with the actual solution, it's that when we use our swagger files with other tools for example [swagger editor](http://editor.swagger.io/), it doesn't work. \n\nWhat do you think about this @pipermerriam ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/61", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/61/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/61/events", "html_url": "https://github.com/pipermerriam/flex/issues/61", "id": 59132427, "node_id": "MDU6SXNzdWU1OTEzMjQyNw==", "number": 61, "title": "No paths found for /pets/dog.us", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-26T19:53:50Z", "updated_at": "2015-03-02T17:12:48Z", "closed_at": "2015-03-02T17:12:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, I am facing a new issue with the url validation. \nMy url is something like this: http://localhost/pets/dog.us?type=2&age=1\nMy swagger is something like this:\n\n``` ssh\nbasePath: /localhost\npaths:\n  /pets/dog.us?type=2&age=1\n    get:\n      summary: Get dogs of type 2 and age 1\n      responses:\n        200:\n          schema:\n            $ref: Type2Age1\n```\n\nI am getting this error:\n\n``` ssh\nlibs.flex.exceptions.ValidationError: 'request':\n    - 'path':\n        - 'No paths found for /pets/dog.us'\n```\n\nI took a look to [paths](https://github.com/pipermerriam/flex/blob/master/flex/paths.py#L137) : \n\n``` ssh\n{'/pets/dog.us?type=2&age=1': re.compile('^/pets/dog\\\\.us?type=2&age=1$')}\n```\n\nAnd the [matching_api_paths](https://github.com/pipermerriam/flex/blob/master/flex/paths.py#L147):\n\n``` ssh\n[]\n```\n\nWhat do you think about the problem? Am I defining the path in 'swagger' wrongly? or do you think that is a flex issue?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/56", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/56/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/56/events", "html_url": "https://github.com/pipermerriam/flex/issues/56", "id": 57636308, "node_id": "MDU6SXNzdWU1NzYzNjMwOA==", "number": 56, "title": "Multiple paths found - Request path did not match any of the known api paths", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-13T18:35:10Z", "updated_at": "2015-02-18T14:55:28Z", "closed_at": "2015-02-14T20:25:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I am facing new issues. Take a look at this: \n\n``` ssh\n/v1/pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          description: The id of the pet to retrieve\n          type: string\n      responses:\n        200:\n          description: Expected response to a valid request\n          schema:\n            $ref: Pets\n/v1/pets/{petId}/name/{namePet}:\n    get:\n      description: get an pet with name\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          description: ID of the pet\n          required: true\n          type: string\n        - name: namePet\n          in: path\n          description: name of the pet\n          required: true\n          type: string\n      responses:\n        200:\n          description: response of the pet\n          schema:\n              $ref: Pets\n```\n\nThe problem is that [this line](https://github.com/pipermerriam/flex/blob/master/flex/paths.py#L145):\n\n``` ssh\n matches = [p for p, r in paths.items() if r.match(target_path)]\n```\n\nReturns more than one match:\n\n``` ssh\n['/v1/pets/{petId}', '/v1/pets/{petId}/name/{namePet}']\n```\n\nAnd I am getting the error: Request path did not match any of the known api paths.\nI think that is not the expected behaviour, right? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/52", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/52/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/52/events", "html_url": "https://github.com/pipermerriam/flex/issues/52", "id": 57240678, "node_id": "MDU6SXNzdWU1NzI0MDY3OA==", "number": 52, "title": "Request path did not match any of the known api paths", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-02-10T21:35:59Z", "updated_at": "2015-02-11T20:16:50Z", "closed_at": "2015-02-11T20:11:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I am struggling with this new problem, I am using this example:\n\n``` ssh\n/v1/pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          description: The id of the pet to retrieve\n          type: string\n      responses:\n        200:\n          description: Expected response to a valid request\n          schema:\n            $ref: Pets\n        default:\n          description: unexpected error\n          schema:\n            $ref: Error\n```\n\nAnd when I do this:\n\n``` ssh\nimport requests\nfrom flex.core import load, validate_api_call\nschema = load(\"schema.yaml\")\nresponse = requests.get('/v1/pets/dog')\nvalidate_api_call(schema, raw_request=response.request, raw_response=response)\n```\n\nFor some reason I am getting this error:\n\n``` ssh\nflex.exceptions.ValidationError: 'request':\n    - 'path':\n        - 'Request path did not match any of the known api paths.'\n```\n\nIs there something specific I should do in the schema to solve this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/51", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/51/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/51/events", "html_url": "https://github.com/pipermerriam/flex/issues/51", "id": 57210941, "node_id": "MDU6SXNzdWU1NzIxMDk0MQ==", "number": 51, "title": "Validate maxLenght of an string", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-10T17:57:10Z", "updated_at": "2015-02-10T20:09:27Z", "closed_at": "2015-02-10T20:09:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice if flex validate the maxLenght of a string. For example:\n\n``` ssh\nproperties:\n   mystring:\n        type: string\n        maxLenght: 10\n```\n\nIf _mystring_ has more than 10 characters, flex raise an Error\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/49", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/49/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/49/events", "html_url": "https://github.com/pipermerriam/flex/issues/49", "id": 56287303, "node_id": "MDU6SXNzdWU1NjI4NzMwMw==", "number": 49, "title": "Validate parameters in body", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-02T20:17:39Z", "updated_at": "2015-02-05T03:56:19Z", "closed_at": "2015-02-05T03:56:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there a way to validate parameters in the body?, if I have for example the following schema:\n\n``` ssh\npost:\n      description: Creates a new pet in the store.  Duplicates are allowed\n      operationId: addPet\n      parameters:\n        - name: pet\n          in: body\n          description: Pet to add to the store\n          required: true\n          schema:\n            $ref: '#/definitions/NewPet'\n```\n\nHere is the link of the example I am using: https://github.com/swagger-api/swagger-spec/blob/master/examples/v2.0/yaml/petstore-expanded.yaml \nThere is a way to validate that the parameters received in the body of the post are right?\nI saw in the documentation that this is not explicit so I think that maybe this feature don't exist.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/48", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/48/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/48/events", "html_url": "https://github.com/pipermerriam/flex/issues/48", "id": 56240319, "node_id": "MDU6SXNzdWU1NjI0MDMxOQ==", "number": 48, "title": "Assert intersection error", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-02T14:04:58Z", "updated_at": "2015-02-05T05:06:03Z", "closed_at": "2015-02-05T05:06:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think we should change the way we validate the types, because this is a valid scenario:\n\n``` ssh\nproperties:\ntype:\n       type: string\n       required: True\n```\n\nand because of this:\n\n``` ssh\n# I don't know why this set intersection is enforced...?  Why did I do this.\n        intersection = set(schema['properties'].keys()).intersection(schema.keys())\n        assert not intersection\n```\n\nI am getting the error: assert Intersection.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/45", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/45/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/45/events", "html_url": "https://github.com/pipermerriam/flex/issues/45", "id": 56140318, "node_id": "MDU6SXNzdWU1NjE0MDMxOA==", "number": 45, "title": "Update documentation for validate_api_call", "user": {"login": "nicolastrres", "id": 6579348, "node_id": "MDQ6VXNlcjY1NzkzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6579348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolastrres", "html_url": "https://github.com/nicolastrres", "followers_url": "https://api.github.com/users/nicolastrres/followers", "following_url": "https://api.github.com/users/nicolastrres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolastrres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolastrres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolastrres/subscriptions", "organizations_url": "https://api.github.com/users/nicolastrres/orgs", "repos_url": "https://api.github.com/users/nicolastrres/repos", "events_url": "https://api.github.com/users/nicolastrres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolastrres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-31T21:31:20Z", "updated_at": "2015-02-05T03:55:48Z", "closed_at": "2015-02-05T03:55:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The validate_api_call method was updated but the documentation was not updated.\n\nIn this [commit](https://github.com/pipermerriam/flex/commit/6dd40bf9ce451b2e48565432acb0a32e79c0afc0#diff-f3a867d094642f074d48613d6330c28f) the validate_api_call was changed:\n\n``` ssh\n-def validate_api_call(schema, request, response):\n+def validate_api_call(schema, raw_request, raw_response):\n```\n\nSo the documentation should be updated\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/35", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/35/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/35/events", "html_url": "https://github.com/pipermerriam/flex/issues/35", "id": 52075241, "node_id": "MDU6SXNzdWU1MjA3NTI0MQ==", "number": 35, "title": "Path parameters that are references don't get matched in urls", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-16T05:33:12Z", "updated_at": "2014-12-17T05:32:15Z", "closed_at": "2014-12-17T05:32:15Z", "author_association": "OWNER", "active_lock_reason": null, "body": "A parameter which is in the path, but is defined as a reference does not get used when creating the path regex for path matching.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/34", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/34/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/34/events", "html_url": "https://github.com/pipermerriam/flex/issues/34", "id": 52074080, "node_id": "MDU6SXNzdWU1MjA3NDA4MA==", "number": 34, "title": "Get rid of DRF dependency", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634607, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDc=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-16T05:06:10Z", "updated_at": "2015-07-17T17:46:10Z", "closed_at": "2015-07-17T17:46:10Z", "author_association": "OWNER", "active_lock_reason": null, "body": "No longer really needed and a pain to maintain.  Replace the DRF stuff with a custom rolled validation system using the tools used to validate json schemas.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/30", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/30/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/30/events", "html_url": "https://github.com/pipermerriam/flex/issues/30", "id": 49656555, "node_id": "MDU6SXNzdWU0OTY1NjU1NQ==", "number": 30, "title": "Add validation of response url.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-21T04:55:46Z", "updated_at": "2014-12-17T05:32:21Z", "closed_at": "2014-12-17T05:32:21Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The response url should actually be validated alongside the request url.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/28", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/28/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/28/events", "html_url": "https://github.com/pipermerriam/flex/issues/28", "id": 49240989, "node_id": "MDU6SXNzdWU0OTI0MDk4OQ==", "number": 28, "title": "In python3 the urlparse module is renamed to urllib.parse in Python 3. The 2to3 tool will automatically adapt imports when converting your sources to Python 3.", "user": {"login": "dhilton", "id": 47292, "node_id": "MDQ6VXNlcjQ3Mjky", "avatar_url": "https://avatars2.githubusercontent.com/u/47292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhilton", "html_url": "https://github.com/dhilton", "followers_url": "https://api.github.com/users/dhilton/followers", "following_url": "https://api.github.com/users/dhilton/following{/other_user}", "gists_url": "https://api.github.com/users/dhilton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhilton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhilton/subscriptions", "organizations_url": "https://api.github.com/users/dhilton/orgs", "repos_url": "https://api.github.com/users/dhilton/repos", "events_url": "https://api.github.com/users/dhilton/events{/privacy}", "received_events_url": "https://api.github.com/users/dhilton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-11-18T14:56:30Z", "updated_at": "2014-11-21T04:55:10Z", "closed_at": "2014-11-21T04:55:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Issue when running under python 3, fails due to change in urlparse .\n\nBackground:\nhttps://docs.python.org/2/library/urlparse.html\n\nFound here:\nhttps://github.com/pipermerriam/flex/search?utf8=%E2%9C%93&q=urlparse\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/22", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/22/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/22/events", "html_url": "https://github.com/pipermerriam/flex/issues/22", "id": 48341980, "node_id": "MDU6SXNzdWU0ODM0MTk4MA==", "number": 22, "title": "Add array splitting to header validation.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-11-11T02:50:09Z", "updated_at": "2014-11-13T02:14:55Z", "closed_at": "2014-11-13T02:14:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Header parameters of type array are not being converted to arrays based on their declared delimiters, making any kind of array validation impossible.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/21", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/21/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/21/events", "html_url": "https://github.com/pipermerriam/flex/issues/21", "id": 48341937, "node_id": "MDU6SXNzdWU0ODM0MTkzNw==", "number": 21, "title": "Add type casting to header parameter validation.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-11-11T02:49:15Z", "updated_at": "2014-11-13T02:14:50Z", "closed_at": "2014-11-13T02:14:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Header parameters are not being type cast so things like integer validation will fail.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/20", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/20/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/20/events", "html_url": "https://github.com/pipermerriam/flex/issues/20", "id": 48341911, "node_id": "MDU6SXNzdWU0ODM0MTkxMQ==", "number": 20, "title": "Add type casting to query parameter validation", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-11T02:48:35Z", "updated_at": "2016-05-03T15:27:53Z", "closed_at": "2014-11-13T02:14:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, query parameters are not being cast to their declared types, so things like numeric validation will fail.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/18", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/18/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/18/events", "html_url": "https://github.com/pipermerriam/flex/issues/18", "id": 48214786, "node_id": "MDU6SXNzdWU0ODIxNDc4Ng==", "number": 18, "title": "Add a command line interface.", "user": {"login": "dhilton", "id": 47292, "node_id": "MDQ6VXNlcjQ3Mjky", "avatar_url": "https://avatars2.githubusercontent.com/u/47292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhilton", "html_url": "https://github.com/dhilton", "followers_url": "https://api.github.com/users/dhilton/followers", "following_url": "https://api.github.com/users/dhilton/following{/other_user}", "gists_url": "https://api.github.com/users/dhilton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhilton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhilton/subscriptions", "organizations_url": "https://api.github.com/users/dhilton/orgs", "repos_url": "https://api.github.com/users/dhilton/repos", "events_url": "https://api.github.com/users/dhilton/events{/privacy}", "received_events_url": "https://api.github.com/users/dhilton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634607, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDc=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-11-09T21:43:52Z", "updated_at": "2014-11-19T16:45:35Z", "closed_at": "2014-11-18T05:25:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Interesting tool - wondered if you'd accept a pul request to implement a commandline interface to flex - my use case is a community driven set of API specs that I want to keep validated to Swagger 2.0 and thus would like to have some sort of pre-commit / pre-merge continuous integration using a commandline validator.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/12", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/12/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/12/events", "html_url": "https://github.com/pipermerriam/flex/issues/12", "id": 47722092, "node_id": "MDU6SXNzdWU0NzcyMjA5Mg==", "number": 12, "title": "Add validation of the response headers.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634607, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDc=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pipermerriam/flex/milestones/1", "html_url": "https://github.com/pipermerriam/flex/milestone/1", "labels_url": "https://api.github.com/repos/pipermerriam/flex/milestones/1/labels", "id": 852936, "node_id": "MDk6TWlsZXN0b25lODUyOTM2", "number": 1, "title": "1.8.0", "description": "", "creator": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "closed", "created_at": "2014-11-04T15:00:12Z", "updated_at": "2015-03-29T04:12:17Z", "due_on": null, "closed_at": "2014-11-13T02:14:31Z"}, "comments": 0, "created_at": "2014-11-04T14:59:46Z", "updated_at": "2014-11-13T02:13:58Z", "closed_at": "2014-11-13T02:13:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Response validation should validate the headers returned with the response.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/11", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/11/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/11/events", "html_url": "https://github.com/pipermerriam/flex/issues/11", "id": 47721981, "node_id": "MDU6SXNzdWU0NzcyMTk4MQ==", "number": 11, "title": "Add validation of the response body to response validation.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634607, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDc=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pipermerriam/flex/milestones/1", "html_url": "https://github.com/pipermerriam/flex/milestone/1", "labels_url": "https://api.github.com/repos/pipermerriam/flex/milestones/1/labels", "id": 852936, "node_id": "MDk6TWlsZXN0b25lODUyOTM2", "number": 1, "title": "1.8.0", "description": "", "creator": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "closed", "created_at": "2014-11-04T15:00:12Z", "updated_at": "2015-03-29T04:12:17Z", "due_on": null, "closed_at": "2014-11-13T02:14:31Z"}, "comments": 0, "created_at": "2014-11-04T14:58:52Z", "updated_at": "2014-11-09T00:12:33Z", "closed_at": "2014-11-09T00:12:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Request validation should validate the response body.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/9", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/9/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/9/events", "html_url": "https://github.com/pipermerriam/flex/issues/9", "id": 47721769, "node_id": "MDU6SXNzdWU0NzcyMTc2OQ==", "number": 9, "title": "Add validation of the request body parameters", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634607, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDc=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pipermerriam/flex/milestones/1", "html_url": "https://github.com/pipermerriam/flex/milestone/1", "labels_url": "https://api.github.com/repos/pipermerriam/flex/milestones/1/labels", "id": 852936, "node_id": "MDk6TWlsZXN0b25lODUyOTM2", "number": 1, "title": "1.8.0", "description": "", "creator": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "closed", "created_at": "2014-11-04T15:00:12Z", "updated_at": "2015-03-29T04:12:17Z", "due_on": null, "closed_at": "2014-11-13T02:14:31Z"}, "comments": 2, "created_at": "2014-11-04T14:57:08Z", "updated_at": "2015-03-29T04:12:17Z", "closed_at": "2015-03-29T04:12:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Response validation should validate the body parameters.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/8", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/8/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/8/events", "html_url": "https://github.com/pipermerriam/flex/issues/8", "id": 47721690, "node_id": "MDU6SXNzdWU0NzcyMTY5MA==", "number": 8, "title": "Add validation of the request headers parameters.", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634607, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDc=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pipermerriam/flex/milestones/1", "html_url": "https://github.com/pipermerriam/flex/milestone/1", "labels_url": "https://api.github.com/repos/pipermerriam/flex/milestones/1/labels", "id": 852936, "node_id": "MDk6TWlsZXN0b25lODUyOTM2", "number": 1, "title": "1.8.0", "description": "", "creator": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "closed", "created_at": "2014-11-04T15:00:12Z", "updated_at": "2015-03-29T04:12:17Z", "due_on": null, "closed_at": "2014-11-13T02:14:31Z"}, "comments": 0, "created_at": "2014-11-04T14:56:27Z", "updated_at": "2014-11-09T00:12:19Z", "closed_at": "2014-11-09T00:12:19Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The response validation should validate the request headers.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/7", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/7/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/7/events", "html_url": "https://github.com/pipermerriam/flex/issues/7", "id": 47721593, "node_id": "MDU6SXNzdWU0NzcyMTU5Mw==", "number": 7, "title": "Allow loading of a spec from a url", "user": {"login": "pipermerriam", "id": 824194, "node_id": "MDQ6VXNlcjgyNDE5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/824194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pipermerriam", "html_url": "https://github.com/pipermerriam", "followers_url": "https://api.github.com/users/pipermerriam/followers", "following_url": "https://api.github.com/users/pipermerriam/following{/other_user}", "gists_url": "https://api.github.com/users/pipermerriam/gists{/gist_id}", "starred_url": "https://api.github.com/users/pipermerriam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pipermerriam/subscriptions", "organizations_url": "https://api.github.com/users/pipermerriam/orgs", "repos_url": "https://api.github.com/users/pipermerriam/repos", "events_url": "https://api.github.com/users/pipermerriam/events{/privacy}", "received_events_url": "https://api.github.com/users/pipermerriam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 138634607, "node_id": "MDU6TGFiZWwxMzg2MzQ2MDc=", "url": "https://api.github.com/repos/pipermerriam/flex/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-11-04T14:55:40Z", "updated_at": "2014-11-05T05:25:50Z", "closed_at": "2014-11-05T05:25:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The `flex.core.load` function should support being passed a URL and fetching the spec from somewhere on the web.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pipermerriam/flex/issues/6", "repository_url": "https://api.github.com/repos/pipermerriam/flex", "labels_url": "https://api.github.com/repos/pipermerriam/flex/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/pipermerriam/flex/issues/6/comments", "events_url": "https://api.github.com/repos/pipermerriam/flex/issues/6/events", "html_url": "https://github.com/pipermerriam/flex/issues/6", "id": 46835669, "node_id": "MDU6SXNzdWU0NjgzNTY2OQ==", "number": 6, "title": "The crate badges don't link to anything", "user": {"login": "rockymeza", "id": 21784, "node_id": "MDQ6VXNlcjIxNzg0", "avatar_url": "https://avatars1.githubusercontent.com/u/21784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rockymeza", "html_url": "https://github.com/rockymeza", "followers_url": "https://api.github.com/users/rockymeza/followers", "following_url": "https://api.github.com/users/rockymeza/following{/other_user}", "gists_url": "https://api.github.com/users/rockymeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/rockymeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rockymeza/subscriptions", "organizations_url": "https://api.github.com/users/rockymeza/orgs", "repos_url": "https://api.github.com/users/rockymeza/repos", "events_url": "https://api.github.com/users/rockymeza/events{/privacy}", "received_events_url": "https://api.github.com/users/rockymeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-26T07:39:41Z", "updated_at": "2014-10-26T14:00:22Z", "closed_at": "2014-10-26T14:00:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I thought the index at crate.io closed down?\n\nhttps://crate.io/packages/?has_releases=on&q=flex\n\nI think maybe you want these pins though? https://pypip.in/\n", "performed_via_github_app": null, "score": 1.0}]}