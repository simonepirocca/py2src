{"total_count": 353, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/amoffat/sh/issues/535", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/535/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/535/events", "html_url": "https://github.com/amoffat/sh/issues/535", "id": 665438059, "node_id": "MDU6SXNzdWU2NjU0MzgwNTk=", "number": 535, "title": "how to fix stacktrace with sh.SignalException_SIGKILL ", "user": {"login": "ggmartins", "id": 2147779, "node_id": "MDQ6VXNlcjIxNDc3Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2147779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ggmartins", "html_url": "https://github.com/ggmartins", "followers_url": "https://api.github.com/users/ggmartins/followers", "following_url": "https://api.github.com/users/ggmartins/following{/other_user}", "gists_url": "https://api.github.com/users/ggmartins/gists{/gist_id}", "starred_url": "https://api.github.com/users/ggmartins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ggmartins/subscriptions", "organizations_url": "https://api.github.com/users/ggmartins/orgs", "repos_url": "https://api.github.com/users/ggmartins/repos", "events_url": "https://api.github.com/users/ggmartins/events{/privacy}", "received_events_url": "https://api.github.com/users/ggmartins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-24T21:55:04Z", "updated_at": "2020-07-29T02:51:17Z", "closed_at": "2020-07-29T02:51:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey @amoffat thanks for your great work with sh. I'm really close to getting a solid code parsing tail output, are there ways to catch or suppress the stack trace that comes with an attempt to kill a _tail_ blocked with .next() ? I've been trying to catch this exception on both _kill_ and _next_ calls but the beautiful stack trace keeps showing.  Let me know if there's an alternative to this code. Thanks a lot!\r\n\r\n```\r\n           #elsewhere in the code\r\n           try:\r\n             filestatus[filename]['running'] = False #this is not enough as sh.tail is blocking at .next()\r\n             tail = filestatus[event.src_path]['tail']\r\n             tail.kill()\r\n           except sh.SignalException_SIGKILL as e:\r\n             print(str(e))\r\n\r\n...\r\n              #elsewhere in the code\r\n              t = threading.Thread(target=process_tmp_ta, args=(f,)) #f == /tmp/tmp.074461843\r\n              filestatus[f] = {}\r\n              filestatus[f]['thread'] = t\r\n              t.start()\r\n\r\ndef process_tmp_ta(filename=\"\"):\r\n      filestatus[filename]['running'] = True\r\n      filestatus[filename]['tail'] = sh.tail(\"-F\", filename, _iter=True)\r\n      while filestatus[filename]['running']:\r\n        print(\"running\")\r\n        try:\r\n               line = filestatus[filename]['tail'].next()\r\n        except sh.SignalException_SIGKILL as e:\r\n            print(\"process_tmp_ta tail terminated\")\r\n            break\r\n```\r\n\r\n```\r\nException in thread background thread for pid 3185:\r\nTraceback (most recent call last):\r\n  File \"/Users/[REDACTED]/opt/anaconda3/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Users/[REDACTED]/opt/anaconda3/lib/python3.7/threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/[REDACTED]/src/github.com/[REDACTED]/scripts/venv/lib/python3.7/site-packages/sh.py\", line 1662, in wrap\r\n    fn(*args, **kwargs)\r\n  File \"/Users/[REDACTED]/src/github.com/[REDACTED]/venv/lib/python3.7/site-packages/sh.py\", line 2606, in background_thread\r\n    handle_exit_code(exit_code)\r\n  File \"/[REDACTED]/src/github.com[REDACTED]/scripts/venv/lib/python3.7/site-packages/sh.py\", line 2304, in fn\r\n    return self.command.handle_command_exit_code(exit_code)\r\n  File \"/Users/[REDACTED]/src/github.com/[REDACTED]/scripts/venv/lib/python3.7/site-packages/sh.py\", line 877, in handle_command_exit_code\r\n    raise exc\r\nsh.SignalException_SIGKILL: \r\n\r\n  RAN: /usr/bin/tail -F /tmp/tmp.074461843\r\n\r\n  STDOUT:\r\n[REDACTED]\r\n  STDERR:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/527", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/527/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/527/events", "html_url": "https://github.com/amoffat/sh/issues/527", "id": 612000488, "node_id": "MDU6SXNzdWU2MTIwMDA0ODg=", "number": 527, "title": "`_env` param does not work with dict-like objects", "user": {"login": "saytosid", "id": 15984573, "node_id": "MDQ6VXNlcjE1OTg0NTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/15984573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saytosid", "html_url": "https://github.com/saytosid", "followers_url": "https://api.github.com/users/saytosid/followers", "following_url": "https://api.github.com/users/saytosid/following{/other_user}", "gists_url": "https://api.github.com/users/saytosid/gists{/gist_id}", "starred_url": "https://api.github.com/users/saytosid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saytosid/subscriptions", "organizations_url": "https://api.github.com/users/saytosid/orgs", "repos_url": "https://api.github.com/users/saytosid/repos", "events_url": "https://api.github.com/users/saytosid/events{/privacy}", "received_events_url": "https://api.github.com/users/saytosid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226929, "node_id": "MDU6TGFiZWwyMjY5Mjk=", "url": "https://api.github.com/repos/amoffat/sh/labels/bug", "name": "bug", "color": "d7e102", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T16:20:11Z", "updated_at": "2020-05-12T18:15:58Z", "closed_at": "2020-05-12T18:15:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/amoffat/sh/blob/114e6eedf5db022d2a0e5a5b5104ea18394da1a6/sh.py#L1149-L1151\r\nwrt the above snippet, is it necessary to enforce `dict`? This breaks compatibility with other dict-like objects. eg: `os.environ` returns a dict-like object `os._Environ`.\r\n\r\nPerhaps a check for `isinstance(env, collections.Mapping)` would allow for more general interface?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/524", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/524/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/524/events", "html_url": "https://github.com/amoffat/sh/issues/524", "id": 611253696, "node_id": "MDU6SXNzdWU2MTEyNTM2OTY=", "number": 524, "title": "Issues enabling unbuffered output", "user": {"login": "beaugunderson", "id": 61791, "node_id": "MDQ6VXNlcjYxNzkx", "avatar_url": "https://avatars0.githubusercontent.com/u/61791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beaugunderson", "html_url": "https://github.com/beaugunderson", "followers_url": "https://api.github.com/users/beaugunderson/followers", "following_url": "https://api.github.com/users/beaugunderson/following{/other_user}", "gists_url": "https://api.github.com/users/beaugunderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/beaugunderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beaugunderson/subscriptions", "organizations_url": "https://api.github.com/users/beaugunderson/orgs", "repos_url": "https://api.github.com/users/beaugunderson/repos", "events_url": "https://api.github.com/users/beaugunderson/events{/privacy}", "received_events_url": "https://api.github.com/users/beaugunderson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 227580, "node_id": "MDU6TGFiZWwyMjc1ODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/docs", "name": "docs", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-02T19:02:25Z", "updated_at": "2020-05-02T19:17:44Z", "closed_at": "2020-05-02T19:12:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there--I'm trying to use `_out` with a callback to print unbuffered output to the screen. Unfortunately the output is line buffered, and to illustrate the issue see this screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/61791/80873297-5b0a9c00-8c6c-11ea-8f29-07721d6df873.png)\r\n\r\nMy output callback prefixes each line with `xxx`.\r\n\r\nThe 'Parsing' and 'Rendered' lines contain many updates (they update as the project is parsed and rendered), but only print after the next newline is sent--so the net effect is that there are no updates sent to the screen for 5 minutes, even though the program is printing updates.\r\n\r\nI've tried setting `_internal_bufsize=0`, `_out_bufsize=0`, and various combinations of all the other buffer, TTY, and output options.\r\n\r\n(Sidenote: the documentation seems to have a mistake, as specifying `_unify_ttys` passes `--unify-ttys` to the underlying application instead of enabling the `unify_ttys` option in `sh`).\r\n\r\nI've also tried wrapping my application in `stdbuf -i0 -o0 -e0`, for what it's worth.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/523", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/523/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/523/events", "html_url": "https://github.com/amoffat/sh/issues/523", "id": 610671113, "node_id": "MDU6SXNzdWU2MTA2NzExMTM=", "number": 523, "title": "Group commands to run in background", "user": {"login": "kumarappan-arumugam", "id": 13147253, "node_id": "MDQ6VXNlcjEzMTQ3MjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/13147253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumarappan-arumugam", "html_url": "https://github.com/kumarappan-arumugam", "followers_url": "https://api.github.com/users/kumarappan-arumugam/followers", "following_url": "https://api.github.com/users/kumarappan-arumugam/following{/other_user}", "gists_url": "https://api.github.com/users/kumarappan-arumugam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumarappan-arumugam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumarappan-arumugam/subscriptions", "organizations_url": "https://api.github.com/users/kumarappan-arumugam/orgs", "repos_url": "https://api.github.com/users/kumarappan-arumugam/repos", "events_url": "https://api.github.com/users/kumarappan-arumugam/events{/privacy}", "received_events_url": "https://api.github.com/users/kumarappan-arumugam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T09:52:00Z", "updated_at": "2020-05-03T05:03:05Z", "closed_at": "2020-05-03T05:03:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to call a group of commands to execute in the background like a sub-shell?\r\n\r\nFor example:\r\n\r\n```python\r\n@sh(_bg=True)\r\ndef build():\r\n    sh.rm('something')\r\n    try:\r\n        sh.yarn.build() # long running process\r\n    except:\r\n        sh.yarn.build_without_cache() # long running process\r\n    sh.mkdir('something')\r\n    sh.find('something')\r\n\r\nprocs = []\r\nfor dir in all_dirs:\r\n    procs.append(build()) # parallel\r\n[p.wait() for p in procs]\r\n```\r\n\r\nI know I can manually fork another child process, but was trying to figure out if I can do something with the existing functions in the `sh.py`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/522", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/522/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/522/events", "html_url": "https://github.com/amoffat/sh/issues/522", "id": 610301122, "node_id": "MDU6SXNzdWU2MTAzMDExMjI=", "number": 522, "title": "Some way to easily handle boolean options", "user": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2013803242, "node_id": "MDU6TGFiZWwyMDEzODAzMjQy", "url": "https://api.github.com/repos/amoffat/sh/labels/breaking%20change", "name": "breaking change", "color": "e07dd3", "default": false, "description": ""}, {"id": 226928, "node_id": "MDU6TGFiZWwyMjY5Mjg=", "url": "https://api.github.com/repos/amoffat/sh/labels/feature", "name": "feature", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-30T18:39:45Z", "updated_at": "2020-05-04T20:59:14Z", "closed_at": "2020-05-04T20:58:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I've been writing some scripts lately that make heavy use of including/excluding options based on some boolean flag. It's clunky:\r\n\r\n```python\r\nif dry_run:\r\n    sh.rsync(\"-n\", ...)\r\nelse:\r\n    sh.rsync(...)\r\n```\r\nIt would be nicer if there was something, maybe `sh.Cond` that takes an object that evaluates to truthy, and a flag to be set if that evaluation is `True`.  So:\r\n\r\n```python\r\nsh.rsync(sh.Cond(dry_run, \"-n\"), ...)\r\n```\r\n\r\nI'm not sure if it should be a class (`Cond`) or a function (`cond`), or something named different altogether, but I would want to minimize its chances of colliding its name with other binaries on the system. Thoughts? @ecederstrand ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/521", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/521/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/521/events", "html_url": "https://github.com/amoffat/sh/issues/521", "id": 609323519, "node_id": "MDU6SXNzdWU2MDkzMjM1MTk=", "number": 521, "title": "Unable to have trailing `-` to accept stdin", "user": {"login": "anorth2", "id": 5884959, "node_id": "MDQ6VXNlcjU4ODQ5NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5884959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anorth2", "html_url": "https://github.com/anorth2", "followers_url": "https://api.github.com/users/anorth2/followers", "following_url": "https://api.github.com/users/anorth2/following{/other_user}", "gists_url": "https://api.github.com/users/anorth2/gists{/gist_id}", "starred_url": "https://api.github.com/users/anorth2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anorth2/subscriptions", "organizations_url": "https://api.github.com/users/anorth2/orgs", "repos_url": "https://api.github.com/users/anorth2/repos", "events_url": "https://api.github.com/users/anorth2/events{/privacy}", "received_events_url": "https://api.github.com/users/anorth2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-29T20:04:49Z", "updated_at": "2020-04-29T20:45:41Z", "closed_at": "2020-04-29T20:45:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I approach converting this:\r\n`echo -e 'FROM busybox\\nRUN echo \"hello world\"' | docker build -`\r\ninto sh syntax.\r\n\r\nThe issue I have is that the args are tokenized and quoted. So docker isn't able to pass stdin onto the end of the command since `-` has single quotes placed around it. Digging in the docs I'm not seeing a way to support this.\r\n\r\nThanks for any help\u00a0you can provide!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/520", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/520/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/520/events", "html_url": "https://github.com/amoffat/sh/issues/520", "id": 608074376, "node_id": "MDU6SXNzdWU2MDgwNzQzNzY=", "number": 520, "title": "On v1.13.0, calls with `_fg=False` fail with error \"TypeError: Invalid special arguments:    'fg': _fg is invalid with nearly every other option\"", "user": {"login": "Nicolas-Duboc-IBM", "id": 52450405, "node_id": "MDQ6VXNlcjUyNDUwNDA1", "avatar_url": "https://avatars3.githubusercontent.com/u/52450405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicolas-Duboc-IBM", "html_url": "https://github.com/Nicolas-Duboc-IBM", "followers_url": "https://api.github.com/users/Nicolas-Duboc-IBM/followers", "following_url": "https://api.github.com/users/Nicolas-Duboc-IBM/following{/other_user}", "gists_url": "https://api.github.com/users/Nicolas-Duboc-IBM/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicolas-Duboc-IBM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicolas-Duboc-IBM/subscriptions", "organizations_url": "https://api.github.com/users/Nicolas-Duboc-IBM/orgs", "repos_url": "https://api.github.com/users/Nicolas-Duboc-IBM/repos", "events_url": "https://api.github.com/users/Nicolas-Duboc-IBM/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicolas-Duboc-IBM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226929, "node_id": "MDU6TGFiZWwyMjY5Mjk=", "url": "https://api.github.com/repos/amoffat/sh/labels/bug", "name": "bug", "color": "d7e102", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-28T06:59:18Z", "updated_at": "2020-04-28T14:19:25Z", "closed_at": "2020-04-28T14:19:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 1.13.0, the new fg_validator considers only if the `_fg` arg is in the passed arguments without considering if the value of the arg is True :\r\nhttps://github.com/amoffat/sh/blob/1.13.0/sh.py#L1107\r\n\r\nThis makes it refuse legitimate calls like sh.ls(*args, _out=self.process_line, _err=self.process_line, _fg=False)` .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/515", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/515/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/515/events", "html_url": "https://github.com/amoffat/sh/issues/515", "id": 577281881, "node_id": "MDU6SXNzdWU1NzcyODE4ODE=", "number": 515, "title": "Feature Request: RunningCommand.wait(_timeout)", "user": {"login": "MatrixManAtYrService", "id": 5834582, "node_id": "MDQ6VXNlcjU4MzQ1ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5834582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatrixManAtYrService", "html_url": "https://github.com/MatrixManAtYrService", "followers_url": "https://api.github.com/users/MatrixManAtYrService/followers", "following_url": "https://api.github.com/users/MatrixManAtYrService/following{/other_user}", "gists_url": "https://api.github.com/users/MatrixManAtYrService/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatrixManAtYrService/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatrixManAtYrService/subscriptions", "organizations_url": "https://api.github.com/users/MatrixManAtYrService/orgs", "repos_url": "https://api.github.com/users/MatrixManAtYrService/repos", "events_url": "https://api.github.com/users/MatrixManAtYrService/events{/privacy}", "received_events_url": "https://api.github.com/users/MatrixManAtYrService/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226928, "node_id": "MDU6TGFiZWwyMjY5Mjg=", "url": "https://api.github.com/repos/amoffat/sh/labels/feature", "name": "feature", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-03-07T05:28:13Z", "updated_at": "2020-04-26T19:22:00Z", "closed_at": "2020-04-26T19:12:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Firstly, thanks for your work on `sh`, it's great.\r\n\r\nI would like to be able to do this:\r\n\r\n```\r\nrunning_command.terminate()\r\ntry:\r\n    running_command.wait(_timeout=15) \r\nexcept sh.TimeoutException:\r\n    running_command.kill()\r\nrunning_command.wait()\r\n```\r\n\r\nBut the `wait` function doesn't accept a timeout.  Is there a convenient way to achieve this elsewhere in the API?  If not, I'd like to propose the above method.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/514", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/514/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/514/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/514/events", "html_url": "https://github.com/amoffat/sh/issues/514", "id": 576481604, "node_id": "MDU6SXNzdWU1NzY0ODE2MDQ=", "number": 514, "title": "ob_is_tty returns false for stdin even when stdin is a tty", "user": {"login": "hartmans", "id": 53510, "node_id": "MDQ6VXNlcjUzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/53510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartmans", "html_url": "https://github.com/hartmans", "followers_url": "https://api.github.com/users/hartmans/followers", "following_url": "https://api.github.com/users/hartmans/following{/other_user}", "gists_url": "https://api.github.com/users/hartmans/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartmans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartmans/subscriptions", "organizations_url": "https://api.github.com/users/hartmans/orgs", "repos_url": "https://api.github.com/users/hartmans/repos", "events_url": "https://api.github.com/users/hartmans/events{/privacy}", "received_events_url": "https://api.github.com/users/hartmans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-05T19:31:18Z", "updated_at": "2020-04-24T07:04:30Z", "closed_at": "2020-04-24T07:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "ob_is_tty calls `get_fileno` and then does\r\n\r\n```python\r\nif fileno:\r\n```\r\n\r\nThe problem is that stdin has fileno 0, and 0 is falsy, so this is always false for stdin.\r\nSo, similar to what's going on in #414 , you will never be able to pass an unmodified stdin tty through to the subprocess.\r\nProbably that should be\r\n\r\n```python\r\nif fileno is None:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/512", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/512/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/512/events", "html_url": "https://github.com/amoffat/sh/issues/512", "id": 575024496, "node_id": "MDU6SXNzdWU1NzUwMjQ0OTY=", "number": 512, "title": "Maintainer application thread", "user": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-03T23:23:36Z", "updated_at": "2020-05-02T18:04:24Z", "closed_at": "2020-05-02T18:04:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Hi all,\r\n\r\nThere have been a number of threads about the activity of `sh` as a project going forward, and I thought I would address them here.  Sh is not abandoned, but admittedly, the lifecycle of maintenance is a lot longer than I would like.  It's on my TODO list, but I am pressured to take care of more pressing priorities in my life right now.  Rather than go down a negative path with the community by arguing about why my timeline is more important, I am opening up sh to take on additional maintainer(s) to alleviate that friction.\r\n\r\nIf you would like to be a maintainer, please reply to this post.  I will be considering people who are visible in the OSS community, who write high-quality, tested code, and who have similar responsibilities maintaining projects.  You will be responsible for:\r\n\r\n* Ensuring sh tests pass on Linux, MacOS, and Unix-like OSes\r\n* Answering issues and questions in a timely manner\r\n* Reviewing PRs and ensuring that they fit in line with the existing philosophy of sh as well as its coding standards (testing, comments, documentation, etc)\r\n* Maintaining documentation\r\n* Developing support for future Python versions across supported OSes\r\n* And most importantly: not breaking the builds\r\n\r\nIf this is you, voice your interest here and I will reach out to you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/511", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/511/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/511/events", "html_url": "https://github.com/amoffat/sh/issues/511", "id": 571675901, "node_id": "MDU6SXNzdWU1NzE2NzU5MDE=", "number": 511, "title": "sh ABANDONED? Any active fork?", "user": {"login": "cgarciae", "id": 5862228, "node_id": "MDQ6VXNlcjU4NjIyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5862228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgarciae", "html_url": "https://github.com/cgarciae", "followers_url": "https://api.github.com/users/cgarciae/followers", "following_url": "https://api.github.com/users/cgarciae/following{/other_user}", "gists_url": "https://api.github.com/users/cgarciae/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgarciae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgarciae/subscriptions", "organizations_url": "https://api.github.com/users/cgarciae/orgs", "repos_url": "https://api.github.com/users/cgarciae/repos", "events_url": "https://api.github.com/users/cgarciae/events{/privacy}", "received_events_url": "https://api.github.com/users/cgarciae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-26T21:37:07Z", "updated_at": "2020-03-03T23:24:06Z", "closed_at": "2020-03-03T23:24:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "There hasn't been new commits in 3 years but the project is great. \r\nIs there any active fork we can move to?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/510", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/510/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/510/events", "html_url": "https://github.com/amoffat/sh/issues/510", "id": 571673409, "node_id": "MDU6SXNzdWU1NzE2NzM0MDk=", "number": 510, "title": "Piping with |", "user": {"login": "cgarciae", "id": 5862228, "node_id": "MDQ6VXNlcjU4NjIyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5862228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgarciae", "html_url": "https://github.com/cgarciae", "followers_url": "https://api.github.com/users/cgarciae/followers", "following_url": "https://api.github.com/users/cgarciae/following{/other_user}", "gists_url": "https://api.github.com/users/cgarciae/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgarciae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgarciae/subscriptions", "organizations_url": "https://api.github.com/users/cgarciae/orgs", "repos_url": "https://api.github.com/users/cgarciae/repos", "events_url": "https://api.github.com/users/cgarciae/events{/privacy}", "received_events_url": "https://api.github.com/users/cgarciae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T21:31:59Z", "updated_at": "2020-03-03T21:57:22Z", "closed_at": "2020-03-03T21:57:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, it would be really nice if we could use python `|` operator to do piping so it looked more like in bash. The idea is that you could turn code like this:\r\n\r\n```python\r\nsh.wc(sh.ls(\"-1\"), \"-l\")\r\n```\r\ninto this:\r\n\r\n```python\r\nsh.ls(\"-1\") | sh.wc(\"-l\")\r\n```\r\n\r\nIt would require mutating the `wc` Command object after creation in this case. Not familiar with the codebase so I don't know the complexity of adding this feature.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/508", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/508/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/508/events", "html_url": "https://github.com/amoffat/sh/issues/508", "id": 559910389, "node_id": "MDU6SXNzdWU1NTk5MTAzODk=", "number": 508, "title": "Fix simple typo: verions -> versions", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-04T18:49:38Z", "updated_at": "2020-04-24T05:40:48Z", "closed_at": "2020-04-24T05:40:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in sh.py.\nShould read `versions` rather than `verions`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/506", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/506/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/506/events", "html_url": "https://github.com/amoffat/sh/issues/506", "id": 559909740, "node_id": "MDU6SXNzdWU1NTk5MDk3NDA=", "number": 506, "title": "Fix simple typo: throug -> through", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-04T18:48:27Z", "updated_at": "2020-04-24T05:44:58Z", "closed_at": "2020-04-24T05:44:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in sh.py.\nShould read `through` rather than `throug`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/504", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/504/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/504/events", "html_url": "https://github.com/amoffat/sh/issues/504", "id": 559909010, "node_id": "MDU6SXNzdWU1NTk5MDkwMTA=", "number": 504, "title": "Fix simple typo: synchronzing -> synchronizing", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-04T18:46:54Z", "updated_at": "2020-04-24T05:45:31Z", "closed_at": "2020-04-24T05:45:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in sh.py.\nShould read `synchronizing` rather than `synchronzing`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/502", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/502/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/502/events", "html_url": "https://github.com/amoffat/sh/issues/502", "id": 559908000, "node_id": "MDU6SXNzdWU1NTk5MDgwMDA=", "number": 502, "title": "Fix simple typo: refects -> reflects", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-04T18:44:48Z", "updated_at": "2020-04-24T05:45:58Z", "closed_at": "2020-04-24T05:45:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in sh.py.\nShould read `reflects` rather than `refects`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/501", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/501/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/501/events", "html_url": "https://github.com/amoffat/sh/issues/501", "id": 557361721, "node_id": "MDU6SXNzdWU1NTczNjE3MjE=", "number": 501, "title": "Should stdout return `bytes`?", "user": {"login": "consal", "id": 51994060, "node_id": "MDQ6VXNlcjUxOTk0MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/51994060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/consal", "html_url": "https://github.com/consal", "followers_url": "https://api.github.com/users/consal/followers", "following_url": "https://api.github.com/users/consal/following{/other_user}", "gists_url": "https://api.github.com/users/consal/gists{/gist_id}", "starred_url": "https://api.github.com/users/consal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/consal/subscriptions", "organizations_url": "https://api.github.com/users/consal/orgs", "repos_url": "https://api.github.com/users/consal/repos", "events_url": "https://api.github.com/users/consal/events{/privacy}", "received_events_url": "https://api.github.com/users/consal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T09:19:31Z", "updated_at": "2020-04-24T07:06:46Z", "closed_at": "2020-04-24T07:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "On migration from Python 2.7 to Python 3.6.9 I noticed that `stdout` returns `bytes` instead of `str`. Is it normal? Is there any flag so the sh module decodes the output for me?\r\n\r\n```python\r\n>>> import sh\r\n>>> result = sh.ls(\"-l\").stdout\r\n>>> type(result)\r\n<class 'bytes'>\r\n>>> \r\n```\r\n\r\nCheers\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/500", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/500/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/500/events", "html_url": "https://github.com/amoffat/sh/issues/500", "id": 551371453, "node_id": "MDU6SXNzdWU1NTEzNzE0NTM=", "number": 500, "title": "How to use lmod functions in sh", "user": {"login": "eylenth", "id": 17252281, "node_id": "MDQ6VXNlcjE3MjUyMjgx", "avatar_url": "https://avatars3.githubusercontent.com/u/17252281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eylenth", "html_url": "https://github.com/eylenth", "followers_url": "https://api.github.com/users/eylenth/followers", "following_url": "https://api.github.com/users/eylenth/following{/other_user}", "gists_url": "https://api.github.com/users/eylenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/eylenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eylenth/subscriptions", "organizations_url": "https://api.github.com/users/eylenth/orgs", "repos_url": "https://api.github.com/users/eylenth/repos", "events_url": "https://api.github.com/users/eylenth/events{/privacy}", "received_events_url": "https://api.github.com/users/eylenth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 227580, "node_id": "MDU6TGFiZWwyMjc1ODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/docs", "name": "docs", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-17T11:49:40Z", "updated_at": "2020-04-24T05:59:22Z", "closed_at": "2020-04-24T05:59:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nHow can I use the lmod environment( https://lmod.readthedocs.io/en/latest/  ) in the sh function?\r\n\r\nI want to execute the following command \r\n```\r\n[eylenbt@by0q4n] ~ $ module load BCFtools\r\n[eylenbt@by0q4n] ~ $ \r\n\r\n```\r\nBut the problem is that 'module' does not exists in path, but it is a function.\r\n\r\n```sh\r\n[eylenbt@by0q4n] ~ $ type module\r\nmodule is a function\r\nmodule () \r\n{ \r\n    eval $($LMOD_CMD bash \"$@\") && eval $(${LMOD_SETTARG_CMD:-:} -s sh)\r\n}\r\n\r\n```\r\n\r\nIf this not possible yet, Could this be a new feature request ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/498", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/498/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/498/events", "html_url": "https://github.com/amoffat/sh/issues/498", "id": 548063672, "node_id": "MDU6SXNzdWU1NDgwNjM2NzI=", "number": 498, "title": "Test failure on Python 3.7 and 3.8", "user": {"login": "ecederstrand", "id": 559151, "node_id": "MDQ6VXNlcjU1OTE1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/559151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecederstrand", "html_url": "https://github.com/ecederstrand", "followers_url": "https://api.github.com/users/ecederstrand/followers", "following_url": "https://api.github.com/users/ecederstrand/following{/other_user}", "gists_url": "https://api.github.com/users/ecederstrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecederstrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecederstrand/subscriptions", "organizations_url": "https://api.github.com/users/ecederstrand/orgs", "repos_url": "https://api.github.com/users/ecederstrand/repos", "events_url": "https://api.github.com/users/ecederstrand/events{/privacy}", "received_events_url": "https://api.github.com/users/ecederstrand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-10T12:53:02Z", "updated_at": "2020-04-24T02:47:25Z", "closed_at": "2020-04-24T02:47:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "See https://travis-ci.org/amoffat/sh/builds/635235517?utm_source=github_status&utm_medium=notification\r\n\r\nFor some reason, `test_environment` is failing:\r\n\r\n```\r\n======================================================================\r\nFAIL: test_environment (__main__.FunctionalTests)\r\ntests that environments variables that we pass into sh commands\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/amoffat/sh/test.py\", line 530, in test_environment\r\n    self.assertEqual(out, \"DERP 1\")\r\nAssertionError: 'DERP 2' != 'DERP 1'\r\n- DERP 2\r\n?      ^\r\n+ DERP 1\r\n?      ^\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/496", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/496/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/496/events", "html_url": "https://github.com/amoffat/sh/issues/496", "id": 546216305, "node_id": "MDU6SXNzdWU1NDYyMTYzMDU=", "number": 496, "title": "Shell expansion and globbing made easier?", "user": {"login": "jrvarma", "id": 12668915, "node_id": "MDQ6VXNlcjEyNjY4OTE1", "avatar_url": "https://avatars0.githubusercontent.com/u/12668915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrvarma", "html_url": "https://github.com/jrvarma", "followers_url": "https://api.github.com/users/jrvarma/followers", "following_url": "https://api.github.com/users/jrvarma/following{/other_user}", "gists_url": "https://api.github.com/users/jrvarma/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrvarma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrvarma/subscriptions", "organizations_url": "https://api.github.com/users/jrvarma/orgs", "repos_url": "https://api.github.com/users/jrvarma/repos", "events_url": "https://api.github.com/users/jrvarma/events{/privacy}", "received_events_url": "https://api.github.com/users/jrvarma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226928, "node_id": "MDU6TGFiZWwyMjY5Mjg=", "url": "https://api.github.com/repos/amoffat/sh/labels/feature", "name": "feature", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-07T10:52:58Z", "updated_at": "2020-04-24T07:13:42Z", "closed_at": "2020-04-24T07:13:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I frequently use the function `sh_expand` (listed below at the bottom) to allow shell environment variables, globbing, `~` expansion inside the `sh` module. With this function, the `bash` command \r\n\r\n```\r\nls -l ~/.bash*  $SHELL $XAUTHORITY\r\n```\r\n\r\ncan be repllicated with \r\n\r\n```\r\nsh.ls(sh_expand(\"-l\", \"~/.bash*\", \"$SHELL\", \"$XAUTHORITY\")).\r\n```\r\nIs it possible to make it easier to use this without explicitly calling `sh_expand` each time? I was thinking of something on the lines of `bake` which would automatically apply `sh_expand` or even a global setting in the `sh` module that would apply it automatically every time. \r\n\r\nMy definition of `sh_expand` is as follows:\r\n\r\n```\r\nfrom glob import glob\r\nfrom os.path import expandvars, expanduser\r\n\r\n\r\ndef sh_expand(*v):\r\n    def expand_one_arg(s):\r\n        s_expand = expandvars(expanduser(s))\r\n        if \"*\" in s_expand:\r\n            return glob(s_expand)\r\n        else:\r\n            return [s_expand]\r\n\r\n    return [item for s in v for item in expand_one_arg(s)]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/489", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/489/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/489/events", "html_url": "https://github.com/amoffat/sh/issues/489", "id": 502272891, "node_id": "MDU6SXNzdWU1MDIyNzI4OTE=", "number": 489, "title": "output of \"at\" command directed to stderr instead of stdout", "user": {"login": "MikeBusuttil", "id": 31480000, "node_id": "MDQ6VXNlcjMxNDgwMDAw", "avatar_url": "https://avatars2.githubusercontent.com/u/31480000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikeBusuttil", "html_url": "https://github.com/MikeBusuttil", "followers_url": "https://api.github.com/users/MikeBusuttil/followers", "following_url": "https://api.github.com/users/MikeBusuttil/following{/other_user}", "gists_url": "https://api.github.com/users/MikeBusuttil/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikeBusuttil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikeBusuttil/subscriptions", "organizations_url": "https://api.github.com/users/MikeBusuttil/orgs", "repos_url": "https://api.github.com/users/MikeBusuttil/repos", "events_url": "https://api.github.com/users/MikeBusuttil/events{/privacy}", "received_events_url": "https://api.github.com/users/MikeBusuttil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-03T20:10:53Z", "updated_at": "2019-11-26T04:41:03Z", "closed_at": "2019-11-25T23:18:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "expecting:\r\n`>>> from sh import at, ls`\r\n`>>> print(at(ls('/'), 'now', '+', '5', 'minutes'))`\r\n`job 6 at Thu Oct  3 14:53:00 2019`\r\n\r\nactual result:\r\n`>>> from sh import at, ls`\r\n`>>> print(at(ls('/'), 'now', '+', '5', 'minutes'))`\r\n` `\r\n\r\nhowever:\r\n`>>> from sh import at, ls`\r\n`>>> print(at(ls('/'), 'now', '+', '5', 'minutes').stderr)`\r\n`job 6 at Thu Oct  3 14:53:00 2019`\r\n\r\nObserved on python 3.6.8 and python 2.7 on Ubuntu 18.04.3 LTS as well as python 2.7 on CentOS.\r\n\r\nAnyway, great package!!  Has really helped me a lot with my most recent project and I plan to add it to some older projects for improved readability and code quality.\r\n\r\nMany thanks.\r\n\r\n-Mike\r\n\r\nkeywords: empty, blank, linux at command", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/487", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/487/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/487/events", "html_url": "https://github.com/amoffat/sh/issues/487", "id": 493754802, "node_id": "MDU6SXNzdWU0OTM3NTQ4MDI=", "number": 487, "title": "ImportError: cannot import name pew", "user": {"login": "thoongnv", "id": 15308084, "node_id": "MDQ6VXNlcjE1MzA4MDg0", "avatar_url": "https://avatars2.githubusercontent.com/u/15308084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thoongnv", "html_url": "https://github.com/thoongnv", "followers_url": "https://api.github.com/users/thoongnv/followers", "following_url": "https://api.github.com/users/thoongnv/following{/other_user}", "gists_url": "https://api.github.com/users/thoongnv/gists{/gist_id}", "starred_url": "https://api.github.com/users/thoongnv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thoongnv/subscriptions", "organizations_url": "https://api.github.com/users/thoongnv/orgs", "repos_url": "https://api.github.com/users/thoongnv/repos", "events_url": "https://api.github.com/users/thoongnv/events{/privacy}", "received_events_url": "https://api.github.com/users/thoongnv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-15T15:56:48Z", "updated_at": "2020-07-03T00:54:42Z", "closed_at": "2019-09-17T15:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got ImportError\r\nI'm got above error in:\r\nMacOS: Python 2.7.10\r\nUbuntu: Python 2.7.15+\r\n\r\nAlso ImportError: cannot import name pythonz\r\n```\r\nPython 2.7.10 (default, Feb 22 2019, 21:55:15) \r\n[GCC 4.2.1 Compatible Apple LLVM 10.0.1 (clang-1001.0.37.14)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from sh import pew\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: cannot import name pew\r\n>>> from sh import pythonz\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: cannot import name pythonz\r\n```\r\n\r\nHere is my `sh` module version\r\n```\r\npip freeze | grep sh\r\nbackports.shutil-get-terminal-size==1.0.0\r\nsh==1.12.14\r\nshutilwhich==1.1.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/486", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/486/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/486/events", "html_url": "https://github.com/amoffat/sh/issues/486", "id": 485234013, "node_id": "MDU6SXNzdWU0ODUyMzQwMTM=", "number": 486, "title": "It's very difficult to google anything relating to this module", "user": {"login": "rlewkowicz", "id": 17415445, "node_id": "MDQ6VXNlcjE3NDE1NDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/17415445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlewkowicz", "html_url": "https://github.com/rlewkowicz", "followers_url": "https://api.github.com/users/rlewkowicz/followers", "following_url": "https://api.github.com/users/rlewkowicz/following{/other_user}", "gists_url": "https://api.github.com/users/rlewkowicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlewkowicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlewkowicz/subscriptions", "organizations_url": "https://api.github.com/users/rlewkowicz/orgs", "repos_url": "https://api.github.com/users/rlewkowicz/repos", "events_url": "https://api.github.com/users/rlewkowicz/events{/privacy}", "received_events_url": "https://api.github.com/users/rlewkowicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-26T13:21:38Z", "updated_at": "2019-09-25T15:18:25Z", "closed_at": "2019-09-25T15:18:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a hard time finding the github or even the read the docs sometimes. \r\n\r\npython sh\r\n\r\npython sh run shell commands\r\n\r\npython \"sh\" \r\n\r\npython sh module\r\n\r\nand on and on. You should just bite the bullet and rename it to something like \"python_shell_exec\" or something. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/485", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/485/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/485/events", "html_url": "https://github.com/amoffat/sh/issues/485", "id": 477172964, "node_id": "MDU6SXNzdWU0NzcxNzI5NjQ=", "number": 485, "title": "SIGINT seems to be suppressed", "user": {"login": "clintolsen", "id": 4228550, "node_id": "MDQ6VXNlcjQyMjg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4228550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintolsen", "html_url": "https://github.com/clintolsen", "followers_url": "https://api.github.com/users/clintolsen/followers", "following_url": "https://api.github.com/users/clintolsen/following{/other_user}", "gists_url": "https://api.github.com/users/clintolsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintolsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintolsen/subscriptions", "organizations_url": "https://api.github.com/users/clintolsen/orgs", "repos_url": "https://api.github.com/users/clintolsen/repos", "events_url": "https://api.github.com/users/clintolsen/events{/privacy}", "received_events_url": "https://api.github.com/users/clintolsen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463409280, "node_id": "MDU6TGFiZWw0NjM0MDkyODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/cant%20reproduce", "name": "cant reproduce", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-06T05:14:20Z", "updated_at": "2019-11-25T23:39:54Z", "closed_at": "2019-11-25T23:39:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When work is run by `sh`, I can't interrupt/kill the script without using ctrl-Z and then forcibly sending a kill to the script.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/484", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/484/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/484/events", "html_url": "https://github.com/amoffat/sh/issues/484", "id": 475918370, "node_id": "MDU6SXNzdWU0NzU5MTgzNzA=", "number": 484, "title": "Is there a way to get resource usage data?", "user": {"login": "clintolsen", "id": 4228550, "node_id": "MDQ6VXNlcjQyMjg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4228550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintolsen", "html_url": "https://github.com/clintolsen", "followers_url": "https://api.github.com/users/clintolsen/followers", "following_url": "https://api.github.com/users/clintolsen/following{/other_user}", "gists_url": "https://api.github.com/users/clintolsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintolsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintolsen/subscriptions", "organizations_url": "https://api.github.com/users/clintolsen/orgs", "repos_url": "https://api.github.com/users/clintolsen/repos", "events_url": "https://api.github.com/users/clintolsen/events{/privacy}", "received_events_url": "https://api.github.com/users/clintolsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-01T22:37:11Z", "updated_at": "2020-04-25T12:28:20Z", "closed_at": "2020-04-25T12:28:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi:\r\n\r\nDo you recommend just calling `resource.getrusage()` before and after a call to a child process?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/483", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/483/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/483/events", "html_url": "https://github.com/amoffat/sh/issues/483", "id": 474849417, "node_id": "MDU6SXNzdWU0NzQ4NDk0MTc=", "number": 483, "title": "Python 3.7 sh hangs when using in threads", "user": {"login": "mzbuild", "id": 53496097, "node_id": "MDQ6VXNlcjUzNDk2MDk3", "avatar_url": "https://avatars3.githubusercontent.com/u/53496097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzbuild", "html_url": "https://github.com/mzbuild", "followers_url": "https://api.github.com/users/mzbuild/followers", "following_url": "https://api.github.com/users/mzbuild/following{/other_user}", "gists_url": "https://api.github.com/users/mzbuild/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzbuild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzbuild/subscriptions", "organizations_url": "https://api.github.com/users/mzbuild/orgs", "repos_url": "https://api.github.com/users/mzbuild/repos", "events_url": "https://api.github.com/users/mzbuild/events{/privacy}", "received_events_url": "https://api.github.com/users/mzbuild/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463409280, "node_id": "MDU6TGFiZWw0NjM0MDkyODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/cant%20reproduce", "name": "cant reproduce", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-30T22:25:21Z", "updated_at": "2020-04-25T17:37:12Z", "closed_at": "2020-04-25T17:30:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWe use the sh module in a threaded context to execute shell commands.  When we were migrating to python 3 from python 2 we encountered some commands hanging.  We created a test script that recreates the issue we are seeing.\r\n`import sh\r\nimport logging\r\nimport concurrent.futures.thread\r\n\r\ndef execmd(exe):\r\n    print(sh.ls())\r\nexecution_pool = concurrent.futures.thread.ThreadPoolExecutor(20)\r\ni = 0\r\nthread_results = []\r\nwhile i<500:\r\n    i+= 1\r\n    thread_results.append(execution_pool.map(execmd, ['ls']))\r\n\r\nexecution_pool.shutdown()`\r\nWhen running this in python 3.7 it hangs but in python 3.6 it works fine.  We think it is releated to this issue https://bugs.python.org/issue36533.  Installing the latest 3.7.4 didn't fix the issue. We tried recreating the issue without the sh module using threading, forking and logging but we couldn't.  If we could either fix the issue on the sh module side or recreate it in a simple context and file a bug with python that would great.  This is blocking us from migrating our code base from python 2 to python 3 and would prefer not to install python 3.6 as a solution. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/481", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/481/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/481/events", "html_url": "https://github.com/amoffat/sh/issues/481", "id": 461878512, "node_id": "MDU6SXNzdWU0NjE4Nzg1MTI=", "number": 481, "title": "how to use in mysql", "user": {"login": "wisp888", "id": 3608165, "node_id": "MDQ6VXNlcjM2MDgxNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3608165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wisp888", "html_url": "https://github.com/wisp888", "followers_url": "https://api.github.com/users/wisp888/followers", "following_url": "https://api.github.com/users/wisp888/following{/other_user}", "gists_url": "https://api.github.com/users/wisp888/gists{/gist_id}", "starred_url": "https://api.github.com/users/wisp888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wisp888/subscriptions", "organizations_url": "https://api.github.com/users/wisp888/orgs", "repos_url": "https://api.github.com/users/wisp888/repos", "events_url": "https://api.github.com/users/wisp888/events{/privacy}", "received_events_url": "https://api.github.com/users/wisp888/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2016990249, "node_id": "MDU6TGFiZWwyMDE2OTkwMjQ5", "url": "https://api.github.com/repos/amoffat/sh/labels/waiting%20response", "name": "waiting response", "color": "83fcda", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-28T06:29:17Z", "updated_at": "2020-05-27T07:08:03Z", "closed_at": "2020-05-27T07:08:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "`mysql -uroot -p123456 test < test.sql`\r\n\r\nhow to use?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/479", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/479/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/479/events", "html_url": "https://github.com/amoffat/sh/issues/479", "id": 455182862, "node_id": "MDU6SXNzdWU0NTUxODI4NjI=", "number": 479, "title": "pg_dump not found", "user": {"login": "pranayberry", "id": 15723427, "node_id": "MDQ6VXNlcjE1NzIzNDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/15723427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pranayberry", "html_url": "https://github.com/pranayberry", "followers_url": "https://api.github.com/users/pranayberry/followers", "following_url": "https://api.github.com/users/pranayberry/following{/other_user}", "gists_url": "https://api.github.com/users/pranayberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/pranayberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pranayberry/subscriptions", "organizations_url": "https://api.github.com/users/pranayberry/orgs", "repos_url": "https://api.github.com/users/pranayberry/repos", "events_url": "https://api.github.com/users/pranayberry/events{/privacy}", "received_events_url": "https://api.github.com/users/pranayberry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-12T12:24:32Z", "updated_at": "2019-06-12T14:04:52Z", "closed_at": "2019-06-12T14:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I facing a weird bug wherein in my local system I can use sh.pg_dump but on the other hand on my server I can import sh but not the pg_dump module. \r\n\r\nsh Version: 1.12.14\r\nError: sh.CommandNotFound: pg_dump\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/478", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/478/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/478/events", "html_url": "https://github.com/amoffat/sh/issues/478", "id": 453614468, "node_id": "MDU6SXNzdWU0NTM2MTQ0Njg=", "number": 478, "title": "Documentation bug: https://amoffat.github.io/sh/sections/special_arguments.html#done", "user": {"login": "clintolsen", "id": 4228550, "node_id": "MDQ6VXNlcjQyMjg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4228550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintolsen", "html_url": "https://github.com/clintolsen", "followers_url": "https://api.github.com/users/clintolsen/followers", "following_url": "https://api.github.com/users/clintolsen/following{/other_user}", "gists_url": "https://api.github.com/users/clintolsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintolsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintolsen/subscriptions", "organizations_url": "https://api.github.com/users/clintolsen/orgs", "repos_url": "https://api.github.com/users/clintolsen/repos", "events_url": "https://api.github.com/users/clintolsen/events{/privacy}", "received_events_url": "https://api.github.com/users/clintolsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-07T17:16:57Z", "updated_at": "2020-04-26T18:27:05Z", "closed_at": "2020-04-26T18:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the code example of `do_thing()`, this function needs to return a `RunningCommand` object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/477", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/477/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/477/events", "html_url": "https://github.com/amoffat/sh/issues/477", "id": 444780926, "node_id": "MDU6SXNzdWU0NDQ3ODA5MjY=", "number": 477, "title": "AIX: close fd after fork() not working. sh hangs.", "user": {"login": "kappacher", "id": 12928805, "node_id": "MDQ6VXNlcjEyOTI4ODA1", "avatar_url": "https://avatars0.githubusercontent.com/u/12928805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kappacher", "html_url": "https://github.com/kappacher", "followers_url": "https://api.github.com/users/kappacher/followers", "following_url": "https://api.github.com/users/kappacher/following{/other_user}", "gists_url": "https://api.github.com/users/kappacher/gists{/gist_id}", "starred_url": "https://api.github.com/users/kappacher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kappacher/subscriptions", "organizations_url": "https://api.github.com/users/kappacher/orgs", "repos_url": "https://api.github.com/users/kappacher/repos", "events_url": "https://api.github.com/users/kappacher/events{/privacy}", "received_events_url": "https://api.github.com/users/kappacher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-16T06:45:04Z", "updated_at": "2020-04-26T03:28:30Z", "closed_at": "2020-04-26T03:28:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, in sh.py, there is a workaround for Mac OS X. The same applies for IBM AIX.\r\nMy workaround:\r\nchanged:\r\nIS_OSX = platform.system() == \"Darwin\"\r\nto:\r\nIS_OSX = platform.system() in [\"AIX\", \"Darwin\"]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/476", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/476/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/476/events", "html_url": "https://github.com/amoffat/sh/issues/476", "id": 441492503, "node_id": "MDU6SXNzdWU0NDE0OTI1MDM=", "number": 476, "title": "Covering all the error cases", "user": {"login": "clintolsen", "id": 4228550, "node_id": "MDQ6VXNlcjQyMjg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4228550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintolsen", "html_url": "https://github.com/clintolsen", "followers_url": "https://api.github.com/users/clintolsen/followers", "following_url": "https://api.github.com/users/clintolsen/following{/other_user}", "gists_url": "https://api.github.com/users/clintolsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintolsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintolsen/subscriptions", "organizations_url": "https://api.github.com/users/clintolsen/orgs", "repos_url": "https://api.github.com/users/clintolsen/repos", "events_url": "https://api.github.com/users/clintolsen/events{/privacy}", "received_events_url": "https://api.github.com/users/clintolsen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 227580, "node_id": "MDU6TGFiZWwyMjc1ODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/docs", "name": "docs", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-05-07T23:55:04Z", "updated_at": "2020-04-26T21:00:52Z", "closed_at": "2020-04-26T20:59:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi:\r\n\r\nI'm playing around with sh. It's very interesting compared to subprocess. However, there are a few error cases I was trying to explore to make sure I know how to write a Swiss Army knife wrapper around it.\r\n\r\nFor flexibility reasons, I'm always going to need to use the `Command()` constructor. It looks like exit codes are well handled but the following are either not documented entirely or I am unsure how to catch them:\r\n\r\n1) `sh.CommandNotFound`: Currently printing this exception just prints the command. I didn't see this in the Exception section of the docs.\r\n2) Permission denied: What if the program is not executable or we don't have the privileges to run it? This appears to be caught by 1) above.\r\n\r\nThanks,\r\n\r\n-Clint", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/475", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/475/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/475/events", "html_url": "https://github.com/amoffat/sh/issues/475", "id": 440091281, "node_id": "MDU6SXNzdWU0NDAwOTEyODE=", "number": 475, "title": "ErrorReturnCode 255 when debugging with PyCharm", "user": {"login": "xapple", "id": 649288, "node_id": "MDQ6VXNlcjY0OTI4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/649288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xapple", "html_url": "https://github.com/xapple", "followers_url": "https://api.github.com/users/xapple/followers", "following_url": "https://api.github.com/users/xapple/following{/other_user}", "gists_url": "https://api.github.com/users/xapple/gists{/gist_id}", "starred_url": "https://api.github.com/users/xapple/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xapple/subscriptions", "organizations_url": "https://api.github.com/users/xapple/orgs", "repos_url": "https://api.github.com/users/xapple/repos", "events_url": "https://api.github.com/users/xapple/events{/privacy}", "received_events_url": "https://api.github.com/users/xapple/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-03T15:11:39Z", "updated_at": "2020-04-25T12:31:08Z", "closed_at": "2020-04-25T12:31:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "On my linux server I have the following setup:\r\n\r\n    $ lsb_release -a\r\n    Description:    Ubuntu 18.04.2 LTS\r\n    $ python3 -V\r\n    Python 3.7.1\r\n\r\nI have a simple test script called `test.py` containing the following lines:\r\n \r\n    import sh\r\n    sh.ls('/')\r\n\r\nWhich works perfectly when called from a shell:\r\n\r\n    $ python3 /home/xapple/test/test.py\r\n    bin   home        lib64   opt sbin  tmp      vmlinuz.old\r\n    boot  initrd.img      lost+found  proc  snap  usr\r\n    dev   initrd.img.old  media   root  srv   var\r\n    etc   lib       mnt   run sys   vmlinuz\r\n\r\nBut not when invoked through a PyCharm remote interpreter debugger as such:\r\n\r\n     $ python3 -u /home/xapple/.pycharm_helpers/pydev/pydevd.py --multiproc --qt-support=auto --client 0.0.0.0 --port 37511 --file /home/xapple/test/test.py\r\n    pydev debugger: process 31311 is connecting\r\n\r\n    Connected to pydev debugger (build 191.6605.12)\r\n    Traceback (most recent call last):\r\n      File \"/home/xapple/.pycharm_helpers/pydev/pydevd.py\", line 1741, in <module>\r\n        main()\r\n      File \"/home/xapple/.pycharm_helpers/pydev/pydevd.py\", line 1735, in main\r\n        globals = debugger.run(setup['file'], None, None, is_module)\r\n      File \"/home/xapple/.pycharm_helpers/pydev/pydevd.py\", line 1135, in run\r\n        pydev_imports.execfile(file, globals, locals)  # execute the script\r\n      File \"/home/xapple/.pycharm_helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n        exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n      File \"/home/xapple/test/test.py\", line 2, in <module>\r\n        print(sh.ls('/'))\r\n      File \"/home/xapple/.local/lib/python3.7/site-packages/sh.py\", line 1427, in __call__\r\n        return RunningCommand(cmd, call_args, stdin, stdout, stderr)\r\n      File \"/home/xapple/.local/lib/python3.7/site-packages/sh.py\", line 774, in __init__\r\n        self.wait()\r\n      File \"/home/xapple/.local/lib/python3.7/site-packages/sh.py\", line 792, in wait\r\n        self.handle_command_exit_code(exit_code)\r\n      File \"/home/xapple/.local/lib/python3.7/site-packages/sh.py\", line 815, in handle_command_exit_code\r\n        raise exc\r\n    sh.ErrorReturnCode_255: \r\n\r\n      RAN: /bin/ls /\r\n\r\n      STDOUT:\r\n\r\n\r\n      STDERR:\r\n\r\nI suspect this is because the forking process is affected by running within the debugger environment somehow and it triggers this exception:\r\n\r\nhttps://github.com/amoffat/sh/blob/master/sh.py#L1968\r\n\r\nReplacing the script with the following lines instead removes the error:\r\n \r\n    import pbs\r\n    pbs.ls('/')\r\n\r\nSo this regression must have been introduced somewhere with the new version of `sh`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/474", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/474/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/474/events", "html_url": "https://github.com/amoffat/sh/issues/474", "id": 437573367, "node_id": "MDU6SXNzdWU0Mzc1NzMzNjc=", "number": 474, "title": "How could I learn the souce code and join?", "user": {"login": "Zhang21", "id": 18358275, "node_id": "MDQ6VXNlcjE4MzU4Mjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/18358275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zhang21", "html_url": "https://github.com/Zhang21", "followers_url": "https://api.github.com/users/Zhang21/followers", "following_url": "https://api.github.com/users/Zhang21/following{/other_user}", "gists_url": "https://api.github.com/users/Zhang21/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zhang21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zhang21/subscriptions", "organizations_url": "https://api.github.com/users/Zhang21/orgs", "repos_url": "https://api.github.com/users/Zhang21/repos", "events_url": "https://api.github.com/users/Zhang21/events{/privacy}", "received_events_url": "https://api.github.com/users/Zhang21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-26T09:06:51Z", "updated_at": "2020-04-24T05:43:26Z", "closed_at": "2020-04-24T05:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm a SA, or DevOps.\r\nI am going to learning the souce code, but a little difficult. So, can you give me some advices?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/473", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/473/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/473/events", "html_url": "https://github.com/amoffat/sh/issues/473", "id": 436718320, "node_id": "MDU6SXNzdWU0MzY3MTgzMjA=", "number": 473, "title": "Bad behaviour with Nuitka", "user": {"login": "johndoe46", "id": 34662, "node_id": "MDQ6VXNlcjM0NjYy", "avatar_url": "https://avatars2.githubusercontent.com/u/34662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johndoe46", "html_url": "https://github.com/johndoe46", "followers_url": "https://api.github.com/users/johndoe46/followers", "following_url": "https://api.github.com/users/johndoe46/following{/other_user}", "gists_url": "https://api.github.com/users/johndoe46/gists{/gist_id}", "starred_url": "https://api.github.com/users/johndoe46/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johndoe46/subscriptions", "organizations_url": "https://api.github.com/users/johndoe46/orgs", "repos_url": "https://api.github.com/users/johndoe46/repos", "events_url": "https://api.github.com/users/johndoe46/events{/privacy}", "received_events_url": "https://api.github.com/users/johndoe46/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-24T14:05:20Z", "updated_at": "2019-08-26T09:11:04Z", "closed_at": "2019-08-26T09:11:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nNot sure if it's on sh's side, but I have issues with it and Nuitka: https://github.com/Nuitka/Nuitka/issues/365\r\n\r\nJust thought you'd find it interesting.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/471", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/471/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/471/events", "html_url": "https://github.com/amoffat/sh/issues/471", "id": 434056369, "node_id": "MDU6SXNzdWU0MzQwNTYzNjk=", "number": 471, "title": "Allow exception truncation to print head, tail, or head+tail for long output", "user": {"login": "alex-dr", "id": 8420104, "node_id": "MDQ6VXNlcjg0MjAxMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8420104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-dr", "html_url": "https://github.com/alex-dr", "followers_url": "https://api.github.com/users/alex-dr/followers", "following_url": "https://api.github.com/users/alex-dr/following{/other_user}", "gists_url": "https://api.github.com/users/alex-dr/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-dr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-dr/subscriptions", "organizations_url": "https://api.github.com/users/alex-dr/orgs", "repos_url": "https://api.github.com/users/alex-dr/repos", "events_url": "https://api.github.com/users/alex-dr/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-dr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-17T01:53:02Z", "updated_at": "2020-04-25T13:46:03Z", "closed_at": "2020-04-25T13:46:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a ton of cases where we have a long-running command with lots of output, and our exception messages from sh only show the head of the output. Typically the interesting stuff in a failure is in the tail of the output.\r\n\r\nObviously we don't want to change the default behavior, but a kwarg to enable tail output in exception messages (and specify length) would be awesome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/470", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/470/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/470/events", "html_url": "https://github.com/amoffat/sh/issues/470", "id": 431674581, "node_id": "MDU6SXNzdWU0MzE2NzQ1ODE=", "number": 470, "title": "Support for shell variables? and for a set -xv mode?", "user": {"login": "dkmbw", "id": 45567299, "node_id": "MDQ6VXNlcjQ1NTY3Mjk5", "avatar_url": "https://avatars2.githubusercontent.com/u/45567299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkmbw", "html_url": "https://github.com/dkmbw", "followers_url": "https://api.github.com/users/dkmbw/followers", "following_url": "https://api.github.com/users/dkmbw/following{/other_user}", "gists_url": "https://api.github.com/users/dkmbw/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkmbw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkmbw/subscriptions", "organizations_url": "https://api.github.com/users/dkmbw/orgs", "repos_url": "https://api.github.com/users/dkmbw/repos", "events_url": "https://api.github.com/users/dkmbw/events{/privacy}", "received_events_url": "https://api.github.com/users/dkmbw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 227580, "node_id": "MDU6TGFiZWwyMjc1ODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/docs", "name": "docs", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-04-10T19:29:43Z", "updated_at": "2020-04-24T09:23:28Z", "closed_at": "2020-04-24T09:13:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nfirst i have to say, your tool is fantastic. i really love writing stuff with sh instead of bash. i have a few  proposals for enhancements:\r\n\r\n1. support for a set -xv mode so i can see which actual shell commands are run? that would be helpful\r\n2. is there a possibility to support shell variables? for example in bash \"a=b c=d command\" will have a and c as variables available (and modify commands behaviour), this is not the same as environment variables apparently (was new to me, too).\r\n\r\nat least for the last one, i will try to make a patch, but my python is very hacky...\r\n\r\nYours,\r\nDennis", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/465", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/465/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/465/events", "html_url": "https://github.com/amoffat/sh/issues/465", "id": 410443121, "node_id": "MDU6SXNzdWU0MTA0NDMxMjE=", "number": 465, "title": "sh.bake rsync exclusion masks vs subprocess.Popen", "user": {"login": "michael-will", "id": 43761403, "node_id": "MDQ6VXNlcjQzNzYxNDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/43761403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michael-will", "html_url": "https://github.com/michael-will", "followers_url": "https://api.github.com/users/michael-will/followers", "following_url": "https://api.github.com/users/michael-will/following{/other_user}", "gists_url": "https://api.github.com/users/michael-will/gists{/gist_id}", "starred_url": "https://api.github.com/users/michael-will/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michael-will/subscriptions", "organizations_url": "https://api.github.com/users/michael-will/orgs", "repos_url": "https://api.github.com/users/michael-will/repos", "events_url": "https://api.github.com/users/michael-will/events{/privacy}", "received_events_url": "https://api.github.com/users/michael-will/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-02-14T18:57:25Z", "updated_at": "2020-04-25T23:43:01Z", "closed_at": "2020-04-25T23:43:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason running the equivalent of \r\n/usr/bin/rsync -rptlog --size-only -ansv --include='*/' --include='**/*.arb' --exclude='*' src/ dest2/  \r\nthrough cmd=sh.rsync.bake(..) results in a different outcome than running it through subprocess.Popen(...,shell=True)\r\n\r\nFull example demonstrating the issue on https://pastebin.com/nzh5WmkX", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/464", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/464/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/464/events", "html_url": "https://github.com/amoffat/sh/issues/464", "id": 409793576, "node_id": "MDU6SXNzdWU0MDk3OTM1NzY=", "number": 464, "title": "can't create sh object with param inside class", "user": {"login": "ddstreet", "id": 660812, "node_id": "MDQ6VXNlcjY2MDgxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/660812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddstreet", "html_url": "https://github.com/ddstreet", "followers_url": "https://api.github.com/users/ddstreet/followers", "following_url": "https://api.github.com/users/ddstreet/following{/other_user}", "gists_url": "https://api.github.com/users/ddstreet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddstreet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddstreet/subscriptions", "organizations_url": "https://api.github.com/users/ddstreet/orgs", "repos_url": "https://api.github.com/users/ddstreet/repos", "events_url": "https://api.github.com/users/ddstreet/events{/privacy}", "received_events_url": "https://api.github.com/users/ddstreet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-13T12:59:44Z", "updated_at": "2020-04-25T12:32:56Z", "closed_at": "2020-04-25T12:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "$ cat test-sh.py \r\n```python\r\nimport sh\r\n\r\nclass MyClass():\r\n    def __init__(self):\r\n        self.git = sh(_tty_out=False).git\r\n\r\nMyClass()\r\n\r\nprint('great!')\r\n```\r\n\r\n$ ./test-sh.py \r\nTraceback (most recent call last):\r\n  File \"./test-sh.py\", line 9, in <module>\r\n    MyClass()\r\n  File \"./test-sh.py\", line 7, in __init__\r\n    self.git = sh(_tty_out=False).git\r\n  File \"/usr/lib/python3/dist-packages/sh.py\", line 3369, in __call__\r\n    module_name = parsed.body[0].targets[0].id\r\nAttributeError: 'Attribute' object has no attribute 'id'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/463", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/463/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/463/events", "html_url": "https://github.com/amoffat/sh/issues/463", "id": 406399625, "node_id": "MDU6SXNzdWU0MDYzOTk2MjU=", "number": 463, "title": "Python 2: Non-ASCII characters in stderr or stdout during non-zero exit result in exception with no message", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-04T16:04:51Z", "updated_at": "2020-04-24T09:03:34Z", "closed_at": "2020-04-24T09:01:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `sh` `ErrorReturnCode` exception class [sets the exception message to a Unicode string](https://github.com/amoffat/sh/blob/858adf0c682af4c40e41f34d6926696b7a5d3b12/sh.py#L384-L388), regardless of Python version. That's not really an option in Python 2, but it just happens to work when your Unicode string is ASCII safe.\r\n\r\nHowever, when the process exited with non-ASCII characters on stderr or stdout, then showing the exception in a traceback results in a `<exception str() failed>` exception message, because the `str()` call on the exception instance fails.\r\n\r\nDemo reproducing the problem, run with Python 2.7:\r\n\r\n```python\r\nimport sh, sys\r\nprint(sys.version_info)\r\npython27 = sh.Command(sys.executable)\r\npython27(c=r\"import sys; sys.stderr.write(u'\\u2603\\n'.encode('utf8')); sys.exit(1)\")\r\n```\r\n\r\nThis outputs\r\n\r\n```python\r\nsys.version_info(major=2, minor=7, micro=15, releaselevel='final', serial=0)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/.../lib/python2.7/site-packages/sh.py\", line 1427, in __call__\r\n    return RunningCommand(cmd, call_args, stdin, stdout, stderr)\r\n  File \"/.../lib/python2.7/site-packages/sh.py\", line 774, in __init__\r\n    self.wait()\r\n  File \"/.../lib/python2.7/site-packages/sh.py\", line 792, in wait\r\n    self.handle_command_exit_code(exit_code)\r\n  File \"/.../lib/python2.7/site-packages/sh.py\", line 815, in handle_command_exit_code\r\n    raise exc\r\nsh.ErrorReturnCode_1: <exception str() failed>\r\n```\r\n\r\nWhen you catch the exception, the `.args[0]` attribute shows why:\r\n\r\n```python\r\n>>> try:\r\n...     python27(c=r\"import sys; sys.stderr.write(u'\\u2603\\n'.encode('utf8')); sys.exit(1)\")\r\n... except sh.ErrorReturnCode as exc:\r\n...     print(repr(exc.args[0]))\r\n...     str(exc)\r\n...\r\nu\"\\n\\n  RAN: /.../bin/python -c import sys; sys.stderr.write(u'\\\\u2603\\\\n'.encode('utf8')); sys.exit(1)\\n\\n  STDOUT:\\n\\n\\n  STDERR:\\n\\u2603\\n\"\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 5, in <module>\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2603' in position 129: ordinal not in range(128)\r\n```\r\n\r\nSo on Python 2, please encode the message to a suitable `str` object before setting it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/462", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/462/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/462/events", "html_url": "https://github.com/amoffat/sh/issues/462", "id": 398845888, "node_id": "MDU6SXNzdWUzOTg4NDU4ODg=", "number": 462, "title": "_pipe_queue, if set to Queue is a CPU hog", "user": {"login": "wvxvw", "id": 3147276, "node_id": "MDQ6VXNlcjMxNDcyNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3147276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wvxvw", "html_url": "https://github.com/wvxvw", "followers_url": "https://api.github.com/users/wvxvw/followers", "following_url": "https://api.github.com/users/wvxvw/following{/other_user}", "gists_url": "https://api.github.com/users/wvxvw/gists{/gist_id}", "starred_url": "https://api.github.com/users/wvxvw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wvxvw/subscriptions", "organizations_url": "https://api.github.com/users/wvxvw/orgs", "repos_url": "https://api.github.com/users/wvxvw/repos", "events_url": "https://api.github.com/users/wvxvw/events{/privacy}", "received_events_url": "https://api.github.com/users/wvxvw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 631974984, "node_id": "MDU6TGFiZWw2MzE5NzQ5ODQ=", "url": "https://api.github.com/repos/amoffat/sh/labels/performance", "name": "performance", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-14T11:22:44Z", "updated_at": "2020-04-25T09:10:46Z", "closed_at": "2020-04-25T09:09:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code like in the example below (simplified) will consume 4-5% of CPU, which means that you can barely have 25 processes running at the same time...\r\n\r\n``` python\r\nfrom sh import sleep\r\n\r\nfor line in sleep('infinity', _iter='out', _err_to_out=True):\r\n    pass\r\n```\r\n\r\nThe 25 processes is actually an optimistic prognosis, you'd still need to account for Python's process creation tax and such.  So, more like 20...\r\n\r\nHere's an example profiler output:\r\n\r\n```\r\n         13108795 function calls in 600.691 seconds\r\n\r\n   Ordered by: standard name\r\n\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n        1    0.000    0.000  600.691  600.691 <string>:1(<module>)\r\n        1    0.000    0.000    0.000    0.000 __init__.py:1169(__init__)\r\n        2    0.000    0.000    0.000    0.000 __init__.py:1175(append)\r\n       10    0.000    0.000    0.000    0.000 __init__.py:1221(getLogger)\r\n        5    0.000    0.000    0.000    0.000 __init__.py:1272(_fixupParents)\r\n        5    0.000    0.000    0.000    0.000 __init__.py:1341(__init__)\r\n        8    0.000    0.000    0.000    0.000 __init__.py:1361(debug)\r\n        6    0.000    0.000    0.000    0.000 __init__.py:1373(info)\r\n        2    0.000    0.000    0.000    0.000 __init__.py:1605(getEffectiveLevel)\r\n       14    0.000    0.000    0.000    0.000 __init__.py:1619(isEnabledFor)\r\n        5    0.000    0.000    0.000    0.000 __init__.py:187(_checkLevel)\r\n       10    0.000    0.000    0.000    0.000 __init__.py:1930(getLogger)\r\n       14    0.000    0.000    0.000    0.000 __init__.py:212(_acquireLock)\r\n       14    0.000    0.000    0.000    0.000 __init__.py:221(_releaseLock)\r\n        4    0.000    0.000    0.000    0.000 __init__.py:253(_at_fork_weak_calls)\r\n        2    0.000    0.000    0.000    0.000 __init__.py:264(_before_at_fork_weak_calls)\r\n        2    0.000    0.000    0.000    0.000 __init__.py:268(_after_at_fork_weak_calls)\r\n        1    0.000    0.000    0.000    0.000 __init__.py:274(load)\r\n        1    0.000    0.000    0.000    0.000 __init__.py:299(loads)\r\n        5    0.000    0.000    0.000    0.000 __init__.py:727(__init__)\r\n        4    0.000    0.000    0.000    0.000 __init__.py:849(acquire)\r\n        4    0.000    0.000    0.000    0.000 __init__.py:856(release)\r\n        2    0.000    0.000    0.000    0.000 _bootlocale.py:33(getpreferredencoding)\r\n        4    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)\r\n        4    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)\r\n        4    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)\r\n        1    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)\r\n        4    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)\r\n       12    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)\r\n        6    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)\r\n        2    0.000    0.000    0.000    0.000 codecs.py:186(__init__)\r\n        1    0.000    0.000    0.000    0.000 decoder.py:332(decode)\r\n        1    0.000    0.000    0.000    0.000 decoder.py:343(raw_decode)\r\n        1    0.000    0.000    0.000    0.000 fio.py:37(get_io_depth)\r\n        1    0.000    0.000  600.691  600.691 fio.py:48(run_test)\r\n        1    0.000    0.000    0.000    0.000 fio.py:56(<listcomp>)\r\n        1    0.000    0.000    0.000    0.000 posixpath.py:144(basename)\r\n        3    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)\r\n        2    0.000    0.000    0.000    0.000 posixpath.py:75(join)\r\n        2    0.000    0.000    0.000    0.000 pty.py:21(openpty)\r\n   546263    5.439    0.000  598.483    0.001 queue.py:153(get)\r\n       10    0.000    0.000    0.000    0.000 queue.py:205(_init)\r\n  1092203    0.801    0.000    1.152    0.000 queue.py:208(_qsize)\r\n      325    0.000    0.000    0.000    0.000 queue.py:216(_get)\r\n       10    0.000    0.000    0.000    0.000 queue.py:33(__init__)\r\n       10    0.000    0.000    0.000    0.000 sh.py:1005(ob_is_pipe)\r\n        2    0.000    0.000    0.000    0.000 sh.py:1014(tty_in_validator)\r\n        2    0.000    0.000    0.000    0.000 sh.py:1026(bufsize_validator)\r\n       10    0.000    0.000    0.000    0.000 sh.py:1213(__getattribute__)\r\n        2    0.000    0.000    0.000    0.000 sh.py:1236(_extract_call_args)\r\n        2    0.000    0.000    0.006    0.003 sh.py:1324(__call__)\r\n        2    0.000    0.000    0.000    0.000 sh.py:1430(compile_args)\r\n        2    0.000    0.000    0.000    0.000 sh.py:1471(aggregate_keywords)\r\n        4    0.000    0.000    0.001    0.000 sh.py:1537(_start_daemon_thread)\r\n        2    0.000    0.000    0.000    0.000 sh.py:1629(get_exc_exit_code_would_raise)\r\n        1    0.000    0.000    0.000    0.000 sh.py:1646(handle_process_exit_code)\r\n        1    0.000    0.000    0.000    0.000 sh.py:1660(no_interrupt)\r\n        2    0.000    0.000    0.005    0.003 sh.py:1690(__init__)\r\n        2    0.000    0.000    0.000    0.000 sh.py:2199(__repr__)\r\n        1    0.000    0.000    0.000    0.000 sh.py:2329(_process_just_ended)\r\n        2    0.000    0.000    0.001    0.001 sh.py:2346(wait)\r\n        3    0.000    0.000    0.000    0.000 sh.py:2654(bufsize_type_to_bufsize)\r\n        3    0.000    0.000    0.000    0.000 sh.py:268(encode_to_py3bytes_or_py2str)\r\n        3    0.000    0.000    0.000    0.000 sh.py:2777(determine_how_to_feed_output)\r\n        3    0.000    0.000    0.000    0.000 sh.py:2871(__init__)\r\n        3    0.000    0.000    0.000    0.000 sh.py:2956(__init__)\r\n       10    0.000    0.000    0.000    0.000 sh.py:606(__init__)\r\n       14    0.000    0.000    0.000    0.000 sh.py:611(_format_msg)\r\n       12    0.000    0.000    0.000    0.000 sh.py:616(set_context)\r\n        4    0.000    0.000    0.000    0.000 sh.py:621(get_child)\r\n        6    0.000    0.000    0.000    0.000 sh.py:627(info)\r\n        8    0.000    0.000    0.000    0.000 sh.py:630(debug)\r\n        4    0.000    0.000    0.000    0.000 sh.py:640(default_logger_str)\r\n        2    0.000    0.000    0.006    0.003 sh.py:680(__init__)\r\n        2    0.000    0.000    0.000    0.000 sh.py:695(<listcomp>)\r\n        2    0.000    0.000    0.001    0.001 sh.py:777(wait)\r\n        2    0.000    0.000    0.000    0.000 sh.py:805(handle_command_exit_code)\r\n       24    0.000    0.000    0.000    0.000 sh.py:81(callable)\r\n        1    0.000    0.000    0.000    0.000 sh.py:844(__iter__)\r\n      325    2.201    0.007  600.684    1.848 sh.py:847(next)\r\n        4    0.000    0.000    0.000    0.000 sh.py:947(output_redirect_is_filename)\r\n        2    0.000    0.000    0.000    0.000 sh.py:951(get_prepend_stack)\r\n        2    0.000    0.000    0.000    0.000 sh.py:958(special_kwarg_validator)\r\n       20    0.000    0.000    0.000    0.000 sh.py:978(get_fileno)\r\n       10    0.000    0.000    0.000    0.000 sh.py:997(ob_is_tty)\r\n        4    0.000    0.000    0.000    0.000 threading.py:1000(join)\r\n        4    0.000    0.000    0.000    0.000 threading.py:1038(_wait_for_tstate_lock)\r\n        6    0.000    0.000    0.000    0.000 threading.py:1096(daemon)\r\n        4    0.000    0.000    0.000    0.000 threading.py:1112(daemon)\r\n        2    0.000    0.000    0.000    0.000 threading.py:1143(__init__)\r\n        2    0.000    0.000    0.000    0.000 threading.py:1151(cancel)\r\n       10    0.000    0.000    0.000    0.000 threading.py:1206(current_thread)\r\n       42    0.000    0.000    0.000    0.000 threading.py:216(__init__)\r\n   546273    0.294    0.000    0.478    0.000 threading.py:240(__enter__)\r\n   546273    0.512    0.000    0.670    0.000 threading.py:243(__exit__)\r\n   545946    0.264    0.000    0.358    0.000 threading.py:249(_release_save)\r\n   545946    0.658    0.000    1.216    0.000 threading.py:252(_acquire_restore)\r\n   546275    0.291    0.000    0.611    0.000 threading.py:255(_is_owned)\r\n   545946    3.633    0.000  590.279    0.001 threading.py:264(wait)\r\n      329    0.000    0.000    0.001    0.000 threading.py:335(notify)\r\n        4    0.000    0.000    0.000    0.000 threading.py:358(notify_all)\r\n       12    0.000    0.000    0.000    0.000 threading.py:499(__init__)\r\n       14    0.000    0.000    0.000    0.000 threading.py:507(is_set)\r\n        4    0.000    0.000    0.000    0.000 threading.py:513(set)\r\n        6    0.000    0.000    0.001    0.000 threading.py:534(wait)\r\n        2    0.000    0.000    0.000    0.000 threading.py:728(_newname)\r\n        3    0.000    0.000    0.000    0.000 threading.py:75(RLock)\r\n        6    0.000    0.000    0.000    0.000 threading.py:758(__init__)\r\n        6    0.000    0.000    0.001    0.000 threading.py:829(start)\r\n        4    0.000    0.000    0.000    0.000 threading.py:968(_stop)\r\n        1    0.000    0.000    0.000    0.000 {built-in method _csv.writer}\r\n        2    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}\r\n   545972    0.293    0.000    0.293    0.000 {built-in method _thread.allocate_lock}\r\n       10    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}\r\n        6    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}\r\n        1    0.000    0.000  600.691  600.691 {built-in method builtins.exec}\r\n       30    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}\r\n       29    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}\r\n       73    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}\r\n  1092208    0.351    0.000    0.351    0.000 {built-in method builtins.len}\r\n        2    0.000    0.000    0.000    0.000 {built-in method builtins.repr}\r\n        2    0.000    0.000    0.000    0.000 {built-in method gc.disable}\r\n        2    0.000    0.000    0.000    0.000 {built-in method gc.enable}\r\n        2    0.000    0.000    0.000    0.000 {built-in method gc.isenabled}\r\n        2    0.000    0.000    0.000    0.000 {built-in method io.open}\r\n        1    0.000    0.000    0.000    0.000 {built-in method posix.WEXITSTATUS}\r\n        1    0.000    0.000    0.000    0.000 {built-in method posix.WIFEXITED}\r\n        1    0.000    0.000    0.000    0.000 {built-in method posix.WIFSIGNALED}\r\n       16    0.000    0.000    0.000    0.000 {built-in method posix.close}\r\n        2    0.000    0.000    0.000    0.000 {built-in method posix.dup}\r\n        2    0.001    0.000    0.001    0.001 {built-in method posix.fork}\r\n        3    0.000    0.000    0.000    0.000 {built-in method posix.fspath}\r\n        2    0.000    0.000    0.000    0.000 {built-in method posix.openpty}\r\n        7    0.000    0.000    0.000    0.000 {built-in method posix.pipe}\r\n        4    0.001    0.000    0.001    0.000 {built-in method posix.read}\r\n        1    0.000    0.000    0.000    0.000 {built-in method posix.waitpid}\r\n  1638141    0.466    0.000    0.466    0.000 {built-in method time.monotonic}\r\n        2    0.000    0.000    0.000    0.000 {built-in method time.time}\r\n   546273    0.184    0.000    0.184    0.000 {method '__enter__' of '_thread.lock' objects}\r\n   546273    0.157    0.000    0.157    0.000 {method '__exit__' of '_thread.lock' objects}\r\n       18    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}\r\n  2184117  584.668    0.000  584.668    0.000 {method 'acquire' of '_thread.lock' objects}\r\n       10    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}\r\n   545946    0.122    0.000    0.122    0.000 {method 'append' of 'collections.deque' objects}\r\n        5    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}\r\n        6    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}\r\n      332    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}\r\n        6    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}\r\n       10    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}\r\n       12    0.000    0.000    0.000    0.000 {method 'issuperset' of 'set' objects}\r\n        5    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}\r\n        4    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}\r\n      325    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'read' of '_io.StringIO' objects}\r\n       18    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}\r\n   545954    0.094    0.000    0.094    0.000 {method 'release' of '_thread.lock' objects}\r\n   545942    0.257    0.000    0.257    0.000 {method 'remove' of 'collections.deque' objects}\r\n        4    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}\r\n        8    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}\r\n       11    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'seek' of '_io.StringIO' objects}\r\n        3    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}\r\n       13    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}\r\n        4    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}\r\n      324    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'writerow' of '_csv.writer' objects}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/461", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/461/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/461/events", "html_url": "https://github.com/amoffat/sh/issues/461", "id": 383995021, "node_id": "MDU6SXNzdWUzODM5OTUwMjE=", "number": 461, "title": "How do I use a command with \"-\" like spark-submit?", "user": {"login": "liuzhishan", "id": 10196581, "node_id": "MDQ6VXNlcjEwMTk2NTgx", "avatar_url": "https://avatars3.githubusercontent.com/u/10196581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liuzhishan", "html_url": "https://github.com/liuzhishan", "followers_url": "https://api.github.com/users/liuzhishan/followers", "following_url": "https://api.github.com/users/liuzhishan/following{/other_user}", "gists_url": "https://api.github.com/users/liuzhishan/gists{/gist_id}", "starred_url": "https://api.github.com/users/liuzhishan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liuzhishan/subscriptions", "organizations_url": "https://api.github.com/users/liuzhishan/orgs", "repos_url": "https://api.github.com/users/liuzhishan/repos", "events_url": "https://api.github.com/users/liuzhishan/events{/privacy}", "received_events_url": "https://api.github.com/users/liuzhishan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-24T14:43:32Z", "updated_at": "2018-12-01T11:03:10Z", "closed_at": "2018-12-01T11:03:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I use a command with \"-\" like spark-submit ?\r\n\r\nIt seems that variable in python cannot have \"-\" in it, so how do I use a command like spark-submit using sh?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/460", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/460/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/460/events", "html_url": "https://github.com/amoffat/sh/issues/460", "id": 381192210, "node_id": "MDU6SXNzdWUzODExOTIyMTA=", "number": 460, "title": "wrong type for _env leads to confusing error", "user": {"login": "bulma-capsule", "id": 44382899, "node_id": "MDQ6VXNlcjQ0MzgyODk5", "avatar_url": "https://avatars1.githubusercontent.com/u/44382899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bulma-capsule", "html_url": "https://github.com/bulma-capsule", "followers_url": "https://api.github.com/users/bulma-capsule/followers", "following_url": "https://api.github.com/users/bulma-capsule/following{/other_user}", "gists_url": "https://api.github.com/users/bulma-capsule/gists{/gist_id}", "starred_url": "https://api.github.com/users/bulma-capsule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bulma-capsule/subscriptions", "organizations_url": "https://api.github.com/users/bulma-capsule/orgs", "repos_url": "https://api.github.com/users/bulma-capsule/repos", "events_url": "https://api.github.com/users/bulma-capsule/events{/privacy}", "received_events_url": "https://api.github.com/users/bulma-capsule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-15T14:44:21Z", "updated_at": "2020-04-24T06:38:30Z", "closed_at": "2020-04-24T06:38:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the type of **_env** is a **set** instead of a **dict** (a common error when using a coma instead of a colon), the error raised suggests the command itself failed and does not hint that the type of the **_env** argument is incorrect.\r\n\r\n```python\r\n>>> sh.env(_env={'FOO': 'bar'})\r\nFOO=bar\r\n\r\n>>> sh.env(_env={'FOO', 'bar'})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/venv/lib/python3.6/site-packages/sh.py\", line 1427, in __call__\r\n    return RunningCommand(cmd, call_args, stdin, stdout, stderr)\r\n  File \"/home/venv/lib/python3.6/site-packages/sh.py\", line 774, in __init__\r\n    self.wait()\r\n  File \"/home/venv/lib/python3.6/site-packages/sh.py\", line 792, in wait\r\n    self.handle_command_exit_code(exit_code)\r\n  File \"/home/venv/lib/python3.6/site-packages/sh.py\", line 815, in handle_command_exit_code\r\n    raise exc\r\nsh.ErrorReturnCode_255: \r\n\r\n  RAN: /usr/bin/env\r\n\r\n  STDOUT:\r\n\r\n\r\n  STDERR:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/459", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/459/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/459/events", "html_url": "https://github.com/amoffat/sh/issues/459", "id": 380401678, "node_id": "MDU6SXNzdWUzODA0MDE2Nzg=", "number": 459, "title": "[question] how to source activate an environment using `sh`", "user": {"login": "pcyin", "id": 3413464, "node_id": "MDQ6VXNlcjM0MTM0NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3413464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcyin", "html_url": "https://github.com/pcyin", "followers_url": "https://api.github.com/users/pcyin/followers", "following_url": "https://api.github.com/users/pcyin/following{/other_user}", "gists_url": "https://api.github.com/users/pcyin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcyin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcyin/subscriptions", "organizations_url": "https://api.github.com/users/pcyin/orgs", "repos_url": "https://api.github.com/users/pcyin/repos", "events_url": "https://api.github.com/users/pcyin/events{/privacy}", "received_events_url": "https://api.github.com/users/pcyin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-13T20:08:09Z", "updated_at": "2020-04-25T09:12:05Z", "closed_at": "2020-04-25T09:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was wondering if I could do `source activate my_conda_env` in sh, ensuring that the following code is executed using the loaded conda environment `my_conda_env`. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/458", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/458/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/458/events", "html_url": "https://github.com/amoffat/sh/issues/458", "id": 376618704, "node_id": "MDU6SXNzdWUzNzY2MTg3MDQ=", "number": 458, "title": "python3.6: Multiprocessing.pool and negative return code", "user": {"login": "viniul", "id": 20932074, "node_id": "MDQ6VXNlcjIwOTMyMDc0", "avatar_url": "https://avatars1.githubusercontent.com/u/20932074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viniul", "html_url": "https://github.com/viniul", "followers_url": "https://api.github.com/users/viniul/followers", "following_url": "https://api.github.com/users/viniul/following{/other_user}", "gists_url": "https://api.github.com/users/viniul/gists{/gist_id}", "starred_url": "https://api.github.com/users/viniul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viniul/subscriptions", "organizations_url": "https://api.github.com/users/viniul/orgs", "repos_url": "https://api.github.com/users/viniul/repos", "events_url": "https://api.github.com/users/viniul/events{/privacy}", "received_events_url": "https://api.github.com/users/viniul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-02T00:13:28Z", "updated_at": "2020-04-26T20:06:48Z", "closed_at": "2020-04-26T20:06:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "If an `sh.Command` call returns a non-zero exit code it seems the multiprocessing module can't pickle the exception. Consider the following code:\r\n```\r\n\r\n#!/usr/bin/env python3\r\nfrom multiprocessing import Pool\r\nimport sh\r\n\r\n\r\ndef f( x): \r\n    sh.Command(\"./exit.sh\")()\r\n\r\np = Pool(5)\r\np.map(f, [(x, ) for x in range(1000)])\r\np.close()\r\np.join()\r\n```\r\nWith `exit.sh` consisting of the line `exit 1`.\r\n\r\nThis script throws the following exception and apparently freezes afterwards:\r\n```\r\n\r\n\r\n$ ./test.py \r\nException in thread Thread-3:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib64/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.6/multiprocessing/pool.py\", line 463, in _handle_results\r\n    task = get()\r\n  File \"/usr/lib64/python3.6/multiprocessing/connection.py\", line 251, in recv\r\n    return _ForkingPickler.loads(buf.getbuffer())\r\nTypeError: __init__() missing 2 required positional arguments: 'stdout' and 'stderr'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/456", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/456/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/456/events", "html_url": "https://github.com/amoffat/sh/issues/456", "id": 372443140, "node_id": "MDU6SXNzdWUzNzI0NDMxNDA=", "number": 456, "title": "When can it support Python3.7?", "user": {"login": "yuluo-ding", "id": 9930784, "node_id": "MDQ6VXNlcjk5MzA3ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/9930784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuluo-ding", "html_url": "https://github.com/yuluo-ding", "followers_url": "https://api.github.com/users/yuluo-ding/followers", "following_url": "https://api.github.com/users/yuluo-ding/following{/other_user}", "gists_url": "https://api.github.com/users/yuluo-ding/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuluo-ding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuluo-ding/subscriptions", "organizations_url": "https://api.github.com/users/yuluo-ding/orgs", "repos_url": "https://api.github.com/users/yuluo-ding/repos", "events_url": "https://api.github.com/users/yuluo-ding/events{/privacy}", "received_events_url": "https://api.github.com/users/yuluo-ding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-22T09:01:18Z", "updated_at": "2020-04-25T09:13:15Z", "closed_at": "2020-04-25T09:13:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/455", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/455/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/455/events", "html_url": "https://github.com/amoffat/sh/issues/455", "id": 371362204, "node_id": "MDU6SXNzdWUzNzEzNjIyMDQ=", "number": 455, "title": "help(sh) does not work", "user": {"login": "sushlala", "id": 12701881, "node_id": "MDQ6VXNlcjEyNzAxODgx", "avatar_url": "https://avatars3.githubusercontent.com/u/12701881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sushlala", "html_url": "https://github.com/sushlala", "followers_url": "https://api.github.com/users/sushlala/followers", "following_url": "https://api.github.com/users/sushlala/following{/other_user}", "gists_url": "https://api.github.com/users/sushlala/gists{/gist_id}", "starred_url": "https://api.github.com/users/sushlala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sushlala/subscriptions", "organizations_url": "https://api.github.com/users/sushlala/orgs", "repos_url": "https://api.github.com/users/sushlala/repos", "events_url": "https://api.github.com/users/sushlala/events{/privacy}", "received_events_url": "https://api.github.com/users/sushlala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-18T05:00:56Z", "updated_at": "2020-04-24T07:26:01Z", "closed_at": "2020-04-24T07:26:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "As this is my first time using 'sh', I tried to run help on it. 'sh' doesnt seem to like it\r\n\r\n```\r\nsh $python\r\nPython 3.6.5 |Anaconda, Inc.| (default, Apr 26 2018, 08:42:37) \r\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sh\r\n>>> help(sh)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/sush/anaconda3/lib/python3.6/_sitebuiltins.py\", line 103, in __call__\r\n    return pydoc.help(*args, **kwds)\r\n  File \"/Users/sush/anaconda3/lib/python3.6/pydoc.py\", line 1858, in __call__\r\n    self.help(request)\r\n  File \"/Users/sush/anaconda3/lib/python3.6/pydoc.py\", line 1911, in help\r\n    else: doc(request, 'Help on %s:', output=self._output)\r\n  File \"/Users/sush/anaconda3/lib/python3.6/pydoc.py\", line 1645, in doc\r\n    pager(render_doc(thing, title, forceload))\r\n  File \"/Users/sush/anaconda3/lib/python3.6/pydoc.py\", line 1638, in render_doc\r\n    return title % desc + '\\n\\n' + renderer.document(object, name)\r\n  File \"/Users/sush/anaconda3/lib/python3.6/pydoc.py\", line 382, in document\r\n    if inspect.ismodule(object): return self.docmodule(*args)\r\n  File \"/Users/sush/anaconda3/lib/python3.6/pydoc.py\", line 1103, in docmodule\r\n    all = getattr(object, '__all__', None)\r\n  File \"/Users/sush/Desktop/up/sh/sh.py\", line 3349, in __getattr__\r\n    return self.__env[name]\r\n  File \"/Users/sush/Desktop/up/sh/sh.py\", line 3187, in __getitem__\r\n    Please import sh or import programs individually.\")\r\nRuntimeError: Cannot import * from sh. Please import sh or import programs individually.\r\n>>> \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/452", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/452/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/452/events", "html_url": "https://github.com/amoffat/sh/issues/452", "id": 364952343, "node_id": "MDU6SXNzdWUzNjQ5NTIzNDM=", "number": 452, "title": "Implement `__getitem__` to pass extra arguments/options to parent command", "user": {"login": "cgarciae", "id": 5862228, "node_id": "MDQ6VXNlcjU4NjIyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5862228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgarciae", "html_url": "https://github.com/cgarciae", "followers_url": "https://api.github.com/users/cgarciae/followers", "following_url": "https://api.github.com/users/cgarciae/following{/other_user}", "gists_url": "https://api.github.com/users/cgarciae/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgarciae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgarciae/subscriptions", "organizations_url": "https://api.github.com/users/cgarciae/orgs", "repos_url": "https://api.github.com/users/cgarciae/repos", "events_url": "https://api.github.com/users/cgarciae/events{/privacy}", "received_events_url": "https://api.github.com/users/cgarciae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-28T16:08:03Z", "updated_at": "2020-04-26T03:34:04Z", "closed_at": "2020-04-26T03:34:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say you have the command e.g.\r\n```\r\ngsutil cp -r some/folder gs://bucket/some/folder\r\n```\r\nyou can call it very nicely like this\r\n```python\r\nsh.gsutil.cp(\"-r\", \"some/folder\" \"gs://bucket/some/folder\")\r\n```\r\nOn the other hand, if you want to run this command\r\n```\r\ngsutil -m cp -r some/folder gs://bucket/some/folder\r\n```\r\nnow you can't use the nice attribute syntax anymore because of the intermediate `-m` option. However, if you implement the `__getitem__` method on the `Command` correctly you could have an API that looked like this\r\n\r\n```python\r\nsh.gsutil[\"-m\"].cp(\"-r\", \"some/folder\" \"gs://bucket/some/folder\")\r\n```\r\nI think this is very pythonic and looks very appealing. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/451", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/451/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/451/events", "html_url": "https://github.com/amoffat/sh/issues/451", "id": 358518036, "node_id": "MDU6SXNzdWUzNTg1MTgwMzY=", "number": 451, "title": "Attach a RunningCommand to a running process", "user": {"login": "Ellon", "id": 2206351, "node_id": "MDQ6VXNlcjIyMDYzNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2206351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ellon", "html_url": "https://github.com/Ellon", "followers_url": "https://api.github.com/users/Ellon/followers", "following_url": "https://api.github.com/users/Ellon/following{/other_user}", "gists_url": "https://api.github.com/users/Ellon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ellon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ellon/subscriptions", "organizations_url": "https://api.github.com/users/Ellon/orgs", "repos_url": "https://api.github.com/users/Ellon/repos", "events_url": "https://api.github.com/users/Ellon/events{/privacy}", "received_events_url": "https://api.github.com/users/Ellon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 542274191, "node_id": "MDU6TGFiZWw1NDIyNzQxOTE=", "url": "https://api.github.com/repos/amoffat/sh/labels/will%20not%20fix", "name": "will not fix", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-10T08:27:40Z", "updated_at": "2020-04-26T20:07:35Z", "closed_at": "2020-04-26T20:07:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to control some processes on my machine from python. I may launch these processes from python using sh without problems, but they may be already launched in the system, and in this case I would like to \"grab them\" and control them from python, eventually killing and relaunching them.\r\n\r\nSo I was wondering: is there a way (maybe a \"hackish\" one) to attach a RunningCommand to a process that is already being run in the machine before the python terminal is launched? If not, could this be a feature to be implemented soon?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/450", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/450/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/450/events", "html_url": "https://github.com/amoffat/sh/issues/450", "id": 355579206, "node_id": "MDU6SXNzdWUzNTU1NzkyMDY=", "number": 450, "title": "Any roadmap ahead?", "user": {"login": "deeplook", "id": 1001778, "node_id": "MDQ6VXNlcjEwMDE3Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1001778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deeplook", "html_url": "https://github.com/deeplook", "followers_url": "https://api.github.com/users/deeplook/followers", "following_url": "https://api.github.com/users/deeplook/following{/other_user}", "gists_url": "https://api.github.com/users/deeplook/gists{/gist_id}", "starred_url": "https://api.github.com/users/deeplook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deeplook/subscriptions", "organizations_url": "https://api.github.com/users/deeplook/orgs", "repos_url": "https://api.github.com/users/deeplook/repos", "events_url": "https://api.github.com/users/deeplook/events{/privacy}", "received_events_url": "https://api.github.com/users/deeplook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-08-30T13:12:44Z", "updated_at": "2020-03-03T23:24:38Z", "closed_at": "2020-03-03T23:24:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I like this module, but I see it hasn't been touched for a long time, many trivial PRs are piling up, questions are not answered. It would be nice to have a statement on further development maintenance or even some roadmap ahead from @amoffat. Or does anyone have pointers to more evolved forks of this? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/449", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/449/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/449/events", "html_url": "https://github.com/amoffat/sh/issues/449", "id": 354465952, "node_id": "MDU6SXNzdWUzNTQ0NjU5NTI=", "number": 449, "title": "unexpected error piping to gzip", "user": {"login": "dtenenba", "id": 2286826, "node_id": "MDQ6VXNlcjIyODY4MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2286826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtenenba", "html_url": "https://github.com/dtenenba", "followers_url": "https://api.github.com/users/dtenenba/followers", "following_url": "https://api.github.com/users/dtenenba/following{/other_user}", "gists_url": "https://api.github.com/users/dtenenba/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtenenba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtenenba/subscriptions", "organizations_url": "https://api.github.com/users/dtenenba/orgs", "repos_url": "https://api.github.com/users/dtenenba/repos", "events_url": "https://api.github.com/users/dtenenba/events{/privacy}", "received_events_url": "https://api.github.com/users/dtenenba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226929, "node_id": "MDU6TGFiZWwyMjY5Mjk=", "url": "https://api.github.com/repos/amoffat/sh/labels/bug", "name": "bug", "color": "d7e102", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-27T20:28:18Z", "updated_at": "2020-04-25T23:18:48Z", "closed_at": "2020-04-25T23:18:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to do the python sh equivalent of:\r\n\r\n```\r\necho hello | gzip > file.gz\r\n```\r\n\r\nHere's my attempt:\r\n\r\n```python\r\nimport sh\r\n\r\nsh.gzip(sh.echo(\"hello\", _piped=True), _out=\"file.gz\")\r\n```\r\n\r\nand the result:\r\n\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nErrorReturnCode_1                         Traceback (most recent call last)\r\n<ipython-input-16-17a5c91e2a9a> in <module>()\r\n----> 1 sh.gzip(sh.echo(\"hello\", _piped=True), _out=\"file.gz\")\r\n\r\n~/envs/sra-pipeline-i02dZRQF/lib/python3.6/site-packages/sh.py in __call__(self, *args, **kwargs)\r\n   1425             stderr = open(str(stderr), \"wb\")\r\n   1426\r\n-> 1427         return RunningCommand(cmd, call_args, stdin, stdout, stderr)\r\n   1428\r\n   1429\r\n\r\n~/envs/sra-pipeline-i02dZRQF/lib/python3.6/site-packages/sh.py in __init__(self, cmd, call_args, stdin, stdout, stderr)\r\n    772\r\n    773             if should_wait:\r\n--> 774                 self.wait()\r\n    775\r\n    776\r\n\r\n~/envs/sra-pipeline-i02dZRQF/lib/python3.6/site-packages/sh.py in wait(self)\r\n    790\r\n    791             else:\r\n--> 792                 self.handle_command_exit_code(exit_code)\r\n    793\r\n    794                 # if an iterable command is using an instance of OProc for its stdin,\r\n\r\n~/envs/sra-pipeline-i02dZRQF/lib/python3.6/site-packages/sh.py in handle_command_exit_code(self, code)\r\n    813             exc = exc_class(self.ran, self.process.stdout, self.process.stderr,\r\n    814                     ca[\"truncate_exc\"])\r\n--> 815             raise exc\r\n    816\r\n    817\r\n\r\nErrorReturnCode_1:\r\n\r\n  RAN: /usr/bin/gzip\r\n\r\n  STDOUT:\r\n\r\n\r\n  STDERR:\r\ngzip: standard output is a terminal -- ignoring\r\n\r\n```\r\n\r\nIt says standard out is a terminal, yet I explicitly set `_out` to be a filename.\r\n\r\nWhat am I doing wrong?\r\n\r\nThis is with sh 1.12.14 and python 3.6.0 on macOS High Sierra 10.13.6 (17G65).\r\n\r\n**UPDATE**: Figured it out, you have to pass the `-f` flag to gzip to tell it to compress anyway, even if (it thinks) that standard output is a terminal:\r\n\r\n\r\n```python\r\nimport sh\r\n\r\nsh.gzip(sh.echo(\"hello\", _piped=True), \"-f\", _out=\"file.gz\")\r\n```\r\n\r\nNot sure if this is a bug in `sh` or not. Leaving this here in case others run into the same problem. \r\nIf it's not an `sh` bug you can close it. I guess I expected the presence of `_out` would somehow clue the `gzip` process into knowing it's writing to a file.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/446", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/446/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/446/events", "html_url": "https://github.com/amoffat/sh/issues/446", "id": 350054005, "node_id": "MDU6SXNzdWUzNTAwNTQwMDU=", "number": 446, "title": "`TimeoutException` does not subclasses ", "user": {"login": "honnix", "id": 158892, "node_id": "MDQ6VXNlcjE1ODg5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/158892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honnix", "html_url": "https://github.com/honnix", "followers_url": "https://api.github.com/users/honnix/followers", "following_url": "https://api.github.com/users/honnix/following{/other_user}", "gists_url": "https://api.github.com/users/honnix/gists{/gist_id}", "starred_url": "https://api.github.com/users/honnix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honnix/subscriptions", "organizations_url": "https://api.github.com/users/honnix/orgs", "repos_url": "https://api.github.com/users/honnix/repos", "events_url": "https://api.github.com/users/honnix/events{/privacy}", "received_events_url": "https://api.github.com/users/honnix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 227580, "node_id": "MDU6TGFiZWwyMjc1ODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/docs", "name": "docs", "color": "02e10c", "default": false, "description": null}, {"id": 226928, "node_id": "MDU6TGFiZWwyMjY5Mjg=", "url": "https://api.github.com/repos/amoffat/sh/labels/feature", "name": "feature", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-13T14:28:39Z", "updated_at": "2020-04-27T08:45:19Z", "closed_at": "2020-04-26T21:06:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`TimeoutException` doesn't seem to subclass `ErrorReturnCode` as documented, see https://github.com/amoffat/sh/blob/master/sh.py#L394\r\n\r\nWould be good to make it a subclass of `ErrorReturnCode` so that when catching this exception, `full_cmd` is available for logging purpose.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/445", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/445/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/445/events", "html_url": "https://github.com/amoffat/sh/issues/445", "id": 349777194, "node_id": "MDU6SXNzdWUzNDk3NzcxOTQ=", "number": 445, "title": "Put documentation on read the docs", "user": {"login": "jrwrigh", "id": 20801821, "node_id": "MDQ6VXNlcjIwODAxODIx", "avatar_url": "https://avatars1.githubusercontent.com/u/20801821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrwrigh", "html_url": "https://github.com/jrwrigh", "followers_url": "https://api.github.com/users/jrwrigh/followers", "following_url": "https://api.github.com/users/jrwrigh/following{/other_user}", "gists_url": "https://api.github.com/users/jrwrigh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrwrigh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrwrigh/subscriptions", "organizations_url": "https://api.github.com/users/jrwrigh/orgs", "repos_url": "https://api.github.com/users/jrwrigh/repos", "events_url": "https://api.github.com/users/jrwrigh/events{/privacy}", "received_events_url": "https://api.github.com/users/jrwrigh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-12T01:55:36Z", "updated_at": "2018-08-12T20:50:13Z", "closed_at": "2018-08-12T20:50:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "...or put it somewhere where I don't have to download and compile files. \r\n\r\nI'm sure it's easy to compile the documentation together, but I'm just trying to figure out what the package can do. I'm not going to download and compile documentation for something I'm not even sure I'll use.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/444", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/444/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/444/events", "html_url": "https://github.com/amoffat/sh/issues/444", "id": 348378270, "node_id": "MDU6SXNzdWUzNDgzNzgyNzA=", "number": 444, "title": "Improve autocomplete in Python 3.7 using the new module level `__dir__` and `__getattr__`", "user": {"login": "scardine", "id": 1397214, "node_id": "MDQ6VXNlcjEzOTcyMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1397214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scardine", "html_url": "https://github.com/scardine", "followers_url": "https://api.github.com/users/scardine/followers", "following_url": "https://api.github.com/users/scardine/following{/other_user}", "gists_url": "https://api.github.com/users/scardine/gists{/gist_id}", "starred_url": "https://api.github.com/users/scardine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scardine/subscriptions", "organizations_url": "https://api.github.com/users/scardine/orgs", "repos_url": "https://api.github.com/users/scardine/repos", "events_url": "https://api.github.com/users/scardine/events{/privacy}", "received_events_url": "https://api.github.com/users/scardine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T15:41:09Z", "updated_at": "2020-04-25T13:39:24Z", "closed_at": "2020-04-25T13:39:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would love to be able to type `sh.<TAB>` at the Jupyter/IDE prompt and get a nice list of every executable in `$PATH`.\r\n\r\nPython 3.7 introduced [dynamic module attributes](https://docs.python.org/3/whatsnew/3.7.html#pep-562-customization-of-access-to-module-attributes). Using this feature we can improve autocomplete for the `sh` module. If you think this is a good idea I can send a PR.\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/443", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/443/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/443/events", "html_url": "https://github.com/amoffat/sh/issues/443", "id": 347378719, "node_id": "MDU6SXNzdWUzNDczNzg3MTk=", "number": 443, "title": "How can I run a full command given as string using sh.py?", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-03T12:33:14Z", "updated_at": "2018-08-03T17:06:33Z", "closed_at": "2018-08-03T17:06:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say the user of my script passes a command to my script via a command line argument. Is there a convenient way to run that command using sh.py? The problem is that the string might contain quoted sequences that should not be split, so I cannot just do\r\n\r\n```python\r\ncommand = \"git commit -m 'Hello World'\"  # Passed into my script as string.\r\nchunks = command.split()  # This incorrectly splits Hello and World apart.\r\nsh.Command(chunks[0])(*chunks[1:])  # As a result, this command fails.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/442", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/442/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/442/events", "html_url": "https://github.com/amoffat/sh/issues/442", "id": 344783178, "node_id": "MDU6SXNzdWUzNDQ3ODMxNzg=", "number": 442, "title": "How to avoid crash when resizing the terminal window?", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463409280, "node_id": "MDU6TGFiZWw0NjM0MDkyODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/cant%20reproduce", "name": "cant reproduce", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T10:18:58Z", "updated_at": "2020-04-25T08:57:01Z", "closed_at": "2020-04-25T08:57:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Python script that runs several commands using sh.py with `_fg=True`. When resizing the terminal window while the script is running, it crashes with this stack trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  ...\r\n  File \"/home/danijar/.local/lib/python2.7/site-packages/sh.py\", line 1404, in __call__\r\n    exit_code = launch()\r\n  File \"/home/danijar/.local/lib/python2.7/site-packages/sh.py\", line 1400, in <lambda>\r\n    launch = lambda: os.spawnv(os.P_WAIT, cmd[0], cmd)\r\n  File \"/usr/lib/python2.7/os.py\", line 565, in spawnv\r\n    return _spawnvef(mode, file, args, None, execv)\r\n  File \"/usr/lib/python2.7/os.py\", line 548, in _spawnvef\r\n    wpid, sts = waitpid(pid, 0)\r\nOSError: [Errno 4] Interrupted system call\r\n```\r\n\r\nHow can I avoid the script from crashing when the terminal window is resized? Is this expected?\r\n\r\nI'm using Ubuntu with urxvt-unicode terminal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/440", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/440/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/440/events", "html_url": "https://github.com/amoffat/sh/issues/440", "id": 338339544, "node_id": "MDU6SXNzdWUzMzgzMzk1NDQ=", "number": 440, "title": "Overriding default arguments for all command fails", "user": {"login": "hirenvadalia", "id": 17191391, "node_id": "MDQ6VXNlcjE3MTkxMzkx", "avatar_url": "https://avatars2.githubusercontent.com/u/17191391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hirenvadalia", "html_url": "https://github.com/hirenvadalia", "followers_url": "https://api.github.com/users/hirenvadalia/followers", "following_url": "https://api.github.com/users/hirenvadalia/following{/other_user}", "gists_url": "https://api.github.com/users/hirenvadalia/gists{/gist_id}", "starred_url": "https://api.github.com/users/hirenvadalia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hirenvadalia/subscriptions", "organizations_url": "https://api.github.com/users/hirenvadalia/orgs", "repos_url": "https://api.github.com/users/hirenvadalia/repos", "events_url": "https://api.github.com/users/hirenvadalia/events{/privacy}", "received_events_url": "https://api.github.com/users/hirenvadalia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-04T17:05:12Z", "updated_at": "2020-04-25T17:33:11Z", "closed_at": "2020-04-25T17:33:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "As mentioned in https://amoffat.github.io/sh/sections/default_arguments.html#default-arguments, overriding default arguments for all further command fails as below:\r\n```python\r\n>>> import sh\r\n>>> from io import StringIO\r\n>>> buf = StringIO()\r\n>>> sh2 = sh(_out=buf)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/sh.py\", line 3367, in __call__\r\n    code = parent[4][0].strip()\r\nTypeError: 'NoneType' object has no attribute '__getitem__'\r\n>>> \r\n```\r\n\r\nAnd after adding below two line at 3368 (after `parent = inspect.stack()[1])` it worked:\r\n```\r\nif parent[4] is None:\r\n    return new_mod\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/439", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/439/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/439/events", "html_url": "https://github.com/amoffat/sh/issues/439", "id": 335285750, "node_id": "MDU6SXNzdWUzMzUyODU3NTA=", "number": 439, "title": "Can not pickle errors", "user": {"login": "wichert", "id": 199657, "node_id": "MDQ6VXNlcjE5OTY1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/199657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wichert", "html_url": "https://github.com/wichert", "followers_url": "https://api.github.com/users/wichert/followers", "following_url": "https://api.github.com/users/wichert/following{/other_user}", "gists_url": "https://api.github.com/users/wichert/gists{/gist_id}", "starred_url": "https://api.github.com/users/wichert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wichert/subscriptions", "organizations_url": "https://api.github.com/users/wichert/orgs", "repos_url": "https://api.github.com/users/wichert/repos", "events_url": "https://api.github.com/users/wichert/events{/privacy}", "received_events_url": "https://api.github.com/users/wichert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-25T07:15:47Z", "updated_at": "2020-04-25T13:32:47Z", "closed_at": "2020-04-25T13:32:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using sh in a celery task. When an exception is thrown in that context it needs to be pickled by celery so it can be re-raised in another task. This does not work with sh. Here is a simple script to test pickling:\r\n\r\n```python\r\nimport sh\r\nimport pickle\r\n\r\ntry:\r\n    sh.false()\r\nexcept sh.ErrorReturnCode as e:\r\n    pck = pickle.dumps(e)\r\n    exc = pickle.loads(pck)\r\n```\r\n\r\nThis aborts with the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"c.py\", line 9, in <module>\r\n    exc = pickle.loads(pck)\r\nTypeError: __init__() missing 2 required positional arguments: 'stdout' and 'stderr'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/437", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/437/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/437/events", "html_url": "https://github.com/amoffat/sh/issues/437", "id": 329701119, "node_id": "MDU6SXNzdWUzMjk3MDExMTk=", "number": 437, "title": "calling a command with a dash in the name via sudo", "user": {"login": "carlwgeorge", "id": 12187228, "node_id": "MDQ6VXNlcjEyMTg3MjI4", "avatar_url": "https://avatars2.githubusercontent.com/u/12187228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlwgeorge", "html_url": "https://github.com/carlwgeorge", "followers_url": "https://api.github.com/users/carlwgeorge/followers", "following_url": "https://api.github.com/users/carlwgeorge/following{/other_user}", "gists_url": "https://api.github.com/users/carlwgeorge/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlwgeorge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlwgeorge/subscriptions", "organizations_url": "https://api.github.com/users/carlwgeorge/orgs", "repos_url": "https://api.github.com/users/carlwgeorge/repos", "events_url": "https://api.github.com/users/carlwgeorge/events{/privacy}", "received_events_url": "https://api.github.com/users/carlwgeorge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-06T03:51:51Z", "updated_at": "2018-06-06T13:21:20Z", "closed_at": "2018-06-06T13:21:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working on a script that will call the command `yum-builddep`.  When running the entire script as root, it works as documented with an underscore.\r\n\r\n```\r\nsh.yum_builddep('--assumeyes', srpm_file)\r\n```\r\n\r\nI would like to run this script as a non-root user that has password-less sudo permissions.  I thought this would work:\r\n\r\n```\r\nsh.sudo.yum_builddep('--assumeyes', srpm_file)\r\n```\r\n\r\nBut instead, I get an error that the command `yum_builddep` is not found.  Would it be possible to implement the underscore to dash logic on commands passed to sudo?\r\n\r\nI think this may be related to #230, but it's not really about dashes in subcommands, so I decided to go with a new issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/436", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/436/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/436/events", "html_url": "https://github.com/amoffat/sh/issues/436", "id": 329233375, "node_id": "MDU6SXNzdWUzMjkyMzMzNzU=", "number": 436, "title": "ssh contrib command", "user": {"login": "gergelyk", "id": 11185582, "node_id": "MDQ6VXNlcjExMTg1NTgy", "avatar_url": "https://avatars3.githubusercontent.com/u/11185582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gergelyk", "html_url": "https://github.com/gergelyk", "followers_url": "https://api.github.com/users/gergelyk/followers", "following_url": "https://api.github.com/users/gergelyk/following{/other_user}", "gists_url": "https://api.github.com/users/gergelyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/gergelyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gergelyk/subscriptions", "organizations_url": "https://api.github.com/users/gergelyk/orgs", "repos_url": "https://api.github.com/users/gergelyk/repos", "events_url": "https://api.github.com/users/gergelyk/events{/privacy}", "received_events_url": "https://api.github.com/users/gergelyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-04T22:04:10Z", "updated_at": "2020-04-24T11:06:28Z", "closed_at": "2020-04-24T11:06:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering how to implement an ssh contrib command that could preserve session. This way commands could be executed faster, without reconnecting each time. Also \"remote.pushd\" could be used, while currently it takes no effect when \"remote\" is a baked ssh as in the example.\r\n\r\nDo you have any suggestions? Have you already worked on this implementation?\r\n\r\nMy current idea is based on using paramiko, wrapping it with an adapter and using this adapter as a backend for my customized ssh command. Do you see any potential obstacles or misunderstandings in my point of view? Any suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/435", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/435/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/435/events", "html_url": "https://github.com/amoffat/sh/issues/435", "id": 323531926, "node_id": "MDU6SXNzdWUzMjM1MzE5MjY=", "number": 435, "title": "ErrorReturnCode.full_cmd behaves deceptively.", "user": {"login": "AIJIJI", "id": 26321303, "node_id": "MDQ6VXNlcjI2MzIxMzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/26321303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AIJIJI", "html_url": "https://github.com/AIJIJI", "followers_url": "https://api.github.com/users/AIJIJI/followers", "following_url": "https://api.github.com/users/AIJIJI/following{/other_user}", "gists_url": "https://api.github.com/users/AIJIJI/gists{/gist_id}", "starred_url": "https://api.github.com/users/AIJIJI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AIJIJI/subscriptions", "organizations_url": "https://api.github.com/users/AIJIJI/orgs", "repos_url": "https://api.github.com/users/AIJIJI/repos", "events_url": "https://api.github.com/users/AIJIJI/events{/privacy}", "received_events_url": "https://api.github.com/users/AIJIJI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-16T09:08:38Z", "updated_at": "2020-04-25T14:01:45Z", "closed_at": "2020-04-25T14:01:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "(Sorry I'm not a native English speaker so please ignore grammar and typo)\r\n***\r\nPlatfom: `CentOS 7.4.1708` + `Python 3.8.0` + `sh 1.12.14` + `Python 2.7.9`\r\n***\r\nAfter I run a command and it returns non-zero value, I try to watch the ErrorReturnCode.full_cmd for debug. But strange thing happens when I pass an `str` parameter with space in them like this:\r\n```python3\r\ntry:\r\n    sh.python2('-t', 'print 3')  # Use a wrong -t option to raise ErrorReturnCode\r\nexcept ErrorReturnCode as e:\r\n    print(e.full_cmd)\r\n``` \r\nYou will get this:\r\n`/usr/bin/python2 -t print 3`\r\nHowever the right format seems to be\r\n`/usr/bin/python2 -t 'print 3'`\r\nThis confused me until I figure out how `subprocess.Popen()` works - the space don't separates the args. So should it be mentioned in document or just enclose the arguement if it contains any space?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/434", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/434/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/434/events", "html_url": "https://github.com/amoffat/sh/issues/434", "id": 322725804, "node_id": "MDU6SXNzdWUzMjI3MjU4MDQ=", "number": 434, "title": "Terminate a background process launched with sudo?", "user": {"login": "pavja2", "id": 1340709, "node_id": "MDQ6VXNlcjEzNDA3MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1340709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavja2", "html_url": "https://github.com/pavja2", "followers_url": "https://api.github.com/users/pavja2/followers", "following_url": "https://api.github.com/users/pavja2/following{/other_user}", "gists_url": "https://api.github.com/users/pavja2/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavja2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavja2/subscriptions", "organizations_url": "https://api.github.com/users/pavja2/orgs", "repos_url": "https://api.github.com/users/pavja2/repos", "events_url": "https://api.github.com/users/pavja2/events{/privacy}", "received_events_url": "https://api.github.com/users/pavja2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463409280, "node_id": "MDU6TGFiZWw0NjM0MDkyODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/cant%20reproduce", "name": "cant reproduce", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-14T08:53:12Z", "updated_at": "2020-04-26T02:59:01Z", "closed_at": "2020-04-26T02:59:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get a permissions error when attempting to terminate a background process using sudo, even when I try to terminate the process (using RunningCommand.terminate()) from within a sudo context. For example:\r\n```\r\n    with sh.contrib.sudo(password='secret', _with=True):\r\n        p = sh.background_task(_bg=True)\r\n    with sh.contrib.sudo(password='secret', _with=True):\r\n        p.terminate()\r\n```\r\nGives me \"PermissionError: [Errno 1] Operation not permitted\". Is there a better way to kill a process that was spawned as root?\r\n\r\n**Hackish workaround**\r\nI can kill the process in a less cosmetic way by using the bash kill command and swallowing the resultant exception from the background process like this:\r\n```\r\n    with sh.contrib.sudo(password='secret', _with=True):\r\n        p = sh.background_task(_bg=True, _bg_exc=False)\r\n    with sh.contrib.sudo(password='secret', _with=True):\r\n        sh.kill(p.pid)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/432", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/432/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/432/events", "html_url": "https://github.com/amoffat/sh/issues/432", "id": 320426139, "node_id": "MDU6SXNzdWUzMjA0MjYxMzk=", "number": 432, "title": "documentation for sudo contrib is wrong", "user": {"login": "rsyring", "id": 109467, "node_id": "MDQ6VXNlcjEwOTQ2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/109467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsyring", "html_url": "https://github.com/rsyring", "followers_url": "https://api.github.com/users/rsyring/followers", "following_url": "https://api.github.com/users/rsyring/following{/other_user}", "gists_url": "https://api.github.com/users/rsyring/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsyring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsyring/subscriptions", "organizations_url": "https://api.github.com/users/rsyring/orgs", "repos_url": "https://api.github.com/users/rsyring/repos", "events_url": "https://api.github.com/users/rsyring/events{/privacy}", "received_events_url": "https://api.github.com/users/rsyring/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-04T20:53:47Z", "updated_at": "2019-11-25T23:09:02Z", "closed_at": "2019-11-25T23:09:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently it gives the example:\r\n\r\nhttps://github.com/amoffat/sh/blob/6d2382651f048f756885ea1c788c6376de921868/_sources/sections/sudo.txt#L73\r\n\r\nBut the correct call is actually:\r\n\r\n```python\r\n\r\nwith sh.contrib.sudo(password=password, _with=True): \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/429", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/429/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/429/events", "html_url": "https://github.com/amoffat/sh/issues/429", "id": 312455675, "node_id": "MDU6SXNzdWUzMTI0NTU2NzU=", "number": 429, "title": "docstring inconsistent with `OProc.__init__`", "user": {"login": "YannLuo", "id": 30798866, "node_id": "MDQ6VXNlcjMwNzk4ODY2", "avatar_url": "https://avatars1.githubusercontent.com/u/30798866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YannLuo", "html_url": "https://github.com/YannLuo", "followers_url": "https://api.github.com/users/YannLuo/followers", "following_url": "https://api.github.com/users/YannLuo/following{/other_user}", "gists_url": "https://api.github.com/users/YannLuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/YannLuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YannLuo/subscriptions", "organizations_url": "https://api.github.com/users/YannLuo/orgs", "repos_url": "https://api.github.com/users/YannLuo/repos", "events_url": "https://api.github.com/users/YannLuo/events{/privacy}", "received_events_url": "https://api.github.com/users/YannLuo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-09T09:22:41Z", "updated_at": "2020-04-25T15:21:06Z", "closed_at": "2020-04-25T15:21:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nI'm doing some research of document inconsistence.\r\nI run \r\n```\r\nmonkeytype run `which pytest`\r\n```\r\nAnd find that `OProc.__init__` receives parameter `cmd` as type `List`, while the docstring says `cmd is the full string that will be exec'd`.\r\n\r\nAnd I also noticed that `RunningCommand.__init__` also receives a parameter named `cmd` with type `List`, which is consistent with its docstring `cmd is an array`.\r\n\r\nI wonder weather it should be regard as an document inconsistence ? And it will be fine if you can modify inconsistent docstring :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/428", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/428/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/428/events", "html_url": "https://github.com/amoffat/sh/issues/428", "id": 312195305, "node_id": "MDU6SXNzdWUzMTIxOTUzMDU=", "number": 428, "title": "Sub processes continue running after KeyboardInterrupt", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-07T10:25:56Z", "updated_at": "2018-07-26T10:21:07Z", "closed_at": "2018-04-10T15:27:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "This can be reproduced with any shell command that returns output after a while. Run this script and immediately kill it with <kbd>Ctrl</kbd>+<kbd>C</kbd>.\r\n\r\n```py\r\n# sh_keyboard_interrupt.py\r\nimport sys, sh\r\nsh.Command('time')('sleep', 5, _out=sys.stdout, _err=sys.stderr)\r\n```\r\n\r\nThe Python interpreter prints the exception and terminates so the new shell prompt `$` shows up. A few seconds later, the `time` command finishes and prints its result into that line.\r\n\r\n```\r\n$ python sh_keyboard_interrupt.py\r\n^CTraceback (most recent call last):\r\n  File \"script/sh_keyboard_interrupt.py\", line 2, in <module>\r\n    sh.Command('time')('sleep', 5, _out=sys.stdout, _err=sys.stderr)\r\n  File \"/usr/local/google/home/danijar/.local/lib/python2.7/site-packages/sh.py\", line 1427, in __call__\r\n    return RunningCommand(cmd, call_args, stdin, stdout, stderr)\r\n  File \"/usr/local/google/home/danijar/.local/lib/python2.7/site-packages/sh.py\", line 774, in __init__\r\n    self.wait()\r\n  File \"/usr/local/google/home/danijar/.local/lib/python2.7/site-packages/sh.py\", line 784, in wait\r\n    exit_code = self.process.wait()\r\n  File \"/usr/local/google/home/danijar/.local/lib/python2.7/site-packages/sh.py\", line 2358, in wait\r\n    pid, exit_code = no_interrupt(os.waitpid, self.pid, 0) # blocks\r\n  File \"/usr/local/google/home/danijar/.local/lib/python2.7/site-packages/sh.py\", line 1666, in no_interrupt\r\n    ret = syscall(*args, **kwargs)\r\nKeyboardInterrupt\r\n$ 0.00user 0.00system 0:05.00elapsed 0%CPU (0avgtext+0avgdata 1808maxresident)k\r\n0inputs+0outputs (0major+89minor)pagefaults 0swaps\r\n```\r\n\r\nI would like the `KeyboardException` to also kill all running sub processes. Is this expected behavior and is there a way around this?\r\n\r\nI'm on Ubuntu 16 with Zsh and I replicated this with Python 2/3.5/3.6.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/427", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/427/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/427/events", "html_url": "https://github.com/amoffat/sh/issues/427", "id": 311919494, "node_id": "MDU6SXNzdWUzMTE5MTk0OTQ=", "number": 427, "title": "sh hangs on an explicitly empty _in", "user": {"login": "jorisroovers", "id": 575086, "node_id": "MDQ6VXNlcjU3NTA4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/575086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisroovers", "html_url": "https://github.com/jorisroovers", "followers_url": "https://api.github.com/users/jorisroovers/followers", "following_url": "https://api.github.com/users/jorisroovers/following{/other_user}", "gists_url": "https://api.github.com/users/jorisroovers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisroovers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisroovers/subscriptions", "organizations_url": "https://api.github.com/users/jorisroovers/orgs", "repos_url": "https://api.github.com/users/jorisroovers/repos", "events_url": "https://api.github.com/users/jorisroovers/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisroovers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-04-06T10:05:59Z", "updated_at": "2020-04-25T15:09:20Z", "closed_at": "2020-04-25T15:09:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThanks for providing ```sh```, I'm a happy user of it in my own little hobby project ([gitlint](https://github.com/jorisroovers/gitlint)).\r\n\r\nI've ran into the following issue.\r\n\r\nWhen trying to pass explicitely empty stdin input like so:\r\n\r\n```python\r\nfrom sh import cat\r\n\r\ncat(_in=\"\")\r\n# or\r\ncat(_in=None)\r\n```\r\n\r\nThen ```sh``` will hang (I suspect it's waiting for input).\r\n\r\nI understand you can work around this like so:\r\n```python\r\nfrom sh import cat\r\n\r\nmyvar=\"...\" # result of fancy business logic\r\nif myvar is None or myvar == \"\":\r\n    cat()\r\nelse:\r\n    cat(_in=myvar)\r\n```\r\n\r\nBut I'd argue that ```sh``` should be able to deal with this natively, since I'd think it's quite common to do some other business logic that results in something passed into ```sh``` via ```_in```. That input might be empty.\r\n\r\nIn addition, if the application that you're calling actually checks whether or not it's receiving data on stdin (e.g. ```len(stdin.read())==0```), then you can't invoke this behavior with ```sh``` without using a work-around like so:\r\n\r\n```python\r\nfrom sh import cat\r\n\r\nclass MockStdin():\r\n    def read(self, size):\r\n        # ignore size, just return empty stdin data\r\n        return\r\ncat(_in=MockStdin())\r\n```\r\n\r\nI've done a little bit of digging on how to solve this in ```sh```, and I think the issue starts here:\r\nhttps://github.com/amoffat/sh/blob/master/sh.py#L2023\r\n\r\nsince ```self.stdin = stdin or Queue()``` will always result in ```self.stdin=Queue()``` if ```stdin``` is ```None``` or an empty string.\r\n\r\nHowever, just adding an extra if statement to deal with this case isn't enough to fix this - and I'm not familiar enough with the ```sh``` codebase to know what the best approach to this would be.\r\n\r\nInterested to hear your thoughts :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/426", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/426/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/426/events", "html_url": "https://github.com/amoffat/sh/issues/426", "id": 311828834, "node_id": "MDU6SXNzdWUzMTE4Mjg4MzQ=", "number": 426, "title": "paths in $PATH not shell expanded", "user": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-06T02:23:10Z", "updated_at": "2020-04-25T12:43:13Z", "closed_at": "2020-04-25T12:43:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "If an entry in your environment $PATH contains a tilde, it isn't expanded before the path is searched to lookup a command.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/425", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/425/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/425/events", "html_url": "https://github.com/amoffat/sh/issues/425", "id": 309535953, "node_id": "MDU6SXNzdWUzMDk1MzU5NTM=", "number": 425, "title": "Using wildcards", "user": {"login": "mschier", "id": 29360036, "node_id": "MDQ6VXNlcjI5MzYwMDM2", "avatar_url": "https://avatars1.githubusercontent.com/u/29360036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschier", "html_url": "https://github.com/mschier", "followers_url": "https://api.github.com/users/mschier/followers", "following_url": "https://api.github.com/users/mschier/following{/other_user}", "gists_url": "https://api.github.com/users/mschier/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschier/subscriptions", "organizations_url": "https://api.github.com/users/mschier/orgs", "repos_url": "https://api.github.com/users/mschier/repos", "events_url": "https://api.github.com/users/mschier/events{/privacy}", "received_events_url": "https://api.github.com/users/mschier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-28T21:19:48Z", "updated_at": "2018-03-29T20:51:43Z", "closed_at": "2018-03-29T20:51:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I might have missed it somewhere, but is it right that I can't use wildcards in the arguments?\r\nif I runs something like `sh.cd('*')` I get an error like this `FileNotFoundError: [Errno 2] No such file or directory: '*'`, where I would expect to get an error along the lines of `bash: cd: too many arguments`.\r\nAm I not escaping it right or something?\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/424", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/424/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/424/events", "html_url": "https://github.com/amoffat/sh/issues/424", "id": 303608429, "node_id": "MDU6SXNzdWUzMDM2MDg0Mjk=", "number": 424, "title": "security issues as reported by 'bandit'", "user": {"login": "chinchani", "id": 33333142, "node_id": "MDQ6VXNlcjMzMzMzMTQy", "avatar_url": "https://avatars2.githubusercontent.com/u/33333142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinchani", "html_url": "https://github.com/chinchani", "followers_url": "https://api.github.com/users/chinchani/followers", "following_url": "https://api.github.com/users/chinchani/following{/other_user}", "gists_url": "https://api.github.com/users/chinchani/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinchani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinchani/subscriptions", "organizations_url": "https://api.github.com/users/chinchani/orgs", "repos_url": "https://api.github.com/users/chinchani/repos", "events_url": "https://api.github.com/users/chinchani/events{/privacy}", "received_events_url": "https://api.github.com/users/chinchani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-08T19:49:42Z", "updated_at": "2020-04-25T13:35:52Z", "closed_at": "2020-04-25T13:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "[main]  INFO    profile include tests: None  \r\n[main]  INFO    profile exclude tests: None  \r\n[main]  INFO    cli include tests: None      \r\n[main]  INFO    cli exclude tests: None      \r\n[main]  INFO    running on Python 3.6.3      \r\nRun started:2018-03-08 12:32:40.819211       \r\n\r\nTest results:                                \r\n>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.          \r\n   Severity: Low   Confidence: Medium        \r\n   Location: sh/sh.py:1400                   \r\n1399                if call_args[\"env\"] is None:                                          \r\n1400                    launch = lambda: os.spawnv(os.P_WAIT, cmd[0], cmd)                \r\n1401                else:                    \r\n\r\n--------------------------------------------------                                        \r\n>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.          \r\n   Severity: Low   Confidence: Medium        \r\n   Location: sh/sh.py:1402                   \r\n1401                else:                    \r\n1402                    launch = lambda: os.spawnve(os.P_WAIT, cmd[0], cmd, call_args[\"env\"])                                                                                       \r\n1403                                         \r\n\r\n--------------------------------------------------                                        \r\n>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.          \r\n   Severity: Low   Confidence: Medium        \r\n   Location: sh/sh.py:1960                   \r\n1959                    if ca[\"env\"] is None:                                             \r\n1960                        os.execv(cmd[0], cmd)                                         \r\n1961                    else:                \r\n\r\n--------------------------------------------------                                        \r\n>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.          \r\n   Severity: Low   Confidence: Medium        \r\n   Location: sh/sh.py:1962                   \r\n1961                    else:                \r\n1962                        os.execve(cmd[0], cmd, ca[\"env\"])                            \r\n1963    \r\n\r\n--------------------------------------------------\r\n>> Issue: [B102:exec_used] Use of exec detected.\r\n   Severity: Medium   Confidence: High\r\n   Location: sh/sh.py:3316\r\n3315            try:\r\n3316                exec(compile(line, \"<dummy>\", \"single\"), env, env)\r\n3317            except SystemExit:\r\n\r\n--------------------------------------------------\r\n>> Issue: [B606:start_process_with_no_shell] Starting a process without a shell.\r\n   Severity: Low   Confidence: Medium\r\n   Location: sh/sh.py:3491\r\n3490            cmd = [py_bin, \"-W\", \"ignore\", os.path.join(THIS_DIR, \"test.py\")] + args[1:]\r\n3491            launch = lambda: os.spawnve(os.P_WAIT, cmd[0], cmd, env)\r\n3492            return_code = launch()\r\n\r\n--------------------------------------------------\r\n>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.\r\n   Severity: Low   Confidence: High\r\n   Location: sh/test.py:212\r\n211     \r\n212                 assert len(w) == 1\r\n213                 assert issubclass(w[-1].category, DeprecationWarning)\r\n\r\n--------------------------------------------------\r\n>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.\r\n   Severity: Low   Confidence: High\r\n   Location: sh/test.py:213\r\n212                 assert len(w) == 1\r\n213                 assert issubclass(w[-1].category, DeprecationWarning)\r\n214     \r\n\r\n--------------------------------------------------\r\n>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.\r\n   Severity: Medium   Confidence: Medium\r\n   Location: sh/test.py:1681\r\n1680            from os.path import realpath\r\n1681            self.assertEqual(str(pwd(_cwd=\"/tmp\")), realpath(\"/tmp\") + \"\\n\")\r\n1682            self.assertEqual(str(pwd(_cwd=\"/etc\")), realpath(\"/etc\") + \"\\n\")\r\n\r\n--------------------------------------------------\r\n>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.\r\n   Severity: Medium   Confidence: Medium\r\n   Location: sh/test.py:1681\r\n1680            from os.path import realpath\r\n1681            self.assertEqual(str(pwd(_cwd=\"/tmp\")), realpath(\"/tmp\") + \"\\n\")\r\n1682            self.assertEqual(str(pwd(_cwd=\"/etc\")), realpath(\"/etc\") + \"\\n\")\r\n\r\n--------------------------------------------------\r\n>> Issue: [B102:exec_used] Use of exec detected.\r\n   Severity: Medium   Confidence: High\r\n   Location: sh/test.py:2647\r\n2646                # SyntaxError upon compilation\r\n2647                exec(\"from sh import *\")\r\n2648            self.assertRaises(RuntimeError, go)\r\n\r\n--------------------------------------------------\r\n\r\nCode scanned:\r\n        Total lines of code: 4519\r\n        Total lines skipped (#nosec): 0\r\n\r\nRun metrics:\r\n        Total issues (by severity):\r\n                Undefined: 0.0\r\n                Low: 7.0\r\n                Medium: 4.0\r\n                High: 0.0\r\n        Total issues (by confidence):\r\n                Undefined: 0.0\r\n                Low: 0.0\r\n                Medium: 7.0\r\n                High: 4.0\r\n                Files skipped (0):\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/423", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/423/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/423/events", "html_url": "https://github.com/amoffat/sh/issues/423", "id": 301967306, "node_id": "MDU6SXNzdWUzMDE5NjczMDY=", "number": 423, "title": "sh(_env=env) for bash scripts?", "user": {"login": "davisem", "id": 11969099, "node_id": "MDQ6VXNlcjExOTY5MDk5", "avatar_url": "https://avatars1.githubusercontent.com/u/11969099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davisem", "html_url": "https://github.com/davisem", "followers_url": "https://api.github.com/users/davisem/followers", "following_url": "https://api.github.com/users/davisem/following{/other_user}", "gists_url": "https://api.github.com/users/davisem/gists{/gist_id}", "starred_url": "https://api.github.com/users/davisem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davisem/subscriptions", "organizations_url": "https://api.github.com/users/davisem/orgs", "repos_url": "https://api.github.com/users/davisem/repos", "events_url": "https://api.github.com/users/davisem/events{/privacy}", "received_events_url": "https://api.github.com/users/davisem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-03T04:23:45Z", "updated_at": "2018-03-17T06:02:39Z", "closed_at": "2018-03-17T06:02:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now that #422 is resolved, another issue has come up. I've gotten this approach to work with other executables, i.e. loading different gcc compiler versions. But I can't get it to work with bash scripts. Something I'm not understanding?\r\n```\r\ncat myscript.sh\r\n#!/usr/bin/env bash\r\necho \"MYSCRIPT RAN\"\r\n```\r\n```\r\nimport sh\r\nimport os\r\n\r\nif __name__ == '__main__':\r\n    env = os.environ.copy()\r\n    env['PATH'] = '/home:' + env['PATH']\r\n    sh2 = sh(_env=env)\r\n    sh2.myscript.sh()\r\n```\r\n\r\n```Traceback (most recent call last):\r\n  File \"test_myscript.py\", line 8, in <module>\r\n    sh2.myscript.sh()\r\n  File \"/home/.local/lib/python3.5/site-packages/sh.py\", line 3349, in __getattr__\r\n    return self.__env[name]\r\n  File \"/home/.local/lib/python3.5/site-packages/sh.py\", line 3226, in __getitem__\r\n    raise CommandNotFound(k)\r\nsh.CommandNotFound: myscript\r\n```\r\n\r\nThe goal here is to be able to provision an environment from a config file, in python. And not have to use the `module load` system in hpc, which is an absolute nightmare imo.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/422", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/422/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/422/events", "html_url": "https://github.com/amoffat/sh/issues/422", "id": 301943184, "node_id": "MDU6SXNzdWUzMDE5NDMxODQ=", "number": 422, "title": "*** TypeError: 'NoneType' object is not subscriptable", "user": {"login": "davisem", "id": 11969099, "node_id": "MDQ6VXNlcjExOTY5MDk5", "avatar_url": "https://avatars1.githubusercontent.com/u/11969099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davisem", "html_url": "https://github.com/davisem", "followers_url": "https://api.github.com/users/davisem/followers", "following_url": "https://api.github.com/users/davisem/following{/other_user}", "gists_url": "https://api.github.com/users/davisem/gists{/gist_id}", "starred_url": "https://api.github.com/users/davisem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davisem/subscriptions", "organizations_url": "https://api.github.com/users/davisem/orgs", "repos_url": "https://api.github.com/users/davisem/repos", "events_url": "https://api.github.com/users/davisem/events{/privacy}", "received_events_url": "https://api.github.com/users/davisem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-02T23:59:34Z", "updated_at": "2020-04-25T12:03:46Z", "closed_at": "2020-04-25T12:03:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use the _env parameter (very cool btw), but am seeing this error:\r\n```\r\nPython 3.6.2 (default, Jul 17 2017, 16:44:45)\r\n[GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.42)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sh\r\n>>> from io import StringIO\r\n>>>\r\n>>> buf = StringIO()\r\n>>> sh2 = sh(_out=buf)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/site-packages/sh.py\", line 3367, in __call__\r\n    code = parent[4][0].strip()\r\nTypeError: 'NoneType' object is not subscriptable\r\n```\r\n\r\nI was also hoping I could do something like:\r\n```\r\n>>> my_env = {'PATH': 'somepath'}\r\n>>> sh2 = sh(_env=my_env)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/site-packages/sh.py\", line 3367, in __call__\r\n    code = parent[4][0].strip()\r\nTypeError: 'NoneType' object is not subscriptable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/421", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/421/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/421/events", "html_url": "https://github.com/amoffat/sh/issues/421", "id": 301542136, "node_id": "MDU6SXNzdWUzMDE1NDIxMzY=", "number": 421, "title": "Problem using private argument", "user": {"login": "elgow", "id": 11529401, "node_id": "MDQ6VXNlcjExNTI5NDAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11529401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elgow", "html_url": "https://github.com/elgow", "followers_url": "https://api.github.com/users/elgow/followers", "following_url": "https://api.github.com/users/elgow/following{/other_user}", "gists_url": "https://api.github.com/users/elgow/gists{/gist_id}", "starred_url": "https://api.github.com/users/elgow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elgow/subscriptions", "organizations_url": "https://api.github.com/users/elgow/orgs", "repos_url": "https://api.github.com/users/elgow/repos", "events_url": "https://api.github.com/users/elgow/events{/privacy}", "received_events_url": "https://api.github.com/users/elgow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-01T20:08:50Z", "updated_at": "2018-03-01T22:44:07Z", "closed_at": "2018-03-01T22:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "sorry, wrong repo. Nevermind\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/420", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/420/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/420/events", "html_url": "https://github.com/amoffat/sh/issues/420", "id": 299072413, "node_id": "MDU6SXNzdWUyOTkwNzI0MTM=", "number": 420, "title": "Piping and sudo", "user": {"login": "machinekoder", "id": 1467368, "node_id": "MDQ6VXNlcjE0NjczNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1467368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/machinekoder", "html_url": "https://github.com/machinekoder", "followers_url": "https://api.github.com/users/machinekoder/followers", "following_url": "https://api.github.com/users/machinekoder/following{/other_user}", "gists_url": "https://api.github.com/users/machinekoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/machinekoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/machinekoder/subscriptions", "organizations_url": "https://api.github.com/users/machinekoder/orgs", "repos_url": "https://api.github.com/users/machinekoder/repos", "events_url": "https://api.github.com/users/machinekoder/events{/privacy}", "received_events_url": "https://api.github.com/users/machinekoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-21T18:08:38Z", "updated_at": "2018-03-03T10:22:20Z", "closed_at": "2018-03-03T10:22:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to use piping and sudo in the same instance?\r\n\r\nFor example:\r\n```python\r\nwith sh.contrib.sudo:\r\n        sh.dd(sh.xzcat(filepath, _piped=True), 'of=%s' % drive)\r\n```\r\nfails with\r\n```\r\n  RAN: /usr/bin/sudo -S -k /bin/dd of=/dev/sdc\r\n\r\n  STDOUT:\r\n\r\n\r\n  STDERR:\r\n[sudo] password for alexander: Sorry, try again.\r\n[sudo] password for alexander: Sorry, try again.\r\n[sudo] password for alexander: sudo: 3 incorrect password attempts\r\n```\r\n\r\nbecause of course, we pipe to stdin\r\n\r\nAny ideas?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/419", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/419/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/419/events", "html_url": "https://github.com/amoffat/sh/issues/419", "id": 297461891, "node_id": "MDU6SXNzdWUyOTc0NjE4OTE=", "number": 419, "title": "EOF for queue should be documented", "user": {"login": "lgrahl", "id": 1793755, "node_id": "MDQ6VXNlcjE3OTM3NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1793755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgrahl", "html_url": "https://github.com/lgrahl", "followers_url": "https://api.github.com/users/lgrahl/followers", "following_url": "https://api.github.com/users/lgrahl/following{/other_user}", "gists_url": "https://api.github.com/users/lgrahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgrahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgrahl/subscriptions", "organizations_url": "https://api.github.com/users/lgrahl/orgs", "repos_url": "https://api.github.com/users/lgrahl/repos", "events_url": "https://api.github.com/users/lgrahl/events{/privacy}", "received_events_url": "https://api.github.com/users/lgrahl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-15T14:19:20Z", "updated_at": "2020-04-25T14:00:27Z", "closed_at": "2020-04-25T14:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running a background processes where data is being fed into `stdin` via a `queue.Queue` instance. The documentation doesn't mention how to indicate `EOF` and I had to dig into the code to find that `None` is being used for `EOF`. This should be documented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/418", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/418/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/418/events", "html_url": "https://github.com/amoffat/sh/issues/418", "id": 296916750, "node_id": "MDU6SXNzdWUyOTY5MTY3NTA=", "number": 418, "title": "_fg=True doesn't return the exit code", "user": {"login": "jeremysalwen", "id": 450638, "node_id": "MDQ6VXNlcjQ1MDYzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/450638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremysalwen", "html_url": "https://github.com/jeremysalwen", "followers_url": "https://api.github.com/users/jeremysalwen/followers", "following_url": "https://api.github.com/users/jeremysalwen/following{/other_user}", "gists_url": "https://api.github.com/users/jeremysalwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremysalwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremysalwen/subscriptions", "organizations_url": "https://api.github.com/users/jeremysalwen/orgs", "repos_url": "https://api.github.com/users/jeremysalwen/repos", "events_url": "https://api.github.com/users/jeremysalwen/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremysalwen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-02-13T22:58:37Z", "updated_at": "2020-04-25T15:50:30Z", "closed_at": "2020-04-25T15:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using _fg=True, you can't get the exit code.  Instead it always returns None.\r\n\r\nExample:\r\n\r\n```\r\n>>>a = sh.false(_fg=True, _ok_code=[1])\r\n>>>print(a)\r\nNone\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/414", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/414/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/414/events", "html_url": "https://github.com/amoffat/sh/issues/414", "id": 285078679, "node_id": "MDU6SXNzdWUyODUwNzg2Nzk=", "number": 414, "title": "Capturing stdout of an interactive process that prompts for a password", "user": {"login": "dansimau", "id": 203031, "node_id": "MDQ6VXNlcjIwMzAzMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/203031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dansimau", "html_url": "https://github.com/dansimau", "followers_url": "https://api.github.com/users/dansimau/followers", "following_url": "https://api.github.com/users/dansimau/following{/other_user}", "gists_url": "https://api.github.com/users/dansimau/gists{/gist_id}", "starred_url": "https://api.github.com/users/dansimau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dansimau/subscriptions", "organizations_url": "https://api.github.com/users/dansimau/orgs", "repos_url": "https://api.github.com/users/dansimau/repos", "events_url": "https://api.github.com/users/dansimau/events{/privacy}", "received_events_url": "https://api.github.com/users/dansimau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226929, "node_id": "MDU6TGFiZWwyMjY5Mjk=", "url": "https://api.github.com/repos/amoffat/sh/labels/bug", "name": "bug", "color": "d7e102", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-12-29T11:32:38Z", "updated_at": "2020-04-24T07:05:48Z", "closed_at": "2020-04-24T07:05:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI want to use python-sh to run the following shell equivalent:\r\n\r\n```\r\n$ aws --profile=myprofile ec2 describe-instances >/tmp/instances.json\r\nEnter MFA code: \r\n$\r\n```\r\n\r\nIn the example above, the `aws` command is a Python process that uses `getpass.unix_getpass` under the hood. When the user enters their password, it sets echo mode off on the TTY so that the password is not visible.\r\n\r\n(The \"Enter MFA code\" is output to stderr and the password is read from stdin but the characters are not echoed.)\r\n\r\nHere is my attempt to do this using python-sh:\r\n\r\n```\r\naws(_in=sys.stdin, _err=sys.stderr, _out=\"/tmp/instances.json\", \"--profile\", \"myprofile\", \"ec2\", \"describe-instances\")\r\n```\r\n\r\nHowever, this results in:\r\n\r\n```\r\n/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/getpass.py:86: GetPassWarning: Can not control echo on the terminal.\r\n  passwd = fallback_getpass(prompt, stream)\r\nWarning: Password input may be echoed.\r\nEnter MFA code: \r\n```\r\n\r\nIndeed, the password is echoed. The line that fails in `getpass.py` is when TTY options are being set using `termios.tcsetattr`. The error is:\r\n\r\n```\r\n(25, 'Inappropriate ioctl for device')\r\n```\r\n\r\nI can eliminate this problem by setting `_fg=True`:\r\n\r\n```\r\naws(_fg=True, _out=\"/tmp/instances.json\", \"--profile\", \"myprofile\", \"ec2\", \"describe-instances\")\r\n```\r\n\r\nHowever, then stdout is not captured.\r\n\r\nIs there a way to work around this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/413", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/413/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/413/events", "html_url": "https://github.com/amoffat/sh/issues/413", "id": 281625132, "node_id": "MDU6SXNzdWUyODE2MjUxMzI=", "number": 413, "title": "when multiple _bg processes are running, sh blocks randomly when inspecting exited processes", "user": {"login": "computercolin", "id": 219247, "node_id": "MDQ6VXNlcjIxOTI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/219247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/computercolin", "html_url": "https://github.com/computercolin", "followers_url": "https://api.github.com/users/computercolin/followers", "following_url": "https://api.github.com/users/computercolin/following{/other_user}", "gists_url": "https://api.github.com/users/computercolin/gists{/gist_id}", "starred_url": "https://api.github.com/users/computercolin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/computercolin/subscriptions", "organizations_url": "https://api.github.com/users/computercolin/orgs", "repos_url": "https://api.github.com/users/computercolin/repos", "events_url": "https://api.github.com/users/computercolin/events{/privacy}", "received_events_url": "https://api.github.com/users/computercolin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226929, "node_id": "MDU6TGFiZWwyMjY5Mjk=", "url": "https://api.github.com/repos/amoffat/sh/labels/bug", "name": "bug", "color": "d7e102", "default": true, "description": null}, {"id": 2014398837, "node_id": "MDU6TGFiZWwyMDE0Mzk4ODM3", "url": "https://api.github.com/repos/amoffat/sh/labels/concurrency", "name": "concurrency", "color": "ef381c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-12-13T04:54:58Z", "updated_at": "2020-04-26T02:36:40Z", "closed_at": "2020-04-26T02:36:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "To demonstrate the issue, the following script creates 11 _sleep_ processes and monitors them, starting new processes when old ones exit.\r\n\r\n- Expectation: There are 11 processes running at any one time\r\n- Expectation: The script prints status message every 0.5 seconds\r\n- Actual Result: script blocks randomly\r\n    - status output halts\r\n    - script continues to block until process #x exits, and then continues as if nothing happened\r\n\r\nSh blocks because of the implicit call to ```__eq__``` by ```list.remove```. The calls are:\r\n``` __eq__ -> __str__ -> __unicode__ -> self.stdout -> self.wait -> self.process.wait -> no_interrupt```\r\n\r\nWhy this gets stuck, I do not understand.\r\n\r\nReproduced on Macos python 2.7, 3.4, 3.5\r\n\r\nDemo (bit long, try running it, the bug appears within a few minutes for me and is very obvious because the terminal output halts while Sh blocks)\r\n``` python\r\nimport random\r\nimport sh\r\nimport time\r\n\r\nMAX_NUM_PROCS = 11\r\nSLEEP_INT_SEC = .5\r\n\r\ndef mark_exited(p, success, exit_code):\r\n  p.exited = True\r\n\r\ndef sjoin(glue, itrr):\r\n  return str(glue).join(map(str, itrr))\r\n\r\ndef process_finished_procs(running_proc_list):\r\n  for p in running_proc_list:\r\n    if not p.exited:\r\n      continue\r\n    isalive, excode = p.process.is_alive()\r\n    x = ['pid:', p.process.pid, '\"exited\":', p.exited, 'is_alive:', isalive, 'exit_code:', excode]\r\n    print('! Proc complete:: ' + sjoin(' ',x) + ' --- ' + str(p.process.cmd))\r\n\r\n    p.wait()\r\n    # BUG OCCURS HERE. When other bg processes are running, call to wait() randomly blocks.\r\n    # wait() will block until bg processes #x have exited (can't see pattern with which #x we get hung on).\r\n    # I discovered the bug with the following list. In fact, if you delete the wait() line\r\n    # the bug will still occur because list.remove() calls __eq__ which ends up calling wait()\r\n    running_proc_list.remove(p)\r\n\r\ndef wait_n_cull_procs(running_proc_list):\r\n  while len(running_proc_list) >= MAX_NUM_PROCS:\r\n    time.sleep(SLEEP_INT_SEC)\r\n    stars = '*' * random.randint(2,6)\r\n    print('.. running count is %s/%s  %s' % (len(running_proc_list),MAX_NUM_PROCS,stars) )\r\n    process_finished_procs(running_proc_list)\r\n\r\nrunning_proc_list = []\r\nwhile True:\r\n  wait_n_cull_procs(running_proc_list)\r\n  print('start proc')\r\n  cmd = 'sleep %s; echo \"done1234\"' % random.randint(200,900)\r\n  p = sh.sh('-c', cmd, _bg=True, _done=mark_exited)\r\n  p.exited = False\r\n  running_proc_list.append(p)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/412", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/412/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/412/events", "html_url": "https://github.com/amoffat/sh/issues/412", "id": 281075182, "node_id": "MDU6SXNzdWUyODEwNzUxODI=", "number": 412, "title": "FAQ entry for how to get equivalent of -x behavior", "user": {"login": "jgarvin", "id": 102322, "node_id": "MDQ6VXNlcjEwMjMyMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/102322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgarvin", "html_url": "https://github.com/jgarvin", "followers_url": "https://api.github.com/users/jgarvin/followers", "following_url": "https://api.github.com/users/jgarvin/following{/other_user}", "gists_url": "https://api.github.com/users/jgarvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgarvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgarvin/subscriptions", "organizations_url": "https://api.github.com/users/jgarvin/orgs", "repos_url": "https://api.github.com/users/jgarvin/repos", "events_url": "https://api.github.com/users/jgarvin/events{/privacy}", "received_events_url": "https://api.github.com/users/jgarvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-12-11T16:15:17Z", "updated_at": "2020-04-25T17:23:09Z", "closed_at": "2020-04-25T17:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When shell scripting one of my most common actions is to set -x in order to debug why something isn't getting invoked with the arguments I expect. I'm pretty sure this is possible with sh, I even have a code snippet that I'm pretty sure used to work but doesn't seem to anymore:\r\n    logging.getLogger(\"sh.command\").setLevel(logging.WARNING)\r\n\r\nAnyway since I suspect the desire to do this is super common, it'd be nice if the FAQ described the recommended way to do it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/411", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/411/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/411/events", "html_url": "https://github.com/amoffat/sh/issues/411", "id": 276327392, "node_id": "MDU6SXNzdWUyNzYzMjczOTI=", "number": 411, "title": "Resolve ~ as HOME", "user": {"login": "iScrE4m", "id": 6594163, "node_id": "MDQ6VXNlcjY1OTQxNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6594163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iScrE4m", "html_url": "https://github.com/iScrE4m", "followers_url": "https://api.github.com/users/iScrE4m/followers", "following_url": "https://api.github.com/users/iScrE4m/following{/other_user}", "gists_url": "https://api.github.com/users/iScrE4m/gists{/gist_id}", "starred_url": "https://api.github.com/users/iScrE4m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iScrE4m/subscriptions", "organizations_url": "https://api.github.com/users/iScrE4m/orgs", "repos_url": "https://api.github.com/users/iScrE4m/repos", "events_url": "https://api.github.com/users/iScrE4m/events{/privacy}", "received_events_url": "https://api.github.com/users/iScrE4m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-23T10:35:25Z", "updated_at": "2017-11-29T21:14:56Z", "closed_at": "2017-11-29T21:14:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason, commands don't work well with ~ as a shorthand for os.getenv('HOME') in paths. Is a fix possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/410", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/410/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/410/events", "html_url": "https://github.com/amoffat/sh/issues/410", "id": 276321731, "node_id": "MDU6SXNzdWUyNzYzMjE3MzE=", "number": 410, "title": "how could I use '-F'  in sh.tail", "user": {"login": "kevinhuang06", "id": 11959656, "node_id": "MDQ6VXNlcjExOTU5NjU2", "avatar_url": "https://avatars0.githubusercontent.com/u/11959656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinhuang06", "html_url": "https://github.com/kevinhuang06", "followers_url": "https://api.github.com/users/kevinhuang06/followers", "following_url": "https://api.github.com/users/kevinhuang06/following{/other_user}", "gists_url": "https://api.github.com/users/kevinhuang06/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinhuang06/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinhuang06/subscriptions", "organizations_url": "https://api.github.com/users/kevinhuang06/orgs", "repos_url": "https://api.github.com/users/kevinhuang06/repos", "events_url": "https://api.github.com/users/kevinhuang06/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinhuang06/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463409280, "node_id": "MDU6TGFiZWw0NjM0MDkyODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/cant%20reproduce", "name": "cant reproduce", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-23T10:15:07Z", "updated_at": "2020-04-25T13:59:56Z", "closed_at": "2020-04-25T13:59:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "my log file will rotate every 5 minutes,  '-f' will make OS unable to release file handler of that log file.\r\nso, when i want to use '-F' param to trace this file, i found python script' memory rise up continuously , even to 1.3Gb(before i killed it). but '-f' runs cool for just using 48m memory at most.\r\nthe code blow shows how i use sh.tail\r\n```\r\nlog_path = sys.argv[1]\r\nfor line in sh.tail(\"-F\", log_path, _iter=True):\r\n    pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/409", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/409/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/409/events", "html_url": "https://github.com/amoffat/sh/issues/409", "id": 273616334, "node_id": "MDU6SXNzdWUyNzM2MTYzMzQ=", "number": 409, "title": "further improvements to command logging", "user": {"login": "anarcat", "id": 796623, "node_id": "MDQ6VXNlcjc5NjYyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/796623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anarcat", "html_url": "https://github.com/anarcat", "followers_url": "https://api.github.com/users/anarcat/followers", "following_url": "https://api.github.com/users/anarcat/following{/other_user}", "gists_url": "https://api.github.com/users/anarcat/gists{/gist_id}", "starred_url": "https://api.github.com/users/anarcat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anarcat/subscriptions", "organizations_url": "https://api.github.com/users/anarcat/orgs", "repos_url": "https://api.github.com/users/anarcat/repos", "events_url": "https://api.github.com/users/anarcat/events{/privacy}", "received_events_url": "https://api.github.com/users/anarcat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-13T23:34:11Z", "updated_at": "2020-04-25T17:36:30Z", "closed_at": "2020-04-25T17:36:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi!\r\n\r\nso i'm happily using the logging stuff from recent versions to report what's going on to the user... unfortunately, things are still pretty noisy:\r\n\r\n```\r\nINFO:sh.command:<Command '/usr/bin/git -C /home/anarcat/wikis/anarc.at branch -a --color=never -v'>: starting process\r\nINFO:sh.command:<Command '/usr/bin/git -C /home/anarcat/wikis/anarc.at branch -a --color=never -v', pid 21028>: process started\r\nINFO:sh.command:<Command '/usr/bin/git -C /home/anarcat/wikis/anarc.at branch -a --color=never -v', pid 21028>: process completed\r\nINFO:sh.command:<Command '/usr/bin/git -C /home/anarcat/wikis/anarc.at branch -a --color=never -v', pid 21028>: process completed\r\n```\r\n\r\nFirst, there's a duplicate line there - not sure why. But then I also feel like a bunch of those could be hidden in the `DEBUG` level: one line per call is basically what I expected to happen here. having only the last line, like this for example, would be fine:\r\n\r\n```\r\nINFO:sh.command:<Command '/usr/bin/git -C /home/anarcat/wikis/anarc.at branch -a --color=never -v', pid 21028>: process completed\r\n```\r\n\r\nWould you welcome a PR that would tweak that change?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/408", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/408/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/408/events", "html_url": "https://github.com/amoffat/sh/issues/408", "id": 271450585, "node_id": "MDU6SXNzdWUyNzE0NTA1ODU=", "number": 408, "title": "Background processes need their own _out arg", "user": {"login": "paul-hammant", "id": 82182, "node_id": "MDQ6VXNlcjgyMTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/82182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-hammant", "html_url": "https://github.com/paul-hammant", "followers_url": "https://api.github.com/users/paul-hammant/followers", "following_url": "https://api.github.com/users/paul-hammant/following{/other_user}", "gists_url": "https://api.github.com/users/paul-hammant/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-hammant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-hammant/subscriptions", "organizations_url": "https://api.github.com/users/paul-hammant/orgs", "repos_url": "https://api.github.com/users/paul-hammant/repos", "events_url": "https://api.github.com/users/paul-hammant/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-hammant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-11-06T11:56:15Z", "updated_at": "2020-04-26T21:32:43Z", "closed_at": "2020-04-26T21:32:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using py.sh in integrations tests -  and one of those kills a process to see how the system handles that, and recovers.  In the middle of the test output, I see:\r\n\r\n```\r\nException in thread background thread for pid 41686:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/sh.py\", line 1540, in wrap\r\n    fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/sh.py\", line 2455, in background_thread\r\n    handle_exit_code(exit_code)\r\n  File \"/usr/local/lib/python3.6/site-packages/sh.py\", line 2153, in fn\r\n    return self.command.handle_command_exit_code(exit_code)\r\n  File \"/usr/local/lib/python3.6/site-packages/sh.py\", line 815, in handle_command_exit_code\r\n    raise exc\r\nsh.SignalException_SIGKILL: \r\n```\r\n\r\nI'd like to be able to slurp that into a StringIO and assert that it's what I expect. Well approximately, given line numbers change over time.\r\n\r\nSo I don't really know, but would a `_bg_out` and `_bg_err_to_out` do it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/407", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/407/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/407/events", "html_url": "https://github.com/amoffat/sh/issues/407", "id": 266176525, "node_id": "MDU6SXNzdWUyNjYxNzY1MjU=", "number": 407, "title": "KeyboardInterrupt will mark process completed pre-maturely", "user": {"login": "honnix", "id": 158892, "node_id": "MDQ6VXNlcjE1ODg5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/158892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honnix", "html_url": "https://github.com/honnix", "followers_url": "https://api.github.com/users/honnix/followers", "following_url": "https://api.github.com/users/honnix/following{/other_user}", "gists_url": "https://api.github.com/users/honnix/gists{/gist_id}", "starred_url": "https://api.github.com/users/honnix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honnix/subscriptions", "organizations_url": "https://api.github.com/users/honnix/orgs", "repos_url": "https://api.github.com/users/honnix/repos", "events_url": "https://api.github.com/users/honnix/events{/privacy}", "received_events_url": "https://api.github.com/users/honnix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-17T15:40:23Z", "updated_at": "2020-04-26T21:40:54Z", "closed_at": "2020-04-26T21:40:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At line https://github.com/amoffat/sh/blob/master/sh.py#L782 , this flag is set right after entering `wait` before calling command wait. In case of user hitting `ctrl-c` to interrupt the actual waiting, calling `wait` again will return immediately.\r\n\r\nSo this is what I did:\r\n\r\n```\r\n        q = Queue()\r\n        p = None\r\n        try:\r\n            p = sh.cmd(args,\r\n                               _bg=True,\r\n                               _in=q,\r\n                               _out=process_output,\r\n                               _err=process_output,\r\n                               _out_bufsize=0,\r\n                               _bg_exc=False,\r\n                               _tty_in=True)\r\n            p.wait()\r\n        except KeyboardInterrupt:\r\n            if p is not None:\r\n                p._process_completed = False # manually reset the flag\r\n                q.put_nowait('\\x03') # send ctrl-c to subprocess\r\n                p.wait()\r\n        finally:\r\n            ...\r\n```\r\n\r\nFor reasons, I can't use foreground.\r\n\r\nIs there any better way to achieve this? This feels too hacky. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/406", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/406/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/406/events", "html_url": "https://github.com/amoffat/sh/issues/406", "id": 261028004, "node_id": "MDU6SXNzdWUyNjEwMjgwMDQ=", "number": 406, "title": "Millon of close syscalls on lxd container when run a simple command as nice", "user": {"login": "carlosduelo", "id": 1053788, "node_id": "MDQ6VXNlcjEwNTM3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1053788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosduelo", "html_url": "https://github.com/carlosduelo", "followers_url": "https://api.github.com/users/carlosduelo/followers", "following_url": "https://api.github.com/users/carlosduelo/following{/other_user}", "gists_url": "https://api.github.com/users/carlosduelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosduelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosduelo/subscriptions", "organizations_url": "https://api.github.com/users/carlosduelo/orgs", "repos_url": "https://api.github.com/users/carlosduelo/repos", "events_url": "https://api.github.com/users/carlosduelo/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosduelo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 631974984, "node_id": "MDU6TGFiZWw2MzE5NzQ5ODQ=", "url": "https://api.github.com/repos/amoffat/sh/labels/performance", "name": "performance", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-09-27T15:55:49Z", "updated_at": "2020-04-24T05:26:26Z", "closed_at": "2020-04-24T05:26:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed a very different performance running commands on lxd container so, simple as **sh.nice()** \r\n\r\nHost\r\n```\r\n    $ time python -c \"import sh; sh.nice()\"\r\n    real\t0m0.077s\r\n    user\t0m0.052s\r\n    sys\t0m0.012s\r\n```\r\n\r\nContainer\r\n```\r\n    $ time python -c \"import sh; sh.nice()\"\r\n    real\t0m0.215s\r\n    user\t0m0.088s\r\n    sys\t0m0.120s\r\n```\r\n\r\nMy next step was use strace which says that the container version call 1048796 times the syscall close!! The majority of the times it returns EBADF (Bad file descriptor).\r\n\r\nHere is what I have done, any idea whats happening?\r\nI do not know if it is a sh module issue or not but it is happening only here..\r\n\r\n```\r\n    $ uname -a\r\n    Linux cmp-1 4.4.0-96-generic #119-Ubuntu SMP Tue Sep 12 14:59:54 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n    $ lxc launch ubuntu:precise new-precise-sh\r\n    $ lxc exec new-precise-sh -- bash\r\n    $ apt-get install python-pip\r\n    $ pip install sh\r\n    $ strace -f -e close python -c \"import sh; sh.nice()\" 2>&1 | wc -l\r\n    1048796\r\n```\r\n\r\nRunning strace with output in different files. There is one too big **strace.2618**\r\n\r\n```\r\n    $ strace -ff -o strace python -c \"import sh; sh.nice()\"\r\n    $ ls -la\r\n    total 75276\r\n    drwxrwxr-x  2 user user     4096 Sep 27 16:58 .\r\n    drwxr-xr-x 41 user user     4096 Sep 27 16:45 ..\r\n    -rw-r--r--  1 root   root     121780 Sep 27 16:33 strace.2615\r\n    -rw-r--r--  1 root   root       3995 Sep 27 16:33 strace.2616\r\n    -rw-r--r--  1 root   root       6108 Sep 27 16:33 strace.2617\r\n    -rw-r--r--  1 root   root   76558803 Sep 27 16:33 strace.2618\r\n    -rw-r--r--  1 root   root     362363 Sep 27 16:33 strace.2619\r\n    -rw-r--r--  1 root   root      10748 Sep 27 16:33 strace.2620\r\n```\r\n\r\nThe content of the file something like this:\r\n\r\n```\r\n    $ cat strace.2618\r\n    ...................\r\n    ...................\r\n    getrlimit(RLIMIT_NOFILE, {rlim_cur=1024*1024, rlim_max=1024*1024}) = 0\r\n    close(3)                                = 0\r\n    close(4)                                = 0\r\n    close(5)                                = -1 EBADF (Bad file descriptor)\r\n    close(6)                                = -1 EBADF (Bad file descriptor)\r\n    close(7)                                = 0\r\n    close(8)                                = 0\r\n    close(9)                                = -1 EBADF (Bad file descriptor)\r\n    close(10)                               = 0\r\n    close(11)                               = -1 EBADF (Bad file     descriptor)\r\n    ...................\r\n    ...................\r\n    close(33)                               = -1 EBADF (Bad file descriptor)\r\n    close(34)                               = -1 EBADF (Bad file descriptor)\r\n    close(35)                               = -1 EBADF (Bad file descriptor)\r\n    close(36)                               = -1 EBADF (Bad file descriptor)\r\n    close(37)                               = -1 EBADF (Bad file descriptor)\r\n    close(38)                               = -1 EBADF (Bad file descriptor)\r\n    ...................\r\n    ...................\r\n    close(1048568)                          = -1 EBADF (Bad file descriptor)\r\n    close(1048569)                          = -1 EBADF (Bad file descriptor)\r\n    close(1048570)                          = -1 EBADF (Bad file descriptor)\r\n    close(1048571)                          = -1 EBADF (Bad file descriptor)\r\n    close(1048572)                          = -1 EBADF (Bad file descriptor)\r\n    close(1048573)                          = -1 EBADF (Bad file descriptor)\r\n    close(1048574)                          = -1 EBADF (Bad file descriptor)\r\n    close(1048575)                          = -1 EBADF (Bad file descriptor)\r\n    ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, {B38400 -opost -isig -icanon -echo ...}) = 0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/405", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/405/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/405/events", "html_url": "https://github.com/amoffat/sh/issues/405", "id": 260230432, "node_id": "MDU6SXNzdWUyNjAyMzA0MzI=", "number": 405, "title": "Please allow is_alive() to be called on RunningCommand", "user": {"login": "paul-hammant", "id": 82182, "node_id": "MDQ6VXNlcjgyMTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/82182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-hammant", "html_url": "https://github.com/paul-hammant", "followers_url": "https://api.github.com/users/paul-hammant/followers", "following_url": "https://api.github.com/users/paul-hammant/following{/other_user}", "gists_url": "https://api.github.com/users/paul-hammant/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-hammant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-hammant/subscriptions", "organizations_url": "https://api.github.com/users/paul-hammant/orgs", "repos_url": "https://api.github.com/users/paul-hammant/repos", "events_url": "https://api.github.com/users/paul-hammant/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-hammant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 227580, "node_id": "MDU6TGFiZWwyMjc1ODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/docs", "name": "docs", "color": "02e10c", "default": false, "description": null}, {"id": 226928, "node_id": "MDU6TGFiZWwyMjY5Mjg=", "url": "https://api.github.com/repos/amoffat/sh/labels/feature", "name": "feature", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-25T10:43:55Z", "updated_at": "2020-04-25T15:33:48Z", "closed_at": "2020-04-25T15:32:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's not passed through to OProc and attempts to invoke it result in a getAttr error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/404", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/404/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/404/events", "html_url": "https://github.com/amoffat/sh/issues/404", "id": 256706297, "node_id": "MDU6SXNzdWUyNTY3MDYyOTc=", "number": 404, "title": "Documentation bug", "user": {"login": "remoteBranch", "id": 3086946, "node_id": "MDQ6VXNlcjMwODY5NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3086946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remoteBranch", "html_url": "https://github.com/remoteBranch", "followers_url": "https://api.github.com/users/remoteBranch/followers", "following_url": "https://api.github.com/users/remoteBranch/following{/other_user}", "gists_url": "https://api.github.com/users/remoteBranch/gists{/gist_id}", "starred_url": "https://api.github.com/users/remoteBranch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remoteBranch/subscriptions", "organizations_url": "https://api.github.com/users/remoteBranch/orgs", "repos_url": "https://api.github.com/users/remoteBranch/repos", "events_url": "https://api.github.com/users/remoteBranch/events{/privacy}", "received_events_url": "https://api.github.com/users/remoteBranch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 227580, "node_id": "MDU6TGFiZWwyMjc1ODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/docs", "name": "docs", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-09-11T13:40:27Z", "updated_at": "2020-04-25T15:25:54Z", "closed_at": "2020-04-25T15:25:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the tutorial section for tailing a real-time log file I believe you have to make the amendment in bold for the process to actually run in the background for \"# ... do other stuff here ...\". Otherwise it seems like the process blocks. \r\n\r\nprocess = tail(\"-f\", \"info.log\", _out=process_log_line, **_bg=True**)\r\n\r\n# ... do other stuff here ...\r\n\r\nprocess.wait()\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/403", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/403/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/403/events", "html_url": "https://github.com/amoffat/sh/issues/403", "id": 256283822, "node_id": "MDU6SXNzdWUyNTYyODM4MjI=", "number": 403, "title": "Pass file descriptors to subprocess", "user": {"login": "Asuranceturix", "id": 781399, "node_id": "MDQ6VXNlcjc4MTM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/781399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Asuranceturix", "html_url": "https://github.com/Asuranceturix", "followers_url": "https://api.github.com/users/Asuranceturix/followers", "following_url": "https://api.github.com/users/Asuranceturix/following{/other_user}", "gists_url": "https://api.github.com/users/Asuranceturix/gists{/gist_id}", "starred_url": "https://api.github.com/users/Asuranceturix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Asuranceturix/subscriptions", "organizations_url": "https://api.github.com/users/Asuranceturix/orgs", "repos_url": "https://api.github.com/users/Asuranceturix/repos", "events_url": "https://api.github.com/users/Asuranceturix/events{/privacy}", "received_events_url": "https://api.github.com/users/Asuranceturix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-08T15:07:38Z", "updated_at": "2020-04-25T18:26:03Z", "closed_at": "2020-04-25T18:26:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to pass open file descriptors to my sh commands, but apparently that does not work (at least under Python 3). The Python library `subprocess` has an option to enable this behaviour, but I have been unable to find its equivalent in `sh`, that I would rather use.\r\n\r\nI have prepared a fairly minimal example illustrating the issue:\r\n```python\r\nimport sh\r\nimport os\r\nimport subprocess\r\n\r\np = os.pipe()\r\nos.write(p[1], b\"asdfasdf\\n\")\r\nos.close(p[1])\r\nc = sh.bash([\"-c\", \"read -u {} foo; echo $foo\".format(p[0])])\r\nos.close(p[0])\r\nprint(\"SH.\\n  stdout: {}\\n  stderr: {}\".format(c.stdout, c.stderr))\r\n\r\np = os.pipe()\r\nos.write(p[1], b\"asdfasdf\\n\")\r\nos.close(p[1])\r\nc = subprocess.Popen([\"bash\", \"-c\", \"read -u {} foo; echo $foo\".format(p[0])], stdout=subprocess.PIPE, stderr=subprocess.PIPE, pass_fds=[p[0]])\r\nout, err = c.communicate()\r\nos.close(p[0])\r\nprint(\"Subprocess.\\n  stdout: {}\\n  stderr: {}\".format(out, err))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/402", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/402/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/402/events", "html_url": "https://github.com/amoffat/sh/issues/402", "id": 254811274, "node_id": "MDU6SXNzdWUyNTQ4MTEyNzQ=", "number": 402, "title": "ANSI color weirdness with sh.git(\"log\")", "user": {"login": "paul-hammant", "id": 82182, "node_id": "MDQ6VXNlcjgyMTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/82182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-hammant", "html_url": "https://github.com/paul-hammant", "followers_url": "https://api.github.com/users/paul-hammant/followers", "following_url": "https://api.github.com/users/paul-hammant/following{/other_user}", "gists_url": "https://api.github.com/users/paul-hammant/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-hammant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-hammant/subscriptions", "organizations_url": "https://api.github.com/users/paul-hammant/orgs", "repos_url": "https://api.github.com/users/paul-hammant/repos", "events_url": "https://api.github.com/users/paul-hammant/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-hammant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-02T13:19:47Z", "updated_at": "2017-09-02T13:28:38Z", "closed_at": "2017-09-02T13:28:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can see ANSI color codes, but didn't expect to, for:\r\n\r\n```\r\nlog = sh.git(\"log\", \"--pretty=oneline\", \"--no-color\").stdout\r\nprint(log)\r\n```\r\n\r\nverification (Bash):\r\n\r\n```\r\ngit log --pretty=oneline\r\n# and \r\ngit log --pretty=oneline --no-color\r\n```\r\n\r\nSeems Py.sh handing \"--no-color\" to git is having no effect :-(", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/401", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/401/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/401/events", "html_url": "https://github.com/amoffat/sh/issues/401", "id": 254535601, "node_id": "MDU6SXNzdWUyNTQ1MzU2MDE=", "number": 401, "title": "It's better if return a python iter object (list or dict) when run some command.", "user": {"login": "zaazbb", "id": 5773083, "node_id": "MDQ6VXNlcjU3NzMwODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5773083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaazbb", "html_url": "https://github.com/zaazbb", "followers_url": "https://api.github.com/users/zaazbb/followers", "following_url": "https://api.github.com/users/zaazbb/following{/other_user}", "gists_url": "https://api.github.com/users/zaazbb/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaazbb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaazbb/subscriptions", "organizations_url": "https://api.github.com/users/zaazbb/orgs", "repos_url": "https://api.github.com/users/zaazbb/repos", "events_url": "https://api.github.com/users/zaazbb/events{/privacy}", "received_events_url": "https://api.github.com/users/zaazbb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-01T04:54:01Z", "updated_at": "2017-09-17T06:03:10Z", "closed_at": "2017-09-17T06:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "if return a  python iter, list or dict,  so, we can get some result easier.\r\neg:\r\nrun ifconfig,   and only get the ip in wlan0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/399", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/399/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/399/events", "html_url": "https://github.com/amoffat/sh/issues/399", "id": 244325027, "node_id": "MDU6SXNzdWUyNDQzMjUwMjc=", "number": 399, "title": "Process killing (Python in the background) causes output to console that can't be suppressed", "user": {"login": "paul-hammant", "id": 82182, "node_id": "MDQ6VXNlcjgyMTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/82182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-hammant", "html_url": "https://github.com/paul-hammant", "followers_url": "https://api.github.com/users/paul-hammant/followers", "following_url": "https://api.github.com/users/paul-hammant/following{/other_user}", "gists_url": "https://api.github.com/users/paul-hammant/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-hammant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-hammant/subscriptions", "organizations_url": "https://api.github.com/users/paul-hammant/orgs", "repos_url": "https://api.github.com/users/paul-hammant/repos", "events_url": "https://api.github.com/users/paul-hammant/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-hammant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-07-20T11:06:32Z", "updated_at": "2020-04-26T21:49:28Z", "closed_at": "2020-04-26T21:49:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an integration test that spawns a Python process:\r\n\r\n```\r\ndef process_output_1(self, line):\r\n    pass\r\n\r\ndef test_something(self):\r\n    p1 = sh.python(\"script.py\", \"param1\", _out=self.process_output_1, _err_to_out=True, _bg=True)\r\n\r\n    # some more setup here (unimportant)\r\n    # the interaction here (unimportant)\r\n    # some verification here (unimportant)\r\n\r\n    try:\r\n        p1.kill()\r\n    except sh.SignalException_SIGKILL:\r\n        pass\r\n```\r\n\r\nI still see the following output in the console, as the test runner exits (tearDown). Well sometimes I do. I just want to suppress all output, and I don't think py.sh has that capability :-(  Could it be added, please?\r\n\r\nSome of the output I'm trying to suppress \r\n\r\n```\r\nException in thread background thread for pid 20637:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"/home/paul/.local/lib/python2.7/site-packages/sh.py\", line 1540, in wrap\r\n    fn(*args, **kwargs)\r\n  File \"/home/paul/.local/lib/python2.7/site-packages/sh.py\", line 2459, in background_thread\r\n    handle_exit_code(exit_code)\r\n  File \"/home/paul/.local/lib/python2.7/site-packages/sh.py\", line 2157, in fn\r\n    return self.command.handle_command_exit_code(exit_code)\r\n  File \"/home/paul/.local/lib/python2.7/site-packages/sh.py\", line 815, in handle_command_exit_code\r\n    raise exc\r\nSignalException_SIGKILL: \r\n\r\n  RAN: /usr/bin/python script.py param1\r\n\r\n  STDOUT:\r\n\r\n  STDERR:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/398", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/398/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/398/events", "html_url": "https://github.com/amoffat/sh/issues/398", "id": 243578734, "node_id": "MDU6SXNzdWUyNDM1Nzg3MzQ=", "number": 398, "title": "Importing sh excepts on further imports via Python C-API", "user": {"login": "cheriff", "id": 1133440, "node_id": "MDQ6VXNlcjExMzM0NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1133440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheriff", "html_url": "https://github.com/cheriff", "followers_url": "https://api.github.com/users/cheriff/followers", "following_url": "https://api.github.com/users/cheriff/following{/other_user}", "gists_url": "https://api.github.com/users/cheriff/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheriff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheriff/subscriptions", "organizations_url": "https://api.github.com/users/cheriff/orgs", "repos_url": "https://api.github.com/users/cheriff/repos", "events_url": "https://api.github.com/users/cheriff/events{/privacy}", "received_events_url": "https://api.github.com/users/cheriff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-18T02:05:47Z", "updated_at": "2020-04-25T11:39:24Z", "closed_at": "2020-04-25T11:39:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've found that when writing a C Application against libpython that:\r\n\r\n1. Use PyImport_ImportModule to import (directly or indirectly) sh\r\n    * This will insert a ModuleImporterFromVariables in sys.meta_path\r\n2. Try use PyImport_ImportModule to import anything else (say, datetime)\r\n\r\nThis results in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/site-packages/sh.py\", line 3421, in find_module\r\n    while in_importlib(parent_frame):\r\n  File \"/usr/lib/python2.7/site-packages/sh.py\", line 3368, in in_importlib\r\n    return frame.f_code.co_filename == \"<frozen importlib._bootstrap>\"\r\nAttributeError: 'NoneType' object has no attribute 'f_code'\r\n```\r\n\r\nAfter digging, it seems that find_module() is not happy when parent_frame is None, as it appears to be when  importing via the API. I found that having that return None in this case causes things to work, but cannot be sure if this doesn't have side-effects should anyone be using the \"fancy importer\"\r\n\r\n---\r\n\r\nIn this situation, since I can't easily change either sh itself, or dependancies that pull it in I do have a workaround which I'm using for now:\r\n\r\n```\r\n    {   // begin workaround\r\n        PyObject *sys = PyImport_ImportModule(\"sys\");\r\n        PyObject *meta_path = PyObject_GetAttrString(sys, \"meta_path\");\r\n        PyObject *sh = PyImport_ImportModule(\"sh\");\r\n        PyObject* pop_ret = PyObject_CallMethod(meta_path, \"pop\", NULL);\r\n        (void)pop_ret;\r\n        (void)sh;\r\n    }\r\n```\r\n\r\nI now can import my other stuff since there's no extra importers in the chain, and since sh is already imported, one won't be re-added. \r\nI understand this may break uses of sh in any module, particularly if anything uses the `my_sh = sh(_foo=bar); from my_sh import something` pattern which for now seems not to be a deal breaker but feels a bit fragile going forward.\r\n\r\n---\r\n\r\nAlternatively, if there's anything extra I need to do from the C side to set things up such that `inspect.currentframe().f_back` returns something sensible to also avoid this, I'd be happy to try that too.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/397", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/397/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/397/events", "html_url": "https://github.com/amoffat/sh/issues/397", "id": 242643193, "node_id": "MDU6SXNzdWUyNDI2NDMxOTM=", "number": 397, "title": "Query: how to execute a command for which function doesn't exist and is huge", "user": {"login": "p00j4", "id": 6470509, "node_id": "MDQ6VXNlcjY0NzA1MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6470509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p00j4", "html_url": "https://github.com/p00j4", "followers_url": "https://api.github.com/users/p00j4/followers", "following_url": "https://api.github.com/users/p00j4/following{/other_user}", "gists_url": "https://api.github.com/users/p00j4/gists{/gist_id}", "starred_url": "https://api.github.com/users/p00j4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p00j4/subscriptions", "organizations_url": "https://api.github.com/users/p00j4/orgs", "repos_url": "https://api.github.com/users/p00j4/repos", "events_url": "https://api.github.com/users/p00j4/events{/privacy}", "received_events_url": "https://api.github.com/users/p00j4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-13T09:40:37Z", "updated_at": "2020-04-25T18:48:29Z", "closed_at": "2020-04-25T18:48:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some really very hue commands to execute\r\nEg. \r\nnosetests -vv --goober tests/my_path --matchMethod='(?:\\b|_)[Tt]est(.*)(unit)+' --with-xunit --exclude-dir=tests/test_suites --cover-html --cover-html-dir=testreports/coverage/destination --cover-package=pkg1,pkg2,pkg3,pkg4,pkg5 --cover-erase --cover-inclusive --with-xcover --xcoverage-file=testreports/coverage/customcover.xml --rednose --exe \r\n\r\nwhich function of sh allows to execute(with access to stdour & stderr) command as it it?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/396", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/396/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/396/events", "html_url": "https://github.com/amoffat/sh/issues/396", "id": 241351337, "node_id": "MDU6SXNzdWUyNDEzNTEzMzc=", "number": 396, "title": "Threading issues cause empty stdout return?", "user": {"login": "mitchellim", "id": 12976814, "node_id": "MDQ6VXNlcjEyOTc2ODE0", "avatar_url": "https://avatars0.githubusercontent.com/u/12976814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitchellim", "html_url": "https://github.com/mitchellim", "followers_url": "https://api.github.com/users/mitchellim/followers", "following_url": "https://api.github.com/users/mitchellim/following{/other_user}", "gists_url": "https://api.github.com/users/mitchellim/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitchellim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitchellim/subscriptions", "organizations_url": "https://api.github.com/users/mitchellim/orgs", "repos_url": "https://api.github.com/users/mitchellim/repos", "events_url": "https://api.github.com/users/mitchellim/events{/privacy}", "received_events_url": "https://api.github.com/users/mitchellim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463409280, "node_id": "MDU6TGFiZWw0NjM0MDkyODA=", "url": "https://api.github.com/repos/amoffat/sh/labels/cant%20reproduce", "name": "cant reproduce", "color": "d4c5f9", "default": false, "description": null}, {"id": 2014398837, "node_id": "MDU6TGFiZWwyMDE0Mzk4ODM3", "url": "https://api.github.com/repos/amoffat/sh/labels/concurrency", "name": "concurrency", "color": "ef381c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-07T18:59:05Z", "updated_at": "2020-04-25T17:34:02Z", "closed_at": "2020-04-25T17:33:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "We'd be seeing some issues where sh would occasionally return blank output, and after performing some more testing, it looks like sh can occasionally hit multithreading issues. This is a test script I scribbled up which hits issues with Python 2.7.13 on Mac OS X 10.12.4 with sh 1.12.14 100% of the time:\r\n\r\n```#!/usr/bin/env python\r\n\r\nfrom multiprocessing.pool import ThreadPool\r\nimport os\r\nimport sys\r\n\r\nimport sh\r\n\r\ndef test_command(path):\r\n    if os.path.islink(path):\r\n        path = os.path.abspath(os.path.join(os.sep, os.readlink(path)))\r\n\r\n    out = sh.pwd(_cwd=path, _new_session=False)\r\n\r\n    if out.strip() != path:\r\n        raise OSError('Failed: ' + path + ' versus ' + out.strip())\r\n\r\ntest_pool = ThreadPool(20)\r\ntest_threads = []\r\n\r\nloops = 1000\r\nwhile loops > 0:\r\n    dir_list = os.listdir('/')\r\n    for item in dir_list:\r\n        item = '/' + item\r\n        if os.path.isdir(item) and os.access(item, os.R_OK | os.X_OK):\r\n            test_threads.append(test_pool.apply_async(test_command, [item]))\r\n    loops -= 1\r\n\r\ntest_pool.close()\r\n\r\nfor thread in test_threads:\r\n    thread.get(10)\r\n\r\ntest_pool.join()\r\n```\r\n\r\nAny chance this could get looked into? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/395", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/395/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/395/events", "html_url": "https://github.com/amoffat/sh/issues/395", "id": 239724315, "node_id": "MDU6SXNzdWUyMzk3MjQzMTU=", "number": 395, "title": "problem executing gpg", "user": {"login": "tkossak", "id": 3728245, "node_id": "MDQ6VXNlcjM3MjgyNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3728245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkossak", "html_url": "https://github.com/tkossak", "followers_url": "https://api.github.com/users/tkossak/followers", "following_url": "https://api.github.com/users/tkossak/following{/other_user}", "gists_url": "https://api.github.com/users/tkossak/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkossak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkossak/subscriptions", "organizations_url": "https://api.github.com/users/tkossak/orgs", "repos_url": "https://api.github.com/users/tkossak/repos", "events_url": "https://api.github.com/users/tkossak/events{/privacy}", "received_events_url": "https://api.github.com/users/tkossak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226929, "node_id": "MDU6TGFiZWwyMjY5Mjk=", "url": "https://api.github.com/repos/amoffat/sh/labels/bug", "name": "bug", "color": "d7e102", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-06-30T09:24:44Z", "updated_at": "2020-04-25T18:38:53Z", "closed_at": "2020-04-25T18:38:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having troubles translating this bash one liner\r\n`echo \"1234\" | gpg --no-use-agent -o /dev/null --local-user MY_KEY -as - && echo \"PASSW IS CORRECT\"`\r\n(checking if gpg key has password) into sh. I tried:\r\n```\r\nx = sh.gpg('--no-use-agent', '-as', o='/dev/null', local_user='MY_KEY', _fg=True, _in='1234\\n')\r\nif x.exit_code == 0:\r\n    print('OK')\r\nelse:\r\n    print('NOT OK')\r\n```\r\n\r\nBut to no avail: when I enter correct gpg password, the last line \"Enter passphrase: \" disapears and the script is stuck on first line, never printing OK or NOT OK.\r\nI would expect that after entering correct password it would print ok/not ok just like bash one liner.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/393", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/393/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/393/events", "html_url": "https://github.com/amoffat/sh/issues/393", "id": 237588855, "node_id": "MDU6SXNzdWUyMzc1ODg4NTU=", "number": 393, "title": "ssh callback example is broken under v1.12", "user": {"login": "acceleratorguy", "id": 29607917, "node_id": "MDQ6VXNlcjI5NjA3OTE3", "avatar_url": "https://avatars2.githubusercontent.com/u/29607917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acceleratorguy", "html_url": "https://github.com/acceleratorguy", "followers_url": "https://api.github.com/users/acceleratorguy/followers", "following_url": "https://api.github.com/users/acceleratorguy/following{/other_user}", "gists_url": "https://api.github.com/users/acceleratorguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/acceleratorguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acceleratorguy/subscriptions", "organizations_url": "https://api.github.com/users/acceleratorguy/orgs", "repos_url": "https://api.github.com/users/acceleratorguy/repos", "events_url": "https://api.github.com/users/acceleratorguy/events{/privacy}", "received_events_url": "https://api.github.com/users/acceleratorguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/amoffat/sh/milestones/3", "html_url": "https://github.com/amoffat/sh/milestone/3", "labels_url": "https://api.github.com/repos/amoffat/sh/milestones/3/labels", "id": 4878325, "node_id": "MDk6TWlsZXN0b25lNDg3ODMyNQ==", "number": 3, "title": "release 1.13.0", "description": "", "creator": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "open", "created_at": "2019-11-25T22:04:24Z", "updated_at": "2020-04-27T17:53:26Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2017-06-21T16:12:14Z", "updated_at": "2020-04-25T08:52:38Z", "closed_at": "2020-04-25T08:52:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The ssh example, found at http://amoffat.github.io/sh/tutorials/interacting_with_processes.html#, works under v1.11 but doesn't work under v1.12. \r\nSymptoms:\r\nThe the callback function, ssh_interact, is never called.\r\n\r\nEnvironment:\r\nPython 2.7.5\r\nsh (1.12.14)\r\nUnderlying OS: Redhat 7.3 derivative.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/392", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/392/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/392/events", "html_url": "https://github.com/amoffat/sh/issues/392", "id": 237464000, "node_id": "MDU6SXNzdWUyMzc0NjQwMDA=", "number": 392, "title": "Slow speed on _out to a file", "user": {"login": "Cediddi", "id": 2720608, "node_id": "MDQ6VXNlcjI3MjA2MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2720608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cediddi", "html_url": "https://github.com/Cediddi", "followers_url": "https://api.github.com/users/Cediddi/followers", "following_url": "https://api.github.com/users/Cediddi/following{/other_user}", "gists_url": "https://api.github.com/users/Cediddi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cediddi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cediddi/subscriptions", "organizations_url": "https://api.github.com/users/Cediddi/orgs", "repos_url": "https://api.github.com/users/Cediddi/repos", "events_url": "https://api.github.com/users/Cediddi/events{/privacy}", "received_events_url": "https://api.github.com/users/Cediddi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 631974984, "node_id": "MDU6TGFiZWw2MzE5NzQ5ODQ=", "url": "https://api.github.com/repos/amoffat/sh/labels/performance", "name": "performance", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-06-21T09:05:59Z", "updated_at": "2020-04-26T02:40:15Z", "closed_at": "2020-04-26T02:40:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWe're using sh 1.11 because of 1.12 breaks most of our code.\r\n\r\nOur workflow is like this.\r\n- We call a app and tell it the input file (approx 25G)\r\n- That app outputs to stdout (unfortunately)\r\n- We redirect output to a file (approx 40G)\r\n\r\nIn this case, bash finished 3-4 times faster. For applications that support outputting to a file, we use that but for applications that output to stdout only, we're stuck with sh's _out option.\r\n\r\nWe usually don't use piping and this is an issue of output redirection", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/391", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/391/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/391/events", "html_url": "https://github.com/amoffat/sh/issues/391", "id": 236539073, "node_id": "MDU6SXNzdWUyMzY1MzkwNzM=", "number": 391, "title": "sh swallows stdout/err when exit code is non-zero", "user": {"login": "vickychijwani", "id": 439616, "node_id": "MDQ6VXNlcjQzOTYxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/439616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vickychijwani", "html_url": "https://github.com/vickychijwani", "followers_url": "https://api.github.com/users/vickychijwani/followers", "following_url": "https://api.github.com/users/vickychijwani/following{/other_user}", "gists_url": "https://api.github.com/users/vickychijwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vickychijwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vickychijwani/subscriptions", "organizations_url": "https://api.github.com/users/vickychijwani/orgs", "repos_url": "https://api.github.com/users/vickychijwani/repos", "events_url": "https://api.github.com/users/vickychijwani/events{/privacy}", "received_events_url": "https://api.github.com/users/vickychijwani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-16T16:58:16Z", "updated_at": "2017-06-16T20:23:37Z", "closed_at": "2017-06-16T18:42:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's an example:\r\n\r\n```console\r\n$ cat shbin.py\r\n#!/usr/bin/env python2\r\nfrom __future__ import print_function\r\nimport sys\r\nprint(\"You should see this on stdout\")\r\nprint(\"You should see this on stderr\", file=sys.stderr)\r\nsys.exit(1)\r\n$ ln -s /tmp/shbin.py /usr/local/bin/shbin  # let's put this on $PATH...\r\n$ pip list | grep sh\r\nsh (1.12.14)\r\n$ cat shtest.py\r\nimport sh, StringIO\r\nbuf = StringIO.StringIO()\r\nsh.shbin(_out=buf, _err=buf)\r\nprint buf.getvalue()\r\n$ python shtest.py  # swallows stdout and stderr\r\nTraceback (most recent call last):\r\n  File \"./shtest.py\", line 4, in <module>\r\n    sh.shbin(_out=buf, _err=buf)\r\n  File \"/spare/local/vchijwani/conda/envs/shtest/lib/python2.7/site-packages/sh.py\", line 1427, in __call__\r\n    return RunningCommand(cmd, call_args, stdin, stdout, stderr)\r\n  File \"/spare/local/vchijwani/conda/envs/shtest/lib/python2.7/site-packages/sh.py\", line 774, in __init__\r\n    self.wait()\r\n  File \"/spare/local/vchijwani/conda/envs/shtest/lib/python2.7/site-packages/sh.py\", line 792, in wait\r\n    self.handle_command_exit_code(exit_code)\r\n  File \"/spare/local/vchijwani/conda/envs/shtest/lib/python2.7/site-packages/sh.py\", line 815, in handle_command_exit_code\r\n    raise exc\r\nsh.ErrorReturnCode_1: \r\n\r\n  RAN: /usr/local/bin/shbin\r\n\r\n  STDOUT:\r\n\r\n\r\n  STDERR:\r\n\r\n```\r\n\r\nAs you can see, `sh` swallows the output.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/390", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/390/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/390/events", "html_url": "https://github.com/amoffat/sh/issues/390", "id": 235647668, "node_id": "MDU6SXNzdWUyMzU2NDc2Njg=", "number": 390, "title": "How to launch a command from string name?", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-13T18:30:57Z", "updated_at": "2017-06-13T20:37:27Z", "closed_at": "2017-06-13T20:37:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot use `sh.command_name` for command names that have dashed in them or which are dynamically formed. What is the proper way to creates those commands in sh?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/389", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/389/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/389/events", "html_url": "https://github.com/amoffat/sh/issues/389", "id": 234487328, "node_id": "MDU6SXNzdWUyMzQ0ODczMjg=", "number": 389, "title": "ctrl-c does not propagate", "user": {"login": "esc", "id": 41563, "node_id": "MDQ6VXNlcjQxNTYz", "avatar_url": "https://avatars2.githubusercontent.com/u/41563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esc", "html_url": "https://github.com/esc", "followers_url": "https://api.github.com/users/esc/followers", "following_url": "https://api.github.com/users/esc/following{/other_user}", "gists_url": "https://api.github.com/users/esc/gists{/gist_id}", "starred_url": "https://api.github.com/users/esc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esc/subscriptions", "organizations_url": "https://api.github.com/users/esc/orgs", "repos_url": "https://api.github.com/users/esc/repos", "events_url": "https://api.github.com/users/esc/events{/privacy}", "received_events_url": "https://api.github.com/users/esc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-08T10:52:07Z", "updated_at": "2017-06-13T15:47:26Z", "closed_at": "2017-06-13T09:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run `wget` or `tar` through `sh` and hit `Ctrl-C` the underlying processes aren't terminated. Is this correct? Is this intended behaviour? Currently I am using `atexit` to explicitly `kill` the process.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/387", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/387/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/387/events", "html_url": "https://github.com/amoffat/sh/issues/387", "id": 233487188, "node_id": "MDU6SXNzdWUyMzM0ODcxODg=", "number": 387, "title": "How to mock customized command instantiate from `sh.Command`", "user": {"login": "jkryanchou", "id": 1206342, "node_id": "MDQ6VXNlcjEyMDYzNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1206342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkryanchou", "html_url": "https://github.com/jkryanchou", "followers_url": "https://api.github.com/users/jkryanchou/followers", "following_url": "https://api.github.com/users/jkryanchou/following{/other_user}", "gists_url": "https://api.github.com/users/jkryanchou/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkryanchou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkryanchou/subscriptions", "organizations_url": "https://api.github.com/users/jkryanchou/orgs", "repos_url": "https://api.github.com/users/jkryanchou/repos", "events_url": "https://api.github.com/users/jkryanchou/events{/privacy}", "received_events_url": "https://api.github.com/users/jkryanchou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226929, "node_id": "MDU6TGFiZWwyMjY5Mjk=", "url": "https://api.github.com/repos/amoffat/sh/labels/bug", "name": "bug", "color": "d7e102", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2017-06-05T03:41:26Z", "updated_at": "2020-04-26T20:05:33Z", "closed_at": "2020-04-26T20:05:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have instantiated a command from  Class `sh.Command` to wrap my own program executable. I want to mock up the command in unittest, While it seems not work correctly. I have read the documentations. Found nothing significant on mocking `sh.Command`, Is there any good suggestions on it? Here are my code snippet.\r\n \r\n`foo.py`\r\n\r\n```\r\nimport sh\r\n\r\nfoo_std_args = [\"-p\", \"80\", \"-c\", \"200\"]\r\n\r\ndef execute_foo():\r\n       foo_command = sh.Command(\"foo\").bake(*foo_std_args)\r\n       foo_command(doo=1, zoo=2)\r\n```\r\n\r\nUnitTest\r\n\r\n`test_foo.py`\r\n\r\n```\r\nimport mock\r\nimport patch\r\n\r\nimport sh\r\n\r\nfrom foo import execute_foo\r\n\r\nclass TestFooCommand(object):\r\n\r\n      @patch.object(sh, \"RunningCommand\")\r\n      def test_execute_foo_should_succeed(self, mock_running_command):\r\n             execute_foo()\r\n            `how to assert command args foo=1, zoo=2?`\r\n```\r\n\r\nIs there any good way to mock and test the `foo_command`?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/amoffat/sh/issues/386", "repository_url": "https://api.github.com/repos/amoffat/sh", "labels_url": "https://api.github.com/repos/amoffat/sh/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/amoffat/sh/issues/386/comments", "events_url": "https://api.github.com/repos/amoffat/sh/issues/386/events", "html_url": "https://github.com/amoffat/sh/issues/386", "id": 232643788, "node_id": "MDU6SXNzdWUyMzI2NDM3ODg=", "number": 386, "title": "Arguments as Array", "user": {"login": "sohamm17", "id": 3530629, "node_id": "MDQ6VXNlcjM1MzA2Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3530629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sohamm17", "html_url": "https://github.com/sohamm17", "followers_url": "https://api.github.com/users/sohamm17/followers", "following_url": "https://api.github.com/users/sohamm17/following{/other_user}", "gists_url": "https://api.github.com/users/sohamm17/gists{/gist_id}", "starred_url": "https://api.github.com/users/sohamm17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sohamm17/subscriptions", "organizations_url": "https://api.github.com/users/sohamm17/orgs", "repos_url": "https://api.github.com/users/sohamm17/repos", "events_url": "https://api.github.com/users/sohamm17/events{/privacy}", "received_events_url": "https://api.github.com/users/sohamm17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-31T17:47:44Z", "updated_at": "2017-05-31T19:10:39Z", "closed_at": "2017-05-31T19:10:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to support of providing the arguments as an array of strings?", "performed_via_github_app": null, "score": 1.0}]}